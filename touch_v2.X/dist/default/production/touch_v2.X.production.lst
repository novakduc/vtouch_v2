

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Jan 15 03:28:45 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1,inline
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1,inline
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=2
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	text125,global,reloc=2,class=CODE,delta=1
   147                           	psect	text126,global,reloc=2,class=CODE,delta=1
   148                           	psect	text127,global,reloc=2,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=2,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=2,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=2,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=2,class=CODE,delta=1
   157                           	psect	text136,global,reloc=2,class=CODE,delta=1
   158                           	psect	text137,global,reloc=2,class=CODE,delta=1
   159                           	psect	text138,global,reloc=4,class=CODE,delta=1
   160                           	psect	text139,global,reloc=2,class=CODE,delta=1
   161                           	psect	text140,global,reloc=2,class=CODE,delta=1
   162                           	psect	text141,global,reloc=2,class=CODE,delta=1
   163                           	psect	text142,global,reloc=4,class=CODE,delta=1
   164                           	psect	text143,global,reloc=2,class=CODE,delta=1
   165                           	psect	text144,global,reloc=2,class=CODE,delta=1
   166                           	psect	text145,global,reloc=2,class=CODE,delta=1
   167                           	psect	text146,global,reloc=2,class=CODE,delta=1
   168                           	psect	text147,global,reloc=2,class=CODE,delta=1
   169                           	psect	text148,global,reloc=2,class=CODE,delta=1
   170                           	psect	text149,global,reloc=4,class=CODE,delta=1
   171                           	psect	text150,global,reloc=2,class=CODE,delta=1
   172                           	psect	text151,global,reloc=2,class=CODE,delta=1
   173                           	psect	text152,global,reloc=2,class=CODE,delta=1
   174                           	psect	text153,global,reloc=2,class=CODE,delta=1
   175                           	psect	text154,global,reloc=2,class=CODE,delta=1
   176                           	psect	text155,global,reloc=2,class=CODE,delta=1
   177                           	psect	text156,global,reloc=2,class=CODE,delta=1,group=1
   178                           	psect	text157,global,reloc=4,class=CODE,delta=1
   179                           	psect	text158,global,reloc=2,class=CODE,delta=1
   180                           	psect	text159,global,reloc=2,class=CODE,delta=1
   181                           	psect	text160,global,reloc=4,class=CODE,delta=1
   182                           	psect	text161,global,reloc=4,class=CODE,delta=1
   183                           	psect	text162,global,reloc=2,class=CODE,delta=1
   184                           	psect	text163,global,reloc=2,class=CODE,delta=1
   185                           	psect	text164,global,reloc=2,class=CODE,delta=1
   186                           	psect	text165,global,reloc=4,class=CODE,delta=1
   187                           	psect	text166,global,reloc=4,class=CODE,delta=1
   188                           	psect	text167,global,reloc=2,class=CODE,delta=1
   189                           	psect	text168,global,reloc=4,class=CODE,delta=1
   190                           	psect	text169,global,reloc=2,class=CODE,delta=1
   191                           	psect	text170,global,reloc=4,class=CODE,delta=1
   192                           	psect	text171,global,reloc=2,class=CODE,delta=1
   193                           	psect	text172,global,reloc=4,class=CODE,delta=1
   194                           	psect	text173,global,reloc=2,class=CODE,delta=1
   195                           	psect	text174,global,reloc=2,class=CODE,delta=1
   196                           	psect	text175,global,reloc=4,class=CODE,delta=1
   197                           	psect	text176,global,reloc=4,class=CODE,delta=1
   198                           	psect	text177,global,reloc=4,class=CODE,delta=1
   199                           	psect	text178,global,reloc=4,class=CODE,delta=1
   200                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   201                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   202                           	psect	text179,global,reloc=4,class=CODE,delta=1
   203                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   204                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   205  0000                     
   206                           ; Version 2.10
   207                           ; Generated 31/07/2019 GMT
   208                           ; 
   209                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   210                           ; All rights reserved.
   211                           ; 
   212                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   213                           ; 
   214                           ; Redistribution and use in source and binary forms, with or without modification, are
   215                           ; permitted provided that the following conditions are met:
   216                           ; 
   217                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   218                           ;        conditions and the following disclaimer.
   219                           ; 
   220                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   221                           ;        of conditions and the following disclaimer in the documentation and/or other
   222                           ;        materials provided with the distribution.
   223                           ; 
   224                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   225                           ;        software without specific prior written permission.
   226                           ; 
   227                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   228                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   229                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   230                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   231                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   232                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   233                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   234                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   235                           ; 
   236                           ; 
   237                           ; Code-generator required, PIC18F57K42 Definitions
   238                           ; 
   239                           ; SFR Addresses
   240  0000                     
   241 ;;_main$3756	offset	0
   242 ;;_main$3752	offset	2
   243 ;;_esr_temp	offset	4
   244 ;;_i_esr	offset	8
   245 ;;_shape	offset	10
   246 ;;_inp_index	offset	11
   247 ;;_k	offset	12
   248 ;;_j	offset	13
   249 ;;_i	offset	14
   250 ;;_mode	offset	15
   251 ;;_i_ror	offset	16
   252 ;;_s	offset=-2 (param)
   253 ;;_c	offset	0
   254 ;;_shape	offset=-1 (param)
   255 ;;_reset	offset=-2 (param)
   256 ;;_data	offset=-1 (param)
   257 ;;_cmd	offset=-1 (param)
   258 ;;_cmd	offset=-1 (param)
   259 ;;_data	offset=-1 (param)
   260 ;;__this	offset=-2 (param)
   261 ;;_soc	offset	0
   262 ;;_slot	offset	4
   263 ;;_cvoltage	offset=-4 (param)
   264 ;;_h	offset=-1 (param)
   265 ;;_h	offset=-1 (param)
   266 ;;_i	offset=-1 (param)
   267 ;;_fsm	offset=-1 (param)
   268 ;;_channel	offset=-1 (param)
   269 ;;_mode	offset=-1 (param)
   270 ;;_mode	offset=-1 (param)
   271 ;;_cmd	offset=-1 (param)
   272 ;;_i	offset	0
   273 ;;_h	offset=-1 (param)
   274 ;;_flipper	offset=-1 (param)
   275 ;;_f	offset	0
   276 ;;_ap	offset	6
   277 ;;_s	offset=-3 (param)
   278 ;;_fmt	offset=-5 (param)
   279 ;;_line	offset=-1 (param)
   280 ;;_vterm	offset=-2 (param)
   281 ;;_numMilliseconds	offset=-2 (param)
   282 ;;_vterm	offset=-1 (param)
   283 ;;_row	offset	0
   284 ;;_r	offset=-1 (param)
   285 ;;_c	offset=-2 (param)
   286 ;;_strPtr	offset=-4 (param)
   287 ;;_strPtr	offset=-1 (param)
   288 ;;_delay	offset=-4 (param)
   289 ;;_strPtr	offset=-1 (param)
   290 ;;_strPtr	offset=-2 (param)
   291 ;;__this	offset=-2 (param)
   292 ;;_clearBuffer	offset=-3 (param)
   293 ;;_s	offset	0
   294 ;;_k	offset	2
   295 ;;_dest	offset=-2 (param)
   296 ;;_c	offset=-4 (param)
   297 ;;_n	offset=-6 (param)
   298 ;;_ap	offset	0
   299 ;;_fmt	offset=-3 (param)
   300 ;;_cfmt	offset	0
   301 ;;_fp	offset=-2 (param)
   302 ;;_fmt	offset=-4 (param)
   303 ;;_ap	offset=-6 (param)
   304 ;;_vfpfcnvrt$5571	offset	0
   305 ;;_vfpfcnvrt$5582	offset	2
   306 ;;_vfpfcnvrt$5570	offset	4
   307 ;;_llu	offset	6
   308 ;;_ll	offset	14
   309 ;;_f	offset	22
   310 ;;_ct	offset	26
   311 ;;_cp	offset	29
   312 ;;_c	offset	31
   313 ;;_fp	offset=-2 (param)
   314 ;;_fmt	offset=-4 (param)
   315 ;;_ap	offset=-6 (param)
   316 ;;_xtoa$5556	offset	0
   317 ;;_xtoa$5555	offset	2
   318 ;;_n	offset	4
   319 ;;_c	offset	12
   320 ;;_i	offset	14
   321 ;;_w	offset	16
   322 ;;_p	offset	18
   323 ;;_fp	offset=-2 (param)
   324 ;;_d	offset=-10 (param)
   325 ;;_x	offset=-11 (param)
   326 ;;_toupper$6362	offset	0
   327 ;;_c	offset=-2 (param)
   328 ;;_c	offset=-2 (param)
   329 ;;_c	offset=-2 (param)
   330 ;;_n	offset	0
   331 ;;_i	offset	8
   332 ;;_w	offset	10
   333 ;;_p	offset	12
   334 ;;_fp	offset=-2 (param)
   335 ;;_d	offset=-10 (param)
   336 ;;_counter	offset	0
   337 ;;_dividend	offset=-8 (param)
   338 ;;_divisor	offset=-16 (param)
   339 ;;_quotient	offset	0
   340 ;;_counter	offset	8
   341 ;;_dividend	offset=-8 (param)
   342 ;;_divisor	offset=-16 (param)
   343 ;;_r	offset	0
   344 ;;_l	offset	2
   345 ;;__l	offset=-2 (param)
   346 ;;__r	offset=-4 (param)
   347 ;;_n	offset=-6 (param)
   348 ;;_nuls	offset	0
   349 ;;_l	offset	7
   350 ;;_p	offset	9
   351 ;;_cp	offset	11
   352 ;;_w	offset	13
   353 ;;_i	offset	15
   354 ;;_fp	offset=-2 (param)
   355 ;;_s	offset=-4 (param)
   356 ;;_efgtoa$5528	offset	0
   357 ;;_efgtoa$5527	offset	2
   358 ;;_efgtoa$5526	offset	4
   359 ;;_efgtoa$5522	offset	6
   360 ;;_efgtoa$5518	offset	8
   361 ;;_efgtoa$5517	offset	10
   362 ;;_u	offset	12
   363 ;;_g	offset	16
   364 ;;_l	offset	20
   365 ;;_h	offset	24
   366 ;;_ou	offset	28
   367 ;;_n	offset	32
   368 ;;_e	offset	34
   369 ;;_i	offset	36
   370 ;;_w	offset	38
   371 ;;_p	offset	40
   372 ;;_sign	offset	42
   373 ;;_d	offset	44
   374 ;;_ne	offset	46
   375 ;;_m	offset	48
   376 ;;_pp	offset	50
   377 ;;_t	offset	52
   378 ;;_mode	offset	54
   379 ;;_nmode	offset	55
   380 ;;_fp	offset=-2 (param)
   381 ;;_f	offset=-6 (param)
   382 ;;_c	offset=-7 (param)
   383 ;;_tolower$6347	offset	0
   384 ;;_c	offset=-2 (param)
   385 ;;_c	offset=-2 (param)
   386 ;;_d	offset	0
   387 ;;_s	offset	2
   388 ;;_dest	offset=-2 (param)
   389 ;;_src	offset=-4 (param)
   390 ;;_u	offset	0
   391 ;;_m	offset	4
   392 ;;_e	offset	8
   393 ;;_x	offset=-4 (param)
   394 ;;_u	offset	0
   395 ;;_e	offset	4
   396 ;;_x	offset=-4 (param)
   397 ;;_exp1	offset	0
   398 ;;_sign1	offset	1
   399 ;;_f1	offset=-4 (param)
   400 ;;_f1	offset=-4 (param)
   401 ;;_ff1	offset=-4 (param)
   402 ;;_ff2	offset=-8 (param)
   403 ;;_sign	offset	0
   404 ;;_counter	offset	1
   405 ;;_dividend	offset=-2 (param)
   406 ;;_divisor	offset=-4 (param)
   407 ;;_quotient	offset	0
   408 ;;_sign	offset	2
   409 ;;_counter	offset	3
   410 ;;_dividend	offset=-2 (param)
   411 ;;_divisor	offset=-4 (param)
   412 ;;_dtoa$5494	offset	0
   413 ;;_n	offset	2
   414 ;;_i	offset	10
   415 ;;_s	offset	12
   416 ;;_w	offset	14
   417 ;;_p	offset	16
   418 ;;_fp	offset=-2 (param)
   419 ;;_d	offset=-10 (param)
   420 ;;_a	offset=-2 (param)
   421 ;;_sign	offset	0
   422 ;;_counter	offset	1
   423 ;;_dividend	offset=-8 (param)
   424 ;;_divisor	offset=-16 (param)
   425 ;;_quotient	offset	0
   426 ;;_sign	offset	8
   427 ;;_counter	offset	9
   428 ;;_dividend	offset=-8 (param)
   429 ;;_divisor	offset=-16 (param)
   430 ;;_w	offset	0
   431 ;;_fp	offset=-2 (param)
   432 ;;_c	offset=-3 (param)
   433 ;;_w	offset	0
   434 ;;_i	offset	2
   435 ;;_fp	offset=-2 (param)
   436 ;;_buf	offset=-4 (param)
   437 ;;_p	offset=-6 (param)
   438 ;;_a	offset	0
   439 ;;_s	offset=-2 (param)
   440 ;;_i	offset	0
   441 ;;_c	offset	2
   442 ;;_s	offset=-2 (param)
   443 ;;_fp	offset=-4 (param)
   444 ;;_c	offset=-2 (param)
   445 ;;_fp	offset=-4 (param)
   446 ;;_c	offset=-1 (param)
   447 ;;__this	offset=-2 (param)
   448 ;;_c	offset=-3 (param)
   449 ;;_atoi$6078	offset	0
   450 ;;_atoi$6076	offset	2
   451 ;;_atoi$6077	offset	4
   452 ;;_n	offset	5
   453 ;;_neg	offset	7
   454 ;;_s	offset=-2 (param)
   455 ;;_isspace$6127	offset	0
   456 ;;_c	offset=-2 (param)
   457 ;;_c	offset=-2 (param)
   458 ;;_vterm	offset=-1 (param)
   459 ;;_new_response_info	offset=-1 (param)
   460 ;;_new_response_info	offset=-1 (param)
   461 ;;_level	offset=-2 (param)
   462 ;;_dutyValue	offset=-2 (param)
   463 ;;_timer	offset=-1 (param)
   464 ;;_timer	offset=-1 (param)
   465 ;;_count	offset=-3 (param)
   466 ;;_h	offset=-1 (param)
   467 ;;_u	offset	0
   468 ;;_x	offset=-4 (param)
   469 ;;_chan	offset=-1 (param)
   470 ;;_to_what	offset=-2 (param)
   471 ;;_u	offset	0
   472 ;;_s	offset=-2 (param)
   473 ;;_index	offset=-1 (param)
   474 ;;_arg	offset	0
   475 ;;_exp	offset	4
   476 ;;_sign	offset=-1 (param)
   477 ;;_val	offset=-5 (param)
   478 ;;_grs	offset	0
   479 ;;_rem	offset	4
   480 ;;_new_exp	offset	8
   481 ;;_aexp	offset	10
   482 ;;_bexp	offset	11
   483 ;;_sign	offset	12
   484 ;;_b	offset=-4 (param)
   485 ;;_a	offset=-8 (param)
   486 ;;_ff1	offset=-4 (param)
   487 ;;_ff2	offset=-8 (param)
   488 ;;_lp_speed	offset	0
   489 ;;_new	offset=-4 (param)
   490 ;;_bn	offset=-5 (param)
   491 ;;_slow	offset=-6 (param)
   492 ;;_b	offset=-4 (param)
   493 ;;_a	offset=-8 (param)
   494 ;;_grs	offset	0
   495 ;;_bexp	offset	1
   496 ;;_aexp	offset	2
   497 ;;_signs	offset	3
   498 ;;_b	offset=-4 (param)
   499 ;;_a	offset=-8 (param)
   500 ;;_prod	offset	0
   501 ;;_grs	offset	4
   502 ;;_temp	offset	8
   503 ;;_bexp	offset	10
   504 ;;_aexp	offset	11
   505 ;;_sign	offset	12
   506 ;;_b	offset=-4 (param)
   507 ;;_a	offset=-8 (param)
   508 ;;_InterruptHandler	offset=-3 (param)
   509 ;;_InterruptHandler	offset=-3 (param)
   510 ;;_InterruptHandler	offset=-3 (param)
   511 ;;_InterruptHandler	offset=-3 (param)
   512 ;;_InterruptHandler	offset=-3 (param)
   513 ;;_InterruptHandler	offset=-3 (param)
   514 ;;_state	offset	0
   515 ;;_InterruptHandler	offset=-3 (param)
   516 ;;_InterruptHandler	offset=-3 (param)
   517 ;;_InterruptHandler	offset=-3 (param)
   518 ;;_InterruptHandler	offset=-3 (param)
   519 ;;_i	offset	0
   520 ;;_sw_value	offset	1
   521 ;;_timerVal	offset=-2 (param)
   522 ;;_light	offset	0
   523 ;;_mode	offset=-1 (param)
   524 ;;_chan	offset=-1 (param)
   525 ;;_to_what	offset=-2 (param)
   526 ;;_u	offset	0
   527 ;;_s	offset=-2 (param)
   528 ;;_index	offset=-1 (param)
   529 ;;_arg	offset	0
   530 ;;_exp	offset	4
   531 ;;_sign	offset=-1 (param)
   532 ;;_val	offset=-5 (param)
   533 ;;_b	offset=-4 (param)
   534 ;;_a	offset=-8 (param)
   535 ;;_grs	offset	0
   536 ;;_bexp	offset	1
   537 ;;_aexp	offset	2
   538 ;;_signs	offset	3
   539 ;;_b	offset=-4 (param)
   540 ;;_a	offset=-8 (param)
   541 ;;_prod	offset	0
   542 ;;_grs	offset	4
   543 ;;_temp	offset	8
   544 ;;_bexp	offset	10
   545 ;;_aexp	offset	11
   546 ;;_sign	offset	12
   547 ;;_b	offset=-4 (param)
   548 ;;_a	offset=-8 (param)
   549 ;;_grs	offset	0
   550 ;;_rem	offset	4
   551 ;;_new_exp	offset	8
   552 ;;_aexp	offset	10
   553 ;;_bexp	offset	11
   554 ;;_sign	offset	12
   555 ;;_b	offset=-4 (param)
   556 ;;_a	offset=-8 (param)
   557 ;;_ff1	offset=-4 (param)
   558 ;;_ff2	offset=-8 (param)
   559 ;;_timerVal	offset=-2 (param)
   560 ;;_adj	offset	0
   561 ;;_log_ptr	offset	4
   562 ;;_f	offset	0
   563 ;;_ap	offset	6
   564 ;;_s	offset=-3 (param)
   565 ;;_fmt	offset=-5 (param)
   566 ;;_cfmt	offset	0
   567 ;;_fp	offset=-2 (param)
   568 ;;_fmt	offset=-4 (param)
   569 ;;_ap	offset=-6 (param)
   570 ;;_vfpfcnvrt$5571	offset	0
   571 ;;_vfpfcnvrt$5582	offset	2
   572 ;;_vfpfcnvrt$5570	offset	4
   573 ;;_llu	offset	6
   574 ;;_ll	offset	14
   575 ;;_f	offset	22
   576 ;;_ct	offset	26
   577 ;;_cp	offset	29
   578 ;;_c	offset	31
   579 ;;_fp	offset=-2 (param)
   580 ;;_fmt	offset=-4 (param)
   581 ;;_ap	offset=-6 (param)
   582 ;;_xtoa$5556	offset	0
   583 ;;_xtoa$5555	offset	2
   584 ;;_n	offset	4
   585 ;;_c	offset	12
   586 ;;_i	offset	14
   587 ;;_w	offset	16
   588 ;;_p	offset	18
   589 ;;_fp	offset=-2 (param)
   590 ;;_d	offset=-10 (param)
   591 ;;_x	offset=-11 (param)
   592 ;;_toupper$6362	offset	0
   593 ;;_c	offset=-2 (param)
   594 ;;_c	offset=-2 (param)
   595 ;;_c	offset=-2 (param)
   596 ;;_n	offset	0
   597 ;;_i	offset	8
   598 ;;_w	offset	10
   599 ;;_p	offset	12
   600 ;;_fp	offset=-2 (param)
   601 ;;_d	offset=-10 (param)
   602 ;;_counter	offset	0
   603 ;;_dividend	offset=-8 (param)
   604 ;;_divisor	offset=-16 (param)
   605 ;;_quotient	offset	0
   606 ;;_counter	offset	8
   607 ;;_dividend	offset=-8 (param)
   608 ;;_divisor	offset=-16 (param)
   609 ;;_r	offset	0
   610 ;;_l	offset	2
   611 ;;__l	offset=-2 (param)
   612 ;;__r	offset=-4 (param)
   613 ;;_n	offset=-6 (param)
   614 ;;_nuls	offset	0
   615 ;;_l	offset	7
   616 ;;_p	offset	9
   617 ;;_cp	offset	11
   618 ;;_w	offset	13
   619 ;;_i	offset	15
   620 ;;_fp	offset=-2 (param)
   621 ;;_s	offset=-4 (param)
   622 ;;_efgtoa$5528	offset	0
   623 ;;_efgtoa$5527	offset	2
   624 ;;_efgtoa$5526	offset	4
   625 ;;_efgtoa$5522	offset	6
   626 ;;_efgtoa$5518	offset	8
   627 ;;_efgtoa$5517	offset	10
   628 ;;_u	offset	12
   629 ;;_g	offset	16
   630 ;;_l	offset	20
   631 ;;_h	offset	24
   632 ;;_ou	offset	28
   633 ;;_n	offset	32
   634 ;;_e	offset	34
   635 ;;_i	offset	36
   636 ;;_w	offset	38
   637 ;;_p	offset	40
   638 ;;_sign	offset	42
   639 ;;_d	offset	44
   640 ;;_ne	offset	46
   641 ;;_m	offset	48
   642 ;;_pp	offset	50
   643 ;;_t	offset	52
   644 ;;_mode	offset	54
   645 ;;_nmode	offset	55
   646 ;;_fp	offset=-2 (param)
   647 ;;_f	offset=-6 (param)
   648 ;;_c	offset=-7 (param)
   649 ;;_tolower$6347	offset	0
   650 ;;_c	offset=-2 (param)
   651 ;;_c	offset=-2 (param)
   652 ;;_d	offset	0
   653 ;;_s	offset	2
   654 ;;_dest	offset=-2 (param)
   655 ;;_src	offset=-4 (param)
   656 ;;_u	offset	0
   657 ;;_m	offset	4
   658 ;;_e	offset	8
   659 ;;_x	offset=-4 (param)
   660 ;;_u	offset	0
   661 ;;_e	offset	4
   662 ;;_x	offset=-4 (param)
   663 ;;_exp1	offset	0
   664 ;;_sign1	offset	1
   665 ;;_f1	offset=-4 (param)
   666 ;;_f1	offset=-4 (param)
   667 ;;_ff1	offset=-4 (param)
   668 ;;_ff2	offset=-8 (param)
   669 ;;_sign	offset	0
   670 ;;_counter	offset	1
   671 ;;_dividend	offset=-2 (param)
   672 ;;_divisor	offset=-4 (param)
   673 ;;_quotient	offset	0
   674 ;;_sign	offset	2
   675 ;;_counter	offset	3
   676 ;;_dividend	offset=-2 (param)
   677 ;;_divisor	offset=-4 (param)
   678 ;;_dtoa$5494	offset	0
   679 ;;_n	offset	2
   680 ;;_i	offset	10
   681 ;;_s	offset	12
   682 ;;_w	offset	14
   683 ;;_p	offset	16
   684 ;;_fp	offset=-2 (param)
   685 ;;_d	offset=-10 (param)
   686 ;;_a	offset=-2 (param)
   687 ;;_sign	offset	0
   688 ;;_counter	offset	1
   689 ;;_dividend	offset=-8 (param)
   690 ;;_divisor	offset=-16 (param)
   691 ;;_quotient	offset	0
   692 ;;_sign	offset	8
   693 ;;_counter	offset	9
   694 ;;_dividend	offset=-8 (param)
   695 ;;_divisor	offset=-16 (param)
   696 ;;_w	offset	0
   697 ;;_fp	offset=-2 (param)
   698 ;;_c	offset=-3 (param)
   699 ;;_w	offset	0
   700 ;;_i	offset	2
   701 ;;_fp	offset=-2 (param)
   702 ;;_buf	offset=-4 (param)
   703 ;;_p	offset=-6 (param)
   704 ;;_a	offset	0
   705 ;;_s	offset=-2 (param)
   706 ;;_i	offset	0
   707 ;;_c	offset	2
   708 ;;_s	offset=-2 (param)
   709 ;;_fp	offset=-4 (param)
   710 ;;_c	offset=-2 (param)
   711 ;;_fp	offset=-4 (param)
   712 ;;_c	offset=-1 (param)
   713 ;;__this	offset=-2 (param)
   714 ;;_c	offset=-3 (param)
   715 ;;_atoi$6078	offset	0
   716 ;;_atoi$6076	offset	2
   717 ;;_atoi$6077	offset	4
   718 ;;_n	offset	5
   719 ;;_neg	offset	7
   720 ;;_s	offset=-2 (param)
   721 ;;_isspace$6127	offset	0
   722 ;;_c	offset=-2 (param)
   723 ;;_c	offset=-2 (param)
   724 ;;_dsize	offset=-2 (param)
   725 ;;_u	offset	0
   726 ;;_x	offset=-4 (param)
   727 ;;_f1p	offset=-2 (param)
   728 ;;_f2	offset=-6 (param)
   729 ;;_timer	offset=-1 (param)
   730 ;;_count	offset=-3 (param)
   731 ;;_channel	offset=-1 (param)
   732 ;;_i	offset	0
   733                           
   734                           	psect	idataBIGRAM
   735  016B28                     __pidataBIGRAM:
   736                           	opt callstack 0
   737                           
   738                           ;initializer for _port_data
   739  016B28  FF                 	db	255
   740  016B29  00                 	db	0
   741  016B2A  FF                 	db	255
   742  016B2B  00                 	db	0
   743  016B2C  FF                 	db	255
   744  016B2D  00                 	db	0
   745  016B2E  FF                 	db	255
   746  016B2F  00                 	db	0
   747  016B30  FF                 	db	255
   748  016B31  00                 	db	0
   749  016B32  FF                 	db	255
   750  016B33  00                 	db	0
   751  016B34  FF                 	db	255
   752  016B35  00                 	db	0
   753  016B36  FF                 	db	255
   754  016B37  00                 	db	0
   755  016B38  00                 	db	0
   756  016B39  00                 	db	0
   757  016B3A  00                 	db	0
   758  016B3B  00                 	db	0
   759  016B3C  00                 	db	0
   760  016B3D  00                 	db	0
   761  016B3E  00                 	db	0
   762  016B3F  00                 	db	0
   763  016B40  00                 	db	0
   764  016B41  00                 	db	0
   765  016B42  00                 	db	0
   766  016B43  00                 	db	0
   767  016B44  00                 	db	0
   768  016B45  00                 	db	0
   769  016B46  00                 	db	0
   770  016B47  00                 	db	0
   771  016B48  00                 	db	0
   772  016B49  00                 	db	0
   773  016B4A  00                 	db	0
   774  016B4B  00                 	db	0
   775  016B4C  00                 	db	0
   776  016B4D  00                 	db	0
   777  016B4E  00                 	db	0
   778  016B4F  00                 	db	0
   779  016B50  00                 	db	0
   780  016B51  00                 	db	0
   781  016B52  00                 	db	0
   782  016B53  00                 	db	0
   783  016B54  00                 	db	0
   784  016B55  00                 	db	0
   785  016B56  00                 	db	0
   786  016B57  00                 	db	0
   787  016B58  00                 	db	0
   788  016B59  00                 	db	0
   789  016B5A  00                 	db	0
   790  016B5B  00                 	db	0
   791  016B5C  00                 	db	0
   792  016B5D  00                 	db	0
   793  016B5E  00                 	db	0
   794  016B5F  00                 	db	0
   795  016B60  00                 	db	0
   796  016B61  00                 	db	0
   797  016B62  00                 	db	0
   798  016B63  00                 	db	0
   799  016B64  00                 	db	0
   800  016B65  00                 	db	0
   801  016B66  00                 	db	0
   802  016B67  00                 	db	0
   803  016B68  00                 	db	0
   804  016B69  00                 	db	0
   805  016B6A  00                 	db	0
   806  016B6B  00                 	db	0
   807  016B6C  00                 	db	0
   808  016B6D  00                 	db	0
   809  016B6E  00                 	db	0
   810  016B6F  00                 	db	0
   811  016B70  00                 	db	0
   812  016B71  00                 	db	0
   813  016B72  00                 	db	0
   814  016B73  00                 	db	0
   815  016B74  00                 	db	0
   816  016B75  00                 	db	0
   817  016B76  00                 	db	0
   818  016B77  00                 	db	0
   819  016B78  00                 	db	0
   820  016B79  00                 	db	0
   821  016B7A  00                 	db	0
   822  016B7B  00                 	db	0
   823  016B7C  00                 	db	0
   824  016B7D  00                 	db	0
   825  016B7E  00                 	db	0
   826  016B7F  00                 	db	0
   827  016B80  00                 	db	0
   828  016B81  00                 	db	0
   829  016B82  00                 	db	0
   830  016B83  00                 	db	0
   831  016B84  00                 	db	0
   832  016B85  00                 	db	0
   833  016B86  00                 	db	0
   834  016B87  00                 	db	0
   835  016B88  00                 	db	0
   836  016B89  00                 	db	0
   837  016B8A  00                 	db	0
   838  016B8B  00                 	db	0
   839  016B8C  00                 	db	0
   840  016B8D  00                 	db	0
   841  016B8E  00                 	db	0
   842  016B8F  00                 	db	0
   843  016B90  00                 	db	0
   844  016B91  00                 	db	0
   845  016B92  00                 	db	0
   846  016B93  00                 	db	0
   847  016B94  00                 	db	0
   848  016B95  00                 	db	0
   849  016B96  00                 	db	0
   850  016B97  00                 	db	0
   851  016B98  00                 	db	0
   852  016B99  00                 	db	0
   853  016B9A  00                 	db	0
   854  016B9B  00                 	db	0
   855  016B9C  00                 	db	0
   856  016B9D  00                 	db	0
   857  016B9E  00                 	db	0
   858  016B9F  00                 	db	0
   859  016BA0  00                 	db	0
   860  016BA1  00                 	db	0
   861  016BA2  00                 	db	0
   862  016BA3  00                 	db	0
   863  016BA4  00                 	db	0
   864  016BA5  00                 	db	0
   865  016BA6  00                 	db	0
   866  016BA7  00                 	db	0
   867  016BA8  00                 	db	0
   868  016BA9  00                 	db	0
   869  016BAA  00                 	db	0
   870  016BAB  00                 	db	0
   871  016BAC  00                 	db	0
   872  016BAD  00                 	db	0
   873  016BAE  00                 	db	0
   874  016BAF  00                 	db	0
   875  016BB0  00                 	db	0
   876  016BB1  00                 	db	0
   877  016BB2  00                 	db	0
   878  016BB3  00                 	db	0
   879  016BB4  00                 	db	0
   880  016BB5  00                 	db	0
   881  016BB6  00                 	db	0
   882  016BB7  00                 	db	0
   883  016BB8  00                 	db	0
   884  016BB9  00                 	db	0
   885  016BBA  00                 	db	0
   886  016BBB  00                 	db	0
   887  016BBC  00                 	db	0
   888  016BBD  00                 	db	0
   889  016BBE  00                 	db	0
   890  016BBF  00                 	db	0
   891  016BC0  00                 	db	0
   892  016BC1  00                 	db	0
   893  016BC2  00                 	db	0
   894  016BC3  00                 	db	0
   895  016BC4  00                 	db	0
   896  016BC5  00                 	db	0
   897  016BC6  00                 	db	0
   898  016BC7  00                 	db	0
   899  016BC8  00                 	db	0
   900  016BC9  00                 	db	0
   901  016BCA  00                 	db	0
   902  016BCB  00                 	db	0
   903  016BCC  00                 	db	0
   904  016BCD  00                 	db	0
   905  016BCE  00                 	db	0
   906  016BCF  00                 	db	0
   907  016BD0  00                 	db	0
   908  016BD1  00                 	db	0
   909  016BD2  00                 	db	0
   910  016BD3  00                 	db	0
   911  016BD4  00                 	db	0
   912  016BD5  00                 	db	0
   913  016BD6  00                 	db	0
   914  016BD7  00                 	db	0
   915  016BD8  00                 	db	0
   916  016BD9  00                 	db	0
   917  016BDA  00                 	db	0
   918  016BDB  00                 	db	0
   919  016BDC  00                 	db	0
   920  016BDD  00                 	db	0
   921  016BDE  00                 	db	0
   922  016BDF  00                 	db	0
   923  016BE0  00                 	db	0
   924  016BE1  00                 	db	0
   925  016BE2  00                 	db	0
   926  016BE3  00                 	db	0
   927  016BE4  00                 	db	0
   928  016BE5  00                 	db	0
   929  016BE6  00                 	db	0
   930  016BE7  00                 	db	0
   931  016BE8  00                 	db	0
   932  016BE9  00                 	db	0
   933  016BEA  00                 	db	0
   934  016BEB  00                 	db	0
   935  016BEC  00                 	db	0
   936  016BED  00                 	db	0
   937  016BEE  00                 	db	0
   938  016BEF  00                 	db	0
   939  016BF0  00                 	db	0
   940  016BF1  00                 	db	0
   941  016BF2  00                 	db	0
   942  016BF3  00                 	db	0
   943  016BF4  00                 	db	0
   944  016BF5  00                 	db	0
   945  016BF6  00                 	db	0
   946  016BF7  00                 	db	0
   947  016BF8  00                 	db	0
   948  016BF9  00                 	db	0
   949  016BFA  00                 	db	0
   950  016BFB  00                 	db	0
   951  016BFC  00                 	db	0
   952  016BFD  00                 	db	0
   953  016BFE  00                 	db	0
   954  016BFF  00                 	db	0
   955  016C00  00                 	db	0
   956  016C01  00                 	db	0
   957  016C02  00                 	db	0
   958  016C03  00                 	db	0
   959  016C04  00                 	db	0
   960  016C05  00                 	db	0
   961  016C06  00                 	db	0
   962  016C07  00                 	db	0
   963  016C08  00                 	db	0
   964  016C09  00                 	db	0
   965  016C0A  00                 	db	0
   966  016C0B  00                 	db	0
   967  016C0C  00                 	db	0
   968  016C0D  00                 	db	0
   969  016C0E  00                 	db	0
   970  016C0F  00                 	db	0
   971  016C10  00                 	db	0
   972  016C11  00                 	db	0
   973  016C12  00                 	db	0
   974  016C13  00                 	db	0
   975  016C14  00                 	db	0
   976  016C15  00                 	db	0
   977  016C16  00                 	db	0
   978  016C17  00                 	db	0
   979  016C18  00                 	db	0
   980  016C19  00                 	db	0
   981  016C1A  00                 	db	0
   982  016C1B  00                 	db	0
   983  016C1C  00                 	db	0
   984  016C1D  00                 	db	0
   985  016C1E  00                 	db	0
   986  016C1F  00                 	db	0
   987  016C20  00                 	db	0
   988  016C21  00                 	db	0
   989  016C22  00                 	db	0
   990  016C23  00                 	db	0
   991  016C24  00                 	db	0
   992  016C25  00                 	db	0
   993  016C26  00                 	db	0
   994  016C27  00                 	db	0
   995  016C28  00                 	db	0
   996  016C29  00                 	db	0
   997  016C2A  00                 	db	0
   998  016C2B  00                 	db	0
   999  016C2C  00                 	db	0
  1000  016C2D  00                 	db	0
  1001  016C2E  00                 	db	0
  1002  016C2F  00                 	db	0
  1003  016C30  00                 	db	0
  1004  016C31  00                 	db	0
  1005  016C32  00                 	db	0
  1006  016C33  00                 	db	0
  1007  016C34  00                 	db	0
  1008  016C35  00                 	db	0
  1009  016C36  00                 	db	0
  1010  016C37  00                 	db	0
  1011  016C38  00                 	db	0
  1012  016C39  00                 	db	0
  1013  016C3A  00                 	db	0
  1014  016C3B  00                 	db	0
  1015  016C3C  00                 	db	0
  1016  016C3D  00                 	db	0
  1017  016C3E  00                 	db	0
  1018  016C3F  00                 	db	0
  1019  016C40  00                 	db	0
  1020  016C41  00                 	db	0
  1021  016C42  00                 	db	0
  1022  016C43  00                 	db	0
  1023  016C44  00                 	db	0
  1024  016C45  00                 	db	0
  1025  016C46  00                 	db	0
  1026  016C47  00                 	db	0
  1027  016C48  00                 	db	0
  1028  016C49  00                 	db	0
  1029  016C4A  00                 	db	0
  1030  016C4B  00                 	db	0
  1031  016C4C  00                 	db	0
  1032  016C4D  00                 	db	0
  1033  016C4E  00                 	db	0
  1034  016C4F  00                 	db	0
  1035  016C50  00                 	db	0
  1036  016C51  00                 	db	0
  1037  016C52  00                 	db	0
  1038  016C53  00                 	db	0
  1039  016C54  00                 	db	0
  1040  016C55  00                 	db	0
  1041  016C56  00                 	db	0
  1042  016C57  00                 	db	0
  1043  016C58  00                 	db	0
  1044  016C59  00                 	db	0
  1045  016C5A  00                 	db	0
  1046  016C5B  00                 	db	0
  1047  016C5C  00                 	db	0
  1048  016C5D  00                 	db	0
  1049  016C5E  00                 	db	0
  1050  016C5F  00                 	db	0
  1051  016C60  00                 	db	0
  1052  016C61  00                 	db	0
  1053  016C62  00                 	db	0
  1054  016C63  00                 	db	0
  1055  016C64  00                 	db	0
  1056  016C65  00                 	db	0
  1057  016C66  00                 	db	0
  1058  016C67  00                 	db	0
  1059  016C68  00                 	db	0
  1060  016C69  00                 	db	0
  1061  016C6A  00                 	db	0
  1062  016C6B  00                 	db	0
  1063  016C6C  00                 	db	0
  1064  016C6D  00                 	db	0
  1065  016C6E  00                 	db	0
  1066  016C6F  00                 	db	0
  1067  016C70  00                 	db	0
  1068  016C71  00                 	db	0
  1069  016C72  00                 	db	0
  1070  016C73  00                 	db	0
  1071  016C74  00                 	db	0
  1072  016C75  00                 	db	0
  1073  016C76  00                 	db	0
  1074  016C77  00                 	db	0
  1075  016C78  00                 	db	0
  1076  016C79  00                 	db	0
  1077  016C7A  00                 	db	0
  1078  016C7B  00                 	db	0
  1079  016C7C  00                 	db	0
  1080  016C7D  00                 	db	0
  1081  016C7E  00                 	db	0
  1082  016C7F  00                 	db	0
  1083  016C80  00                 	db	0
  1084  016C81  00                 	db	0
  1085  016C82  00                 	db	0
  1086  016C83  00                 	db	0
  1087  016C84  00                 	db	0
  1088  016C85  00                 	db	0
  1089  016C86  00                 	db	0
  1090  016C87  00                 	db	0
  1091  016C88  00                 	db	0
  1092  016C89  00                 	db	0
  1093  016C8A  00                 	db	0
  1094  016C8B  00                 	db	0
  1095  016C8C  00                 	db	0
  1096  016C8D  00                 	db	0
  1097  016C8E  00                 	db	0
  1098  016C8F  00                 	db	0
  1099  016C90  00                 	db	0
  1100  016C91  00                 	db	0
  1101  016C92  00                 	db	0
  1102  016C93  00                 	db	0
  1103  016C94  00                 	db	0
  1104  016C95  00                 	db	0
  1105  016C96  00                 	db	0
  1106  016C97  00                 	db	0
  1107  016C98  00                 	db	0
  1108  016C99  00                 	db	0
  1109  016C9A  00                 	db	0
  1110  016C9B  00                 	db	0
  1111  016C9C  00                 	db	0
  1112  016C9D  00                 	db	0
  1113  016C9E  00                 	db	0
  1114  016C9F  00                 	db	0
  1115  016CA0  00                 	db	0
  1116  016CA1  00                 	db	0
  1117  016CA2  00                 	db	0
  1118  016CA3  00                 	db	0
  1119  016CA4  00                 	db	0
  1120  016CA5  00                 	db	0
  1121  016CA6  00                 	db	0
  1122  016CA7  00                 	db	0
  1123  016CA8  00                 	db	0
  1124  016CA9  00                 	db	0
  1125  016CAA  00                 	db	0
  1126  016CAB  00                 	db	0
  1127  016CAC  00                 	db	0
  1128  016CAD  00                 	db	0
  1129  016CAE  00                 	db	0
  1130  016CAF  00                 	db	0
  1131  016CB0  00                 	db	0
  1132  016CB1  00                 	db	0
  1133  016CB2  00                 	db	0
  1134  016CB3  00                 	db	0
  1135  016CB4  00                 	db	0
  1136  016CB5  00                 	db	0
  1137  016CB6  00                 	db	0
  1138  016CB7  00                 	db	0
  1139  016CB8  00                 	db	0
  1140  016CB9  00                 	db	0
  1141  016CBA  00                 	db	0
  1142  016CBB  00                 	db	0
  1143  016CBC  00                 	db	0
  1144  016CBD  00                 	db	0
  1145  016CBE  00                 	db	0
  1146  016CBF  00                 	db	0
  1147  016CC0  00                 	db	0
  1148  016CC1  00                 	db	0
  1149  016CC2  00                 	db	0
  1150  016CC3  00                 	db	0
  1151  016CC4  00                 	db	0
  1152  016CC5  00                 	db	0
  1153  016CC6  00                 	db	0
  1154  016CC7  00                 	db	0
  1155  016CC8  00                 	db	0
  1156  016CC9  00                 	db	0
  1157  016CCA  00                 	db	0
  1158  016CCB  00                 	db	0
  1159  016CCC  00                 	db	0
  1160  016CCD  00                 	db	0
  1161  016CCE  00                 	db	0
  1162  016CCF  00                 	db	0
  1163  016CD0  00                 	db	0
  1164  016CD1  00                 	db	0
  1165  016CD2  00                 	db	0
  1166  016CD3  00                 	db	0
  1167  016CD4  00                 	db	0
  1168  016CD5  00                 	db	0
  1169  016CD6  00                 	db	0
  1170  016CD7  00                 	db	0
  1171  016CD8  00                 	db	0
  1172  016CD9  00                 	db	0
  1173  016CDA  00                 	db	0
  1174  016CDB  00                 	db	0
  1175  016CDC  00                 	db	0
  1176  016CDD  00                 	db	0
  1177  016CDE  00                 	db	0
  1178  016CDF  00                 	db	0
  1179  016CE0  00                 	db	0
  1180  016CE1  00                 	db	0
  1181  016CE2  00                 	db	0
  1182  016CE3  00                 	db	0
  1183  016CE4  00                 	db	0
  1184  016CE5  00                 	db	0
  1185  016CE6  00                 	db	0
  1186  016CE7  00                 	db	0
  1187  016CE8  00                 	db	0
  1188  016CE9  00                 	db	0
  1189  016CEA  00                 	db	0
  1190  016CEB  00                 	db	0
  1191  016CEC  00                 	db	0
  1192  016CED  00                 	db	0
  1193  016CEE  00                 	db	0
  1194  016CEF  00                 	db	0
  1195  016CF0  00                 	db	0
  1196  016CF1  00                 	db	0
  1197  016CF2  00                 	db	0
  1198  016CF3  00                 	db	0
  1199  016CF4  00                 	db	0
  1200  016CF5  00                 	db	0
  1201  016CF6  00                 	db	0
  1202  016CF7  00                 	db	0
  1203  016CF8  00                 	db	0
  1204  016CF9  00                 	db	0
  1205  016CFA  00                 	db	0
  1206  016CFB  00                 	db	0
  1207  016CFC  00                 	db	0
  1208  016CFD  00                 	db	0
  1209  016CFE  00                 	db	0
  1210  016CFF  00                 	db	0
  1211  016D00  00                 	db	0
  1212  016D01  00                 	db	0
  1213  016D02  00                 	db	0
  1214  016D03  00                 	db	0
  1215  016D04  00                 	db	0
  1216  016D05  00                 	db	0
  1217  016D06  00                 	db	0
  1218  016D07  00                 	db	0
  1219  016D08  00                 	db	0
  1220  016D09  00                 	db	0
  1221  016D0A  00                 	db	0
  1222  016D0B  00                 	db	0
  1223  016D0C  00                 	db	0
  1224  016D0D  00                 	db	0
  1225  016D0E  00                 	db	0
  1226  016D0F  00                 	db	0
  1227  016D10  00                 	db	0
  1228  016D11  00                 	db	0
  1229  016D12  00                 	db	0
  1230  016D13  00                 	db	0
  1231  016D14  00                 	db	0
  1232  016D15  00                 	db	0
  1233  016D16  00                 	db	0
  1234  016D17  00                 	db	0
  1235  016D18  00                 	db	0
  1236  016D19  00                 	db	0
  1237  016D1A  00                 	db	0
  1238  016D1B  00                 	db	0
  1239  016D1C  00                 	db	0
  1240  016D1D  00                 	db	0
  1241  016D1E  00                 	db	0
  1242  016D1F  00                 	db	0
  1243  016D20  00                 	db	0
  1244  016D21  00                 	db	0
  1245  016D22  00                 	db	0
  1246  016D23  00                 	db	0
  1247  016D24  00                 	db	0
  1248  016D25  00                 	db	0
  1249  016D26  00                 	db	0
  1250  016D27  00                 	db	0
  1251                           
  1252                           ;initializer for _C
  1253  016D28  0000               	dw	0
  1254  016D2A  0000               	dw	0
  1255  016D2C  0000               	dw	0
  1256  016D2E  0000               	dw	0
  1257  016D30  0000               	dw	0
  1258  016D32  0000               	dw	0
  1259  016D34  0000               	dw	0
  1260  016D36  0000               	dw	0
  1261  016D38  0000               	dw	0
  1262  016D3A  0000               	dw	0
  1263  016D3C  0000               	dw	0
  1264  016D3E  0000               	dw	0
  1265  016D40  0000               	dw	0
  1266  016D42  0000               	dw	0
  1267  016D44  0000               	dw	0
  1268  016D46  0000               	dw	0
  1269  016D48  0000               	dw	0
  1270  016D4A  0000               	dw	0
  1271  016D4C  0000               	dw	0
  1272  016D4E  0000               	dw	0
  1273  016D50  0000               	dw	0
  1274  016D52  0000               	dw	0
  1275  016D54  0000               	dw	0
  1276  016D56  0000               	dw	0
  1277  016D58  0000               	dw	0
  1278  016D5A  0000               	dw	0
  1279  016D5C  0000               	dw	0
  1280  016D5E  0000               	dw	0
  1281  016D60  0000               	dw	0
  1282  016D62  0000               	dw	0
  1283  016D64  0000               	dw	0
  1284  016D66  0000               	dw	0
  1285  016D68  0000               	dw	0
  1286  016D6A  0000               	dw	0
  1287  016D6C  0000               	dw	0
  1288  016D6E  0000               	dw	0
  1289  016D70  0000               	dw	0
  1290  016D72  0000               	dw	0
  1291  016D74  0000               	dw	0
  1292  016D76  0000               	dw	0
  1293  016D78  0000               	dw	0
  1294  016D7A  0000               	dw	0
  1295  016D7C  0000               	dw	0
  1296  016D7E  0000               	dw	0
  1297  016D80  0000               	dw	0
  1298  016D82  0000               	dw	0
  1299  016D84  0000               	dw	0
  1300  016D86  0000               	dw	0
  1301  016D88  0000               	dw	0
  1302  016D8A  0000               	dw	0
  1303  016D8C  0000               	dw	0
  1304  016D8E  0000               	dw	0
  1305  016D90  0000               	dw	0
  1306  016D92  0000               	dw	0
  1307  016D94  0000               	dw	0
  1308  016D96  0000               	dw	0
  1309  016D98  0000               	dw	0
  1310  016D9A  0000               	dw	0
  1311  016D9C  0000               	dw	0
  1312  016D9E  0000               	dw	0
  1313  016DA0  0000               	dw	0
  1314  016DA2  0000               	dw	0
  1315  016DA4  0000               	dw	0
  1316  016DA6  0000               	dw	0
  1317  016DA8  0000               	dw	0
  1318  016DAA  0000               	dw	0
  1319  016DAC  0000               	dw	0
  1320  016DAE  0000               	dw	0
  1321  016DB0  0000               	dw	0
  1322  016DB2  0000               	dw	0
  1323  016DB4  0000               	dw	0
  1324  016DB6  42FA               	dw	17146
  1325  016DB8  0000               	dw	0
  1326  016DBA  0000               	dw	0
  1327  016DBC  0000               	dw	0
  1328  016DBE  0000               	dw	0
  1329  016DC0  0000               	dw	0
  1330  016DC2  0000               	dw	0
  1331  016DC4  0000               	dw	0
  1332  016DC6  0000               	dw	0
  1333  016DC8  0000               	dw	0
  1334  016DCA  0000               	dw	0
  1335  016DCC  0000               	dw	0
  1336  016DCE  0000               	dw	0
  1337  016DD0  0000               	dw	0
  1338  016DD2  0000               	dw	0
  1339  016DD4  0000               	dw	0
  1340  016DD6  0000               	dw	0
  1341  016DD8  0000               	dw	0
  1342  016DDA  0000               	dw	0
  1343  016DDC  0000               	dw	0
  1344  016DDE  0000               	dw	0
  1345  016DE0  00                 	db	0
  1346  016DE1  01                 	db	1
  1347  016DE2  0000               	dw	0
  1348  016DE4  3F80               	dw	16256
  1349  016DE6  0000               	dw	0
  1350  016DE8  3F80               	dw	16256
  1351  016DEA  00                 	db	0
  1352  016DEB  00                 	db	0
  1353  016DEC  00                 	db	0
  1354  016DED  00                 	db	0
  1355  016DEE  00                 	db	0
  1356  016DEF  00                 	db	0
  1357  016DF0  00                 	db	0
  1358  016DF1  00                 	db	0
  1359  016DF2  00                 	db	0
  1360  016DF3  00                 	db	0
  1361  016DF4  00                 	db	0
  1362  016DF5  00                 	db	0
  1363  016DF6  00                 	db	0
  1364  016DF7  00                 	db	0
  1365  016DF8  00                 	db	0
  1366  016DF9  00                 	db	0
  1367  016DFA  00                 	db	0
  1368  016DFB  00                 	db	0
  1369  016DFC  00                 	db	0
  1370  016DFD  00                 	db	0
  1371  016DFE  00                 	db	0
  1372  016DFF  00                 	db	0
  1373  016E00  00                 	db	0
  1374  016E01  00                 	db	0
  1375  016E02  00                 	db	0
  1376  016E03  00                 	db	0
  1377  016E04  00                 	db	0
  1378  016E05  00                 	db	0
  1379  016E06  00                 	db	0
  1380  016E07  00                 	db	0
  1381  016E08  00                 	db	0
  1382  016E09  00                 	db	0
  1383  016E0A  00                 	db	0
  1384  016E0B  00                 	db	0
  1385  016E0C  00                 	db	0
  1386  016E0D  00                 	db	0
  1387  016E0E  00                 	db	0
  1388  016E0F  00                 	db	0
  1389  016E10  00                 	db	0
  1390  016E11  00                 	db	0
  1391  016E12  00                 	db	0
  1392  016E13  00                 	db	0
  1393  016E14  00                 	db	0
  1394  016E15  00                 	db	0
  1395  016E16  00                 	db	0
  1396  016E17  00                 	db	0
  1397  016E18  00                 	db	0
  1398  016E19  00                 	db	0
  1399  016E1A  00                 	db	0
  1400  016E1B  00                 	db	0
  1401  016E1C  00                 	db	0
  1402  016E1D  00                 	db	0
  1403  016E1E  00                 	db	0
  1404  016E1F  00                 	db	0
  1405  016E20  00                 	db	0
  1406  016E21  00                 	db	0
  1407  016E22  00                 	db	0
  1408  016E23  00                 	db	0
  1409  016E24  00                 	db	0
  1410  016E25  00                 	db	0
  1411  016E26  00                 	db	0
  1412  016E27  00                 	db	0
  1413  016E28  00                 	db	0
  1414  016E29  00                 	db	0
  1415  016E2A  00                 	db	0
  1416  016E2B  00                 	db	0
  1417  016E2C  00                 	db	0
  1418  016E2D  00                 	db	0
  1419  016E2E  00                 	db	0
  1420  016E2F  00                 	db	0
  1421  016E30  00                 	db	0
  1422  016E31  00                 	db	0
  1423  016E32  00                 	db	0
  1424  016E33  00                 	db	0
  1425  016E34  00                 	db	0
  1426  016E35  00                 	db	0
  1427  016E36  0000               	dw	0
  1428  016E38  0000               	dw	0
  1429  016E3A  0000               	dw	0
  1430  016E3C  0000               	dw	0
  1431  016E3E  0000               	dw	0
  1432  016E40  0000               	dw	0
  1433  016E42  0000               	dw	0
  1434  016E44  0000               	dw	0
  1435  016E46  0000               	dw	0
  1436  016E48  0000               	dw	0
  1437  016E4A  01                 	db	1
  1438  016E4B  00                 	db	0
  1439  016E4C  00                 	db	0
  1440  016E4D  00                 	db	0
  1441  016E4E  00                 	db	0
  1442  016E4F  00                 	db	0
  1443  016E50  00                 	db	0
  1444  016E51  00                 	db	0
  1445  016E52  00                 	db	0
  1446                           
  1447                           	psect	idataBANK0
  1448  01C0E6                     __pidataBANK0:
  1449                           	opt callstack 0
  1450                           
  1451                           ;initializer for stoa@F1166
  1452  01C0E6  28                 	db	40
  1453  01C0E7  6E                 	db	110
  1454  01C0E8  75                 	db	117
  1455  01C0E9  6C                 	db	108
  1456  01C0EA  6C                 	db	108
  1457  01C0EB  29                 	db	41
  1458  01C0EC  00                 	db	0
  1459                           
  1460                           ;initializer for _H
  1461  01C0ED  00                 	db	0
  1462  01C0EE  00                 	db	0
  1463  01C0EF  01                 	db	1
  1464  01C0F0  00                 	db	0
  1465  01C0F1  01                 	db	1
  1466  01C0F2  00                 	db	0
  1467  01C0F3  00                 	db	0
  1468                           
  1469                           	psect	idataBANK1
  1470  019F26                     __pidataBANK1:
  1471                           	opt callstack 0
  1472                           
  1473                           ;initializer for _R
  1474  019F26  0000               	dw	0
  1475  019F28  0000               	dw	0
  1476  019F2A  0000               	dw	0
  1477  019F2C  0000               	dw	0
  1478  019F2E  0000               	dw	0
  1479  019F30  0000               	dw	0
  1480  019F32  0000               	dw	0
  1481  019F34  0000               	dw	0
  1482  019F36  0000               	dw	0
  1483  019F38  0000               	dw	0
  1484  019F3A  0000               	dw	0
  1485  019F3C  0000               	dw	0
  1486  019F3E  0000               	dw	0
  1487  019F40  0000               	dw	0
  1488  019F42  0000               	dw	0
  1489  019F44  0000               	dw	0
  1490  019F46  0F67               	dw	3943
  1491  019F48  0F8F               	dw	3983
  1492  019F4A  0000               	dw	0
  1493  019F4C  0000               	dw	0
  1494  019F4E  0000               	dw	0
  1495  019F50  0000               	dw	0
  1496  019F52  00                 	db	0
  1497  019F53  0000               	dw	0
  1498  019F55  00                 	db	0
  1499                           
  1500                           ;initializer for _V
  1501  019F56  00                 	db	0
  1502  019F57  00                 	db	0
  1503  019F58  00                 	db	0
  1504  019F59  00                 	db	0
  1505  019F5A  00                 	db	0
  1506  019F5B  00                 	db	0
  1507  019F5C  00                 	db	0
  1508  019F5D  00                 	db	0
  1509  019F5E  00                 	db	0
  1510  019F5F  00                 	db	0
  1511  019F60  00                 	db	0
  1512  019F61  00                 	db	0
  1513  019F62  00                 	db	0
  1514  019F63  00                 	db	0
  1515  019F64  00                 	db	0
  1516  019F65  00                 	db	0
  1517  019F66  00                 	db	0
  1518  019F67  00                 	db	0
  1519  019F68  00                 	db	0
  1520  019F69  00                 	db	0
  1521  019F6A  00                 	db	0
  1522  019F6B  00                 	db	0
  1523  019F6C  00                 	db	0
  1524  019F6D  00                 	db	0
  1525  019F6E  00                 	db	0
  1526  019F6F  00                 	db	0
  1527  019F70  00                 	db	0
  1528  019F71  00                 	db	0
  1529  019F72  00                 	db	0
  1530  019F73  00                 	db	0
  1531  019F74  00                 	db	0
  1532  019F75  00                 	db	0
  1533  019F76  00                 	db	0
  1534  019F77  00                 	db	0
  1535  019F78  00                 	db	0
  1536  019F79  00                 	db	0
  1537  019F7A  00                 	db	0
  1538  019F7B  00                 	db	0
  1539  019F7C  00                 	db	0
  1540  019F7D  00                 	db	0
  1541  019F7E  00                 	db	0
  1542  019F7F  00                 	db	0
  1543  019F80  00                 	db	0
  1544  019F81  00                 	db	0
  1545  019F82  00                 	db	0
  1546  019F83  00                 	db	0
  1547  019F84  00                 	db	0
  1548  019F85  00                 	db	0
  1549  019F86  00                 	db	0
  1550  019F87  00                 	db	0
  1551  019F88  00                 	db	0
  1552  019F89  00                 	db	0
  1553  019F8A  00                 	db	0
  1554  019F8B  00                 	db	0
  1555  019F8C  00                 	db	0
  1556  019F8D  00                 	db	0
  1557  019F8E  00                 	db	0
  1558  019F8F  00                 	db	0
  1559  019F90  00                 	db	0
  1560  019F91  00                 	db	0
  1561  019F92  00                 	db	0
  1562  019F93  00                 	db	0
  1563  019F94  00                 	db	0
  1564  019F95  00                 	db	0
  1565  019F96  00                 	db	0
  1566  019F97  00                 	db	0
  1567  019F98  00                 	db	0
  1568  019F99  00                 	db	0
  1569  019F9A  00                 	db	0
  1570  019F9B  00                 	db	0
  1571  019F9C  00                 	db	0
  1572  019F9D  00                 	db	0
  1573  019F9E  00                 	db	0
  1574  019F9F  00                 	db	0
  1575  019FA0  00                 	db	0
  1576  019FA1  00                 	db	0
  1577  019FA2  00                 	db	0
  1578  019FA3  00                 	db	0
  1579  019FA4  00                 	db	0
  1580  019FA5  00                 	db	0
  1581  019FA6  00                 	db	0
  1582  019FA7  00                 	db	0
  1583  019FA8  00                 	db	0
  1584  019FA9  00                 	db	0
  1585  019FAA  00                 	db	0
  1586  019FAB  00                 	db	0
  1587  019FAC  00                 	db	0
  1588  019FAD  00                 	db	0
  1589  019FAE  00                 	db	0
  1590  019FAF  00                 	db	0
  1591  019FB0  00                 	db	0
  1592  019FB1  00                 	db	0
  1593  019FB2  00                 	db	0
  1594  019FB3  00                 	db	0
  1595  019FB4  00                 	db	0
  1596  019FB5  00                 	db	0
  1597  019FB6  00                 	db	0
  1598  019FB7  00                 	db	0
  1599  019FB8  00                 	db	0
  1600  019FB9  00                 	db	0
  1601  019FBA  00                 	db	0
  1602  019FBB  00                 	db	0
  1603  019FBC  00                 	db	0
  1604  019FBD  00                 	db	0
  1605  019FBE  00                 	db	0
  1606  019FBF  00                 	db	0
  1607  019FC0  00                 	db	0
  1608  019FC1  00                 	db	0
  1609  019FC2  00                 	db	0
  1610  019FC3  00                 	db	0
  1611  019FC4  00                 	db	0
  1612  019FC5  00                 	db	0
  1613  019FC6  00                 	db	0
  1614  019FC7  00                 	db	0
  1615  019FC8  00                 	db	0
  1616  019FC9  00                 	db	0
  1617  019FCA  00                 	db	0
  1618  019FCB  00                 	db	0
  1619  019FCC  00                 	db	0
  1620  019FCD  00                 	db	0
  1621  019FCE  00                 	db	0
  1622  019FCF  00                 	db	0
  1623  019FD0  00                 	db	0
  1624  019FD1  00                 	db	0
  1625  019FD2  00                 	db	0
  1626  019FD3  00                 	db	0
  1627  019FD4  00                 	db	0
  1628  019FD5  00                 	db	0
  1629  019FD6  00                 	db	0
  1630  019FD7  0000               	dw	0
  1631  019FD9  0000               	dw	0
  1632  019FDB  0000               	dw	0
  1633  019FDD  0000               	dw	0
  1634  019FDF  00                 	db	0
  1635  019FE0  00                 	db	0
  1636  019FE1  00                 	db	0
  1637  019FE2  00                 	db	0
  1638  019FE3  00                 	db	0
  1639  019FE4  00                 	db	0
  1640  019FE5  0000               	dw	0
  1641  019FE7  0000               	dw	0
  1642  019FE9  0000               	dw	0
  1643  019FEB  0000               	dw	0
  1644  019FED  0000               	dw	0
  1645  019FEF  0000               	dw	0
  1646  019FF1  00                 	db	0
  1647  019FF2  00                 	db	0
  1648  019FF3  00                 	db	0
  1649  019FF4  00                 	db	0
  1650  019FF5  00                 	db	0
  1651  019FF6  00                 	db	0
  1652  019FF7  00                 	db	0
  1653  019FF8  00                 	db	0
  1654  019FF9  00                 	db	0
  1655  019FFA  00                 	db	0
  1656  019FFB  00                 	db	0
  1657  019FFC  0000               	dw	0
  1658  019FFE  0000               	dw	0
  1659  01A000  2D                 	db	45
  1660  01A001  00                 	db	0
  1661  01A002  00                 	db	0
  1662  01A003  00                 	db	0
  1663  01A004  00                 	db	0
  1664  01A005  0000               	dw	0
  1665  01A007  0000               	dw	0
  1666  01A009  0000               	dw	0
  1667  01A00B  0000               	dw	0
  1668  01A00D  0000               	dw	0
  1669  01A00F  0000               	dw	0
  1670  01A011  0000               	dw	0
  1671  01A013  0000               	dw	0
  1672                           
  1673                           	psect	mediumconst
  1674  00F9EA                     __pmediumconst:
  1675                           	opt callstack 0
  1676  00F9EA  00                 	db	0
  1677  00F9EB                     _BVSOC_TABLE:
  1678                           	opt callstack 0
  1679  00F9EB  59D8               	dw	23000
  1680  00F9ED  0000               	dw	0
  1681  00F9EF  0005               	dw	5
  1682  00F9F1  0000               	dw	0
  1683  00F9F3  5B68               	dw	23400
  1684  00F9F5  0000               	dw	0
  1685  00F9F7  000A               	dw	10
  1686  00F9F9  0000               	dw	0
  1687  00F9FB  5C30               	dw	23600
  1688  00F9FD  0000               	dw	0
  1689  00F9FF  0014               	dw	20
  1690  00FA01  0000               	dw	0
  1691  00FA03  5E38               	dw	24120
  1692  00FA05  0000               	dw	0
  1693  00FA07  0019               	dw	25
  1694  00FA09  0000               	dw	0
  1695  00FA0B  5E88               	dw	24200
  1696  00FA0D  0000               	dw	0
  1697  00FA0F  001E               	dw	30
  1698  00FA11  0000               	dw	0
  1699  00FA13  5F78               	dw	24440
  1700  00FA15  0000               	dw	0
  1701  00FA17  0028               	dw	40
  1702  00FA19  0000               	dw	0
  1703  00FA1B  5FDC               	dw	24540
  1704  00FA1D  0000               	dw	0
  1705  00FA1F  002D               	dw	45
  1706  00FA21  0000               	dw	0
  1707  00FA23  6018               	dw	24600
  1708  00FA25  0000               	dw	0
  1709  00FA27  0032               	dw	50
  1710  00FA29  0000               	dw	0
  1711  00FA2B  6046               	dw	24646
  1712  00FA2D  0000               	dw	0
  1713  00FA2F  0035               	dw	53
  1714  00FA31  0000               	dw	0
  1715  00FA33  607C               	dw	24700
  1716  00FA35  0000               	dw	0
  1717  00FA37  0037               	dw	55
  1718  00FA39  0000               	dw	0
  1719  00FA3B  60AE               	dw	24750
  1720  00FA3D  0000               	dw	0
  1721  00FA3F  0039               	dw	57
  1722  00FA41  0000               	dw	0
  1723  00FA43  60E0               	dw	24800
  1724  00FA45  0000               	dw	0
  1725  00FA47  003C               	dw	60
  1726  00FA49  0000               	dw	0
  1727  00FA4B  6112               	dw	24850
  1728  00FA4D  0000               	dw	0
  1729  00FA4F  003F               	dw	63
  1730  00FA51  0000               	dw	0
  1731  00FA53  615D               	dw	24925
  1732  00FA55  0000               	dw	0
  1733  00FA57  0043               	dw	67
  1734  00FA59  0000               	dw	0
  1735  00FA5B  61A8               	dw	25000
  1736  00FA5D  0000               	dw	0
  1737  00FA5F  0046               	dw	70
  1738  00FA61  0000               	dw	0
  1739  00FA63  61BC               	dw	25020
  1740  00FA65  0000               	dw	0
  1741  00FA67  0048               	dw	72
  1742  00FA69  0000               	dw	0
  1743  00FA6B  61D0               	dw	25040
  1744  00FA6D  0000               	dw	0
  1745  00FA6F  004B               	dw	75
  1746  00FA71  0000               	dw	0
  1747  00FA73  61DA               	dw	25050
  1748  00FA75  0000               	dw	0
  1749  00FA77  0050               	dw	80
  1750  00FA79  0000               	dw	0
  1751  00FA7B  61E4               	dw	25060
  1752  00FA7D  0000               	dw	0
  1753  00FA7F  0055               	dw	85
  1754  00FA81  0000               	dw	0
  1755  00FA83  61F8               	dw	25080
  1756  00FA85  0000               	dw	0
  1757  00FA87  005A               	dw	90
  1758  00FA89  0000               	dw	0
  1759  00FA8B  6208               	dw	25096
  1760  00FA8D  0000               	dw	0
  1761  00FA8F  005C               	dw	92
  1762  00FA91  0000               	dw	0
  1763  00FA93  6222               	dw	25122
  1764  00FA95  0000               	dw	0
  1765  00FA97  005D               	dw	93
  1766  00FA99  0000               	dw	0
  1767  00FA9B  6234               	dw	25140
  1768  00FA9D  0000               	dw	0
  1769  00FA9F  005F               	dw	95
  1770  00FAA1  0000               	dw	0
  1771  00FAA3  6248               	dw	25160
  1772  00FAA5  0000               	dw	0
  1773  00FAA7  0061               	dw	97
  1774  00FAA9  0000               	dw	0
  1775  00FAAB  625C               	dw	25180
  1776  00FAAD  0000               	dw	0
  1777  00FAAF  0064               	dw	100
  1778  00FAB1  0000               	dw	0
  1779  00FAB3  6784               	dw	26500
  1780  00FAB5  0000               	dw	0
  1781  00FAB7  0062               	dw	98
  1782  00FAB9  0000               	dw	0
  1783  00FABB                     __end_of_BVSOC_TABLE:
  1784                           	opt callstack 0
  1785  00FABB                     _T:
  1786                           	opt callstack 0
  1787  00FABB  63                 	db	99
  1788  00FABC  6F                 	db	111
  1789  00FABD  6D                 	db	109
  1790  00FABE  6D                 	db	109
  1791  00FABF  61                 	db	97
  1792  00FAC0  6E                 	db	110
  1793  00FAC1  64                 	db	100
  1794  00FAC2  73                 	db	115
  1795  00FAC3  20                 	db	32
  1796  00FAC4  31                 	db	49
  1797  00FAC5  00                 	db	0
  1798  00FAC6  00                 	db	0
  1799  00FAC7  00                 	db	0
  1800  00FAC8  00                 	db	0
  1801  00FAC9  00                 	db	0
  1802  00FACA  00                 	db	0
  1803  00FACB  00                 	db	0
  1804  00FACC  00                 	db	0
  1805  00FACD  64                 	db	100
  1806  00FACE  69                 	db	105
  1807  00FACF  73                 	db	115
  1808  00FAD0  70                 	db	112
  1809  00FAD1  6C                 	db	108
  1810  00FAD2  61                 	db	97
  1811  00FAD3  79                 	db	121
  1812  00FAD4  73                 	db	115
  1813  00FAD5  20                 	db	32
  1814  00FAD6  31                 	db	49
  1815  00FAD7  00                 	db	0
  1816  00FAD8  00                 	db	0
  1817  00FAD9  00                 	db	0
  1818  00FADA  00                 	db	0
  1819  00FADB  00                 	db	0
  1820  00FADC  00                 	db	0
  1821  00FADD  00                 	db	0
  1822  00FADE  00                 	db	0
  1823  00FADF  63                 	db	99
  1824  00FAE0  6F                 	db	111
  1825  00FAE1  6D                 	db	109
  1826  00FAE2  6D                 	db	109
  1827  00FAE3  61                 	db	97
  1828  00FAE4  6E                 	db	110
  1829  00FAE5  64                 	db	100
  1830  00FAE6  73                 	db	115
  1831  00FAE7  20                 	db	32
  1832  00FAE8  32                 	db	50
  1833  00FAE9  00                 	db	0
  1834  00FAEA  00                 	db	0
  1835  00FAEB  00                 	db	0
  1836  00FAEC  00                 	db	0
  1837  00FAED  00                 	db	0
  1838  00FAEE  00                 	db	0
  1839  00FAEF  00                 	db	0
  1840  00FAF0  00                 	db	0
  1841  00FAF1  64                 	db	100
  1842  00FAF2  69                 	db	105
  1843  00FAF3  73                 	db	115
  1844  00FAF4  70                 	db	112
  1845  00FAF5  6C                 	db	108
  1846  00FAF6  61                 	db	97
  1847  00FAF7  79                 	db	121
  1848  00FAF8  73                 	db	115
  1849  00FAF9  20                 	db	32
  1850  00FAFA  32                 	db	50
  1851  00FAFB  00                 	db	0
  1852  00FAFC  00                 	db	0
  1853  00FAFD  00                 	db	0
  1854  00FAFE  00                 	db	0
  1855  00FAFF  00                 	db	0
  1856  00FB00  00                 	db	0
  1857  00FB01  00                 	db	0
  1858  00FB02  00                 	db	0
  1859  00FB03  63                 	db	99
  1860  00FB04  6F                 	db	111
  1861  00FB05  6D                 	db	109
  1862  00FB06  6D                 	db	109
  1863  00FB07  61                 	db	97
  1864  00FB08  6E                 	db	110
  1865  00FB09  64                 	db	100
  1866  00FB0A  73                 	db	115
  1867  00FB0B  20                 	db	32
  1868  00FB0C  33                 	db	51
  1869  00FB0D  00                 	db	0
  1870  00FB0E  00                 	db	0
  1871  00FB0F  00                 	db	0
  1872  00FB10  00                 	db	0
  1873  00FB11  00                 	db	0
  1874  00FB12  00                 	db	0
  1875  00FB13  00                 	db	0
  1876  00FB14  00                 	db	0
  1877  00FB15  64                 	db	100
  1878  00FB16  69                 	db	105
  1879  00FB17  73                 	db	115
  1880  00FB18  70                 	db	112
  1881  00FB19  6C                 	db	108
  1882  00FB1A  61                 	db	97
  1883  00FB1B  79                 	db	121
  1884  00FB1C  73                 	db	115
  1885  00FB1D  20                 	db	32
  1886  00FB1E  33                 	db	51
  1887  00FB1F  00                 	db	0
  1888  00FB20  00                 	db	0
  1889  00FB21  00                 	db	0
  1890  00FB22  00                 	db	0
  1891  00FB23  00                 	db	0
  1892  00FB24  00                 	db	0
  1893  00FB25  00                 	db	0
  1894  00FB26  00                 	db	0
  1895  00FB27  63                 	db	99
  1896  00FB28  6F                 	db	111
  1897  00FB29  6D                 	db	109
  1898  00FB2A  6D                 	db	109
  1899  00FB2B  61                 	db	97
  1900  00FB2C  6E                 	db	110
  1901  00FB2D  64                 	db	100
  1902  00FB2E  73                 	db	115
  1903  00FB2F  20                 	db	32
  1904  00FB30  34                 	db	52
  1905  00FB31  00                 	db	0
  1906  00FB32  00                 	db	0
  1907  00FB33  00                 	db	0
  1908  00FB34  00                 	db	0
  1909  00FB35  00                 	db	0
  1910  00FB36  00                 	db	0
  1911  00FB37  00                 	db	0
  1912  00FB38  00                 	db	0
  1913  00FB39  64                 	db	100
  1914  00FB3A  69                 	db	105
  1915  00FB3B  73                 	db	115
  1916  00FB3C  70                 	db	112
  1917  00FB3D  6C                 	db	108
  1918  00FB3E  61                 	db	97
  1919  00FB3F  79                 	db	121
  1920  00FB40  73                 	db	115
  1921  00FB41  20                 	db	32
  1922  00FB42  34                 	db	52
  1923  00FB43  00                 	db	0
  1924  00FB44  00                 	db	0
  1925  00FB45  00                 	db	0
  1926  00FB46  00                 	db	0
  1927  00FB47  00                 	db	0
  1928  00FB48  00                 	db	0
  1929  00FB49  00                 	db	0
  1930  00FB4A  00                 	db	0
  1931  00FB4B                     __end_of_T:
  1932                           	opt callstack 0
  1933  00FB4B                     _spin:
  1934                           	opt callstack 0
  1935  00FB4B  7C                 	db	124
  1936  00FB4C  7C                 	db	124
  1937  00FB4D  2F                 	db	47
  1938  00FB4E  2F                 	db	47
  1939  00FB4F  2D                 	db	45
  1940  00FB50  2D                 	db	45
  1941  00FB51  00                 	db	0
  1942  00FB52  00                 	db	0
  1943  00FB53  00                 	db	0
  1944  00FB54  00                 	db	0
  1945  00FB55  00                 	db	0
  1946  00FB56  00                 	db	0
  1947  00FB57  00                 	db	0
  1948  00FB58  00                 	db	0
  1949  00FB59  00                 	db	0
  1950  00FB5A  00                 	db	0
  1951  00FB5B  00                 	db	0
  1952  00FB5C  00                 	db	0
  1953  00FB5D  00                 	db	0
  1954  00FB5E  00                 	db	0
  1955  00FB5F  7C                 	db	124
  1956  00FB60  7C                 	db	124
  1957  00FB61  2F                 	db	47
  1958  00FB62  2F                 	db	47
  1959  00FB63  2D                 	db	45
  1960  00FB64  2D                 	db	45
  1961  00FB65  5C                 	db	92
  1962  00FB66  5C                 	db	92
  1963  00FB67  00                 	db	0
  1964  00FB68  00                 	db	0
  1965  00FB69  00                 	db	0
  1966  00FB6A  00                 	db	0
  1967  00FB6B  00                 	db	0
  1968  00FB6C  00                 	db	0
  1969  00FB6D  00                 	db	0
  1970  00FB6E  00                 	db	0
  1971  00FB6F  00                 	db	0
  1972  00FB70  00                 	db	0
  1973  00FB71  00                 	db	0
  1974  00FB72  00                 	db	0
  1975  00FB73  4F                 	db	79
  1976  00FB74  4F                 	db	79
  1977  00FB75  4F                 	db	79
  1978  00FB76  4F                 	db	79
  1979  00FB77  4F                 	db	79
  1980  00FB78  4F                 	db	79
  1981  00FB79  2D                 	db	45
  1982  00FB7A  2D                 	db	45
  1983  00FB7B  5F                 	db	95
  1984  00FB7C  5F                 	db	95
  1985  00FB7D  2D                 	db	45
  1986  00FB7E  00                 	db	0
  1987  00FB7F  00                 	db	0
  1988  00FB80  00                 	db	0
  1989  00FB81  00                 	db	0
  1990  00FB82  00                 	db	0
  1991  00FB83  00                 	db	0
  1992  00FB84  00                 	db	0
  1993  00FB85  00                 	db	0
  1994  00FB86  00                 	db	0
  1995  00FB87  76                 	db	118
  1996  00FB88  76                 	db	118
  1997  00FB89  3C                 	db	60
  1998  00FB8A  3C                 	db	60
  1999  00FB8B  5E                 	db	94
  2000  00FB8C  5E                 	db	94
  2001  00FB8D  3E                 	db	62
  2002  00FB8E  3E                 	db	62
  2003  00FB8F  00                 	db	0
  2004  00FB90  00                 	db	0
  2005  00FB91  00                 	db	0
  2006  00FB92  00                 	db	0
  2007  00FB93  00                 	db	0
  2008  00FB94  00                 	db	0
  2009  00FB95  00                 	db	0
  2010  00FB96  00                 	db	0
  2011  00FB97  00                 	db	0
  2012  00FB98  00                 	db	0
  2013  00FB99  00                 	db	0
  2014  00FB9A  00                 	db	0
  2015  00FB9B  2E                 	db	46
  2016  00FB9C  2E                 	db	46
  2017  00FB9D  2A                 	db	42
  2018  00FB9E  2A                 	db	42
  2019  00FB9F  78                 	db	120
  2020  00FBA0  23                 	db	35
  2021  00FBA1  78                 	db	120
  2022  00FBA2  23                 	db	35
  2023  00FBA3  58                 	db	88
  2024  00FBA4  58                 	db	88
  2025  00FBA5  7C                 	db	124
  2026  00FBA6  7C                 	db	124
  2027  00FBA7  2D                 	db	45
  2028  00FBA8  2D                 	db	45
  2029  00FBA9  00                 	db	0
  2030  00FBAA  00                 	db	0
  2031  00FBAB  00                 	db	0
  2032  00FBAC  00                 	db	0
  2033  00FBAD  00                 	db	0
  2034  00FBAE  00                 	db	0
  2035  00FBAF  2E                 	db	46
  2036  00FBB0  2E                 	db	46
  2037  00FBB1  6F                 	db	111
  2038  00FBB2  6F                 	db	111
  2039  00FBB3  4F                 	db	79
  2040  00FBB4  4F                 	db	79
  2041  00FBB5  6F                 	db	111
  2042  00FBB6  6F                 	db	111
  2043  00FBB7  00                 	db	0
  2044  00FBB8  00                 	db	0
  2045  00FBB9  00                 	db	0
  2046  00FBBA  00                 	db	0
  2047  00FBBB  00                 	db	0
  2048  00FBBC  00                 	db	0
  2049  00FBBD  00                 	db	0
  2050  00FBBE  00                 	db	0
  2051  00FBBF  00                 	db	0
  2052  00FBC0  00                 	db	0
  2053  00FBC1  00                 	db	0
  2054  00FBC2  00                 	db	0
  2055  00FBC3                     __end_of_spin:
  2056                           	opt callstack 0
  2057  00FBC3  0000               	dw	0
  2058  00FBC5  3F80               	dw	16256
  2059  00FBC7  0000               	dw	0
  2060  00FBC9  3FC0               	dw	16320
  2061  00FBCB                     __end_of_bp:
  2062                           	opt callstack 0
  2063  00FBCB  AA00               	dw	43520
  2064  00FBCD  3FB8               	dw	16312
  2065  00FBCF                     __end_of_ivln2_h:
  2066                           	opt callstack 0
  2067  00FBCF  23C6               	dw	9158
  2068  00FBD1  B8F6               	dw	47350
  2069  00FBD3                     __end_of_cp_l:
  2070                           	opt callstack 0
  2071  00FBD3  4000               	dw	16384
  2072  00FBD5  3F76               	dw	16246
  2073  00FBD7                     __end_of_cp_h:
  2074                           	opt callstack 0
  2075  0000                     _IVTADL	set	14493
  2076  0000                     _IVTADH	set	14494
  2077  0000                     _IVTADU	set	14495
  2078  0000                     _PIR6bits	set	14758
  2079  0000                     _PIR4bits	set	14756
  2080  0000                     _PIE8bits	set	14744
  2081  0000                     _PIR8bits	set	14760
  2082  0000                     _SCANPR	set	14839
  2083  0000                     _DMA2PR	set	14836
  2084  0000                     _DMA1PR	set	14835
  2085  0000                     _MAINPR	set	14834
  2086  0000                     _ISRPR	set	14833
  2087  0000                     _PIE2bits	set	14738
  2088  0000                     _PIR2bits	set	14754
  2089  0000                     _PIE9bits	set	14745
  2090  0000                     _PIR9bits	set	14761
  2091  0000                     _PIE6bits	set	14742
  2092  0000                     _PIE3bits	set	14739
  2093  0000                     _PMD7	set	14791
  2094  0000                     _PMD6	set	14790
  2095  0000                     _PMD5	set	14789
  2096  0000                     _PMD4	set	14788
  2097  0000                     _PMD3	set	14787
  2098  0000                     _PMD2	set	14786
  2099  0000                     _PMD1	set	14785
  2100  0000                     _PMD0	set	14784
  2101  0000                     _OSCTUNE	set	14814
  2102  0000                     _OSCFRQ	set	14815
  2103  0000                     _OSCEN	set	14813
  2104  0000                     _OSCCON3	set	14811
  2105  0000                     _OSCCON1	set	14809
  2106  0000                     _IPR8bits	set	14728
  2107  0000                     _IPR9bits	set	14729
  2108  0000                     _IPR5bits	set	14725
  2109  0000                     _IPR1bits	set	14721
  2110  0000                     _IPR3bits	set	14723
  2111  0000                     _IPR6bits	set	14726
  2112  0000                     _IPR2bits	set	14722
  2113  0000                     _PIE5bits	set	14741
  2114  0000                     _PIE1bits	set	14737
  2115  0000                     _PIR5bits	set	14757
  2116  0000                     _PIR1bits	set	14753
  2117  0000                     _PLLR	set	118496
  2118  0000                     _SPI1SDIPPS	set	15071
  2119  0000                     _U1RXPPS	set	15077
  2120  0000                     _RC6PPS	set	14870
  2121  0000                     _RC5PPS	set	14869
  2122  0000                     _INT1PPS	set	15041
  2123  0000                     _RD1PPS	set	14873
  2124  0000                     _INT0PPS	set	15040
  2125  0000                     _RC3PPS	set	14867
  2126  0000                     _RB6PPS	set	14862
  2127  0000                     _SPI1SCKPPS	set	15070
  2128  0000                     _U2RXPPS	set	15080
  2129  0000                     _SLRCONF	set	14995
  2130  0000                     _SLRCONE	set	14979
  2131  0000                     _SLRCOND	set	14963
  2132  0000                     _SLRCONC	set	14947
  2133  0000                     _SLRCONB	set	14931
  2134  0000                     _SLRCONA	set	14915
  2135  0000                     _ODCOND	set	14962
  2136  0000                     _ODCONC	set	14946
  2137  0000                     _ODCONB	set	14930
  2138  0000                     _ODCONA	set	14914
  2139  0000                     _ODCONF	set	14994
  2140  0000                     _ODCONE	set	14978
  2141  0000                     _WPUC	set	14945
  2142  0000                     _WPUA	set	14913
  2143  0000                     _WPUB	set	14929
  2144  0000                     _WPUE	set	14977
  2145  0000                     _WPUF	set	14993
  2146  0000                     _WPUD	set	14961
  2147  0000                     _ANSELA	set	14912
  2148  0000                     _ANSELF	set	14992
  2149  0000                     _ANSELE	set	14976
  2150  0000                     _ANSELB	set	14928
  2151  0000                     _ANSELC	set	14944
  2152  0000                     _ANSELD	set	14960
  2153  0000                     _DMA2SSA	set	15321
  2154  0000                     _DMA1SSA	set	15353
  2155  0000                     _DMA2DSZ	set	15310
  2156  0000                     _DMA2SSZ	set	15319
  2157  0000                     _DMA2DSA	set	15312
  2158  0000                     _DMA1DSZ	set	15342
  2159  0000                     _DMA1SSZ	set	15351
  2160  0000                     _DMA1DSA	set	15344
  2161  0000                     _DMA2CON0bits	set	15324
  2162  0000                     _DMA2CON1bits	set	15325
  2163  0000                     _DMA1CON0bits	set	15356
  2164  0000                     _DMA1CON1bits	set	15357
  2165  0000                     _DMA2CON0	set	15324
  2166  0000                     _DMA2AIRQ	set	15326
  2167  0000                     _DMA2SIRQ	set	15327
  2168  0000                     _DMA2CON1	set	15325
  2169  0000                     _DMA1CON0	set	15356
  2170  0000                     _DMA1AIRQ	set	15358
  2171  0000                     _DMA1SIRQ	set	15359
  2172  0000                     _DMA1CON1	set	15357
  2173  0000                     _CLKRCON	set	15589
  2174  0000                     _CLKRCLK	set	15590
  2175  0000                     _SPI1INTFbits	set	15642
  2176  0000                     _SPI1CON0bits	set	15636
  2177  0000                     _SPI1RXB	set	15632
  2178  0000                     _SPI1TXB	set	15633
  2179  0000                     _SPI1TCNTL	set	15634
  2180  0000                     _SPI1CON0	set	15636
  2181  0000                     _SPI1CLK	set	15644
  2182  0000                     _SPI1BAUD	set	15641
  2183  0000                     _SPI1CON2	set	15638
  2184  0000                     _SPI1CON1	set	15637
  2185  0000                     _U2RXB	set	15824
  2186  0000                     _U2TXB	set	15826
  2187  0000                     _U2ERRIE	set	15842
  2188  0000                     _U2ERRIR	set	15841
  2189  0000                     _U2UIR	set	15840
  2190  0000                     _U2FIFO	set	15839
  2191  0000                     _U2BRGH	set	15838
  2192  0000                     _U2BRGL	set	15837
  2193  0000                     _U2CON2	set	15836
  2194  0000                     _U2CON1	set	15835
  2195  0000                     _U2CON0	set	15834
  2196  0000                     _U2P3L	set	15832
  2197  0000                     _U2P2L	set	15830
  2198  0000                     _U2P1L	set	15828
  2199  0000                     _U1RXB	set	15848
  2200  0000                     _U1ERRIE	set	15866
  2201  0000                     _U1ERRIR	set	15865
  2202  0000                     _U1UIR	set	15864
  2203  0000                     _U1FIFO	set	15863
  2204  0000                     _U1BRGH	set	15862
  2205  0000                     _U1BRGL	set	15861
  2206  0000                     _U1CON2	set	15860
  2207  0000                     _U1CON1	set	15859
  2208  0000                     _U1CON0	set	15858
  2209  0000                     _U1P3H	set	15857
  2210  0000                     _U1P3L	set	15856
  2211  0000                     _U1P2H	set	15855
  2212  0000                     _U1P2L	set	15854
  2213  0000                     _U1P1H	set	15853
  2214  0000                     _U1P1L	set	15852
  2215  0000                     _FVRCON	set	16065
  2216  0000                     _ADFLTRL	set	16102
  2217  0000                     _ADFLTRH	set	16103
  2218  0000                     _ADCON0bits	set	16120
  2219  0000                     _ADCON0	set	16120
  2220  0000                     _ADCLK	set	16127
  2221  0000                     _ADACT	set	16126
  2222  0000                     _ADREF	set	16125
  2223  0000                     _ADSTAT	set	16124
  2224  0000                     _ADCON3	set	16123
  2225  0000                     _ADCON2	set	16122
  2226  0000                     _ADCON1	set	16121
  2227  0000                     _ADPREH	set	16119
  2228  0000                     _ADPREL	set	16118
  2229  0000                     _ADCAP	set	16117
  2230  0000                     _ADACQH	set	16116
  2231  0000                     _ADACQL	set	16115
  2232  0000                     _ADPCH	set	16113
  2233  0000                     _ADRPT	set	16108
  2234  0000                     _ADACCU	set	16106
  2235  0000                     _ADSTPTH	set	16101
  2236  0000                     _ADSTPTL	set	16100
  2237  0000                     _ADUTHH	set	16097
  2238  0000                     _ADUTHL	set	16096
  2239  0000                     _ADLTHH	set	16095
  2240  0000                     _ADLTHL	set	16094
  2241  0000                     _CCPTMRS1bits	set	16223
  2242  0000                     _PORTFbits	set	16335
  2243  0000                     _LATFbits	set	16319
  2244  0000                     _LATCbits	set	16316
  2245  0000                     _LATDbits	set	16317
  2246  0000                     _PORTBbits	set	16331
  2247  0000                     _T3CONbits	set	16294
  2248  0000                     _T3CON	set	16294
  2249  0000                     _TMR3L	set	16292
  2250  0000                     _TMR3H	set	16293
  2251  0000                     _T3CLK	set	16297
  2252  0000                     _T3GATE	set	16296
  2253  0000                     _T3GCON	set	16295
  2254  0000                     _T2CON	set	16300
  2255  0000                     _T2TMR	set	16298
  2256  0000                     _T2PR	set	16299
  2257  0000                     _T2RST	set	16303
  2258  0000                     _T2HLT	set	16301
  2259  0000                     _T2CLKCON	set	16302
  2260  0000                     _PWM8DCL	set	16224
  2261  0000                     _PWM8DCH	set	16225
  2262  0000                     _PWM8CON	set	16226
  2263  0000                     _LATEbits	set	16318
  2264  0000                     _T5CONbits	set	16282
  2265  0000                     _T5CON	set	16282
  2266  0000                     _TMR5L	set	16280
  2267  0000                     _TMR5H	set	16281
  2268  0000                     _T5CLK	set	16285
  2269  0000                     _T5GATE	set	16284
  2270  0000                     _T5GCON	set	16283
  2271  0000                     _T6CON	set	16276
  2272  0000                     _T6TMR	set	16274
  2273  0000                     _T6PR	set	16275
  2274  0000                     _T6RST	set	16279
  2275  0000                     _T6HLT	set	16277
  2276  0000                     _T6CLKCON	set	16278
  2277  0000                     _TRISD	set	16325
  2278  0000                     _TRISC	set	16324
  2279  0000                     _TRISB	set	16323
  2280  0000                     _TRISA	set	16322
  2281  0000                     _TRISF	set	16327
  2282  0000                     _TRISE	set	16326
  2283  0000                     _LATC	set	16316
  2284  0000                     _LATB	set	16315
  2285  0000                     _LATF	set	16319
  2286  0000                     _LATA	set	16314
  2287  0000                     _LATD	set	16317
  2288  0000                     _LATE	set	16318
  2289  0000                     _IVTLOCKbits	set	16340
  2290  0000                     _IVTLOCK	set	16340
  2291  0000                     _INTCON0bits	set	16338
  2292  0000                     _GIE	set	130711
  2293  00FBD7                     STR_64:
  2294                           
  2295                           ; BSR set to: 57
  2296  00FBD7  20                 	db	32
  2297  00FBD8  25                 	db	37
  2298  00FBD9  63                 	db	99	;'c'
  2299  00FBDA  20                 	db	32
  2300  00FBDB  2C                 	db	44
  2301  00FBDC  25                 	db	37
  2302  00FBDD  6C                 	db	108	;'l'
  2303  00FBDE  75                 	db	117	;'u'
  2304  00FBDF  2C                 	db	44
  2305  00FBE0  25                 	db	37
  2306  00FBE1  34                 	db	52	;'4'
  2307  00FBE2  2E                 	db	46
  2308  00FBE3  34                 	db	52	;'4'
  2309  00FBE4  66                 	db	102	;'f'
  2310  00FBE5  2C                 	db	44
  2311  00FBE6  25                 	db	37
  2312  00FBE7  34                 	db	52	;'4'
  2313  00FBE8  2E                 	db	46
  2314  00FBE9  34                 	db	52	;'4'
  2315  00FBEA  66                 	db	102	;'f'
  2316  00FBEB  2C                 	db	44
  2317  00FBEC  25                 	db	37
  2318  00FBED  34                 	db	52	;'4'
  2319  00FBEE  2E                 	db	46
  2320  00FBEF  34                 	db	52	;'4'
  2321  00FBF0  66                 	db	102	;'f'
  2322  00FBF1  2C                 	db	44
  2323  00FBF2  25                 	db	37
  2324  00FBF3  34                 	db	52	;'4'
  2325  00FBF4  2E                 	db	46
  2326  00FBF5  34                 	db	52	;'4'
  2327  00FBF6  66                 	db	102	;'f'
  2328  00FBF7  2C                 	db	44
  2329  00FBF8  25                 	db	37
  2330  00FBF9  34                 	db	52	;'4'
  2331  00FBFA  2E                 	db	46
  2332  00FBFB  33                 	db	51	;'3'
  2333  00FBFC  66                 	db	102	;'f'
  2334  00FBFD  2C                 	db	44
  2335  00FBFE  25                 	db	37
  2336  00FBFF  34                 	db	52	;'4'
  2337  00FC00  2E                 	db	46
  2338  00FC01  33                 	db	51	;'3'
  2339  00FC02  66                 	db	102	;'f'
  2340  00FC03  2C                 	db	44
  2341  00FC04  25                 	db	37
  2342  00FC05  34                 	db	52	;'4'
  2343  00FC06  2E                 	db	46
  2344  00FC07  33                 	db	51	;'3'
  2345  00FC08  66                 	db	102	;'f'
  2346  00FC09  2C                 	db	44
  2347  00FC0A  25                 	db	37
  2348  00FC0B  34                 	db	52	;'4'
  2349  00FC0C  2E                 	db	46
  2350  00FC0D  33                 	db	51	;'3'
  2351  00FC0E  66                 	db	102	;'f'
  2352  00FC0F  2C                 	db	44
  2353  00FC10  25                 	db	37
  2354  00FC11  34                 	db	52	;'4'
  2355  00FC12  2E                 	db	46
  2356  00FC13  33                 	db	51	;'3'
  2357  00FC14  66                 	db	102	;'f'
  2358  00FC15  2C                 	db	44
  2359  00FC16  25                 	db	37
  2360  00FC17  34                 	db	52	;'4'
  2361  00FC18  2E                 	db	46
  2362  00FC19  33                 	db	51	;'3'
  2363  00FC1A  66                 	db	102	;'f'
  2364  00FC1B  2C                 	db	44
  2365  00FC1C  25                 	db	37
  2366  00FC1D  64                 	db	100	;'d'
  2367  00FC1E  2C                 	db	44
  2368  00FC1F  25                 	db	37
  2369  00FC20  64                 	db	100	;'d'
  2370  00FC21  2C                 	db	44
  2371  00FC22  25                 	db	37
  2372  00FC23  32                 	db	50	;'2'
  2373  00FC24  2E                 	db	46
  2374  00FC25  36                 	db	54	;'6'
  2375  00FC26  66                 	db	102	;'f'
  2376  00FC27  2C                 	db	44
  2377  00FC28  25                 	db	37
  2378  00FC29  34                 	db	52	;'4'
  2379  00FC2A  2E                 	db	46
  2380  00FC2B  33                 	db	51	;'3'
  2381  00FC2C  66                 	db	102	;'f'
  2382  00FC2D  2C                 	db	44
  2383  00FC2E  25                 	db	37
  2384  00FC2F  64                 	db	100	;'d'
  2385  00FC30  2C                 	db	44
  2386  00FC31  25                 	db	37
  2387  00FC32  64                 	db	100	;'d'
  2388  00FC33  2C                 	db	44
  2389  00FC34  25                 	db	37
  2390  00FC35  6C                 	db	108	;'l'
  2391  00FC36  75                 	db	117	;'u'
  2392  00FC37  2C                 	db	44
  2393  00FC38  25                 	db	37
  2394  00FC39  6C                 	db	108	;'l'
  2395  00FC3A  75                 	db	117	;'u'
  2396  00FC3B  2C                 	db	44
  2397  00FC3C  25                 	db	37
  2398  00FC3D  34                 	db	52	;'4'
  2399  00FC3E  2E                 	db	46
  2400  00FC3F  33                 	db	51	;'3'
  2401  00FC40  66                 	db	102	;'f'
  2402  00FC41  2C                 	db	44
  2403  00FC42  25                 	db	37
  2404  00FC43  34                 	db	52	;'4'
  2405  00FC44  2E                 	db	46
  2406  00FC45  33                 	db	51	;'3'
  2407  00FC46  66                 	db	102	;'f'
  2408  00FC47  2C                 	db	44
  2409  00FC48  25                 	db	37
  2410  00FC49  34                 	db	52	;'4'
  2411  00FC4A  2E                 	db	46
  2412  00FC4B  33                 	db	51	;'3'
  2413  00FC4C  66                 	db	102	;'f'
  2414  00FC4D  0D                 	db	13
  2415  00FC4E  0A                 	db	10
  2416  00FC4F  00                 	db	0
  2417  00FC50                     STR_17:
  2418                           
  2419                           ; BSR set to: 57
  2420  00FC50  52                 	db	82	;'R'
  2421  00FC51  31                 	db	49	;'1'
  2422  00FC52  20                 	db	32
  2423  00FC53  25                 	db	37
  2424  00FC54  32                 	db	50	;'2'
  2425  00FC55  2E                 	db	46
  2426  00FC56  33                 	db	51	;'3'
  2427  00FC57  66                 	db	102	;'f'
  2428  00FC58  20                 	db	32
  2429  00FC59  25                 	db	37
  2430  00FC5A  33                 	db	51	;'3'
  2431  00FC5B  2E                 	db	46
  2432  00FC5C  34                 	db	52	;'4'
  2433  00FC5D  66                 	db	102	;'f'
  2434  00FC5E  20                 	db	32
  2435  00FC5F  20                 	db	32
  2436  00FC60  20                 	db	32
  2437  00FC61  20                 	db	32
  2438  00FC62  20                 	db	32
  2439  00FC63  20                 	db	32
  2440  00FC64  20                 	db	32
  2441  00FC65  20                 	db	32
  2442  00FC66  20                 	db	32
  2443  00FC67  20                 	db	32
  2444  00FC68  20                 	db	32
  2445  00FC69  00                 	db	0
  2446  00FC6A                     STR_18:
  2447                           
  2448                           ; BSR set to: 57
  2449  00FC6A  52                 	db	82	;'R'
  2450  00FC6B  32                 	db	50	;'2'
  2451  00FC6C  20                 	db	32
  2452  00FC6D  25                 	db	37
  2453  00FC6E  32                 	db	50	;'2'
  2454  00FC6F  2E                 	db	46
  2455  00FC70  33                 	db	51	;'3'
  2456  00FC71  66                 	db	102	;'f'
  2457  00FC72  20                 	db	32
  2458  00FC73  25                 	db	37
  2459  00FC74  33                 	db	51	;'3'
  2460  00FC75  2E                 	db	46
  2461  00FC76  34                 	db	52	;'4'
  2462  00FC77  66                 	db	102	;'f'
  2463  00FC78  20                 	db	32
  2464  00FC79  20                 	db	32
  2465  00FC7A  20                 	db	32
  2466  00FC7B  20                 	db	32
  2467  00FC7C  20                 	db	32
  2468  00FC7D  20                 	db	32
  2469  00FC7E  20                 	db	32
  2470  00FC7F  20                 	db	32
  2471  00FC80  20                 	db	32
  2472  00FC81  20                 	db	32
  2473  00FC82  20                 	db	32
  2474  00FC83  00                 	db	0
  2475  00FC84                     STR_9:
  2476                           
  2477                           ; BSR set to: 57
  2478  00FC84  53                 	db	83	;'S'
  2479  00FC85  20                 	db	32
  2480  00FC86  53                 	db	83	;'S'
  2481  00FC87  25                 	db	37
  2482  00FC88  63                 	db	99	;'c'
  2483  00FC89  43                 	db	67	;'C'
  2484  00FC8A  20                 	db	32
  2485  00FC8B  25                 	db	37
  2486  00FC8C  64                 	db	100	;'d'
  2487  00FC8D  20                 	db	32
  2488  00FC8E  25                 	db	37
  2489  00FC8F  32                 	db	50	;'2'
  2490  00FC90  2E                 	db	46
  2491  00FC91  34                 	db	52	;'4'
  2492  00FC92  66                 	db	102	;'f'
  2493  00FC93  20                 	db	32
  2494  00FC94  20                 	db	32
  2495  00FC95  20                 	db	32
  2496  00FC96  20                 	db	32
  2497  00FC97  20                 	db	32
  2498  00FC98  20                 	db	32
  2499  00FC99  20                 	db	32
  2500  00FC9A  20                 	db	32
  2501  00FC9B  20                 	db	32
  2502  00FC9C  20                 	db	32
  2503  00FC9D  00                 	db	0
  2504  00FC9E                     
  2505                           ; BSR set to: 57
  2506  00FC9E  20                 	db	32
  2507  00FC9F  4D                 	db	77	;'M'
  2508  00FCA0  65                 	db	101	;'e'
  2509  00FCA1  73                 	db	115	;'s'
  2510  00FCA2  67                 	db	103	;'g'
  2511  00FCA3  20                 	db	32
  2512  00FCA4  25                 	db	37
  2513  00FCA5  64                 	db	100	;'d'
  2514  00FCA6  20                 	db	32
  2515  00FCA7  53                 	db	83	;'S'
  2516  00FCA8  74                 	db	116	;'t'
  2517  00FCA9  61                 	db	97	;'a'
  2518  00FCAA  63                 	db	99	;'c'
  2519  00FCAB  6B                 	db	107	;'k'
  2520  00FCAC  20                 	db	32
  2521  00FCAD  25                 	db	37
  2522  00FCAE  64                 	db	100	;'d'
  2523  00FCAF  20                 	db	32
  2524  00FCB0  20                 	db	32
  2525  00FCB1  20                 	db	32
  2526  00FCB2  20                 	db	32
  2527  00FCB3  20                 	db	32
  2528  00FCB4  20                 	db	32
  2529  00FCB5  00                 	db	0
  2530  00FCB6                     STR_37:
  2531                           
  2532                           ; BSR set to: 57
  2533  00FCB6  45                 	db	69	;'E'
  2534  00FCB7  53                 	db	83	;'S'
  2535  00FCB8  52                 	db	82	;'R'
  2536  00FCB9  20                 	db	32
  2537  00FCBA  20                 	db	32
  2538  00FCBB  25                 	db	37
  2539  00FCBC  32                 	db	50	;'2'
  2540  00FCBD  2E                 	db	46
  2541  00FCBE  36                 	db	54	;'6'
  2542  00FCBF  66                 	db	102	;'f'
  2543  00FCC0  20                 	db	32
  2544  00FCC1  20                 	db	32
  2545  00FCC2  20                 	db	32
  2546  00FCC3  20                 	db	32
  2547  00FCC4  20                 	db	32
  2548  00FCC5  20                 	db	32
  2549  00FCC6  20                 	db	32
  2550  00FCC7  20                 	db	32
  2551  00FCC8  20                 	db	32
  2552  00FCC9  20                 	db	32
  2553  00FCCA  20                 	db	32
  2554  00FCCB  20                 	db	32
  2555  00FCCC  00                 	db	0
  2556  00FCCD                     STR_36:
  2557                           
  2558                           ; BSR set to: 57
  2559  00FCCD  53                 	db	83	;'S'
  2560  00FCCE  25                 	db	37
  2561  00FCCF  63                 	db	99	;'c'
  2562  00FCD0  43                 	db	67	;'C'
  2563  00FCD1  20                 	db	32
  2564  00FCD2  25                 	db	37
  2565  00FCD3  64                 	db	100	;'d'
  2566  00FCD4  20                 	db	32
  2567  00FCD5  52                 	db	82	;'R'
  2568  00FCD6  55                 	db	85	;'U'
  2569  00FCD7  4E                 	db	78	;'N'
  2570  00FCD8  20                 	db	32
  2571  00FCD9  25                 	db	37
  2572  00FCDA  64                 	db	100	;'d'
  2573  00FCDB  20                 	db	32
  2574  00FCDC  20                 	db	32
  2575  00FCDD  20                 	db	32
  2576  00FCDE  20                 	db	32
  2577  00FCDF  20                 	db	32
  2578  00FCE0  20                 	db	32
  2579  00FCE1  20                 	db	32
  2580  00FCE2  20                 	db	32
  2581  00FCE3  00                 	db	0
  2582  00FCE4                     STR_34:
  2583                           
  2584                           ; BSR set to: 57
  2585  00FCE4  42                 	db	66	;'B'
  2586  00FCE5  41                 	db	65	;'A'
  2587  00FCE6  54                 	db	84	;'T'
  2588  00FCE7  54                 	db	84	;'T'
  2589  00FCE8  20                 	db	32
  2590  00FCE9  50                 	db	80	;'P'
  2591  00FCEA  57                 	db	87	;'W'
  2592  00FCEB  52                 	db	82	;'R'
  2593  00FCEC  20                 	db	32
  2594  00FCED  25                 	db	37
  2595  00FCEE  33                 	db	51	;'3'
  2596  00FCEF  2E                 	db	46
  2597  00FCF0  32                 	db	50	;'2'
  2598  00FCF1  66                 	db	102	;'f'
  2599  00FCF2  20                 	db	32
  2600  00FCF3  20                 	db	32
  2601  00FCF4  20                 	db	32
  2602  00FCF5  20                 	db	32
  2603  00FCF6  20                 	db	32
  2604  00FCF7  20                 	db	32
  2605  00FCF8  20                 	db	32
  2606  00FCF9  20                 	db	32
  2607  00FCFA  00                 	db	0
  2608  00FCFB                     STR_38:
  2609                           
  2610                           ; BSR set to: 57
  2611  00FCFB  52                 	db	82	;'R'
  2612  00FCFC  31                 	db	49	;'1'
  2613  00FCFD  20                 	db	32
  2614  00FCFE  25                 	db	37
  2615  00FCFF  32                 	db	50	;'2'
  2616  00FD00  2E                 	db	46
  2617  00FD01  33                 	db	51	;'3'
  2618  00FD02  66                 	db	102	;'f'
  2619  00FD03  20                 	db	32
  2620  00FD04  25                 	db	37
  2621  00FD05  33                 	db	51	;'3'
  2622  00FD06  2E                 	db	46
  2623  00FD07  34                 	db	52	;'4'
  2624  00FD08  66                 	db	102	;'f'
  2625  00FD09  20                 	db	32
  2626  00FD0A  20                 	db	32
  2627  00FD0B  20                 	db	32
  2628  00FD0C  20                 	db	32
  2629  00FD0D  20                 	db	32
  2630  00FD0E  20                 	db	32
  2631  00FD0F  20                 	db	32
  2632  00FD10  20                 	db	32
  2633  00FD11  00                 	db	0
  2634  00FD12                     STR_39:
  2635                           
  2636                           ; BSR set to: 57
  2637  00FD12  52                 	db	82	;'R'
  2638  00FD13  32                 	db	50	;'2'
  2639  00FD14  20                 	db	32
  2640  00FD15  25                 	db	37
  2641  00FD16  32                 	db	50	;'2'
  2642  00FD17  2E                 	db	46
  2643  00FD18  33                 	db	51	;'3'
  2644  00FD19  66                 	db	102	;'f'
  2645  00FD1A  20                 	db	32
  2646  00FD1B  25                 	db	37
  2647  00FD1C  33                 	db	51	;'3'
  2648  00FD1D  2E                 	db	46
  2649  00FD1E  34                 	db	52	;'4'
  2650  00FD1F  66                 	db	102	;'f'
  2651  00FD20  20                 	db	32
  2652  00FD21  20                 	db	32
  2653  00FD22  20                 	db	32
  2654  00FD23  20                 	db	32
  2655  00FD24  20                 	db	32
  2656  00FD25  20                 	db	32
  2657  00FD26  20                 	db	32
  2658  00FD27  20                 	db	32
  2659  00FD28  00                 	db	0
  2660  00FD29                     STR_35:
  2661                           
  2662                           ; BSR set to: 57
  2663  00FD29  42                 	db	66	;'B'
  2664  00FD2A  41                 	db	65	;'A'
  2665  00FD2B  48                 	db	72	;'H'
  2666  00FD2C  20                 	db	32
  2667  00FD2D  25                 	db	37
  2668  00FD2E  33                 	db	51	;'3'
  2669  00FD2F  2E                 	db	46
  2670  00FD30  32                 	db	50	;'2'
  2671  00FD31  66                 	db	102	;'f'
  2672  00FD32  20                 	db	32
  2673  00FD33  50                 	db	80	;'P'
  2674  00FD34  25                 	db	37
  2675  00FD35  33                 	db	51	;'3'
  2676  00FD36  2E                 	db	46
  2677  00FD37  32                 	db	50	;'2'
  2678  00FD38  66                 	db	102	;'f'
  2679  00FD39  20                 	db	32
  2680  00FD3A  20                 	db	32
  2681  00FD3B  20                 	db	32
  2682  00FD3C  20                 	db	32
  2683  00FD3D  20                 	db	32
  2684  00FD3E  20                 	db	32
  2685  00FD3F  00                 	db	0
  2686  00FD40                     STR_16:
  2687                           
  2688                           ; BSR set to: 57
  2689  00FD40  45                 	db	69	;'E'
  2690  00FD41  53                 	db	83	;'S'
  2691  00FD42  52                 	db	82	;'R'
  2692  00FD43  20                 	db	32
  2693  00FD44  20                 	db	32
  2694  00FD45  25                 	db	37
  2695  00FD46  32                 	db	50	;'2'
  2696  00FD47  2E                 	db	46
  2697  00FD48  36                 	db	54	;'6'
  2698  00FD49  66                 	db	102	;'f'
  2699  00FD4A  20                 	db	32
  2700  00FD4B  20                 	db	32
  2701  00FD4C  20                 	db	32
  2702  00FD4D  20                 	db	32
  2703  00FD4E  20                 	db	32
  2704  00FD4F  20                 	db	32
  2705  00FD50  20                 	db	32
  2706  00FD51  20                 	db	32
  2707  00FD52  20                 	db	32
  2708  00FD53  20                 	db	32
  2709  00FD54  20                 	db	32
  2710  00FD55  00                 	db	0
  2711  00FD56                     STR_10:
  2712                           
  2713                           ; BSR set to: 57
  2714  00FD56  53                 	db	83	;'S'
  2715  00FD57  74                 	db	116	;'t'
  2716  00FD58  61                 	db	97	;'a'
  2717  00FD59  74                 	db	116	;'t'
  2718  00FD5A  69                 	db	105	;'i'
  2719  00FD5B  63                 	db	99	;'c'
  2720  00FD5C  20                 	db	32
  2721  00FD5D  53                 	db	83	;'S'
  2722  00FD5E  4F                 	db	79	;'O'
  2723  00FD5F  43                 	db	67	;'C'
  2724  00FD60  20                 	db	32
  2725  00FD61  25                 	db	37
  2726  00FD62  64                 	db	100	;'d'
  2727  00FD63  20                 	db	32
  2728  00FD64  20                 	db	32
  2729  00FD65  20                 	db	32
  2730  00FD66  20                 	db	32
  2731  00FD67  20                 	db	32
  2732  00FD68  20                 	db	32
  2733  00FD69  20                 	db	32
  2734  00FD6A  20                 	db	32
  2735  00FD6B  00                 	db	0
  2736  00FD6C                     STR_31:
  2737                           
  2738                           ; BSR set to: 57
  2739  00FD6C  42                 	db	66	;'B'
  2740  00FD6D  41                 	db	65	;'A'
  2741  00FD6E  54                 	db	84	;'T'
  2742  00FD6F  20                 	db	32
  2743  00FD70  49                 	db	73	;'I'
  2744  00FD71  57                 	db	87	;'W'
  2745  00FD72  48                 	db	72	;'H'
  2746  00FD73  20                 	db	32
  2747  00FD74  25                 	db	37
  2748  00FD75  34                 	db	52	;'4'
  2749  00FD76  2E                 	db	46
  2750  00FD77  31                 	db	49	;'1'
  2751  00FD78  66                 	db	102	;'f'
  2752  00FD79  20                 	db	32
  2753  00FD7A  20                 	db	32
  2754  00FD7B  20                 	db	32
  2755  00FD7C  20                 	db	32
  2756  00FD7D  20                 	db	32
  2757  00FD7E  20                 	db	32
  2758  00FD7F  20                 	db	32
  2759  00FD80  20                 	db	32
  2760  00FD81  00                 	db	0
  2761  00FD82                     STR_32:
  2762                           
  2763                           ; BSR set to: 57
  2764  00FD82  42                 	db	66	;'B'
  2765  00FD83  41                 	db	65	;'A'
  2766  00FD84  54                 	db	84	;'T'
  2767  00FD85  20                 	db	32
  2768  00FD86  4F                 	db	79	;'O'
  2769  00FD87  57                 	db	87	;'W'
  2770  00FD88  48                 	db	72	;'H'
  2771  00FD89  20                 	db	32
  2772  00FD8A  25                 	db	37
  2773  00FD8B  34                 	db	52	;'4'
  2774  00FD8C  2E                 	db	46
  2775  00FD8D  31                 	db	49	;'1'
  2776  00FD8E  66                 	db	102	;'f'
  2777  00FD8F  20                 	db	32
  2778  00FD90  20                 	db	32
  2779  00FD91  20                 	db	32
  2780  00FD92  20                 	db	32
  2781  00FD93  20                 	db	32
  2782  00FD94  20                 	db	32
  2783  00FD95  20                 	db	32
  2784  00FD96  20                 	db	32
  2785  00FD97  00                 	db	0
  2786  00FD98                     STR_33:
  2787                           
  2788                           ; BSR set to: 57
  2789  00FD98  42                 	db	66	;'B'
  2790  00FD99  41                 	db	65	;'A'
  2791  00FD9A  54                 	db	84	;'T'
  2792  00FD9B  20                 	db	32
  2793  00FD9C  54                 	db	84	;'T'
  2794  00FD9D  57                 	db	87	;'W'
  2795  00FD9E  48                 	db	72	;'H'
  2796  00FD9F  20                 	db	32
  2797  00FDA0  25                 	db	37
  2798  00FDA1  34                 	db	52	;'4'
  2799  00FDA2  2E                 	db	46
  2800  00FDA3  31                 	db	49	;'1'
  2801  00FDA4  66                 	db	102	;'f'
  2802  00FDA5  20                 	db	32
  2803  00FDA6  20                 	db	32
  2804  00FDA7  20                 	db	32
  2805  00FDA8  20                 	db	32
  2806  00FDA9  20                 	db	32
  2807  00FDAA  20                 	db	32
  2808  00FDAB  20                 	db	32
  2809  00FDAC  20                 	db	32
  2810  00FDAD  00                 	db	0
  2811  00FDAE                     STR_27:
  2812                           
  2813                           ; BSR set to: 57
  2814  00FDAE  49                 	db	73	;'I'
  2815  00FDAF  4E                 	db	78	;'N'
  2816  00FDB0  56                 	db	86	;'V'
  2817  00FDB1  20                 	db	32
  2818  00FDB2  20                 	db	32
  2819  00FDB3  57                 	db	87	;'W'
  2820  00FDB4  48                 	db	72	;'H'
  2821  00FDB5  20                 	db	32
  2822  00FDB6  25                 	db	37
  2823  00FDB7  33                 	db	51	;'3'
  2824  00FDB8  2E                 	db	46
  2825  00FDB9  32                 	db	50	;'2'
  2826  00FDBA  66                 	db	102	;'f'
  2827  00FDBB  20                 	db	32
  2828  00FDBC  20                 	db	32
  2829  00FDBD  20                 	db	32
  2830  00FDBE  20                 	db	32
  2831  00FDBF  20                 	db	32
  2832  00FDC0  20                 	db	32
  2833  00FDC1  20                 	db	32
  2834  00FDC2  20                 	db	32
  2835  00FDC3  00                 	db	0
  2836  00FDC4                     STR_26:
  2837                           
  2838                           ; BSR set to: 57
  2839  00FDC4  4C                 	db	76	;'L'
  2840  00FDC5  4F                 	db	79	;'O'
  2841  00FDC6  41                 	db	65	;'A'
  2842  00FDC7  44                 	db	68	;'D'
  2843  00FDC8  20                 	db	32
  2844  00FDC9  57                 	db	87	;'W'
  2845  00FDCA  48                 	db	72	;'H'
  2846  00FDCB  20                 	db	32
  2847  00FDCC  25                 	db	37
  2848  00FDCD  33                 	db	51	;'3'
  2849  00FDCE  2E                 	db	46
  2850  00FDCF  32                 	db	50	;'2'
  2851  00FDD0  66                 	db	102	;'f'
  2852  00FDD1  20                 	db	32
  2853  00FDD2  20                 	db	32
  2854  00FDD3  20                 	db	32
  2855  00FDD4  20                 	db	32
  2856  00FDD5  20                 	db	32
  2857  00FDD6  20                 	db	32
  2858  00FDD7  20                 	db	32
  2859  00FDD8  20                 	db	32
  2860  00FDD9  00                 	db	0
  2861  00FDDA                     STR_25:
  2862                           
  2863                           ; BSR set to: 57
  2864  00FDDA  50                 	db	80	;'P'
  2865  00FDDB  56                 	db	86	;'V'
  2866  00FDDC  20                 	db	32
  2867  00FDDD  25                 	db	37
  2868  00FDDE  63                 	db	99	;'c'
  2869  00FDDF  20                 	db	32
  2870  00FDE0  57                 	db	87	;'W'
  2871  00FDE1  48                 	db	72	;'H'
  2872  00FDE2  20                 	db	32
  2873  00FDE3  25                 	db	37
  2874  00FDE4  33                 	db	51	;'3'
  2875  00FDE5  2E                 	db	46
  2876  00FDE6  32                 	db	50	;'2'
  2877  00FDE7  66                 	db	102	;'f'
  2878  00FDE8  20                 	db	32
  2879  00FDE9  20                 	db	32
  2880  00FDEA  20                 	db	32
  2881  00FDEB  20                 	db	32
  2882  00FDEC  20                 	db	32
  2883  00FDED  20                 	db	32
  2884  00FDEE  20                 	db	32
  2885  00FDEF  00                 	db	0
  2886  00FDF0                     STR_24:
  2887                           
  2888                           ; BSR set to: 57
  2889  00FDF0  49                 	db	73	;'I'
  2890  00FDF1  4E                 	db	78	;'N'
  2891  00FDF2  56                 	db	86	;'V'
  2892  00FDF3  20                 	db	32
  2893  00FDF4  20                 	db	32
  2894  00FDF5  50                 	db	80	;'P'
  2895  00FDF6  57                 	db	87	;'W'
  2896  00FDF7  52                 	db	82	;'R'
  2897  00FDF8  20                 	db	32
  2898  00FDF9  25                 	db	37
  2899  00FDFA  33                 	db	51	;'3'
  2900  00FDFB  2E                 	db	46
  2901  00FDFC  32                 	db	50	;'2'
  2902  00FDFD  66                 	db	102	;'f'
  2903  00FDFE  20                 	db	32
  2904  00FDFF  20                 	db	32
  2905  00FE00  20                 	db	32
  2906  00FE01  20                 	db	32
  2907  00FE02  20                 	db	32
  2908  00FE03  20                 	db	32
  2909  00FE04  20                 	db	32
  2910  00FE05  00                 	db	0
  2911  00FE06                     STR_23:
  2912                           
  2913                           ; BSR set to: 57
  2914  00FE06  4C                 	db	76	;'L'
  2915  00FE07  4F                 	db	79	;'O'
  2916  00FE08  41                 	db	65	;'A'
  2917  00FE09  44                 	db	68	;'D'
  2918  00FE0A  20                 	db	32
  2919  00FE0B  50                 	db	80	;'P'
  2920  00FE0C  57                 	db	87	;'W'
  2921  00FE0D  52                 	db	82	;'R'
  2922  00FE0E  20                 	db	32
  2923  00FE0F  25                 	db	37
  2924  00FE10  33                 	db	51	;'3'
  2925  00FE11  2E                 	db	46
  2926  00FE12  32                 	db	50	;'2'
  2927  00FE13  66                 	db	102	;'f'
  2928  00FE14  20                 	db	32
  2929  00FE15  20                 	db	32
  2930  00FE16  20                 	db	32
  2931  00FE17  20                 	db	32
  2932  00FE18  20                 	db	32
  2933  00FE19  20                 	db	32
  2934  00FE1A  20                 	db	32
  2935  00FE1B  00                 	db	0
  2936  00FE1C                     STR_22:
  2937                           
  2938                           ; BSR set to: 57
  2939  00FE1C  50                 	db	80	;'P'
  2940  00FE1D  56                 	db	86	;'V'
  2941  00FE1E  20                 	db	32
  2942  00FE1F  25                 	db	37
  2943  00FE20  63                 	db	99	;'c'
  2944  00FE21  20                 	db	32
  2945  00FE22  50                 	db	80	;'P'
  2946  00FE23  57                 	db	87	;'W'
  2947  00FE24  52                 	db	82	;'R'
  2948  00FE25  20                 	db	32
  2949  00FE26  25                 	db	37
  2950  00FE27  33                 	db	51	;'3'
  2951  00FE28  2E                 	db	46
  2952  00FE29  32                 	db	50	;'2'
  2953  00FE2A  66                 	db	102	;'f'
  2954  00FE2B  20                 	db	32
  2955  00FE2C  20                 	db	32
  2956  00FE2D  20                 	db	32
  2957  00FE2E  20                 	db	32
  2958  00FE2F  20                 	db	32
  2959  00FE30  20                 	db	32
  2960  00FE31  00                 	db	0
  2961  00FE32                     STR_11:
  2962                           
  2963                           ; BSR set to: 57
  2964  00FE32  42                 	db	66	;'B'
  2965  00FE33  61                 	db	97	;'a'
  2966  00FE34  74                 	db	116	;'t'
  2967  00FE35  74                 	db	116	;'t'
  2968  00FE36  65                 	db	101	;'e'
  2969  00FE37  72                 	db	114	;'r'
  2970  00FE38  79                 	db	121	;'y'
  2971  00FE39  20                 	db	32
  2972  00FE3A  41                 	db	65	;'A'
  2973  00FE3B  68                 	db	104	;'h'
  2974  00FE3C  20                 	db	32
  2975  00FE3D  25                 	db	37
  2976  00FE3E  33                 	db	51	;'3'
  2977  00FE3F  2E                 	db	46
  2978  00FE40  32                 	db	50	;'2'
  2979  00FE41  66                 	db	102	;'f'
  2980  00FE42  20                 	db	32
  2981  00FE43  20                 	db	32
  2982  00FE44  20                 	db	32
  2983  00FE45  20                 	db	32
  2984  00FE46  20                 	db	32
  2985  00FE47  00                 	db	0
  2986  00FE48                     STR_29:
  2987                           
  2988                           ; BSR set to: 57
  2989  00FE48  42                 	db	66	;'B'
  2990  00FE49  56                 	db	86	;'V'
  2991  00FE4A  20                 	db	32
  2992  00FE4B  25                 	db	37
  2993  00FE4C  32                 	db	50	;'2'
  2994  00FE4D  2E                 	db	46
  2995  00FE4E  32                 	db	50	;'2'
  2996  00FE4F  66                 	db	102	;'f'
  2997  00FE50  20                 	db	32
  2998  00FE51  42                 	db	66	;'B'
  2999  00FE52  41                 	db	65	;'A'
  3000  00FE53  20                 	db	32
  3001  00FE54  25                 	db	37
  3002  00FE55  32                 	db	50	;'2'
  3003  00FE56  2E                 	db	46
  3004  00FE57  32                 	db	50	;'2'
  3005  00FE58  66                 	db	102	;'f'
  3006  00FE59  20                 	db	32
  3007  00FE5A  20                 	db	32
  3008  00FE5B  20                 	db	32
  3009  00FE5C  20                 	db	32
  3010  00FE5D  00                 	db	0
  3011  00FE5E                     STR_30:
  3012                           
  3013                           ; BSR set to: 57
  3014  00FE5E  43                 	db	67	;'C'
  3015  00FE5F  56                 	db	86	;'V'
  3016  00FE60  20                 	db	32
  3017  00FE61  25                 	db	37
  3018  00FE62  32                 	db	50	;'2'
  3019  00FE63  2E                 	db	46
  3020  00FE64  32                 	db	50	;'2'
  3021  00FE65  66                 	db	102	;'f'
  3022  00FE66  20                 	db	32
  3023  00FE67  4C                 	db	76	;'L'
  3024  00FE68  41                 	db	65	;'A'
  3025  00FE69  20                 	db	32
  3026  00FE6A  25                 	db	37
  3027  00FE6B  32                 	db	50	;'2'
  3028  00FE6C  2E                 	db	46
  3029  00FE6D  32                 	db	50	;'2'
  3030  00FE6E  66                 	db	102	;'f'
  3031  00FE6F  20                 	db	32
  3032  00FE70  20                 	db	32
  3033  00FE71  20                 	db	32
  3034  00FE72  20                 	db	32
  3035  00FE73  00                 	db	0
  3036  00FE74                     STR_28:
  3037                           
  3038                           ; BSR set to: 57
  3039  00FE74  50                 	db	80	;'P'
  3040  00FE75  56                 	db	86	;'V'
  3041  00FE76  20                 	db	32
  3042  00FE77  25                 	db	37
  3043  00FE78  32                 	db	50	;'2'
  3044  00FE79  2E                 	db	46
  3045  00FE7A  32                 	db	50	;'2'
  3046  00FE7B  66                 	db	102	;'f'
  3047  00FE7C  20                 	db	32
  3048  00FE7D  50                 	db	80	;'P'
  3049  00FE7E  41                 	db	65	;'A'
  3050  00FE7F  20                 	db	32
  3051  00FE80  25                 	db	37
  3052  00FE81  32                 	db	50	;'2'
  3053  00FE82  2E                 	db	46
  3054  00FE83  32                 	db	50	;'2'
  3055  00FE84  66                 	db	102	;'f'
  3056  00FE85  20                 	db	32
  3057  00FE86  20                 	db	32
  3058  00FE87  20                 	db	32
  3059  00FE88  20                 	db	32
  3060  00FE89  00                 	db	0
  3061  00FE8A                     STR_40:
  3062                           
  3063                           ; BSR set to: 57
  3064  00FE8A  25                 	db	37
  3065  00FE8B  64                 	db	100	;'d'
  3066  00FE8C  20                 	db	32
  3067  00FE8D  25                 	db	37
  3068  00FE8E  32                 	db	50	;'2'
  3069  00FE8F  2E                 	db	46
  3070  00FE90  34                 	db	52	;'4'
  3071  00FE91  66                 	db	102	;'f'
  3072  00FE92  2C                 	db	44
  3073  00FE93  20                 	db	32
  3074  00FE94  25                 	db	37
  3075  00FE95  64                 	db	100	;'d'
  3076  00FE96  20                 	db	32
  3077  00FE97  20                 	db	32
  3078  00FE98  54                 	db	84	;'T'
  3079  00FE99  52                 	db	82	;'R'
  3080  00FE9A  49                 	db	73	;'I'
  3081  00FE9B  4D                 	db	77	;'M'
  3082  00FE9C  20                 	db	32
  3083  00FE9D  20                 	db	32
  3084  00FE9E  20                 	db	32
  3085  00FE9F  00                 	db	0
  3086  00FEA0                     STR_5:
  3087                           
  3088                           ; BSR set to: 57
  3089  00FEA0  20                 	db	32
  3090  00FEA1  20                 	db	32
  3091  00FEA2  20                 	db	32
  3092  00FEA3  20                 	db	32
  3093  00FEA4  20                 	db	32
  3094  00FEA5  20                 	db	32
  3095  00FEA6  20                 	db	32
  3096  00FEA7  20                 	db	32
  3097  00FEA8  20                 	db	32
  3098  00FEA9  20                 	db	32
  3099  00FEAA  20                 	db	32
  3100  00FEAB  20                 	db	32
  3101  00FEAC  20                 	db	32
  3102  00FEAD  20                 	db	32
  3103  00FEAE  20                 	db	32
  3104  00FEAF  20                 	db	32
  3105  00FEB0  20                 	db	32
  3106  00FEB1  20                 	db	32
  3107  00FEB2  20                 	db	32
  3108  00FEB3  20                 	db	32
  3109  00FEB4  00                 	db	0
  3110  00FEB5                     STR_8:
  3111                           
  3112                           ; BSR set to: 57
  3113  00FEB5  42                 	db	66	;'B'
  3114  00FEB6  56                 	db	86	;'V'
  3115  00FEB7  20                 	db	32
  3116  00FEB8  25                 	db	37
  3117  00FEB9  32                 	db	50	;'2'
  3118  00FEBA  2E                 	db	46
  3119  00FEBB  34                 	db	52	;'4'
  3120  00FEBC  66                 	db	102	;'f'
  3121  00FEBD  20                 	db	32
  3122  00FEBE  20                 	db	32
  3123  00FEBF  20                 	db	32
  3124  00FEC0  20                 	db	32
  3125  00FEC1  20                 	db	32
  3126  00FEC2  20                 	db	32
  3127  00FEC3  20                 	db	32
  3128  00FEC4  20                 	db	32
  3129  00FEC5  20                 	db	32
  3130  00FEC6  20                 	db	32
  3131  00FEC7  20                 	db	32
  3132  00FEC8  20                 	db	32
  3133  00FEC9  00                 	db	0
  3134  00FECA                     STR_4:
  3135                           
  3136                           ; BSR set to: 57
  3137  00FECA  20                 	db	32
  3138  00FECB  4E                 	db	78	;'N'
  3139  00FECC  53                 	db	83	;'S'
  3140  00FECD  41                 	db	65	;'A'
  3141  00FECE  53                 	db	83	;'S'
  3142  00FECF  50                 	db	80	;'P'
  3143  00FED0  4F                 	db	79	;'O'
  3144  00FED1  4F                 	db	79	;'O'
  3145  00FED2  4B                 	db	75	;'K'
  3146  00FED3  20                 	db	32
  3147  00FED4  20                 	db	32
  3148  00FED5  20                 	db	32
  3149  00FED6  20                 	db	32
  3150  00FED7  20                 	db	32
  3151  00FED8  20                 	db	32
  3152  00FED9  20                 	db	32
  3153  00FEDA  20                 	db	32
  3154  00FEDB  20                 	db	32
  3155  00FEDC  20                 	db	32
  3156  00FEDD  20                 	db	32
  3157  00FEDE  00                 	db	0
  3158  00FEDF                     STR_12:
  3159                           
  3160                           ; BSR set to: 57
  3161  00FEDF  42                 	db	66	;'B'
  3162  00FEE0  61                 	db	97	;'a'
  3163  00FEE1  74                 	db	116	;'t'
  3164  00FEE2  74                 	db	116	;'t'
  3165  00FEE3  65                 	db	101	;'e'
  3166  00FEE4  72                 	db	114	;'r'
  3167  00FEE5  79                 	db	121	;'y'
  3168  00FEE6  20                 	db	32
  3169  00FEE7  45                 	db	69	;'E'
  3170  00FEE8  53                 	db	83	;'S'
  3171  00FEE9  52                 	db	82	;'R'
  3172  00FEEA  20                 	db	32
  3173  00FEEB  20                 	db	32
  3174  00FEEC  20                 	db	32
  3175  00FEED  20                 	db	32
  3176  00FEEE  20                 	db	32
  3177  00FEEF  20                 	db	32
  3178  00FEF0  20                 	db	32
  3179  00FEF1  20                 	db	32
  3180  00FEF2  20                 	db	32
  3181  00FEF3  00                 	db	0
  3182  00FEF4                     STR_13:
  3183                           
  3184                           ; BSR set to: 57
  3185  00FEF4  43                 	db	67	;'C'
  3186  00FEF5  61                 	db	97	;'a'
  3187  00FEF6  6C                 	db	108	;'l'
  3188  00FEF7  63                 	db	99	;'c'
  3189  00FEF8  75                 	db	117	;'u'
  3190  00FEF9  6C                 	db	108	;'l'
  3191  00FEFA  61                 	db	97	;'a'
  3192  00FEFB  74                 	db	116	;'t'
  3193  00FEFC  69                 	db	105	;'i'
  3194  00FEFD  6F                 	db	111	;'o'
  3195  00FEFE  6E                 	db	110	;'n'
  3196  00FEFF  20                 	db	32
  3197  00FF00  20                 	db	32
  3198  00FF01  20                 	db	32
  3199  00FF02  20                 	db	32
  3200  00FF03  20                 	db	32
  3201  00FF04  20                 	db	32
  3202  00FF05  20                 	db	32
  3203  00FF06  20                 	db	32
  3204  00FF07  20                 	db	32
  3205  00FF08  00                 	db	0
  3206  00FF09                     STR_2:
  3207                           
  3208                           ; BSR set to: 57
  3209  00FF09  20                 	db	32
  3210  00FF0A  56                 	db	86	;'V'
  3211  00FF0B  65                 	db	101	;'e'
  3212  00FF0C  72                 	db	114	;'r'
  3213  00FF0D  73                 	db	115	;'s'
  3214  00FF0E  69                 	db	105	;'i'
  3215  00FF0F  6F                 	db	111	;'o'
  3216  00FF10  6E                 	db	110	;'n'
  3217  00FF11  20                 	db	32
  3218  00FF12  25                 	db	37
  3219  00FF13  73                 	db	115	;'s'
  3220  00FF14  20                 	db	32
  3221  00FF15  20                 	db	32
  3222  00FF16  20                 	db	32
  3223  00FF17  20                 	db	32
  3224  00FF18  20                 	db	32
  3225  00FF19  20                 	db	32
  3226  00FF1A  20                 	db	32
  3227  00FF1B  20                 	db	32
  3228  00FF1C  20                 	db	32
  3229  00FF1D  00                 	db	0
  3230  00FF1E                     STR_1:
  3231                           
  3232                           ; BSR set to: 57
  3233  00FF1E  20                 	db	32
  3234  00FF1F  4D                 	db	77	;'M'
  3235  00FF20  42                 	db	66	;'B'
  3236  00FF21  4D                 	db	77	;'M'
  3237  00FF22  43                 	db	67	;'C'
  3238  00FF23  20                 	db	32
  3239  00FF24  53                 	db	83	;'S'
  3240  00FF25  4F                 	db	79	;'O'
  3241  00FF26  4C                 	db	76	;'L'
  3242  00FF27  41                 	db	65	;'A'
  3243  00FF28  52                 	db	82	;'R'
  3244  00FF29  4D                 	db	77	;'M'
  3245  00FF2A  4F                 	db	79	;'O'
  3246  00FF2B  4E                 	db	78	;'N'
  3247  00FF2C  20                 	db	32
  3248  00FF2D  20                 	db	32
  3249  00FF2E  20                 	db	32
  3250  00FF2F  20                 	db	32
  3251  00FF30  20                 	db	32
  3252  00FF31  20                 	db	32
  3253  00FF32  00                 	db	0
  3254  00FF33                     STR_15:
  3255                           
  3256                           ; BSR set to: 57
  3257  00FF33  43                 	db	67	;'C'
  3258  00FF34  68                 	db	104	;'h'
  3259  00FF35  65                 	db	101	;'e'
  3260  00FF36  63                 	db	99	;'c'
  3261  00FF37  6B                 	db	107	;'k'
  3262  00FF38  69                 	db	105	;'i'
  3263  00FF39  6E                 	db	110	;'n'
  3264  00FF3A  67                 	db	103	;'g'
  3265  00FF3B  20                 	db	32
  3266  00FF3C  25                 	db	37
  3267  00FF3D  63                 	db	99	;'c'
  3268  00FF3E  20                 	db	32
  3269  00FF3F  25                 	db	37
  3270  00FF40  63                 	db	99	;'c'
  3271  00FF41  20                 	db	32
  3272  00FF42  20                 	db	32
  3273  00FF43  20                 	db	32
  3274  00FF44  20                 	db	32
  3275  00FF45  20                 	db	32
  3276  00FF46  20                 	db	32
  3277  00FF47  00                 	db	0
  3278  00FF48                     STR_14:
  3279                           
  3280                           ; BSR set to: 57
  3281  00FF48  43                 	db	67	;'C'
  3282  00FF49  68                 	db	104	;'h'
  3283  00FF4A  65                 	db	101	;'e'
  3284  00FF4B  63                 	db	99	;'c'
  3285  00FF4C  6B                 	db	107	;'k'
  3286  00FF4D  20                 	db	32
  3287  00FF4E  33                 	db	51	;'3'
  3288  00FF4F  30                 	db	48	;'0'
  3289  00FF50  20                 	db	32
  3290  00FF51  73                 	db	115	;'s'
  3291  00FF52  65                 	db	101	;'e'
  3292  00FF53  63                 	db	99	;'c'
  3293  00FF54  6F                 	db	111	;'o'
  3294  00FF55  6E                 	db	110	;'n'
  3295  00FF56  64                 	db	100	;'d'
  3296  00FF57  73                 	db	115	;'s'
  3297  00FF58  20                 	db	32
  3298  00FF59  20                 	db	32
  3299  00FF5A  20                 	db	32
  3300  00FF5B  20                 	db	32
  3301  00FF5C  00                 	db	0
  3302  00FF5D                     STR_47:
  3303                           
  3304                           ; BSR set to: 57
  3305  00FF5D  48                 	db	72	;'H'
  3306  00FF5E  45                 	db	69	;'E'
  3307  00FF5F  4C                 	db	76	;'L'
  3308  00FF60  50                 	db	80	;'P'
  3309  00FF61  20                 	db	32
  3310  00FF62  25                 	db	37
  3311  00FF63  73                 	db	115	;'s'
  3312  00FF64  20                 	db	32
  3313  00FF65  20                 	db	32
  3314  00FF66  20                 	db	32
  3315  00FF67  20                 	db	32
  3316  00FF68  20                 	db	32
  3317  00FF69  20                 	db	32
  3318  00FF6A  20                 	db	32
  3319  00FF6B  20                 	db	32
  3320  00FF6C  20                 	db	32
  3321  00FF6D  20                 	db	32
  3322  00FF6E  20                 	db	32
  3323  00FF6F  00                 	db	0
  3324  00FF70                     
  3325                           ; BSR set to: 57
  3326  00FF70  44                 	db	68	;'D'
  3327  00FF71  49                 	db	73	;'I'
  3328  00FF72  53                 	db	83	;'S'
  3329  00FF73  50                 	db	80	;'P'
  3330  00FF74  4C                 	db	76	;'L'
  3331  00FF75  41                 	db	65	;'A'
  3332  00FF76  59                 	db	89	;'Y'
  3333  00FF77  20                 	db	32
  3334  00FF78  25                 	db	37
  3335  00FF79  73                 	db	115	;'s'
  3336  00FF7A  20                 	db	32
  3337  00FF7B  20                 	db	32
  3338  00FF7C  20                 	db	32
  3339  00FF7D  20                 	db	32
  3340  00FF7E  20                 	db	32
  3341  00FF7F  20                 	db	32
  3342  00FF80  20                 	db	32
  3343  00FF81  20                 	db	32
  3344  00FF82  00                 	db	0
  3345  00FF83                     
  3346                           ; BSR set to: 57
  3347  00FF83  25                 	db	37
  3348  00FF84  64                 	db	100	;'d'
  3349  00FF85  20                 	db	32
  3350  00FF86  25                 	db	37
  3351  00FF87  32                 	db	50	;'2'
  3352  00FF88  2E                 	db	46
  3353  00FF89  34                 	db	52	;'4'
  3354  00FF8A  66                 	db	102	;'f'
  3355  00FF8B  2C                 	db	44
  3356  00FF8C  20                 	db	32
  3357  00FF8D  25                 	db	37
  3358  00FF8E  64                 	db	100	;'d'
  3359  00FF8F  20                 	db	32
  3360  00FF90  20                 	db	32
  3361  00FF91  20                 	db	32
  3362  00FF92  23                 	db	35
  3363  00FF93  00                 	db	0
  3364  00FF94                     STR_19:
  3365                           
  3366                           ; BSR set to: 57
  3367  00FF94  25                 	db	37
  3368  00FF95  64                 	db	100	;'d'
  3369  00FF96  20                 	db	32
  3370  00FF97  25                 	db	37
  3371  00FF98  32                 	db	50	;'2'
  3372  00FF99  2E                 	db	46
  3373  00FF9A  34                 	db	52	;'4'
  3374  00FF9B  66                 	db	102	;'f'
  3375  00FF9C  20                 	db	32
  3376  00FF9D  20                 	db	32
  3377  00FF9E  20                 	db	32
  3378  00FF9F  25                 	db	37
  3379  00FFA0  64                 	db	100	;'d'
  3380  00FFA1  20                 	db	32
  3381  00FFA2  20                 	db	32
  3382  00FFA3  00                 	db	0
  3383  00FFA4                     STR_51:
  3384                           
  3385                           ; BSR set to: 57
  3386  00FFA4  76                 	db	118	;'v'
  3387  00FFA5  74                 	db	116	;'t'
  3388  00FFA6  65                 	db	101	;'e'
  3389  00FFA7  72                 	db	114	;'r'
  3390  00FFA8  6D                 	db	109	;'m'
  3391  00FFA9  20                 	db	32
  3392  00FFAA  25                 	db	37
  3393  00FFAB  78                 	db	120	;'x'
  3394  00FFAC  3A                 	db	58	;':'
  3395  00FFAD  25                 	db	37
  3396  00FFAE  78                 	db	120	;'x'
  3397  00FFAF  20                 	db	32
  3398  00FFB0  20                 	db	32
  3399  00FFB1  20                 	db	32
  3400  00FFB2  00                 	db	0
  3401  00FFB3                     STR_45:
  3402                           
  3403                           ; BSR set to: 57
  3404  00FFB3  4A                 	db	74	;'J'
  3405  00FFB4  61                 	db	97	;'a'
  3406  00FFB5  6E                 	db	110	;'n'
  3407  00FFB6  20                 	db	32
  3408  00FFB7  31                 	db	49	;'1'
  3409  00FFB8  34                 	db	52	;'4'
  3410  00FFB9  20                 	db	32
  3411  00FFBA  32                 	db	50	;'2'
  3412  00FFBB  30                 	db	48	;'0'
  3413  00FFBC  32                 	db	50	;'2'
  3414  00FFBD  30                 	db	48	;'0'
  3415  00FFBE  00                 	db	0
  3416  00FFBF                     STR_49:
  3417                           
  3418                           ; BSR set to: 57
  3419  00FFBF  25                 	db	37
  3420  00FFC0  73                 	db	115	;'s'
  3421  00FFC1  20                 	db	32
  3422  00FFC2  20                 	db	32
  3423  00FFC3  20                 	db	32
  3424  00FFC4  20                 	db	32
  3425  00FFC5  20                 	db	32
  3426  00FFC6  20                 	db	32
  3427  00FFC7  20                 	db	32
  3428  00FFC8  00                 	db	0
  3429  00FFC9                     STR_46:
  3430                           
  3431                           ; BSR set to: 57
  3432  00FFC9  31                 	db	49	;'1'
  3433  00FFCA  39                 	db	57	;'9'
  3434  00FFCB  3A                 	db	58	;':'
  3435  00FFCC  32                 	db	50	;'2'
  3436  00FFCD  36                 	db	54	;'6'
  3437  00FFCE  3A                 	db	58	;':'
  3438  00FFCF  34                 	db	52	;'4'
  3439  00FFD0  34                 	db	52	;'4'
  3440  00FFD1  00                 	db	0
  3441  00FFD2                     STR_3:
  3442                           
  3443                           ; BSR set to: 57
  3444  00FFD2  31                 	db	49	;'1'
  3445  00FFD3  2E                 	db	46
  3446  00FFD4  31                 	db	49	;'1'
  3447  00FFD5  30                 	db	48	;'0'
  3448  00FFD6  00                 	db	0
  3449  00FFD7                     STR_65:
  3450                           
  3451                           ; BSR set to: 57
  3452  00FFD7  49                 	db	73	;'I'
  3453  00FFD8  4E                 	db	78	;'N'
  3454  00FFD9  46                 	db	70	;'F'
  3455  00FFDA  00                 	db	0
  3456  00FFDB                     STR_69:
  3457                           
  3458                           ; BSR set to: 57
  3459  00FFDB  4E                 	db	78	;'N'
  3460  00FFDC  41                 	db	65	;'A'
  3461  00FFDD  4E                 	db	78	;'N'
  3462  00FFDE  00                 	db	0
  3463  00FFDF                     STR_66:
  3464                           
  3465                           ; BSR set to: 57
  3466  00FFDF  69                 	db	105	;'i'
  3467  00FFE0  6E                 	db	110	;'n'
  3468  00FFE1  66                 	db	102	;'f'
  3469  00FFE2  00                 	db	0
  3470  00FFE3                     STR_70:
  3471                           
  3472                           ; BSR set to: 57
  3473  00FFE3  6E                 	db	110	;'n'
  3474  00FFE4  61                 	db	97	;'a'
  3475  00FFE5  6E                 	db	110	;'n'
  3476  00FFE6  00                 	db	0
  3477  00FFE7                     STR_96:
  3478                           
  3479                           ; BSR set to: 57
  3480  00FFE7  6C                 	db	108	;'l'
  3481  00FFE8  58                 	db	88	;'X'
  3482  00FFE9  00                 	db	0
  3483  00FFEA                     STR_73:
  3484                           
  3485                           ; BSR set to: 57
  3486  00FFEA  6C                 	db	108	;'l'
  3487  00FFEB  64                 	db	100	;'d'
  3488  00FFEC  00                 	db	0
  3489  00FFED                     STR_82:
  3490                           
  3491                           ; BSR set to: 57
  3492  00FFED  6C                 	db	108	;'l'
  3493  00FFEE  66                 	db	102	;'f'
  3494  00FFEF  00                 	db	0
  3495  00FFF0                     STR_77:
  3496                           
  3497                           ; BSR set to: 57
  3498  00FFF0  6C                 	db	108	;'l'
  3499  00FFF1  69                 	db	105	;'i'
  3500  00FFF2  00                 	db	0
  3501  00FFF3                     STR_87:
  3502                           
  3503                           ; BSR set to: 57
  3504  00FFF3  6C                 	db	108	;'l'
  3505  00FFF4  75                 	db	117	;'u'
  3506  00FFF5  00                 	db	0
  3507  00FFF6                     STR_92:
  3508                           
  3509                           ; BSR set to: 57
  3510  00FFF6  6C                 	db	108	;'l'
  3511  00FFF7  78                 	db	120	;'x'
  3512  00FFF8  00                 	db	0
  3513  00FFF9                     STR_44:
  3514                           
  3515                           ; BSR set to: 57
  3516  00FFF9  25                 	db	37
  3517  00FFFA  63                 	db	99	;'c'
  3518  00FFFB  00                 	db	0
  3519  00FFFC                     STR_43:
  3520                           
  3521                           ; BSR set to: 57
  3522  00FFFC  25                 	db	37
  3523  00FFFD  73                 	db	115	;'s'
  3524  00FFFE  00                 	db	0
  3525  0000                     
  3526                           ; #config settings
  3527  00FFFF  00                 	db	0	; dummy byte at the end
  3528  0000                     
  3529                           	psect	cinit
  3530  01A2CA                     __pcinit:
  3531                           	opt callstack 0
  3532  01A2CA                     start_initialization:
  3533                           	opt callstack 0
  3534  01A2CA                     __initialization:
  3535                           	opt callstack 0
  3536                           
  3537                           ; Initialize objects allocated to BIGRAM (811 bytes)
  3538                           ; load TBLPTR registers with __pidataBIGRAM
  3539  01A2CA  0E28               	movlw	low __pidataBIGRAM
  3540  01A2CC  6EF6               	movwf	tblptrl,c
  3541  01A2CE  0E6B               	movlw	high __pidataBIGRAM
  3542  01A2D0  6EF7               	movwf	tblptrh,c
  3543  01A2D2  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3544  01A2D4  6EF8               	movwf	tblptru,c
  3545  01A2D6  EE01  F0FF         	lfsr	0,__pdataBIGRAM
  3546  01A2DA  EE20 F32B          	lfsr	2,811
  3547  01A2DE                     copy_data0:
  3548  01A2DE  0009               	tblrd		*+
  3549  01A2E0  006F FFD7 FFEE     	movff	tablat,postinc0
  3550  01A2E6  50DD               	movf	postdec2,w,c
  3551  01A2E8  50D9               	movf	fsr2l,w,c
  3552  01A2EA  E1F9               	bnz	copy_data0
  3553  01A2EC  50DA               	movf	fsr2h,w,c
  3554  01A2EE  E1F7               	bnz	copy_data0
  3555                           
  3556                           ; Initialize objects allocated to BANK1 (239 bytes)
  3557                           ; load TBLPTR registers with __pidataBANK1
  3558  01A2F0  0E26               	movlw	low __pidataBANK1
  3559  01A2F2  6EF6               	movwf	tblptrl,c
  3560  01A2F4  0E9F               	movlw	high __pidataBANK1
  3561  01A2F6  6EF7               	movwf	tblptrh,c
  3562  01A2F8  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3563  01A2FA  6EF8               	movwf	tblptru,c
  3564  01A2FC  EE00  F100         	lfsr	0,__pdataBANK1
  3565  01A300  EE20 F0EF          	lfsr	2,239
  3566  01A304                     copy_data1:
  3567  01A304  0009               	tblrd		*+
  3568  01A306  006F FFD7 FFEE     	movff	tablat,postinc0
  3569  01A30C  50DD               	movf	postdec2,w,c
  3570  01A30E  50D9               	movf	fsr2l,w,c
  3571  01A310  E1F9               	bnz	copy_data1
  3572                           
  3573                           ; Initialize objects allocated to BANK0 (14 bytes)
  3574                           ; load TBLPTR registers with __pidataBANK0
  3575  01A312  0EE6               	movlw	low __pidataBANK0
  3576  01A314  6EF6               	movwf	tblptrl,c
  3577  01A316  0EC0               	movlw	high __pidataBANK0
  3578  01A318  6EF7               	movwf	tblptrh,c
  3579  01A31A  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3580  01A31C  6EF8               	movwf	tblptru,c
  3581  01A31E  EE00  F0F0         	lfsr	0,__pdataBANK0
  3582  01A322  EE20 F00E          	lfsr	2,14
  3583  01A326                     copy_data2:
  3584  01A326  0009               	tblrd		*+
  3585  01A328  006F FFD7 FFEE     	movff	tablat,postinc0
  3586  01A32E  50DD               	movf	postdec2,w,c
  3587  01A330  50D9               	movf	fsr2l,w,c
  3588  01A332  E1F9               	bnz	copy_data2
  3589                           
  3590                           ; Clear objects allocated to BIGRAM (482 bytes)
  3591  01A334  EE02  F02A         	lfsr	0,__pbssBIGRAM
  3592  01A338  EE20 F1E2          	lfsr	2,482
  3593  01A33C                     clear_0:
  3594  01A33C  6AEE               	clrf	postinc0,c
  3595  01A33E  50DD               	movf	postdec2,w,c
  3596  01A340  50D9               	movf	fsr2l,w,c
  3597  01A342  E1FC               	bnz	clear_0
  3598  01A344  50DA               	movf	fsr2h,w,c
  3599  01A346  E1FA               	bnz	clear_0
  3600                           
  3601                           ; Clear objects allocated to BANK4 (255 bytes)
  3602  01A348  EE01  F000         	lfsr	0,__pbssBANK4
  3603  01A34C  EE20 F0FF          	lfsr	2,255
  3604  01A350                     clear_1:
  3605  01A350  6AEE               	clrf	postinc0,c
  3606  01A352  50DD               	movf	postdec2,w,c
  3607  01A354  50D9               	movf	fsr2l,w,c
  3608  01A356  E1FC               	bnz	clear_1
  3609  01A358  50DA               	movf	fsr2h,w,c
  3610  01A35A  E1FA               	bnz	clear_1
  3611                           
  3612                           ; Clear objects allocated to BANK3 (198 bytes)
  3613  01A35C  EE00  F300         	lfsr	0,__pbssBANK3
  3614  01A360  0EC6               	movlw	198
  3615  01A362                     clear_2:
  3616  01A362  6AEE               	clrf	postinc0,c
  3617  01A364  06E8               	decf	wreg,f,c
  3618  01A366  E1FD               	bnz	clear_2
  3619                           
  3620                           ; Clear objects allocated to BANK2 (231 bytes)
  3621  01A368  EE00  F200         	lfsr	0,__pbssBANK2
  3622  01A36C  0EE7               	movlw	231
  3623  01A36E                     clear_3:
  3624  01A36E  6AEE               	clrf	postinc0,c
  3625  01A370  06E8               	decf	wreg,f,c
  3626  01A372  E1FD               	bnz	clear_3
  3627                           
  3628                           ; Clear objects allocated to BANK0 (119 bytes)
  3629  01A374  EE00  F060         	lfsr	0,__pbssBANK0
  3630  01A378  0E77               	movlw	119
  3631  01A37A                     clear_4:
  3632  01A37A  6AEE               	clrf	postinc0,c
  3633  01A37C  06E8               	decf	wreg,f,c
  3634  01A37E  E1FD               	bnz	clear_4
  3635                           
  3636                           ; Clear objects allocated to COMRAM (14 bytes)
  3637  01A380  EE00  F03A         	lfsr	0,__pbssCOMRAM
  3638  01A384  0E0E               	movlw	14
  3639  01A386                     clear_5:
  3640  01A386  6AEE               	clrf	postinc0,c
  3641  01A388  06E8               	decf	wreg,f,c
  3642  01A38A  E1FD               	bnz	clear_5
  3643                           
  3644                           ;
  3645                           ; Setup IVTBASE
  3646                           ;
  3647  01A38C  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3648  01A38E  6ED5               	movwf	213,c
  3649  01A390  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3650  01A392  6ED6               	movwf	214,c
  3651  01A394  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3652  01A396  6ED7               	movwf	215,c
  3653  01A398                     end_of_initialization:
  3654                           	opt callstack 0
  3655  01A398                     __end_of__initialization:
  3656                           	opt callstack 0
  3657  01A398  0100               	movlb	0
  3658  01A39A  EF22  F089         	goto	_main	;jump to C main() function
  3659                           
  3660                           	psect	bssCOMRAM
  3661  00003A                     __pbssCOMRAM:
  3662                           	opt callstack 0
  3663  00003A                     _width:
  3664                           	opt callstack 0
  3665  00003A                     	ds	2
  3666  00003C                     _prec:
  3667                           	opt callstack 0
  3668  00003C                     	ds	2
  3669  00003E                     _flags:
  3670                           	opt callstack 0
  3671  00003E                     	ds	2
  3672  000040                     esr_check@esr_state:
  3673                           	opt callstack 0
  3674  000040                     	ds	1
  3675  000041                     calc_bsoc@log_update_wait:
  3676                           	opt callstack 0
  3677  000041                     	ds	1
  3678  000042                     check_day_time@day_delay:
  3679                           	opt callstack 0
  3680  000042                     	ds	1
  3681  000043                     _uart2RxHead:
  3682                           	opt callstack 0
  3683  000043                     	ds	1
  3684  000044                     _uart2TxBufferRemaining:
  3685                           	opt callstack 0
  3686  000044                     	ds	1
  3687  000045                     _uart2TxTail:
  3688                           	opt callstack 0
  3689  000045                     	ds	1
  3690  000046                     _uart1RxTail:
  3691                           	opt callstack 0
  3692  000046                     	ds	1
  3693  000047                     _uart1RxHead:
  3694                           	opt callstack 0
  3695  000047                     	ds	1
  3696                           
  3697                           	psect	bssBANK0
  3698  000060                     __pbssBANK0:
  3699                           	opt callstack 0
  3700  000060                     _spi_link:
  3701                           	opt callstack 0
  3702  000060                     	ds	12
  3703  00006C                     _uart1RxBuffer:
  3704                           	opt callstack 0
  3705  00006C                     	ds	8
  3706  000074                     spinners@s:
  3707                           	opt callstack 0
  3708  000074                     	ds	6
  3709  00007A                     floorf@F524:
  3710                           	opt callstack 0
  3711  00007A                     	ds	4
  3712  00007E                     fabsf@F463:
  3713                           	opt callstack 0
  3714  00007E                     	ds	4
  3715  000082                     ___fpclassifyf@F463:
  3716                           	opt callstack 0
  3717  000082                     	ds	4
  3718  000086                     calc_ror_data@bcror:
  3719                           	opt callstack 0
  3720  000086                     	ds	4
  3721  00008A                     calc_ror_data@bvror:
  3722                           	opt callstack 0
  3723  00008A                     	ds	4
  3724  00008E                     calc_model_data@bcror:
  3725                           	opt callstack 0
  3726  00008E                     	ds	4
  3727  000092                     calc_model_data@bvror:
  3728                           	opt callstack 0
  3729  000092                     	ds	4
  3730  000096                     _utctime:
  3731                           	opt callstack 0
  3732  000096                     	ds	4
  3733  00009A                     wdtdelay@dcount:
  3734                           	opt callstack 0
  3735  00009A                     	ds	4
  3736  00009E                     _P:
  3737                           	opt callstack 0
  3738  00009E                     	ds	4
  3739  0000A2                     _TMR3_InterruptHandler:
  3740                           	opt callstack 0
  3741  0000A2                     	ds	3
  3742  0000A5                     _TMR5_InterruptHandler:
  3743                           	opt callstack 0
  3744  0000A5                     	ds	3
  3745  0000A8                     _TMR6_InterruptHandler:
  3746                           	opt callstack 0
  3747  0000A8                     	ds	3
  3748  0000AB                     _ADCC_ADTI_InterruptHandler:
  3749                           	opt callstack 0
  3750  0000AB                     	ds	3
  3751  0000AE                     _ADCC_ADI_InterruptHandler:
  3752                           	opt callstack 0
  3753  0000AE                     	ds	3
  3754  0000B1                     _UART1_RxInterruptHandler:
  3755                           	opt callstack 0
  3756  0000B1                     	ds	3
  3757  0000B4                     _UART2_TxInterruptHandler:
  3758                           	opt callstack 0
  3759  0000B4                     	ds	3
  3760  0000B7                     _UART2_RxInterruptHandler:
  3761                           	opt callstack 0
  3762  0000B7                     	ds	3
  3763  0000BA                     _INT1_InterruptHandler:
  3764                           	opt callstack 0
  3765  0000BA                     	ds	3
  3766  0000BD                     _INT0_InterruptHandler:
  3767                           	opt callstack 0
  3768  0000BD                     	ds	3
  3769  0000C0                     _nout:
  3770                           	opt callstack 0
  3771  0000C0                     	ds	2
  3772  0000C2                     TMR3_ISR@CountCallBack:
  3773                           	opt callstack 0
  3774  0000C2                     	ds	2
  3775  0000C4                     _timer3ReloadVal:
  3776                           	opt callstack 0
  3777  0000C4                     	ds	2
  3778  0000C6                     TMR5_ISR@CountCallBack:
  3779                           	opt callstack 0
  3780  0000C6                     	ds	2
  3781  0000C8                     _timer5ReloadVal:
  3782                           	opt callstack 0
  3783  0000C8                     	ds	2
  3784  0000CA                     _mode_sw:
  3785                           	opt callstack 0
  3786  0000CA                     	ds	1
  3787  0000CB                     _uart2RxCount:
  3788                           	opt callstack 0
  3789  0000CB                     	ds	1
  3790  0000CC                     _uart2RxTail:
  3791                           	opt callstack 0
  3792  0000CC                     	ds	1
  3793  0000CD                     _uart2TxHead:
  3794                           	opt callstack 0
  3795  0000CD                     	ds	1
  3796  0000CE                     _uart1RxCount:
  3797                           	opt callstack 0
  3798  0000CE                     	ds	1
  3799  0000CF                     _seed:
  3800                           	opt callstack 0
  3801  0000CF                     	ds	8
  3802                           
  3803                           	psect	dataBANK0
  3804  0000F0                     __pdataBANK0:
  3805                           	opt callstack 0
  3806  0000F0                     stoa@F1166:
  3807                           	opt callstack 0
  3808  0000F0                     	ds	7
  3809  0000F7                     _H:
  3810                           	opt callstack 0
  3811  0000F7                     	ds	7
  3812                           
  3813                           	psect	dataBANK1
  3814  000100                     __pdataBANK1:
  3815                           	opt callstack 0
  3816  000100                     _R:
  3817                           	opt callstack 0
  3818  000100                     	ds	48
  3819  000130                     _V:
  3820                           	opt callstack 0
  3821  000130                     	ds	191
  3822                           
  3823                           	psect	bssBANK2
  3824  000200                     __pbssBANK2:
  3825                           	opt callstack 0
  3826  000200                     lp_filter@smooth:
  3827                           	opt callstack 0
  3828  000200                     	ds	84
  3829  000254                     _S:
  3830                           	opt callstack 0
  3831  000254                     	ds	41
  3832  00027D                     _tickCount:
  3833                           	opt callstack 0
  3834  00027D                     	ds	26
  3835  000297                     _dbuf:
  3836                           	opt callstack 0
  3837  000297                     	ds	80
  3838                           
  3839                           	psect	bssBANK3
  3840  000300                     __pbssBANK3:
  3841                           	opt callstack 0
  3842  000300                     _uart2TxBuffer:
  3843                           	opt callstack 0
  3844  000300                     	ds	64
  3845  000340                     _ring_buf2:
  3846                           	opt callstack 0
  3847  000340                     	ds	67
  3848  000383                     _ring_buf1:
  3849                           	opt callstack 0
  3850  000383                     	ds	67
  3851                           
  3852                           	psect	bssBANK4
  3853  000400                     __pbssBANK4:
  3854                           	opt callstack 0
  3855  000400                     _uart2RxBuffer:
  3856                           	opt callstack 0
  3857  000400                     	ds	255
  3858                           
  3859                           	psect	bssBIGRAM
  3860  00082A                     __pbssBIGRAM:
  3861                           	opt callstack 0
  3862  00082A                     _D:
  3863                           	opt callstack 0
  3864  00082A                     	ds	482
  3865                           
  3866                           	psect	dataBIGRAM
  3867  0004FF                     __pdataBIGRAM:
  3868                           	opt callstack 0
  3869  0004FF                     _port_data:
  3870                           	opt callstack 0
  3871  0004FF                     	ds	512
  3872  0006FF                     _C:
  3873                           	opt callstack 0
  3874  0006FF                     	ds	299
  3875                           
  3876                           	psect	cstackBANK0
  3877  0000D7                     __pcstackBANK0:
  3878                           	opt callstack 0
  3879  0000D7                     ??_TMR3_ISR:
  3880                           
  3881                           ; 1 bytes @ 0x0
  3882  0000D7                     	ds	25
  3883                           
  3884                           	psect	cstackCOMRAM
  3885  000021                     __pcstackCOMRAM:
  3886                           	opt callstack 0
  3887  000021                     ??_ADCC_ThresholdISR:
  3888  000021                     
  3889                           ; 1 bytes @ 0x0
  3890  000021                     	ds	5
  3891  000026                     ??_TMR6_ISR:
  3892                           
  3893                           ; 1 bytes @ 0x5
  3894  000026                     	ds	1
  3895  000027                     ??_INT1_ISR:
  3896  000027                     
  3897                           ; 1 bytes @ 0x6
  3898  000027                     	ds	4
  3899  00002B                     ??_TMR5_ISR:
  3900                           
  3901                           ; 1 bytes @ 0xA
  3902  00002B                     	ds	15
  3903                           
  3904 ;;
  3905 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  3906 ;;
  3907 ;; *************** function _main *****************
  3908 ;; Defined at:
  3909 ;;		line 187 in file "main.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;		None
  3912 ;; Auto vars:     Size  Location     Type
  3913 ;;  esr_temp        4  [STACK] float 
  3914 ;;  i_esr           2  [STACK] unsigned short 
  3915 ;;  shape           1  [STACK] unsigned char 
  3916 ;;  inp_index       1  [STACK] unsigned char 
  3917 ;;  k               1  [STACK] unsigned char 
  3918 ;;  j               1  [STACK] unsigned char 
  3919 ;;  i               1  [STACK] unsigned char 
  3920 ;;  mode            1  [STACK] enum E17013
  3921 ;;  i_ror           1  [STACK] unsigned char 
  3922 ;; Return value:  Size  Location     Type
  3923 ;;                  1  [STACK] void 
  3924 ;; Registers used:
  3925 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3935 ;;Total ram usage:        0 bytes
  3936 ;; Hardware stack levels required when called:   29
  3937 ;; This function calls:
  3938 ;;		_SYSTEM_Initialize
  3939 ;;		_StartTimer
  3940 ;;		_TimerDone
  3941 ;;		_WaitMs
  3942 ;;		___fladd
  3943 ;;		___flge
  3944 ;;		___fltol
  3945 ;;		_calc_model_data
  3946 ;;		_calc_ror_data
  3947 ;;		_check_adc_scan
  3948 ;;		_check_enter_button
  3949 ;;		_check_help
  3950 ;;		_clear_adc_scan
  3951 ;;		_clear_hid_pflags
  3952 ;;		_conv_raw_result
  3953 ;;		_convert_adc_data
  3954 ;;		_eaDogM_WriteCommand
  3955 ;;		_esr_check
  3956 ;;		_fabsf
  3957 ;;		_get_raw_result
  3958 ;;		_get_switch
  3959 ;;		_get_vterm_ptr
  3960 ;;		_hid_display
  3961 ;;		_init_bsoc
  3962 ;;		_init_display
  3963 ;;		_init_port_dma
  3964 ;;		_lp_filter
  3965 ;;		_mode_lamp_dim
  3966 ;;		_set_display_info
  3967 ;;		_set_load_relay_one
  3968 ;;		_set_load_relay_two
  3969 ;;		_set_vterm
  3970 ;;		_spinners
  3971 ;;		_sprintf
  3972 ;;		_srand
  3973 ;;		_start_adc_scan
  3974 ;;		_start_switch_handler
  3975 ;;		_static_soc
  3976 ;;		_update_lcd
  3977 ;; This function is called by:
  3978 ;;		Startup code after reset
  3979 ;; This function uses a reentrant model
  3980 ;;
  3981                           
  3982                           	psect	text0
  3983  011244                     __ptext0:
  3984                           	opt callstack 0
  3985  011244                     _main:
  3986                           	opt callstack 0
  3987                           
  3988                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3989  011244  0E11               	movlw	17
  3990  011246  26E1               	addwf	fsr1l,f,c
  3991  011248  0E00               	movlw	0
  3992  01124A  22E2               	addwfc	fsr1h,f,c
  3993                           
  3994                           ;main.c: 189:  UI_STATES mode;;main.c: 190:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  3995                           ;stkvar	_inp_index @ sp[(-17)+11]
  3996                           
  3997                           ;incstack = 0
  3998  01124C  0EFA               	movlw	-6
  3999  01124E  6AE3               	clrf	plusw1,c
  4000                           
  4001                           ;stkvar	_i @ sp[(-17)+14]
  4002  011250  0EFD               	movlw	-3
  4003  011252  6AE3               	clrf	plusw1,c
  4004                           
  4005                           ;stkvar	_j @ sp[(-17)+13]
  4006  011254  0EFC               	movlw	-4
  4007  011256  6AE3               	clrf	plusw1,c
  4008  011258  2AE3               	incf	plusw1,f,c
  4009                           
  4010                           ;stkvar	_k @ sp[(-17)+12]
  4011  01125A  0EFB               	movlw	-5
  4012  01125C  6AE3               	clrf	plusw1,c
  4013  01125E  82E3               	bsf	plusw1,1,c
  4014                           
  4015                           ;main.c: 193:  SYSTEM_Initialize();
  4016  011260  EC17  F0DA         	call	_SYSTEM_Initialize	;wreg free
  4017                           
  4018                           ; BSR set to: 60
  4019                           ;main.c: 196:  (INTCON0bits.GIEH = 1);
  4020  011264  8ED2               	bsf	210,7,c	;volatile
  4021                           
  4022                           ; BSR set to: 60
  4023                           ;main.c: 199:  (INTCON0bits.GIEL = 1);
  4024  011266  8CD2               	bsf	210,6,c	;volatile
  4025                           
  4026                           ; BSR set to: 60
  4027                           ;main.c: 201:  V.ui_state = UI_STATE_INIT;
  4028  011268  0101               	movlb	1	; () banked
  4029  01126A  6B30               	clrf	_V& (0+255),b	;volatile
  4030                           
  4031                           ; BSR set to: 1
  4032                           ;main.c: 206:  WaitMs(300);
  4033  01126C  0E2C               	movlw	44
  4034  01126E  6EE6               	movwf	postinc1,c
  4035  011270  0E01               	movlw	1
  4036  011272  6EE6               	movwf	postinc1,c
  4037  011274  EC8A  F0DC         	call	_WaitMs	;wreg free
  4038                           
  4039                           ;main.c: 207:  if (PORTBbits.RB0) {
  4040  011278  A0CB               	btfss	203,0,c	;volatile
  4041  01127A  D004               	goto	l13042
  4042                           
  4043                           ;main.c: 208:   mode = UI_STATE_HOST;
  4044                           ;stkvar	_mode @ sp[(-17)+15]
  4045  01127C  0EFE               	movlw	-2
  4046  01127E  6AE3               	clrf	plusw1,c
  4047  011280  2AE3               	incf	plusw1,f,c
  4048                           
  4049                           ;main.c: 209:  } else {
  4050  011282  D004               	goto	l13044
  4051  011284                     l13042:
  4052                           
  4053                           ;main.c: 210:   mode = UI_STATE_LOG;
  4054                           ;stkvar	_mode @ sp[(-17)+15]
  4055  011284  0EFE               	movlw	-2
  4056  011286  6AE3               	clrf	plusw1,c
  4057  011288  80E3               	bsf	plusw1,0,c
  4058  01128A  82E3               	bsf	plusw1,1,c	;indir
  4059  01128C                     l13044:
  4060                           
  4061                           ;main.c: 213:  if (mode == UI_STATE_HOST) {
  4062                           ;stkvar	_mode @ sp[(-17)+15]
  4063  01128C  0EFE               	movlw	-2
  4064  01128E  04E3               	decf	plusw1,w,c
  4065  011290  A4D8               	btfss	status,2,c
  4066  011292  D007               	goto	l1324
  4067                           
  4068                           ;main.c: 214:   do { LATDbits.LATD0 = 1; } while(0);
  4069  011294  80BD               	bsf	189,0,c	;volatile
  4070                           
  4071                           ;main.c: 215:   V.mode_pwm = 70;
  4072  011296  0E00               	movlw	0
  4073  011298  0101               	movlb	1	; () banked
  4074  01129A  6FC6               	movwf	(_V+150)& (0+255),b	;volatile
  4075  01129C  0E46               	movlw	70
  4076  01129E  6FC5               	movwf	(_V+149)& (0+255),b	;volatile
  4077                           
  4078                           ;main.c: 216:  } else {
  4079  0112A0  D004               	goto	l13048
  4080  0112A2                     l1324:
  4081  0112A2  90BD               	bcf	189,0,c	;volatile
  4082                           
  4083                           ;main.c: 218:   V.mode_pwm = 0;
  4084  0112A4  0101               	movlb	1	; () banked
  4085  0112A6  6BC5               	clrf	(_V+149)& (0+255),b	;volatile
  4086  0112A8  6BC6               	clrf	(_V+150)& (0+255),b	;volatile
  4087  0112AA                     l13048:
  4088                           
  4089                           ; BSR set to: 1
  4090                           ;main.c: 220:  mode_lamp_dim(V.mode_pwm);
  4091  0112AA  0060  F717  FFE6   	movff	_V+149,postinc1
  4092  0112B0  0060  F71B  FFE6   	movff	_V+150,postinc1
  4093  0112B6  EC07  F0E0         	call	_mode_lamp_dim	;wreg free
  4094  0112BA  D326               	goto	l13168
  4095  0112BC                     l13050:
  4096                           
  4097                           ; BSR set to: 1
  4098                           ;main.c: 228:    init_port_dma();
  4099  0112BC  ECD9  F0DC         	call	_init_port_dma	;wreg free
  4100                           
  4101                           ; BSR set to: 59
  4102                           ;main.c: 230:    init_display();
  4103  0112C0  EC0B  F0D0         	call	_init_display	;wreg free
  4104                           
  4105                           ; BSR set to: 61
  4106                           ;main.c: 231:    eaDogM_WriteCommand(0b00001100);
  4107  0112C4  0E0C               	movlw	12
  4108  0112C6  6EE6               	movwf	postinc1,c
  4109  0112C8  EC7A  F0E0         	call	_eaDogM_WriteCommand	;wreg free
  4110                           
  4111                           ; BSR set to: 0
  4112                           ;main.c: 235:    set_load_relay_one(1);
  4113  0112CC  0E01               	movlw	1
  4114  0112CE  6EE6               	movwf	postinc1,c
  4115  0112D0  EC5B  F0E0         	call	_set_load_relay_one	;wreg free
  4116                           
  4117                           ;main.c: 236:    set_load_relay_two(1);
  4118  0112D4  0E01               	movlw	1
  4119  0112D6  6EE6               	movwf	postinc1,c
  4120  0112D8  EC53  F0E0         	call	_set_load_relay_two	;wreg free
  4121                           
  4122                           ;main.c: 238:    V.ui_state = mode;
  4123                           ;stkvar	_mode @ sp[(-17)+15]
  4124  0112DC  0EFE               	movlw	-2
  4125  0112DE  006F FF8C  F130    	movff	plusw1,_V	;volatile
  4126                           
  4127                           ;main.c: 239:    srand(1957);
  4128  0112E4  0EA5               	movlw	165
  4129  0112E6  6EE6               	movwf	postinc1,c
  4130  0112E8  0E07               	movlw	7
  4131  0112EA  6EE6               	movwf	postinc1,c
  4132  0112EC  ECA5  F0DC         	call	_srand	;wreg free
  4133                           
  4134                           ; BSR set to: 0
  4135                           ;main.c: 240:    set_vterm(0);
  4136  0112F0  0E00               	movlw	0
  4137  0112F2  6EE6               	movwf	postinc1,c
  4138  0112F4  ECB2  F0DF         	call	_set_vterm	;wreg free
  4139                           
  4140                           ;main.c: 241:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  4141  0112F8  0E1E               	movlw	low STR_1
  4142  0112FA  6EE6               	movwf	postinc1,c
  4143  0112FC  0EFF               	movlw	high STR_1
  4144  0112FE  6EE6               	movwf	postinc1,c
  4145  011300  0E00               	movlw	0
  4146  011302  6EE6               	movwf	postinc1,c
  4147  011304  0E00               	movlw	0
  4148  011306  6EE6               	movwf	postinc1,c
  4149  011308  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  4150  01130C  0060  F007  FFE6   	movff	btemp,postinc1
  4151  011312  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4152  011318  0E04               	movlw	4
  4153  01131A  6EE6               	movwf	postinc1,c
  4154  01131C  EC8D  F0CE         	call	_sprintf	;wreg free
  4155                           
  4156                           ; BSR set to: 0
  4157                           ;main.c: 242:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.10");
  4158  011320  0ED2               	movlw	low STR_3
  4159  011322  6EE6               	movwf	postinc1,c
  4160  011324  0EFF               	movlw	high STR_3
  4161  011326  6EE6               	movwf	postinc1,c
  4162  011328  0E09               	movlw	low STR_2
  4163  01132A  6EE6               	movwf	postinc1,c
  4164  01132C  0EFF               	movlw	high STR_2
  4165  01132E  6EE6               	movwf	postinc1,c
  4166  011330  0E00               	movlw	0
  4167  011332  6EE6               	movwf	postinc1,c
  4168  011334  0E01               	movlw	1
  4169  011336  6EE6               	movwf	postinc1,c
  4170  011338  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  4171  01133C  0060  F007  FFE6   	movff	btemp,postinc1
  4172  011342  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4173  011348  0E06               	movlw	6
  4174  01134A  6EE6               	movwf	postinc1,c
  4175  01134C  EC8D  F0CE         	call	_sprintf	;wreg free
  4176                           
  4177                           ; BSR set to: 0
  4178                           ;main.c: 243:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  4179  011350  0ECA               	movlw	low STR_4
  4180  011352  6EE6               	movwf	postinc1,c
  4181  011354  0EFE               	movlw	high STR_4
  4182  011356  6EE6               	movwf	postinc1,c
  4183  011358  0E00               	movlw	0
  4184  01135A  6EE6               	movwf	postinc1,c
  4185  01135C  0E02               	movlw	2
  4186  01135E  6EE6               	movwf	postinc1,c
  4187  011360  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  4188  011364  0060  F007  FFE6   	movff	btemp,postinc1
  4189  01136A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4190  011370  0E04               	movlw	4
  4191  011372  6EE6               	movwf	postinc1,c
  4192  011374  EC8D  F0CE         	call	_sprintf	;wreg free
  4193                           
  4194                           ; BSR set to: 0
  4195                           ;main.c: 244:    sprintf(get_vterm_ptr(0, 2), "                    ");
  4196  011378  0EA0               	movlw	low STR_5
  4197  01137A  6EE6               	movwf	postinc1,c
  4198  01137C  0EFE               	movlw	high STR_5
  4199  01137E  6EE6               	movwf	postinc1,c
  4200  011380  0E02               	movlw	2
  4201  011382  6EE6               	movwf	postinc1,c
  4202  011384  0E00               	movlw	0
  4203  011386  6EE6               	movwf	postinc1,c
  4204  011388  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  4205  01138C  0060  F007  FFE6   	movff	btemp,postinc1
  4206  011392  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4207  011398  0E04               	movlw	4
  4208  01139A  6EE6               	movwf	postinc1,c
  4209  01139C  EC8D  F0CE         	call	_sprintf	;wreg free
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;main.c: 245:    sprintf(get_vterm_ptr(1, 2), "                    ");
  4213  0113A0  0EA0               	movlw	low STR_5
  4214  0113A2  6EE6               	movwf	postinc1,c
  4215  0113A4  0EFE               	movlw	high STR_5
  4216  0113A6  6EE6               	movwf	postinc1,c
  4217  0113A8  0E02               	movlw	2
  4218  0113AA  6EE6               	movwf	postinc1,c
  4219  0113AC  0E01               	movlw	1
  4220  0113AE  6EE6               	movwf	postinc1,c
  4221  0113B0  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  4222  0113B4  0060  F007  FFE6   	movff	btemp,postinc1
  4223  0113BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4224  0113C0  0E04               	movlw	4
  4225  0113C2  6EE6               	movwf	postinc1,c
  4226  0113C4  EC8D  F0CE         	call	_sprintf	;wreg free
  4227                           
  4228                           ; BSR set to: 0
  4229                           ;main.c: 246:    sprintf(get_vterm_ptr(2, 2), "                    ");
  4230  0113C8  0EA0               	movlw	low STR_5
  4231  0113CA  6EE6               	movwf	postinc1,c
  4232  0113CC  0EFE               	movlw	high STR_5
  4233  0113CE  6EE6               	movwf	postinc1,c
  4234  0113D0  0E02               	movlw	2
  4235  0113D2  6EE6               	movwf	postinc1,c
  4236  0113D4  0E02               	movlw	2
  4237  0113D6  6EE6               	movwf	postinc1,c
  4238  0113D8  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  4239  0113DC  0060  F007  FFE6   	movff	btemp,postinc1
  4240  0113E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4241  0113E8  0E04               	movlw	4
  4242  0113EA  6EE6               	movwf	postinc1,c
  4243  0113EC  EC8D  F0CE         	call	_sprintf	;wreg free
  4244                           
  4245                           ; BSR set to: 0
  4246                           ;main.c: 247:    update_lcd(0);
  4247  0113F0  0E00               	movlw	0
  4248  0113F2  6EE6               	movwf	postinc1,c
  4249  0113F4  EC05  F0CE         	call	_update_lcd	;wreg free
  4250                           
  4251                           ;main.c: 248:    WaitMs(1000);
  4252  0113F8  0EE8               	movlw	232
  4253  0113FA  6EE6               	movwf	postinc1,c
  4254  0113FC  0E03               	movlw	3
  4255  0113FE  6EE6               	movwf	postinc1,c
  4256  011400  EC8A  F0DC         	call	_WaitMs	;wreg free
  4257                           
  4258                           ;main.c: 249:    StartTimer(TMR_DISPLAY, 250);
  4259  011404  0EFA               	movlw	250
  4260  011406  6EE6               	movwf	postinc1,c
  4261  011408  0E00               	movlw	0
  4262  01140A  6EE6               	movwf	postinc1,c
  4263  01140C  0E0A               	movlw	10
  4264  01140E  6EE6               	movwf	postinc1,c
  4265  011410  EC95  F0DB         	call	_StartTimer	;wreg free
  4266                           
  4267                           ;main.c: 250:    StartTimer(TMR_ADC, 200);
  4268  011414  0EC8               	movlw	200
  4269  011416  6EE6               	movwf	postinc1,c
  4270  011418  0E00               	movlw	0
  4271  01141A  6EE6               	movwf	postinc1,c
  4272  01141C  0E01               	movlw	1
  4273  01141E  6EE6               	movwf	postinc1,c
  4274  011420  EC95  F0DB         	call	_StartTimer	;wreg free
  4275                           
  4276                           ;main.c: 251:    StartTimer(TMR_INFO, 3000);
  4277  011424  0EB8               	movlw	184
  4278  011426  6EE6               	movwf	postinc1,c
  4279  011428  0E0B               	movlw	11
  4280  01142A  6EE6               	movwf	postinc1,c
  4281  01142C  0E07               	movlw	7
  4282  01142E  6EE6               	movwf	postinc1,c
  4283  011430  EC95  F0DB         	call	_StartTimer	;wreg free
  4284                           
  4285                           ;main.c: 252:    StartTimer(TMR_FLIPPER, 1500);
  4286  011434  0EDC               	movlw	220
  4287  011436  6EE6               	movwf	postinc1,c
  4288  011438  0E05               	movlw	5
  4289  01143A  6EE6               	movwf	postinc1,c
  4290  01143C  0E0B               	movlw	11
  4291  01143E  6EE6               	movwf	postinc1,c
  4292  011440  EC95  F0DB         	call	_StartTimer	;wreg free
  4293                           
  4294                           ;main.c: 253:    StartTimer(TMR_HELPDIS, 3000);
  4295  011444  0EB8               	movlw	184
  4296  011446  6EE6               	movwf	postinc1,c
  4297  011448  0E0B               	movlw	11
  4298  01144A  6EE6               	movwf	postinc1,c
  4299  01144C  0E09               	movlw	9
  4300  01144E  6EE6               	movwf	postinc1,c
  4301  011450  EC95  F0DB         	call	_StartTimer	;wreg free
  4302                           
  4303                           ;main.c: 255:    start_adc_scan();
  4304  011454  EC2E  F0D8         	call	_start_adc_scan	;wreg free
  4305                           
  4306                           ;main.c: 256:    start_switch_handler();
  4307  011458  EC74  F0DF         	call	_start_switch_handler	;wreg free
  4308                           
  4309                           ; BSR set to: 57
  4310                           ;main.c: 257:    WaitMs(1000);
  4311  01145C  0EE8               	movlw	232
  4312  01145E  6EE6               	movwf	postinc1,c
  4313  011460  0E03               	movlw	3
  4314  011462  6EE6               	movwf	postinc1,c
  4315  011464  EC8A  F0DC         	call	_WaitMs	;wreg free
  4316                           
  4317                           ;main.c: 262:    i_ror = 1;
  4318                           ;stkvar	_i_ror @ sp[(-17)+16]
  4319  011468  0EFF               	movlw	-1
  4320  01146A  6AE3               	clrf	plusw1,c
  4321  01146C  2AE3               	incf	plusw1,f,c
  4322  01146E                     l13100:
  4323                           
  4324                           ;main.c: 264:     calc_ror_data();
  4325  01146E  ECB8  F0C5         	call	_calc_ror_data	;wreg free
  4326                           
  4327                           ;main.c: 265:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f            ", conv_raw_result(V
      +                          _BAT, CONV));
  4328  011472  0E00               	movlw	0
  4329  011474  6EE6               	movwf	postinc1,c
  4330  011476  0E04               	movlw	4
  4331  011478  6EE6               	movwf	postinc1,c
  4332  01147A  EC71  F0A9         	call	_conv_raw_result	;wreg free
  4333  01147E  0060  F007  FFE6   	movff	btemp,postinc1
  4334  011484  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4335  01148A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4336  011490  0060  F013  FFE6   	movff	btemp+3,postinc1
  4337  011496  0EB5               	movlw	low STR_8
  4338  011498  6EE6               	movwf	postinc1,c
  4339  01149A  0EFE               	movlw	high STR_8
  4340  01149C  6EE6               	movwf	postinc1,c
  4341  01149E  0E00               	movlw	0
  4342  0114A0  6EE6               	movwf	postinc1,c
  4343  0114A2  0E01               	movlw	1
  4344  0114A4  6EE6               	movwf	postinc1,c
  4345  0114A6  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  4346  0114AA  0060  F007  FFE6   	movff	btemp,postinc1
  4347  0114B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4348  0114B6  0E08               	movlw	8
  4349  0114B8  6EE6               	movwf	postinc1,c
  4350  0114BA  EC8D  F0CE         	call	_sprintf	;wreg free
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;main.c: 266:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  4354  0114BE  EE21  F36B         	lfsr	2,_C+108	;volatile
  4355  0114C2  006F FF7B FFE6     	movff	postinc2,postinc1
  4356  0114C8  006F FF7B FFE6     	movff	postinc2,postinc1
  4357  0114CE  006F FF7B FFE6     	movff	postinc2,postinc1
  4358  0114D4  006F FF7B FFE6     	movff	postinc2,postinc1
  4359                           
  4360                           ;stkvar	_i_ror @ sp[(-21)+16]
  4361  0114DA  0EFB               	movlw	-5
  4362  0114DC  50E3               	movf	plusw1,w,c
  4363  0114DE  6EE6               	movwf	postinc1,c
  4364  0114E0  0E00               	movlw	0
  4365  0114E2  6EE6               	movwf	postinc1,c
  4366  0114E4  0E00               	movlw	0
  4367  0114E6  6EE6               	movwf	postinc1,c
  4368  0114E8  0E05               	movlw	5
  4369  0114EA  6EE6               	movwf	postinc1,c
  4370  0114EC  EC80  F0D0         	call	_spinners	;wreg free
  4371  0114F0  5001               	movf	btemp^0,w,c
  4372  0114F2  6EE6               	movwf	postinc1,c
  4373  0114F4  0E00               	movlw	0
  4374  0114F6  6EE6               	movwf	postinc1,c
  4375  0114F8  0E84               	movlw	low STR_9
  4376  0114FA  6EE6               	movwf	postinc1,c
  4377  0114FC  0EFC               	movlw	high STR_9
  4378  0114FE  6EE6               	movwf	postinc1,c
  4379  011500  0E00               	movlw	0
  4380  011502  6EE6               	movwf	postinc1,c
  4381  011504  0E02               	movlw	2
  4382  011506  6EE6               	movwf	postinc1,c
  4383  011508  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  4384  01150C  0060  F007  FFE6   	movff	btemp,postinc1
  4385  011512  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4386  011518  0E0C               	movlw	12
  4387  01151A  6EE6               	movwf	postinc1,c
  4388  01151C  EC8D  F0CE         	call	_sprintf	;wreg free
  4389                           
  4390                           ; BSR set to: 0
  4391                           ;main.c: 267:     update_lcd(0);
  4392  011520  0E00               	movlw	0
  4393  011522  6EE6               	movwf	postinc1,c
  4394  011524  EC05  F0CE         	call	_update_lcd	;wreg free
  4395                           
  4396                           ;main.c: 268:     clear_adc_scan();
  4397  011528  ECCF  F0E0         	call	_clear_adc_scan	;wreg free
  4398                           
  4399                           ; BSR set to: 1
  4400                           ;main.c: 269:     start_adc_scan();
  4401  01152C  EC2E  F0D8         	call	_start_adc_scan	;wreg free
  4402                           
  4403                           ;main.c: 270:     WaitMs(2000);
  4404  011530  0ED0               	movlw	208
  4405  011532  6EE6               	movwf	postinc1,c
  4406  011534  0E07               	movlw	7
  4407  011536  6EE6               	movwf	postinc1,c
  4408  011538  EC8A  F0DC         	call	_WaitMs	;wreg free
  4409                           
  4410                           ;main.c: 273:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4411                           ;stkvar	_i_ror @ sp[(-17)+16]
  4412  01153C  0EFF               	movlw	-1
  4413  01153E  006F FF8C  F00C    	movff	plusw1,btemp+11
  4414  011544  2A0C               	incf	(btemp+11)^0,f,c
  4415  011546  0060  F033  FFE3   	movff	btemp+11,plusw1
  4416  01154C  060C               	decf	(btemp+11)^0,f,c
  4417  01154E  0E1E               	movlw	30
  4418  011550  600C               	cpfslt	(btemp+11)^0,c
  4419  011552  D01A               	goto	u12560
  4420  011554  EE21  F36B         	lfsr	2,_C+108	;volatile
  4421  011558  006F FF7B FFE6     	movff	postinc2,postinc1
  4422  01155E  006F FF7B FFE6     	movff	postinc2,postinc1
  4423  011564  006F FF7B FFE6     	movff	postinc2,postinc1
  4424  01156A  006F FF7B FFE6     	movff	postinc2,postinc1
  4425  011570  0E42               	movlw	66
  4426  011572  6EE6               	movwf	postinc1,c
  4427  011574  0E60               	movlw	96
  4428  011576  6EE6               	movwf	postinc1,c
  4429  011578  0E65               	movlw	101
  4430  01157A  6EE6               	movwf	postinc1,c
  4431  01157C  0E3C               	movlw	60
  4432  01157E  6EE6               	movwf	postinc1,c
  4433  011580  ECF4  F0C7         	call	___flge	;wreg free
  4434  011584  A001               	btfss	btemp& (0+255),0,c
  4435  011586  D773               	goto	l13100
  4436  011588                     u12560:
  4437                           
  4438                           ;main.c: 275:    static_soc();
  4439  011588  ECF2  F0D8         	call	_static_soc	;wreg free
  4440                           
  4441                           ;main.c: 276:    init_bsoc();
  4442  01158C  ECE1  F0BD         	call	_init_bsoc	;wreg free
  4443                           
  4444                           ;main.c: 277:    set_load_relay_one(0);
  4445  011590  0E00               	movlw	0
  4446  011592  6EE6               	movwf	postinc1,c
  4447  011594  EC5B  F0E0         	call	_set_load_relay_one	;wreg free
  4448                           
  4449                           ;main.c: 278:    set_load_relay_two(0);
  4450  011598  0E00               	movlw	0
  4451  01159A  6EE6               	movwf	postinc1,c
  4452  01159C  EC53  F0E0         	call	_set_load_relay_two	;wreg free
  4453                           
  4454                           ;main.c: 279:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4455  0115A0  EE21  F3B5         	lfsr	2,_C+182	;volatile
  4456  0115A4  006F FF78  F00B    	movff	postinc2,btemp+10
  4457  0115AA  006F FF74  F00C    	movff	postdec2,btemp+11
  4458  0115B0  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4459  0115B6  0060  F033  FFE6   	movff	btemp+11,postinc1
  4460  0115BC  0E56               	movlw	low STR_10
  4461  0115BE  6EE6               	movwf	postinc1,c
  4462  0115C0  0EFD               	movlw	high STR_10
  4463  0115C2  6EE6               	movwf	postinc1,c
  4464  0115C4  0E00               	movlw	0
  4465  0115C6  6EE6               	movwf	postinc1,c
  4466  0115C8  0E00               	movlw	0
  4467  0115CA  6EE6               	movwf	postinc1,c
  4468  0115CC  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  4469  0115D0  0060  F007  FFE6   	movff	btemp,postinc1
  4470  0115D6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4471  0115DC  0E06               	movlw	6
  4472  0115DE  6EE6               	movwf	postinc1,c
  4473  0115E0  EC8D  F0CE         	call	_sprintf	;wreg free
  4474                           
  4475                           ; BSR set to: 0
  4476                           ;main.c: 280:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4477  0115E4  EE21  F38F         	lfsr	2,_C+144	;volatile
  4478  0115E8  006F FF7B FFE6     	movff	postinc2,postinc1
  4479  0115EE  006F FF7B FFE6     	movff	postinc2,postinc1
  4480  0115F4  006F FF7B FFE6     	movff	postinc2,postinc1
  4481  0115FA  006F FF7B FFE6     	movff	postinc2,postinc1
  4482  011600  0E32               	movlw	low STR_11
  4483  011602  6EE6               	movwf	postinc1,c
  4484  011604  0EFE               	movlw	high STR_11
  4485  011606  6EE6               	movwf	postinc1,c
  4486  011608  0E00               	movlw	0
  4487  01160A  6EE6               	movwf	postinc1,c
  4488  01160C  0E01               	movlw	1
  4489  01160E  6EE6               	movwf	postinc1,c
  4490  011610  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  4491  011614  0060  F007  FFE6   	movff	btemp,postinc1
  4492  01161A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4493  011620  0E08               	movlw	8
  4494  011622  6EE6               	movwf	postinc1,c
  4495  011624  EC8D  F0CE         	call	_sprintf	;wreg free
  4496                           
  4497                           ; BSR set to: 0
  4498                           ;main.c: 281:    update_lcd(0);
  4499  011628  0E00               	movlw	0
  4500  01162A  6EE6               	movwf	postinc1,c
  4501  01162C  EC05  F0CE         	call	_update_lcd	;wreg free
  4502                           
  4503                           ;main.c: 282:    WaitMs(2000);
  4504  011630  0ED0               	movlw	208
  4505  011632  6EE6               	movwf	postinc1,c
  4506  011634  0E07               	movlw	7
  4507  011636  6EE6               	movwf	postinc1,c
  4508  011638  EC8A  F0DC         	call	_WaitMs	;wreg free
  4509                           
  4510                           ;main.c: 283:    sprintf(get_vterm_ptr(0, 0), "Battery ESR         ");
  4511  01163C  0EDF               	movlw	low STR_12
  4512  01163E  6EE6               	movwf	postinc1,c
  4513  011640  0EFE               	movlw	high STR_12
  4514  011642  6EE6               	movwf	postinc1,c
  4515  011644  0E00               	movlw	0
  4516  011646  6EE6               	movwf	postinc1,c
  4517  011648  0E00               	movlw	0
  4518  01164A  6EE6               	movwf	postinc1,c
  4519  01164C  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  4520  011650  0060  F007  FFE6   	movff	btemp,postinc1
  4521  011656  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4522  01165C  0E04               	movlw	4
  4523  01165E  6EE6               	movwf	postinc1,c
  4524  011660  EC8D  F0CE         	call	_sprintf	;wreg free
  4525                           
  4526                           ; BSR set to: 0
  4527                           ;main.c: 284:    sprintf(get_vterm_ptr(1, 0), "Calculation         ");
  4528  011664  0EF4               	movlw	low STR_13
  4529  011666  6EE6               	movwf	postinc1,c
  4530  011668  0EFE               	movlw	high STR_13
  4531  01166A  6EE6               	movwf	postinc1,c
  4532  01166C  0E00               	movlw	0
  4533  01166E  6EE6               	movwf	postinc1,c
  4534  011670  0E01               	movlw	1
  4535  011672  6EE6               	movwf	postinc1,c
  4536  011674  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  4537  011678  0060  F007  FFE6   	movff	btemp,postinc1
  4538  01167E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4539  011684  0E04               	movlw	4
  4540  011686  6EE6               	movwf	postinc1,c
  4541  011688  EC8D  F0CE         	call	_sprintf	;wreg free
  4542                           
  4543                           ; BSR set to: 0
  4544                           ;main.c: 285:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds    ");
  4545  01168C  0E48               	movlw	low STR_14
  4546  01168E  6EE6               	movwf	postinc1,c
  4547  011690  0EFF               	movlw	high STR_14
  4548  011692  6EE6               	movwf	postinc1,c
  4549  011694  0E00               	movlw	0
  4550  011696  6EE6               	movwf	postinc1,c
  4551  011698  0E02               	movlw	2
  4552  01169A  6EE6               	movwf	postinc1,c
  4553  01169C  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  4554  0116A0  0060  F007  FFE6   	movff	btemp,postinc1
  4555  0116A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4556  0116AC  0E04               	movlw	4
  4557  0116AE  6EE6               	movwf	postinc1,c
  4558  0116B0  EC8D  F0CE         	call	_sprintf	;wreg free
  4559                           
  4560                           ; BSR set to: 0
  4561                           ;main.c: 286:    update_lcd(0);
  4562  0116B4  0E00               	movlw	0
  4563  0116B6  6EE6               	movwf	postinc1,c
  4564  0116B8  EC05  F0CE         	call	_update_lcd	;wreg free
  4565                           
  4566                           ;main.c: 287:    uint16_t i_esr = 1;
  4567  0116BC  0E01               	movlw	1
  4568  0116BE  6E0B               	movwf	(btemp+10)^0,c
  4569  0116C0  0E00               	movlw	0
  4570  0116C2  6E0C               	movwf	(btemp+11)^0,c
  4571                           
  4572                           ;stkvar	_i_esr @ sp[(-17)+8]
  4573  0116C4  0EF7               	movlw	-9
  4574  0116C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4575  0116CC  0EF8               	movlw	-8
  4576  0116CE  0060  F033  FFE3   	movff	btemp+11,plusw1
  4577                           
  4578                           ;main.c: 289:    float esr_temp;;main.c: 290:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  4579  0116D4  D06D               	goto	l13158
  4580  0116D6                     l13146:
  4581                           
  4582                           ;main.c: 291:     WaitMs(110);
  4583  0116D6  0E6E               	movlw	110
  4584  0116D8  6EE6               	movwf	postinc1,c
  4585  0116DA  0E00               	movlw	0
  4586  0116DC  6EE6               	movwf	postinc1,c
  4587  0116DE  EC8A  F0DC         	call	_WaitMs	;wreg free
  4588                           
  4589                           ;main.c: 292:     shape = (uint8_t) fabsf(esr_temp);
  4590                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4591  0116E2  0EF3               	movlw	-13
  4592  0116E4  006F FF8F FFE6     	movff	plusw1,postinc1
  4593  0116EA  006F FF8F FFE6     	movff	plusw1,postinc1
  4594  0116F0  006F FF8F FFE6     	movff	plusw1,postinc1
  4595  0116F6  006F FF8F FFE6     	movff	plusw1,postinc1
  4596  0116FC  ECF7  F0D2         	call	_fabsf	;wreg free
  4597  011700  0060  F007  FFE6   	movff	btemp,postinc1
  4598  011706  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4599  01170C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4600  011712  0060  F013  FFE6   	movff	btemp+3,postinc1
  4601  011718  EC3B  F0C7         	call	___fltol	;wreg free
  4602  01171C  0060  F004  F00C   	movff	btemp,btemp+11
  4603                           
  4604                           ;stkvar	_shape @ sp[(-17)+10]
  4605  011722  0EF9               	movlw	-7
  4606  011724  0060  F033  FFE3   	movff	btemp+11,plusw1
  4607                           
  4608                           ;main.c: 293:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  4609  01172A  0E00               	movlw	0
  4610  01172C  6EE6               	movwf	postinc1,c
  4611                           
  4612                           ;stkvar	_shape @ sp[(-18)+10]
  4613  01172E  0EF8               	movlw	-8
  4614  011730  50E3               	movf	plusw1,w,c
  4615  011732  6EE6               	movwf	postinc1,c
  4616  011734  EC80  F0D0         	call	_spinners	;wreg free
  4617  011738  5001               	movf	btemp^0,w,c
  4618  01173A  6EE6               	movwf	postinc1,c
  4619  01173C  0E00               	movlw	0
  4620  01173E  6EE6               	movwf	postinc1,c
  4621  011740  0E00               	movlw	0
  4622  011742  6EE6               	movwf	postinc1,c
  4623  011744  0E00               	movlw	0
  4624  011746  6EE6               	movwf	postinc1,c
  4625  011748  EC80  F0D0         	call	_spinners	;wreg free
  4626  01174C  5001               	movf	btemp^0,w,c
  4627  01174E  6EE6               	movwf	postinc1,c
  4628  011750  0E00               	movlw	0
  4629  011752  6EE6               	movwf	postinc1,c
  4630  011754  0E33               	movlw	low STR_15
  4631  011756  6EE6               	movwf	postinc1,c
  4632  011758  0EFF               	movlw	high STR_15
  4633  01175A  6EE6               	movwf	postinc1,c
  4634  01175C  0E00               	movlw	0
  4635  01175E  6EE6               	movwf	postinc1,c
  4636  011760  0E02               	movlw	2
  4637  011762  6EE6               	movwf	postinc1,c
  4638  011764  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  4639  011768  0060  F007  FFE6   	movff	btemp,postinc1
  4640  01176E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4641  011774  0E08               	movlw	8
  4642  011776  6EE6               	movwf	postinc1,c
  4643  011778  EC8D  F0CE         	call	_sprintf	;wreg free
  4644                           
  4645                           ; BSR set to: 0
  4646                           ;main.c: 294:     update_lcd(0);
  4647  01177C  0E00               	movlw	0
  4648  01177E  6EE6               	movwf	postinc1,c
  4649  011780  EC05  F0CE         	call	_update_lcd	;wreg free
  4650                           
  4651                           ;main.c: 296:     if (i_esr++ > 512)
  4652                           ;stkvar	_i_esr @ sp[(-17)+8]
  4653  011784  50E1               	movf	fsr1l,w,c
  4654  011786  0FF7               	addlw	-9
  4655  011788  6ED9               	movwf	fsr2l,c
  4656  01178A  50E2               	movf	fsr1h,w,c
  4657  01178C  6EDA               	movwf	fsr2h,c
  4658  01178E  0EFF               	movlw	255
  4659  011790  22DA               	addwfc	fsr2h,f,c
  4660  011792  006F FF7C  F00B    	movff	indf2,btemp+10
  4661  011798  0E01               	movlw	1
  4662  01179A  26DE               	addwf	postinc2,f,c
  4663  01179C  006F FF7C  F00C    	movff	indf2,btemp+11
  4664  0117A2  0E00               	movlw	0
  4665  0117A4  22DD               	addwfc	postdec2,f,c
  4666  0117A6  040B               	decf	(btemp+10)^0,w,c
  4667  0117A8  0E02               	movlw	2
  4668  0117AA  580C               	subwfb	(btemp+11)^0,w,c
  4669  0117AC  B0D8               	btfsc	status,0,c
  4670  0117AE  D017               	goto	u12580
  4671  0117B0                     l13158:
  4672                           
  4673                           ;main.c: 290:    while ((esr_temp = esr_check(0)) < 0.0) {
  4674  0117B0  0E00               	movlw	0
  4675  0117B2  6EE6               	movwf	postinc1,c
  4676  0117B4  ECA0  F0B8         	call	_esr_check	;wreg free
  4677                           
  4678                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4679  0117B8  0EF3               	movlw	-13
  4680  0117BA  0060  F007  FFE3   	movff	btemp,plusw1
  4681  0117C0  0EF4               	movlw	-12
  4682  0117C2  0060  F00B  FFE3   	movff	btemp+1,plusw1
  4683  0117C8  0EF5               	movlw	-11
  4684  0117CA  0060  F00F  FFE3   	movff	btemp+2,plusw1
  4685  0117D0  0EF6               	movlw	-10
  4686  0117D2  0060  F013  FFE3   	movff	btemp+3,plusw1
  4687  0117D8  0EF6               	movlw	-10
  4688  0117DA  BEE3               	btfsc	plusw1,7,c
  4689  0117DC  D77C               	goto	l13146
  4690  0117DE                     u12580:
  4691                           
  4692                           ;main.c: 299:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  4693  0117DE  EE21  F387         	lfsr	2,_C+136	;volatile
  4694  0117E2  006F FF7B FFE6     	movff	postinc2,postinc1
  4695  0117E8  006F FF7B FFE6     	movff	postinc2,postinc1
  4696  0117EE  006F FF7B FFE6     	movff	postinc2,postinc1
  4697  0117F4  006F FF7B FFE6     	movff	postinc2,postinc1
  4698  0117FA  0E40               	movlw	low STR_16
  4699  0117FC  6EE6               	movwf	postinc1,c
  4700  0117FE  0EFD               	movlw	high STR_16
  4701  011800  6EE6               	movwf	postinc1,c
  4702  011802  0E00               	movlw	0
  4703  011804  6EE6               	movwf	postinc1,c
  4704  011806  0E00               	movlw	0
  4705  011808  6EE6               	movwf	postinc1,c
  4706  01180A  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  4707  01180E  0060  F007  FFE6   	movff	btemp,postinc1
  4708  011814  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4709  01181A  0E08               	movlw	8
  4710  01181C  6EE6               	movwf	postinc1,c
  4711  01181E  EC8D  F0CE         	call	_sprintf	;wreg free
  4712                           
  4713                           ;main.c: 300:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  4714  011822  EE22  F00D         	lfsr	2,_C+270	;volatile
  4715  011826  006F FF7B FFE6     	movff	postinc2,postinc1
  4716  01182C  006F FF7B FFE6     	movff	postinc2,postinc1
  4717  011832  006F FF7B FFE6     	movff	postinc2,postinc1
  4718  011838  006F FF7B FFE6     	movff	postinc2,postinc1
  4719  01183E  EE22  F019         	lfsr	2,_C+282	;volatile
  4720  011842  006F FF7B FFE6     	movff	postinc2,postinc1
  4721  011848  006F FF7B FFE6     	movff	postinc2,postinc1
  4722  01184E  006F FF7B FFE6     	movff	postinc2,postinc1
  4723  011854  006F FF7B FFE6     	movff	postinc2,postinc1
  4724  01185A  0E50               	movlw	low STR_17
  4725  01185C  6EE6               	movwf	postinc1,c
  4726  01185E  0EFC               	movlw	high STR_17
  4727  011860  6EE6               	movwf	postinc1,c
  4728  011862  0E00               	movlw	0
  4729  011864  6EE6               	movwf	postinc1,c
  4730  011866  0E01               	movlw	1
  4731  011868  6EE6               	movwf	postinc1,c
  4732  01186A  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  4733  01186E  0060  F007  FFE6   	movff	btemp,postinc1
  4734  011874  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4735  01187A  0E0C               	movlw	12
  4736  01187C  6EE6               	movwf	postinc1,c
  4737  01187E  EC8D  F0CE         	call	_sprintf	;wreg free
  4738                           
  4739                           ;main.c: 301:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  4740  011882  EE22  F011         	lfsr	2,_C+274	;volatile
  4741  011886  006F FF7B FFE6     	movff	postinc2,postinc1
  4742  01188C  006F FF7B FFE6     	movff	postinc2,postinc1
  4743  011892  006F FF7B FFE6     	movff	postinc2,postinc1
  4744  011898  006F FF7B FFE6     	movff	postinc2,postinc1
  4745  01189E  EE22  F01D         	lfsr	2,_C+286	;volatile
  4746  0118A2  006F FF7B FFE6     	movff	postinc2,postinc1
  4747  0118A8  006F FF7B FFE6     	movff	postinc2,postinc1
  4748  0118AE  006F FF7B FFE6     	movff	postinc2,postinc1
  4749  0118B4  006F FF7B FFE6     	movff	postinc2,postinc1
  4750  0118BA  0E6A               	movlw	low STR_18
  4751  0118BC  6EE6               	movwf	postinc1,c
  4752  0118BE  0EFC               	movlw	high STR_18
  4753  0118C0  6EE6               	movwf	postinc1,c
  4754  0118C2  0E00               	movlw	0
  4755  0118C4  6EE6               	movwf	postinc1,c
  4756  0118C6  0E02               	movlw	2
  4757  0118C8  6EE6               	movwf	postinc1,c
  4758  0118CA  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  4759  0118CE  0060  F007  FFE6   	movff	btemp,postinc1
  4760  0118D4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4761  0118DA  0E0C               	movlw	12
  4762  0118DC  6EE6               	movwf	postinc1,c
  4763  0118DE  EC8D  F0CE         	call	_sprintf	;wreg free
  4764                           
  4765                           ;main.c: 302:    update_lcd(0);
  4766  0118E2  0E00               	movlw	0
  4767  0118E4  6EE6               	movwf	postinc1,c
  4768  0118E6  EC05  F0CE         	call	_update_lcd	;wreg free
  4769                           
  4770                           ;main.c: 303:    WaitMs(5000);
  4771  0118EA  0E88               	movlw	136
  4772  0118EC  6EE6               	movwf	postinc1,c
  4773  0118EE  0E13               	movlw	19
  4774  0118F0  6EE6               	movwf	postinc1,c
  4775  0118F2  EC8A  F0DC         	call	_WaitMs	;wreg free
  4776                           
  4777                           ;main.c: 304:    V.system_stable = 1;
  4778  0118F6  0E01               	movlw	1
  4779  0118F8  0101               	movlb	1	; () banked
  4780  0118FA  6FDE               	movwf	(_V+174)& (0+255),b	;volatile
  4781                           
  4782                           ;main.c: 305:    break;
  4783  0118FC  D01C               	goto	l13170
  4784  0118FE                     l1340:
  4785                           
  4786                           ; BSR set to: 1
  4787                           ;main.c: 311:    P.SYSTEM_STABLE = 1;
  4788  0118FE  0100               	movlb	0	; () banked
  4789  011900  819F               	bsf	(_P+1)& (0+255),0,b	;volatile
  4790                           
  4791                           ;main.c: 312:    break;
  4792  011902  D019               	goto	l13170
  4793  011904                     l1342:
  4794                           
  4795                           ; BSR set to: 1
  4796                           ;main.c: 315:    V.ui_state = UI_STATE_INIT;
  4797  011904  6B30               	clrf	_V& (0+255),b	;volatile
  4798                           
  4799                           ;main.c: 316:    break;
  4800  011906  D017               	goto	l13170
  4801  011908                     l13168:
  4802  011908  0101               	movlb	1	; () banked
  4803  01190A  5130               	movf	_V& (0+255),w,b	;volatile
  4804  01190C  6E0B               	movwf	(btemp+10)^0,c
  4805  01190E  6A0C               	clrf	(btemp+11)^0,c
  4806                           
  4807                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4808                           ; Switch size 1, requested type "simple"
  4809                           ; Number of cases is 1, Range of values is 0 to 0
  4810                           ; switch strategies available:
  4811                           ; Name         Instructions Cycles
  4812                           ; simple_byte            4     3 (average)
  4813                           ;	Chosen strategy is simple_byte
  4814  011910  500C               	movf	(btemp+11)^0,w,c
  4815  011912  0A00               	xorlw	0	; case 0
  4816  011914  A4D8               	btfss	status,2,c
  4817  011916  D7F6               	goto	l1342
  4818                           
  4819                           ; BSR set to: 1
  4820                           ; Switch size 1, requested type "simple"
  4821                           ; Number of cases is 5, Range of values is 0 to 5
  4822                           ; switch strategies available:
  4823                           ; Name         Instructions Cycles
  4824                           ; simple_byte           16     9 (average)
  4825                           ;	Chosen strategy is simple_byte
  4826  011918  500B               	movf	(btemp+10)^0,w,c
  4827  01191A  0A00               	xorlw	0	; case 0
  4828  01191C  B4D8               	btfsc	status,2,c
  4829  01191E  D4CE               	goto	l13050
  4830  011920  0A01               	xorlw	1	; case 1
  4831  011922  B4D8               	btfsc	status,2,c
  4832  011924  D008               	goto	l13170
  4833  011926  0A02               	xorlw	2	; case 3
  4834  011928  B4D8               	btfsc	status,2,c
  4835  01192A  D005               	goto	l13170
  4836  01192C  0A07               	xorlw	7	; case 4
  4837  01192E  B4D8               	btfsc	status,2,c
  4838  011930  D7E6               	goto	l1340
  4839  011932  0A01               	xorlw	1	; case 5
  4840  011934  D7E7               	goto	l1342
  4841  011936                     l13170:
  4842                           
  4843                           ;main.c: 319:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  4844  011936  0E01               	movlw	1
  4845  011938  6EE6               	movwf	postinc1,c
  4846  01193A  ECBB  F0DD         	call	_TimerDone	;wreg free
  4847  01193E  5001               	movf	btemp^0,w,c
  4848  011940  B4D8               	btfsc	status,2,c
  4849  011942  D013               	goto	l13182
  4850  011944  ECBF  F0E0         	call	_check_adc_scan	;wreg free
  4851  011948  5001               	movf	btemp^0,w,c
  4852  01194A  B4D8               	btfsc	status,2,c
  4853  01194C  D00E               	goto	l13182
  4854                           
  4855                           ;main.c: 323:    convert_adc_data();
  4856  01194E  EC9B  F0D2         	call	_convert_adc_data	;wreg free
  4857                           
  4858                           ;main.c: 327:    clear_adc_scan();
  4859  011952  ECCF  F0E0         	call	_clear_adc_scan	;wreg free
  4860                           
  4861                           ; BSR set to: 1
  4862                           ;main.c: 328:    start_adc_scan();
  4863  011956  EC2E  F0D8         	call	_start_adc_scan	;wreg free
  4864                           
  4865                           ;main.c: 329:    StartTimer(TMR_ADC, 200);
  4866  01195A  0EC8               	movlw	200
  4867  01195C  6EE6               	movwf	postinc1,c
  4868  01195E  0E00               	movlw	0
  4869  011960  6EE6               	movwf	postinc1,c
  4870  011962  0E01               	movlw	1
  4871  011964  6EE6               	movwf	postinc1,c
  4872  011966  EC95  F0DB         	call	_StartTimer	;wreg free
  4873  01196A                     l13182:
  4874                           
  4875                           ;main.c: 336:   if (TimerDone(TMR_DISPLAY)) {
  4876                           
  4877                           ;main.c: 332:   if (V.ticks) {
  4878  01196A  0E0A               	movlw	10
  4879  01196C  6EE6               	movwf	postinc1,c
  4880  01196E  ECBB  F0DD         	call	_TimerDone	;wreg free
  4881  011972  5001               	movf	btemp^0,w,c
  4882  011974  B4D8               	btfsc	status,2,c
  4883  011976  EF45  F091         	goto	l13258
  4884                           
  4885                           ;main.c: 337:    if (TimerDone(TMR_HELPDIS)) {
  4886  01197A  0E09               	movlw	9
  4887  01197C  6EE6               	movwf	postinc1,c
  4888  01197E  ECBB  F0DD         	call	_TimerDone	;wreg free
  4889  011982  5001               	movf	btemp^0,w,c
  4890  011984  B4D8               	btfsc	status,2,c
  4891  011986  D004               	goto	l13190
  4892                           
  4893                           ;main.c: 338:     set_display_info(DIS_STR);
  4894  011988  0E00               	movlw	0
  4895  01198A  6EE6               	movwf	postinc1,c
  4896  01198C  ECC1  F0DF         	call	_set_display_info	;wreg free
  4897  011990                     l13190:
  4898                           
  4899                           ;main.c: 340:    calc_model_data();
  4900  011990  EC3B  F0AE         	call	_calc_model_data	;wreg free
  4901                           
  4902                           ; BSR set to: 57
  4903                           ;main.c: 347:     hid_display(&H);
  4904                           
  4905                           ;main.c: 342:    if (0) {
  4906  011994  0EF7               	movlw	_H& (0+255)
  4907  011996  6EE6               	movwf	postinc1,c
  4908  011998  EC12  F0CF         	call	_hid_display	;wreg free
  4909                           
  4910                           ;main.c: 348:     switch (H.hid_display) {
  4911  01199C  EFF4  F090         	goto	l13238
  4912  0119A0                     l1350:
  4913                           
  4914                           ; BSR set to: 0
  4915                           ;main.c: 350:      V.calib = 0;
  4916  0119A0  0101               	movlb	1	; () banked
  4917  0119A2  6BDC               	clrf	(_V+172)& (0+255),b	;volatile
  4918                           
  4919                           ; BSR set to: 1
  4920                           ;main.c: 351:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f      ", (C.day) ? 'D' :
      +                           ' ', C.p_pv);
  4921  0119A4  EE22  F021         	lfsr	2,_C+290	;volatile
  4922  0119A8  50DF               	movf	indf2,w,c
  4923  0119AA  A4D8               	btfss	status,2,c
  4924  0119AC  D002               	goto	l13200
  4925                           
  4926                           ; BSR set to: 1
  4927  0119AE  0E20               	movlw	32
  4928  0119B0  D001               	goto	L1
  4929  0119B2                     l13200:
  4930                           
  4931                           ; BSR set to: 1
  4932  0119B2  0E44               	movlw	68
  4933  0119B4                     L1:
  4934  0119B4  6E0B               	movwf	(btemp+10)^0,c
  4935  0119B6  0E00               	movlw	0
  4936  0119B8  6E0C               	movwf	(btemp+11)^0,c
  4937                           
  4938                           ;stkvar	_main$3752 @ sp[(-17)+2]
  4939  0119BA  0EF1               	movlw	-15
  4940  0119BC  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4941  0119C2  0EF2               	movlw	-14
  4942  0119C4  0060  F033  FFE3   	movff	btemp+11,plusw1
  4943                           
  4944                           ; BSR set to: 1
  4945  0119CA  EE21  F37B         	lfsr	2,_C+124	;volatile
  4946  0119CE  006F FF7B FFE6     	movff	postinc2,postinc1
  4947  0119D4  006F FF7B FFE6     	movff	postinc2,postinc1
  4948  0119DA  006F FF7B FFE6     	movff	postinc2,postinc1
  4949  0119E0  006F FF7B FFE6     	movff	postinc2,postinc1
  4950                           
  4951                           ;stkvar	_main$3752 @ sp[(-21)+2]
  4952  0119E6  0EED               	movlw	-19
  4953  0119E8  006F FF8F FFE6     	movff	plusw1,postinc1
  4954  0119EE  006F FF8F FFE6     	movff	plusw1,postinc1
  4955  0119F4  0E1C               	movlw	low STR_22
  4956  0119F6  6EE6               	movwf	postinc1,c
  4957  0119F8  0EFE               	movlw	high STR_22
  4958  0119FA  6EE6               	movwf	postinc1,c
  4959  0119FC  0E00               	movlw	0
  4960  0119FE  6EE6               	movwf	postinc1,c
  4961  011A00  0E00               	movlw	0
  4962  011A02  6EE6               	movwf	postinc1,c
  4963  011A04  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  4964  011A08  0060  F007  FFE6   	movff	btemp,postinc1
  4965  011A0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4966  011A14  0E0A               	movlw	10
  4967  011A16  6EE6               	movwf	postinc1,c
  4968  011A18  EC8D  F0CE         	call	_sprintf	;wreg free
  4969                           
  4970                           ; BSR set to: 0
  4971                           ;main.c: 352:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f       ", C.p_load);
  4972  011A1C  EE21  F373         	lfsr	2,_C+116	;volatile
  4973  011A20  006F FF7B FFE6     	movff	postinc2,postinc1
  4974  011A26  006F FF7B FFE6     	movff	postinc2,postinc1
  4975  011A2C  006F FF7B FFE6     	movff	postinc2,postinc1
  4976  011A32  006F FF7B FFE6     	movff	postinc2,postinc1
  4977  011A38  0E06               	movlw	low STR_23
  4978  011A3A  6EE6               	movwf	postinc1,c
  4979  011A3C  0EFE               	movlw	high STR_23
  4980  011A3E  6EE6               	movwf	postinc1,c
  4981  011A40  0E00               	movlw	0
  4982  011A42  6EE6               	movwf	postinc1,c
  4983  011A44  0E01               	movlw	1
  4984  011A46  6EE6               	movwf	postinc1,c
  4985  011A48  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  4986  011A4C  0060  F007  FFE6   	movff	btemp,postinc1
  4987  011A52  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4988  011A58  0E08               	movlw	8
  4989  011A5A  6EE6               	movwf	postinc1,c
  4990  011A5C  EC8D  F0CE         	call	_sprintf	;wreg free
  4991                           
  4992                           ; BSR set to: 0
  4993                           ;main.c: 353:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f       ", C.p_inverter);
  4994  011A60  EE21  F377         	lfsr	2,_C+120	;volatile
  4995  011A64  006F FF7B FFE6     	movff	postinc2,postinc1
  4996  011A6A  006F FF7B FFE6     	movff	postinc2,postinc1
  4997  011A70  006F FF7B FFE6     	movff	postinc2,postinc1
  4998  011A76  006F FF7B FFE6     	movff	postinc2,postinc1
  4999  011A7C  0EF0               	movlw	low STR_24
  5000  011A7E  6EE6               	movwf	postinc1,c
  5001  011A80  0EFD               	movlw	high STR_24
  5002  011A82  6EE6               	movwf	postinc1,c
  5003  011A84  0E00               	movlw	0
  5004  011A86  6EE6               	movwf	postinc1,c
  5005  011A88  0E02               	movlw	2
  5006  011A8A  6EE6               	movwf	postinc1,c
  5007  011A8C  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  5008  011A90  0060  F007  FFE6   	movff	btemp,postinc1
  5009  011A96  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5010  011A9C  0E08               	movlw	8
  5011  011A9E  6EE6               	movwf	postinc1,c
  5012  011AA0  EC8D  F0CE         	call	_sprintf	;wreg free
  5013                           
  5014                           ; BSR set to: 0
  5015                           ;main.c: 355:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f       ", (C.day) ? 'D' :
      +                           ' ', C.pvkw);
  5016  011AA4  EE22  F021         	lfsr	2,_C+290	;volatile
  5017  011AA8  50DF               	movf	indf2,w,c
  5018  011AAA  A4D8               	btfss	status,2,c
  5019  011AAC  D002               	goto	l13212
  5020                           
  5021                           ; BSR set to: 0
  5022  011AAE  0E20               	movlw	32
  5023  011AB0  D001               	goto	L2
  5024  011AB2                     l13212:
  5025                           
  5026                           ; BSR set to: 0
  5027  011AB2  0E44               	movlw	68
  5028  011AB4                     L2:
  5029  011AB4  6E0B               	movwf	(btemp+10)^0,c
  5030  011AB6  0E00               	movlw	0
  5031  011AB8  6E0C               	movwf	(btemp+11)^0,c
  5032                           
  5033                           ;stkvar	_main$3756 @ sp[(-17)+0]
  5034  011ABA  0EEF               	movlw	-17
  5035  011ABC  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5036  011AC2  0EF0               	movlw	-16
  5037  011AC4  0060  F033  FFE3   	movff	btemp+11,plusw1
  5038                           
  5039                           ; BSR set to: 0
  5040  011ACA  EE21  F3A7         	lfsr	2,_C+168	;volatile
  5041  011ACE  006F FF7B FFE6     	movff	postinc2,postinc1
  5042  011AD4  006F FF7B FFE6     	movff	postinc2,postinc1
  5043  011ADA  006F FF7B FFE6     	movff	postinc2,postinc1
  5044  011AE0  006F FF7B FFE6     	movff	postinc2,postinc1
  5045                           
  5046                           ;stkvar	_main$3756 @ sp[(-21)+0]
  5047  011AE6  0EEB               	movlw	-21
  5048  011AE8  006F FF8F FFE6     	movff	plusw1,postinc1
  5049  011AEE  006F FF8F FFE6     	movff	plusw1,postinc1
  5050  011AF4  0EDA               	movlw	low STR_25
  5051  011AF6  6EE6               	movwf	postinc1,c
  5052  011AF8  0EFD               	movlw	high STR_25
  5053  011AFA  6EE6               	movwf	postinc1,c
  5054  011AFC  0E01               	movlw	1
  5055  011AFE  6EE6               	movwf	postinc1,c
  5056  011B00  0E00               	movlw	0
  5057  011B02  6EE6               	movwf	postinc1,c
  5058  011B04  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  5059  011B08  0060  F007  FFE6   	movff	btemp,postinc1
  5060  011B0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5061  011B14  0E0A               	movlw	10
  5062  011B16  6EE6               	movwf	postinc1,c
  5063  011B18  EC8D  F0CE         	call	_sprintf	;wreg free
  5064                           
  5065                           ; BSR set to: 0
  5066                           ;main.c: 356:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f        ", C.loadkw);
  5067  011B1C  EE21  F3AF         	lfsr	2,_C+176	;volatile
  5068  011B20  006F FF7B FFE6     	movff	postinc2,postinc1
  5069  011B26  006F FF7B FFE6     	movff	postinc2,postinc1
  5070  011B2C  006F FF7B FFE6     	movff	postinc2,postinc1
  5071  011B32  006F FF7B FFE6     	movff	postinc2,postinc1
  5072  011B38  0EC4               	movlw	low STR_26
  5073  011B3A  6EE6               	movwf	postinc1,c
  5074  011B3C  0EFD               	movlw	high STR_26
  5075  011B3E  6EE6               	movwf	postinc1,c
  5076  011B40  0E01               	movlw	1
  5077  011B42  6EE6               	movwf	postinc1,c
  5078  011B44  0E01               	movlw	1
  5079  011B46  6EE6               	movwf	postinc1,c
  5080  011B48  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  5081  011B4C  0060  F007  FFE6   	movff	btemp,postinc1
  5082  011B52  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5083  011B58  0E08               	movlw	8
  5084  011B5A  6EE6               	movwf	postinc1,c
  5085  011B5C  EC8D  F0CE         	call	_sprintf	;wreg free
  5086                           
  5087                           ; BSR set to: 0
  5088                           ;main.c: 357:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f        ", C.invkw);
  5089  011B60  EE21  F3AB         	lfsr	2,_C+172	;volatile
  5090  011B64  006F FF7B FFE6     	movff	postinc2,postinc1
  5091  011B6A  006F FF7B FFE6     	movff	postinc2,postinc1
  5092  011B70  006F FF7B FFE6     	movff	postinc2,postinc1
  5093  011B76  006F FF7B FFE6     	movff	postinc2,postinc1
  5094  011B7C  0EAE               	movlw	low STR_27
  5095  011B7E  6EE6               	movwf	postinc1,c
  5096  011B80  0EFD               	movlw	high STR_27
  5097  011B82  6EE6               	movwf	postinc1,c
  5098  011B84  0E01               	movlw	1
  5099  011B86  6EE6               	movwf	postinc1,c
  5100  011B88  0E02               	movlw	2
  5101  011B8A  6EE6               	movwf	postinc1,c
  5102  011B8C  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  5103  011B90  0060  F007  FFE6   	movff	btemp,postinc1
  5104  011B96  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5105  011B9C  0E08               	movlw	8
  5106  011B9E  6EE6               	movwf	postinc1,c
  5107  011BA0  EC8D  F0CE         	call	_sprintf	;wreg free
  5108                           
  5109                           ;main.c: 358:      break;
  5110  011BA4  D337               	goto	l13240
  5111  011BA6                     l1360:
  5112                           
  5113                           ; BSR set to: 0
  5114                           ;main.c: 360:      V.calib = 0;
  5115  011BA6  0101               	movlb	1	; () banked
  5116  011BA8  6BDC               	clrf	(_V+172)& (0+255),b	;volatile
  5117                           
  5118                           ; BSR set to: 1
  5119                           ;main.c: 361:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f    ", C.calc[V_PV], C
      +                          .calc[C_PV]);
  5120  011BAA  EE21  F303         	lfsr	2,_C+4	;volatile
  5121  011BAE  006F FF7B FFE6     	movff	postinc2,postinc1
  5122  011BB4  006F FF7B FFE6     	movff	postinc2,postinc1
  5123  011BBA  006F FF7B FFE6     	movff	postinc2,postinc1
  5124  011BC0  006F FF7B FFE6     	movff	postinc2,postinc1
  5125  011BC6  EE21  F313         	lfsr	2,_C+20	;volatile
  5126  011BCA  006F FF7B FFE6     	movff	postinc2,postinc1
  5127  011BD0  006F FF7B FFE6     	movff	postinc2,postinc1
  5128  011BD6  006F FF7B FFE6     	movff	postinc2,postinc1
  5129  011BDC  006F FF7B FFE6     	movff	postinc2,postinc1
  5130  011BE2  0E74               	movlw	low STR_28
  5131  011BE4  6EE6               	movwf	postinc1,c
  5132  011BE6  0EFE               	movlw	high STR_28
  5133  011BE8  6EE6               	movwf	postinc1,c
  5134  011BEA  0E00               	movlw	0
  5135  011BEC  6EE6               	movwf	postinc1,c
  5136  011BEE  0E00               	movlw	0
  5137  011BF0  6EE6               	movwf	postinc1,c
  5138  011BF2  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  5139  011BF6  0060  F007  FFE6   	movff	btemp,postinc1
  5140  011BFC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5141  011C02  0E0C               	movlw	12
  5142  011C04  6EE6               	movwf	postinc1,c
  5143  011C06  EC8D  F0CE         	call	_sprintf	;wreg free
  5144                           
  5145                           ;main.c: 362:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f    ", C.calc[V_BAT], 
      +                          C.calc[C_BATT]);
  5146  011C0A  EE21  F2FF         	lfsr	2,_C
  5147  011C0E  006F FF7B FFE6     	movff	postinc2,postinc1
  5148  011C14  006F FF7B FFE6     	movff	postinc2,postinc1
  5149  011C1A  006F FF7B FFE6     	movff	postinc2,postinc1
  5150  011C20  006F FF7B FFE6     	movff	postinc2,postinc1
  5151  011C26  EE21  F30F         	lfsr	2,_C+16	;volatile
  5152  011C2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5153  011C30  006F FF7B FFE6     	movff	postinc2,postinc1
  5154  011C36  006F FF7B FFE6     	movff	postinc2,postinc1
  5155  011C3C  006F FF7B FFE6     	movff	postinc2,postinc1
  5156  011C42  0E48               	movlw	low STR_29
  5157  011C44  6EE6               	movwf	postinc1,c
  5158  011C46  0EFE               	movlw	high STR_29
  5159  011C48  6EE6               	movwf	postinc1,c
  5160  011C4A  0E00               	movlw	0
  5161  011C4C  6EE6               	movwf	postinc1,c
  5162  011C4E  0E01               	movlw	1
  5163  011C50  6EE6               	movwf	postinc1,c
  5164  011C52  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  5165  011C56  0060  F007  FFE6   	movff	btemp,postinc1
  5166  011C5C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5167  011C62  0E0C               	movlw	12
  5168  011C64  6EE6               	movwf	postinc1,c
  5169  011C66  EC8D  F0CE         	call	_sprintf	;wreg free
  5170                           
  5171                           ;main.c: 363:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f    ", C.calc[V_CC], C
      +                          .c_load);
  5172  011C6A  EE21  F33F         	lfsr	2,_C+64	;volatile
  5173  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5174  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
  5175  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  5176  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  5177  011C86  EE21  F307         	lfsr	2,_C+8	;volatile
  5178  011C8A  006F FF7B FFE6     	movff	postinc2,postinc1
  5179  011C90  006F FF7B FFE6     	movff	postinc2,postinc1
  5180  011C96  006F FF7B FFE6     	movff	postinc2,postinc1
  5181  011C9C  006F FF7B FFE6     	movff	postinc2,postinc1
  5182  011CA2  0E5E               	movlw	low STR_30
  5183  011CA4  6EE6               	movwf	postinc1,c
  5184  011CA6  0EFE               	movlw	high STR_30
  5185  011CA8  6EE6               	movwf	postinc1,c
  5186  011CAA  0E00               	movlw	0
  5187  011CAC  6EE6               	movwf	postinc1,c
  5188  011CAE  0E02               	movlw	2
  5189  011CB0  6EE6               	movwf	postinc1,c
  5190  011CB2  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  5191  011CB6  0060  F007  FFE6   	movff	btemp,postinc1
  5192  011CBC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5193  011CC2  0E0C               	movlw	12
  5194  011CC4  6EE6               	movwf	postinc1,c
  5195  011CC6  EC8D  F0CE         	call	_sprintf	;wreg free
  5196                           
  5197                           ;main.c: 365:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f        ", C.bkwi);
  5198  011CCA  EE21  F39F         	lfsr	2,_C+160	;volatile
  5199  011CCE  006F FF7B FFE6     	movff	postinc2,postinc1
  5200  011CD4  006F FF7B FFE6     	movff	postinc2,postinc1
  5201  011CDA  006F FF7B FFE6     	movff	postinc2,postinc1
  5202  011CE0  006F FF7B FFE6     	movff	postinc2,postinc1
  5203  011CE6  0E6C               	movlw	low STR_31
  5204  011CE8  6EE6               	movwf	postinc1,c
  5205  011CEA  0EFD               	movlw	high STR_31
  5206  011CEC  6EE6               	movwf	postinc1,c
  5207  011CEE  0E01               	movlw	1
  5208  011CF0  6EE6               	movwf	postinc1,c
  5209  011CF2  0E00               	movlw	0
  5210  011CF4  6EE6               	movwf	postinc1,c
  5211  011CF6  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  5212  011CFA  0060  F007  FFE6   	movff	btemp,postinc1
  5213  011D00  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5214  011D06  0E08               	movlw	8
  5215  011D08  6EE6               	movwf	postinc1,c
  5216  011D0A  EC8D  F0CE         	call	_sprintf	;wreg free
  5217                           
  5218                           ;main.c: 366:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f        ", C.bkwo);
  5219  011D0E  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5220  011D12  006F FF7B FFE6     	movff	postinc2,postinc1
  5221  011D18  006F FF7B FFE6     	movff	postinc2,postinc1
  5222  011D1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5223  011D24  006F FF7B FFE6     	movff	postinc2,postinc1
  5224  011D2A  0E82               	movlw	low STR_32
  5225  011D2C  6EE6               	movwf	postinc1,c
  5226  011D2E  0EFD               	movlw	high STR_32
  5227  011D30  6EE6               	movwf	postinc1,c
  5228  011D32  0E01               	movlw	1
  5229  011D34  6EE6               	movwf	postinc1,c
  5230  011D36  0E01               	movlw	1
  5231  011D38  6EE6               	movwf	postinc1,c
  5232  011D3A  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  5233  011D3E  0060  F007  FFE6   	movff	btemp,postinc1
  5234  011D44  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5235  011D4A  0E08               	movlw	8
  5236  011D4C  6EE6               	movwf	postinc1,c
  5237  011D4E  EC8D  F0CE         	call	_sprintf	;wreg free
  5238                           
  5239                           ;main.c: 367:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f        ", C.bkwi + C.bkwo
      +                          );
  5240  011D52  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5241  011D56  006F FF7B FFE6     	movff	postinc2,postinc1
  5242  011D5C  006F FF7B FFE6     	movff	postinc2,postinc1
  5243  011D62  006F FF7B FFE6     	movff	postinc2,postinc1
  5244  011D68  006F FF7B FFE6     	movff	postinc2,postinc1
  5245  011D6E  EE21  F39F         	lfsr	2,_C+160	;volatile
  5246  011D72  006F FF7B FFE6     	movff	postinc2,postinc1
  5247  011D78  006F FF7B FFE6     	movff	postinc2,postinc1
  5248  011D7E  006F FF7B FFE6     	movff	postinc2,postinc1
  5249  011D84  006F FF7B FFE6     	movff	postinc2,postinc1
  5250  011D8A  ECD6  F0A2         	call	___fladd	;wreg free
  5251  011D8E  0060  F007  FFE6   	movff	btemp,postinc1
  5252  011D94  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5253  011D9A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5254  011DA0  0060  F013  FFE6   	movff	btemp+3,postinc1
  5255  011DA6  0E98               	movlw	low STR_33
  5256  011DA8  6EE6               	movwf	postinc1,c
  5257  011DAA  0EFD               	movlw	high STR_33
  5258  011DAC  6EE6               	movwf	postinc1,c
  5259  011DAE  0E01               	movlw	1
  5260  011DB0  6EE6               	movwf	postinc1,c
  5261  011DB2  0E02               	movlw	2
  5262  011DB4  6EE6               	movwf	postinc1,c
  5263  011DB6  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  5264  011DBA  0060  F007  FFE6   	movff	btemp,postinc1
  5265  011DC0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5266  011DC6  0E08               	movlw	8
  5267  011DC8  6EE6               	movwf	postinc1,c
  5268  011DCA  EC8D  F0CE         	call	_sprintf	;wreg free
  5269                           
  5270                           ;main.c: 368:      break;
  5271  011DCE  D222               	goto	l13240
  5272  011DD0                     l1361:
  5273                           
  5274                           ; BSR set to: 0
  5275                           ;main.c: 370:      V.calib = 0;
  5276  011DD0  0101               	movlb	1	; () banked
  5277  011DD2  6BDC               	clrf	(_V+172)& (0+255),b	;volatile
  5278                           
  5279                           ; BSR set to: 1
  5280                           ;main.c: 371:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f        ", C.p_bat);
  5281  011DD4  EE21  F37F         	lfsr	2,_C+128	;volatile
  5282  011DD8  006F FF7B FFE6     	movff	postinc2,postinc1
  5283  011DDE  006F FF7B FFE6     	movff	postinc2,postinc1
  5284  011DE4  006F FF7B FFE6     	movff	postinc2,postinc1
  5285  011DEA  006F FF7B FFE6     	movff	postinc2,postinc1
  5286  011DF0  0EE4               	movlw	low STR_34
  5287  011DF2  6EE6               	movwf	postinc1,c
  5288  011DF4  0EFC               	movlw	high STR_34
  5289  011DF6  6EE6               	movwf	postinc1,c
  5290  011DF8  0E00               	movlw	0
  5291  011DFA  6EE6               	movwf	postinc1,c
  5292  011DFC  0E00               	movlw	0
  5293  011DFE  6EE6               	movwf	postinc1,c
  5294  011E00  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  5295  011E04  0060  F007  FFE6   	movff	btemp,postinc1
  5296  011E0A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5297  011E10  0E08               	movlw	8
  5298  011E12  6EE6               	movwf	postinc1,c
  5299  011E14  EC8D  F0CE         	call	_sprintf	;wreg free
  5300                           
  5301                           ;main.c: 372:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f      ", C.dynamic_ah, 
      +                          C.pv_ah);
  5302  011E18  EE21  F393         	lfsr	2,_C+148	;volatile
  5303  011E1C  006F FF7B FFE6     	movff	postinc2,postinc1
  5304  011E22  006F FF7B FFE6     	movff	postinc2,postinc1
  5305  011E28  006F FF7B FFE6     	movff	postinc2,postinc1
  5306  011E2E  006F FF7B FFE6     	movff	postinc2,postinc1
  5307  011E34  EE21  F38F         	lfsr	2,_C+144	;volatile
  5308  011E38  006F FF7B FFE6     	movff	postinc2,postinc1
  5309  011E3E  006F FF7B FFE6     	movff	postinc2,postinc1
  5310  011E44  006F FF7B FFE6     	movff	postinc2,postinc1
  5311  011E4A  006F FF7B FFE6     	movff	postinc2,postinc1
  5312  011E50  0E29               	movlw	low STR_35
  5313  011E52  6EE6               	movwf	postinc1,c
  5314  011E54  0EFD               	movlw	high STR_35
  5315  011E56  6EE6               	movwf	postinc1,c
  5316  011E58  0E00               	movlw	0
  5317  011E5A  6EE6               	movwf	postinc1,c
  5318  011E5C  0E01               	movlw	1
  5319  011E5E  6EE6               	movwf	postinc1,c
  5320  011E60  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  5321  011E64  0060  F007  FFE6   	movff	btemp,postinc1
  5322  011E6A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5323  011E70  0E0C               	movlw	12
  5324  011E72  6EE6               	movwf	postinc1,c
  5325  011E74  EC8D  F0CE         	call	_sprintf	;wreg free
  5326                           
  5327                           ;main.c: 373:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d        ", spinners(5, 0)
      +                          , C.soc, C.runtime);
  5328  011E78  EE21  F3B3         	lfsr	2,_C+180	;volatile
  5329  011E7C  006F FF78  F00B    	movff	postinc2,btemp+10
  5330  011E82  006F FF74  F00C    	movff	postdec2,btemp+11
  5331  011E88  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5332  011E8E  0060  F033  FFE6   	movff	btemp+11,postinc1
  5333  011E94  EE21  F3B5         	lfsr	2,_C+182	;volatile
  5334  011E98  006F FF78  F00B    	movff	postinc2,btemp+10
  5335  011E9E  006F FF74  F00C    	movff	postdec2,btemp+11
  5336  011EA4  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5337  011EAA  0060  F033  FFE6   	movff	btemp+11,postinc1
  5338  011EB0  0E00               	movlw	0
  5339  011EB2  6EE6               	movwf	postinc1,c
  5340  011EB4  0E05               	movlw	5
  5341  011EB6  6EE6               	movwf	postinc1,c
  5342  011EB8  EC80  F0D0         	call	_spinners	;wreg free
  5343  011EBC  5001               	movf	btemp^0,w,c
  5344  011EBE  6EE6               	movwf	postinc1,c
  5345  011EC0  0E00               	movlw	0
  5346  011EC2  6EE6               	movwf	postinc1,c
  5347  011EC4  0ECD               	movlw	low STR_36
  5348  011EC6  6EE6               	movwf	postinc1,c
  5349  011EC8  0EFC               	movlw	high STR_36
  5350  011ECA  6EE6               	movwf	postinc1,c
  5351  011ECC  0E00               	movlw	0
  5352  011ECE  6EE6               	movwf	postinc1,c
  5353  011ED0  0E02               	movlw	2
  5354  011ED2  6EE6               	movwf	postinc1,c
  5355  011ED4  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  5356  011ED8  0060  F007  FFE6   	movff	btemp,postinc1
  5357  011EDE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5358  011EE4  0E0A               	movlw	10
  5359  011EE6  6EE6               	movwf	postinc1,c
  5360  011EE8  EC8D  F0CE         	call	_sprintf	;wreg free
  5361                           
  5362                           ;main.c: 375:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f            ", C.esr);
  5363  011EEC  EE21  F387         	lfsr	2,_C+136	;volatile
  5364  011EF0  006F FF7B FFE6     	movff	postinc2,postinc1
  5365  011EF6  006F FF7B FFE6     	movff	postinc2,postinc1
  5366  011EFC  006F FF7B FFE6     	movff	postinc2,postinc1
  5367  011F02  006F FF7B FFE6     	movff	postinc2,postinc1
  5368  011F08  0EB6               	movlw	low STR_37
  5369  011F0A  6EE6               	movwf	postinc1,c
  5370  011F0C  0EFC               	movlw	high STR_37
  5371  011F0E  6EE6               	movwf	postinc1,c
  5372  011F10  0E01               	movlw	1
  5373  011F12  6EE6               	movwf	postinc1,c
  5374  011F14  0E00               	movlw	0
  5375  011F16  6EE6               	movwf	postinc1,c
  5376  011F18  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  5377  011F1C  0060  F007  FFE6   	movff	btemp,postinc1
  5378  011F22  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5379  011F28  0E08               	movlw	8
  5380  011F2A  6EE6               	movwf	postinc1,c
  5381  011F2C  EC8D  F0CE         	call	_sprintf	;wreg free
  5382                           
  5383                           ;main.c: 376:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f        ", C.bv_one_load,
      +                           C.load_i1);
  5384  011F30  EE22  F00D         	lfsr	2,_C+270	;volatile
  5385  011F34  006F FF7B FFE6     	movff	postinc2,postinc1
  5386  011F3A  006F FF7B FFE6     	movff	postinc2,postinc1
  5387  011F40  006F FF7B FFE6     	movff	postinc2,postinc1
  5388  011F46  006F FF7B FFE6     	movff	postinc2,postinc1
  5389  011F4C  EE22  F019         	lfsr	2,_C+282	;volatile
  5390  011F50  006F FF7B FFE6     	movff	postinc2,postinc1
  5391  011F56  006F FF7B FFE6     	movff	postinc2,postinc1
  5392  011F5C  006F FF7B FFE6     	movff	postinc2,postinc1
  5393  011F62  006F FF7B FFE6     	movff	postinc2,postinc1
  5394  011F68  0EFB               	movlw	low STR_38
  5395  011F6A  6EE6               	movwf	postinc1,c
  5396  011F6C  0EFC               	movlw	high STR_38
  5397  011F6E  6EE6               	movwf	postinc1,c
  5398  011F70  0E01               	movlw	1
  5399  011F72  6EE6               	movwf	postinc1,c
  5400  011F74  0E01               	movlw	1
  5401  011F76  6EE6               	movwf	postinc1,c
  5402  011F78  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  5403  011F7C  0060  F007  FFE6   	movff	btemp,postinc1
  5404  011F82  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5405  011F88  0E0C               	movlw	12
  5406  011F8A  6EE6               	movwf	postinc1,c
  5407  011F8C  EC8D  F0CE         	call	_sprintf	;wreg free
  5408                           
  5409                           ;main.c: 377:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f        ", C.bv_full_load
      +                          , C.load_i2);
  5410  011F90  EE22  F011         	lfsr	2,_C+274	;volatile
  5411  011F94  006F FF7B FFE6     	movff	postinc2,postinc1
  5412  011F9A  006F FF7B FFE6     	movff	postinc2,postinc1
  5413  011FA0  006F FF7B FFE6     	movff	postinc2,postinc1
  5414  011FA6  006F FF7B FFE6     	movff	postinc2,postinc1
  5415  011FAC  EE22  F01D         	lfsr	2,_C+286	;volatile
  5416  011FB0  006F FF7B FFE6     	movff	postinc2,postinc1
  5417  011FB6  006F FF7B FFE6     	movff	postinc2,postinc1
  5418  011FBC  006F FF7B FFE6     	movff	postinc2,postinc1
  5419  011FC2  006F FF7B FFE6     	movff	postinc2,postinc1
  5420  011FC8  0E12               	movlw	low STR_39
  5421  011FCA  6EE6               	movwf	postinc1,c
  5422  011FCC  0EFD               	movlw	high STR_39
  5423  011FCE  6EE6               	movwf	postinc1,c
  5424  011FD0  0E01               	movlw	1
  5425  011FD2  6EE6               	movwf	postinc1,c
  5426  011FD4  0E02               	movlw	2
  5427  011FD6  6EE6               	movwf	postinc1,c
  5428  011FD8  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  5429  011FDC  0060  F007  FFE6   	movff	btemp,postinc1
  5430  011FE2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5431  011FE8  0E0C               	movlw	12
  5432  011FEA  6EE6               	movwf	postinc1,c
  5433  011FEC  EC8D  F0CE         	call	_sprintf	;wreg free
  5434                           
  5435                           ;main.c: 378:      break;
  5436  011FF0  D111               	goto	l13240
  5437  011FF2                     l13224:
  5438                           
  5439                           ; BSR set to: 0
  5440                           ;main.c: 380:      if (!V.calib) {
  5441  011FF2  0101               	movlb	1	; () banked
  5442  011FF4  51DC               	movf	(_V+172)& (0+255),w,b	;volatile
  5443  011FF6  A4D8               	btfss	status,2,c
  5444  011FF8  D02D               	goto	l13228
  5445                           
  5446                           ; BSR set to: 1
  5447                           ;main.c: 381:       lp_filter(0.0, i, -1);
  5448  011FFA  0EFF               	movlw	255
  5449  011FFC  6EE6               	movwf	postinc1,c
  5450                           
  5451                           ;stkvar	_i @ sp[(-18)+14]
  5452  011FFE  0EFC               	movlw	-4
  5453  012000  50E3               	movf	plusw1,w,c
  5454  012002  6EE6               	movwf	postinc1,c
  5455  012004  0E00               	movlw	0
  5456  012006  6EE6               	movwf	postinc1,c
  5457  012008  0E00               	movlw	0
  5458  01200A  6EE6               	movwf	postinc1,c
  5459  01200C  0E00               	movlw	0
  5460  01200E  6EE6               	movwf	postinc1,c
  5461  012010  0E00               	movlw	0
  5462  012012  6EE6               	movwf	postinc1,c
  5463  012014  EC3F  F0C3         	call	_lp_filter	;wreg free
  5464                           
  5465                           ;main.c: 382:       lp_filter(0.0, j, -1);
  5466  012018  0EFF               	movlw	255
  5467  01201A  6EE6               	movwf	postinc1,c
  5468                           
  5469                           ;stkvar	_j @ sp[(-18)+13]
  5470  01201C  0EFB               	movlw	-5
  5471  01201E  50E3               	movf	plusw1,w,c
  5472  012020  6EE6               	movwf	postinc1,c
  5473  012022  0E00               	movlw	0
  5474  012024  6EE6               	movwf	postinc1,c
  5475  012026  0E00               	movlw	0
  5476  012028  6EE6               	movwf	postinc1,c
  5477  01202A  0E00               	movlw	0
  5478  01202C  6EE6               	movwf	postinc1,c
  5479  01202E  0E00               	movlw	0
  5480  012030  6EE6               	movwf	postinc1,c
  5481  012032  EC3F  F0C3         	call	_lp_filter	;wreg free
  5482                           
  5483                           ;main.c: 383:       lp_filter(0.0, k, -1);
  5484  012036  0EFF               	movlw	255
  5485  012038  6EE6               	movwf	postinc1,c
  5486                           
  5487                           ;stkvar	_k @ sp[(-18)+12]
  5488  01203A  0EFA               	movlw	-6
  5489  01203C  50E3               	movf	plusw1,w,c
  5490  01203E  6EE6               	movwf	postinc1,c
  5491  012040  0E00               	movlw	0
  5492  012042  6EE6               	movwf	postinc1,c
  5493  012044  0E00               	movlw	0
  5494  012046  6EE6               	movwf	postinc1,c
  5495  012048  0E00               	movlw	0
  5496  01204A  6EE6               	movwf	postinc1,c
  5497  01204C  0E00               	movlw	0
  5498  01204E  6EE6               	movwf	postinc1,c
  5499  012050  EC3F  F0C3         	call	_lp_filter	;wreg free
  5500  012054                     l13228:
  5501                           
  5502                           ;main.c: 385:      V.calib = 1;
  5503  012054  0E01               	movlw	1
  5504  012056  0101               	movlb	1	; () banked
  5505  012058  6FDC               	movwf	(_V+172)& (0+255),b	;volatile
  5506                           
  5507                           ; BSR set to: 1
  5508                           ;main.c: 386:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index + 1);
  5509                           ;stkvar	_inp_index @ sp[(-17)+11]
  5510  01205A  0EFA               	movlw	-6
  5511  01205C  50E3               	movf	plusw1,w,c
  5512  01205E  6E0B               	movwf	(btemp+10)^0,c
  5513  012060  6A0C               	clrf	(btemp+11)^0,c
  5514  012062  0E01               	movlw	1
  5515  012064  260B               	addwf	(btemp+10)^0,f,c
  5516  012066  0E00               	movlw	0
  5517  012068  220C               	addwfc	(btemp+11)^0,f,c
  5518  01206A  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5519  012070  0060  F033  FFE6   	movff	btemp+11,postinc1
  5520                           
  5521                           ;stkvar	_i @ sp[(-19)+14]
  5522  012076  0EFB               	movlw	-5
  5523  012078  50E3               	movf	plusw1,w,c
  5524  01207A  0D04               	mullw	4
  5525  01207C  0EFF               	movlw	low _C
  5526  01207E  24F3               	addwf	243,w,c
  5527  012080  6ED9               	movwf	fsr2l,c
  5528  012082  0E06               	movlw	high _C
  5529  012084  20F4               	addwfc	prodh,w,c
  5530  012086  6EDA               	movwf	fsr2h,c
  5531  012088  006F FF7B FFE6     	movff	postinc2,postinc1
  5532  01208E  006F FF7B FFE6     	movff	postinc2,postinc1
  5533  012094  006F FF7B FFE6     	movff	postinc2,postinc1
  5534  01209A  006F FF7B FFE6     	movff	postinc2,postinc1
  5535                           
  5536                           ;stkvar	_i @ sp[(-23)+14]
  5537  0120A0  0EF7               	movlw	-9
  5538  0120A2  50E3               	movf	plusw1,w,c
  5539  0120A4  6EE6               	movwf	postinc1,c
  5540  0120A6  EC52  F0DF         	call	_get_raw_result	;wreg free
  5541  0120AA  0060  F007  FFE6   	movff	btemp,postinc1
  5542  0120B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5543  0120B6  0E8A               	movlw	low STR_40
  5544  0120B8  6EE6               	movwf	postinc1,c
  5545  0120BA  0EFE               	movlw	high STR_40
  5546  0120BC  6EE6               	movwf	postinc1,c
  5547  0120BE  0E00               	movlw	0
  5548  0120C0  6EE6               	movwf	postinc1,c
  5549  0120C2  0E00               	movlw	0
  5550  0120C4  6EE6               	movwf	postinc1,c
  5551  0120C6  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  5552  0120CA  0060  F007  FFE6   	movff	btemp,postinc1
  5553  0120D0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5554  0120D6  0E0C               	movlw	12
  5555  0120D8  6EE6               	movwf	postinc1,c
  5556  0120DA  EC8D  F0CE         	call	_sprintf	;wreg free
  5557                           
  5558                           ; BSR set to: 0
  5559                           ;main.c: 387:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 2);
  5560                           ;stkvar	_inp_index @ sp[(-17)+11]
  5561  0120DE  0EFA               	movlw	-6
  5562  0120E0  50E3               	movf	plusw1,w,c
  5563  0120E2  6E0B               	movwf	(btemp+10)^0,c
  5564  0120E4  6A0C               	clrf	(btemp+11)^0,c
  5565  0120E6  0E02               	movlw	2
  5566  0120E8  260B               	addwf	(btemp+10)^0,f,c
  5567  0120EA  0E00               	movlw	0
  5568  0120EC  220C               	addwfc	(btemp+11)^0,f,c
  5569  0120EE  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5570  0120F4  0060  F033  FFE6   	movff	btemp+11,postinc1
  5571                           
  5572                           ;stkvar	_j @ sp[(-19)+13]
  5573  0120FA  0EFA               	movlw	-6
  5574  0120FC  50E3               	movf	plusw1,w,c
  5575  0120FE  0D04               	mullw	4
  5576  012100  0EFF               	movlw	low _C
  5577  012102  24F3               	addwf	243,w,c
  5578  012104  6ED9               	movwf	fsr2l,c
  5579  012106  0E06               	movlw	high _C
  5580  012108  20F4               	addwfc	prodh,w,c
  5581  01210A  6EDA               	movwf	fsr2h,c
  5582  01210C  006F FF7B FFE6     	movff	postinc2,postinc1
  5583  012112  006F FF7B FFE6     	movff	postinc2,postinc1
  5584  012118  006F FF7B FFE6     	movff	postinc2,postinc1
  5585  01211E  006F FF7B FFE6     	movff	postinc2,postinc1
  5586                           
  5587                           ;stkvar	_j @ sp[(-23)+13]
  5588  012124  0EF6               	movlw	-10
  5589  012126  50E3               	movf	plusw1,w,c
  5590  012128  6EE6               	movwf	postinc1,c
  5591  01212A  EC52  F0DF         	call	_get_raw_result	;wreg free
  5592  01212E  0060  F007  FFE6   	movff	btemp,postinc1
  5593  012134  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5594  01213A  0E8A               	movlw	low STR_40
  5595  01213C  6EE6               	movwf	postinc1,c
  5596  01213E  0EFE               	movlw	high STR_40
  5597  012140  6EE6               	movwf	postinc1,c
  5598  012142  0E00               	movlw	0
  5599  012144  6EE6               	movwf	postinc1,c
  5600  012146  0E01               	movlw	1
  5601  012148  6EE6               	movwf	postinc1,c
  5602  01214A  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  5603  01214E  0060  F007  FFE6   	movff	btemp,postinc1
  5604  012154  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5605  01215A  0E0C               	movlw	12
  5606  01215C  6EE6               	movwf	postinc1,c
  5607  01215E  EC8D  F0CE         	call	_sprintf	;wreg free
  5608                           
  5609                           ; BSR set to: 0
  5610                           ;main.c: 388:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 3);
  5611                           ;stkvar	_inp_index @ sp[(-17)+11]
  5612  012162  0EFA               	movlw	-6
  5613  012164  50E3               	movf	plusw1,w,c
  5614  012166  6E0B               	movwf	(btemp+10)^0,c
  5615  012168  6A0C               	clrf	(btemp+11)^0,c
  5616  01216A  0E03               	movlw	3
  5617  01216C  260B               	addwf	(btemp+10)^0,f,c
  5618  01216E  0E00               	movlw	0
  5619  012170  220C               	addwfc	(btemp+11)^0,f,c
  5620  012172  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5621  012178  0060  F033  FFE6   	movff	btemp+11,postinc1
  5622                           
  5623                           ;stkvar	_k @ sp[(-19)+12]
  5624  01217E  0EF9               	movlw	-7
  5625  012180  50E3               	movf	plusw1,w,c
  5626  012182  0D04               	mullw	4
  5627  012184  0EFF               	movlw	low _C
  5628  012186  24F3               	addwf	243,w,c
  5629  012188  6ED9               	movwf	fsr2l,c
  5630  01218A  0E06               	movlw	high _C
  5631  01218C  20F4               	addwfc	prodh,w,c
  5632  01218E  6EDA               	movwf	fsr2h,c
  5633  012190  006F FF7B FFE6     	movff	postinc2,postinc1
  5634  012196  006F FF7B FFE6     	movff	postinc2,postinc1
  5635  01219C  006F FF7B FFE6     	movff	postinc2,postinc1
  5636  0121A2  006F FF7B FFE6     	movff	postinc2,postinc1
  5637                           
  5638                           ;stkvar	_k @ sp[(-23)+12]
  5639  0121A8  0EF5               	movlw	-11
  5640  0121AA  50E3               	movf	plusw1,w,c
  5641  0121AC  6EE6               	movwf	postinc1,c
  5642  0121AE  EC52  F0DF         	call	_get_raw_result	;wreg free
  5643  0121B2  0060  F007  FFE6   	movff	btemp,postinc1
  5644  0121B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5645  0121BE  0E8A               	movlw	low STR_40
  5646  0121C0  6EE6               	movwf	postinc1,c
  5647  0121C2  0EFE               	movlw	high STR_40
  5648  0121C4  6EE6               	movwf	postinc1,c
  5649  0121C6  0E00               	movlw	0
  5650  0121C8  6EE6               	movwf	postinc1,c
  5651  0121CA  0E02               	movlw	2
  5652  0121CC  6EE6               	movwf	postinc1,c
  5653  0121CE  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  5654  0121D2  0060  F007  FFE6   	movff	btemp,postinc1
  5655  0121D8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5656  0121DE  0E0C               	movlw	12
  5657  0121E0  6EE6               	movwf	postinc1,c
  5658  0121E2  EC8D  F0CE         	call	_sprintf	;wreg free
  5659                           
  5660                           ;main.c: 389:      break;
  5661  0121E6  D016               	goto	l13240
  5662  0121E8                     l13238:
  5663  0121E8  0100               	movlb	0	; () banked
  5664  0121EA  51F7               	movf	_H& (0+255),w,b
  5665  0121EC  6E0B               	movwf	(btemp+10)^0,c
  5666  0121EE  6A0C               	clrf	(btemp+11)^0,c
  5667                           
  5668                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5669                           ; Switch size 1, requested type "simple"
  5670                           ; Number of cases is 1, Range of values is 0 to 0
  5671                           ; switch strategies available:
  5672                           ; Name         Instructions Cycles
  5673                           ; simple_byte            4     3 (average)
  5674                           ;	Chosen strategy is simple_byte
  5675  0121F0  500C               	movf	(btemp+11)^0,w,c
  5676  0121F2  0A00               	xorlw	0	; case 0
  5677  0121F4  A4D8               	btfss	status,2,c
  5678  0121F6  D00E               	goto	l13240
  5679                           
  5680                           ; BSR set to: 0
  5681                           ; Switch size 1, requested type "simple"
  5682                           ; Number of cases is 4, Range of values is 0 to 3
  5683                           ; switch strategies available:
  5684                           ; Name         Instructions Cycles
  5685                           ; simple_byte           13     7 (average)
  5686                           ;	Chosen strategy is simple_byte
  5687  0121F8  500B               	movf	(btemp+10)^0,w,c
  5688  0121FA  0A00               	xorlw	0	; case 0
  5689  0121FC  B4D8               	btfsc	status,2,c
  5690  0121FE  D4D3               	goto	l1360
  5691  012200  0A01               	xorlw	1	; case 1
  5692  012202  B4D8               	btfsc	status,2,c
  5693  012204  EFD0  F08C         	goto	l1350
  5694  012208  0A03               	xorlw	3	; case 2
  5695  01220A  B4D8               	btfsc	status,2,c
  5696  01220C  D5E1               	goto	l1361
  5697  01220E  0A01               	xorlw	1	; case 3
  5698  012210  B4D8               	btfsc	status,2,c
  5699  012212  D6EF               	goto	l13224
  5700  012214                     l13240:
  5701                           
  5702                           ; BSR set to: 0
  5703                           ;main.c: 393:     clear_hid_pflags(&H);
  5704  012214  0EF7               	movlw	_H& (0+255)
  5705  012216  6EE6               	movwf	postinc1,c
  5706  012218  ECE6  F0DE         	call	_clear_hid_pflags	;wreg free
  5707                           
  5708                           ;main.c: 395:    StartTimer(TMR_DISPLAY, 250);
  5709  01221C  0EFA               	movlw	250
  5710  01221E  6EE6               	movwf	postinc1,c
  5711  012220  0E00               	movlw	0
  5712  012222  6EE6               	movwf	postinc1,c
  5713  012224  0E0A               	movlw	10
  5714  012226  6EE6               	movwf	postinc1,c
  5715  012228  EC95  F0DB         	call	_StartTimer	;wreg free
  5716                           
  5717                           ;main.c: 396:    V.enter = check_enter_button(&H);
  5718  01222C  0EF7               	movlw	_H& (0+255)
  5719  01222E  6EE6               	movwf	postinc1,c
  5720  012230  ECB5  F0DB         	call	_check_enter_button	;wreg free
  5721  012234  5001               	movf	btemp^0,w,c
  5722  012236  0101               	movlb	1	; () banked
  5723  012238  6FDD               	movwf	(_V+173)& (0+255),b	;volatile
  5724                           
  5725                           ; BSR set to: 1
  5726                           ;main.c: 397:    if (V.enter && (H.hid_display != HID_AUX)) {
  5727  01223A  51DD               	movf	(_V+173)& (0+255),w,b	;volatile
  5728  01223C  B4D8               	btfsc	status,2,c
  5729  01223E  D013               	goto	l13254
  5730                           
  5731                           ; BSR set to: 1
  5732  012240  0E03               	movlw	3
  5733  012242  0100               	movlb	0	; () banked
  5734  012244  19F7               	xorwf	_H& (0+255),w,b
  5735  012246  B4D8               	btfsc	status,2,c
  5736  012248  D00E               	goto	l13254
  5737                           
  5738                           ; BSR set to: 0
  5739                           ;main.c: 398:     V.enter = 0;
  5740  01224A  0101               	movlb	1	; () banked
  5741  01224C  6BDD               	clrf	(_V+173)& (0+255),b	;volatile
  5742                           
  5743                           ; BSR set to: 1
  5744                           ;main.c: 399:     V.screen = ~V.screen;
  5745  01224E  A1CC               	btfss	(_V+156)& (0+255),0,b	;volatile
  5746  012250  D002               	goto	u12680
  5747  012252  0E01               	movlw	1
  5748  012254  D001               	goto	u12686
  5749  012256                     u12680:
  5750  012256  0E00               	movlw	0
  5751  012258                     u12686:
  5752  012258  0AFF               	xorlw	255
  5753  01225A  6E0C               	movwf	(btemp+11)^0,c
  5754  01225C  51CC               	movf	(_V+156)& (0+255),w,b	;volatile
  5755  01225E  180C               	xorwf	(btemp+11)^0,w,c
  5756  012260  0BFE               	andlw	-2
  5757  012262  180C               	xorwf	(btemp+11)^0,w,c
  5758  012264  6FCC               	movwf	(_V+156)& (0+255),b	;volatile
  5759  012266                     l13254:
  5760                           
  5761                           ;main.c: 401:    set_vterm(V.screen);
  5762  012266  0101               	movlb	1	; () banked
  5763  012268  A1CC               	btfss	(_V+156)& (0+255),0,b	;volatile
  5764  01226A  D002               	goto	u12690
  5765  01226C  0E01               	movlw	1
  5766  01226E  D001               	goto	u12696
  5767  012270                     u12690:
  5768  012270  0E00               	movlw	0
  5769  012272                     u12696:
  5770  012272  6EE6               	movwf	postinc1,c
  5771  012274  ECB2  F0DF         	call	_set_vterm	;wreg free
  5772                           
  5773                           ;main.c: 402:    update_lcd(V.screen);
  5774  012278  0101               	movlb	1	; () banked
  5775  01227A  A1CC               	btfss	(_V+156)& (0+255),0,b	;volatile
  5776  01227C  D002               	goto	u12700
  5777  01227E  0E01               	movlw	1
  5778  012280  D001               	goto	u12706
  5779  012282                     u12700:
  5780  012282  0E00               	movlw	0
  5781  012284                     u12706:
  5782  012284  6EE6               	movwf	postinc1,c
  5783  012286  EC05  F0CE         	call	_update_lcd	;wreg free
  5784  01228A                     l13258:
  5785                           
  5786                           ;main.c: 408:   check_help(V.flipper);
  5787  01228A  0101               	movlb	1	; () banked
  5788  01228C  51DB               	movf	(_V+171)& (0+255),w,b	;volatile
  5789  01228E  6EE6               	movwf	postinc1,c
  5790  012290  EC34  F0C1         	call	_check_help	;wreg free
  5791                           
  5792                           ;main.c: 410:   if (V.enter) {
  5793  012294  0101               	movlb	1	; () banked
  5794  012296  51DD               	movf	(_V+173)& (0+255),w,b	;volatile
  5795  012298  B4D8               	btfsc	status,2,c
  5796  01229A  D062               	goto	l1366
  5797                           
  5798                           ; BSR set to: 1
  5799                           ;main.c: 411:    V.enter = 0;
  5800  01229C  6BDD               	clrf	(_V+173)& (0+255),b	;volatile
  5801                           
  5802                           ;main.c: 412:    V.calib = 0;
  5803  01229E  6BDC               	clrf	(_V+172)& (0+255),b	;volatile
  5804                           
  5805                           ; BSR set to: 1
  5806                           ;main.c: 413:    inp_index += 3;
  5807                           ;stkvar	_inp_index @ sp[(-17)+11]
  5808  0122A0  0EFA               	movlw	-6
  5809  0122A2  006F FF8C  F001    	movff	plusw1,btemp
  5810  0122A8  0E03               	movlw	3
  5811  0122AA  2601               	addwf	btemp^0,f,c
  5812  0122AC  0EFA               	movlw	-6
  5813  0122AE  0060  F007  FFE3   	movff	btemp,plusw1
  5814                           
  5815                           ;main.c: 414:    if (inp_index > 9)
  5816                           ;stkvar	_inp_index @ sp[(-17)+11]
  5817  0122B4  0EFA               	movlw	-6
  5818  0122B6  006F FF8C  F001    	movff	plusw1,btemp
  5819  0122BC  0E09               	movlw	9
  5820  0122BE  6401               	cpfsgt	btemp^0,c
  5821  0122C0  D03A               	goto	l13286
  5822                           
  5823                           ; BSR set to: 1
  5824                           ;main.c: 415:     inp_index = 0;
  5825                           ;stkvar	_inp_index @ sp[(-17)+11]
  5826  0122C2  0EFA               	movlw	-6
  5827  0122C4  6AE3               	clrf	plusw1,c
  5828  0122C6  D037               	goto	l13286
  5829  0122C8                     l13268:
  5830                           
  5831                           ; BSR set to: 1
  5832                           ;main.c: 418:     i = C_BATT;
  5833                           ;stkvar	_i @ sp[(-17)+14]
  5834  0122C8  0EFD               	movlw	-3
  5835  0122CA  6AE3               	clrf	plusw1,c
  5836                           
  5837                           ; BSR set to: 1
  5838                           ;main.c: 419:     j = C_PV;
  5839                           ;stkvar	_j @ sp[(-17)+13]
  5840  0122CC  0EFC               	movlw	-4
  5841  0122CE  6AE3               	clrf	plusw1,c
  5842  0122D0  2AE3               	incf	plusw1,f,c
  5843                           
  5844                           ; BSR set to: 1
  5845                           ;main.c: 420:     k = V_CC;
  5846                           ;stkvar	_k @ sp[(-17)+12]
  5847  0122D2  0EFB               	movlw	-5
  5848  0122D4  6AE3               	clrf	plusw1,c
  5849  0122D6  82E3               	bsf	plusw1,1,c
  5850                           
  5851                           ;main.c: 421:     break;
  5852  0122D8  D043               	goto	l1366
  5853  0122DA                     l13274:
  5854                           
  5855                           ; BSR set to: 1
  5856                           ;main.c: 423:     i = V_BAT;
  5857                           ;stkvar	_i @ sp[(-17)+14]
  5858  0122DA  0EFD               	movlw	-3
  5859  0122DC  6AE3               	clrf	plusw1,c
  5860  0122DE  84E3               	bsf	plusw1,2,c
  5861                           
  5862                           ;main.c: 424:     j = V_PV;
  5863                           ;stkvar	_j @ sp[(-17)+13]
  5864  0122E0  0EFC               	movlw	-4
  5865  0122E2  6AE3               	clrf	plusw1,c
  5866  0122E4  80E3               	bsf	plusw1,0,c
  5867  0122E6  84E3               	bsf	plusw1,2,c	;indir
  5868                           
  5869                           ;main.c: 425:     k = V_CBUS;
  5870                           ;stkvar	_k @ sp[(-17)+12]
  5871  0122E8  0EFB               	movlw	-5
  5872  0122EA  6AE3               	clrf	plusw1,c
  5873  0122EC  82E3               	bsf	plusw1,1,c
  5874  0122EE  84E3               	bsf	plusw1,2,c	;indir
  5875                           
  5876                           ;main.c: 426:     break;
  5877  0122F0  D037               	goto	l1366
  5878  0122F2                     l13276:
  5879                           
  5880                           ; BSR set to: 1
  5881                           ;main.c: 428:     i = V_BBAT;
  5882                           ;stkvar	_i @ sp[(-17)+14]
  5883  0122F2  0EFD               	movlw	-3
  5884  0122F4  6AE3               	clrf	plusw1,c
  5885  0122F6  82E3               	bsf	plusw1,1,c
  5886  0122F8  86E3               	bsf	plusw1,3,c	;indir
  5887                           
  5888                           ; BSR set to: 1
  5889                           ;main.c: 429:     j = V_TEMP;
  5890  0122FA  0E0B               	movlw	11
  5891  0122FC  6E0C               	movwf	(btemp+11)^0,c
  5892                           
  5893                           ;stkvar	_j @ sp[(-17)+13]
  5894  0122FE  0EFC               	movlw	-4
  5895  012300  0060  F033  FFE3   	movff	btemp+11,plusw1
  5896                           
  5897                           ; BSR set to: 1
  5898                           ;main.c: 430:     k = V_INVERTER;
  5899                           ;stkvar	_k @ sp[(-17)+12]
  5900  012306  0EFB               	movlw	-5
  5901  012308  6AE3               	clrf	plusw1,c
  5902  01230A  84E3               	bsf	plusw1,2,c
  5903  01230C  86E3               	bsf	plusw1,3,c	;indir
  5904                           
  5905                           ;main.c: 431:     break;
  5906  01230E  D028               	goto	l1366
  5907  012310                     l13282:
  5908                           
  5909                           ; BSR set to: 1
  5910                           ;main.c: 433:     i = V_LIGHT_SENSOR;
  5911  012310  0E0D               	movlw	13
  5912  012312  6E0C               	movwf	(btemp+11)^0,c
  5913                           
  5914                           ;stkvar	_i @ sp[(-17)+14]
  5915  012314  0EFD               	movlw	-3
  5916  012316  0060  F033  FFE3   	movff	btemp+11,plusw1
  5917                           
  5918                           ;main.c: 434:     j = V_LIGHT_SENSOR;
  5919  01231C  0E0D               	movlw	13
  5920  01231E  6E0C               	movwf	(btemp+11)^0,c
  5921                           
  5922                           ;stkvar	_j @ sp[(-17)+13]
  5923  012320  0EFC               	movlw	-4
  5924  012322  0060  F033  FFE3   	movff	btemp+11,plusw1
  5925                           
  5926                           ;main.c: 435:     k = V_LIGHT_SENSOR;
  5927  012328  0E0D               	movlw	13
  5928  01232A  6E0C               	movwf	(btemp+11)^0,c
  5929                           
  5930                           ;stkvar	_k @ sp[(-17)+12]
  5931  01232C  0EFB               	movlw	-5
  5932  01232E  0060  F033  FFE3   	movff	btemp+11,plusw1
  5933                           
  5934                           ;main.c: 436:     break;
  5935  012334  D015               	goto	l1366
  5936  012336                     l13286:
  5937                           
  5938                           ; BSR set to: 1
  5939                           ;stkvar	_inp_index @ sp[(-17)+11]
  5940  012336  0EFA               	movlw	-6
  5941  012338  50E3               	movf	plusw1,w,c
  5942  01233A  6E0B               	movwf	(btemp+10)^0,c
  5943  01233C  6A0C               	clrf	(btemp+11)^0,c
  5944                           
  5945                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5946                           ; Switch size 1, requested type "simple"
  5947                           ; Number of cases is 1, Range of values is 0 to 0
  5948                           ; switch strategies available:
  5949                           ; Name         Instructions Cycles
  5950                           ; simple_byte            4     3 (average)
  5951                           ;	Chosen strategy is simple_byte
  5952  01233E  500C               	movf	(btemp+11)^0,w,c
  5953  012340  0A00               	xorlw	0	; case 0
  5954  012342  A4D8               	btfss	status,2,c
  5955  012344  D00D               	goto	l1366
  5956                           
  5957                           ; BSR set to: 1
  5958                           ; Switch size 1, requested type "simple"
  5959                           ; Number of cases is 4, Range of values is 0 to 9
  5960                           ; switch strategies available:
  5961                           ; Name         Instructions Cycles
  5962                           ; simple_byte           13     7 (average)
  5963                           ;	Chosen strategy is simple_byte
  5964  012346  500B               	movf	(btemp+10)^0,w,c
  5965  012348  0A00               	xorlw	0	; case 0
  5966  01234A  B4D8               	btfsc	status,2,c
  5967  01234C  D7BD               	goto	l13268
  5968  01234E  0A03               	xorlw	3	; case 3
  5969  012350  B4D8               	btfsc	status,2,c
  5970  012352  D7C3               	goto	l13274
  5971  012354  0A05               	xorlw	5	; case 6
  5972  012356  B4D8               	btfsc	status,2,c
  5973  012358  D7CC               	goto	l13276
  5974  01235A  0A0F               	xorlw	15	; case 9
  5975  01235C  B4D8               	btfsc	status,2,c
  5976  01235E  D7D8               	goto	l13282
  5977  012360                     l1366:
  5978                           
  5979                           ; BSR set to: 1
  5980                           ;main.c: 445:   if (V.set_sequ) {
  5981  012360  A1CB               	btfss	(_V+155)& (0+255),0,b	;volatile
  5982  012362  EF84  F08C         	goto	l13168
  5983                           
  5984                           ; BSR set to: 1
  5985                           ;main.c: 446:    if (TimerDone(TMR_INFO)) {
  5986  012366  0E07               	movlw	7
  5987  012368  6EE6               	movwf	postinc1,c
  5988  01236A  ECBB  F0DD         	call	_TimerDone	;wreg free
  5989  01236E  5001               	movf	btemp^0,w,c
  5990  012370  B4D8               	btfsc	status,2,c
  5991  012372  D00C               	goto	l13296
  5992                           
  5993                           ;main.c: 447:     V.set_sequ = 0;
  5994  012374  0101               	movlb	1	; () banked
  5995  012376  91CB               	bcf	(_V+155)& (0+255),0,b	;volatile
  5996                           
  5997                           ; BSR set to: 1
  5998                           ;main.c: 448:     set_vterm(0);
  5999  012378  0E00               	movlw	0
  6000  01237A  6EE6               	movwf	postinc1,c
  6001  01237C  ECB2  F0DF         	call	_set_vterm	;wreg free
  6002                           
  6003                           ;main.c: 449:     update_lcd(0);
  6004  012380  0E00               	movlw	0
  6005  012382  6EE6               	movwf	postinc1,c
  6006  012384  EC05  F0CE         	call	_update_lcd	;wreg free
  6007                           
  6008                           ;main.c: 450:    } else {
  6009  012388  EF84  F08C         	goto	l13168
  6010  01238C                     l13296:
  6011                           
  6012                           ;main.c: 451:     set_vterm(2);
  6013  01238C  0E02               	movlw	2
  6014  01238E  6EE6               	movwf	postinc1,c
  6015  012390  ECB2  F0DF         	call	_set_vterm	;wreg free
  6016                           
  6017                           ;main.c: 452:     update_lcd(2);
  6018  012394  0E02               	movlw	2
  6019  012396  6EE6               	movwf	postinc1,c
  6020  012398  EC05  F0CE         	call	_update_lcd	;wreg free
  6021  01239C  EF84  F08C         	goto	l13168
  6022  0123A0                     __end_of_main:
  6023                           	opt callstack 0
  6024                           
  6025 ;; *************** function _static_soc *****************
  6026 ;; Defined at:
  6027 ;;		line 117 in file "mbmc.c"
  6028 ;; Parameters:    Size  Location     Type
  6029 ;;		None
  6030 ;; Auto vars:     Size  Location     Type
  6031 ;;		None
  6032 ;; Return value:  Size  Location     Type
  6033 ;;                  1  [STACK] void 
  6034 ;; Registers used:
  6035 ;;		wreg, fsr2l, fsr2h
  6036 ;; Tracked objects:
  6037 ;;		On entry : 0/1
  6038 ;;		On exit  : 0/0
  6039 ;;		Unchanged: 0/0
  6040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6045 ;;Total ram usage:        0 bytes
  6046 ;; Hardware stack levels used:    1
  6047 ;; Hardware stack levels required when called:   15
  6048 ;; This function calls:
  6049 ;;		Nothing
  6050 ;; This function is called by:
  6051 ;;		_main
  6052 ;; This function uses a reentrant model
  6053 ;;
  6054                           
  6055                           	psect	text1
  6056  01B1E4                     __ptext1:
  6057                           	opt callstack 0
  6058  01B1E4                     _static_soc:
  6059                           	opt callstack 15
  6060                           
  6061                           ;mbmc.c: 119:  C.runtime = 120;
  6062                           
  6063                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6064                           ;incstack = 0
  6065  01B1E4  0E78               	movlw	120
  6066  01B1E6  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
  6067  01B1EC  0E00               	movlw	0
  6068  01B1EE  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
  6069                           
  6070                           ;mbmc.c: 120:  C.soc = 100;
  6071  01B1F4  0E64               	movlw	100
  6072  01B1F6  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
  6073  01B1FC  0E00               	movlw	0
  6074  01B1FE  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
  6075                           
  6076                           ;mbmc.c: 121:  C.dynamic_ah = C.bank_ah;
  6077  01B204  EE21  F38B         	lfsr	2,_C+140	;volatile
  6078  01B208  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
  6079  01B20E  006F FF78  F790    	movff	postinc2,_C+145	;volatile
  6080  01B214  006F FF78  F791    	movff	postinc2,_C+146	;volatile
  6081  01B21A  006F FF74  F792    	movff	postdec2,_C+147	;volatile
  6082                           
  6083                           ;mbmc.c: 122:  C.dynamic_ah_adj = C.dynamic_ah;
  6084  01B220  EE21  F38F         	lfsr	2,_C+144	;volatile
  6085  01B224  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  6086  01B22A  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  6087  01B230  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  6088  01B236  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  6089                           
  6090                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6091  01B23C  0012               	return		;funcret
  6092  01B23E                     __end_of_static_soc:
  6093                           	opt callstack 0
  6094                           
  6095 ;; *************** function _start_switch_handler *****************
  6096 ;; Defined at:
  6097 ;;		line 122 in file "dio.c"
  6098 ;; Parameters:    Size  Location     Type
  6099 ;;		None
  6100 ;; Auto vars:     Size  Location     Type
  6101 ;;		None
  6102 ;; Return value:  Size  Location     Type
  6103 ;;                  1  [STACK] void 
  6104 ;; Registers used:
  6105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  6106 ;; Tracked objects:
  6107 ;;		On entry : 0/0
  6108 ;;		On exit  : 3F/39
  6109 ;;		Unchanged: 0/0
  6110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6115 ;;Total ram usage:        0 bytes
  6116 ;; Hardware stack levels used:    1
  6117 ;; Hardware stack levels required when called:   16
  6118 ;; This function calls:
  6119 ;;		_INT1_SetInterruptHandler
  6120 ;; This function is called by:
  6121 ;;		_main
  6122 ;; This function uses a reentrant model
  6123 ;;
  6124                           
  6125                           	psect	text2
  6126  01BEE8                     __ptext2:
  6127                           	opt callstack 0
  6128  01BEE8                     _start_switch_handler:
  6129                           	opt callstack 14
  6130                           
  6131                           ;dio.c: 124:  (PIE5bits.INT1IE = 0);
  6132                           
  6133                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6134                           ;incstack = 0
  6135  01BEE8  0139               	movlb	57	; () banked
  6136  01BEEA  9195               	bcf	149,0,b	;volatile
  6137                           
  6138                           ; BSR set to: 57
  6139                           ;dio.c: 125:  INT1_SetInterruptHandler(switch_handler);
  6140  01BEEC  0E3C               	movlw	low _switch_handler
  6141  01BEEE  6EE6               	movwf	postinc1,c
  6142  01BEF0  0E95               	movlw	high _switch_handler
  6143  01BEF2  6EE6               	movwf	postinc1,c
  6144  01BEF4  0E01               	movlw	low (_switch_handler shr (0+16))
  6145  01BEF6  6EE6               	movwf	postinc1,c
  6146  01BEF8  EC47  F0DE         	call	_INT1_SetInterruptHandler	;wreg free
  6147                           
  6148                           ;dio.c: 126:  S.button[SNULL].sw = SW_INVALID;
  6149  01BEFC  0E02               	movlw	2
  6150  01BEFE  0102               	movlb	2	; () banked
  6151  01BF00  6F77               	movwf	(_S+35)& (0+255),b	;volatile
  6152                           
  6153                           ; BSR set to: 2
  6154                           ;dio.c: 127:  (PIE5bits.INT1IE = 1);
  6155  01BF02  0139               	movlb	57	; () banked
  6156  01BF04  8195               	bsf	149,0,b	;volatile
  6157                           
  6158                           ; BSR set to: 57
  6159                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  6160  01BF06  0012               	return		;funcret
  6161  01BF08                     __end_of_start_switch_handler:
  6162                           	opt callstack 0
  6163                           
  6164 ;; *************** function _srand *****************
  6165 ;; Defined at:
  6166 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  6167 ;; Parameters:    Size  Location     Type
  6168 ;;  s               2  [STACK] unsigned int 
  6169 ;; Auto vars:     Size  Location     Type
  6170 ;;		None
  6171 ;; Return value:  Size  Location     Type
  6172 ;;                  1  [STACK] void 
  6173 ;; Registers used:
  6174 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  6175 ;; Tracked objects:
  6176 ;;		On entry : 0/0
  6177 ;;		On exit  : 3F/0
  6178 ;;		Unchanged: 0/0
  6179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6184 ;;Total ram usage:        0 bytes
  6185 ;; Hardware stack levels used:    1
  6186 ;; Hardware stack levels required when called:   15
  6187 ;; This function calls:
  6188 ;;		Nothing
  6189 ;; This function is called by:
  6190 ;;		_main
  6191 ;; This function uses a reentrant model
  6192 ;;
  6193                           
  6194                           	psect	text3
  6195  01B94A                     __ptext3:
  6196                           	opt callstack 0
  6197  01B94A                     _srand:
  6198                           	opt callstack 15
  6199                           
  6200                           ;stkvar	_s @ sp[(0)+-2]
  6201                           
  6202                           ; BSR set to: 57
  6203                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6204                           ;incstack = 0
  6205  01B94A  0EFE               	movlw	-2
  6206  01B94C  50E3               	movf	plusw1,w,c
  6207  01B94E  0FFF               	addlw	255
  6208  01B950  6E0B               	movwf	(btemp+10)^0,c
  6209  01B952  0EFF               	movlw	-1
  6210  01B954  006F FF8C  F00C    	movff	plusw1,btemp+11
  6211  01B95A  0EFF               	movlw	255
  6212  01B95C  220C               	addwfc	(btemp+11)^0,f,c
  6213  01B95E  0060  F02C  F0CF   	movff	btemp+10,_seed
  6214  01B964  0060  F030  F0D0   	movff	btemp+11,_seed+1
  6215  01B96A  0100               	movlb	0	; () banked
  6216  01B96C  6BD1               	clrf	(_seed+2)& (0+255),b
  6217  01B96E  6BD2               	clrf	(_seed+3)& (0+255),b
  6218  01B970  6BD3               	clrf	(_seed+4)& (0+255),b
  6219  01B972  6BD4               	clrf	(_seed+5)& (0+255),b
  6220  01B974  6BD5               	clrf	(_seed+6)& (0+255),b
  6221  01B976  6BD6               	clrf	(_seed+7)& (0+255),b
  6222                           
  6223                           ; BSR set to: 0
  6224                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  6225  01B978  52E5               	movf	postdec1,f,c
  6226  01B97A  52E5               	movf	postdec1,f,c
  6227  01B97C  0012               	return		;funcret
  6228  01B97E                     __end_of_srand:
  6229                           	opt callstack 0
  6230                           
  6231 ;; *************** function _spinners *****************
  6232 ;; Defined at:
  6233 ;;		line 146 in file "mbmc.c"
  6234 ;; Parameters:    Size  Location     Type
  6235 ;;  shape           1  [STACK] unsigned char 
  6236 ;;  reset           1  [STACK] const unsigned char 
  6237 ;; Auto vars:     Size  Location     Type
  6238 ;;  c               1  [STACK] unsigned char 
  6239 ;; Return value:  Size  Location     Type
  6240 ;;                  1  [STACK] unsigned char 
  6241 ;; Registers used:
  6242 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
  6243 ;; Tracked objects:
  6244 ;;		On entry : 0/0
  6245 ;;		On exit  : 0/0
  6246 ;;		Unchanged: 0/0
  6247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6252 ;;Total ram usage:        0 bytes
  6253 ;; Hardware stack levels used:    1
  6254 ;; Hardware stack levels required when called:   16
  6255 ;; This function calls:
  6256 ;;		_strlen
  6257 ;; This function is called by:
  6258 ;;		_main
  6259 ;; This function uses a reentrant model
  6260 ;;
  6261                           
  6262                           	psect	text4
  6263  01A100                     __ptext4:
  6264                           	opt callstack 0
  6265  01A100                     _spinners:
  6266                           	opt callstack 0
  6267                           
  6268                           ; BSR set to: 0
  6269                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6270  01A100  52E6               	movf	postinc1,f,c
  6271                           
  6272                           ;mbmc.c: 146: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 147: {;mbmc.c: 1
      +                          48:  static uint8_t s[6];;mbmc.c: 149:  char c;;mbmc.c: 151:  if (shape > (6 - 1))
  6273                           ;stkvar	_shape @ sp[(-1)+-1]
  6274                           
  6275                           ;incstack = 0
  6276  01A102  0EFE               	movlw	-2
  6277  01A104  006F FF8C  F001    	movff	plusw1,btemp
  6278  01A10A  0E05               	movlw	5
  6279  01A10C  6401               	cpfsgt	btemp^0,c
  6280  01A10E  D002               	goto	l1879
  6281                           
  6282                           ;mbmc.c: 152:   shape = 0;
  6283                           ;stkvar	_shape @ sp[(-1)+-1]
  6284  01A110  0EFE               	movlw	-2
  6285  01A112  6AE3               	clrf	plusw1,c
  6286  01A114                     l1879:
  6287                           
  6288                           ;mbmc.c: 153:  if (reset)
  6289                           ;stkvar	_reset @ sp[(-1)+-2]
  6290  01A114  0EFD               	movlw	-3
  6291  01A116  50E3               	movf	plusw1,w,c
  6292  01A118  B4D8               	btfsc	status,2,c
  6293  01A11A  D00A               	goto	l10890
  6294                           
  6295                           ;mbmc.c: 154:   s[shape] = 0;
  6296                           ;stkvar	_shape @ sp[(-1)+-1]
  6297  01A11C  0EFE               	movlw	-2
  6298  01A11E  006F FF8C  F00C    	movff	plusw1,btemp+11
  6299  01A124  500C               	movf	(btemp+11)^0,w,c
  6300  01A126  0F74               	addlw	low spinners@s
  6301  01A128  6ED9               	movwf	fsr2l,c
  6302  01A12A  6ADA               	clrf	fsr2h,c
  6303  01A12C  0E00               	movlw	0
  6304  01A12E  6EDF               	movwf	indf2,c
  6305  01A130                     l10890:
  6306                           
  6307                           ;mbmc.c: 155:  c = spin[shape][s[shape]];
  6308                           ;stkvar	_shape @ sp[(-1)+-1]
  6309  01A130  0EFE               	movlw	-2
  6310  01A132  50E3               	movf	plusw1,w,c
  6311  01A134  0D14               	mullw	20
  6312  01A136  0E4B               	movlw	low _spin
  6313  01A138  6E0B               	movwf	(btemp+10)^0,c
  6314  01A13A  0EFB               	movlw	high _spin
  6315  01A13C  6E0C               	movwf	(btemp+11)^0,c
  6316  01A13E  50F3               	movf	243,w,c
  6317  01A140  260B               	addwf	(btemp+10)^0,f,c
  6318  01A142  50F4               	movf	244,w,c
  6319  01A144  220C               	addwfc	(btemp+11)^0,f,c
  6320                           
  6321                           ;stkvar	_shape @ sp[(-1)+-1]
  6322  01A146  0EFE               	movlw	-2
  6323  01A148  006F FF8C  F00A    	movff	plusw1,btemp+9
  6324  01A14E  500A               	movf	(btemp+9)^0,w,c
  6325  01A150  0F74               	addlw	low spinners@s
  6326  01A152  6ED9               	movwf	fsr2l,c
  6327  01A154  6ADA               	clrf	fsr2h,c
  6328  01A156  50DF               	movf	indf2,w,c
  6329  01A158  260B               	addwf	(btemp+10)^0,f,c
  6330  01A15A  0E00               	movlw	0
  6331  01A15C  220C               	addwfc	(btemp+11)^0,f,c
  6332  01A15E  0060  F02F  FFF6   	movff	btemp+10,tblptrl
  6333  01A164  0060  F033  FFF7   	movff	btemp+11,tblptrh
  6334  01A16A                     	if	0	;tblptru may be non-zero
  6335  01A16A                     	endif
  6336  01A16A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6337  01A16A  0E00               	movlw	low (__mediumconst shr (0+16))
  6338  01A16C  6EF8               	movwf	tblptru,c
  6339  01A16E                     	endif
  6340                           
  6341                           ;stkvar	_c @ sp[(-1)+0]
  6342  01A16E  0008               	tblrd		*
  6343  01A170  0EFF               	movlw	-1
  6344  01A172  006F FFD7 FFE3     	movff	tablat,plusw1
  6345                           
  6346                           ;mbmc.c: 156:  if (++s[shape] >= strlen(spin[shape]))
  6347                           ;stkvar	_shape @ sp[(-1)+-1]
  6348  01A178  0EFE               	movlw	-2
  6349  01A17A  50E3               	movf	plusw1,w,c
  6350  01A17C  0D14               	mullw	20
  6351  01A17E  0E4B               	movlw	low _spin
  6352  01A180  6E0B               	movwf	(btemp+10)^0,c
  6353  01A182  0EFB               	movlw	high _spin
  6354  01A184  6E0C               	movwf	(btemp+11)^0,c
  6355  01A186  50F3               	movf	243,w,c
  6356  01A188  260B               	addwf	(btemp+10)^0,f,c
  6357  01A18A  50F4               	movf	244,w,c
  6358  01A18C  220C               	addwfc	(btemp+11)^0,f,c
  6359  01A18E  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6360  01A194  0060  F033  FFE6   	movff	btemp+11,postinc1
  6361  01A19A  ECA0  F0D4         	call	_strlen	;wreg free
  6362                           
  6363                           ;stkvar	_shape @ sp[(-1)+-1]
  6364  01A19E  0EFE               	movlw	-2
  6365  01A1A0  006F FF8C  F00C    	movff	plusw1,btemp+11
  6366  01A1A6  500C               	movf	(btemp+11)^0,w,c
  6367  01A1A8  0F74               	addlw	low spinners@s
  6368  01A1AA  6ED9               	movwf	fsr2l,c
  6369  01A1AC  6ADA               	clrf	fsr2h,c
  6370  01A1AE  2ADF               	incf	indf2,f,c
  6371  01A1B0  50DF               	movf	indf2,w,c
  6372  01A1B2  6E0B               	movwf	(btemp+10)^0,c
  6373  01A1B4  6A0C               	clrf	(btemp+11)^0,c
  6374  01A1B6  5001               	movf	btemp^0,w,c
  6375  01A1B8  5C0B               	subwf	(btemp+10)^0,w,c
  6376  01A1BA  5002               	movf	(btemp+1)^0,w,c
  6377  01A1BC  580C               	subwfb	(btemp+11)^0,w,c
  6378  01A1BE  A0D8               	btfss	status,0,c
  6379  01A1C0  D00A               	goto	l10896
  6380                           
  6381                           ;mbmc.c: 157:   s[shape] = 0;
  6382                           ;stkvar	_shape @ sp[(-1)+-1]
  6383  01A1C2  0EFE               	movlw	-2
  6384  01A1C4  006F FF8C  F00C    	movff	plusw1,btemp+11
  6385  01A1CA  500C               	movf	(btemp+11)^0,w,c
  6386  01A1CC  0F74               	addlw	low spinners@s
  6387  01A1CE  6ED9               	movwf	fsr2l,c
  6388  01A1D0  6ADA               	clrf	fsr2h,c
  6389  01A1D2  0E00               	movlw	0
  6390  01A1D4  6EDF               	movwf	indf2,c
  6391  01A1D6                     l10896:
  6392                           
  6393                           ;mbmc.c: 158:  return c;
  6394                           ;stkvar	_c @ sp[(-1)+0]
  6395  01A1D6  0EFF               	movlw	-1
  6396  01A1D8  006F FF8C  F001    	movff	plusw1,btemp
  6397                           
  6398                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  6399  01A1DE  52E5               	movf	postdec1,f,c
  6400  01A1E0  52E5               	movf	postdec1,f,c
  6401  01A1E2  52E5               	movf	postdec1,f,c
  6402  01A1E4  0012               	return		;funcret
  6403  01A1E6                     __end_of_spinners:
  6404                           	opt callstack 0
  6405                           
  6406 ;; *************** function _init_port_dma *****************
  6407 ;; Defined at:
  6408 ;;		line 104 in file "eadog.c"
  6409 ;; Parameters:    Size  Location     Type
  6410 ;;		None
  6411 ;; Auto vars:     Size  Location     Type
  6412 ;;		None
  6413 ;; Return value:  Size  Location     Type
  6414 ;;                  1  [STACK] void 
  6415 ;; Registers used:
  6416 ;;		wreg, status,2
  6417 ;; Tracked objects:
  6418 ;;		On entry : 0/1
  6419 ;;		On exit  : 3F/3B
  6420 ;;		Unchanged: 0/0
  6421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6426 ;;Total ram usage:        0 bytes
  6427 ;; Hardware stack levels used:    1
  6428 ;; Hardware stack levels required when called:   15
  6429 ;; This function calls:
  6430 ;;		Nothing
  6431 ;; This function is called by:
  6432 ;;		_main
  6433 ;; This function uses a reentrant model
  6434 ;;
  6435                           
  6436                           	psect	text5
  6437  01B9B2                     __ptext5:
  6438                           	opt callstack 0
  6439  01B9B2                     _init_port_dma:
  6440                           	opt callstack 15
  6441                           
  6442                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  6443                           
  6444                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6445                           ;incstack = 0
  6446  01B9B2  0E3F               	movlw	-193
  6447  01B9B4  013B               	movlb	59	; () banked
  6448  01B9B6  17DD               	andwf	221,f,b	;volatile
  6449                           
  6450                           ; BSR set to: 59
  6451                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  6452  01B9B8  9BDD               	bcf	221,5,b	;volatile
  6453                           
  6454                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  6455  01B9BA  51DD               	movf	221,w,b	;volatile
  6456  01B9BC  0BF9               	andlw	-7
  6457  01B9BE  0902               	iorlw	2
  6458  01B9C0  6FDD               	movwf	221,b	;volatile
  6459                           
  6460                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  6461  01B9C2  0EE7               	movlw	-25
  6462  01B9C4  17DD               	andwf	221,f,b	;volatile
  6463                           
  6464                           ; BSR set to: 59
  6465                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  6466  01B9C6  81DD               	bsf	221,0,b	;volatile
  6467                           
  6468                           ; BSR set to: 59
  6469                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  6470  01B9C8  9DDC               	bcf	220,6,b	;volatile
  6471                           
  6472                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  6473  01B9CA  0E3D               	movlw	61
  6474  01B9CC  6FD1               	movwf	209,b	;volatile
  6475  01B9CE  0EEA               	movlw	234
  6476  01B9D0  6FD0               	movwf	208,b	;volatile
  6477                           
  6478                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  6479  01B9D2  0EFF               	movlw	low _port_data
  6480  01B9D4  6FD9               	movwf	217,b	;volatile
  6481  01B9D6  0E04               	movlw	high _port_data
  6482  01B9D8  6FDA               	movwf	218,b	;volatile
  6483  01B9DA  0E00               	movlw	low (_port_data shr (0+16))
  6484  01B9DC  6FDB               	movwf	219,b	;volatile
  6485                           
  6486                           ; BSR set to: 59
  6487                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  6488  01B9DE  9BDC               	bcf	220,5,b	;volatile
  6489                           
  6490                           ; BSR set to: 59
  6491                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  6492  01B9E0  0012               	return		;funcret
  6493  01B9E2                     __end_of_init_port_dma:
  6494                           	opt callstack 0
  6495                           
  6496 ;; *************** function _init_display *****************
  6497 ;; Defined at:
  6498 ;;		line 38 in file "eadog.c"
  6499 ;; Parameters:    Size  Location     Type
  6500 ;;		None
  6501 ;; Auto vars:     Size  Location     Type
  6502 ;;		None
  6503 ;; Return value:  Size  Location     Type
  6504 ;;                  1  [STACK] void 
  6505 ;; Registers used:
  6506 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6507 ;; Tracked objects:
  6508 ;;		On entry : 3F/3B
  6509 ;;		On exit  : 3F/3D
  6510 ;;		Unchanged: 0/0
  6511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6516 ;;Total ram usage:        0 bytes
  6517 ;; Hardware stack levels used:    1
  6518 ;; Hardware stack levels required when called:   17
  6519 ;; This function calls:
  6520 ;;		_ringBufS_init
  6521 ;;		_send_lcd_cmd
  6522 ;;		_send_lcd_cmd_long
  6523 ;;		_send_lcd_data
  6524 ;;		_wdtdelay
  6525 ;; This function is called by:
  6526 ;;		_main
  6527 ;; This function uses a reentrant model
  6528 ;;
  6529                           
  6530                           	psect	text6
  6531  01A016                     __ptext6:
  6532                           	opt callstack 0
  6533  01A016                     _init_display:
  6534                           	opt callstack 13
  6535                           
  6536                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  6537                           
  6538                           ; BSR set to: 59
  6539                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6540                           ;incstack = 0
  6541  01A016  0E83               	movlw	low _ring_buf1
  6542  01A018  0100               	movlb	0	; () banked
  6543  01A01A  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  6544  01A01C  0E03               	movlw	high _ring_buf1
  6545  01A01E  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  6546                           
  6547                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  6548  01A020  0E40               	movlw	low _ring_buf2
  6549  01A022  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  6550  01A024  0E03               	movlw	high _ring_buf2
  6551  01A026  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  6552                           
  6553                           ; BSR set to: 0
  6554                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  6555  01A028  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  6556  01A02E  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  6557  01A034  ECA7  F0DD         	call	_ringBufS_init	;wreg free
  6558                           
  6559                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  6560  01A038  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  6561  01A03E  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  6562  01A044  ECA7  F0DD         	call	_ringBufS_init	;wreg free
  6563                           
  6564                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  6565  01A048  84BE               	bsf	190,2,c	;volatile
  6566                           
  6567                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  6568  01A04A  013D               	movlb	61	; () banked
  6569  01A04C  9F14               	bcf	20,7,b	;volatile
  6570                           
  6571                           ; BSR set to: 61
  6572                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  6573  01A04E  0E20               	movlw	32
  6574  01A050  6F15               	movwf	21,b	;volatile
  6575                           
  6576                           ; BSR set to: 61
  6577                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  6578  01A052  0E03               	movlw	3
  6579  01A054  6F16               	movwf	22,b	;volatile
  6580                           
  6581                           ; BSR set to: 61
  6582                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  6583  01A056  0E04               	movlw	4
  6584  01A058  6F19               	movwf	25,b	;volatile
  6585                           
  6586                           ; BSR set to: 61
  6587                           ;eadog.c: 55:  SPI1CLK = 0x02;
  6588  01A05A  0E02               	movlw	2
  6589  01A05C  6F1C               	movwf	28,b	;volatile
  6590                           
  6591                           ; BSR set to: 61
  6592                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  6593  01A05E  0E83               	movlw	131
  6594  01A060  6F14               	movwf	20,b	;volatile
  6595                           
  6596                           ; BSR set to: 61
  6597                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  6598  01A062  8F14               	bsf	20,7,b	;volatile
  6599                           
  6600                           ; BSR set to: 61
  6601                           ;eadog.c: 60:  wdtdelay(350000);
  6602  01A064  0E30               	movlw	48
  6603  01A066  6EE6               	movwf	postinc1,c
  6604  01A068  0E57               	movlw	87
  6605  01A06A  6EE6               	movwf	postinc1,c
  6606  01A06C  0E05               	movlw	5
  6607  01A06E  6EE6               	movwf	postinc1,c
  6608  01A070  0E00               	movlw	0
  6609  01A072  6EE6               	movwf	postinc1,c
  6610  01A074  EC1F  F0D9         	call	_wdtdelay	;wreg free
  6611                           
  6612                           ; BSR set to: 0
  6613                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  6614  01A078  0E46               	movlw	70
  6615  01A07A  6EE6               	movwf	postinc1,c
  6616  01A07C  EC55  F0DB         	call	_send_lcd_cmd_long	;wreg free
  6617                           
  6618                           ; BSR set to: 0
  6619                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  6620  01A080  0E41               	movlw	65
  6621  01A082  6EE6               	movwf	postinc1,c
  6622  01A084  EC75  F0DB         	call	_send_lcd_cmd	;wreg free
  6623                           
  6624                           ; BSR set to: 0
  6625                           ;eadog.c: 63:  wdtdelay(80);
  6626  01A088  0E50               	movlw	80
  6627  01A08A  6EE6               	movwf	postinc1,c
  6628  01A08C  0E00               	movlw	0
  6629  01A08E  6EE6               	movwf	postinc1,c
  6630  01A090  0E00               	movlw	0
  6631  01A092  6EE6               	movwf	postinc1,c
  6632  01A094  0E00               	movlw	0
  6633  01A096  6EE6               	movwf	postinc1,c
  6634  01A098  EC1F  F0D9         	call	_wdtdelay	;wreg free
  6635                           
  6636                           ; BSR set to: 0
  6637                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  6638  01A09C  0E53               	movlw	83
  6639  01A09E  6EE6               	movwf	postinc1,c
  6640  01A0A0  EC75  F0DB         	call	_send_lcd_cmd	;wreg free
  6641                           
  6642                           ; BSR set to: 0
  6643                           ;eadog.c: 65:  send_lcd_data(2);
  6644  01A0A4  0E02               	movlw	2
  6645  01A0A6  6EE6               	movwf	postinc1,c
  6646  01A0A8  ECD4  F0DE         	call	_send_lcd_data	;wreg free
  6647                           
  6648                           ; BSR set to: 0
  6649                           ;eadog.c: 66:  wdtdelay(80);
  6650  01A0AC  0E50               	movlw	80
  6651  01A0AE  6EE6               	movwf	postinc1,c
  6652  01A0B0  0E00               	movlw	0
  6653  01A0B2  6EE6               	movwf	postinc1,c
  6654  01A0B4  0E00               	movlw	0
  6655  01A0B6  6EE6               	movwf	postinc1,c
  6656  01A0B8  0E00               	movlw	0
  6657  01A0BA  6EE6               	movwf	postinc1,c
  6658  01A0BC  EC1F  F0D9         	call	_wdtdelay	;wreg free
  6659                           
  6660                           ; BSR set to: 0
  6661                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  6662  01A0C0  0E51               	movlw	81
  6663  01A0C2  6EE6               	movwf	postinc1,c
  6664  01A0C4  EC55  F0DB         	call	_send_lcd_cmd_long	;wreg free
  6665                           
  6666                           ; BSR set to: 0
  6667                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  6668  01A0C8  013D               	movlb	61	; () banked
  6669  01A0CA  9F14               	bcf	20,7,b	;volatile
  6670                           
  6671                           ; BSR set to: 61
  6672                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  6673  01A0CC  0E02               	movlw	2
  6674  01A0CE  6F16               	movwf	22,b	;volatile
  6675                           
  6676                           ; BSR set to: 61
  6677                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  6678  01A0D0  8F14               	bsf	20,7,b	;volatile
  6679                           
  6680                           ; BSR set to: 61
  6681                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  6682  01A0D2  931A               	bcf	26,1,b	;volatile
  6683                           
  6684                           ; BSR set to: 61
  6685                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  6686  01A0D4  0E3F               	movlw	-193
  6687  01A0D6  013B               	movlb	59	; () banked
  6688  01A0D8  17FD               	andwf	253,f,b	;volatile
  6689                           
  6690                           ; BSR set to: 59
  6691                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  6692  01A0DA  9BFD               	bcf	253,5,b	;volatile
  6693                           
  6694                           ; BSR set to: 59
  6695                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  6696  01A0DC  51FD               	movf	253,w,b	;volatile
  6697  01A0DE  0BF9               	andlw	-7
  6698  01A0E0  0902               	iorlw	2
  6699  01A0E2  6FFD               	movwf	253,b	;volatile
  6700                           
  6701                           ; BSR set to: 59
  6702                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  6703  01A0E4  0EE7               	movlw	-25
  6704  01A0E6  17FD               	andwf	253,f,b	;volatile
  6705                           
  6706                           ; BSR set to: 59
  6707                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  6708  01A0E8  81FD               	bsf	253,0,b	;volatile
  6709                           
  6710                           ; BSR set to: 59
  6711                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  6712  01A0EA  0E83               	movlw	low _ring_buf1
  6713  01A0EC  6FF9               	movwf	249,b	;volatile
  6714  01A0EE  0E03               	movlw	high _ring_buf1
  6715  01A0F0  6FFA               	movwf	250,b	;volatile
  6716  01A0F2  0E00               	movlw	low (_ring_buf1 shr (0+16))
  6717  01A0F4  6FFB               	movwf	251,b	;volatile
  6718                           
  6719                           ; BSR set to: 59
  6720                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  6721  01A0F6  9BFC               	bcf	252,5,b	;volatile
  6722                           
  6723                           ; BSR set to: 59
  6724                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  6725  01A0F8  013D               	movlb	61	; () banked
  6726  01A0FA  831A               	bsf	26,1,b	;volatile
  6727                           
  6728                           ; BSR set to: 61
  6729                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  6730  01A0FC  94BE               	bcf	190,2,c	;volatile
  6731                           
  6732                           ; BSR set to: 61
  6733                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6734  01A0FE  0012               	return		;funcret
  6735  01A100                     __end_of_init_display:
  6736                           	opt callstack 0
  6737                           
  6738 ;; *************** function _send_lcd_data *****************
  6739 ;; Defined at:
  6740 ;;		line 123 in file "eadog.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;  data            1  [STACK] const unsigned char 
  6743 ;; Auto vars:     Size  Location     Type
  6744 ;;		None
  6745 ;; Return value:  Size  Location     Type
  6746 ;;                  1  [STACK] void 
  6747 ;; Registers used:
  6748 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6749 ;; Tracked objects:
  6750 ;;		On entry : 3F/0
  6751 ;;		On exit  : 3F/0
  6752 ;;		Unchanged: 0/0
  6753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6758 ;;Total ram usage:        0 bytes
  6759 ;; Hardware stack levels used:    1
  6760 ;; Hardware stack levels required when called:   16
  6761 ;; This function calls:
  6762 ;;		_SPI1_Exchange8bit
  6763 ;;		_wdtdelay
  6764 ;; This function is called by:
  6765 ;;		_init_display
  6766 ;; This function uses a reentrant model
  6767 ;;
  6768                           
  6769                           	psect	text7
  6770  01BDA8                     __ptext7:
  6771                           	opt callstack 0
  6772  01BDA8                     _send_lcd_data:
  6773                           	opt callstack 13
  6774                           
  6775                           ; BSR set to: 61
  6776                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6777                           ;incstack = 0
  6778                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  6779  01BDA8  94BC               	bcf	188,2,c	;volatile
  6780                           
  6781                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  6782                           ;stkvar	_data @ sp[(0)+-1]
  6783  01BDAA  0EFF               	movlw	-1
  6784  01BDAC  50E3               	movf	plusw1,w,c
  6785  01BDAE  6EE6               	movwf	postinc1,c
  6786  01BDB0  EC94  F0DF         	call	_SPI1_Exchange8bit	;wreg free
  6787                           
  6788                           ; BSR set to: 57
  6789                           ;eadog.c: 127:  wdtdelay(8);
  6790  01BDB4  0E08               	movlw	8
  6791  01BDB6  6EE6               	movwf	postinc1,c
  6792  01BDB8  0E00               	movlw	0
  6793  01BDBA  6EE6               	movwf	postinc1,c
  6794  01BDBC  0E00               	movlw	0
  6795  01BDBE  6EE6               	movwf	postinc1,c
  6796  01BDC0  0E00               	movlw	0
  6797  01BDC2  6EE6               	movwf	postinc1,c
  6798  01BDC4  EC1F  F0D9         	call	_wdtdelay	;wreg free
  6799                           
  6800                           ; BSR set to: 0
  6801                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  6802  01BDC8  52E5               	movf	postdec1,f,c
  6803  01BDCA  0012               	return		;funcret
  6804  01BDCC                     __end_of_send_lcd_data:
  6805                           	opt callstack 0
  6806                           
  6807 ;; *************** function _send_lcd_cmd_long *****************
  6808 ;; Defined at:
  6809 ;;		line 139 in file "eadog.c"
  6810 ;; Parameters:    Size  Location     Type
  6811 ;;  cmd             1  [STACK] const unsigned char 
  6812 ;; Auto vars:     Size  Location     Type
  6813 ;;		None
  6814 ;; Return value:  Size  Location     Type
  6815 ;;                  1  [STACK] void 
  6816 ;; Registers used:
  6817 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6818 ;; Tracked objects:
  6819 ;;		On entry : 3F/0
  6820 ;;		On exit  : 3F/0
  6821 ;;		Unchanged: 0/0
  6822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6827 ;;Total ram usage:        0 bytes
  6828 ;; Hardware stack levels used:    1
  6829 ;; Hardware stack levels required when called:   16
  6830 ;; This function calls:
  6831 ;;		_SPI1_Exchange8bit
  6832 ;;		_wdtdelay
  6833 ;; This function is called by:
  6834 ;;		_init_display
  6835 ;; This function uses a reentrant model
  6836 ;;
  6837                           
  6838                           	psect	text8
  6839  01B6AA                     __ptext8:
  6840                           	opt callstack 0
  6841  01B6AA                     _send_lcd_cmd_long:
  6842                           	opt callstack 13
  6843                           
  6844                           ; BSR set to: 0
  6845                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6846                           ;incstack = 0
  6847                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  6848  01B6AA  94BC               	bcf	188,2,c	;volatile
  6849                           
  6850                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  6851  01B6AC  0EFE               	movlw	254
  6852  01B6AE  6EE6               	movwf	postinc1,c
  6853  01B6B0  EC94  F0DF         	call	_SPI1_Exchange8bit	;wreg free
  6854                           
  6855                           ; BSR set to: 57
  6856                           ;eadog.c: 143:  wdtdelay(8);
  6857  01B6B4  0E08               	movlw	8
  6858  01B6B6  6EE6               	movwf	postinc1,c
  6859  01B6B8  0E00               	movlw	0
  6860  01B6BA  6EE6               	movwf	postinc1,c
  6861  01B6BC  0E00               	movlw	0
  6862  01B6BE  6EE6               	movwf	postinc1,c
  6863  01B6C0  0E00               	movlw	0
  6864  01B6C2  6EE6               	movwf	postinc1,c
  6865  01B6C4  EC1F  F0D9         	call	_wdtdelay	;wreg free
  6866                           
  6867                           ; BSR set to: 0
  6868                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  6869                           ;stkvar	_cmd @ sp[(0)+-1]
  6870  01B6C8  0EFF               	movlw	-1
  6871  01B6CA  50E3               	movf	plusw1,w,c
  6872  01B6CC  6EE6               	movwf	postinc1,c
  6873  01B6CE  EC94  F0DF         	call	_SPI1_Exchange8bit	;wreg free
  6874                           
  6875                           ;eadog.c: 145:  wdtdelay(800);
  6876  01B6D2  0E20               	movlw	32
  6877  01B6D4  6EE6               	movwf	postinc1,c
  6878  01B6D6  0E03               	movlw	3
  6879  01B6D8  6EE6               	movwf	postinc1,c
  6880  01B6DA  0E00               	movlw	0
  6881  01B6DC  6EE6               	movwf	postinc1,c
  6882  01B6DE  0E00               	movlw	0
  6883  01B6E0  6EE6               	movwf	postinc1,c
  6884  01B6E2  EC1F  F0D9         	call	_wdtdelay	;wreg free
  6885                           
  6886                           ; BSR set to: 0
  6887                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6888  01B6E6  52E5               	movf	postdec1,f,c
  6889  01B6E8  0012               	return		;funcret
  6890  01B6EA                     __end_of_send_lcd_cmd_long:
  6891                           	opt callstack 0
  6892                           
  6893 ;; *************** function _send_lcd_cmd *****************
  6894 ;; Defined at:
  6895 ;;		line 130 in file "eadog.c"
  6896 ;; Parameters:    Size  Location     Type
  6897 ;;  cmd             1  [STACK] const unsigned char 
  6898 ;; Auto vars:     Size  Location     Type
  6899 ;;		None
  6900 ;; Return value:  Size  Location     Type
  6901 ;;                  1  [STACK] void 
  6902 ;; Registers used:
  6903 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6904 ;; Tracked objects:
  6905 ;;		On entry : 3F/0
  6906 ;;		On exit  : 3F/0
  6907 ;;		Unchanged: 0/0
  6908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6913 ;;Total ram usage:        0 bytes
  6914 ;; Hardware stack levels used:    1
  6915 ;; Hardware stack levels required when called:   16
  6916 ;; This function calls:
  6917 ;;		_SPI1_Exchange8bit
  6918 ;;		_wdtdelay
  6919 ;; This function is called by:
  6920 ;;		_init_display
  6921 ;; This function uses a reentrant model
  6922 ;;
  6923                           
  6924                           	psect	text9
  6925  01B6EA                     __ptext9:
  6926                           	opt callstack 0
  6927  01B6EA                     _send_lcd_cmd:
  6928                           	opt callstack 13
  6929                           
  6930                           ; BSR set to: 0
  6931                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6932                           ;incstack = 0
  6933                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  6934  01B6EA  94BC               	bcf	188,2,c	;volatile
  6935                           
  6936                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  6937  01B6EC  0EFE               	movlw	254
  6938  01B6EE  6EE6               	movwf	postinc1,c
  6939  01B6F0  EC94  F0DF         	call	_SPI1_Exchange8bit	;wreg free
  6940                           
  6941                           ; BSR set to: 57
  6942                           ;eadog.c: 134:  wdtdelay(8);
  6943  01B6F4  0E08               	movlw	8
  6944  01B6F6  6EE6               	movwf	postinc1,c
  6945  01B6F8  0E00               	movlw	0
  6946  01B6FA  6EE6               	movwf	postinc1,c
  6947  01B6FC  0E00               	movlw	0
  6948  01B6FE  6EE6               	movwf	postinc1,c
  6949  01B700  0E00               	movlw	0
  6950  01B702  6EE6               	movwf	postinc1,c
  6951  01B704  EC1F  F0D9         	call	_wdtdelay	;wreg free
  6952                           
  6953                           ; BSR set to: 0
  6954                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  6955                           ;stkvar	_cmd @ sp[(0)+-1]
  6956  01B708  0EFF               	movlw	-1
  6957  01B70A  50E3               	movf	plusw1,w,c
  6958  01B70C  6EE6               	movwf	postinc1,c
  6959  01B70E  EC94  F0DF         	call	_SPI1_Exchange8bit	;wreg free
  6960                           
  6961                           ;eadog.c: 136:  wdtdelay(8);
  6962  01B712  0E08               	movlw	8
  6963  01B714  6EE6               	movwf	postinc1,c
  6964  01B716  0E00               	movlw	0
  6965  01B718  6EE6               	movwf	postinc1,c
  6966  01B71A  0E00               	movlw	0
  6967  01B71C  6EE6               	movwf	postinc1,c
  6968  01B71E  0E00               	movlw	0
  6969  01B720  6EE6               	movwf	postinc1,c
  6970  01B722  EC1F  F0D9         	call	_wdtdelay	;wreg free
  6971                           
  6972                           ; BSR set to: 0
  6973                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  6974  01B726  52E5               	movf	postdec1,f,c
  6975  01B728  0012               	return		;funcret
  6976  01B72A                     __end_of_send_lcd_cmd:
  6977                           	opt callstack 0
  6978                           
  6979 ;; *************** function _SPI1_Exchange8bit *****************
  6980 ;; Defined at:
  6981 ;;		line 79 in file "mcc_generated_files/spi1.c"
  6982 ;; Parameters:    Size  Location     Type
  6983 ;;  data            1  [STACK] unsigned char 
  6984 ;; Auto vars:     Size  Location     Type
  6985 ;;		None
  6986 ;; Return value:  Size  Location     Type
  6987 ;;                  1  [STACK] unsigned char 
  6988 ;; Registers used:
  6989 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  6990 ;; Tracked objects:
  6991 ;;		On entry : 0/0
  6992 ;;		On exit  : 3F/39
  6993 ;;		Unchanged: 0/0
  6994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6999 ;;Total ram usage:        0 bytes
  7000 ;; Hardware stack levels used:    1
  7001 ;; Hardware stack levels required when called:   15
  7002 ;; This function calls:
  7003 ;;		Nothing
  7004 ;; This function is called by:
  7005 ;;		_send_lcd_data
  7006 ;;		_send_lcd_cmd
  7007 ;;		_send_lcd_cmd_long
  7008 ;; This function uses a reentrant model
  7009 ;;
  7010                           
  7011                           	psect	text10
  7012  01BF28                     __ptext10:
  7013                           	opt callstack 0
  7014  01BF28                     _SPI1_Exchange8bit:
  7015                           	opt callstack 13
  7016                           
  7017                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  7018                           
  7019                           ; BSR set to: 0
  7020                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7021                           ;incstack = 0
  7022  01BF28  0E01               	movlw	1
  7023  01BF2A  013D               	movlb	61	; () banked
  7024  01BF2C  6F12               	movwf	18,b	;volatile
  7025                           
  7026                           ; BSR set to: 61
  7027                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  7028                           ;stkvar	_data @ sp[(0)+-1]
  7029  01BF2E  0EFF               	movlw	-1
  7030  01BF30  006F FF8F FD11     	movff	plusw1,15633	;volatile
  7031  01BF36                     l807:
  7032                           
  7033                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  7034  01BF36  0139               	movlb	57	; () banked
  7035  01BF38  A9A2               	btfss	162,4,b	;volatile
  7036  01BF3A  D7FD               	goto	l807
  7037                           
  7038                           ; BSR set to: 57
  7039                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  7040  01BF3C  006F F440  F001    	movff	15632,btemp	;volatile
  7041                           
  7042                           ; BSR set to: 57
  7043                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7044  01BF42  52E5               	movf	postdec1,f,c
  7045  01BF44  0012               	return		;funcret
  7046  01BF46                     __end_of_SPI1_Exchange8bit:
  7047                           	opt callstack 0
  7048                           
  7049 ;; *************** function _ringBufS_init *****************
  7050 ;; Defined at:
  7051 ;;		line 22 in file "ringbufs.c"
  7052 ;; Parameters:    Size  Location     Type
  7053 ;;  _this           2  [STACK] PTR volatile struct ring
  7054 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7055 ;; Auto vars:     Size  Location     Type
  7056 ;;		None
  7057 ;; Return value:  Size  Location     Type
  7058 ;;                  1  [STACK] void 
  7059 ;; Registers used:
  7060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7061 ;; Tracked objects:
  7062 ;;		On entry : 0/0
  7063 ;;		On exit  : 0/0
  7064 ;;		Unchanged: 0/0
  7065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7070 ;;Total ram usage:        0 bytes
  7071 ;; Hardware stack levels used:    1
  7072 ;; Hardware stack levels required when called:   16
  7073 ;; This function calls:
  7074 ;;		_memset
  7075 ;; This function is called by:
  7076 ;;		_init_display
  7077 ;; This function uses a reentrant model
  7078 ;;
  7079                           
  7080                           	psect	text11
  7081  01BB4E                     __ptext11:
  7082                           	opt callstack 0
  7083  01BB4E                     _ringBufS_init:
  7084                           	opt callstack 13
  7085                           
  7086                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  7087                           
  7088                           ; BSR set to: 57
  7089                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7090                           ;incstack = 0
  7091  01BB4E  0E43               	movlw	67
  7092  01BB50  6EE6               	movwf	postinc1,c
  7093  01BB52  0E00               	movlw	0
  7094  01BB54  6EE6               	movwf	postinc1,c
  7095  01BB56  0E00               	movlw	0
  7096  01BB58  6EE6               	movwf	postinc1,c
  7097  01BB5A  0E00               	movlw	0
  7098  01BB5C  6EE6               	movwf	postinc1,c
  7099                           
  7100                           ;stkvar	__this @ sp[(-4)+-2]
  7101  01BB5E  0EFA               	movlw	-6
  7102  01BB60  006F FF8F FFE6     	movff	plusw1,postinc1
  7103  01BB66  006F FF8F FFE6     	movff	plusw1,postinc1
  7104  01BB6C  EC2A  F0B7         	call	_memset	;wreg free
  7105                           
  7106                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  7107  01BB70  52E5               	movf	postdec1,f,c
  7108  01BB72  52E5               	movf	postdec1,f,c
  7109  01BB74  0012               	return		;funcret
  7110  01BB76                     __end_of_ringBufS_init:
  7111                           	opt callstack 0
  7112                           
  7113 ;; *************** function _init_bsoc *****************
  7114 ;; Defined at:
  7115 ;;		line 109 in file "bsoc.c"
  7116 ;; Parameters:    Size  Location     Type
  7117 ;;		None
  7118 ;; Auto vars:     Size  Location     Type
  7119 ;;		None
  7120 ;; Return value:  Size  Location     Type
  7121 ;;                  1  [STACK] void 
  7122 ;; Registers used:
  7123 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  7124 ;; Tracked objects:
  7125 ;;		On entry : 0/1
  7126 ;;		On exit  : 0/0
  7127 ;;		Unchanged: 0/0
  7128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7133 ;;Total ram usage:        0 bytes
  7134 ;; Hardware stack levels used:    1
  7135 ;; Hardware stack levels required when called:   18
  7136 ;; This function calls:
  7137 ;;		_TMR3_SetInterruptHandler
  7138 ;;		_Volts_to_SOC
  7139 ;;		___fldiv
  7140 ;;		___flmul
  7141 ;;		___fltol
  7142 ;;		___xxtofl
  7143 ;;		_conv_raw_result
  7144 ;; This function is called by:
  7145 ;;		_main
  7146 ;; This function uses a reentrant model
  7147 ;;
  7148                           
  7149                           	psect	text12
  7150  017BC2                     __ptext12:
  7151                           	opt callstack 0
  7152  017BC2                     _init_bsoc:
  7153                           	opt callstack 12
  7154                           
  7155                           ;bsoc.c: 114:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  7156                           
  7157                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7158                           ;incstack = 0
  7159  017BC2  0E00               	movlw	0
  7160  017BC4  6EE6               	movwf	postinc1,c
  7161  017BC6  0E00               	movlw	0
  7162  017BC8  6EE6               	movwf	postinc1,c
  7163  017BCA  0E7A               	movlw	122
  7164  017BCC  6EE6               	movwf	postinc1,c
  7165  017BCE  0E44               	movlw	68
  7166  017BD0  6EE6               	movwf	postinc1,c
  7167  017BD2  0E00               	movlw	0
  7168  017BD4  6EE6               	movwf	postinc1,c
  7169  017BD6  0E04               	movlw	4
  7170  017BD8  6EE6               	movwf	postinc1,c
  7171  017BDA  EC71  F0A9         	call	_conv_raw_result	;wreg free
  7172  017BDE  0060  F007  FFE6   	movff	btemp,postinc1
  7173  017BE4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7174  017BEA  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7175  017BF0  0060  F013  FFE6   	movff	btemp+3,postinc1
  7176  017BF6  EC3B  F0C7         	call	___fltol	;wreg free
  7177  017BFA  0060  F007  FFE6   	movff	btemp,postinc1
  7178  017C00  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7179  017C06  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7180  017C0C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7181  017C12  0E00               	movlw	0
  7182  017C14  6EE6               	movwf	postinc1,c
  7183  017C16  EC3D  F0C2         	call	___xxtofl	;wreg free
  7184  017C1A  0060  F007  FFE6   	movff	btemp,postinc1
  7185  017C20  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7186  017C26  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7187  017C2C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7188  017C32  ECC1  F09E         	call	___flmul	;wreg free
  7189  017C36  0060  F007  FFE6   	movff	btemp,postinc1
  7190  017C3C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7191  017C42  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7192  017C48  0060  F013  FFE6   	movff	btemp+3,postinc1
  7193  017C4E  EC3B  F0C7         	call	___fltol	;wreg free
  7194  017C52  0060  F007  FFE6   	movff	btemp,postinc1
  7195  017C58  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7196  017C5E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7197  017C64  0060  F013  FFE6   	movff	btemp+3,postinc1
  7198  017C6A  EC62  F0CC         	call	_Volts_to_SOC	;wreg free
  7199  017C6E  0060  F004  F7B5   	movff	btemp,_C+182	;volatile
  7200  017C74  0060  F008  F7B6   	movff	btemp+1,_C+183	;volatile
  7201                           
  7202                           ;bsoc.c: 115:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  7203  017C7A  EE21  F38B         	lfsr	2,_C+140	;volatile
  7204  017C7E  006F FF7B FFE6     	movff	postinc2,postinc1
  7205  017C84  006F FF7B FFE6     	movff	postinc2,postinc1
  7206  017C8A  006F FF7B FFE6     	movff	postinc2,postinc1
  7207  017C90  006F FF7B FFE6     	movff	postinc2,postinc1
  7208  017C96  0E00               	movlw	0
  7209  017C98  6EE6               	movwf	postinc1,c
  7210  017C9A  0E00               	movlw	0
  7211  017C9C  6EE6               	movwf	postinc1,c
  7212  017C9E  0EC8               	movlw	200
  7213  017CA0  6EE6               	movwf	postinc1,c
  7214  017CA2  0E42               	movlw	66
  7215  017CA4  6EE6               	movwf	postinc1,c
  7216  017CA6  0E00               	movlw	0
  7217  017CA8  6EE6               	movwf	postinc1,c
  7218  017CAA  0E00               	movlw	0
  7219  017CAC  6EE6               	movwf	postinc1,c
  7220  017CAE  0E7A               	movlw	122
  7221  017CB0  6EE6               	movwf	postinc1,c
  7222  017CB2  0E44               	movlw	68
  7223  017CB4  6EE6               	movwf	postinc1,c
  7224  017CB6  0E00               	movlw	0
  7225  017CB8  6EE6               	movwf	postinc1,c
  7226  017CBA  0E04               	movlw	4
  7227  017CBC  6EE6               	movwf	postinc1,c
  7228  017CBE  EC71  F0A9         	call	_conv_raw_result	;wreg free
  7229  017CC2  0060  F007  FFE6   	movff	btemp,postinc1
  7230  017CC8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7231  017CCE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7232  017CD4  0060  F013  FFE6   	movff	btemp+3,postinc1
  7233  017CDA  EC3B  F0C7         	call	___fltol	;wreg free
  7234  017CDE  0060  F007  FFE6   	movff	btemp,postinc1
  7235  017CE4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7236  017CEA  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7237  017CF0  0060  F013  FFE6   	movff	btemp+3,postinc1
  7238  017CF6  0E00               	movlw	0
  7239  017CF8  6EE6               	movwf	postinc1,c
  7240  017CFA  EC3D  F0C2         	call	___xxtofl	;wreg free
  7241  017CFE  0060  F007  FFE6   	movff	btemp,postinc1
  7242  017D04  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7243  017D0A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7244  017D10  0060  F013  FFE6   	movff	btemp+3,postinc1
  7245  017D16  ECC1  F09E         	call	___flmul	;wreg free
  7246  017D1A  0060  F007  FFE6   	movff	btemp,postinc1
  7247  017D20  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7248  017D26  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7249  017D2C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7250  017D32  EC3B  F0C7         	call	___fltol	;wreg free
  7251  017D36  0060  F007  FFE6   	movff	btemp,postinc1
  7252  017D3C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7253  017D42  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7254  017D48  0060  F013  FFE6   	movff	btemp+3,postinc1
  7255  017D4E  EC62  F0CC         	call	_Volts_to_SOC	;wreg free
  7256  017D52  0060  F004  F00B   	movff	btemp,btemp+10
  7257  017D58  0060  F008  F00C   	movff	btemp+1,btemp+11
  7258  017D5E  500B               	movf	(btemp+10)^0,w,c
  7259  017D60  6E05               	movwf	(btemp+4)^0,c
  7260  017D62  500C               	movf	(btemp+11)^0,w,c
  7261  017D64  6E06               	movwf	(btemp+5)^0,c
  7262  017D66  6A07               	clrf	(btemp+6)^0,c
  7263  017D68  6A08               	clrf	(btemp+7)^0,c
  7264  017D6A  0060  F017  FFE6   	movff	btemp+4,postinc1
  7265  017D70  0060  F01B  FFE6   	movff	btemp+5,postinc1
  7266  017D76  0060  F01F  FFE6   	movff	btemp+6,postinc1
  7267  017D7C  0060  F023  FFE6   	movff	btemp+7,postinc1
  7268  017D82  0E00               	movlw	0
  7269  017D84  6EE6               	movwf	postinc1,c
  7270  017D86  EC3D  F0C2         	call	___xxtofl	;wreg free
  7271  017D8A  0060  F007  FFE6   	movff	btemp,postinc1
  7272  017D90  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7273  017D96  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7274  017D9C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7275  017DA2  ECB4  F0A6         	call	___fldiv	;wreg free
  7276  017DA6  0060  F007  FFE6   	movff	btemp,postinc1
  7277  017DAC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7278  017DB2  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7279  017DB8  0060  F013  FFE6   	movff	btemp+3,postinc1
  7280  017DBE  ECC1  F09E         	call	___flmul	;wreg free
  7281  017DC2  0060  F004  F78F   	movff	btemp,_C+144	;volatile
  7282  017DC8  0060  F008  F790   	movff	btemp+1,_C+145	;volatile
  7283  017DCE  0060  F00C  F791   	movff	btemp+2,_C+146	;volatile
  7284  017DD4  0060  F010  F792   	movff	btemp+3,_C+147	;volatile
  7285                           
  7286                           ;bsoc.c: 116:  C.dynamic_ah_adj = C.dynamic_ah;
  7287  017DDA  EE21  F38F         	lfsr	2,_C+144	;volatile
  7288  017DDE  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  7289  017DE4  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  7290  017DEA  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  7291  017DF0  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  7292                           
  7293                           ;bsoc.c: 117:  TMR3_SetInterruptHandler(calc_bsoc);
  7294  017DF6  0E4C               	movlw	low _calc_bsoc
  7295  017DF8  6EE6               	movwf	postinc1,c
  7296  017DFA  0E33               	movlw	high _calc_bsoc
  7297  017DFC  6EE6               	movwf	postinc1,c
  7298  017DFE  0E01               	movlw	low (_calc_bsoc shr (0+16))
  7299  017E00  6EE6               	movwf	postinc1,c
  7300  017E02  EC33  F0DE         	call	_TMR3_SetInterruptHandler	;wreg free
  7301                           
  7302                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  7303  017E06  0012               	return		;funcret
  7304  017E08                     __end_of_init_bsoc:
  7305                           	opt callstack 0
  7306                           
  7307 ;; *************** function _Volts_to_SOC *****************
  7308 ;; Defined at:
  7309 ;;		line 174 in file "bsoc.c"
  7310 ;; Parameters:    Size  Location     Type
  7311 ;;  cvoltage        4  [STACK] const unsigned long 
  7312 ;; Auto vars:     Size  Location     Type
  7313 ;;  soc             4  [STACK] float 
  7314 ;;  slot            1  [STACK] unsigned char 
  7315 ;; Return value:  Size  Location     Type
  7316 ;;                  2  [STACK] unsigned short 
  7317 ;; Registers used:
  7318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  7319 ;; Tracked objects:
  7320 ;;		On entry : 0/1
  7321 ;;		On exit  : 0/0
  7322 ;;		Unchanged: 0/0
  7323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7328 ;;Total ram usage:        0 bytes
  7329 ;; Hardware stack levels used:    1
  7330 ;; Hardware stack levels required when called:   16
  7331 ;; This function calls:
  7332 ;;		___fltol
  7333 ;;		___xxtofl
  7334 ;; This function is called by:
  7335 ;;		_init_bsoc
  7336 ;; This function uses a reentrant model
  7337 ;;
  7338                           
  7339                           	psect	text13
  7340  0198C4                     __ptext13:
  7341                           	opt callstack 0
  7342  0198C4                     _Volts_to_SOC:
  7343                           	opt callstack 0
  7344                           
  7345                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7346  0198C4  0E05               	movlw	5
  7347  0198C6  26E1               	addwf	fsr1l,f,c
  7348  0198C8  0E00               	movlw	0
  7349  0198CA  22E2               	addwfc	fsr1h,f,c
  7350                           
  7351                           ;bsoc.c: 174: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 175: {;bsoc.c: 176:
      +                            uint8_t slot;;bsoc.c: 177:  float soc = 0;
  7352                           
  7353                           ;incstack = 0
  7354  0198CC  0E00               	movlw	0
  7355  0198CE  6E09               	movwf	(btemp+8)^0,c
  7356  0198D0  0E00               	movlw	0
  7357  0198D2  6E0A               	movwf	(btemp+9)^0,c
  7358  0198D4  0E00               	movlw	0
  7359  0198D6  6E0B               	movwf	(btemp+10)^0,c
  7360  0198D8  0E00               	movlw	0
  7361  0198DA  6E0C               	movwf	(btemp+11)^0,c
  7362                           
  7363                           ;stkvar	_soc @ sp[(-5)+0]
  7364  0198DC  0EFB               	movlw	-5
  7365  0198DE  0060  F027  FFE3   	movff	btemp+8,plusw1
  7366  0198E4  0EFC               	movlw	-4
  7367  0198E6  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7368  0198EC  0EFD               	movlw	-3
  7369  0198EE  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7370  0198F4  0EFE               	movlw	-2
  7371  0198F6  0060  F033  FFE3   	movff	btemp+11,plusw1
  7372                           
  7373                           ;bsoc.c: 179:  for (slot = 0; slot < 26; slot++) {
  7374                           ;stkvar	_slot @ sp[(-5)+4]
  7375  0198FC  0EFF               	movlw	-1
  7376  0198FE  6AE3               	clrf	plusw1,c
  7377  019900                     l10662:
  7378                           
  7379                           ;bsoc.c: 180:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  7380                           ;stkvar	_cvoltage @ sp[(-5)+-4]
  7381                           ;stkvar	_slot @ sp[(-5)+4]
  7382  019900  0EFF               	movlw	-1
  7383  019902  50E3               	movf	plusw1,w,c
  7384  019904  0D08               	mullw	8
  7385  019906  0EEB               	movlw	low _BVSOC_TABLE
  7386  019908  24F3               	addwf	243,w,c
  7387  01990A  6EF6               	movwf	tblptrl,c
  7388  01990C  0EF9               	movlw	high _BVSOC_TABLE
  7389  01990E  20F4               	addwfc	244,w,c
  7390  019910  6EF7               	movwf	tblptrh,c
  7391  019912                     	if	1	;There are 3 active tblptr bytes
  7392  019912  6AF8               	clrf	tblptru,c
  7393  019914  0E00               	movlw	low (__mediumconst shr (0+16))
  7394  019916  22F8               	addwfc	tblptru,f,c
  7395  019918                     	endif
  7396  019918  0EF7               	movlw	-9
  7397  01991A  50E3               	movf	plusw1,w,c
  7398  01991C  0009               	tblrd		*+
  7399  01991E  5CF5               	subwf	tablat,w,c
  7400  019920  0EF8               	movlw	-8
  7401  019922  50E3               	movf	plusw1,w,c
  7402  019924  0009               	tblrd		*+
  7403  019926  58F5               	subwfb	tablat,w,c
  7404  019928  0EF9               	movlw	-7
  7405  01992A  50E3               	movf	plusw1,w,c
  7406  01992C  0009               	tblrd		*+
  7407  01992E  58F5               	subwfb	tablat,w,c
  7408  019930  0EFA               	movlw	-6
  7409  019932  50E3               	movf	plusw1,w,c
  7410  019934  0009               	tblrd		*+
  7411  019936  58F5               	subwfb	tablat,w,c
  7412  019938  B0D8               	btfsc	status,0,c
  7413  01993A  D034               	goto	l10666
  7414                           
  7415                           ;bsoc.c: 181:    soc = BVSOC_TABLE[slot][1];
  7416                           ;stkvar	_slot @ sp[(-5)+4]
  7417  01993C  0EFF               	movlw	-1
  7418  01993E  50E3               	movf	plusw1,w,c
  7419  019940  0D08               	mullw	8
  7420  019942  0E04               	movlw	4
  7421  019944  26F3               	addwf	243,f,c
  7422  019946  0E00               	movlw	0
  7423  019948  22F4               	addwfc	244,f,c
  7424  01994A  0EEB               	movlw	low _BVSOC_TABLE
  7425  01994C  24F3               	addwf	243,w,c
  7426  01994E  6EF6               	movwf	tblptrl,c
  7427  019950  0EF9               	movlw	high _BVSOC_TABLE
  7428  019952  20F4               	addwfc	244,w,c
  7429  019954  6EF7               	movwf	tblptrh,c
  7430  019956                     	if	1	;There are 3 active tblptr bytes
  7431  019956  6AF8               	clrf	tblptru,c
  7432  019958  0E00               	movlw	low (__mediumconst shr (0+16))
  7433  01995A  22F8               	addwfc	tblptru,f,c
  7434  01995C                     	endif
  7435  01995C  0009               	tblrd		*+
  7436  01995E  006F FFD7 FFE6     	movff	tablat,postinc1
  7437  019964  0009               	tblrd		*+
  7438  019966  006F FFD7 FFE6     	movff	tablat,postinc1
  7439  01996C  0009               	tblrd		*+
  7440  01996E  006F FFD7 FFE6     	movff	tablat,postinc1
  7441  019974  0009               	tblrd		*+
  7442  019976  006F FFD7 FFE6     	movff	tablat,postinc1
  7443  01997C  0E00               	movlw	0
  7444  01997E  6EE6               	movwf	postinc1,c
  7445  019980  EC3D  F0C2         	call	___xxtofl	;wreg free
  7446                           
  7447                           ;stkvar	_soc @ sp[(-5)+0]
  7448  019984  0EFB               	movlw	-5
  7449  019986  0060  F007  FFE3   	movff	btemp,plusw1
  7450  01998C  0EFC               	movlw	-4
  7451  01998E  0060  F00B  FFE3   	movff	btemp+1,plusw1
  7452  019994  0EFD               	movlw	-3
  7453  019996  0060  F00F  FFE3   	movff	btemp+2,plusw1
  7454  01999C  0EFE               	movlw	-2
  7455  01999E  0060  F013  FFE3   	movff	btemp+3,plusw1
  7456  0199A4                     l10666:
  7457                           
  7458                           ;bsoc.c: 183:  }
  7459                           ;stkvar	_slot @ sp[(-5)+4]
  7460  0199A4  0EFF               	movlw	-1
  7461  0199A6  2AE3               	incf	plusw1,f,c
  7462                           
  7463                           ;stkvar	_slot @ sp[(-5)+4]
  7464  0199A8  0EFF               	movlw	-1
  7465  0199AA  006F FF8C  F001    	movff	plusw1,btemp
  7466  0199B0  0E19               	movlw	25
  7467  0199B2  6401               	cpfsgt	btemp^0,c
  7468  0199B4  D7A5               	goto	l10662
  7469                           
  7470                           ;bsoc.c: 184:  return soc;
  7471                           ;stkvar	_soc @ sp[(-5)+0]
  7472  0199B6  0EFB               	movlw	-5
  7473  0199B8  006F FF8F FFE6     	movff	plusw1,postinc1
  7474  0199BE  006F FF8F FFE6     	movff	plusw1,postinc1
  7475  0199C4  006F FF8F FFE6     	movff	plusw1,postinc1
  7476  0199CA  006F FF8F FFE6     	movff	plusw1,postinc1
  7477  0199D0  EC3B  F0C7         	call	___fltol	;wreg free
  7478                           
  7479                           ; _Volts_to_SOC: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  7480  0199D4  0EF7               	movlw	247
  7481  0199D6  26E1               	addwf	fsr1l,f,c
  7482  0199D8  0EFF               	movlw	255
  7483  0199DA  22E2               	addwfc	fsr1h,f,c
  7484  0199DC  0012               	return		;funcret
  7485  0199DE                     __end_of_Volts_to_SOC:
  7486                           	opt callstack 0
  7487                           
  7488 ;; *************** function _hid_display *****************
  7489 ;; Defined at:
  7490 ;;		line 17 in file "hid.c"
  7491 ;; Parameters:    Size  Location     Type
  7492 ;;  h               1  [STACK] PTR struct H_data
  7493 ;;		 -> H(7), 
  7494 ;; Auto vars:     Size  Location     Type
  7495 ;;		None
  7496 ;; Return value:  Size  Location     Type
  7497 ;;                  1  [STACK] PTR struct H_data
  7498 ;; Registers used:
  7499 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  7500 ;; Tracked objects:
  7501 ;;		On entry : 3F/39
  7502 ;;		On exit  : 0/0
  7503 ;;		Unchanged: 0/0
  7504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7509 ;;Total ram usage:        0 bytes
  7510 ;; Hardware stack levels used:    1
  7511 ;; Hardware stack levels required when called:   17
  7512 ;; This function calls:
  7513 ;;		_hid_input
  7514 ;; This function is called by:
  7515 ;;		_main
  7516 ;; This function uses a reentrant model
  7517 ;;
  7518                           
  7519                           	psect	text14
  7520  019E24                     __ptext14:
  7521                           	opt callstack 0
  7522  019E24                     _hid_display:
  7523                           	opt callstack 13
  7524                           
  7525                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  7526                           ;stkvar	_h @ sp[(0)+-1]
  7527                           
  7528                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7529                           ;incstack = 0
  7530  019E24  0EFF               	movlw	-1
  7531  019E26  50E3               	movf	plusw1,w,c
  7532  019E28  6EE6               	movwf	postinc1,c
  7533  019E2A  ECCF  F0D5         	call	_hid_input	;wreg free
  7534                           
  7535                           ;hid.c: 21:  switch (h->h_state) {
  7536  019E2E  D066               	goto	l11074
  7537  019E30                     l11052:
  7538                           
  7539                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  7540                           ;stkvar	_h @ sp[(0)+-1]
  7541  019E30  0EFF               	movlw	-1
  7542  019E32  50E3               	movf	plusw1,w,c
  7543  019E34  6ED9               	movwf	fsr2l,c
  7544  019E36  6ADA               	clrf	fsr2h,c
  7545  019E38  0E01               	movlw	1
  7546  019E3A  26D9               	addwf	fsr2l,f,c
  7547  019E3C  0E01               	movlw	1
  7548  019E3E  6EDF               	movwf	indf2,c
  7549                           
  7550                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  7551                           ;stkvar	_h @ sp[(0)+-1]
  7552  019E40  0EFF               	movlw	-1
  7553  019E42  50E3               	movf	plusw1,w,c
  7554  019E44  6ED9               	movwf	fsr2l,c
  7555  019E46  6ADA               	clrf	fsr2h,c
  7556  019E48  0E00               	movlw	0
  7557  019E4A  6EDF               	movwf	indf2,c
  7558                           
  7559                           ;hid.c: 25:   h->wait_enter = 1;
  7560                           ;stkvar	_h @ sp[(0)+-1]
  7561  019E4C  0EFF               	movlw	-1
  7562  019E4E  50E3               	movf	plusw1,w,c
  7563  019E50  6ED9               	movwf	fsr2l,c
  7564  019E52  6ADA               	clrf	fsr2h,c
  7565  019E54  0E04               	movlw	4
  7566  019E56  26D9               	addwf	fsr2l,f,c
  7567  019E58  0E01               	movlw	1
  7568  019E5A  6EDF               	movwf	indf2,c
  7569                           
  7570                           ;hid.c: 26:   h->wait_select = 1;
  7571                           ;stkvar	_h @ sp[(0)+-1]
  7572  019E5C  0EFF               	movlw	-1
  7573  019E5E  50E3               	movf	plusw1,w,c
  7574  019E60  6ED9               	movwf	fsr2l,c
  7575  019E62  6ADA               	clrf	fsr2h,c
  7576  019E64  0E02               	movlw	2
  7577  019E66  26D9               	addwf	fsr2l,f,c
  7578  019E68  0E01               	movlw	1
  7579  019E6A  6EDF               	movwf	indf2,c
  7580                           
  7581                           ;hid.c: 27:   h->select_p = SW_OFF;
  7582                           ;stkvar	_h @ sp[(0)+-1]
  7583  019E6C  0EFF               	movlw	-1
  7584  019E6E  50E3               	movf	plusw1,w,c
  7585  019E70  6ED9               	movwf	fsr2l,c
  7586  019E72  6ADA               	clrf	fsr2h,c
  7587  019E74  0E03               	movlw	3
  7588  019E76  26D9               	addwf	fsr2l,f,c
  7589  019E78  0E00               	movlw	0
  7590  019E7A  6EDF               	movwf	indf2,c
  7591                           
  7592                           ;hid.c: 28:   h->enter_p = SW_OFF;
  7593                           ;stkvar	_h @ sp[(0)+-1]
  7594  019E7C  0EFF               	movlw	-1
  7595  019E7E  50E3               	movf	plusw1,w,c
  7596  019E80  6ED9               	movwf	fsr2l,c
  7597  019E82  6ADA               	clrf	fsr2h,c
  7598  019E84  0E05               	movlw	5
  7599  019E86  26D9               	addwf	fsr2l,f,c
  7600  019E88  0E00               	movlw	0
  7601  019E8A  D036               	goto	L3
  7602  019E8C                     l11064:
  7603                           
  7604                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  7605                           ;stkvar	_h @ sp[(0)+-1]
  7606  019E8C  0EFF               	movlw	-1
  7607  019E8E  50E3               	movf	plusw1,w,c
  7608  019E90  6ED9               	movwf	fsr2l,c
  7609  019E92  6ADA               	clrf	fsr2h,c
  7610  019E94  0E02               	movlw	2
  7611  019E96  26D9               	addwf	fsr2l,f,c
  7612  019E98  50DF               	movf	indf2,w,c
  7613  019E9A  A4D8               	btfss	status,2,c
  7614  019E9C  D042               	goto	l1967
  7615                           
  7616                           ;stkvar	_h @ sp[(0)+-1]
  7617  019E9E  0EFF               	movlw	-1
  7618  019EA0  50E3               	movf	plusw1,w,c
  7619  019EA2  6ED9               	movwf	fsr2l,c
  7620  019EA4  6ADA               	clrf	fsr2h,c
  7621  019EA6  0E03               	movlw	3
  7622  019EA8  26D9               	addwf	fsr2l,f,c
  7623  019EAA  50DF               	movf	indf2,w,c
  7624  019EAC  A4D8               	btfss	status,2,c
  7625  019EAE  D039               	goto	l1967
  7626                           
  7627                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  7628                           ;stkvar	_h @ sp[(0)+-1]
  7629  019EB0  0EFF               	movlw	-1
  7630  019EB2  50E3               	movf	plusw1,w,c
  7631  019EB4  6ED9               	movwf	fsr2l,c
  7632  019EB6  6ADA               	clrf	fsr2h,c
  7633  019EB8  0E06               	movlw	6
  7634  019EBA  26D9               	addwf	fsr2l,f,c
  7635                           
  7636                           ;stkvar	_h @ sp[(0)+-1]
  7637  019EBC  0EFF               	movlw	-1
  7638  019EBE  50E3               	movf	plusw1,w,c
  7639  019EC0  6EE9               	movwf	fsr0l,c
  7640  019EC2  6AEA               	clrf	fsr0h,c
  7641  019EC4  0E06               	movlw	6
  7642  019EC6  26E9               	addwf	fsr0l,f,c
  7643  019EC8  2AEF               	incf	indf0,f,c
  7644  019ECA  50EF               	movf	indf0,w,c
  7645  019ECC  0B03               	andlw	3
  7646  019ECE  6EDF               	movwf	indf2,c
  7647                           
  7648                           ;hid.c: 34:    h->hid_display = h->sequence;
  7649                           ;stkvar	_h @ sp[(0)+-1]
  7650  019ED0  0EFF               	movlw	-1
  7651  019ED2  50E3               	movf	plusw1,w,c
  7652  019ED4  6ED9               	movwf	fsr2l,c
  7653  019ED6  6ADA               	clrf	fsr2h,c
  7654  019ED8  0E06               	movlw	6
  7655  019EDA  26D9               	addwf	fsr2l,f,c
  7656                           
  7657                           ;stkvar	_h @ sp[(0)+-1]
  7658  019EDC  0EFF               	movlw	-1
  7659  019EDE  50E3               	movf	plusw1,w,c
  7660  019EE0  6EE9               	movwf	fsr0l,c
  7661  019EE2  6AEA               	clrf	fsr0h,c
  7662  019EE4  006F FF7F FFEF     	movff	indf2,indf0
  7663                           
  7664                           ;hid.c: 35:    h->wait_select = 1;
  7665                           ;stkvar	_h @ sp[(0)+-1]
  7666  019EEA  0EFF               	movlw	-1
  7667  019EEC  50E3               	movf	plusw1,w,c
  7668  019EEE  6ED9               	movwf	fsr2l,c
  7669  019EF0  6ADA               	clrf	fsr2h,c
  7670  019EF2  0E02               	movlw	2
  7671  019EF4  26D9               	addwf	fsr2l,f,c
  7672  019EF6  0E01               	movlw	1
  7673  019EF8                     L3:
  7674  019EF8  6EDF               	movwf	indf2,c
  7675  019EFA  D013               	goto	l1967
  7676  019EFC                     l11074:
  7677                           
  7678                           ;stkvar	_h @ sp[(0)+-1]
  7679  019EFC  0EFF               	movlw	-1
  7680  019EFE  50E3               	movf	plusw1,w,c
  7681  019F00  6ED9               	movwf	fsr2l,c
  7682  019F02  6ADA               	clrf	fsr2h,c
  7683  019F04  0E01               	movlw	1
  7684  019F06  26D9               	addwf	fsr2l,f,c
  7685  019F08  50DF               	movf	indf2,w,c
  7686  019F0A  6E0B               	movwf	(btemp+10)^0,c
  7687  019F0C  6A0C               	clrf	(btemp+11)^0,c
  7688                           
  7689                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7690                           ; Switch size 1, requested type "simple"
  7691                           ; Number of cases is 1, Range of values is 0 to 0
  7692                           ; switch strategies available:
  7693                           ; Name         Instructions Cycles
  7694                           ; simple_byte            4     3 (average)
  7695                           ;	Chosen strategy is simple_byte
  7696  019F0E  500C               	movf	(btemp+11)^0,w,c
  7697  019F10  0A00               	xorlw	0	; case 0
  7698  019F12  A4D8               	btfss	status,2,c
  7699  019F14  D7BB               	goto	l11064
  7700                           
  7701                           ; Switch size 1, requested type "simple"
  7702                           ; Number of cases is 2, Range of values is 0 to 1
  7703                           ; switch strategies available:
  7704                           ; Name         Instructions Cycles
  7705                           ; simple_byte            7     4 (average)
  7706                           ;	Chosen strategy is simple_byte
  7707  019F16  500B               	movf	(btemp+10)^0,w,c
  7708  019F18  0A00               	xorlw	0	; case 0
  7709  019F1A  B4D8               	btfsc	status,2,c
  7710  019F1C  D789               	goto	l11052
  7711  019F1E  0A01               	xorlw	1	; case 1
  7712  019F20  D7B5               	goto	l11064
  7713  019F22                     l1967:
  7714                           
  7715                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  7716  019F22  52E5               	movf	postdec1,f,c
  7717  019F24  0012               	return		;funcret
  7718  019F26                     __end_of_hid_display:
  7719                           	opt callstack 0
  7720                           
  7721 ;; *************** function _hid_input *****************
  7722 ;; Defined at:
  7723 ;;		line 3 in file "hid.c"
  7724 ;; Parameters:    Size  Location     Type
  7725 ;;  h               1  [STACK] PTR struct H_data
  7726 ;;		 -> H(7), 
  7727 ;; Auto vars:     Size  Location     Type
  7728 ;;		None
  7729 ;; Return value:  Size  Location     Type
  7730 ;;                  1  [STACK] PTR struct H_data
  7731 ;; Registers used:
  7732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  7733 ;; Tracked objects:
  7734 ;;		On entry : 0/39
  7735 ;;		On exit  : 0/0
  7736 ;;		Unchanged: 0/0
  7737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7742 ;;Total ram usage:        0 bytes
  7743 ;; Hardware stack levels used:    1
  7744 ;; Hardware stack levels required when called:   16
  7745 ;; This function calls:
  7746 ;;		_get_switch
  7747 ;; This function is called by:
  7748 ;;		_hid_display
  7749 ;; This function uses a reentrant model
  7750 ;;
  7751                           
  7752                           	psect	text15
  7753  01AB9E                     __ptext15:
  7754                           	opt callstack 0
  7755  01AB9E                     _hid_input:
  7756                           	opt callstack 13
  7757                           
  7758                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  7759                           
  7760                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7761                           ;incstack = 0
  7762  01AB9E  0E02               	movlw	2
  7763  01ABA0  6EE6               	movwf	postinc1,c
  7764  01ABA2  EC50  F0DD         	call	_get_switch	;wreg free
  7765  01ABA6  5001               	movf	btemp^0,w,c
  7766  01ABA8  B4D8               	btfsc	status,2,c
  7767  01ABAA  D01C               	goto	l10572
  7768                           
  7769                           ;hid.c: 6:   h->wait_select = 0;
  7770                           ;stkvar	_h @ sp[(0)+-1]
  7771  01ABAC  0EFF               	movlw	-1
  7772  01ABAE  50E3               	movf	plusw1,w,c
  7773  01ABB0  6ED9               	movwf	fsr2l,c
  7774  01ABB2  6ADA               	clrf	fsr2h,c
  7775  01ABB4  0E02               	movlw	2
  7776  01ABB6  26D9               	addwf	fsr2l,f,c
  7777  01ABB8  0E00               	movlw	0
  7778  01ABBA  6EDF               	movwf	indf2,c
  7779                           
  7780                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  7781  01ABBC  0E02               	movlw	2
  7782  01ABBE  6EE6               	movwf	postinc1,c
  7783  01ABC0  EC50  F0DD         	call	_get_switch	;wreg free
  7784  01ABC4  5001               	movf	btemp^0,w,c
  7785  01ABC6  B4D8               	btfsc	status,2,c
  7786  01ABC8  D003               	goto	u9710
  7787  01ABCA  6A0C               	clrf	(btemp+11)^0,c
  7788  01ABCC  2A0C               	incf	(btemp+11)^0,f,c
  7789  01ABCE  D001               	goto	u9728
  7790  01ABD0                     u9710:
  7791  01ABD0  6A0C               	clrf	(btemp+11)^0,c
  7792  01ABD2                     u9728:
  7793                           
  7794                           ;stkvar	_h @ sp[(0)+-1]
  7795  01ABD2  0EFF               	movlw	-1
  7796  01ABD4  50E3               	movf	plusw1,w,c
  7797  01ABD6  6ED9               	movwf	fsr2l,c
  7798  01ABD8  6ADA               	clrf	fsr2h,c
  7799  01ABDA  0E03               	movlw	3
  7800  01ABDC  26D9               	addwf	fsr2l,f,c
  7801  01ABDE  0060  F033  FFDF   	movff	btemp+11,indf2
  7802  01ABE4                     l10572:
  7803                           
  7804                           ;hid.c: 10:  if (get_switch(SENTER)) {
  7805  01ABE4  0E03               	movlw	3
  7806  01ABE6  6EE6               	movwf	postinc1,c
  7807  01ABE8  EC50  F0DD         	call	_get_switch	;wreg free
  7808  01ABEC  5001               	movf	btemp^0,w,c
  7809  01ABEE  B4D8               	btfsc	status,2,c
  7810  01ABF0  D01C               	goto	l1958
  7811                           
  7812                           ;hid.c: 11:   h->wait_enter = 0;
  7813                           ;stkvar	_h @ sp[(0)+-1]
  7814  01ABF2  0EFF               	movlw	-1
  7815  01ABF4  50E3               	movf	plusw1,w,c
  7816  01ABF6  6ED9               	movwf	fsr2l,c
  7817  01ABF8  6ADA               	clrf	fsr2h,c
  7818  01ABFA  0E04               	movlw	4
  7819  01ABFC  26D9               	addwf	fsr2l,f,c
  7820  01ABFE  0E00               	movlw	0
  7821  01AC00  6EDF               	movwf	indf2,c
  7822                           
  7823                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  7824  01AC02  0E03               	movlw	3
  7825  01AC04  6EE6               	movwf	postinc1,c
  7826  01AC06  EC50  F0DD         	call	_get_switch	;wreg free
  7827  01AC0A  5001               	movf	btemp^0,w,c
  7828  01AC0C  B4D8               	btfsc	status,2,c
  7829  01AC0E  D003               	goto	u9740
  7830  01AC10  6A0C               	clrf	(btemp+11)^0,c
  7831  01AC12  2A0C               	incf	(btemp+11)^0,f,c
  7832  01AC14  D001               	goto	u9758
  7833  01AC16                     u9740:
  7834  01AC16  6A0C               	clrf	(btemp+11)^0,c
  7835  01AC18                     u9758:
  7836                           
  7837                           ;stkvar	_h @ sp[(0)+-1]
  7838  01AC18  0EFF               	movlw	-1
  7839  01AC1A  50E3               	movf	plusw1,w,c
  7840  01AC1C  6ED9               	movwf	fsr2l,c
  7841  01AC1E  6ADA               	clrf	fsr2h,c
  7842  01AC20  0E05               	movlw	5
  7843  01AC22  26D9               	addwf	fsr2l,f,c
  7844  01AC24  0060  F033  FFDF   	movff	btemp+11,indf2
  7845  01AC2A                     l1958:
  7846                           
  7847                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  7848  01AC2A  52E5               	movf	postdec1,f,c
  7849  01AC2C  0012               	return		;funcret
  7850  01AC2E                     __end_of_hid_input:
  7851                           	opt callstack 0
  7852                           
  7853 ;; *************** function _get_switch *****************
  7854 ;; Defined at:
  7855 ;;		line 18 in file "dio.c"
  7856 ;; Parameters:    Size  Location     Type
  7857 ;;  i               1  [STACK] const unsigned char 
  7858 ;; Auto vars:     Size  Location     Type
  7859 ;;		None
  7860 ;; Return value:  Size  Location     Type
  7861 ;;                  1  [STACK] enum E17021
  7862 ;; Registers used:
  7863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  7864 ;; Tracked objects:
  7865 ;;		On entry : 0/39
  7866 ;;		On exit  : 0/0
  7867 ;;		Unchanged: 0/0
  7868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7873 ;;Total ram usage:        0 bytes
  7874 ;; Hardware stack levels used:    1
  7875 ;; Hardware stack levels required when called:   15
  7876 ;; This function calls:
  7877 ;;		Nothing
  7878 ;; This function is called by:
  7879 ;;		_main
  7880 ;;		_hid_input
  7881 ;; This function uses a reentrant model
  7882 ;;
  7883                           
  7884                           	psect	text16
  7885  01BAA0                     __ptext16:
  7886                           	opt callstack 0
  7887  01BAA0                     _get_switch:
  7888                           	opt callstack 13
  7889                           
  7890                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  7891                           ;stkvar	_i @ sp[(0)+-1]
  7892                           
  7893                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7894                           ;incstack = 0
  7895  01BAA0  0EFF               	movlw	-1
  7896  01BAA2  006F FF8C  F001    	movff	plusw1,btemp
  7897  01BAA8  0E03               	movlw	3
  7898  01BAAA  6401               	cpfsgt	btemp^0,c
  7899  01BAAC  D002               	goto	l9924
  7900                           
  7901                           ;dio.c: 21:   return SW_OFF;
  7902  01BAAE  0E00               	movlw	0
  7903  01BAB0  D00A               	goto	L4
  7904  01BAB2                     l9924:
  7905                           
  7906                           ;dio.c: 23:  return S.button[i].sw;
  7907                           ;stkvar	_i @ sp[(0)+-1]
  7908  01BAB2  0EFF               	movlw	-1
  7909  01BAB4  50E3               	movf	plusw1,w,c
  7910  01BAB6  0D05               	mullw	5
  7911  01BAB8  0E54               	movlw	low _S
  7912  01BABA  24F3               	addwf	243,w,c
  7913  01BABC  6ED9               	movwf	fsr2l,c
  7914  01BABE  0E02               	movlw	high _S
  7915  01BAC0  20F4               	addwfc	prodh,w,c
  7916  01BAC2  6EDA               	movwf	fsr2h,c
  7917  01BAC4  50DF               	movf	indf2,w,c
  7918  01BAC6                     L4:
  7919  01BAC6  6E01               	movwf	btemp^0,c
  7920                           
  7921                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7922  01BAC8  52E5               	movf	postdec1,f,c
  7923  01BACA  0012               	return		;funcret
  7924  01BACC                     __end_of_get_switch:
  7925                           	opt callstack 0
  7926                           
  7927 ;; *************** function _esr_check *****************
  7928 ;; Defined at:
  7929 ;;		line 193 in file "bsoc.c"
  7930 ;; Parameters:    Size  Location     Type
  7931 ;;  fsm             1  [STACK] const unsigned char 
  7932 ;; Auto vars:     Size  Location     Type
  7933 ;;		None
  7934 ;; Return value:  Size  Location     Type
  7935 ;;                  4  [STACK] float 
  7936 ;; Registers used:
  7937 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7938 ;; Tracked objects:
  7939 ;;		On entry : 0/0
  7940 ;;		On exit  : 0/0
  7941 ;;		Unchanged: 0/0
  7942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7947 ;;Total ram usage:        0 bytes
  7948 ;; Hardware stack levels used:    1
  7949 ;; Hardware stack levels required when called:   18
  7950 ;; This function calls:
  7951 ;;		_StartTimer
  7952 ;;		_TimerDone
  7953 ;;		___fldiv
  7954 ;;		___flsub
  7955 ;;		_conv_raw_result
  7956 ;;		_fabsf
  7957 ;;		_set_load_relay_one
  7958 ;;		_set_load_relay_two
  7959 ;;		_update_adc_result
  7960 ;; This function is called by:
  7961 ;;		_main
  7962 ;; This function uses a reentrant model
  7963 ;;
  7964                           
  7965                           	psect	text17
  7966  017140                     __ptext17:
  7967                           	opt callstack 0
  7968  017140                     _esr_check:
  7969                           	opt callstack 12
  7970                           
  7971                           ;bsoc.c: 193: float esr_check(const uint8_t fsm);bsoc.c: 194: {;bsoc.c: 195:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 197:  if (fsm) {
  7972                           ;stkvar	_fsm @ sp[(0)+-1]
  7973                           
  7974                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7975                           ;incstack = 0
  7976  017140  0EFF               	movlw	-1
  7977  017142  50E3               	movf	plusw1,w,c
  7978  017144  B4D8               	btfsc	status,2,c
  7979  017146  D146               	goto	l10986
  7980                           
  7981                           ;bsoc.c: 198:   esr_state = 0;
  7982  017148  6A40               	clrf	esr_check@esr_state^0,c
  7983                           
  7984                           ;bsoc.c: 199:   return -10.0;
  7985  01714A  0E00               	movlw	0
  7986  01714C  6E01               	movwf	btemp^0,c
  7987  01714E  0E00               	movlw	0
  7988  017150  6E02               	movwf	(btemp+1)^0,c
  7989  017152  0E20               	movlw	32
  7990  017154  6E03               	movwf	(btemp+2)^0,c
  7991  017156  0EC1               	movlw	193
  7992  017158  D158               	goto	L5
  7993  01715A                     l10918:
  7994                           
  7995                           ;bsoc.c: 204:   StartTimer(TMR_ESR, 10000);
  7996  01715A  0E10               	movlw	16
  7997  01715C  6EE6               	movwf	postinc1,c
  7998  01715E  0E27               	movlw	39
  7999  017160  6EE6               	movwf	postinc1,c
  8000  017162  0E0C               	movlw	12
  8001  017164  6EE6               	movwf	postinc1,c
  8002  017166  EC95  F0DB         	call	_StartTimer	;wreg free
  8003  01716A                     l10920:
  8004                           
  8005                           ;bsoc.c: 205:   esr_state++;
  8006  01716A  2A40               	incf	esr_check@esr_state^0,f,c
  8007                           
  8008                           ;bsoc.c: 206:   break;
  8009  01716C  D147               	goto	l10988
  8010  01716E                     l10922:
  8011                           
  8012                           ;bsoc.c: 211:   set_load_relay_one(0);
  8013  01716E  0E00               	movlw	0
  8014  017170  6EE6               	movwf	postinc1,c
  8015  017172  EC5B  F0E0         	call	_set_load_relay_one	;wreg free
  8016                           
  8017                           ;bsoc.c: 212:   set_load_relay_two(0);
  8018  017176  0E00               	movlw	0
  8019  017178  6EE6               	movwf	postinc1,c
  8020  01717A  EC53  F0E0         	call	_set_load_relay_two	;wreg free
  8021                           
  8022                           ;bsoc.c: 213:   if (TimerDone(TMR_ESR)) {
  8023  01717E  0E0C               	movlw	12
  8024  017180  6EE6               	movwf	postinc1,c
  8025  017182  ECBB  F0DD         	call	_TimerDone	;wreg free
  8026  017186  5001               	movf	btemp^0,w,c
  8027  017188  B4D8               	btfsc	status,2,c
  8028  01718A  D009               	goto	l10928
  8029                           
  8030                           ;bsoc.c: 214:    StartTimer(TMR_ESR, 10000);
  8031  01718C  0E10               	movlw	16
  8032  01718E  6EE6               	movwf	postinc1,c
  8033  017190  0E27               	movlw	39
  8034  017192  6EE6               	movwf	postinc1,c
  8035  017194  0E0C               	movlw	12
  8036  017196  6EE6               	movwf	postinc1,c
  8037  017198  EC95  F0DB         	call	_StartTimer	;wreg free
  8038                           
  8039                           ;bsoc.c: 215:   } else {
  8040  01719C  D006               	goto	l10932
  8041  01719E                     l10928:
  8042                           
  8043                           ;bsoc.c: 216:    return -2.0;
  8044  01719E  0E00               	movlw	0
  8045  0171A0  6E01               	movwf	btemp^0,c
  8046  0171A2  0E00               	movlw	0
  8047  0171A4  6E02               	movwf	(btemp+1)^0,c
  8048  0171A6  0E00               	movlw	0
  8049  0171A8  D066               	goto	L7
  8050  0171AA                     l10932:
  8051                           
  8052                           ;bsoc.c: 221:   update_adc_result();
  8053  0171AA  EC35  F0DC         	call	_update_adc_result	;wreg free
  8054                           
  8055                           ;bsoc.c: 222:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  8056  0171AE  0E00               	movlw	0
  8057  0171B0  6EE6               	movwf	postinc1,c
  8058  0171B2  0E04               	movlw	4
  8059  0171B4  6EE6               	movwf	postinc1,c
  8060  0171B6  EC71  F0A9         	call	_conv_raw_result	;wreg free
  8061  0171BA  0060  F004  F815   	movff	btemp,_C+278	;volatile
  8062  0171C0  0060  F008  F816   	movff	btemp+1,_C+279	;volatile
  8063  0171C6  0060  F00C  F817   	movff	btemp+2,_C+280	;volatile
  8064  0171CC  0060  F010  F818   	movff	btemp+3,_C+281	;volatile
  8065  0171D2  D7CB               	goto	l10920
  8066  0171D4                     l10938:
  8067                           
  8068                           ;bsoc.c: 226:   set_load_relay_one(1);
  8069  0171D4  0E01               	movlw	1
  8070  0171D6  6EE6               	movwf	postinc1,c
  8071  0171D8  EC5B  F0E0         	call	_set_load_relay_one	;wreg free
  8072                           
  8073                           ;bsoc.c: 227:   if (TimerDone(TMR_ESR)) {
  8074  0171DC  0E0C               	movlw	12
  8075  0171DE  6EE6               	movwf	postinc1,c
  8076  0171E0  ECBB  F0DD         	call	_TimerDone	;wreg free
  8077  0171E4  5001               	movf	btemp^0,w,c
  8078  0171E6  B4D8               	btfsc	status,2,c
  8079  0171E8  D009               	goto	l10944
  8080                           
  8081                           ;bsoc.c: 228:    StartTimer(TMR_ESR, 10000);
  8082  0171EA  0E10               	movlw	16
  8083  0171EC  6EE6               	movwf	postinc1,c
  8084  0171EE  0E27               	movlw	39
  8085  0171F0  6EE6               	movwf	postinc1,c
  8086  0171F2  0E0C               	movlw	12
  8087  0171F4  6EE6               	movwf	postinc1,c
  8088  0171F6  EC95  F0DB         	call	_StartTimer	;wreg free
  8089                           
  8090                           ;bsoc.c: 229:   } else {
  8091  0171FA  D006               	goto	l10948
  8092  0171FC                     l10944:
  8093                           
  8094                           ;bsoc.c: 230:    return -3.0;
  8095  0171FC  0E00               	movlw	0
  8096  0171FE  6E01               	movwf	btemp^0,c
  8097  017200  0E00               	movlw	0
  8098  017202  6E02               	movwf	(btemp+1)^0,c
  8099  017204  0E40               	movlw	64
  8100  017206  D037               	goto	L7
  8101  017208                     l10948:
  8102                           
  8103                           ;bsoc.c: 233:   update_adc_result();
  8104  017208  EC35  F0DC         	call	_update_adc_result	;wreg free
  8105                           
  8106                           ;bsoc.c: 234:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  8107  01720C  0E00               	movlw	0
  8108  01720E  6EE6               	movwf	postinc1,c
  8109  017210  0E04               	movlw	4
  8110  017212  6EE6               	movwf	postinc1,c
  8111  017214  EC71  F0A9         	call	_conv_raw_result	;wreg free
  8112  017218  0060  F004  F819   	movff	btemp,_C+282	;volatile
  8113  01721E  0060  F008  F81A   	movff	btemp+1,_C+283	;volatile
  8114  017224  0060  F00C  F81B   	movff	btemp+2,_C+284	;volatile
  8115  01722A  0060  F010  F81C   	movff	btemp+3,_C+285	;volatile
  8116                           
  8117                           ;bsoc.c: 235:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  8118  017230  0E00               	movlw	0
  8119  017232  6EE6               	movwf	postinc1,c
  8120  017234  0E00               	movlw	0
  8121  017236  6EE6               	movwf	postinc1,c
  8122  017238  EC71  F0A9         	call	_conv_raw_result	;wreg free
  8123  01723C  0060  F004  F80D   	movff	btemp,_C+270	;volatile
  8124  017242  0060  F008  F80E   	movff	btemp+1,_C+271	;volatile
  8125  017248  0060  F00C  F80F   	movff	btemp+2,_C+272	;volatile
  8126  01724E  0060  F010  F810   	movff	btemp+3,_C+273	;volatile
  8127  017254  D78A               	goto	l10920
  8128  017256                     l10956:
  8129                           
  8130                           ;bsoc.c: 239:   set_load_relay_two(1);
  8131  017256  0E01               	movlw	1
  8132  017258  6EE6               	movwf	postinc1,c
  8133  01725A  EC53  F0E0         	call	_set_load_relay_two	;wreg free
  8134                           
  8135                           ;bsoc.c: 240:   if (!TimerDone(TMR_ESR))
  8136  01725E  0E0C               	movlw	12
  8137  017260  6EE6               	movwf	postinc1,c
  8138  017262  ECBB  F0DD         	call	_TimerDone	;wreg free
  8139  017266  5001               	movf	btemp^0,w,c
  8140  017268  A4D8               	btfss	status,2,c
  8141  01726A  D008               	goto	l10964
  8142                           
  8143                           ;bsoc.c: 241:    return -4.0;
  8144  01726C  0E00               	movlw	0
  8145  01726E  6E01               	movwf	btemp^0,c
  8146  017270  0E00               	movlw	0
  8147  017272  6E02               	movwf	(btemp+1)^0,c
  8148  017274  0E80               	movlw	128
  8149  017276                     L7:
  8150  017276  6E03               	movwf	(btemp+2)^0,c
  8151  017278  0EC0               	movlw	192
  8152  01727A  D0C7               	goto	L5
  8153  01727C                     l10964:
  8154                           
  8155                           ;bsoc.c: 243:   update_adc_result();
  8156  01727C  EC35  F0DC         	call	_update_adc_result	;wreg free
  8157                           
  8158                           ;bsoc.c: 244:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  8159  017280  0E00               	movlw	0
  8160  017282  6EE6               	movwf	postinc1,c
  8161  017284  0E04               	movlw	4
  8162  017286  6EE6               	movwf	postinc1,c
  8163  017288  EC71  F0A9         	call	_conv_raw_result	;wreg free
  8164  01728C  0060  F004  F81D   	movff	btemp,_C+286	;volatile
  8165  017292  0060  F008  F81E   	movff	btemp+1,_C+287	;volatile
  8166  017298  0060  F00C  F81F   	movff	btemp+2,_C+288	;volatile
  8167  01729E  0060  F010  F820   	movff	btemp+3,_C+289	;volatile
  8168                           
  8169                           ;bsoc.c: 245:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  8170  0172A4  0E00               	movlw	0
  8171  0172A6  6EE6               	movwf	postinc1,c
  8172  0172A8  0E00               	movlw	0
  8173  0172AA  6EE6               	movwf	postinc1,c
  8174  0172AC  EC71  F0A9         	call	_conv_raw_result	;wreg free
  8175  0172B0  0060  F004  F811   	movff	btemp,_C+274	;volatile
  8176  0172B6  0060  F008  F812   	movff	btemp+1,_C+275	;volatile
  8177  0172BC  0060  F00C  F813   	movff	btemp+2,_C+276	;volatile
  8178  0172C2  0060  F010  F814   	movff	btemp+3,_C+277	;volatile
  8179                           
  8180                           ;bsoc.c: 247:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  8181  0172C8  EE22  F011         	lfsr	2,_C+274	;volatile
  8182  0172CC  006F FF7B FFE6     	movff	postinc2,postinc1
  8183  0172D2  006F FF7B FFE6     	movff	postinc2,postinc1
  8184  0172D8  006F FF7B FFE6     	movff	postinc2,postinc1
  8185  0172DE  006F FF7B FFE6     	movff	postinc2,postinc1
  8186  0172E4  EE22  F00D         	lfsr	2,_C+270	;volatile
  8187  0172E8  006F FF7B FFE6     	movff	postinc2,postinc1
  8188  0172EE  006F FF7B FFE6     	movff	postinc2,postinc1
  8189  0172F4  006F FF7B FFE6     	movff	postinc2,postinc1
  8190  0172FA  006F FF7B FFE6     	movff	postinc2,postinc1
  8191  017300  ECEF  F0DA         	call	___flsub	;wreg free
  8192  017304  0060  F007  FFE6   	movff	btemp,postinc1
  8193  01730A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8194  017310  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8195  017316  0060  F013  FFE6   	movff	btemp+3,postinc1
  8196  01731C  EE22  F01D         	lfsr	2,_C+286	;volatile
  8197  017320  006F FF7B FFE6     	movff	postinc2,postinc1
  8198  017326  006F FF7B FFE6     	movff	postinc2,postinc1
  8199  01732C  006F FF7B FFE6     	movff	postinc2,postinc1
  8200  017332  006F FF7B FFE6     	movff	postinc2,postinc1
  8201  017338  EE22  F019         	lfsr	2,_C+282	;volatile
  8202  01733C  006F FF7B FFE6     	movff	postinc2,postinc1
  8203  017342  006F FF7B FFE6     	movff	postinc2,postinc1
  8204  017348  006F FF7B FFE6     	movff	postinc2,postinc1
  8205  01734E  006F FF7B FFE6     	movff	postinc2,postinc1
  8206  017354  ECEF  F0DA         	call	___flsub	;wreg free
  8207  017358  0060  F007  FFE6   	movff	btemp,postinc1
  8208  01735E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8209  017364  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8210  01736A  0060  F013  FFE6   	movff	btemp+3,postinc1
  8211  017370  ECB4  F0A6         	call	___fldiv	;wreg free
  8212  017374  0060  F007  FFE6   	movff	btemp,postinc1
  8213  01737A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8214  017380  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8215  017386  0060  F013  FFE6   	movff	btemp+3,postinc1
  8216  01738C  ECF7  F0D2         	call	_fabsf	;wreg free
  8217  017390  0060  F004  F787   	movff	btemp,_C+136	;volatile
  8218  017396  0060  F008  F788   	movff	btemp+1,_C+137	;volatile
  8219  01739C  0060  F00C  F789   	movff	btemp+2,_C+138	;volatile
  8220  0173A2  0060  F010  F78A   	movff	btemp+3,_C+139	;volatile
  8221                           
  8222                           ;bsoc.c: 248:   set_load_relay_one(0);
  8223  0173A8  0E00               	movlw	0
  8224  0173AA  6EE6               	movwf	postinc1,c
  8225  0173AC  EC5B  F0E0         	call	_set_load_relay_one	;wreg free
  8226                           
  8227                           ;bsoc.c: 249:   set_load_relay_two(0);
  8228  0173B0  0E00               	movlw	0
  8229  0173B2  6EE6               	movwf	postinc1,c
  8230  0173B4  EC53  F0E0         	call	_set_load_relay_two	;wreg free
  8231                           
  8232                           ;bsoc.c: 250:   esr_state = 0;
  8233  0173B8  6A40               	clrf	esr_check@esr_state^0,c
  8234                           
  8235                           ;bsoc.c: 251:   return C.esr;
  8236  0173BA  0061  FE1C  F001   	movff	_C+136,btemp	;volatile
  8237  0173C0  0061  FE20  F002   	movff	_C+137,btemp+1	;volatile
  8238  0173C6  0061  FE24  F003   	movff	_C+138,btemp+2	;volatile
  8239  0173CC  0061  FE28  F004   	movff	_C+139,btemp+3	;volatile
  8240  0173D2  D01C               	goto	l2079
  8241  0173D4                     l10986:
  8242  0173D4  5040               	movf	esr_check@esr_state^0,w,c
  8243  0173D6  6E0B               	movwf	(btemp+10)^0,c
  8244  0173D8  6A0C               	clrf	(btemp+11)^0,c
  8245                           
  8246                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8247                           ; Switch size 1, requested type "simple"
  8248                           ; Number of cases is 1, Range of values is 0 to 0
  8249                           ; switch strategies available:
  8250                           ; Name         Instructions Cycles
  8251                           ; simple_byte            4     3 (average)
  8252                           ;	Chosen strategy is simple_byte
  8253  0173DA  500C               	movf	(btemp+11)^0,w,c
  8254  0173DC  0A00               	xorlw	0	; case 0
  8255  0173DE  A4D8               	btfss	status,2,c
  8256  0173E0  D00D               	goto	l10988
  8257                           
  8258                           ; Switch size 1, requested type "simple"
  8259                           ; Number of cases is 4, Range of values is 0 to 3
  8260                           ; switch strategies available:
  8261                           ; Name         Instructions Cycles
  8262                           ; simple_byte           13     7 (average)
  8263                           ;	Chosen strategy is simple_byte
  8264  0173E2  500B               	movf	(btemp+10)^0,w,c
  8265  0173E4  0A00               	xorlw	0	; case 0
  8266  0173E6  B4D8               	btfsc	status,2,c
  8267  0173E8  D6B8               	goto	l10918
  8268  0173EA  0A01               	xorlw	1	; case 1
  8269  0173EC  B4D8               	btfsc	status,2,c
  8270  0173EE  D6BF               	goto	l10922
  8271  0173F0  0A03               	xorlw	3	; case 2
  8272  0173F2  B4D8               	btfsc	status,2,c
  8273  0173F4  D6EF               	goto	l10938
  8274  0173F6  0A01               	xorlw	1	; case 3
  8275  0173F8  B4D8               	btfsc	status,2,c
  8276  0173FA  D72D               	goto	l10956
  8277  0173FC                     l10988:
  8278                           
  8279                           ;bsoc.c: 256:  return -1.0;
  8280  0173FC  0E00               	movlw	0
  8281  0173FE  6E01               	movwf	btemp^0,c
  8282  017400  0E00               	movlw	0
  8283  017402  6E02               	movwf	(btemp+1)^0,c
  8284  017404  0E80               	movlw	128
  8285  017406  6E03               	movwf	(btemp+2)^0,c
  8286  017408  0EBF               	movlw	191
  8287  01740A                     L5:
  8288  01740A  6E04               	movwf	(btemp+3)^0,c
  8289  01740C                     l2079:
  8290                           
  8291                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  8292  01740C  52E5               	movf	postdec1,f,c
  8293  01740E  0012               	return		;funcret
  8294  017410                     __end_of_esr_check:
  8295                           	opt callstack 0
  8296                           
  8297 ;; *************** function _update_adc_result *****************
  8298 ;; Defined at:
  8299 ;;		line 74 in file "daq.c"
  8300 ;; Parameters:    Size  Location     Type
  8301 ;;		None
  8302 ;; Auto vars:     Size  Location     Type
  8303 ;;		None
  8304 ;; Return value:  Size  Location     Type
  8305 ;;                  1  [STACK] _Bool 
  8306 ;; Registers used:
  8307 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  8308 ;; Tracked objects:
  8309 ;;		On entry : 0/0
  8310 ;;		On exit  : 0/0
  8311 ;;		Unchanged: 0/0
  8312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8317 ;;Total ram usage:        0 bytes
  8318 ;; Hardware stack levels used:    1
  8319 ;; Hardware stack levels required when called:   17
  8320 ;; This function calls:
  8321 ;;		_StartTimer
  8322 ;;		_TimerDone
  8323 ;;		_check_adc_scan
  8324 ;;		_clear_adc_scan
  8325 ;;		_start_adc_scan
  8326 ;; This function is called by:
  8327 ;;		_esr_check
  8328 ;; This function uses a reentrant model
  8329 ;;
  8330                           
  8331                           	psect	text18
  8332  01B86A                     __ptext18:
  8333                           	opt callstack 0
  8334  01B86A                     _update_adc_result:
  8335                           	opt callstack 12
  8336                           
  8337                           ;daq.c: 76:  if (R.done) {
  8338                           
  8339                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8340                           ;incstack = 0
  8341  01B86A  0101               	movlb	1	; () banked
  8342  01B86C  512F               	movf	(_R+47)& (0+255),w,b	;volatile
  8343  01B86E  B4D8               	btfsc	status,2,c
  8344  01B870  0012               	return	
  8345                           
  8346                           ; BSR set to: 1
  8347                           ;daq.c: 77:   clear_adc_scan();
  8348  01B872  ECCF  F0E0         	call	_clear_adc_scan	;wreg free
  8349                           
  8350                           ; BSR set to: 1
  8351                           ;daq.c: 78:   start_adc_scan();
  8352  01B876  EC2E  F0D8         	call	_start_adc_scan	;wreg free
  8353                           
  8354                           ;daq.c: 79:   StartTimer(TMR_ADC, 200);
  8355  01B87A  0EC8               	movlw	200
  8356  01B87C  6EE6               	movwf	postinc1,c
  8357  01B87E  0E00               	movlw	0
  8358  01B880  6EE6               	movwf	postinc1,c
  8359  01B882  0E01               	movlw	1
  8360  01B884  6EE6               	movwf	postinc1,c
  8361  01B886  EC95  F0DB         	call	_StartTimer	;wreg free
  8362  01B88A                     l10504:
  8363  01B88A  0E01               	movlw	1
  8364  01B88C  6EE6               	movwf	postinc1,c
  8365  01B88E  ECBB  F0DD         	call	_TimerDone	;wreg free
  8366  01B892  5001               	movf	btemp^0,w,c
  8367  01B894  A4D8               	btfss	status,2,c
  8368  01B896  0012               	return	
  8369  01B898  ECBF  F0E0         	call	_check_adc_scan	;wreg free
  8370  01B89C  5001               	movf	btemp^0,w,c
  8371  01B89E  A4D8               	btfss	status,2,c
  8372  01B8A0  0012               	return	
  8373  01B8A2  D7F3               	goto	l10504
  8374  01B8A4                     __end_of_update_adc_result:
  8375                           	opt callstack 0
  8376                           
  8377 ;; *************** function _start_adc_scan *****************
  8378 ;; Defined at:
  8379 ;;		line 35 in file "daq.c"
  8380 ;; Parameters:    Size  Location     Type
  8381 ;;		None
  8382 ;; Auto vars:     Size  Location     Type
  8383 ;;		None
  8384 ;; Return value:  Size  Location     Type
  8385 ;;                  1  [STACK] _Bool 
  8386 ;; Registers used:
  8387 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  8388 ;; Tracked objects:
  8389 ;;		On entry : 0/0
  8390 ;;		On exit  : 0/0
  8391 ;;		Unchanged: 0/0
  8392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8397 ;;Total ram usage:        0 bytes
  8398 ;; Hardware stack levels used:    1
  8399 ;; Hardware stack levels required when called:   16
  8400 ;; This function calls:
  8401 ;;		_ADCC_DischargeSampleCapacitor
  8402 ;;		_ADCC_SetADIInterruptHandler
  8403 ;;		_ADCC_SetADTIInterruptHandler
  8404 ;;		_ADCC_StartConversion
  8405 ;; This function is called by:
  8406 ;;		_main
  8407 ;;		_update_adc_result
  8408 ;; This function uses a reentrant model
  8409 ;;
  8410                           
  8411                           	psect	text19
  8412  01B05C                     __ptext19:
  8413                           	opt callstack 0
  8414  01B05C                     _start_adc_scan:
  8415                           	opt callstack 14
  8416                           
  8417                           ;daq.c: 37:  if (R.done)
  8418                           
  8419                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8420                           ;incstack = 0
  8421  01B05C  0101               	movlb	1	; () banked
  8422  01B05E  512F               	movf	(_R+47)& (0+255),w,b	;volatile
  8423  01B060  A4D8               	btfss	status,2,c
  8424  01B062  0012               	return	
  8425                           
  8426                           ; BSR set to: 1
  8427                           ;daq.c: 40:  R.scan_index = 0;
  8428  01B064  6B2C               	clrf	(_R+44)& (0+255),b	;volatile
  8429                           
  8430                           ; BSR set to: 1
  8431                           ;daq.c: 41:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  8432  01B066  013A               	movlb	58	; () banked
  8433  01B068  5140               	movf	64,w,b	;volatile
  8434  01B06A  006E F940  F001    	movff	14928,btemp	;volatile
  8435  01B070  6A02               	clrf	(btemp+1)^0,c
  8436  01B072  0060  F004  F002   	movff	btemp,btemp+1
  8437  01B078  6A01               	clrf	btemp^0,c
  8438  01B07A  2601               	addwf	btemp^0,f,c
  8439  01B07C  0E00               	movlw	0
  8440  01B07E  2202               	addwfc	(btemp+1)^0,f,c
  8441  01B080  0E77               	movlw	119
  8442  01B082  1401               	andwf	btemp^0,w,c
  8443  01B084  0101               	movlb	1	; () banked
  8444  01B086  6F2D               	movwf	(_R+45)& (0+255),b	;volatile
  8445  01B088  0E3C               	movlw	60
  8446  01B08A  1402               	andwf	(btemp+1)^0,w,c
  8447  01B08C  6F2E               	movwf	(_R+46)& (0+255),b	;volatile
  8448                           
  8449                           ; BSR set to: 1
  8450                           ;daq.c: 42:  ADCC_SetADIInterruptHandler(adc_int_handler);
  8451  01B08E  0EC6               	movlw	low _adc_int_handler
  8452  01B090  6EE6               	movwf	postinc1,c
  8453  01B092  0EC1               	movlw	high _adc_int_handler
  8454  01B094  6EE6               	movwf	postinc1,c
  8455  01B096  0E01               	movlw	low (_adc_int_handler shr (0+16))
  8456  01B098  6EE6               	movwf	postinc1,c
  8457  01B09A  EC83  F0DE         	call	_ADCC_SetADIInterruptHandler	;wreg free
  8458                           
  8459                           ;daq.c: 43:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  8460  01B09E  0EBE               	movlw	low _adc_int_t_handler
  8461  01B0A0  6EE6               	movwf	postinc1,c
  8462  01B0A2  0EAD               	movlw	high _adc_int_t_handler
  8463  01B0A4  6EE6               	movwf	postinc1,c
  8464  01B0A6  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  8465  01B0A8  6EE6               	movwf	postinc1,c
  8466  01B0AA  EC6F  F0DE         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  8467                           
  8468                           ;daq.c: 44:  ADCC_DischargeSampleCapacitor();
  8469  01B0AE  ECBB  F0E0         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  8470                           
  8471                           ; BSR set to: 62
  8472                           ;daq.c: 45:  ADCC_StartConversion(R.scan_index & 0xf);
  8473  01B0B2  0101               	movlb	1	; () banked
  8474  01B0B4  512C               	movf	(_R+44)& (0+255),w,b	;volatile
  8475  01B0B6  0B0F               	andlw	15
  8476  01B0B8  6EE6               	movwf	postinc1,c
  8477  01B0BA  EC4A  F0E0         	call	_ADCC_StartConversion	;wreg free
  8478                           
  8479                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8480  01B0BE  0012               	return		;funcret
  8481  01B0C0                     __end_of_start_adc_scan:
  8482                           	opt callstack 0
  8483                           
  8484 ;; *************** function _ADCC_StartConversion *****************
  8485 ;; Defined at:
  8486 ;;		line 128 in file "mcc_generated_files/adcc.c"
  8487 ;; Parameters:    Size  Location     Type
  8488 ;;  channel         1  [STACK] enum E16136
  8489 ;; Auto vars:     Size  Location     Type
  8490 ;;		None
  8491 ;; Return value:  Size  Location     Type
  8492 ;;                  1  [STACK] void 
  8493 ;; Registers used:
  8494 ;;		fsr1l, fsr1h
  8495 ;; Tracked objects:
  8496 ;;		On entry : 3F/1
  8497 ;;		On exit  : 3F/3E
  8498 ;;		Unchanged: 0/0
  8499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8504 ;;Total ram usage:        0 bytes
  8505 ;; Hardware stack levels used:    1
  8506 ;; Hardware stack levels required when called:   15
  8507 ;; This function calls:
  8508 ;;		Nothing
  8509 ;; This function is called by:
  8510 ;;		_start_adc_scan
  8511 ;;		_adc_int_t_handler
  8512 ;; This function uses a reentrant model
  8513 ;;
  8514                           
  8515                           	psect	text20
  8516  01C094                     __ptext20:
  8517                           	opt callstack 0
  8518  01C094                     _ADCC_StartConversion:
  8519                           	opt callstack 0
  8520                           
  8521                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  8522                           ;stkvar	_channel @ sp[(0)+-1]
  8523                           
  8524                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8525                           ;incstack = 0
  8526 ;; hardware stack exceeded
  8527  01C094  0EFF               	movlw	-1
  8528  01C096  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  8529                           
  8530                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  8531  01C09C  013E               	movlb	62	; () banked
  8532  01C09E  8FF8               	bsf	248,7,b	;volatile
  8533                           
  8534                           ; BSR set to: 62
  8535                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  8536  01C0A0  81F8               	bsf	248,0,b	;volatile
  8537                           
  8538                           ; BSR set to: 62
  8539                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  8540  01C0A2  52E5               	movf	postdec1,f,c
  8541  01C0A4  0012               	return		;funcret
  8542  01C0A6                     __end_of_ADCC_StartConversion:
  8543                           	opt callstack 0
  8544                           
  8545 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  8546 ;; Defined at:
  8547 ;;		line 189 in file "mcc_generated_files/adcc.c"
  8548 ;; Parameters:    Size  Location     Type
  8549 ;;		None
  8550 ;; Auto vars:     Size  Location     Type
  8551 ;;		None
  8552 ;; Return value:  Size  Location     Type
  8553 ;;                  1  [STACK] void 
  8554 ;; Registers used:
  8555 ;;		wreg, status,2
  8556 ;; Tracked objects:
  8557 ;;		On entry : 0/1
  8558 ;;		On exit  : 3F/3E
  8559 ;;		Unchanged: 0/0
  8560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8565 ;;Total ram usage:        0 bytes
  8566 ;; Hardware stack levels used:    1
  8567 ;; Hardware stack levels required when called:   15
  8568 ;; This function calls:
  8569 ;;		Nothing
  8570 ;; This function is called by:
  8571 ;;		_start_adc_scan
  8572 ;;		_adc_int_t_handler
  8573 ;; This function uses a reentrant model
  8574 ;;
  8575                           
  8576                           	psect	text21
  8577  01C176                     __ptext21:
  8578                           	opt callstack 0
  8579  01C176                     _ADCC_DischargeSampleCapacitor:
  8580                           	opt callstack 0
  8581                           
  8582                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  8583                           
  8584                           ; BSR set to: 62
  8585                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8586                           ;incstack = 0
  8587 ;; hardware stack exceeded
  8588  01C176  0E3B               	movlw	59
  8589  01C178  013E               	movlb	62	; () banked
  8590  01C17A  6FF1               	movwf	241,b	;volatile
  8591                           
  8592                           ; BSR set to: 62
  8593                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  8594  01C17C  0012               	return		;funcret
  8595  01C17E                     __end_of_ADCC_DischargeSampleCapacitor:
  8596                           	opt callstack 0
  8597                           
  8598 ;; *************** function _clear_adc_scan *****************
  8599 ;; Defined at:
  8600 ;;		line 66 in file "daq.c"
  8601 ;; Parameters:    Size  Location     Type
  8602 ;;		None
  8603 ;; Auto vars:     Size  Location     Type
  8604 ;;		None
  8605 ;; Return value:  Size  Location     Type
  8606 ;;                  1  [STACK] void 
  8607 ;; Registers used:
  8608 ;;		None
  8609 ;; Tracked objects:
  8610 ;;		On entry : 0/0
  8611 ;;		On exit  : 3F/1
  8612 ;;		Unchanged: 0/0
  8613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8618 ;;Total ram usage:        0 bytes
  8619 ;; Hardware stack levels used:    1
  8620 ;; Hardware stack levels required when called:   15
  8621 ;; This function calls:
  8622 ;;		Nothing
  8623 ;; This function is called by:
  8624 ;;		_main
  8625 ;;		_update_adc_result
  8626 ;; This function uses a reentrant model
  8627 ;;
  8628                           
  8629                           	psect	text22
  8630  01C19E                     __ptext22:
  8631                           	opt callstack 0
  8632  01C19E                     _clear_adc_scan:
  8633                           	opt callstack 13
  8634                           
  8635                           ;daq.c: 68:  R.done = 0;
  8636                           
  8637                           ; BSR set to: 62
  8638                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8639                           ;incstack = 0
  8640  01C19E  0101               	movlb	1	; () banked
  8641  01C1A0  6B2F               	clrf	(_R+47)& (0+255),b	;volatile
  8642                           
  8643                           ; BSR set to: 1
  8644                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8645  01C1A2  0012               	return		;funcret
  8646  01C1A4                     __end_of_clear_adc_scan:
  8647                           	opt callstack 0
  8648                           
  8649 ;; *************** function _check_adc_scan *****************
  8650 ;; Defined at:
  8651 ;;		line 58 in file "daq.c"
  8652 ;; Parameters:    Size  Location     Type
  8653 ;;		None
  8654 ;; Auto vars:     Size  Location     Type
  8655 ;;		None
  8656 ;; Return value:  Size  Location     Type
  8657 ;;                  1  [STACK] _Bool 
  8658 ;; Registers used:
  8659 ;;		btemp
  8660 ;; Tracked objects:
  8661 ;;		On entry : 0/1
  8662 ;;		On exit  : 0/0
  8663 ;;		Unchanged: 0/0
  8664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8669 ;;Total ram usage:        0 bytes
  8670 ;; Hardware stack levels used:    1
  8671 ;; Hardware stack levels required when called:   15
  8672 ;; This function calls:
  8673 ;;		Nothing
  8674 ;; This function is called by:
  8675 ;;		_main
  8676 ;;		_update_adc_result
  8677 ;; This function uses a reentrant model
  8678 ;;
  8679                           
  8680                           	psect	text23
  8681  01C17E                     __ptext23:
  8682                           	opt callstack 0
  8683  01C17E                     _check_adc_scan:
  8684                           	opt callstack 13
  8685                           
  8686                           ;daq.c: 60:  return R.done;
  8687                           
  8688                           ; BSR set to: 1
  8689                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8690                           ;incstack = 0
  8691  01C17E  0060  F4BC  F001   	movff	_R+47,btemp	;volatile
  8692                           
  8693                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8694  01C184  0012               	return		;funcret
  8695  01C186                     __end_of_check_adc_scan:
  8696                           	opt callstack 0
  8697                           
  8698 ;; *************** function _set_load_relay_two *****************
  8699 ;; Defined at:
  8700 ;;		line 130 in file "mbmc.c"
  8701 ;; Parameters:    Size  Location     Type
  8702 ;;  mode            1  [STACK] const _Bool 
  8703 ;; Auto vars:     Size  Location     Type
  8704 ;;		None
  8705 ;; Return value:  Size  Location     Type
  8706 ;;                  1  [STACK] void 
  8707 ;; Registers used:
  8708 ;;		wreg, fsr1l, fsr1h
  8709 ;; Tracked objects:
  8710 ;;		On entry : 0/0
  8711 ;;		On exit  : 0/0
  8712 ;;		Unchanged: 0/0
  8713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8718 ;;Total ram usage:        0 bytes
  8719 ;; Hardware stack levels used:    1
  8720 ;; Hardware stack levels required when called:   15
  8721 ;; This function calls:
  8722 ;;		Nothing
  8723 ;; This function is called by:
  8724 ;;		_main
  8725 ;;		_esr_check
  8726 ;; This function uses a reentrant model
  8727 ;;
  8728                           
  8729                           	psect	text24
  8730  01C0A6                     __ptext24:
  8731                           	opt callstack 0
  8732  01C0A6                     _set_load_relay_two:
  8733                           	opt callstack 15
  8734                           
  8735                           ;mbmc.c: 130: void set_load_relay_two(const _Bool mode);mbmc.c: 131: {;mbmc.c: 132:  LAT
      +                          Dbits.LATD5 = mode;
  8736                           ;stkvar	_mode @ sp[(0)+-1]
  8737                           
  8738                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8739                           ;incstack = 0
  8740  01C0A6  0EFF               	movlw	-1
  8741  01C0A8  B0E3               	btfsc	plusw1,0,c
  8742  01C0AA  D002               	bra	u9495
  8743  01C0AC  9ABD               	bcf	189,5,c	;volatile
  8744  01C0AE  D001               	bra	u9496
  8745  01C0B0                     u9495:
  8746  01C0B0  8ABD               	bsf	189,5,c	;volatile
  8747  01C0B2                     u9496:
  8748                           
  8749                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8750  01C0B2  52E5               	movf	postdec1,f,c
  8751  01C0B4  0012               	return		;funcret
  8752  01C0B6                     __end_of_set_load_relay_two:
  8753                           	opt callstack 0
  8754                           
  8755 ;; *************** function _set_load_relay_one *****************
  8756 ;; Defined at:
  8757 ;;		line 125 in file "mbmc.c"
  8758 ;; Parameters:    Size  Location     Type
  8759 ;;  mode            1  [STACK] const _Bool 
  8760 ;; Auto vars:     Size  Location     Type
  8761 ;;		None
  8762 ;; Return value:  Size  Location     Type
  8763 ;;                  1  [STACK] void 
  8764 ;; Registers used:
  8765 ;;		wreg, fsr1l, fsr1h
  8766 ;; Tracked objects:
  8767 ;;		On entry : 0/0
  8768 ;;		On exit  : 0/0
  8769 ;;		Unchanged: 0/0
  8770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8775 ;;Total ram usage:        0 bytes
  8776 ;; Hardware stack levels used:    1
  8777 ;; Hardware stack levels required when called:   15
  8778 ;; This function calls:
  8779 ;;		Nothing
  8780 ;; This function is called by:
  8781 ;;		_main
  8782 ;;		_esr_check
  8783 ;; This function uses a reentrant model
  8784 ;;
  8785                           
  8786                           	psect	text25
  8787  01C0B6                     __ptext25:
  8788                           	opt callstack 0
  8789  01C0B6                     _set_load_relay_one:
  8790                           	opt callstack 15
  8791                           
  8792                           ;mbmc.c: 125: void set_load_relay_one(const _Bool mode);mbmc.c: 126: {;mbmc.c: 127:  LAT
      +                          Dbits.LATD4 = mode;
  8793                           ;stkvar	_mode @ sp[(0)+-1]
  8794                           
  8795                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8796                           ;incstack = 0
  8797  01C0B6  0EFF               	movlw	-1
  8798  01C0B8  B0E3               	btfsc	plusw1,0,c
  8799  01C0BA  D002               	bra	u9485
  8800  01C0BC  98BD               	bcf	189,4,c	;volatile
  8801  01C0BE  D001               	bra	u9486
  8802  01C0C0                     u9485:
  8803  01C0C0  88BD               	bsf	189,4,c	;volatile
  8804  01C0C2                     u9486:
  8805                           
  8806                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8807  01C0C2  52E5               	movf	postdec1,f,c
  8808  01C0C4  0012               	return		;funcret
  8809  01C0C6                     __end_of_set_load_relay_one:
  8810                           	opt callstack 0
  8811                           
  8812 ;; *************** function _eaDogM_WriteCommand *****************
  8813 ;; Defined at:
  8814 ;;		line 385 in file "eadog.c"
  8815 ;; Parameters:    Size  Location     Type
  8816 ;;  cmd             1  [STACK] const unsigned char 
  8817 ;; Auto vars:     Size  Location     Type
  8818 ;;		None
  8819 ;; Return value:  Size  Location     Type
  8820 ;;                  1  [STACK] void 
  8821 ;; Registers used:
  8822 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8823 ;; Tracked objects:
  8824 ;;		On entry : 3F/3D
  8825 ;;		On exit  : 3F/0
  8826 ;;		Unchanged: 0/0
  8827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8832 ;;Total ram usage:        0 bytes
  8833 ;; Hardware stack levels used:    1
  8834 ;; Hardware stack levels required when called:   26
  8835 ;; This function calls:
  8836 ;;		_send_lcd_cmd_dma
  8837 ;; This function is called by:
  8838 ;;		_main
  8839 ;; This function uses a reentrant model
  8840 ;;
  8841                           
  8842                           	psect	text26
  8843  01C0F4                     __ptext26:
  8844                           	opt callstack 0
  8845  01C0F4                     _eaDogM_WriteCommand:
  8846                           	opt callstack 4
  8847                           
  8848                           ;eadog.c: 385: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 386: {;eadog.c: 387:
      +                            send_lcd_cmd_dma(cmd);
  8849                           ;stkvar	_cmd @ sp[(0)+-1]
  8850                           
  8851                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8852                           ;incstack = 0
  8853  01C0F4  0EFF               	movlw	-1
  8854  01C0F6  50E3               	movf	plusw1,w,c
  8855  01C0F8  6EE6               	movwf	postinc1,c
  8856  01C0FA  ECA3  F0DF         	call	_send_lcd_cmd_dma	;wreg free
  8857                           
  8858                           ; BSR set to: 0
  8859                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  8860  01C0FE  52E5               	movf	postdec1,f,c
  8861  01C100  0012               	return		;funcret
  8862  01C102                     __end_of_eaDogM_WriteCommand:
  8863                           	opt callstack 0
  8864                           
  8865 ;; *************** function _convert_adc_data *****************
  8866 ;; Defined at:
  8867 ;;		line 51 in file "mbmc.c"
  8868 ;; Parameters:    Size  Location     Type
  8869 ;;		None
  8870 ;; Auto vars:     Size  Location     Type
  8871 ;;  i               1  [STACK] unsigned char 
  8872 ;; Return value:  Size  Location     Type
  8873 ;;                  1  [STACK] void 
  8874 ;; Registers used:
  8875 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8876 ;; Tracked objects:
  8877 ;;		On entry : 0/1
  8878 ;;		On exit  : 0/0
  8879 ;;		Unchanged: 0/0
  8880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8885 ;;Total ram usage:        0 bytes
  8886 ;; Hardware stack levels used:    1
  8887 ;; Hardware stack levels required when called:   18
  8888 ;; This function calls:
  8889 ;;		_conv_raw_result
  8890 ;;		_lp_filter
  8891 ;; This function is called by:
  8892 ;;		_main
  8893 ;; This function uses a reentrant model
  8894 ;;
  8895                           
  8896                           	psect	text27
  8897  01A536                     __ptext27:
  8898                           	opt callstack 0
  8899  01A536                     _convert_adc_data:
  8900                           	opt callstack 0
  8901                           
  8902                           ; BSR set to: 0
  8903                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8904  01A536  52E6               	movf	postinc1,f,c
  8905                           
  8906                           ;mbmc.c: 53:  uint8_t i = 0;
  8907                           ;stkvar	_i @ sp[(-1)+0]
  8908                           
  8909                           ;incstack = 0
  8910  01A538  0EFF               	movlw	-1
  8911  01A53A  6AE3               	clrf	plusw1,c
  8912  01A53C                     l10998:
  8913                           
  8914                           ;mbmc.c: 56:   if (V.calib) {
  8915  01A53C  0101               	movlb	1	; () banked
  8916  01A53E  51DC               	movf	(_V+172)& (0+255),w,b	;volatile
  8917  01A540  B4D8               	btfsc	status,2,c
  8918  01A542  D01B               	goto	l11002
  8919                           
  8920                           ; BSR set to: 1
  8921                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  8922  01A544  0E01               	movlw	1
  8923  01A546  6EE6               	movwf	postinc1,c
  8924                           
  8925                           ;stkvar	_i @ sp[(-2)+0]
  8926  01A548  0EFE               	movlw	-2
  8927  01A54A  50E3               	movf	plusw1,w,c
  8928  01A54C  6EE6               	movwf	postinc1,c
  8929  01A54E  0E01               	movlw	1
  8930  01A550  6EE6               	movwf	postinc1,c
  8931                           
  8932                           ;stkvar	_i @ sp[(-4)+0]
  8933  01A552  0EFC               	movlw	-4
  8934  01A554  50E3               	movf	plusw1,w,c
  8935  01A556  6EE6               	movwf	postinc1,c
  8936  01A558  EC71  F0A9         	call	_conv_raw_result	;wreg free
  8937  01A55C  0060  F007  FFE6   	movff	btemp,postinc1
  8938  01A562  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8939  01A568  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8940  01A56E  0060  F013  FFE6   	movff	btemp+3,postinc1
  8941  01A574  EC3F  F0C3         	call	_lp_filter	;wreg free
  8942  01A578  D01A               	goto	L8
  8943  01A57A                     l11002:
  8944                           
  8945                           ; BSR set to: 1
  8946                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  8947  01A57A  0E00               	movlw	0
  8948  01A57C  6EE6               	movwf	postinc1,c
  8949                           
  8950                           ;stkvar	_i @ sp[(-2)+0]
  8951  01A57E  0EFE               	movlw	-2
  8952  01A580  50E3               	movf	plusw1,w,c
  8953  01A582  6EE6               	movwf	postinc1,c
  8954  01A584  0E00               	movlw	0
  8955  01A586  6EE6               	movwf	postinc1,c
  8956                           
  8957                           ;stkvar	_i @ sp[(-4)+0]
  8958  01A588  0EFC               	movlw	-4
  8959  01A58A  50E3               	movf	plusw1,w,c
  8960  01A58C  6EE6               	movwf	postinc1,c
  8961  01A58E  EC71  F0A9         	call	_conv_raw_result	;wreg free
  8962  01A592  0060  F007  FFE6   	movff	btemp,postinc1
  8963  01A598  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8964  01A59E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8965  01A5A4  0060  F013  FFE6   	movff	btemp+3,postinc1
  8966  01A5AA  EC3F  F0C3         	call	_lp_filter	;wreg free
  8967  01A5AE                     L8:
  8968                           
  8969                           ;stkvar	_i @ sp[(-1)+0]
  8970  01A5AE  0EFF               	movlw	-1
  8971  01A5B0  50E3               	movf	plusw1,w,c
  8972  01A5B2  0D04               	mullw	4
  8973  01A5B4  0EFF               	movlw	low _C
  8974  01A5B6  24F3               	addwf	243,w,c
  8975  01A5B8  6ED9               	movwf	fsr2l,c
  8976  01A5BA  0E06               	movlw	high _C
  8977  01A5BC  20F4               	addwfc	prodh,w,c
  8978  01A5BE  6EDA               	movwf	fsr2h,c
  8979  01A5C0  0060  F007  FFDE   	movff	btemp,postinc2
  8980  01A5C6  0060  F00B  FFDE   	movff	btemp+1,postinc2
  8981  01A5CC  0060  F00F  FFDE   	movff	btemp+2,postinc2
  8982  01A5D2  0060  F013  FFDE   	movff	btemp+3,postinc2
  8983                           
  8984                           ;mbmc.c: 61:  } while (++i < 16);
  8985                           ;stkvar	_i @ sp[(-1)+0]
  8986  01A5D8  0EFF               	movlw	-1
  8987  01A5DA  2AE3               	incf	plusw1,f,c
  8988  01A5DC  0EFF               	movlw	-1
  8989  01A5DE  006F FF8C  F001    	movff	plusw1,btemp
  8990  01A5E4  0E0F               	movlw	15
  8991  01A5E6  6401               	cpfsgt	btemp^0,c
  8992  01A5E8  D7A9               	goto	l10998
  8993                           
  8994                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  8995  01A5EA  52E5               	movf	postdec1,f,c
  8996  01A5EC  0012               	return		;funcret
  8997  01A5EE                     __end_of_convert_adc_data:
  8998                           	opt callstack 0
  8999                           
  9000 ;; *************** function _clear_hid_pflags *****************
  9001 ;; Defined at:
  9002 ;;		line 51 in file "hid.c"
  9003 ;; Parameters:    Size  Location     Type
  9004 ;;  h               1  [STACK] PTR struct H_data
  9005 ;;		 -> H(7), 
  9006 ;; Auto vars:     Size  Location     Type
  9007 ;;		None
  9008 ;; Return value:  Size  Location     Type
  9009 ;;                  1  [STACK] void 
  9010 ;; Registers used:
  9011 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9012 ;; Tracked objects:
  9013 ;;		On entry : 3F/0
  9014 ;;		On exit  : 0/0
  9015 ;;		Unchanged: 0/0
  9016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9021 ;;Total ram usage:        0 bytes
  9022 ;; Hardware stack levels used:    1
  9023 ;; Hardware stack levels required when called:   15
  9024 ;; This function calls:
  9025 ;;		Nothing
  9026 ;; This function is called by:
  9027 ;;		_main
  9028 ;; This function uses a reentrant model
  9029 ;;
  9030                           
  9031                           	psect	text28
  9032  01BDCC                     __ptext28:
  9033                           	opt callstack 0
  9034  01BDCC                     _clear_hid_pflags:
  9035                           	opt callstack 15
  9036                           
  9037                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  9038                           ;stkvar	_h @ sp[(0)+-1]
  9039                           
  9040                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9041                           ;incstack = 0
  9042  01BDCC  0EFF               	movlw	-1
  9043  01BDCE  50E3               	movf	plusw1,w,c
  9044  01BDD0  6ED9               	movwf	fsr2l,c
  9045  01BDD2  6ADA               	clrf	fsr2h,c
  9046  01BDD4  0E03               	movlw	3
  9047  01BDD6  26D9               	addwf	fsr2l,f,c
  9048  01BDD8  0E00               	movlw	0
  9049  01BDDA  6EDF               	movwf	indf2,c
  9050                           
  9051                           ;hid.c: 54:  h->enter_p = SW_OFF;
  9052                           ;stkvar	_h @ sp[(0)+-1]
  9053  01BDDC  0EFF               	movlw	-1
  9054  01BDDE  50E3               	movf	plusw1,w,c
  9055  01BDE0  6ED9               	movwf	fsr2l,c
  9056  01BDE2  6ADA               	clrf	fsr2h,c
  9057  01BDE4  0E05               	movlw	5
  9058  01BDE6  26D9               	addwf	fsr2l,f,c
  9059  01BDE8  0E00               	movlw	0
  9060  01BDEA  6EDF               	movwf	indf2,c
  9061                           
  9062                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  9063  01BDEC  52E5               	movf	postdec1,f,c
  9064  01BDEE  0012               	return		;funcret
  9065  01BDF0                     __end_of_clear_hid_pflags:
  9066                           	opt callstack 0
  9067                           
  9068 ;; *************** function _check_help *****************
  9069 ;; Defined at:
  9070 ;;		line 40 in file "mconfig.c"
  9071 ;; Parameters:    Size  Location     Type
  9072 ;;  flipper         1  [STACK] const _Bool 
  9073 ;; Auto vars:     Size  Location     Type
  9074 ;;  estatus         1    0        _Bool 
  9075 ;; Return value:  Size  Location     Type
  9076 ;;                  1  [STACK] _Bool 
  9077 ;; Registers used:
  9078 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9079 ;; Tracked objects:
  9080 ;;		On entry : 3F/1
  9081 ;;		On exit  : 0/0
  9082 ;;		Unchanged: 0/0
  9083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9088 ;;Total ram usage:        0 bytes
  9089 ;; Hardware stack levels used:    1
  9090 ;; Hardware stack levels required when called:   28
  9091 ;; This function calls:
  9092 ;;		_StartTimer
  9093 ;;		_TimerDone
  9094 ;;		_display_help
  9095 ;;		_display_info
  9096 ;;		_get_vterm_ptr
  9097 ;;		_help_button
  9098 ;;		_mode_lamp_bright
  9099 ;;		_mode_lamp_dim
  9100 ;;		_set_display_info
  9101 ;;		_set_temp_display_help
  9102 ;;		_set_vterm
  9103 ;;		_sprintf
  9104 ;;		_update_lcd
  9105 ;;		_vterm_dump
  9106 ;; This function is called by:
  9107 ;;		_main
  9108 ;; This function uses a reentrant model
  9109 ;;
  9110                           
  9111                           	psect	text29
  9112  018268                     __ptext29:
  9113                           	opt callstack 0
  9114  018268                     _check_help:
  9115                           	opt callstack 2
  9116                           
  9117                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  9118                           
  9119                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9120                           ;incstack = 0
  9121  018268  EC52  F0DC         	call	_help_button	;wreg free
  9122  01826C  5001               	movf	btemp^0,w,c
  9123  01826E  B4D8               	btfsc	status,2,c
  9124  018270  D0D0               	goto	l12994
  9125  018272  ECC3  F0E0         	call	_display_info	;wreg free
  9126  018276  0401               	decf	btemp^0,w,c
  9127  018278  B4D8               	btfsc	status,2,c
  9128  01827A  D0CB               	goto	l12994
  9129                           
  9130                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  9131  01827C  0EDC               	movlw	220
  9132  01827E  6EE6               	movwf	postinc1,c
  9133  018280  0E05               	movlw	5
  9134  018282  6EE6               	movwf	postinc1,c
  9135  018284  0E0B               	movlw	11
  9136  018286  6EE6               	movwf	postinc1,c
  9137  018288  EC95  F0DB         	call	_StartTimer	;wreg free
  9138                           
  9139                           ;mconfig.c: 48:   if (V.debug)
  9140  01828C  0101               	movlb	1	; () banked
  9141  01828E  B3CB               	btfsc	(_V+155)& (0+255),1,b	;volatile
  9142                           
  9143                           ; BSR set to: 1
  9144                           ;mconfig.c: 49:    vterm_dump();
  9145  018290  EC39  F0CB         	call	_vterm_dump	;wreg free
  9146                           
  9147                           ;mconfig.c: 51:   set_vterm(1);
  9148  018294  0E01               	movlw	1
  9149  018296  6EE6               	movwf	postinc1,c
  9150  018298  ECB2  F0DF         	call	_set_vterm	;wreg free
  9151                           
  9152                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  9153  01829C  ECC3  F0E0         	call	_display_info	;wreg free
  9154  0182A0  5001               	movf	btemp^0,w,c
  9155  0182A2  6EE6               	movwf	postinc1,c
  9156  0182A4  EC63  F0E0         	call	_set_temp_display_help	;wreg free
  9157                           
  9158                           ; BSR set to: 1
  9159                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  9160  0182A8  0E01               	movlw	1
  9161  0182AA  6EE6               	movwf	postinc1,c
  9162  0182AC  ECC1  F0DF         	call	_set_display_info	;wreg free
  9163                           
  9164                           ;mconfig.c: 54:   if (flipper) {
  9165                           ;stkvar	_flipper @ sp[(0)+-1]
  9166  0182B0  0EFF               	movlw	-1
  9167  0182B2  50E3               	movf	plusw1,w,c
  9168  0182B4  B4D8               	btfsc	status,2,c
  9169  0182B6  D019               	goto	l12980
  9170                           
  9171                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  9172  0182B8  0EB3               	movlw	low STR_45
  9173  0182BA  6EE6               	movwf	postinc1,c
  9174  0182BC  0EFF               	movlw	high STR_45
  9175  0182BE  6EE6               	movwf	postinc1,c
  9176  0182C0  0E5D               	movlw	low STR_47
  9177  0182C2  6EE6               	movwf	postinc1,c
  9178  0182C4  0EFF               	movlw	high STR_47
  9179  0182C6  6EE6               	movwf	postinc1,c
  9180  0182C8  0E01               	movlw	1
  9181  0182CA  6EE6               	movwf	postinc1,c
  9182  0182CC  0E00               	movlw	0
  9183  0182CE  6EE6               	movwf	postinc1,c
  9184  0182D0  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  9185  0182D4  0060  F007  FFE6   	movff	btemp,postinc1
  9186  0182DA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9187  0182E0  0E06               	movlw	6
  9188  0182E2  6EE6               	movwf	postinc1,c
  9189  0182E4  EC8D  F0CE         	call	_sprintf	;wreg free
  9190                           
  9191                           ;mconfig.c: 56:   } else {
  9192  0182E8  D018               	goto	l1671
  9193  0182EA                     l12980:
  9194                           
  9195                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  9196  0182EA  0EC9               	movlw	low STR_46
  9197  0182EC  6EE6               	movwf	postinc1,c
  9198  0182EE  0EFF               	movlw	high STR_46
  9199  0182F0  6EE6               	movwf	postinc1,c
  9200  0182F2  0E5D               	movlw	low STR_47
  9201  0182F4  6EE6               	movwf	postinc1,c
  9202  0182F6  0EFF               	movlw	high STR_47
  9203  0182F8  6EE6               	movwf	postinc1,c
  9204  0182FA  0E01               	movlw	1
  9205  0182FC  6EE6               	movwf	postinc1,c
  9206  0182FE  0E00               	movlw	0
  9207  018300  6EE6               	movwf	postinc1,c
  9208  018302  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  9209  018306  0060  F007  FFE6   	movff	btemp,postinc1
  9210  01830C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9211  018312  0E06               	movlw	6
  9212  018314  6EE6               	movwf	postinc1,c
  9213  018316  EC8D  F0CE         	call	_sprintf	;wreg free
  9214  01831A                     l1671:
  9215                           
  9216                           ; BSR set to: 0
  9217                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  9218  01831A  0101               	movlb	1	; () banked
  9219  01831C  39CB               	swapf	(_V+155)& (0+255),w,b	;volatile
  9220  01831E  32E8               	rrcf	wreg,f,c
  9221  018320  32E8               	rrcf	wreg,f,c
  9222  018322  0B03               	andlw	3
  9223  018324  0D24               	mullw	36
  9224  018326  0E12               	movlw	18
  9225  018328  26F3               	addwf	243,f,c
  9226  01832A  0E00               	movlw	0
  9227  01832C  22F4               	addwfc	244,f,c
  9228  01832E  0EBB               	movlw	low _T
  9229  018330  6E0B               	movwf	(btemp+10)^0,c
  9230  018332  0EFA               	movlw	high _T
  9231  018334  6E0C               	movwf	(btemp+11)^0,c
  9232  018336  50F3               	movf	243,w,c
  9233  018338  260B               	addwf	(btemp+10)^0,f,c
  9234  01833A  50F4               	movf	244,w,c
  9235  01833C  220C               	addwfc	(btemp+11)^0,f,c
  9236  01833E  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9237  018344  0060  F033  FFE6   	movff	btemp+11,postinc1
  9238  01834A  0EBF               	movlw	low STR_49
  9239  01834C  6EE6               	movwf	postinc1,c
  9240  01834E  0EFF               	movlw	high STR_49
  9241  018350  6EE6               	movwf	postinc1,c
  9242  018352  0E01               	movlw	1
  9243  018354  6EE6               	movwf	postinc1,c
  9244  018356  0E01               	movlw	1
  9245  018358  6EE6               	movwf	postinc1,c
  9246  01835A  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  9247  01835E  0060  F007  FFE6   	movff	btemp,postinc1
  9248  018364  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9249  01836A  0E06               	movlw	6
  9250  01836C  6EE6               	movwf	postinc1,c
  9251  01836E  EC8D  F0CE         	call	_sprintf	;wreg free
  9252                           
  9253                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  9254  018372  0101               	movlb	1	; () banked
  9255  018374  39CB               	swapf	(_V+155)& (0+255),w,b	;volatile
  9256  018376  32E8               	rrcf	wreg,f,c
  9257  018378  32E8               	rrcf	wreg,f,c
  9258  01837A  0B03               	andlw	3
  9259  01837C  0D24               	mullw	36
  9260  01837E  0EBB               	movlw	low _T
  9261  018380  6E0B               	movwf	(btemp+10)^0,c
  9262  018382  0EFA               	movlw	high _T
  9263  018384  6E0C               	movwf	(btemp+11)^0,c
  9264  018386  50F3               	movf	243,w,c
  9265  018388  260B               	addwf	(btemp+10)^0,f,c
  9266  01838A  50F4               	movf	244,w,c
  9267  01838C  220C               	addwfc	(btemp+11)^0,f,c
  9268  01838E  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9269  018394  0060  F033  FFE6   	movff	btemp+11,postinc1
  9270  01839A  0EBF               	movlw	low STR_49
  9271  01839C  6EE6               	movwf	postinc1,c
  9272  01839E  0EFF               	movlw	high STR_49
  9273  0183A0  6EE6               	movwf	postinc1,c
  9274  0183A2  0E01               	movlw	1
  9275  0183A4  6EE6               	movwf	postinc1,c
  9276  0183A6  0E02               	movlw	2
  9277  0183A8  6EE6               	movwf	postinc1,c
  9278  0183AA  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  9279  0183AE  0060  F007  FFE6   	movff	btemp,postinc1
  9280  0183B4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9281  0183BA  0E06               	movlw	6
  9282  0183BC  6EE6               	movwf	postinc1,c
  9283  0183BE  EC8D  F0CE         	call	_sprintf	;wreg free
  9284                           
  9285                           ; BSR set to: 0
  9286                           ;mconfig.c: 61:   V.help_id++;
  9287  0183C2  EE20  F1CB         	lfsr	2,_V+155	;volatile
  9288  0183C6  38DF               	swapf	223,w,c
  9289  0183C8  6E0C               	movwf	(btemp+11)^0,c
  9290  0183CA  320C               	rrcf	(btemp+11)^0,f,c
  9291  0183CC  300C               	rrcf	(btemp+11)^0,w,c
  9292  0183CE  0B03               	andlw	3
  9293  0183D0  6E0C               	movwf	(btemp+11)^0,c
  9294  0183D2  2A0C               	incf	(btemp+11)^0,f,c
  9295  0183D4  3A0C               	swapf	(btemp+11)^0,f,c
  9296  0183D6  360C               	rlcf	(btemp+11)^0,f,c
  9297  0183D8  360C               	rlcf	(btemp+11)^0,f,c
  9298  0183DA  50DF               	movf	223,w,c
  9299  0183DC  180C               	xorwf	(btemp+11)^0,w,c
  9300  0183DE  0B3F               	andlw	-193
  9301  0183E0  180C               	xorwf	(btemp+11)^0,w,c
  9302  0183E2  6EDF               	movwf	223,c
  9303                           
  9304                           ; BSR set to: 0
  9305                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  9306  0183E4  0EB8               	movlw	184
  9307  0183E6  6EE6               	movwf	postinc1,c
  9308  0183E8  0E0B               	movlw	11
  9309  0183EA  6EE6               	movwf	postinc1,c
  9310  0183EC  0E09               	movlw	9
  9311  0183EE  6EE6               	movwf	postinc1,c
  9312  0183F0  EC95  F0DB         	call	_StartTimer	;wreg free
  9313                           
  9314                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  9315  0183F4  0EB8               	movlw	184
  9316  0183F6  6EE6               	movwf	postinc1,c
  9317  0183F8  0E0B               	movlw	11
  9318  0183FA  6EE6               	movwf	postinc1,c
  9319  0183FC  0E07               	movlw	7
  9320  0183FE  6EE6               	movwf	postinc1,c
  9321  018400  EC95  F0DB         	call	_StartTimer	;wreg free
  9322                           
  9323                           ;mconfig.c: 64:   mode_lamp_bright();
  9324  018404  EC81  F0E0         	call	_mode_lamp_bright	;wreg free
  9325                           
  9326                           ;mconfig.c: 65:   update_lcd(1);
  9327  018408  0E01               	movlw	1
  9328  01840A  6EE6               	movwf	postinc1,c
  9329  01840C  EC05  F0CE         	call	_update_lcd	;wreg free
  9330                           
  9331                           ;mconfig.c: 67:  } else {
  9332  018410  D032               	goto	l1672
  9333  018412                     l12994:
  9334                           
  9335                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  9336  018412  0E09               	movlw	9
  9337  018414  6EE6               	movwf	postinc1,c
  9338  018416  ECBB  F0DD         	call	_TimerDone	;wreg free
  9339  01841A  5001               	movf	btemp^0,w,c
  9340  01841C  B4D8               	btfsc	status,2,c
  9341  01841E  D02B               	goto	l1672
  9342                           
  9343                           ;mconfig.c: 69:    set_vterm(0);
  9344  018420  0E00               	movlw	0
  9345  018422  6EE6               	movwf	postinc1,c
  9346  018424  ECB2  F0DF         	call	_set_vterm	;wreg free
  9347                           
  9348                           ;mconfig.c: 70:    V.help = 0;
  9349  018428  0101               	movlb	1	; () banked
  9350  01842A  95CB               	bcf	(_V+155)& (0+255),2,b	;volatile
  9351                           
  9352                           ; BSR set to: 1
  9353                           ;mconfig.c: 71:    set_display_info(display_help());
  9354  01842C  ECC7  F0E0         	call	_display_help	;wreg free
  9355  018430  5001               	movf	btemp^0,w,c
  9356  018432  6EE6               	movwf	postinc1,c
  9357  018434  ECC1  F0DF         	call	_set_display_info	;wreg free
  9358                           
  9359                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  9360  018438  0060  F717  FFE6   	movff	_V+149,postinc1
  9361  01843E  0060  F71B  FFE6   	movff	_V+150,postinc1
  9362  018444  EC07  F0E0         	call	_mode_lamp_dim	;wreg free
  9363                           
  9364                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  9365  018448  0E0B               	movlw	11
  9366  01844A  6EE6               	movwf	postinc1,c
  9367  01844C  ECBB  F0DD         	call	_TimerDone	;wreg free
  9368  018450  5001               	movf	btemp^0,w,c
  9369  018452  B4D8               	btfsc	status,2,c
  9370  018454  D010               	goto	l1672
  9371                           
  9372                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  9373  018456  0101               	movlb	1	; () banked
  9374  018458  51DB               	movf	(_V+171)& (0+255),w,b	;volatile
  9375  01845A  A4D8               	btfss	status,2,c
  9376  01845C  D002               	goto	u12500
  9377  01845E  0E01               	movlw	1
  9378  018460  D001               	goto	u12510
  9379  018462                     u12500:
  9380  018462  0E00               	movlw	0
  9381  018464                     u12510:
  9382  018464  6FDB               	movwf	(_V+171)& (0+255),b	;volatile
  9383                           
  9384                           ; BSR set to: 1
  9385                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  9386  018466  0EDC               	movlw	220
  9387  018468  6EE6               	movwf	postinc1,c
  9388  01846A  0E05               	movlw	5
  9389  01846C  6EE6               	movwf	postinc1,c
  9390  01846E  0E0B               	movlw	11
  9391  018470  6EE6               	movwf	postinc1,c
  9392  018472  EC95  F0DB         	call	_StartTimer	;wreg free
  9393  018476                     l1672:
  9394                           
  9395                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  9396  018476  52E5               	movf	postdec1,f,c
  9397  018478  0012               	return		;funcret
  9398  01847A                     __end_of_check_help:
  9399                           	opt callstack 0
  9400                           
  9401 ;; *************** function _vterm_dump *****************
  9402 ;; Defined at:
  9403 ;;		line 121 in file "mconfig.c"
  9404 ;; Parameters:    Size  Location     Type
  9405 ;;		None
  9406 ;; Auto vars:     Size  Location     Type
  9407 ;;		None
  9408 ;; Return value:  Size  Location     Type
  9409 ;;                  1  [STACK] void 
  9410 ;; Registers used:
  9411 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9412 ;; Tracked objects:
  9413 ;;		On entry : 3F/1
  9414 ;;		On exit  : 0/0
  9415 ;;		Unchanged: 0/0
  9416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9421 ;;Total ram usage:        0 bytes
  9422 ;; Hardware stack levels used:    1
  9423 ;; Hardware stack levels required when called:   27
  9424 ;; This function calls:
  9425 ;;		_WaitMs
  9426 ;;		_eaDogM_WriteStringAtPos
  9427 ;;		_get_vterm_ptr
  9428 ;;		_sprintf
  9429 ;;		_wait_lcd_done
  9430 ;; This function is called by:
  9431 ;;		_check_help
  9432 ;; This function uses a reentrant model
  9433 ;;
  9434                           
  9435                           	psect	text30
  9436  019672                     __ptext30:
  9437                           	opt callstack 0
  9438  019672                     _vterm_dump:
  9439                           	opt callstack 2
  9440                           
  9441                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  9442                           
  9443                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9444                           ;incstack = 0
  9445  019672  0E01               	movlw	1
  9446  019674  6EE6               	movwf	postinc1,c
  9447  019676  0E00               	movlw	0
  9448  019678  6EE6               	movwf	postinc1,c
  9449  01967A  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  9450  01967E  0060  F007  FFE6   	movff	btemp,postinc1
  9451  019684  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9452  01968A  0E00               	movlw	0
  9453  01968C  6EE6               	movwf	postinc1,c
  9454  01968E  0E00               	movlw	0
  9455  019690  6EE6               	movwf	postinc1,c
  9456  019692  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  9457  019696  0060  F007  FFE6   	movff	btemp,postinc1
  9458  01969C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9459  0196A2  0EA4               	movlw	low STR_51
  9460  0196A4  6EE6               	movwf	postinc1,c
  9461  0196A6  0EFF               	movlw	high STR_51
  9462  0196A8  6EE6               	movwf	postinc1,c
  9463  0196AA  0E31               	movlw	low (_V+1)
  9464  0196AC  6EE6               	movwf	postinc1,c
  9465  0196AE  0E01               	movlw	high (_V+1)
  9466  0196B0  6EE6               	movwf	postinc1,c
  9467  0196B2  0E08               	movlw	8
  9468  0196B4  6EE6               	movwf	postinc1,c
  9469  0196B6  EC8D  F0CE         	call	_sprintf	;wreg free
  9470                           
  9471                           ; BSR set to: 0
  9472                           ;mconfig.c: 124:  wait_lcd_done();
  9473  0196BA  ECDF  F0DF         	call	_wait_lcd_done	;wreg free
  9474                           
  9475                           ; BSR set to: 0
  9476                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  9477  0196BE  0E31               	movlw	low (_V+1)
  9478  0196C0  6EE6               	movwf	postinc1,c
  9479  0196C2  0E01               	movlw	high (_V+1)
  9480  0196C4  6EE6               	movwf	postinc1,c
  9481  0196C6  0E00               	movlw	0
  9482  0196C8  6EE6               	movwf	postinc1,c
  9483  0196CA  0E00               	movlw	0
  9484  0196CC  6EE6               	movwf	postinc1,c
  9485  0196CE  ECF9  F0D3         	call	_eaDogM_WriteStringAtPos	;wreg free
  9486                           
  9487                           ; BSR set to: 59
  9488                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  9489  0196D2  0E01               	movlw	1
  9490  0196D4  6EE6               	movwf	postinc1,c
  9491  0196D6  0E01               	movlw	1
  9492  0196D8  6EE6               	movwf	postinc1,c
  9493  0196DA  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  9494  0196DE  0060  F007  FFE6   	movff	btemp,postinc1
  9495  0196E4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9496  0196EA  0E00               	movlw	0
  9497  0196EC  6EE6               	movwf	postinc1,c
  9498  0196EE  0E01               	movlw	1
  9499  0196F0  6EE6               	movwf	postinc1,c
  9500  0196F2  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  9501  0196F6  0060  F007  FFE6   	movff	btemp,postinc1
  9502  0196FC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9503  019702  0EA4               	movlw	low STR_51
  9504  019704  6EE6               	movwf	postinc1,c
  9505  019706  0EFF               	movlw	high STR_51
  9506  019708  6EE6               	movwf	postinc1,c
  9507  01970A  0E31               	movlw	low (_V+1)
  9508  01970C  6EE6               	movwf	postinc1,c
  9509  01970E  0E01               	movlw	high (_V+1)
  9510  019710  6EE6               	movwf	postinc1,c
  9511  019712  0E08               	movlw	8
  9512  019714  6EE6               	movwf	postinc1,c
  9513  019716  EC8D  F0CE         	call	_sprintf	;wreg free
  9514                           
  9515                           ; BSR set to: 0
  9516                           ;mconfig.c: 127:  wait_lcd_done();
  9517  01971A  ECDF  F0DF         	call	_wait_lcd_done	;wreg free
  9518                           
  9519                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  9520  01971E  0E31               	movlw	low (_V+1)
  9521  019720  6EE6               	movwf	postinc1,c
  9522  019722  0E01               	movlw	high (_V+1)
  9523  019724  6EE6               	movwf	postinc1,c
  9524  019726  0E00               	movlw	0
  9525  019728  6EE6               	movwf	postinc1,c
  9526  01972A  0E01               	movlw	1
  9527  01972C  6EE6               	movwf	postinc1,c
  9528  01972E  ECF9  F0D3         	call	_eaDogM_WriteStringAtPos	;wreg free
  9529                           
  9530                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  9531  019732  0E01               	movlw	1
  9532  019734  6EE6               	movwf	postinc1,c
  9533  019736  0E02               	movlw	2
  9534  019738  6EE6               	movwf	postinc1,c
  9535  01973A  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  9536  01973E  0060  F007  FFE6   	movff	btemp,postinc1
  9537  019744  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9538  01974A  0E00               	movlw	0
  9539  01974C  6EE6               	movwf	postinc1,c
  9540  01974E  0E02               	movlw	2
  9541  019750  6EE6               	movwf	postinc1,c
  9542  019752  EC39  F0DD         	call	_get_vterm_ptr	;wreg free
  9543  019756  0060  F007  FFE6   	movff	btemp,postinc1
  9544  01975C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9545  019762  0EA4               	movlw	low STR_51
  9546  019764  6EE6               	movwf	postinc1,c
  9547  019766  0EFF               	movlw	high STR_51
  9548  019768  6EE6               	movwf	postinc1,c
  9549  01976A  0E31               	movlw	low (_V+1)
  9550  01976C  6EE6               	movwf	postinc1,c
  9551  01976E  0E01               	movlw	high (_V+1)
  9552  019770  6EE6               	movwf	postinc1,c
  9553  019772  0E08               	movlw	8
  9554  019774  6EE6               	movwf	postinc1,c
  9555  019776  EC8D  F0CE         	call	_sprintf	;wreg free
  9556                           
  9557                           ; BSR set to: 0
  9558                           ;mconfig.c: 130:  wait_lcd_done();
  9559  01977A  ECDF  F0DF         	call	_wait_lcd_done	;wreg free
  9560                           
  9561                           ; BSR set to: 0
  9562                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  9563  01977E  0E31               	movlw	low (_V+1)
  9564  019780  6EE6               	movwf	postinc1,c
  9565  019782  0E01               	movlw	high (_V+1)
  9566  019784  6EE6               	movwf	postinc1,c
  9567  019786  0E00               	movlw	0
  9568  019788  6EE6               	movwf	postinc1,c
  9569  01978A  0E02               	movlw	2
  9570  01978C  6EE6               	movwf	postinc1,c
  9571  01978E  ECF9  F0D3         	call	_eaDogM_WriteStringAtPos	;wreg free
  9572                           
  9573                           ; BSR set to: 59
  9574                           ;mconfig.c: 132:  WaitMs(3000);
  9575  019792  0EB8               	movlw	184
  9576  019794  6EE6               	movwf	postinc1,c
  9577  019796  0E0B               	movlw	11
  9578  019798  6EE6               	movwf	postinc1,c
  9579  01979A  EC8A  F0DC         	call	_WaitMs	;wreg free
  9580                           
  9581                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  9582  01979E  0012               	return		;funcret
  9583  0197A0                     __end_of_vterm_dump:
  9584                           	opt callstack 0
  9585                           
  9586 ;; *************** function _sprintf *****************
  9587 ;; Defined at:
  9588 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  9589 ;; Parameters:    Size  Location     Type
  9590 ;;  s               2  [STACK] PTR unsigned char 
  9591 ;;		 -> D.lcd(480), D(482), port_data(512), V(191), 
  9592 ;;  fmt             2  [STACK] PTR const unsigned char 
  9593 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
  9594 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
  9595 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
  9596 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
  9597 ;;		 -> STR_47(19), STR_42(22), STR_41(22), STR_40(22), 
  9598 ;;		 -> STR_39(23), STR_38(23), STR_37(23), STR_36(23), 
  9599 ;;		 -> STR_35(23), STR_34(23), STR_33(22), STR_32(22), 
  9600 ;;		 -> STR_31(22), STR_30(22), STR_29(22), STR_28(22), 
  9601 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(22), 
  9602 ;;		 -> STR_23(22), STR_22(22), STR_21(17), STR_20(16), 
  9603 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
  9604 ;;		 -> STR_15(21), STR_14(21), STR_13(21), STR_12(21), 
  9605 ;;		 -> STR_11(22), STR_10(22), STR_9(26), STR_8(21), 
  9606 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
  9607 ;;		 -> STR_2(21), STR_1(21), 
  9608 ;; Auto vars:     Size  Location     Type
  9609 ;;  f               6  [STACK] struct _IO_FILE
  9610 ;;  ap              2  [STACK] PTR void [1]
  9611 ;;		 -> ?_printf(2), ?_sprintf(2), 
  9612 ;;  ret             2    0        int 
  9613 ;; Return value:  Size  Location     Type
  9614 ;;                  2  [STACK] int 
  9615 ;; Registers used:
  9616 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9617 ;; Tracked objects:
  9618 ;;		On entry : 0/0
  9619 ;;		On exit  : 3F/0
  9620 ;;		Unchanged: 0/0
  9621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9626 ;;Total ram usage:        0 bytes
  9627 ;; Hardware stack levels used:    1
  9628 ;; Hardware stack levels required when called:   23
  9629 ;; This function calls:
  9630 ;;		_vfprintf
  9631 ;; This function is called by:
  9632 ;;		_main
  9633 ;;		_check_help
  9634 ;;		_vterm_dump
  9635 ;;		_calc_bsoc
  9636 ;; This function uses a reentrant model
  9637 ;;
  9638                           
  9639                           	psect	text31
  9640  019D1A                     __ptext31:
  9641                           	opt callstack 0
  9642  019D1A                     _sprintf:
  9643                           	opt callstack 0
  9644                           
  9645                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 86, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9646  019D1A  0E08               	movlw	8
  9647  019D1C  26E1               	addwf	fsr1l,f,c
  9648  019D1E  0E00               	movlw	0
  9649  019D20  22E2               	addwfc	fsr1h,f,c
  9650                           
  9651                           ;incstack = 0
  9652 ;; hardware stack exceeded
  9653  019D22  0EFE               	movlw	254
  9654  019D24  6E0B               	movwf	(btemp+10)^0,c
  9655  019D26  0EFF               	movlw	255
  9656  019D28  6E0C               	movwf	(btemp+11)^0,c
  9657                           
  9658                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  9659  019D2A  0EF5               	movlw	245
  9660  019D2C  24E1               	addwf	fsr1l,w,c
  9661  019D2E  6E09               	movwf	(btemp+8)^0,c
  9662  019D30  0EFF               	movlw	255
  9663  019D32  20E2               	addwfc	fsr1h,w,c
  9664  019D34  6E0A               	movwf	(btemp+9)^0,c
  9665  019D36  500B               	movf	(btemp+10)^0,w,c
  9666  019D38  2609               	addwf	(btemp+8)^0,f,c
  9667  019D3A  500C               	movf	(btemp+11)^0,w,c
  9668  019D3C  220A               	addwfc	(btemp+9)^0,f,c
  9669                           
  9670                           ;stkvar	_ap @ sp[(-8)+6]
  9671  019D3E  0EFF               	movlw	-1
  9672  019D40  0060  F02B  FFE3   	movff	btemp+9,plusw1
  9673  019D46  0EFE               	movlw	-2
  9674  019D48  0060  F027  FFE3   	movff	btemp+8,plusw1
  9675                           
  9676                           ;stkvar	_s @ sp[(-8)+-3]
  9677  019D4E  0EF5               	movlw	-11
  9678  019D50  006F FF8C  F00B    	movff	plusw1,btemp+10
  9679  019D56  0EF6               	movlw	-10
  9680  019D58  006F FF8C  F00C    	movff	plusw1,btemp+11
  9681                           
  9682                           ;stkvar	_f @ sp[(-8)+0]
  9683  019D5E  0EF9               	movlw	-7
  9684  019D60  0060  F033  FFE3   	movff	btemp+11,plusw1
  9685  019D66  0EF8               	movlw	-8
  9686  019D68  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9687                           
  9688                           ;stkvar	_f @ sp[(-8)+0]
  9689  019D6E  0EFA               	movlw	250
  9690  019D70  24E1               	addwf	fsr1l,w,c
  9691  019D72  6ED9               	movwf	fsr2l,c
  9692  019D74  0EFF               	movlw	255
  9693  019D76  20E2               	addwfc	fsr1h,w,c
  9694  019D78  6EDA               	movwf	fsr2h,c
  9695  019D7A  0E00               	movlw	0
  9696  019D7C  6EDE               	movwf	postinc2,c
  9697  019D7E  0E00               	movlw	0
  9698  019D80  6EDD               	movwf	postdec2,c
  9699                           
  9700                           ;stkvar	_f @ sp[(-8)+0]
  9701  019D82  0EFC               	movlw	252
  9702  019D84  24E1               	addwf	fsr1l,w,c
  9703  019D86  6ED9               	movwf	fsr2l,c
  9704  019D88  0EFF               	movlw	255
  9705  019D8A  20E2               	addwfc	fsr1h,w,c
  9706  019D8C  6EDA               	movwf	fsr2h,c
  9707  019D8E  0E00               	movlw	0
  9708  019D90  6EDE               	movwf	postinc2,c
  9709  019D92  0E00               	movlw	0
  9710  019D94  6EDD               	movwf	postdec2,c
  9711                           
  9712                           ;stkvar	_ap @ sp[(-8)+6]
  9713  019D96  0EFE               	movlw	254
  9714  019D98  24E1               	addwf	fsr1l,w,c
  9715  019D9A  6E01               	movwf	btemp^0,c
  9716  019D9C  0EFF               	movlw	255
  9717  019D9E  20E2               	addwfc	fsr1h,w,c
  9718  019DA0  6E02               	movwf	(btemp+1)^0,c
  9719  019DA2  0060  F007  FFE6   	movff	btemp,postinc1
  9720  019DA8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9721                           
  9722                           ;stkvar	_fmt @ sp[(-10)+-5]
  9723  019DAE  0EF1               	movlw	-15
  9724  019DB0  006F FF8F FFE6     	movff	plusw1,postinc1
  9725  019DB6  006F FF8F FFE6     	movff	plusw1,postinc1
  9726                           
  9727                           ;stkvar	_f @ sp[(-12)+0]
  9728  019DBC  0EF4               	movlw	244
  9729  019DBE  24E1               	addwf	fsr1l,w,c
  9730  019DC0  6E01               	movwf	btemp^0,c
  9731  019DC2  0EFF               	movlw	255
  9732  019DC4  20E2               	addwfc	fsr1h,w,c
  9733  019DC6  6E02               	movwf	(btemp+1)^0,c
  9734  019DC8  0060  F007  FFE6   	movff	btemp,postinc1
  9735  019DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9736  019DD4  EC4E  F0D3         	call	_vfprintf	;wreg free
  9737                           
  9738                           ; BSR set to: 0
  9739                           ;stkvar	_f @ sp[(-8)+0]
  9740  019DD8  0EFA               	movlw	250
  9741  019DDA  24E1               	addwf	fsr1l,w,c
  9742  019DDC  6ED9               	movwf	fsr2l,c
  9743  019DDE  0EFF               	movlw	255
  9744  019DE0  20E2               	addwfc	fsr1h,w,c
  9745  019DE2  6EDA               	movwf	fsr2h,c
  9746  019DE4  006F FF78  F00B    	movff	postinc2,btemp+10
  9747  019DEA  006F FF74  F00C    	movff	postdec2,btemp+11
  9748                           
  9749                           ;stkvar	_s @ sp[(-8)+-3]
  9750  019DF0  0EF5               	movlw	-11
  9751  019DF2  006F FF8C  F009    	movff	plusw1,btemp+8
  9752  019DF8  0EF6               	movlw	-10
  9753  019DFA  006F FF8C  F00A    	movff	plusw1,btemp+9
  9754  019E00  500B               	movf	(btemp+10)^0,w,c
  9755  019E02  2409               	addwf	(btemp+8)^0,w,c
  9756  019E04  6ED9               	movwf	fsr2l,c
  9757  019E06  500C               	movf	(btemp+11)^0,w,c
  9758  019E08  200A               	addwfc	(btemp+9)^0,w,c
  9759  019E0A  6EDA               	movwf	fsr2h,c
  9760  019E0C  0E00               	movlw	0
  9761  019E0E  6EDF               	movwf	indf2,c
  9762                           
  9763                           ; BSR set to: 0
  9764                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 86, args
      +                          ize = 4, vargsize = 0
  9765  019E10  0EF8               	movlw	248
  9766  019E12  26E1               	addwf	fsr1l,f,c
  9767  019E14  0EFF               	movlw	255
  9768  019E16  22E2               	addwfc	fsr1h,f,c
  9769  019E18  52E5               	movf	postdec1,f,c
  9770  019E1A  50E7               	movf	indf1,w,c
  9771  019E1C  5EE1               	subwf	fsr1l,f,c
  9772  019E1E  0E00               	movlw	0
  9773  019E20  5AE2               	subwfb	fsr1h,f,c
  9774  019E22  0012               	return		;funcret
  9775  019E24                     __end_of_sprintf:
  9776                           	opt callstack 0
  9777                           
  9778 ;; *************** function _get_vterm_ptr *****************
  9779 ;; Defined at:
  9780 ;;		line 116 in file "mconfig.c"
  9781 ;; Parameters:    Size  Location     Type
  9782 ;;  line            1  [STACK] const unsigned char 
  9783 ;;  vterm           1  [STACK] const unsigned char 
  9784 ;; Auto vars:     Size  Location     Type
  9785 ;;		None
  9786 ;; Return value:  Size  Location     Type
  9787 ;;                  2  [STACK] PTR unsigned char 
  9788 ;; Registers used:
  9789 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  9790 ;; Tracked objects:
  9791 ;;		On entry : 0/0
  9792 ;;		On exit  : 0/0
  9793 ;;		Unchanged: 0/0
  9794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9799 ;;Total ram usage:        0 bytes
  9800 ;; Hardware stack levels used:    1
  9801 ;; Hardware stack levels required when called:   15
  9802 ;; This function calls:
  9803 ;;		Nothing
  9804 ;; This function is called by:
  9805 ;;		_main
  9806 ;;		_check_help
  9807 ;;		_vterm_dump
  9808 ;; This function uses a reentrant model
  9809 ;;
  9810                           
  9811                           	psect	text32
  9812  01BA72                     __ptext32:
  9813                           	opt callstack 0
  9814  01BA72                     _get_vterm_ptr:
  9815                           	opt callstack 15
  9816                           
  9817                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  9818                           ;stkvar	_vterm @ sp[(0)+-2]
  9819                           
  9820                           ; BSR set to: 0
  9821                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9822                           ;incstack = 0
  9823  01BA72  0EFE               	movlw	-2
  9824  01BA74  50E3               	movf	plusw1,w,c
  9825  01BA76  0B03               	andlw	3
  9826  01BA78  0D78               	mullw	120
  9827  01BA7A  0E2A               	movlw	low _D
  9828  01BA7C  6E01               	movwf	btemp^0,c
  9829  01BA7E  0E08               	movlw	high _D
  9830  01BA80  6E02               	movwf	(btemp+1)^0,c
  9831  01BA82  50F3               	movf	243,w,c
  9832  01BA84  2601               	addwf	btemp^0,f,c
  9833  01BA86  50F4               	movf	244,w,c
  9834  01BA88  2202               	addwfc	(btemp+1)^0,f,c
  9835                           
  9836                           ;stkvar	_line @ sp[(0)+-1]
  9837  01BA8A  0EFF               	movlw	-1
  9838  01BA8C  50E3               	movf	plusw1,w,c
  9839  01BA8E  0B03               	andlw	3
  9840  01BA90  0D28               	mullw	40
  9841  01BA92  50F3               	movf	243,w,c
  9842  01BA94  2601               	addwf	btemp^0,f,c
  9843  01BA96  50F4               	movf	244,w,c
  9844  01BA98  2202               	addwfc	(btemp+1)^0,f,c
  9845                           
  9846                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  9847  01BA9A  52E5               	movf	postdec1,f,c
  9848  01BA9C  52E5               	movf	postdec1,f,c
  9849  01BA9E  0012               	return		;funcret
  9850  01BAA0                     __end_of_get_vterm_ptr:
  9851                           	opt callstack 0
  9852                           
  9853 ;; *************** function _WaitMs *****************
  9854 ;; Defined at:
  9855 ;;		line 32 in file "timers.c"
  9856 ;; Parameters:    Size  Location     Type
  9857 ;;  numMilliseco    2  [STACK] const unsigned short 
  9858 ;; Auto vars:     Size  Location     Type
  9859 ;;		None
  9860 ;; Return value:  Size  Location     Type
  9861 ;;                  1  [STACK] void 
  9862 ;; Registers used:
  9863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9864 ;; Tracked objects:
  9865 ;;		On entry : 0/1
  9866 ;;		On exit  : 0/0
  9867 ;;		Unchanged: 0/0
  9868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9873 ;;Total ram usage:        0 bytes
  9874 ;; Hardware stack levels used:    1
  9875 ;; Hardware stack levels required when called:   16
  9876 ;; This function calls:
  9877 ;;		_StartTimer
  9878 ;;		_TimerDone
  9879 ;; This function is called by:
  9880 ;;		_main
  9881 ;;		_vterm_dump
  9882 ;; This function uses a reentrant model
  9883 ;;
  9884                           
  9885                           	psect	text33
  9886  01B914                     __ptext33:
  9887                           	opt callstack 0
  9888  01B914                     _WaitMs:
  9889                           	opt callstack 12
  9890                           
  9891                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  9892                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  9893                           
  9894                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9895                           ;incstack = 0
  9896  01B914  0EFE               	movlw	-2
  9897  01B916  006F FF8F FFE6     	movff	plusw1,postinc1
  9898  01B91C  006F FF8F FFE6     	movff	plusw1,postinc1
  9899  01B922  0E00               	movlw	0
  9900  01B924  6EE6               	movwf	postinc1,c
  9901  01B926  EC95  F0DB         	call	_StartTimer	;wreg free
  9902                           
  9903                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9904  01B92A  D005               	goto	l9866
  9905  01B92C                     l1603:
  9906                           
  9907                           ;timers.c: 36:   __nop();
  9908  01B92C  F000               	nop	
  9909                           
  9910                           ;timers.c: 37:   __nop();
  9911  01B92E  F000               	nop	
  9912                           
  9913                           ;timers.c: 38:   __nop();
  9914  01B930  F000               	nop	
  9915                           
  9916                           ;timers.c: 39:   __nop();
  9917  01B932  F000               	nop	
  9918  01B934  0004               	clrwdt		;# 
  9919  01B936                     l9866:
  9920                           
  9921                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9922  01B936  0E00               	movlw	0
  9923  01B938  6EE6               	movwf	postinc1,c
  9924  01B93A  ECBB  F0DD         	call	_TimerDone	;wreg free
  9925  01B93E  5001               	movf	btemp^0,w,c
  9926  01B940  B4D8               	btfsc	status,2,c
  9927  01B942  D7F4               	goto	l1603
  9928                           
  9929                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  9930  01B944  52E5               	movf	postdec1,f,c
  9931  01B946  52E5               	movf	postdec1,f,c
  9932  01B948  0012               	return		;funcret
  9933  01B94A                     __end_of_WaitMs:
  9934                           	opt callstack 0
  9935                           
  9936 ;; *************** function _update_lcd *****************
  9937 ;; Defined at:
  9938 ;;		line 85 in file "mconfig.c"
  9939 ;; Parameters:    Size  Location     Type
  9940 ;;  vterm           1  [STACK] unsigned char 
  9941 ;; Auto vars:     Size  Location     Type
  9942 ;;		None
  9943 ;; Return value:  Size  Location     Type
  9944 ;;                  1  [STACK] unsigned char 
  9945 ;; Registers used:
  9946 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9947 ;; Tracked objects:
  9948 ;;		On entry : 0/0
  9949 ;;		On exit  : 0/0
  9950 ;;		Unchanged: 0/0
  9951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9956 ;;Total ram usage:        0 bytes
  9957 ;; Hardware stack levels used:    1
  9958 ;; Hardware stack levels required when called:   27
  9959 ;; This function calls:
  9960 ;;		_eaDogM_WriteStringAtPos
  9961 ;;		_wait_lcd_done
  9962 ;; This function is called by:
  9963 ;;		_main
  9964 ;;		_check_help
  9965 ;; This function uses a reentrant model
  9966 ;;
  9967                           
  9968                           	psect	text34
  9969  019C0A                     __ptext34:
  9970                           	opt callstack 0
  9971  019C0A                     _update_lcd:
  9972                           	opt callstack 3
  9973                           
  9974                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  9975                           ;stkvar	_vterm @ sp[(0)+-1]
  9976                           
  9977                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9978                           ;incstack = 0
  9979  019C0A  0EFF               	movlw	-1
  9980  019C0C  006F FF8C  F001    	movff	plusw1,btemp
  9981  019C12  0E03               	movlw	3
  9982  019C14  1601               	andwf	btemp^0,f,c
  9983  019C16  0EFF               	movlw	-1
  9984  019C18  0060  F007  FFE3   	movff	btemp,plusw1
  9985                           
  9986                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  9987  019C1E  EE22  F20A         	lfsr	2,_D+480
  9988  019C22  A0DF               	btfss	indf2,0,c
  9989  019C24  D004               	goto	l12774
  9990                           
  9991                           ;stkvar	_vterm @ sp[(0)+-1]
  9992  019C26  0EFF               	movlw	-1
  9993  019C28  50E3               	movf	plusw1,w,c
  9994  019C2A  B4D8               	btfsc	status,2,c
  9995  019C2C  D074               	goto	l1679
  9996  019C2E                     l12774:
  9997                           
  9998                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
  9999                           ;stkvar	_vterm @ sp[(0)+-1]
 10000  019C2E  0EFF               	movlw	-1
 10001  019C30  50E3               	movf	plusw1,w,c
 10002  019C32  0D78               	mullw	120
 10003  019C34  0E3E               	movlw	low (_D+20)
 10004  019C36  24F3               	addwf	243,w,c
 10005  019C38  6ED9               	movwf	fsr2l,c
 10006  019C3A  0E08               	movlw	high (_D+20)
 10007  019C3C  20F4               	addwfc	prodh,w,c
 10008  019C3E  6EDA               	movwf	fsr2h,c
 10009  019C40  0E00               	movlw	0
 10010  019C42  6EDF               	movwf	indf2,c
 10011                           
 10012                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 10013                           ;stkvar	_vterm @ sp[(0)+-1]
 10014  019C44  0EFF               	movlw	-1
 10015  019C46  50E3               	movf	plusw1,w,c
 10016  019C48  0D78               	mullw	120
 10017  019C4A  0E66               	movlw	low (_D+60)
 10018  019C4C  24F3               	addwf	243,w,c
 10019  019C4E  6ED9               	movwf	fsr2l,c
 10020  019C50  0E08               	movlw	high (_D+60)
 10021  019C52  20F4               	addwfc	prodh,w,c
 10022  019C54  6EDA               	movwf	fsr2h,c
 10023  019C56  0E00               	movlw	0
 10024  019C58  6EDF               	movwf	indf2,c
 10025                           
 10026                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 10027                           ;stkvar	_vterm @ sp[(0)+-1]
 10028  019C5A  0EFF               	movlw	-1
 10029  019C5C  50E3               	movf	plusw1,w,c
 10030  019C5E  0D78               	mullw	120
 10031  019C60  0E8E               	movlw	low (_D+100)
 10032  019C62  24F3               	addwf	243,w,c
 10033  019C64  6ED9               	movwf	fsr2l,c
 10034  019C66  0E08               	movlw	high (_D+100)
 10035  019C68  20F4               	addwfc	prodh,w,c
 10036  019C6A  6EDA               	movwf	fsr2h,c
 10037  019C6C  0E00               	movlw	0
 10038  019C6E  6EDF               	movwf	indf2,c
 10039                           
 10040                           ;mconfig.c: 95:  wait_lcd_done();
 10041  019C70  ECDF  F0DF         	call	_wait_lcd_done	;wreg free
 10042                           
 10043                           ; BSR set to: 0
 10044                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 10045                           ;stkvar	_vterm @ sp[(0)+-1]
 10046  019C74  0EFF               	movlw	-1
 10047  019C76  50E3               	movf	plusw1,w,c
 10048  019C78  0D78               	mullw	120
 10049  019C7A  0E2A               	movlw	low _D
 10050  019C7C  6E0B               	movwf	(btemp+10)^0,c
 10051  019C7E  0E08               	movlw	high _D
 10052  019C80  6E0C               	movwf	(btemp+11)^0,c
 10053  019C82  50F3               	movf	243,w,c
 10054  019C84  260B               	addwf	(btemp+10)^0,f,c
 10055  019C86  50F4               	movf	244,w,c
 10056  019C88  220C               	addwfc	(btemp+11)^0,f,c
 10057  019C8A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10058  019C90  0060  F033  FFE6   	movff	btemp+11,postinc1
 10059  019C96  0E00               	movlw	0
 10060  019C98  6EE6               	movwf	postinc1,c
 10061  019C9A  0E00               	movlw	0
 10062  019C9C  6EE6               	movwf	postinc1,c
 10063  019C9E  ECF9  F0D3         	call	_eaDogM_WriteStringAtPos	;wreg free
 10064                           
 10065                           ; BSR set to: 59
 10066                           ;mconfig.c: 97:  wait_lcd_done();
 10067  019CA2  ECDF  F0DF         	call	_wait_lcd_done	;wreg free
 10068                           
 10069                           ; BSR set to: 0
 10070                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 10071                           ;stkvar	_vterm @ sp[(0)+-1]
 10072  019CA6  0EFF               	movlw	-1
 10073  019CA8  50E3               	movf	plusw1,w,c
 10074  019CAA  0D78               	mullw	120
 10075  019CAC  0E2A               	movlw	low _D
 10076  019CAE  6E0B               	movwf	(btemp+10)^0,c
 10077  019CB0  0E08               	movlw	high _D
 10078  019CB2  6E0C               	movwf	(btemp+11)^0,c
 10079  019CB4  0E28               	movlw	40
 10080  019CB6  260B               	addwf	(btemp+10)^0,f,c
 10081  019CB8  0E00               	movlw	0
 10082  019CBA  220C               	addwfc	(btemp+11)^0,f,c
 10083  019CBC  50F3               	movf	243,w,c
 10084  019CBE  260B               	addwf	(btemp+10)^0,f,c
 10085  019CC0  50F4               	movf	244,w,c
 10086  019CC2  220C               	addwfc	(btemp+11)^0,f,c
 10087  019CC4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10088  019CCA  0060  F033  FFE6   	movff	btemp+11,postinc1
 10089  019CD0  0E00               	movlw	0
 10090  019CD2  6EE6               	movwf	postinc1,c
 10091  019CD4  0E01               	movlw	1
 10092  019CD6  6EE6               	movwf	postinc1,c
 10093  019CD8  ECF9  F0D3         	call	_eaDogM_WriteStringAtPos	;wreg free
 10094                           
 10095                           ; BSR set to: 59
 10096                           ;mconfig.c: 99:  wait_lcd_done();
 10097  019CDC  ECDF  F0DF         	call	_wait_lcd_done	;wreg free
 10098                           
 10099                           ; BSR set to: 0
 10100                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 10101                           ;stkvar	_vterm @ sp[(0)+-1]
 10102  019CE0  0EFF               	movlw	-1
 10103  019CE2  50E3               	movf	plusw1,w,c
 10104  019CE4  0D78               	mullw	120
 10105  019CE6  0E2A               	movlw	low _D
 10106  019CE8  6E0B               	movwf	(btemp+10)^0,c
 10107  019CEA  0E08               	movlw	high _D
 10108  019CEC  6E0C               	movwf	(btemp+11)^0,c
 10109  019CEE  0E50               	movlw	80
 10110  019CF0  260B               	addwf	(btemp+10)^0,f,c
 10111  019CF2  0E00               	movlw	0
 10112  019CF4  220C               	addwfc	(btemp+11)^0,f,c
 10113  019CF6  50F3               	movf	243,w,c
 10114  019CF8  260B               	addwf	(btemp+10)^0,f,c
 10115  019CFA  50F4               	movf	244,w,c
 10116  019CFC  220C               	addwfc	(btemp+11)^0,f,c
 10117  019CFE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10118  019D04  0060  F033  FFE6   	movff	btemp+11,postinc1
 10119  019D0A  0E00               	movlw	0
 10120  019D0C  6EE6               	movwf	postinc1,c
 10121  019D0E  0E02               	movlw	2
 10122  019D10  6EE6               	movwf	postinc1,c
 10123  019D12  ECF9  F0D3         	call	_eaDogM_WriteStringAtPos	;wreg free
 10124  019D16                     l1679:
 10125                           
 10126                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 10127  019D16  52E5               	movf	postdec1,f,c
 10128  019D18  0012               	return		;funcret
 10129  019D1A                     __end_of_update_lcd:
 10130                           	opt callstack 0
 10131                           
 10132 ;; *************** function _eaDogM_WriteStringAtPos *****************
 10133 ;; Defined at:
 10134 ;;		line 195 in file "eadog.c"
 10135 ;; Parameters:    Size  Location     Type
 10136 ;;  r               1  [STACK] const unsigned char 
 10137 ;;  c               1  [STACK] const unsigned char 
 10138 ;;  strPtr          2  [STACK] PTR unsigned char 
 10139 ;;		 -> D.lcd(480), D(482), V(191), 
 10140 ;; Auto vars:     Size  Location     Type
 10141 ;;  row             1  [STACK] unsigned char 
 10142 ;; Return value:  Size  Location     Type
 10143 ;;                  1  [STACK] void 
 10144 ;; Registers used:
 10145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10146 ;; Tracked objects:
 10147 ;;		On entry : 3F/0
 10148 ;;		On exit  : 3F/3B
 10149 ;;		Unchanged: 0/0
 10150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10155 ;;Total ram usage:        0 bytes
 10156 ;; Hardware stack levels used:    1
 10157 ;; Hardware stack levels required when called:   26
 10158 ;; This function calls:
 10159 ;;		_eaDogM_WriteString
 10160 ;;		_send_lcd_cmd_dma
 10161 ;;		_send_lcd_data_dma
 10162 ;;		_wait_lcd_done
 10163 ;;		_wdtdelay
 10164 ;; This function is called by:
 10165 ;;		_update_lcd
 10166 ;;		_vterm_dump
 10167 ;; This function uses a reentrant model
 10168 ;;
 10169                           
 10170                           	psect	text35
 10171  01A7F2                     __ptext35:
 10172                           	opt callstack 0
 10173  01A7F2                     _eaDogM_WriteStringAtPos:
 10174                           	opt callstack 0
 10175                           
 10176                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10177  01A7F2  52E6               	movf	postinc1,f,c
 10178                           
 10179                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 10180                           
 10181                           ;incstack = 0
 10182  01A7F4  D014               	goto	l12750
 10183  01A7F6                     l12738:
 10184                           
 10185                           ;eadog.c: 201:   row = 0x40;
 10186                           ;stkvar	_row @ sp[(-1)+0]
 10187  01A7F6  0EFF               	movlw	-1
 10188  01A7F8  6AE3               	clrf	plusw1,c
 10189  01A7FA  8CE3               	bsf	plusw1,6,c
 10190                           
 10191                           ;eadog.c: 202:   break;
 10192  01A7FC  D026               	goto	l12752
 10193  01A7FE                     l12740:
 10194                           
 10195                           ;eadog.c: 204:   row = 0x14;
 10196                           ;stkvar	_row @ sp[(-1)+0]
 10197  01A7FE  0EFF               	movlw	-1
 10198  01A800  6AE3               	clrf	plusw1,c
 10199  01A802  84E3               	bsf	plusw1,2,c
 10200  01A804  88E3               	bsf	plusw1,4,c	;indir
 10201                           
 10202                           ;eadog.c: 205:   break;
 10203  01A806  D021               	goto	l12752
 10204  01A808                     l12742:
 10205                           
 10206                           ;eadog.c: 207:   row = 0x54;
 10207  01A808  0E54               	movlw	84
 10208  01A80A  6E0C               	movwf	(btemp+11)^0,c
 10209                           
 10210                           ;stkvar	_row @ sp[(-1)+0]
 10211  01A80C  0EFF               	movlw	-1
 10212  01A80E  0060  F033  FFE3   	movff	btemp+11,plusw1
 10213                           
 10214                           ;eadog.c: 208:   break;
 10215  01A814  D01A               	goto	l12752
 10216  01A816                     l12744:
 10217                           
 10218                           ;eadog.c: 210:   row = 0x1;
 10219                           ;stkvar	_row @ sp[(-1)+0]
 10220  01A816  0EFF               	movlw	-1
 10221  01A818  6AE3               	clrf	plusw1,c
 10222  01A81A  2AE3               	incf	plusw1,f,c
 10223                           
 10224                           ;eadog.c: 211:   break;
 10225  01A81C  D016               	goto	l12752
 10226  01A81E                     l12750:
 10227                           
 10228                           ;stkvar	_r @ sp[(-1)+-1]
 10229  01A81E  0EFE               	movlw	-2
 10230  01A820  50E3               	movf	plusw1,w,c
 10231  01A822  6E0B               	movwf	(btemp+10)^0,c
 10232  01A824  6A0C               	clrf	(btemp+11)^0,c
 10233                           
 10234                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10235                           ; Switch size 1, requested type "simple"
 10236                           ; Number of cases is 1, Range of values is 0 to 0
 10237                           ; switch strategies available:
 10238                           ; Name         Instructions Cycles
 10239                           ; simple_byte            4     3 (average)
 10240                           ;	Chosen strategy is simple_byte
 10241  01A826  500C               	movf	(btemp+11)^0,w,c
 10242  01A828  0A00               	xorlw	0	; case 0
 10243  01A82A  A4D8               	btfss	status,2,c
 10244  01A82C  D7E4               	goto	l12738
 10245                           
 10246                           ; Switch size 1, requested type "simple"
 10247                           ; Number of cases is 4, Range of values is 0 to 3
 10248                           ; switch strategies available:
 10249                           ; Name         Instructions Cycles
 10250                           ; simple_byte           13     7 (average)
 10251                           ;	Chosen strategy is simple_byte
 10252  01A82E  500B               	movf	(btemp+10)^0,w,c
 10253  01A830  0A00               	xorlw	0	; case 0
 10254  01A832  B4D8               	btfsc	status,2,c
 10255  01A834  D7E0               	goto	l12738
 10256  01A836  0A01               	xorlw	1	; case 1
 10257  01A838  B4D8               	btfsc	status,2,c
 10258  01A83A  D7E1               	goto	l12740
 10259  01A83C  0A03               	xorlw	3	; case 2
 10260  01A83E  B4D8               	btfsc	status,2,c
 10261  01A840  D7E3               	goto	l12742
 10262  01A842  0A01               	xorlw	1	; case 3
 10263  01A844  B4D8               	btfsc	status,2,c
 10264  01A846  D7E7               	goto	l12744
 10265  01A848  D7D6               	goto	l12738
 10266  01A84A                     l12752:
 10267                           
 10268                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 10269  01A84A  0E45               	movlw	69
 10270  01A84C  6EE6               	movwf	postinc1,c
 10271  01A84E  ECA3  F0DF         	call	_send_lcd_cmd_dma	;wreg free
 10272                           
 10273                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 10274                           ;stkvar	_c @ sp[(-1)+-2]
 10275  01A852  0EFD               	movlw	-3
 10276  01A854  006F FF8C  F00C    	movff	plusw1,btemp+11
 10277                           
 10278                           ;stkvar	_row @ sp[(-1)+0]
 10279  01A85A  0EFF               	movlw	-1
 10280  01A85C  50E3               	movf	plusw1,w,c
 10281  01A85E  240C               	addwf	(btemp+11)^0,w,c
 10282  01A860  6EE6               	movwf	postinc1,c
 10283  01A862  ECF2  F0D9         	call	_send_lcd_data_dma	;wreg free
 10284                           
 10285                           ; BSR set to: 59
 10286                           ;eadog.c: 218:  wait_lcd_done();
 10287  01A866  ECDF  F0DF         	call	_wait_lcd_done	;wreg free
 10288                           
 10289                           ; BSR set to: 0
 10290                           ;eadog.c: 219:  wdtdelay(8);
 10291  01A86A  0E08               	movlw	8
 10292  01A86C  6EE6               	movwf	postinc1,c
 10293  01A86E  0E00               	movlw	0
 10294  01A870  6EE6               	movwf	postinc1,c
 10295  01A872  0E00               	movlw	0
 10296  01A874  6EE6               	movwf	postinc1,c
 10297  01A876  0E00               	movlw	0
 10298  01A878  6EE6               	movwf	postinc1,c
 10299  01A87A  EC1F  F0D9         	call	_wdtdelay	;wreg free
 10300                           
 10301                           ;eadog.c: 220:  eaDogM_WriteString(strPtr);
 10302                           ;stkvar	_strPtr @ sp[(-1)+-4]
 10303  01A87E  0EFB               	movlw	-5
 10304  01A880  006F FF8F FFE6     	movff	plusw1,postinc1
 10305  01A886  006F FF8F FFE6     	movff	plusw1,postinc1
 10306  01A88C  EC4D  F0D4         	call	_eaDogM_WriteString	;wreg free
 10307                           
 10308                           ; BSR set to: 59
 10309                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 10310  01A890  0EFB               	movlw	251
 10311  01A892  26E1               	addwf	fsr1l,f,c
 10312  01A894  0EFF               	movlw	255
 10313  01A896  22E2               	addwfc	fsr1h,f,c
 10314  01A898  0012               	return		;funcret
 10315  01A89A                     __end_of_eaDogM_WriteStringAtPos:
 10316                           	opt callstack 0
 10317                           
 10318 ;; *************** function _send_lcd_cmd_dma *****************
 10319 ;; Defined at:
 10320 ;;		line 171 in file "eadog.c"
 10321 ;; Parameters:    Size  Location     Type
 10322 ;;  strPtr          1  [STACK] const unsigned char 
 10323 ;; Auto vars:     Size  Location     Type
 10324 ;;		None
 10325 ;; Return value:  Size  Location     Type
 10326 ;;                  1  [STACK] void 
 10327 ;; Registers used:
 10328 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10329 ;; Tracked objects:
 10330 ;;		On entry : 0/3D
 10331 ;;		On exit  : 3F/0
 10332 ;;		Unchanged: 0/0
 10333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10338 ;;Total ram usage:        0 bytes
 10339 ;; Hardware stack levels used:    1
 10340 ;; Hardware stack levels required when called:   25
 10341 ;; This function calls:
 10342 ;;		_send_lcd_data_dma
 10343 ;;		_wait_lcd_done
 10344 ;; This function is called by:
 10345 ;;		_eaDogM_WriteStringAtPos
 10346 ;;		_eaDogM_WriteCommand
 10347 ;; This function uses a reentrant model
 10348 ;;
 10349                           
 10350                           	psect	text36
 10351  01BF46                     __ptext36:
 10352                           	opt callstack 0
 10353  01BF46                     _send_lcd_cmd_dma:
 10354                           	opt callstack 3
 10355                           
 10356                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 10357                           
 10358                           ; BSR set to: 59
 10359                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10360                           ;incstack = 0
 10361  01BF46  0EFE               	movlw	254
 10362  01BF48  6EE6               	movwf	postinc1,c
 10363  01BF4A  ECF2  F0D9         	call	_send_lcd_data_dma	;wreg free
 10364                           
 10365                           ; BSR set to: 59
 10366                           ;eadog.c: 174:  wait_lcd_done();
 10367  01BF4E  ECDF  F0DF         	call	_wait_lcd_done	;wreg free
 10368                           
 10369                           ; BSR set to: 0
 10370                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 10371                           ;stkvar	_strPtr @ sp[(0)+-1]
 10372  01BF52  0EFF               	movlw	-1
 10373  01BF54  50E3               	movf	plusw1,w,c
 10374  01BF56  6EE6               	movwf	postinc1,c
 10375  01BF58  ECF2  F0D9         	call	_send_lcd_data_dma	;wreg free
 10376                           
 10377                           ;eadog.c: 176:  wait_lcd_done();
 10378  01BF5C  ECDF  F0DF         	call	_wait_lcd_done	;wreg free
 10379                           
 10380                           ; BSR set to: 0
 10381                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 10382  01BF60  52E5               	movf	postdec1,f,c
 10383  01BF62  0012               	return		;funcret
 10384  01BF64                     __end_of_send_lcd_cmd_dma:
 10385                           	opt callstack 0
 10386                           
 10387 ;; *************** function _wait_lcd_done *****************
 10388 ;; Defined at:
 10389 ;;		line 444 in file "eadog.c"
 10390 ;; Parameters:    Size  Location     Type
 10391 ;;		None
 10392 ;; Auto vars:     Size  Location     Type
 10393 ;;		None
 10394 ;; Return value:  Size  Location     Type
 10395 ;;                  1  [STACK] void 
 10396 ;; Registers used:
 10397 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 10398 ;; Tracked objects:
 10399 ;;		On entry : 0/0
 10400 ;;		On exit  : 3F/0
 10401 ;;		Unchanged: 0/0
 10402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10407 ;;Total ram usage:        0 bytes
 10408 ;; Hardware stack levels used:    1
 10409 ;; Hardware stack levels required when called:   16
 10410 ;; This function calls:
 10411 ;;		_wdtdelay
 10412 ;; This function is called by:
 10413 ;;		_send_lcd_cmd_dma
 10414 ;;		_eaDogM_WriteStringAtPos
 10415 ;;		_update_lcd
 10416 ;;		_vterm_dump
 10417 ;; This function uses a reentrant model
 10418 ;;
 10419                           
 10420                           	psect	text37
 10421  01BFBE                     __ptext37:
 10422                           	opt callstack 0
 10423  01BFBE                     _wait_lcd_done:
 10424                           	opt callstack 13
 10425                           
 10426                           ;eadog.c: 446:  while (spi_link.LCD_DATA);
 10427                           
 10428                           ; BSR set to: 0
 10429                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10430                           ;incstack = 0
 10431  01BFBE  0100               	movlb	0	; () banked
 10432  01BFC0  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
 10433  01BFC2  D7FD               	goto	_wait_lcd_done
 10434                           
 10435                           ; BSR set to: 0
 10436                           ;eadog.c: 447:  wdtdelay(50);
 10437  01BFC4  0E32               	movlw	50
 10438  01BFC6  6EE6               	movwf	postinc1,c
 10439  01BFC8  0E00               	movlw	0
 10440  01BFCA  6EE6               	movwf	postinc1,c
 10441  01BFCC  0E00               	movlw	0
 10442  01BFCE  6EE6               	movwf	postinc1,c
 10443  01BFD0  0E00               	movlw	0
 10444  01BFD2  6EE6               	movwf	postinc1,c
 10445  01BFD4  EC1F  F0D9         	call	_wdtdelay	;wreg free
 10446                           
 10447                           ; BSR set to: 0
 10448                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 10449  01BFD8  0012               	return		;funcret
 10450  01BFDA                     __end_of_wait_lcd_done:
 10451                           	opt callstack 0
 10452                           
 10453 ;; *************** function _wdtdelay *****************
 10454 ;; Defined at:
 10455 ;;		line 23 in file "eadog.c"
 10456 ;; Parameters:    Size  Location     Type
 10457 ;;  delay           4  [STACK] const unsigned long 
 10458 ;; Auto vars:     Size  Location     Type
 10459 ;;		None
 10460 ;; Return value:  Size  Location     Type
 10461 ;;                  1  [STACK] void 
 10462 ;; Registers used:
 10463 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 10464 ;; Tracked objects:
 10465 ;;		On entry : 2/3D
 10466 ;;		On exit  : 3F/0
 10467 ;;		Unchanged: 0/0
 10468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10473 ;;Total ram usage:        0 bytes
 10474 ;; Hardware stack levels used:    1
 10475 ;; Hardware stack levels required when called:   15
 10476 ;; This function calls:
 10477 ;;		Nothing
 10478 ;; This function is called by:
 10479 ;;		_init_display
 10480 ;;		_send_lcd_data
 10481 ;;		_send_lcd_cmd
 10482 ;;		_send_lcd_cmd_long
 10483 ;;		_eaDogM_WriteStringAtPos
 10484 ;;		_wait_lcd_done
 10485 ;; This function uses a reentrant model
 10486 ;;
 10487                           
 10488                           	psect	text38
 10489  01B23E                     __ptext38:
 10490                           	opt callstack 0
 10491  01B23E                     _wdtdelay:
 10492                           	opt callstack 13
 10493                           
 10494                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 10495                           
 10496                           ; BSR set to: 0
 10497                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10498                           ;incstack = 0
 10499  01B23E  0100               	movlb	0	; () banked
 10500  01B240  6B9A               	clrf	wdtdelay@dcount& (0+255),b
 10501  01B242  6B9B               	clrf	(wdtdelay@dcount+1)& (0+255),b
 10502  01B244  6B9C               	clrf	(wdtdelay@dcount+2)& (0+255),b
 10503  01B246  6B9D               	clrf	(wdtdelay@dcount+3)& (0+255),b
 10504  01B248                     l1459:
 10505                           
 10506                           ; BSR set to: 0
 10507                           ;eadog.c: 28:   __nop();
 10508  01B248  F000               	nop	
 10509  01B24A  0004               	clrwdt		;# 
 10510                           
 10511                           ;eadog.c: 30:  };
 10512  01B24C  0E01               	movlw	1
 10513  01B24E  0100               	movlb	0	; () banked
 10514  01B250  279A               	addwf	wdtdelay@dcount& (0+255),f,b
 10515  01B252  0E00               	movlw	0
 10516  01B254  239B               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 10517  01B256  239C               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 10518  01B258  239D               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 10519                           
 10520                           ; BSR set to: 0
 10521                           ;stkvar	_delay @ sp[(0)+-4]
 10522  01B25A  0EFC               	movlw	-4
 10523  01B25C  006F FF8C  F001    	movff	plusw1,btemp
 10524  01B262  519A               	movf	wdtdelay@dcount& (0+255),w,b
 10525  01B264  5C01               	subwf	btemp^0,w,c
 10526  01B266  0EFD               	movlw	-3
 10527  01B268  006F FF8C  F001    	movff	plusw1,btemp
 10528  01B26E  519B               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 10529  01B270  5801               	subwfb	btemp^0,w,c
 10530  01B272  0EFE               	movlw	-2
 10531  01B274  006F FF8C  F001    	movff	plusw1,btemp
 10532  01B27A  519C               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 10533  01B27C  5801               	subwfb	btemp^0,w,c
 10534  01B27E  0EFF               	movlw	-1
 10535  01B280  006F FF8C  F001    	movff	plusw1,btemp
 10536  01B286  519D               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 10537  01B288  5801               	subwfb	btemp^0,w,c
 10538  01B28A  B0D8               	btfsc	status,0,c
 10539  01B28C  D7DD               	goto	l1459
 10540                           
 10541                           ; BSR set to: 0
 10542                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 10543  01B28E  52E5               	movf	postdec1,f,c
 10544  01B290  52E5               	movf	postdec1,f,c
 10545  01B292  52E5               	movf	postdec1,f,c
 10546  01B294  52E5               	movf	postdec1,f,c
 10547  01B296  0012               	return		;funcret
 10548  01B298                     __end_of_wdtdelay:
 10549                           	opt callstack 0
 10550                           
 10551 ;; *************** function _send_lcd_data_dma *****************
 10552 ;; Defined at:
 10553 ;;		line 182 in file "eadog.c"
 10554 ;; Parameters:    Size  Location     Type
 10555 ;;  strPtr          1  [STACK] const unsigned char 
 10556 ;; Auto vars:     Size  Location     Type
 10557 ;;		None
 10558 ;; Return value:  Size  Location     Type
 10559 ;;                  1  [STACK] void 
 10560 ;; Registers used:
 10561 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10562 ;; Tracked objects:
 10563 ;;		On entry : 0/0
 10564 ;;		On exit  : 3F/3B
 10565 ;;		Unchanged: 0/0
 10566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10571 ;;Total ram usage:        0 bytes
 10572 ;; Hardware stack levels used:    1
 10573 ;; Hardware stack levels required when called:   24
 10574 ;; This function calls:
 10575 ;;		_printf
 10576 ;;		_ringBufS_flush
 10577 ;;		_start_lcd
 10578 ;;		_wait_lcd_set
 10579 ;; This function is called by:
 10580 ;;		_send_lcd_cmd_dma
 10581 ;;		_eaDogM_WriteStringAtPos
 10582 ;; This function uses a reentrant model
 10583 ;;
 10584                           
 10585                           	psect	text39
 10586  01B3E4                     __ptext39:
 10587                           	opt callstack 0
 10588  01B3E4                     _send_lcd_data_dma:
 10589                           	opt callstack 4
 10590                           
 10591                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 10592                           
 10593                           ; BSR set to: 0
 10594                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10595                           ;incstack = 0
 10596  01B3E4  ECD2  F0E0         	call	_wait_lcd_set	;wreg free
 10597                           
 10598                           ; BSR set to: 0
 10599                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 10600  01B3E8  0E00               	movlw	0
 10601  01B3EA  6EE6               	movwf	postinc1,c
 10602  01B3EC  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 10603  01B3F2  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 10604  01B3F8  EC3D  F0D5         	call	_ringBufS_flush	;wreg free
 10605  01B3FC  94BC               	bcf	188,2,c	;volatile
 10606                           
 10607                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 10608  01B3FE  013B               	movlb	59	; () banked
 10609  01B400  9FFC               	bcf	252,7,b	;volatile
 10610                           
 10611                           ; BSR set to: 59
 10612                           ;eadog.c: 189:  DMA1SSZ = 1;
 10613  01B402  0E00               	movlw	0
 10614  01B404  6FF8               	movwf	248,b	;volatile
 10615  01B406  0E01               	movlw	1
 10616  01B408  6FF7               	movwf	247,b	;volatile
 10617                           
 10618                           ; BSR set to: 59
 10619                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 10620  01B40A  8FFC               	bsf	252,7,b	;volatile
 10621                           
 10622                           ; BSR set to: 59
 10623                           ;eadog.c: 191:  printf("%c", strPtr);
 10624                           ;stkvar	_strPtr @ sp[(0)+-1]
 10625  01B40C  0EFF               	movlw	-1
 10626  01B40E  50E3               	movf	plusw1,w,c
 10627  01B410  6EE6               	movwf	postinc1,c
 10628  01B412  0E00               	movlw	0
 10629  01B414  6EE6               	movwf	postinc1,c
 10630  01B416  0EF9               	movlw	low STR_44
 10631  01B418  6EE6               	movwf	postinc1,c
 10632  01B41A  0EFF               	movlw	high STR_44
 10633  01B41C  6EE6               	movwf	postinc1,c
 10634  01B41E  0E04               	movlw	4
 10635  01B420  6EE6               	movwf	postinc1,c
 10636  01B422  EC60  F0D8         	call	_printf	;wreg free
 10637                           
 10638                           ; BSR set to: 0
 10639                           ;eadog.c: 192:  start_lcd();
 10640  01B426  ECD5  F0E0         	call	_start_lcd	;wreg free
 10641                           
 10642                           ; BSR set to: 59
 10643                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 10644  01B42A  52E5               	movf	postdec1,f,c
 10645  01B42C  0012               	return		;funcret
 10646  01B42E                     __end_of_send_lcd_data_dma:
 10647                           	opt callstack 0
 10648                           
 10649 ;; *************** function _eaDogM_WriteString *****************
 10650 ;; Defined at:
 10651 ;;		line 151 in file "eadog.c"
 10652 ;; Parameters:    Size  Location     Type
 10653 ;;  strPtr          2  [STACK] PTR unsigned char 
 10654 ;;		 -> D.lcd(480), D(482), V(191), 
 10655 ;; Auto vars:     Size  Location     Type
 10656 ;;		None
 10657 ;; Return value:  Size  Location     Type
 10658 ;;                  1  [STACK] void 
 10659 ;; Registers used:
 10660 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10661 ;; Tracked objects:
 10662 ;;		On entry : 3F/0
 10663 ;;		On exit  : 3F/3B
 10664 ;;		Unchanged: 0/0
 10665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10670 ;;Total ram usage:        0 bytes
 10671 ;; Hardware stack levels used:    1
 10672 ;; Hardware stack levels required when called:   24
 10673 ;; This function calls:
 10674 ;;		_printf
 10675 ;;		_ringBufS_flush
 10676 ;;		_start_lcd
 10677 ;;		_strlen
 10678 ;;		_wait_lcd_set
 10679 ;; This function is called by:
 10680 ;;		_eaDogM_WriteStringAtPos
 10681 ;; This function uses a reentrant model
 10682 ;;
 10683                           
 10684                           	psect	text40
 10685  01A89A                     __ptext40:
 10686                           	opt callstack 0
 10687  01A89A                     _eaDogM_WriteString:
 10688                           	opt callstack 4
 10689                           
 10690                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 10691                           
 10692                           ; BSR set to: 59
 10693                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10694                           ;incstack = 0
 10695  01A89A  ECD2  F0E0         	call	_wait_lcd_set	;wreg free
 10696                           
 10697                           ; BSR set to: 0
 10698                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 10699  01A89E  0E00               	movlw	0
 10700  01A8A0  6EE6               	movwf	postinc1,c
 10701  01A8A2  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 10702  01A8A8  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 10703  01A8AE  EC3D  F0D5         	call	_ringBufS_flush	;wreg free
 10704  01A8B2  94BC               	bcf	188,2,c	;volatile
 10705                           
 10706                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 10707                           ;stkvar	_strPtr @ sp[(0)+-2]
 10708  01A8B4  0EFE               	movlw	-2
 10709  01A8B6  006F FF8F FFE6     	movff	plusw1,postinc1
 10710  01A8BC  006F FF8F FFE6     	movff	plusw1,postinc1
 10711  01A8C2  ECA0  F0D4         	call	_strlen	;wreg free
 10712  01A8C6  5002               	movf	(btemp+1)^0,w,c
 10713  01A8C8  E104               	bnz	u12240
 10714  01A8CA  0E41               	movlw	65
 10715  01A8CC  5C01               	subwf	btemp^0,w,c
 10716  01A8CE  A0D8               	btfss	status,0,c
 10717  01A8D0  D010               	goto	l12694
 10718  01A8D2                     u12240:
 10719                           
 10720                           ;stkvar	_strPtr @ sp[(0)+-2]
 10721  01A8D2  0EFE               	movlw	-2
 10722  01A8D4  006F FF8C  F00B    	movff	plusw1,btemp+10
 10723  01A8DA  0EFF               	movlw	-1
 10724  01A8DC  006F FF8C  F00C    	movff	plusw1,btemp+11
 10725  01A8E2  0E40               	movlw	64
 10726  01A8E4  240B               	addwf	(btemp+10)^0,w,c
 10727  01A8E6  6ED9               	movwf	fsr2l,c
 10728  01A8E8  0E00               	movlw	0
 10729  01A8EA  200C               	addwfc	(btemp+11)^0,w,c
 10730  01A8EC  6EDA               	movwf	fsr2h,c
 10731  01A8EE  0E00               	movlw	0
 10732  01A8F0  6EDF               	movwf	indf2,c
 10733  01A8F2                     l12694:
 10734                           
 10735                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 10736  01A8F2  013B               	movlb	59	; () banked
 10737  01A8F4  9FFC               	bcf	252,7,b	;volatile
 10738                           
 10739                           ; BSR set to: 59
 10740                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 10741                           ;stkvar	_strPtr @ sp[(0)+-2]
 10742  01A8F6  0EFE               	movlw	-2
 10743  01A8F8  006F FF8F FFE6     	movff	plusw1,postinc1
 10744  01A8FE  006F FF8F FFE6     	movff	plusw1,postinc1
 10745  01A904  ECA0  F0D4         	call	_strlen	;wreg free
 10746  01A908  0060  F007  FBF7   	movff	btemp,15351	;volatile
 10747  01A90E  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
 10748                           
 10749                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 10750  01A914  013B               	movlb	59	; () banked
 10751  01A916  8FFC               	bsf	252,7,b	;volatile
 10752                           
 10753                           ; BSR set to: 59
 10754                           ;eadog.c: 161:  printf("%s", strPtr);
 10755                           ;stkvar	_strPtr @ sp[(0)+-2]
 10756  01A918  0EFE               	movlw	-2
 10757  01A91A  006F FF8F FFE6     	movff	plusw1,postinc1
 10758  01A920  006F FF8F FFE6     	movff	plusw1,postinc1
 10759  01A926  0EFC               	movlw	low STR_43
 10760  01A928  6EE6               	movwf	postinc1,c
 10761  01A92A  0EFF               	movlw	high STR_43
 10762  01A92C  6EE6               	movwf	postinc1,c
 10763  01A92E  0E04               	movlw	4
 10764  01A930  6EE6               	movwf	postinc1,c
 10765  01A932  EC60  F0D8         	call	_printf	;wreg free
 10766                           
 10767                           ; BSR set to: 0
 10768                           ;eadog.c: 162:  start_lcd();
 10769  01A936  ECD5  F0E0         	call	_start_lcd	;wreg free
 10770                           
 10771                           ; BSR set to: 59
 10772                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 10773  01A93A  52E5               	movf	postdec1,f,c
 10774  01A93C  52E5               	movf	postdec1,f,c
 10775  01A93E  0012               	return		;funcret
 10776  01A940                     __end_of_eaDogM_WriteString:
 10777                           	opt callstack 0
 10778                           
 10779 ;; *************** function _wait_lcd_set *****************
 10780 ;; Defined at:
 10781 ;;		line 434 in file "eadog.c"
 10782 ;; Parameters:    Size  Location     Type
 10783 ;;		None
 10784 ;; Auto vars:     Size  Location     Type
 10785 ;;		None
 10786 ;; Return value:  Size  Location     Type
 10787 ;;                  1  [STACK] void 
 10788 ;; Registers used:
 10789 ;;		None
 10790 ;; Tracked objects:
 10791 ;;		On entry : 0/0
 10792 ;;		On exit  : 3F/0
 10793 ;;		Unchanged: 0/0
 10794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10799 ;;Total ram usage:        0 bytes
 10800 ;; Hardware stack levels used:    1
 10801 ;; Hardware stack levels required when called:   15
 10802 ;; This function calls:
 10803 ;;		Nothing
 10804 ;; This function is called by:
 10805 ;;		_eaDogM_WriteString
 10806 ;;		_send_lcd_data_dma
 10807 ;; This function uses a reentrant model
 10808 ;;
 10809                           
 10810                           	psect	text41
 10811  01C1A4                     __ptext41:
 10812                           	opt callstack 0
 10813  01C1A4                     _wait_lcd_set:
 10814                           	opt callstack 12
 10815                           
 10816                           ;eadog.c: 436:  spi_link.LCD_DATA = 1;
 10817                           
 10818                           ; BSR set to: 59
 10819                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10820                           ;incstack = 0
 10821  01C1A4  0100               	movlb	0	; () banked
 10822  01C1A6  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 10823                           
 10824                           ; BSR set to: 0
 10825                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 10826  01C1A8  0012               	return		;funcret
 10827  01C1AA                     __end_of_wait_lcd_set:
 10828                           	opt callstack 0
 10829                           
 10830 ;; *************** function _start_lcd *****************
 10831 ;; Defined at:
 10832 ;;		line 429 in file "eadog.c"
 10833 ;; Parameters:    Size  Location     Type
 10834 ;;		None
 10835 ;; Auto vars:     Size  Location     Type
 10836 ;;		None
 10837 ;; Return value:  Size  Location     Type
 10838 ;;                  1  [STACK] void 
 10839 ;; Registers used:
 10840 ;;		None
 10841 ;; Tracked objects:
 10842 ;;		On entry : 3F/0
 10843 ;;		On exit  : 3F/3B
 10844 ;;		Unchanged: 0/0
 10845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10850 ;;Total ram usage:        0 bytes
 10851 ;; Hardware stack levels used:    1
 10852 ;; Hardware stack levels required when called:   15
 10853 ;; This function calls:
 10854 ;;		Nothing
 10855 ;; This function is called by:
 10856 ;;		_eaDogM_WriteString
 10857 ;;		_send_lcd_data_dma
 10858 ;; This function uses a reentrant model
 10859 ;;
 10860                           
 10861                           	psect	text42
 10862  01C1AA                     __ptext42:
 10863                           	opt callstack 0
 10864  01C1AA                     _start_lcd:
 10865                           	opt callstack 12
 10866                           
 10867                           ;eadog.c: 431:  DMA1CON0bits.DMA1SIRQEN = 1;
 10868                           
 10869                           ; BSR set to: 0
 10870                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10871                           ;incstack = 0
 10872  01C1AA  013B               	movlb	59	; () banked
 10873  01C1AC  8DFC               	bsf	252,6,b	;volatile
 10874                           
 10875                           ; BSR set to: 59
 10876                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 10877  01C1AE  0012               	return		;funcret
 10878  01C1B0                     __end_of_start_lcd:
 10879                           	opt callstack 0
 10880                           
 10881 ;; *************** function _ringBufS_flush *****************
 10882 ;; Defined at:
 10883 ;;		line 76 in file "ringbufs.c"
 10884 ;; Parameters:    Size  Location     Type
 10885 ;;  _this           2  [STACK] PTR struct ringBufS_t
 10886 ;;		 -> ring_buf1(67), 
 10887 ;;  clearBuffer     1  [STACK] const char 
 10888 ;; Auto vars:     Size  Location     Type
 10889 ;;		None
 10890 ;; Return value:  Size  Location     Type
 10891 ;;                  1  [STACK] void 
 10892 ;; Registers used:
 10893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10894 ;; Tracked objects:
 10895 ;;		On entry : 3F/0
 10896 ;;		On exit  : 0/0
 10897 ;;		Unchanged: 0/0
 10898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10903 ;;Total ram usage:        0 bytes
 10904 ;; Hardware stack levels used:    1
 10905 ;; Hardware stack levels required when called:   16
 10906 ;; This function calls:
 10907 ;;		_memset
 10908 ;; This function is called by:
 10909 ;;		_eaDogM_WriteString
 10910 ;;		_send_lcd_data_dma
 10911 ;; This function uses a reentrant model
 10912 ;;
 10913                           
 10914                           	psect	text43
 10915  01AA7A                     __ptext43:
 10916                           	opt callstack 0
 10917  01AA7A                     _ringBufS_flush:
 10918                           	opt callstack 11
 10919                           
 10920                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 10921                           ;stkvar	__this @ sp[(0)+-2]
 10922                           
 10923                           ; BSR set to: 59
 10924                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10925                           ;incstack = 0
 10926  01AA7A  0EFE               	movlw	-2
 10927  01AA7C  006F FF8C  F00B    	movff	plusw1,btemp+10
 10928  01AA82  0EFF               	movlw	-1
 10929  01AA84  006F FF8C  F00C    	movff	plusw1,btemp+11
 10930  01AA8A  0E42               	movlw	66
 10931  01AA8C  240B               	addwf	(btemp+10)^0,w,c
 10932  01AA8E  6ED9               	movwf	fsr2l,c
 10933  01AA90  0E00               	movlw	0
 10934  01AA92  200C               	addwfc	(btemp+11)^0,w,c
 10935  01AA94  6EDA               	movwf	fsr2h,c
 10936  01AA96  0E00               	movlw	0
 10937  01AA98  6EDF               	movwf	indf2,c
 10938                           
 10939                           ;ringbufs.c: 79:  _this->head = 0;
 10940                           ;stkvar	__this @ sp[(0)+-2]
 10941  01AA9A  0EFE               	movlw	-2
 10942  01AA9C  006F FF8C  F00B    	movff	plusw1,btemp+10
 10943  01AAA2  0EFF               	movlw	-1
 10944  01AAA4  006F FF8C  F00C    	movff	plusw1,btemp+11
 10945  01AAAA  0E40               	movlw	64
 10946  01AAAC  240B               	addwf	(btemp+10)^0,w,c
 10947  01AAAE  6ED9               	movwf	fsr2l,c
 10948  01AAB0  0E00               	movlw	0
 10949  01AAB2  200C               	addwfc	(btemp+11)^0,w,c
 10950  01AAB4  6EDA               	movwf	fsr2h,c
 10951  01AAB6  0E00               	movlw	0
 10952  01AAB8  6EDF               	movwf	indf2,c
 10953                           
 10954                           ;ringbufs.c: 80:  _this->tail = 0;
 10955                           ;stkvar	__this @ sp[(0)+-2]
 10956  01AABA  0EFE               	movlw	-2
 10957  01AABC  006F FF8C  F00B    	movff	plusw1,btemp+10
 10958  01AAC2  0EFF               	movlw	-1
 10959  01AAC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 10960  01AACA  0E41               	movlw	65
 10961  01AACC  240B               	addwf	(btemp+10)^0,w,c
 10962  01AACE  6ED9               	movwf	fsr2l,c
 10963  01AAD0  0E00               	movlw	0
 10964  01AAD2  200C               	addwfc	(btemp+11)^0,w,c
 10965  01AAD4  6EDA               	movwf	fsr2h,c
 10966  01AAD6  0E00               	movlw	0
 10967  01AAD8  6EDF               	movwf	indf2,c
 10968                           
 10969                           ;ringbufs.c: 81:  if (clearBuffer) {
 10970                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 10971  01AADA  0EFD               	movlw	-3
 10972  01AADC  50E3               	movf	plusw1,w,c
 10973  01AADE  B4D8               	btfsc	status,2,c
 10974  01AAE0  D011               	goto	l1588
 10975                           
 10976                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 10977  01AAE2  0E40               	movlw	64
 10978  01AAE4  6EE6               	movwf	postinc1,c
 10979  01AAE6  0E00               	movlw	0
 10980  01AAE8  6EE6               	movwf	postinc1,c
 10981  01AAEA  0E00               	movlw	0
 10982  01AAEC  6EE6               	movwf	postinc1,c
 10983  01AAEE  0E00               	movlw	0
 10984  01AAF0  6EE6               	movwf	postinc1,c
 10985                           
 10986                           ;stkvar	__this @ sp[(-4)+-2]
 10987  01AAF2  0EFA               	movlw	-6
 10988  01AAF4  006F FF8F FFE6     	movff	plusw1,postinc1
 10989  01AAFA  006F FF8F FFE6     	movff	plusw1,postinc1
 10990  01AB00  EC2A  F0B7         	call	_memset	;wreg free
 10991  01AB04                     l1588:
 10992                           
 10993                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 10994  01AB04  52E5               	movf	postdec1,f,c
 10995  01AB06  52E5               	movf	postdec1,f,c
 10996  01AB08  52E5               	movf	postdec1,f,c
 10997  01AB0A  0012               	return		;funcret
 10998  01AB0C                     __end_of_ringBufS_flush:
 10999                           	opt callstack 0
 11000                           
 11001 ;; *************** function _memset *****************
 11002 ;; Defined at:
 11003 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 11004 ;; Parameters:    Size  Location     Type
 11005 ;;  dest            2  [STACK] PTR void 
 11006 ;;		 -> ring_buf2(67), ring_buf1(67), 
 11007 ;;  c               2  [STACK] int 
 11008 ;;  n               2  [STACK] unsigned int 
 11009 ;; Auto vars:     Size  Location     Type
 11010 ;;  s               2  [STACK] PTR unsigned char 
 11011 ;;		 -> ring_buf2(67), ring_buf1(67), 
 11012 ;;  k               2  [STACK] unsigned int 
 11013 ;; Return value:  Size  Location     Type
 11014 ;;                  2  [STACK] PTR void 
 11015 ;; Registers used:
 11016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 11017 ;; Tracked objects:
 11018 ;;		On entry : 0/0
 11019 ;;		On exit  : 0/0
 11020 ;;		Unchanged: 0/0
 11021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11026 ;;Total ram usage:        0 bytes
 11027 ;; Hardware stack levels used:    1
 11028 ;; Hardware stack levels required when called:   15
 11029 ;; This function calls:
 11030 ;;		Nothing
 11031 ;; This function is called by:
 11032 ;;		_ringBufS_init
 11033 ;;		_ringBufS_flush
 11034 ;; This function uses a reentrant model
 11035 ;;
 11036                           
 11037                           	psect	text44
 11038  016E54                     __ptext44:
 11039                           	opt callstack 0
 11040  016E54                     _memset:
 11041                           	opt callstack 0
 11042                           
 11043                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11044  016E54  52E6               	movf	postinc1,f,c
 11045  016E56  52E6               	movf	postinc1,f,c
 11046  016E58  52E6               	movf	postinc1,f,c
 11047  016E5A  52E6               	movf	postinc1,f,c
 11048                           
 11049                           ;stkvar	_dest @ sp[(-4)+-2]
 11050                           
 11051                           ;incstack = 0
 11052  016E5C  0EFA               	movlw	-6
 11053  016E5E  006F FF8C  F00B    	movff	plusw1,btemp+10
 11054  016E64  0EFB               	movlw	-5
 11055  016E66  006F FF8C  F00C    	movff	plusw1,btemp+11
 11056                           
 11057                           ;stkvar	_s @ sp[(-4)+0]
 11058  016E6C  0EFD               	movlw	-3
 11059  016E6E  0060  F033  FFE3   	movff	btemp+11,plusw1
 11060  016E74  0EFC               	movlw	-4
 11061  016E76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11062                           
 11063                           ;stkvar	_n @ sp[(-4)+-6]
 11064  016E7C  0EF6               	movlw	-10
 11065  016E7E  006F FF8C  F001    	movff	plusw1,btemp
 11066  016E84  0EF7               	movlw	-9
 11067  016E86  50E3               	movf	plusw1,w,c
 11068  016E88  1001               	iorwf	btemp^0,w,c
 11069  016E8A  B4D8               	btfsc	status,2,c
 11070  016E8C  D154               	goto	u10790
 11071                           
 11072                           ;stkvar	_c @ sp[(-4)+-4]
 11073                           ;stkvar	_s @ sp[(-4)+0]
 11074  016E8E  0EFC               	movlw	-4
 11075  016E90  006F FF8F FFD9     	movff	plusw1,fsr2l
 11076  016E96  0EFD               	movlw	-3
 11077  016E98  006F FF8F FFDA     	movff	plusw1,fsr2h
 11078  016E9E  0EF8               	movlw	-8
 11079  016EA0  006F FF8F FFDF     	movff	plusw1,indf2
 11080                           
 11081                           ;stkvar	_c @ sp[(-4)+-4]
 11082                           ;stkvar	_n @ sp[(-4)+-6]
 11083                           ;stkvar	_s @ sp[(-4)+0]
 11084  016EA6  0EFC               	movlw	-4
 11085  016EA8  006F FF8C  F00B    	movff	plusw1,btemp+10
 11086  016EAE  0EFD               	movlw	-3
 11087  016EB0  006F FF8C  F00C    	movff	plusw1,btemp+11
 11088  016EB6  0EF6               	movlw	-10
 11089  016EB8  50E3               	movf	plusw1,w,c
 11090  016EBA  260B               	addwf	(btemp+10)^0,f,c
 11091  016EBC  0EF7               	movlw	-9
 11092  016EBE  50E3               	movf	plusw1,w,c
 11093  016EC0  220C               	addwfc	(btemp+11)^0,f,c
 11094  016EC2  0EFF               	movlw	255
 11095  016EC4  240B               	addwf	(btemp+10)^0,w,c
 11096  016EC6  6ED9               	movwf	fsr2l,c
 11097  016EC8  0EFF               	movlw	255
 11098  016ECA  200C               	addwfc	(btemp+11)^0,w,c
 11099  016ECC  6EDA               	movwf	fsr2h,c
 11100  016ECE  0EF8               	movlw	-8
 11101  016ED0  006F FF8F FFDF     	movff	plusw1,indf2
 11102                           
 11103                           ;stkvar	_n @ sp[(-4)+-6]
 11104  016ED6  0EF7               	movlw	-9
 11105  016ED8  50E3               	movf	plusw1,w,c
 11106  016EDA  E108               	bnz	l11846
 11107  016EDC  0EF6               	movlw	-10
 11108  016EDE  006F FF8C  F001    	movff	plusw1,btemp
 11109  016EE4  0E03               	movlw	3
 11110  016EE6  5E01               	subwf	btemp^0,f,c
 11111  016EE8  A0D8               	btfss	status,0,c
 11112  016EEA  D125               	goto	u10790
 11113  016EEC                     l11846:
 11114                           
 11115                           ;stkvar	_c @ sp[(-4)+-4]
 11116                           ;stkvar	_s @ sp[(-4)+0]
 11117  016EEC  0EFC               	movlw	-4
 11118  016EEE  006F FF8C  F00B    	movff	plusw1,btemp+10
 11119  016EF4  0EFD               	movlw	-3
 11120  016EF6  006F FF8C  F00C    	movff	plusw1,btemp+11
 11121  016EFC  0E01               	movlw	1
 11122  016EFE  240B               	addwf	(btemp+10)^0,w,c
 11123  016F00  6ED9               	movwf	fsr2l,c
 11124  016F02  0E00               	movlw	0
 11125  016F04  200C               	addwfc	(btemp+11)^0,w,c
 11126  016F06  6EDA               	movwf	fsr2h,c
 11127  016F08  0EF8               	movlw	-8
 11128  016F0A  006F FF8F FFDF     	movff	plusw1,indf2
 11129                           
 11130                           ;stkvar	_c @ sp[(-4)+-4]
 11131                           ;stkvar	_s @ sp[(-4)+0]
 11132  016F10  0EFC               	movlw	-4
 11133  016F12  006F FF8C  F00B    	movff	plusw1,btemp+10
 11134  016F18  0EFD               	movlw	-3
 11135  016F1A  006F FF8C  F00C    	movff	plusw1,btemp+11
 11136  016F20  0E02               	movlw	2
 11137  016F22  240B               	addwf	(btemp+10)^0,w,c
 11138  016F24  6ED9               	movwf	fsr2l,c
 11139  016F26  0E00               	movlw	0
 11140  016F28  200C               	addwfc	(btemp+11)^0,w,c
 11141  016F2A  6EDA               	movwf	fsr2h,c
 11142  016F2C  0EF8               	movlw	-8
 11143  016F2E  006F FF8F FFDF     	movff	plusw1,indf2
 11144                           
 11145                           ;stkvar	_c @ sp[(-4)+-4]
 11146                           ;stkvar	_n @ sp[(-4)+-6]
 11147                           ;stkvar	_s @ sp[(-4)+0]
 11148  016F34  0EFC               	movlw	-4
 11149  016F36  006F FF8C  F00B    	movff	plusw1,btemp+10
 11150  016F3C  0EFD               	movlw	-3
 11151  016F3E  006F FF8C  F00C    	movff	plusw1,btemp+11
 11152  016F44  0EF6               	movlw	-10
 11153  016F46  50E3               	movf	plusw1,w,c
 11154  016F48  260B               	addwf	(btemp+10)^0,f,c
 11155  016F4A  0EF7               	movlw	-9
 11156  016F4C  50E3               	movf	plusw1,w,c
 11157  016F4E  220C               	addwfc	(btemp+11)^0,f,c
 11158  016F50  0EFE               	movlw	254
 11159  016F52  240B               	addwf	(btemp+10)^0,w,c
 11160  016F54  6ED9               	movwf	fsr2l,c
 11161  016F56  0EFF               	movlw	255
 11162  016F58  200C               	addwfc	(btemp+11)^0,w,c
 11163  016F5A  6EDA               	movwf	fsr2h,c
 11164  016F5C  0EF8               	movlw	-8
 11165  016F5E  006F FF8F FFDF     	movff	plusw1,indf2
 11166                           
 11167                           ;stkvar	_c @ sp[(-4)+-4]
 11168                           ;stkvar	_n @ sp[(-4)+-6]
 11169                           ;stkvar	_s @ sp[(-4)+0]
 11170  016F64  0EFC               	movlw	-4
 11171  016F66  006F FF8C  F00B    	movff	plusw1,btemp+10
 11172  016F6C  0EFD               	movlw	-3
 11173  016F6E  006F FF8C  F00C    	movff	plusw1,btemp+11
 11174  016F74  0EF6               	movlw	-10
 11175  016F76  50E3               	movf	plusw1,w,c
 11176  016F78  260B               	addwf	(btemp+10)^0,f,c
 11177  016F7A  0EF7               	movlw	-9
 11178  016F7C  50E3               	movf	plusw1,w,c
 11179  016F7E  220C               	addwfc	(btemp+11)^0,f,c
 11180  016F80  0EFD               	movlw	253
 11181  016F82  240B               	addwf	(btemp+10)^0,w,c
 11182  016F84  6ED9               	movwf	fsr2l,c
 11183  016F86  0EFF               	movlw	255
 11184  016F88  200C               	addwfc	(btemp+11)^0,w,c
 11185  016F8A  6EDA               	movwf	fsr2h,c
 11186  016F8C  0EF8               	movlw	-8
 11187  016F8E  006F FF8F FFDF     	movff	plusw1,indf2
 11188                           
 11189                           ;stkvar	_n @ sp[(-4)+-6]
 11190  016F94  0EF7               	movlw	-9
 11191  016F96  50E3               	movf	plusw1,w,c
 11192  016F98  E108               	bnz	l11852
 11193  016F9A  0EF6               	movlw	-10
 11194  016F9C  006F FF8C  F001    	movff	plusw1,btemp
 11195  016FA2  0E07               	movlw	7
 11196  016FA4  5E01               	subwf	btemp^0,f,c
 11197  016FA6  A0D8               	btfss	status,0,c
 11198  016FA8  D0C6               	goto	u10790
 11199  016FAA                     l11852:
 11200                           
 11201                           ;stkvar	_c @ sp[(-4)+-4]
 11202                           ;stkvar	_s @ sp[(-4)+0]
 11203  016FAA  0EFC               	movlw	-4
 11204  016FAC  006F FF8C  F00B    	movff	plusw1,btemp+10
 11205  016FB2  0EFD               	movlw	-3
 11206  016FB4  006F FF8C  F00C    	movff	plusw1,btemp+11
 11207  016FBA  0E03               	movlw	3
 11208  016FBC  240B               	addwf	(btemp+10)^0,w,c
 11209  016FBE  6ED9               	movwf	fsr2l,c
 11210  016FC0  0E00               	movlw	0
 11211  016FC2  200C               	addwfc	(btemp+11)^0,w,c
 11212  016FC4  6EDA               	movwf	fsr2h,c
 11213  016FC6  0EF8               	movlw	-8
 11214  016FC8  006F FF8F FFDF     	movff	plusw1,indf2
 11215                           
 11216                           ;stkvar	_c @ sp[(-4)+-4]
 11217                           ;stkvar	_n @ sp[(-4)+-6]
 11218                           ;stkvar	_s @ sp[(-4)+0]
 11219  016FCE  0EFC               	movlw	-4
 11220  016FD0  006F FF8C  F00B    	movff	plusw1,btemp+10
 11221  016FD6  0EFD               	movlw	-3
 11222  016FD8  006F FF8C  F00C    	movff	plusw1,btemp+11
 11223  016FDE  0EF6               	movlw	-10
 11224  016FE0  50E3               	movf	plusw1,w,c
 11225  016FE2  260B               	addwf	(btemp+10)^0,f,c
 11226  016FE4  0EF7               	movlw	-9
 11227  016FE6  50E3               	movf	plusw1,w,c
 11228  016FE8  220C               	addwfc	(btemp+11)^0,f,c
 11229  016FEA  0EFC               	movlw	252
 11230  016FEC  240B               	addwf	(btemp+10)^0,w,c
 11231  016FEE  6ED9               	movwf	fsr2l,c
 11232  016FF0  0EFF               	movlw	255
 11233  016FF2  200C               	addwfc	(btemp+11)^0,w,c
 11234  016FF4  6EDA               	movwf	fsr2h,c
 11235  016FF6  0EF8               	movlw	-8
 11236  016FF8  006F FF8F FFDF     	movff	plusw1,indf2
 11237                           
 11238                           ;stkvar	_n @ sp[(-4)+-6]
 11239  016FFE  0EF7               	movlw	-9
 11240  017000  50E3               	movf	plusw1,w,c
 11241  017002  E108               	bnz	l11858
 11242  017004  0EF6               	movlw	-10
 11243  017006  006F FF8C  F001    	movff	plusw1,btemp
 11244  01700C  0E09               	movlw	9
 11245  01700E  5E01               	subwf	btemp^0,f,c
 11246  017010  A0D8               	btfss	status,0,c
 11247  017012  D091               	goto	u10790
 11248  017014                     l11858:
 11249                           
 11250                           ;stkvar	_s @ sp[(-4)+0]
 11251  017014  0EFC               	movlw	-4
 11252  017016  006F FF8C  F00B    	movff	plusw1,btemp+10
 11253  01701C  1E0B               	comf	(btemp+10)^0,f,c
 11254  01701E  0EFD               	movlw	-3
 11255  017020  006F FF8C  F00C    	movff	plusw1,btemp+11
 11256  017026  1E0C               	comf	(btemp+11)^0,f,c
 11257  017028  2A0B               	incf	(btemp+10)^0,f,c
 11258  01702A  B4D8               	btfsc	status,2,c
 11259  01702C  2A0C               	incf	(btemp+11)^0,f,c
 11260  01702E  0E03               	movlw	3
 11261  017030  160B               	andwf	(btemp+10)^0,f,c
 11262  017032  0E00               	movlw	0
 11263  017034  160C               	andwf	(btemp+11)^0,f,c
 11264                           
 11265                           ;stkvar	_k @ sp[(-4)+2]
 11266  017036  0EFE               	movlw	-2
 11267  017038  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11268  01703E  0EFF               	movlw	-1
 11269  017040  0060  F033  FFE3   	movff	btemp+11,plusw1
 11270                           
 11271                           ;stkvar	_k @ sp[(-4)+2]
 11272                           ;stkvar	_s @ sp[(-4)+0]
 11273  017046  0EFC               	movlw	-4
 11274  017048  50E3               	movf	plusw1,w,c
 11275  01704A  6E01               	movwf	btemp^0,c
 11276  01704C  0EFE               	movlw	-2
 11277  01704E  50E3               	movf	plusw1,w,c
 11278  017050  2601               	addwf	btemp^0,f,c
 11279  017052  0EFC               	movlw	-4
 11280  017054  0060  F007  FFE3   	movff	btemp,plusw1
 11281  01705A  0EFD               	movlw	-3
 11282  01705C  50E3               	movf	plusw1,w,c
 11283  01705E  6E01               	movwf	btemp^0,c
 11284  017060  0EFF               	movlw	-1
 11285  017062  50E3               	movf	plusw1,w,c
 11286  017064  2201               	addwfc	btemp^0,f,c
 11287  017066  0EFD               	movlw	-3
 11288  017068  0060  F007  FFE3   	movff	btemp,plusw1
 11289                           
 11290                           ;stkvar	_k @ sp[(-4)+2]
 11291                           ;stkvar	_n @ sp[(-4)+-6]
 11292  01706E  0EF6               	movlw	-10
 11293  017070  50E3               	movf	plusw1,w,c
 11294  017072  6E01               	movwf	btemp^0,c
 11295  017074  0EFE               	movlw	-2
 11296  017076  50E3               	movf	plusw1,w,c
 11297  017078  5E01               	subwf	btemp^0,f,c
 11298  01707A  0EF6               	movlw	-10
 11299  01707C  0060  F007  FFE3   	movff	btemp,plusw1
 11300  017082  0EF7               	movlw	-9
 11301  017084  50E3               	movf	plusw1,w,c
 11302  017086  6E01               	movwf	btemp^0,c
 11303  017088  0EFF               	movlw	-1
 11304  01708A  50E3               	movf	plusw1,w,c
 11305  01708C  5A01               	subwfb	btemp^0,f,c
 11306  01708E  0EF7               	movlw	-9
 11307  017090  0060  F007  FFE3   	movff	btemp,plusw1
 11308  017096  0EFC               	movlw	252
 11309  017098  6E0B               	movwf	(btemp+10)^0,c
 11310  01709A  0EFF               	movlw	255
 11311  01709C  6E0C               	movwf	(btemp+11)^0,c
 11312                           
 11313                           ;stkvar	_n @ sp[(-4)+-6]
 11314  01709E  0EF6               	movlw	-10
 11315  0170A0  006F FF8C  F001    	movff	plusw1,btemp
 11316  0170A6  500B               	movf	(btemp+10)^0,w,c
 11317  0170A8  1601               	andwf	btemp^0,f,c
 11318  0170AA  0EF6               	movlw	-10
 11319  0170AC  0060  F007  FFE3   	movff	btemp,plusw1
 11320  0170B2  0EF7               	movlw	-9
 11321  0170B4  006F FF8C  F001    	movff	plusw1,btemp
 11322  0170BA  500C               	movf	(btemp+11)^0,w,c
 11323  0170BC  1601               	andwf	btemp^0,f,c
 11324  0170BE  0EF7               	movlw	-9
 11325  0170C0  D02E               	goto	L9
 11326  0170C2                     l11866:
 11327                           
 11328                           ;stkvar	_c @ sp[(-4)+-4]
 11329                           ;stkvar	_s @ sp[(-4)+0]
 11330  0170C2  0EFC               	movlw	-4
 11331  0170C4  006F FF8F FFD9     	movff	plusw1,fsr2l
 11332  0170CA  0EFD               	movlw	-3
 11333  0170CC  006F FF8F FFDA     	movff	plusw1,fsr2h
 11334  0170D2  0EF8               	movlw	-8
 11335  0170D4  006F FF8F FFDF     	movff	plusw1,indf2
 11336                           
 11337                           ;stkvar	_n @ sp[(-4)+-6]
 11338  0170DA  0EF6               	movlw	-10
 11339  0170DC  006F FF8C  F001    	movff	plusw1,btemp
 11340  0170E2  0E01               	movlw	1
 11341  0170E4  5E01               	subwf	btemp^0,f,c
 11342  0170E6  0EF6               	movlw	-10
 11343  0170E8  0060  F007  FFE3   	movff	btemp,plusw1
 11344  0170EE  0EF7               	movlw	-9
 11345  0170F0  006F FF8C  F001    	movff	plusw1,btemp
 11346  0170F6  0E00               	movlw	0
 11347  0170F8  5A01               	subwfb	btemp^0,f,c
 11348  0170FA  0EF7               	movlw	-9
 11349  0170FC  0060  F007  FFE3   	movff	btemp,plusw1
 11350                           
 11351                           ;stkvar	_s @ sp[(-4)+0]
 11352  017102  0EFC               	movlw	-4
 11353  017104  50E3               	movf	plusw1,w,c
 11354  017106  0F01               	addlw	1
 11355  017108  6E01               	movwf	btemp^0,c
 11356  01710A  0EFC               	movlw	-4
 11357  01710C  0060  F007  FFE3   	movff	btemp,plusw1
 11358  017112  6A01               	clrf	btemp^0,c
 11359  017114  0EFD               	movlw	-3
 11360  017116  50E3               	movf	plusw1,w,c
 11361  017118  2001               	addwfc	btemp^0,w,c
 11362  01711A  6E01               	movwf	btemp^0,c
 11363  01711C  0EFD               	movlw	-3
 11364  01711E                     L9:
 11365  01711E  0060  F007  FFE3   	movff	btemp,plusw1
 11366                           
 11367                           ;stkvar	_n @ sp[(-4)+-6]
 11368  017124  0EF6               	movlw	-10
 11369  017126  006F FF8C  F001    	movff	plusw1,btemp
 11370  01712C  0EF7               	movlw	-9
 11371  01712E  50E3               	movf	plusw1,w,c
 11372  017130  1001               	iorwf	btemp^0,w,c
 11373  017132  A4D8               	btfss	status,2,c
 11374  017134  D7C6               	goto	l11866
 11375  017136                     u10790:
 11376                           
 11377                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 11378  017136  0EF6               	movlw	246
 11379  017138  26E1               	addwf	fsr1l,f,c
 11380  01713A  0EFF               	movlw	255
 11381  01713C  22E2               	addwfc	fsr1h,f,c
 11382  01713E  0012               	return		;funcret
 11383  017140                     __end_of_memset:
 11384                           	opt callstack 0
 11385                           
 11386 ;; *************** function _printf *****************
 11387 ;; Defined at:
 11388 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 11389 ;; Parameters:    Size  Location     Type
 11390 ;;  fmt             2  [STACK] PTR const unsigned char 
 11391 ;;		 -> STR_44(3), STR_43(3), 
 11392 ;; Auto vars:     Size  Location     Type
 11393 ;;  ap              2  [STACK] PTR void [1]
 11394 ;;		 -> ?_printf(2), ?_sprintf(2), 
 11395 ;;  ret             2    0        int 
 11396 ;; Return value:  Size  Location     Type
 11397 ;;                  2  [STACK] int 
 11398 ;; Registers used:
 11399 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11400 ;; Tracked objects:
 11401 ;;		On entry : 3F/3B
 11402 ;;		On exit  : 3F/0
 11403 ;;		Unchanged: 0/0
 11404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11409 ;;Total ram usage:        0 bytes
 11410 ;; Hardware stack levels used:    1
 11411 ;; Hardware stack levels required when called:   23
 11412 ;; This function calls:
 11413 ;;		_vfprintf
 11414 ;; This function is called by:
 11415 ;;		_eaDogM_WriteString
 11416 ;;		_send_lcd_data_dma
 11417 ;; This function uses a reentrant model
 11418 ;;
 11419                           
 11420                           	psect	text45
 11421  01B0C0                     __ptext45:
 11422                           	opt callstack 0
 11423  01B0C0                     _printf:
 11424                           	opt callstack 0
 11425                           
 11426                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11427  01B0C0  52E6               	movf	postinc1,f,c
 11428  01B0C2  52E6               	movf	postinc1,f,c
 11429                           
 11430                           ;stkvar	?_printf @ sp[(-2)+-3]
 11431                           
 11432                           ;incstack = 0
 11433  01B0C4  0EFB               	movlw	251
 11434  01B0C6  24E1               	addwf	fsr1l,w,c
 11435  01B0C8  6E0B               	movwf	(btemp+10)^0,c
 11436  01B0CA  0EFF               	movlw	255
 11437  01B0CC  20E2               	addwfc	fsr1h,w,c
 11438  01B0CE  6E0C               	movwf	(btemp+11)^0,c
 11439                           
 11440                           ;stkvar	_ap @ sp[(-2)+0]
 11441  01B0D0  0EFF               	movlw	-1
 11442  01B0D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 11443  01B0D8  0EFE               	movlw	-2
 11444  01B0DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11445                           
 11446                           ;stkvar	_ap @ sp[(-2)+0]
 11447  01B0E0  0EFE               	movlw	254
 11448  01B0E2  24E1               	addwf	fsr1l,w,c
 11449  01B0E4  6E01               	movwf	btemp^0,c
 11450  01B0E6  0EFF               	movlw	255
 11451  01B0E8  20E2               	addwfc	fsr1h,w,c
 11452  01B0EA  6E02               	movwf	(btemp+1)^0,c
 11453  01B0EC  0060  F007  FFE6   	movff	btemp,postinc1
 11454  01B0F2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11455                           
 11456                           ;stkvar	_fmt @ sp[(-4)+-3]
 11457  01B0F8  0EF9               	movlw	-7
 11458  01B0FA  006F FF8F FFE6     	movff	plusw1,postinc1
 11459  01B100  006F FF8F FFE6     	movff	plusw1,postinc1
 11460  01B106  0E00               	movlw	0
 11461  01B108  6EE6               	movwf	postinc1,c
 11462  01B10A  0E00               	movlw	0
 11463  01B10C  6EE6               	movwf	postinc1,c
 11464  01B10E  EC4E  F0D3         	call	_vfprintf	;wreg free
 11465                           
 11466                           ; BSR set to: 0
 11467                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 11468  01B112  52E5               	movf	postdec1,f,c
 11469  01B114  52E5               	movf	postdec1,f,c
 11470  01B116  52E5               	movf	postdec1,f,c
 11471  01B118  50E7               	movf	indf1,w,c
 11472  01B11A  5EE1               	subwf	fsr1l,f,c
 11473  01B11C  0E00               	movlw	0
 11474  01B11E  5AE2               	subwfb	fsr1h,f,c
 11475  01B120  0012               	return		;funcret
 11476  01B122                     __end_of_printf:
 11477                           	opt callstack 0
 11478                           
 11479 ;; *************** function _vfprintf *****************
 11480 ;; Defined at:
 11481 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11482 ;; Parameters:    Size  Location     Type
 11483 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11484 ;;		 -> f(6), NULL(0), 
 11485 ;;  fmt             2  [STACK] PTR const unsigned char 
 11486 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 11487 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 11488 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 11489 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 11490 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(22), 
 11491 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 11492 ;;		 -> STR_37(23), STR_36(23), STR_35(23), STR_34(23), 
 11493 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 11494 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 11495 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 11496 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 11497 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 11498 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 11499 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 11500 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 11501 ;;  ap              2  [STACK] PTR PTR void 
 11502 ;;		 -> ap(2), ap(2), 
 11503 ;; Auto vars:     Size  Location     Type
 11504 ;;  cfmt            2  [STACK] PTR unsigned char 
 11505 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 11506 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 11507 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 11508 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 11509 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(22), 
 11510 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 11511 ;;		 -> STR_37(23), STR_36(23), STR_35(23), STR_34(23), 
 11512 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 11513 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 11514 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 11515 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 11516 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 11517 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 11518 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 11519 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 11520 ;; Return value:  Size  Location     Type
 11521 ;;                  2  [STACK] int 
 11522 ;; Registers used:
 11523 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11524 ;; Tracked objects:
 11525 ;;		On entry : 0/0
 11526 ;;		On exit  : 3F/0
 11527 ;;		Unchanged: 0/0
 11528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11533 ;;Total ram usage:        0 bytes
 11534 ;; Hardware stack levels used:    1
 11535 ;; Hardware stack levels required when called:   22
 11536 ;; This function calls:
 11537 ;;		_vfpfcnvrt
 11538 ;; This function is called by:
 11539 ;;		_sprintf
 11540 ;;		_printf
 11541 ;; This function uses a reentrant model
 11542 ;;
 11543                           
 11544                           	psect	text46
 11545  01A69C                     __ptext46:
 11546                           	opt callstack 0
 11547  01A69C                     _vfprintf:
 11548                           	opt callstack 0
 11549                           
 11550                           ; BSR set to: 0
 11551                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11552  01A69C  52E6               	movf	postinc1,f,c
 11553  01A69E  52E6               	movf	postinc1,f,c
 11554                           
 11555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 11556                           ;stkvar	_fmt @ sp[(-2)+-4]
 11557                           
 11558                           ;incstack = 0
 11559 ;; hardware stack exceeded
 11560  01A6A0  0EFA               	movlw	-6
 11561  01A6A2  006F FF8C  F00B    	movff	plusw1,btemp+10
 11562  01A6A8  0EFB               	movlw	-5
 11563  01A6AA  006F FF8C  F00C    	movff	plusw1,btemp+11
 11564                           
 11565                           ;stkvar	_cfmt @ sp[(-2)+0]
 11566  01A6B0  0EFF               	movlw	-1
 11567  01A6B2  0060  F033  FFE3   	movff	btemp+11,plusw1
 11568  01A6B8  0EFE               	movlw	-2
 11569  01A6BA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11570                           
 11571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 11572  01A6C0  0100               	movlb	0	; () banked
 11573  01A6C2  6BC0               	clrf	_nout& (0+255),b
 11574  01A6C4  6BC1               	clrf	(_nout+1)& (0+255),b
 11575                           
 11576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 11577  01A6C6  D021               	goto	l12716
 11578  01A6C8                     l12714:
 11579                           
 11580                           ; BSR set to: 0
 11581                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 11582                           ;stkvar	_ap @ sp[(-2)+-6]
 11583  01A6C8  0EF8               	movlw	-8
 11584  01A6CA  006F FF8F FFE6     	movff	plusw1,postinc1
 11585  01A6D0  006F FF8F FFE6     	movff	plusw1,postinc1
 11586                           
 11587                           ;stkvar	_cfmt @ sp[(-4)+0]
 11588  01A6D6  0EFC               	movlw	252
 11589  01A6D8  24E1               	addwf	fsr1l,w,c
 11590  01A6DA  6E01               	movwf	btemp^0,c
 11591  01A6DC  0EFF               	movlw	255
 11592  01A6DE  20E2               	addwfc	fsr1h,w,c
 11593  01A6E0  6E02               	movwf	(btemp+1)^0,c
 11594  01A6E2  0060  F007  FFE6   	movff	btemp,postinc1
 11595  01A6E8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11596                           
 11597                           ;stkvar	_fp @ sp[(-6)+-2]
 11598  01A6EE  0EF8               	movlw	-8
 11599  01A6F0  006F FF8F FFE6     	movff	plusw1,postinc1
 11600  01A6F6  006F FF8F FFE6     	movff	plusw1,postinc1
 11601  01A6FC  ECD0  F091         	call	_vfpfcnvrt	;wreg free
 11602  01A700  5001               	movf	btemp^0,w,c
 11603  01A702  0100               	movlb	0	; () banked
 11604  01A704  27C0               	addwf	_nout& (0+255),f,b
 11605  01A706  5002               	movf	(btemp+1)^0,w,c
 11606  01A708  23C1               	addwfc	(_nout+1)& (0+255),f,b
 11607  01A70A                     l12716:
 11608                           
 11609                           ; BSR set to: 0
 11610                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 11611                           ;stkvar	_cfmt @ sp[(-2)+0]
 11612  01A70A  50E1               	movf	fsr1l,w,c
 11613  01A70C  0FFE               	addlw	-2
 11614  01A70E  6ED9               	movwf	fsr2l,c
 11615  01A710  50E2               	movf	fsr1h,w,c
 11616  01A712  6EDA               	movwf	fsr2h,c
 11617  01A714  0EFF               	movlw	255
 11618  01A716  22DA               	addwfc	fsr2h,f,c
 11619  01A718  006F FF7B FFF6     	movff	postinc2,tblptrl
 11620  01A71E  006F FF77 FFF7     	movff	postdec2,tblptrh
 11621  01A724                     	if	0	;tblptru may be non-zero
 11622  01A724                     	endif
 11623  01A724                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11624  01A724  0E00               	movlw	low (__mediumconst shr (0+16))
 11625  01A726  6EF8               	movwf	tblptru,c
 11626  01A728                     	endif
 11627  01A728  0008               	tblrd		*
 11628  01A72A  50F5               	movf	tablat,w,c
 11629  01A72C  0900               	iorlw	0
 11630  01A72E  A4D8               	btfss	status,2,c
 11631  01A730  D7CB               	goto	l12714
 11632                           
 11633                           ; BSR set to: 0
 11634                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 11635  01A732  0060  F300  F001   	movff	_nout,btemp
 11636  01A738  0060  F304  F002   	movff	_nout+1,btemp+1
 11637                           
 11638                           ; BSR set to: 0
 11639                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 11640  01A73E  0EF8               	movlw	248
 11641  01A740  26E1               	addwf	fsr1l,f,c
 11642  01A742  0EFF               	movlw	255
 11643  01A744  22E2               	addwfc	fsr1h,f,c
 11644  01A746  0012               	return		;funcret
 11645  01A748                     __end_of_vfprintf:
 11646                           	opt callstack 0
 11647                           
 11648 ;; *************** function _vfpfcnvrt *****************
 11649 ;; Defined at:
 11650 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11651 ;; Parameters:    Size  Location     Type
 11652 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11653 ;;		 -> f(6), NULL(0), 
 11654 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 11655 ;;		 -> cfmt(2), 
 11656 ;;  ap              2  [STACK] PTR PTR void 
 11657 ;;		 -> ap(2), ap(2), 
 11658 ;; Auto vars:     Size  Location     Type
 11659 ;;  llu             8  [STACK] unsigned long long 
 11660 ;;  ll              8  [STACK] long long 
 11661 ;;  f               4  [STACK] long long 
 11662 ;;  ct              3  [STACK] unsigned char [3]
 11663 ;;  vp              3    0        PTR void 
 11664 ;;  cp              2  [STACK] PTR unsigned char 
 11665 ;;		 -> ?_printf(2), ?_sprintf(2), STR_46(9), STR_45(12), 
 11666 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 11667 ;;		 -> V(191), 
 11668 ;;  i               2    0        int 
 11669 ;;  done            2    0        int 
 11670 ;;  c               1  [STACK] unsigned char 
 11671 ;; Return value:  Size  Location     Type
 11672 ;;                  2  [STACK] int 
 11673 ;; Registers used:
 11674 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11675 ;; Tracked objects:
 11676 ;;		On entry : 0/0
 11677 ;;		On exit  : 0/0
 11678 ;;		Unchanged: 0/0
 11679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11684 ;;Total ram usage:        0 bytes
 11685 ;; Hardware stack levels used:    1
 11686 ;; Hardware stack levels required when called:   21
 11687 ;; This function calls:
 11688 ;;		_atoi
 11689 ;;		_ctoa
 11690 ;;		_dtoa
 11691 ;;		_efgtoa
 11692 ;;		_fputc
 11693 ;;		_isdigit
 11694 ;;		_isupper
 11695 ;;		_stoa
 11696 ;;		_strncmp
 11697 ;;		_tolower
 11698 ;;		_utoa
 11699 ;;		_xtoa
 11700 ;; This function is called by:
 11701 ;;		_vfprintf
 11702 ;; This function uses a reentrant model
 11703 ;;
 11704                           
 11705                           	psect	text47
 11706  0123A0                     __ptext47:
 11707                           	opt callstack 0
 11708  0123A0                     _vfpfcnvrt:
 11709                           	opt callstack 0
 11710                           
 11711                           ; BSR set to: 0
 11712                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11713  0123A0  0E20               	movlw	32
 11714  0123A2  26E1               	addwf	fsr1l,f,c
 11715  0123A4  0E00               	movlw	0
 11716  0123A6  22E2               	addwfc	fsr1h,f,c
 11717                           
 11718                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 11719                           ;stkvar	_fmt @ sp[(-32)+-4]
 11720                           
 11721                           ;incstack = 0
 11722 ;; hardware stack exceeded
 11723  0123A8  0EDC               	movlw	-36
 11724  0123AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11725  0123B0  0EDD               	movlw	-35
 11726  0123B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11727  0123B8  006F FF7B FFF6     	movff	postinc2,tblptrl
 11728  0123BE  006F FF77 FFF7     	movff	postdec2,tblptrh
 11729  0123C4                     	if	0	;tblptru may be non-zero
 11730  0123C4                     	endif
 11731  0123C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11732  0123C4  0E00               	movlw	low (__mediumconst shr (0+16))
 11733  0123C6  6EF8               	movwf	tblptru,c
 11734  0123C8                     	endif
 11735  0123C8  0008               	tblrd		*
 11736  0123CA  50F5               	movf	tablat,w,c
 11737  0123CC  0A25               	xorlw	37
 11738  0123CE  A4D8               	btfss	status,2,c
 11739  0123D0  EF77  F099         	goto	l12676
 11740                           
 11741                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 11742                           ;stkvar	_fmt @ sp[(-32)+-4]
 11743  0123D4  0EDC               	movlw	-36
 11744  0123D6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11745  0123DC  0EDD               	movlw	-35
 11746  0123DE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11747  0123E4  2ADE               	incf	postinc2,f,c
 11748  0123E6  0E00               	movlw	0
 11749  0123E8  22DD               	addwfc	postdec2,f,c
 11750                           
 11751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 11752  0123EA  6A3A               	clrf	_width^0,c
 11753  0123EC  6A3B               	clrf	(_width+1)^0,c
 11754  0123EE  6A3E               	clrf	_flags^0,c
 11755  0123F0  6A3F               	clrf	(_flags+1)^0,c
 11756                           
 11757                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 11758  0123F2  683C               	setf	_prec^0,c
 11759  0123F4  683D               	setf	(_prec+1)^0,c
 11760                           
 11761                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 11762                           ;stkvar	_fmt @ sp[(-32)+-4]
 11763  0123F6  0EDC               	movlw	-36
 11764  0123F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11765  0123FE  0EDD               	movlw	-35
 11766  012400  006F FF8F FFDA     	movff	plusw1,fsr2h
 11767  012406  006F FF7B FFF6     	movff	postinc2,tblptrl
 11768  01240C  006F FF77 FFF7     	movff	postdec2,tblptrh
 11769  012412                     	if	0	;tblptru may be non-zero
 11770  012412                     	endif
 11771  012412                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11772  012412  0E00               	movlw	low (__mediumconst shr (0+16))
 11773  012414  6EF8               	movwf	tblptru,c
 11774  012416                     	endif
 11775  012416  0008               	tblrd		*
 11776  012418  50F5               	movf	tablat,w,c
 11777  01241A  0A2A               	xorlw	42
 11778  01241C  A4D8               	btfss	status,2,c
 11779  01241E  D031               	goto	l12494
 11780                           
 11781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 11782                           ;stkvar	_fmt @ sp[(-32)+-4]
 11783  012420  0EDC               	movlw	-36
 11784  012422  006F FF8F FFD9     	movff	plusw1,fsr2l
 11785  012428  0EDD               	movlw	-35
 11786  01242A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11787  012430  2ADE               	incf	postinc2,f,c
 11788  012432  0E00               	movlw	0
 11789  012434  22DD               	addwfc	postdec2,f,c
 11790                           
 11791                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 11792                           ;stkvar	_ap @ sp[(-32)+-6]
 11793  012436  0EDA               	movlw	-38
 11794  012438  006F FF8F FFD9     	movff	plusw1,fsr2l
 11795  01243E  0EDB               	movlw	-37
 11796  012440  006F FF8F FFDA     	movff	plusw1,fsr2h
 11797  012446  0E02               	movlw	2
 11798  012448  5EDE               	subwf	postinc2,f,c
 11799  01244A  0E00               	movlw	0
 11800  01244C  5ADD               	subwfb	postdec2,f,c
 11801  01244E  006F FF78  F00B    	movff	postinc2,btemp+10
 11802  012454  006F FF74  F00C    	movff	postdec2,btemp+11
 11803  01245A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11804  012460  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11805  012466  006F FF78  F03A    	movff	postinc2,_width
 11806  01246C  006F FF74  F03B    	movff	postdec2,_width+1
 11807                           
 11808                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 11809  012472  AE3B               	btfss	(_width+1)^0,7,c
 11810  012474  D066               	goto	u11980
 11811                           
 11812                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 11813  012476  803E               	bsf	_flags^0,0,c
 11814                           
 11815                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 11816  012478  6C3A               	negf	_width^0,c
 11817  01247A  1E3B               	comf	(_width+1)^0,f,c
 11818  01247C  B0D8               	btfsc	status,0,c
 11819  01247E  2A3B               	incf	(_width+1)^0,f,c
 11820  012480  D060               	goto	u11980
 11821  012482                     l12494:
 11822                           
 11823                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 11824                           ;stkvar	_fmt @ sp[(-32)+-4]
 11825  012482  0EDC               	movlw	-36
 11826  012484  006F FF8F FFD9     	movff	plusw1,fsr2l
 11827  01248A  0EDD               	movlw	-35
 11828  01248C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11829  012492  006F FF78  F00B    	movff	postinc2,btemp+10
 11830  012498  006F FF74  F00C    	movff	postdec2,btemp+11
 11831  01249E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11832  0124A4  0060  F033  FFE6   	movff	btemp+11,postinc1
 11833  0124AA  ECA7  F0BC         	call	_atoi	;wreg free
 11834  0124AE  0060  F004  F03A   	movff	btemp,_width
 11835  0124B4  0060  F008  F03B   	movff	btemp+1,_width+1
 11836                           
 11837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11838  0124BA  D00B               	goto	l12498
 11839  0124BC                     l12496:
 11840                           
 11841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 11842                           ;stkvar	_fmt @ sp[(-32)+-4]
 11843  0124BC  0EDC               	movlw	-36
 11844  0124BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11845  0124C4  0EDD               	movlw	-35
 11846  0124C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11847  0124CC  2ADE               	incf	postinc2,f,c
 11848  0124CE  0E00               	movlw	0
 11849  0124D0  22DD               	addwfc	postdec2,f,c
 11850  0124D2                     l12498:
 11851  0124D2  0ED0               	movlw	208
 11852  0124D4  6E0B               	movwf	(btemp+10)^0,c
 11853  0124D6  0EFF               	movlw	255
 11854  0124D8  6E0C               	movwf	(btemp+11)^0,c
 11855                           
 11856                           ;stkvar	_fmt @ sp[(-32)+-4]
 11857  0124DA  0EDC               	movlw	-36
 11858  0124DC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11859  0124E2  0EDD               	movlw	-35
 11860  0124E4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11861  0124EA  006F FF7B FFF6     	movff	postinc2,tblptrl
 11862  0124F0  006F FF77 FFF7     	movff	postdec2,tblptrh
 11863  0124F6                     	if	0	;tblptru may be non-zero
 11864  0124F6                     	endif
 11865  0124F6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11866  0124F6  0E00               	movlw	low (__mediumconst shr (0+16))
 11867  0124F8  6EF8               	movwf	tblptru,c
 11868  0124FA                     	endif
 11869  0124FA  0008               	tblrd		*
 11870  0124FC  50F5               	movf	tablat,w,c
 11871  0124FE  6E09               	movwf	(btemp+8)^0,c
 11872  012500  6A0A               	clrf	(btemp+9)^0,c
 11873  012502  500B               	movf	(btemp+10)^0,w,c
 11874  012504  2609               	addwf	(btemp+8)^0,f,c
 11875  012506  500C               	movf	(btemp+11)^0,w,c
 11876  012508  220A               	addwfc	(btemp+9)^0,f,c
 11877  01250A  500A               	movf	(btemp+9)^0,w,c
 11878  01250C  E106               	bnz	u11960
 11879  01250E  0E0A               	movlw	10
 11880  012510  5C09               	subwf	(btemp+8)^0,w,c
 11881  012512  B0D8               	btfsc	status,0,c
 11882  012514  D002               	goto	u11960
 11883  012516  0E01               	movlw	1
 11884  012518  D001               	goto	u11970
 11885  01251A                     u11960:
 11886  01251A  0E00               	movlw	0
 11887  01251C                     u11970:
 11888  01251C  6E0B               	movwf	(btemp+10)^0,c
 11889  01251E  6A0C               	clrf	(btemp+11)^0,c
 11890                           
 11891                           ;stkvar	_vfpfcnvrt$5570 @ sp[(-32)+4]
 11892  012520  0EE4               	movlw	-28
 11893  012522  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11894  012528  0EE5               	movlw	-27
 11895  01252A  0060  F033  FFE3   	movff	btemp+11,plusw1
 11896                           
 11897                           ;stkvar	_vfpfcnvrt$5570 @ sp[(-32)+4]
 11898  012530  0EE4               	movlw	-28
 11899  012532  006F FF8C  F001    	movff	plusw1,btemp
 11900  012538  0EE5               	movlw	-27
 11901  01253A  50E3               	movf	plusw1,w,c
 11902  01253C  1001               	iorwf	btemp^0,w,c
 11903  01253E  A4D8               	btfss	status,2,c
 11904  012540  D7BD               	goto	l12496
 11905  012542                     u11980:
 11906                           
 11907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 11908                           ;stkvar	_fmt @ sp[(-32)+-4]
 11909  012542  0EDC               	movlw	-36
 11910  012544  006F FF8F FFD9     	movff	plusw1,fsr2l
 11911  01254A  0EDD               	movlw	-35
 11912  01254C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11913  012552  006F FF7B FFF6     	movff	postinc2,tblptrl
 11914  012558  006F FF77 FFF7     	movff	postdec2,tblptrh
 11915  01255E                     	if	0	;tblptru may be non-zero
 11916  01255E                     	endif
 11917  01255E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11918  01255E  0E00               	movlw	low (__mediumconst shr (0+16))
 11919  012560  6EF8               	movwf	tblptru,c
 11920  012562                     	endif
 11921  012562  0008               	tblrd		*
 11922  012564  50F5               	movf	tablat,w,c
 11923  012566  0A2E               	xorlw	46
 11924  012568  A4D8               	btfss	status,2,c
 11925  01256A  D0AC               	goto	u12030
 11926                           
 11927                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 11928  01256C  6A3C               	clrf	_prec^0,c
 11929  01256E  6A3D               	clrf	(_prec+1)^0,c
 11930                           
 11931                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 11932                           ;stkvar	_fmt @ sp[(-32)+-4]
 11933  012570  0EDC               	movlw	-36
 11934  012572  006F FF8F FFD9     	movff	plusw1,fsr2l
 11935  012578  0EDD               	movlw	-35
 11936  01257A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11937  012580  2ADE               	incf	postinc2,f,c
 11938  012582  0E00               	movlw	0
 11939  012584  22DD               	addwfc	postdec2,f,c
 11940                           
 11941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 11942                           ;stkvar	_fmt @ sp[(-32)+-4]
 11943  012586  0EDC               	movlw	-36
 11944  012588  006F FF8F FFD9     	movff	plusw1,fsr2l
 11945  01258E  0EDD               	movlw	-35
 11946  012590  006F FF8F FFDA     	movff	plusw1,fsr2h
 11947  012596  006F FF7B FFF6     	movff	postinc2,tblptrl
 11948  01259C  006F FF77 FFF7     	movff	postdec2,tblptrh
 11949  0125A2                     	if	0	;tblptru may be non-zero
 11950  0125A2                     	endif
 11951  0125A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11952  0125A2  0E00               	movlw	low (__mediumconst shr (0+16))
 11953  0125A4  6EF8               	movwf	tblptru,c
 11954  0125A6                     	endif
 11955  0125A6  0008               	tblrd		*
 11956  0125A8  50F5               	movf	tablat,w,c
 11957  0125AA  0A2A               	xorlw	42
 11958  0125AC  A4D8               	btfss	status,2,c
 11959  0125AE  D02A               	goto	l12516
 11960                           
 11961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 11962                           ;stkvar	_fmt @ sp[(-32)+-4]
 11963  0125B0  0EDC               	movlw	-36
 11964  0125B2  006F FF8F FFD9     	movff	plusw1,fsr2l
 11965  0125B8  0EDD               	movlw	-35
 11966  0125BA  006F FF8F FFDA     	movff	plusw1,fsr2h
 11967  0125C0  2ADE               	incf	postinc2,f,c
 11968  0125C2  0E00               	movlw	0
 11969  0125C4  22DD               	addwfc	postdec2,f,c
 11970                           
 11971                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 11972                           ;stkvar	_ap @ sp[(-32)+-6]
 11973  0125C6  0EDA               	movlw	-38
 11974  0125C8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11975  0125CE  0EDB               	movlw	-37
 11976  0125D0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11977  0125D6  0E02               	movlw	2
 11978  0125D8  5EDE               	subwf	postinc2,f,c
 11979  0125DA  0E00               	movlw	0
 11980  0125DC  5ADD               	subwfb	postdec2,f,c
 11981  0125DE  006F FF78  F00B    	movff	postinc2,btemp+10
 11982  0125E4  006F FF74  F00C    	movff	postdec2,btemp+11
 11983  0125EA  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11984  0125F0  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11985  0125F6  006F FF78  F03C    	movff	postinc2,_prec
 11986  0125FC  006F FF74  F03D    	movff	postdec2,_prec+1
 11987                           
 11988                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 11989  012602  D060               	goto	u12030
 11990  012604                     l12516:
 11991                           
 11992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 11993                           ;stkvar	_fmt @ sp[(-32)+-4]
 11994  012604  0EDC               	movlw	-36
 11995  012606  006F FF8F FFD9     	movff	plusw1,fsr2l
 11996  01260C  0EDD               	movlw	-35
 11997  01260E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11998  012614  006F FF78  F00B    	movff	postinc2,btemp+10
 11999  01261A  006F FF74  F00C    	movff	postdec2,btemp+11
 12000  012620  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12001  012626  0060  F033  FFE6   	movff	btemp+11,postinc1
 12002  01262C  ECA7  F0BC         	call	_atoi	;wreg free
 12003  012630  0060  F004  F03C   	movff	btemp,_prec
 12004  012636  0060  F008  F03D   	movff	btemp+1,_prec+1
 12005                           
 12006                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 12007  01263C  D00B               	goto	l12520
 12008  01263E                     l12518:
 12009                           
 12010                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 12011                           ;stkvar	_fmt @ sp[(-32)+-4]
 12012  01263E  0EDC               	movlw	-36
 12013  012640  006F FF8F FFD9     	movff	plusw1,fsr2l
 12014  012646  0EDD               	movlw	-35
 12015  012648  006F FF8F FFDA     	movff	plusw1,fsr2h
 12016  01264E  2ADE               	incf	postinc2,f,c
 12017  012650  0E00               	movlw	0
 12018  012652  22DD               	addwfc	postdec2,f,c
 12019  012654                     l12520:
 12020  012654  0ED0               	movlw	208
 12021  012656  6E0B               	movwf	(btemp+10)^0,c
 12022  012658  0EFF               	movlw	255
 12023  01265A  6E0C               	movwf	(btemp+11)^0,c
 12024                           
 12025                           ;stkvar	_fmt @ sp[(-32)+-4]
 12026  01265C  0EDC               	movlw	-36
 12027  01265E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12028  012664  0EDD               	movlw	-35
 12029  012666  006F FF8F FFDA     	movff	plusw1,fsr2h
 12030  01266C  006F FF7B FFF6     	movff	postinc2,tblptrl
 12031  012672  006F FF77 FFF7     	movff	postdec2,tblptrh
 12032  012678                     	if	0	;tblptru may be non-zero
 12033  012678                     	endif
 12034  012678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12035  012678  0E00               	movlw	low (__mediumconst shr (0+16))
 12036  01267A  6EF8               	movwf	tblptru,c
 12037  01267C                     	endif
 12038  01267C  0008               	tblrd		*
 12039  01267E  50F5               	movf	tablat,w,c
 12040  012680  6E09               	movwf	(btemp+8)^0,c
 12041  012682  6A0A               	clrf	(btemp+9)^0,c
 12042  012684  500B               	movf	(btemp+10)^0,w,c
 12043  012686  2609               	addwf	(btemp+8)^0,f,c
 12044  012688  500C               	movf	(btemp+11)^0,w,c
 12045  01268A  220A               	addwfc	(btemp+9)^0,f,c
 12046  01268C  500A               	movf	(btemp+9)^0,w,c
 12047  01268E  E106               	bnz	u12010
 12048  012690  0E0A               	movlw	10
 12049  012692  5C09               	subwf	(btemp+8)^0,w,c
 12050  012694  B0D8               	btfsc	status,0,c
 12051  012696  D002               	goto	u12010
 12052  012698  0E01               	movlw	1
 12053  01269A  D001               	goto	u12020
 12054  01269C                     u12010:
 12055  01269C  0E00               	movlw	0
 12056  01269E                     u12020:
 12057  01269E  6E0B               	movwf	(btemp+10)^0,c
 12058  0126A0  6A0C               	clrf	(btemp+11)^0,c
 12059                           
 12060                           ;stkvar	_vfpfcnvrt$5571 @ sp[(-32)+0]
 12061  0126A2  0EE0               	movlw	-32
 12062  0126A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12063  0126AA  0EE1               	movlw	-31
 12064  0126AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 12065                           
 12066                           ;stkvar	_vfpfcnvrt$5571 @ sp[(-32)+0]
 12067  0126B2  0EE0               	movlw	-32
 12068  0126B4  006F FF8C  F001    	movff	plusw1,btemp
 12069  0126BA  0EE1               	movlw	-31
 12070  0126BC  50E3               	movf	plusw1,w,c
 12071  0126BE  1001               	iorwf	btemp^0,w,c
 12072  0126C0  A4D8               	btfss	status,2,c
 12073  0126C2  D7BD               	goto	l12518
 12074  0126C4                     u12030:
 12075                           
 12076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 12077                           ;stkvar	_fmt @ sp[(-32)+-4]
 12078  0126C4  0EDC               	movlw	-36
 12079  0126C6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12080  0126CC  0EDD               	movlw	-35
 12081  0126CE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12082  0126D4  006F FF7B FFF6     	movff	postinc2,tblptrl
 12083  0126DA  006F FF77 FFF7     	movff	postdec2,tblptrh
 12084  0126E0                     	if	0	;tblptru may be non-zero
 12085  0126E0                     	endif
 12086  0126E0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12087  0126E0  0E00               	movlw	low (__mediumconst shr (0+16))
 12088  0126E2  6EF8               	movwf	tblptru,c
 12089  0126E4                     	endif
 12090  0126E4  0008               	tblrd		*
 12091  0126E6  50F5               	movf	tablat,w,c
 12092  0126E8  6EE6               	movwf	postinc1,c
 12093  0126EA  0E00               	movlw	0
 12094  0126EC  6EE6               	movwf	postinc1,c
 12095  0126EE  EC9D  F0D6         	call	_tolower	;wreg free
 12096                           
 12097                           ;stkvar	_ct @ sp[(-32)+26]
 12098  0126F2  0EFA               	movlw	-6
 12099  0126F4  0060  F007  FFE3   	movff	btemp,plusw1
 12100                           
 12101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 12102                           ;stkvar	_ct @ sp[(-32)+26]
 12103  0126FA  0EFA               	movlw	-6
 12104  0126FC  50E3               	movf	plusw1,w,c
 12105  0126FE  B4D8               	btfsc	status,2,c
 12106  012700  D05B               	goto	l12536
 12107                           
 12108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 12109                           ;stkvar	_ct @ sp[(-32)+26]
 12110  012702  0EFB               	movlw	251
 12111  012704  24E1               	addwf	fsr1l,w,c
 12112  012706  6ED9               	movwf	fsr2l,c
 12113  012708  0EFF               	movlw	255
 12114  01270A  20E2               	addwfc	fsr1h,w,c
 12115  01270C  6EDA               	movwf	fsr2h,c
 12116                           
 12117                           ;stkvar	_fmt @ sp[(-32)+-4]
 12118  01270E  0EDC               	movlw	-36
 12119  012710  006F FF8F FFE9     	movff	plusw1,fsr0l
 12120  012716  0EDD               	movlw	-35
 12121  012718  006F FF8F FFEA     	movff	plusw1,fsr0h
 12122  01271E  006F FFB8  F00B    	movff	postinc0,btemp+10
 12123  012724  006F FFB4  F00C    	movff	postdec0,btemp+11
 12124  01272A  0E01               	movlw	1
 12125  01272C  260B               	addwf	(btemp+10)^0,f,c
 12126  01272E  0E00               	movlw	0
 12127  012730  220C               	addwfc	(btemp+11)^0,f,c
 12128  012732  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12129  012738  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12130  01273E                     	if	0	;tblptru may be non-zero
 12131  01273E                     	endif
 12132  01273E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12133  01273E  0E00               	movlw	low (__mediumconst shr (0+16))
 12134  012740  6EF8               	movwf	tblptru,c
 12135  012742                     	endif
 12136  012742  0008               	tblrd		*
 12137  012744  50F5               	movf	tablat,w,c
 12138  012746  6EE6               	movwf	postinc1,c
 12139  012748  0E00               	movlw	0
 12140  01274A  6EE6               	movwf	postinc1,c
 12141  01274C  EC9D  F0D6         	call	_tolower	;wreg free
 12142  012750  5001               	movf	btemp^0,w,c
 12143  012752  6EDF               	movwf	indf2,c
 12144                           
 12145                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 12146                           ;stkvar	_ct @ sp[(-32)+26]
 12147  012754  0EFB               	movlw	251
 12148  012756  24E1               	addwf	fsr1l,w,c
 12149  012758  6ED9               	movwf	fsr2l,c
 12150  01275A  0EFF               	movlw	255
 12151  01275C  20E2               	addwfc	fsr1h,w,c
 12152  01275E  6EDA               	movwf	fsr2h,c
 12153  012760  50DF               	movf	indf2,w,c
 12154  012762  B4D8               	btfsc	status,2,c
 12155  012764  D029               	goto	l12536
 12156                           
 12157                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 12158                           ;stkvar	_ct @ sp[(-32)+26]
 12159  012766  0EFC               	movlw	252
 12160  012768  24E1               	addwf	fsr1l,w,c
 12161  01276A  6ED9               	movwf	fsr2l,c
 12162  01276C  0EFF               	movlw	255
 12163  01276E  20E2               	addwfc	fsr1h,w,c
 12164  012770  6EDA               	movwf	fsr2h,c
 12165                           
 12166                           ;stkvar	_fmt @ sp[(-32)+-4]
 12167  012772  0EDC               	movlw	-36
 12168  012774  006F FF8F FFE9     	movff	plusw1,fsr0l
 12169  01277A  0EDD               	movlw	-35
 12170  01277C  006F FF8F FFEA     	movff	plusw1,fsr0h
 12171  012782  006F FFB8  F00B    	movff	postinc0,btemp+10
 12172  012788  006F FFB4  F00C    	movff	postdec0,btemp+11
 12173  01278E  0E02               	movlw	2
 12174  012790  260B               	addwf	(btemp+10)^0,f,c
 12175  012792  0E00               	movlw	0
 12176  012794  220C               	addwfc	(btemp+11)^0,f,c
 12177  012796  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12178  01279C  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12179  0127A2                     	if	0	;tblptru may be non-zero
 12180  0127A2                     	endif
 12181  0127A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12182  0127A2  0E00               	movlw	low (__mediumconst shr (0+16))
 12183  0127A4  6EF8               	movwf	tblptru,c
 12184  0127A6                     	endif
 12185  0127A6  0008               	tblrd		*
 12186  0127A8  50F5               	movf	tablat,w,c
 12187  0127AA  6EE6               	movwf	postinc1,c
 12188  0127AC  0E00               	movlw	0
 12189  0127AE  6EE6               	movwf	postinc1,c
 12190  0127B0  EC9D  F0D6         	call	_tolower	;wreg free
 12191  0127B4  5001               	movf	btemp^0,w,c
 12192  0127B6  6EDF               	movwf	indf2,c
 12193  0127B8                     l12536:
 12194                           
 12195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 12196                           ;stkvar	_fmt @ sp[(-32)+-4]
 12197  0127B8  0EDC               	movlw	-36
 12198  0127BA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12199  0127C0  0EDD               	movlw	-35
 12200  0127C2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12201  0127C8  006F FF7B FFF6     	movff	postinc2,tblptrl
 12202  0127CE  006F FF77 FFF7     	movff	postdec2,tblptrh
 12203  0127D4                     	if	0	;tblptru may be non-zero
 12204  0127D4                     	endif
 12205  0127D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12206  0127D4  0E00               	movlw	low (__mediumconst shr (0+16))
 12207  0127D6  6EF8               	movwf	tblptru,c
 12208  0127D8                     	endif
 12209  0127D8  0008               	tblrd		*
 12210  0127DA  50F5               	movf	tablat,w,c
 12211  0127DC  0A63               	xorlw	99
 12212  0127DE  A4D8               	btfss	status,2,c
 12213  0127E0  D037               	goto	l12546
 12214                           
 12215                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 12216                           ;stkvar	_fmt @ sp[(-32)+-4]
 12217  0127E2  0EDC               	movlw	-36
 12218  0127E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 12219  0127EA  0EDD               	movlw	-35
 12220  0127EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 12221  0127F2  2ADE               	incf	postinc2,f,c
 12222  0127F4  0E00               	movlw	0
 12223  0127F6  22DD               	addwfc	postdec2,f,c
 12224                           
 12225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 12226                           ;stkvar	_ap @ sp[(-32)+-6]
 12227  0127F8  0EDA               	movlw	-38
 12228  0127FA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12229  012800  0EDB               	movlw	-37
 12230  012802  006F FF8F FFDA     	movff	plusw1,fsr2h
 12231  012808  0E02               	movlw	2
 12232  01280A  5EDE               	subwf	postinc2,f,c
 12233  01280C  0E00               	movlw	0
 12234  01280E  5ADD               	subwfb	postdec2,f,c
 12235  012810  006F FF78  F00B    	movff	postinc2,btemp+10
 12236  012816  006F FF74  F00C    	movff	postdec2,btemp+11
 12237  01281C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12238  012822  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12239  012828  50DF               	movf	indf2,w,c
 12240  01282A  6E0C               	movwf	(btemp+11)^0,c
 12241                           
 12242                           ;stkvar	_c @ sp[(-32)+31]
 12243  01282C  0EFF               	movlw	-1
 12244  01282E  0060  F033  FFE3   	movff	btemp+11,plusw1
 12245                           
 12246                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 12247                           ;stkvar	_c @ sp[(-32)+31]
 12248  012834  0EFF               	movlw	-1
 12249  012836  50E3               	movf	plusw1,w,c
 12250  012838  6EE6               	movwf	postinc1,c
 12251                           
 12252                           ;stkvar	_fp @ sp[(-33)+-2]
 12253  01283A  0EDD               	movlw	-35
 12254  01283C  006F FF8F FFE6     	movff	plusw1,postinc1
 12255  012842  006F FF8F FFE6     	movff	plusw1,postinc1
 12256  012848  EC17  F0D6         	call	_ctoa	;wreg free
 12257  01284C  EFA1  F099         	goto	l2362
 12258  012850                     l12546:
 12259                           
 12260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 12261                           ;stkvar	_fmt @ sp[(-32)+-4]
 12262  012850  0EDC               	movlw	-36
 12263  012852  006F FF8F FFD9     	movff	plusw1,fsr2l
 12264  012858  0EDD               	movlw	-35
 12265  01285A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12266  012860  006F FF7B FFF6     	movff	postinc2,tblptrl
 12267  012866  006F FF77 FFF7     	movff	postdec2,tblptrh
 12268  01286C                     	if	0	;tblptru may be non-zero
 12269  01286C                     	endif
 12270  01286C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12271  01286C  0E00               	movlw	low (__mediumconst shr (0+16))
 12272  01286E  6EF8               	movwf	tblptru,c
 12273  012870                     	endif
 12274  012870  0008               	tblrd		*
 12275  012872  50F5               	movf	tablat,w,c
 12276  012874  0A64               	xorlw	100
 12277  012876  B4D8               	btfsc	status,2,c
 12278  012878  D015               	goto	u12080
 12279                           
 12280                           ;stkvar	_fmt @ sp[(-32)+-4]
 12281  01287A  0EDC               	movlw	-36
 12282  01287C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12283  012882  0EDD               	movlw	-35
 12284  012884  006F FF8F FFDA     	movff	plusw1,fsr2h
 12285  01288A  006F FF7B FFF6     	movff	postinc2,tblptrl
 12286  012890  006F FF77 FFF7     	movff	postdec2,tblptrh
 12287  012896                     	if	0	;tblptru may be non-zero
 12288  012896                     	endif
 12289  012896                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12290  012896  0E00               	movlw	low (__mediumconst shr (0+16))
 12291  012898  6EF8               	movwf	tblptru,c
 12292  01289A                     	endif
 12293  01289A  0008               	tblrd		*
 12294  01289C  50F5               	movf	tablat,w,c
 12295  01289E  0A69               	xorlw	105
 12296  0128A0  A4D8               	btfss	status,2,c
 12297  0128A2  D076               	goto	l12558
 12298  0128A4                     u12080:
 12299                           
 12300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 12301                           ;stkvar	_fmt @ sp[(-32)+-4]
 12302  0128A4  0EDC               	movlw	-36
 12303  0128A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12304  0128AC  0EDD               	movlw	-35
 12305  0128AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12306  0128B4  2ADE               	incf	postinc2,f,c
 12307  0128B6  0E00               	movlw	0
 12308  0128B8  22DD               	addwfc	postdec2,f,c
 12309                           
 12310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 12311                           ;stkvar	_ap @ sp[(-32)+-6]
 12312  0128BA  0EDA               	movlw	-38
 12313  0128BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 12314  0128C2  0EDB               	movlw	-37
 12315  0128C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 12316  0128CA  0E02               	movlw	2
 12317  0128CC  5EDE               	subwf	postinc2,f,c
 12318  0128CE  0E00               	movlw	0
 12319  0128D0  5ADD               	subwfb	postdec2,f,c
 12320  0128D2  006F FF78  F00B    	movff	postinc2,btemp+10
 12321  0128D8  006F FF74  F00C    	movff	postdec2,btemp+11
 12322  0128DE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12323  0128E4  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12324  0128EA  006F FF78  F00B    	movff	postinc2,btemp+10
 12325  0128F0  006F FF74  F00C    	movff	postdec2,btemp+11
 12326                           
 12327                           ;stkvar	_ll @ sp[(-32)+14]
 12328  0128F6  0EEE               	movlw	-18
 12329  0128F8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12330  0128FE  0EEF               	movlw	-17
 12331  012900  0060  F033  FFE3   	movff	btemp+11,plusw1
 12332  012906  6A01               	clrf	btemp^0,c
 12333  012908  BEE3               	btfsc	plusw1,7,c
 12334  01290A  6801               	setf	btemp^0,c
 12335  01290C  0EF0               	movlw	-16
 12336  01290E  0060  F007  FFE3   	movff	btemp,plusw1
 12337  012914  0EF1               	movlw	-15
 12338  012916  0060  F007  FFE3   	movff	btemp,plusw1
 12339  01291C  0EF2               	movlw	-14
 12340  01291E  0060  F007  FFE3   	movff	btemp,plusw1
 12341  012924  0EF3               	movlw	-13
 12342  012926  0060  F007  FFE3   	movff	btemp,plusw1
 12343  01292C  0EF4               	movlw	-12
 12344  01292E  0060  F007  FFE3   	movff	btemp,plusw1
 12345  012934  0EF5               	movlw	-11
 12346  012936  0060  F007  FFE3   	movff	btemp,plusw1
 12347  01293C                     l12554:
 12348                           
 12349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 12350                           ;stkvar	_ll @ sp[(-32)+14]
 12351  01293C  50E1               	movf	fsr1l,w,c
 12352  01293E  0FEE               	addlw	-18
 12353  012940  6ED9               	movwf	fsr2l,c
 12354  012942  50E2               	movf	fsr1h,w,c
 12355  012944  6EDA               	movwf	fsr2h,c
 12356  012946  0EFF               	movlw	255
 12357  012948  22DA               	addwfc	fsr2h,f,c
 12358  01294A  006F FF7B FFE6     	movff	postinc2,postinc1
 12359  012950  006F FF7B FFE6     	movff	postinc2,postinc1
 12360  012956  006F FF7B FFE6     	movff	postinc2,postinc1
 12361  01295C  006F FF7B FFE6     	movff	postinc2,postinc1
 12362  012962  006F FF7B FFE6     	movff	postinc2,postinc1
 12363  012968  006F FF7B FFE6     	movff	postinc2,postinc1
 12364  01296E  006F FF7B FFE6     	movff	postinc2,postinc1
 12365  012974  006F FF7B FFE6     	movff	postinc2,postinc1
 12366                           
 12367                           ;stkvar	_fp @ sp[(-40)+-2]
 12368  01297A  0ED6               	movlw	-42
 12369  01297C  006F FF8F FFE6     	movff	plusw1,postinc1
 12370  012982  006F FF8F FFE6     	movff	plusw1,postinc1
 12371  012988  ECFB  F0AB         	call	_dtoa	;wreg free
 12372  01298C  EFA1  F099         	goto	l2362
 12373  012990                     l12558:
 12374                           
 12375                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 12376  012990  0E02               	movlw	2
 12377  012992  6EE6               	movwf	postinc1,c
 12378  012994  0E00               	movlw	0
 12379  012996  6EE6               	movwf	postinc1,c
 12380  012998  0EEA               	movlw	low STR_73
 12381  01299A  6EE6               	movwf	postinc1,c
 12382  01299C  0EFF               	movlw	high STR_73
 12383  01299E  6EE6               	movwf	postinc1,c
 12384                           
 12385                           ;stkvar	_fmt @ sp[(-36)+-4]
 12386  0129A0  0ED8               	movlw	-40
 12387  0129A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12388  0129A8  0ED9               	movlw	-39
 12389  0129AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12390  0129B0  006F FF78  F00B    	movff	postinc2,btemp+10
 12391  0129B6  006F FF74  F00C    	movff	postdec2,btemp+11
 12392  0129BC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12393  0129C2  0060  F033  FFE6   	movff	btemp+11,postinc1
 12394  0129C8  EC24  F0C0         	call	_strncmp	;wreg free
 12395  0129CC  5001               	movf	btemp^0,w,c
 12396  0129CE  1002               	iorwf	(btemp+1)^0,w,c
 12397  0129D0  B4D8               	btfsc	status,2,c
 12398  0129D2  D022               	goto	u12100
 12399  0129D4  0E02               	movlw	2
 12400  0129D6  6EE6               	movwf	postinc1,c
 12401  0129D8  0E00               	movlw	0
 12402  0129DA  6EE6               	movwf	postinc1,c
 12403  0129DC  0EF0               	movlw	low STR_77
 12404  0129DE  6EE6               	movwf	postinc1,c
 12405  0129E0  0EFF               	movlw	high STR_77
 12406  0129E2  6EE6               	movwf	postinc1,c
 12407                           
 12408                           ;stkvar	_fmt @ sp[(-36)+-4]
 12409  0129E4  0ED8               	movlw	-40
 12410  0129E6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12411  0129EC  0ED9               	movlw	-39
 12412  0129EE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12413  0129F4  006F FF78  F00B    	movff	postinc2,btemp+10
 12414  0129FA  006F FF74  F00C    	movff	postdec2,btemp+11
 12415  012A00  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12416  012A06  0060  F033  FFE6   	movff	btemp+11,postinc1
 12417  012A0C  EC24  F0C0         	call	_strncmp	;wreg free
 12418  012A10  5001               	movf	btemp^0,w,c
 12419  012A12  1002               	iorwf	(btemp+1)^0,w,c
 12420  012A14  A4D8               	btfss	status,2,c
 12421  012A16  D069               	goto	l12570
 12422  012A18                     u12100:
 12423                           
 12424                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 12425                           ;stkvar	_fmt @ sp[(-32)+-4]
 12426  012A18  0EDC               	movlw	-36
 12427  012A1A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12428  012A20  0EDD               	movlw	-35
 12429  012A22  006F FF8F FFDA     	movff	plusw1,fsr2h
 12430  012A28  0E02               	movlw	2
 12431  012A2A  26DE               	addwf	postinc2,f,c
 12432  012A2C  0E00               	movlw	0
 12433  012A2E  22DD               	addwfc	postdec2,f,c
 12434                           
 12435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 12436                           ;stkvar	_ap @ sp[(-32)+-6]
 12437  012A30  0EDA               	movlw	-38
 12438  012A32  006F FF8F FFD9     	movff	plusw1,fsr2l
 12439  012A38  0EDB               	movlw	-37
 12440  012A3A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12441  012A40  0E04               	movlw	4
 12442  012A42  5EDE               	subwf	postinc2,f,c
 12443  012A44  0E00               	movlw	0
 12444  012A46  5ADD               	subwfb	postdec2,f,c
 12445  012A48  006F FF78  F00B    	movff	postinc2,btemp+10
 12446  012A4E  006F FF74  F00C    	movff	postdec2,btemp+11
 12447  012A54  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12448  012A5A  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12449  012A60  006F FF78  F009    	movff	postinc2,btemp+8
 12450  012A66  006F FF78  F00A    	movff	postinc2,btemp+9
 12451  012A6C  006F FF78  F00B    	movff	postinc2,btemp+10
 12452  012A72  006F FF78  F00C    	movff	postinc2,btemp+11
 12453  012A78  0060  F024  F011   	movff	btemp+8,btemp+16
 12454  012A7E  0060  F028  F012   	movff	btemp+9,btemp+17
 12455  012A84  0060  F02C  F013   	movff	btemp+10,btemp+18
 12456  012A8A  0060  F030  F014   	movff	btemp+11,btemp+19
 12457  012A90  6A15               	clrf	(btemp+20)^0,c
 12458  012A92  BE14               	btfsc	(btemp+19)^0,7,c
 12459  012A94  6815               	setf	(btemp+20)^0,c
 12460  012A96  0060  F054  F016   	movff	btemp+20,btemp+21
 12461  012A9C  0060  F054  F017   	movff	btemp+20,btemp+22
 12462  012AA2  0060  F054  F018   	movff	btemp+20,btemp+23
 12463                           
 12464                           ;stkvar	_ll @ sp[(-32)+14]
 12465  012AA8  0EEE               	movlw	-18
 12466  012AAA  0060  F047  FFE3   	movff	btemp+16,plusw1
 12467  012AB0  0EEF               	movlw	-17
 12468  012AB2  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12469  012AB8  0EF0               	movlw	-16
 12470  012ABA  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12471  012AC0  0EF1               	movlw	-15
 12472  012AC2  0060  F053  FFE3   	movff	btemp+19,plusw1
 12473  012AC8  0EF2               	movlw	-14
 12474  012ACA  0060  F057  FFE3   	movff	btemp+20,plusw1
 12475  012AD0  0EF3               	movlw	-13
 12476  012AD2  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12477  012AD8  0EF4               	movlw	-12
 12478  012ADA  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12479  012AE0  0EF5               	movlw	-11
 12480  012AE2  0060  F063  FFE3   	movff	btemp+23,plusw1
 12481  012AE8  D729               	goto	l12554
 12482  012AEA                     l12570:
 12483                           
 12484                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 12485                           ;stkvar	_ct @ sp[(-32)+26]
 12486  012AEA  0EFA               	movlw	-6
 12487  012AEC  006F FF8C  F001    	movff	plusw1,btemp
 12488  012AF2  0E66               	movlw	102
 12489  012AF4  1801               	xorwf	btemp^0,w,c
 12490  012AF6  A4D8               	btfss	status,2,c
 12491  012AF8  D06E               	goto	l12582
 12492                           
 12493                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 12494                           ;stkvar	_fmt @ sp[(-32)+-4]
 12495  012AFA  0EDC               	movlw	-36
 12496  012AFC  006F FF8F FFD9     	movff	plusw1,fsr2l
 12497  012B02  0EDD               	movlw	-35
 12498  012B04  006F FF8F FFDA     	movff	plusw1,fsr2h
 12499  012B0A  006F FF7B FFF6     	movff	postinc2,tblptrl
 12500  012B10  006F FF77 FFF7     	movff	postdec2,tblptrh
 12501  012B16                     	if	0	;tblptru may be non-zero
 12502  012B16                     	endif
 12503  012B16                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12504  012B16  0E00               	movlw	low (__mediumconst shr (0+16))
 12505  012B18  6EF8               	movwf	tblptru,c
 12506  012B1A                     	endif
 12507                           
 12508                           ;stkvar	_c @ sp[(-32)+31]
 12509  012B1A  0008               	tblrd		*
 12510  012B1C  0EFF               	movlw	-1
 12511  012B1E  006F FFD7 FFE3     	movff	tablat,plusw1
 12512                           
 12513                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 12514                           ;stkvar	_fmt @ sp[(-32)+-4]
 12515  012B24  0EDC               	movlw	-36
 12516  012B26  006F FF8F FFD9     	movff	plusw1,fsr2l
 12517  012B2C  0EDD               	movlw	-35
 12518  012B2E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12519  012B34  2ADE               	incf	postinc2,f,c
 12520  012B36  0E00               	movlw	0
 12521  012B38  22DD               	addwfc	postdec2,f,c
 12522                           
 12523                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 12524                           ;stkvar	_ap @ sp[(-32)+-6]
 12525  012B3A  0EDA               	movlw	-38
 12526  012B3C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12527  012B42  0EDB               	movlw	-37
 12528  012B44  006F FF8F FFDA     	movff	plusw1,fsr2h
 12529  012B4A  0E04               	movlw	4
 12530  012B4C  5EDE               	subwf	postinc2,f,c
 12531  012B4E  0E00               	movlw	0
 12532  012B50  5ADD               	subwfb	postdec2,f,c
 12533  012B52  006F FF78  F00B    	movff	postinc2,btemp+10
 12534  012B58  006F FF74  F00C    	movff	postdec2,btemp+11
 12535  012B5E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12536  012B64  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12537  012B6A  006F FF78  F009    	movff	postinc2,btemp+8
 12538  012B70  006F FF78  F00A    	movff	postinc2,btemp+9
 12539  012B76  006F FF78  F00B    	movff	postinc2,btemp+10
 12540  012B7C  006F FF78  F00C    	movff	postinc2,btemp+11
 12541                           
 12542                           ;stkvar	_f @ sp[(-32)+22]
 12543  012B82  0EF6               	movlw	-10
 12544  012B84  0060  F027  FFE3   	movff	btemp+8,plusw1
 12545  012B8A  0EF7               	movlw	-9
 12546  012B8C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12547  012B92  0EF8               	movlw	-8
 12548  012B94  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12549  012B9A  0EF9               	movlw	-7
 12550  012B9C  0060  F033  FFE3   	movff	btemp+11,plusw1
 12551  012BA2                     l12578:
 12552                           
 12553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 12554                           ;stkvar	_c @ sp[(-32)+31]
 12555  012BA2  0EFF               	movlw	-1
 12556  012BA4  50E3               	movf	plusw1,w,c
 12557  012BA6  6EE6               	movwf	postinc1,c
 12558                           
 12559                           ;stkvar	_f @ sp[(-33)+22]
 12560  012BA8  0EF5               	movlw	-11
 12561  012BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 12562  012BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 12563  012BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 12564  012BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 12565                           
 12566                           ;stkvar	_fp @ sp[(-37)+-2]
 12567  012BC2  0ED9               	movlw	-39
 12568  012BC4  006F FF8F FFE6     	movff	plusw1,postinc1
 12569  012BCA  006F FF8F FFE6     	movff	plusw1,postinc1
 12570  012BD0  EC00  F080         	call	_efgtoa	;wreg free
 12571  012BD4  D3B6               	goto	l2362
 12572  012BD6                     l12582:
 12573                           
 12574                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 12575  012BD6  0E02               	movlw	2
 12576  012BD8  6EE6               	movwf	postinc1,c
 12577  012BDA  0E00               	movlw	0
 12578  012BDC  6EE6               	movwf	postinc1,c
 12579  012BDE  0EED               	movlw	low STR_82
 12580  012BE0  6EE6               	movwf	postinc1,c
 12581  012BE2  0EFF               	movlw	high STR_82
 12582  012BE4  6EE6               	movwf	postinc1,c
 12583                           
 12584                           ;stkvar	_ct @ sp[(-36)+26]
 12585  012BE6  0EF6               	movlw	246
 12586  012BE8  24E1               	addwf	fsr1l,w,c
 12587  012BEA  6E01               	movwf	btemp^0,c
 12588  012BEC  0EFF               	movlw	255
 12589  012BEE  20E2               	addwfc	fsr1h,w,c
 12590  012BF0  6E02               	movwf	(btemp+1)^0,c
 12591  012BF2  0060  F007  FFE6   	movff	btemp,postinc1
 12592  012BF8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12593  012BFE  EC24  F0C0         	call	_strncmp	;wreg free
 12594  012C02  5001               	movf	btemp^0,w,c
 12595  012C04  1002               	iorwf	(btemp+1)^0,w,c
 12596  012C06  A4D8               	btfss	status,2,c
 12597  012C08  D096               	goto	l12602
 12598                           
 12599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 12600                           ;stkvar	_fmt @ sp[(-32)+-4]
 12601  012C0A  0EDC               	movlw	-36
 12602  012C0C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12603  012C12  0EDD               	movlw	-35
 12604  012C14  006F FF8F FFDA     	movff	plusw1,fsr2h
 12605  012C1A  006F FF78  F00B    	movff	postinc2,btemp+10
 12606  012C20  006F FF74  F00C    	movff	postdec2,btemp+11
 12607  012C26  0E01               	movlw	1
 12608  012C28  260B               	addwf	(btemp+10)^0,f,c
 12609  012C2A  0E00               	movlw	0
 12610  012C2C  220C               	addwfc	(btemp+11)^0,f,c
 12611  012C2E  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12612  012C34  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12613  012C3A                     	if	0	;tblptru may be non-zero
 12614  012C3A                     	endif
 12615  012C3A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12616  012C3A  0E00               	movlw	low (__mediumconst shr (0+16))
 12617  012C3C  6EF8               	movwf	tblptru,c
 12618  012C3E                     	endif
 12619                           
 12620                           ;stkvar	_c @ sp[(-32)+31]
 12621  012C3E  0008               	tblrd		*
 12622  012C40  0EFF               	movlw	-1
 12623  012C42  006F FFD7 FFE3     	movff	tablat,plusw1
 12624  012C48  0EBF               	movlw	191
 12625  012C4A  6E0B               	movwf	(btemp+10)^0,c
 12626  012C4C  0EFF               	movlw	255
 12627  012C4E  6E0C               	movwf	(btemp+11)^0,c
 12628                           
 12629                           ;stkvar	_fmt @ sp[(-32)+-4]
 12630  012C50  0EDC               	movlw	-36
 12631  012C52  006F FF8F FFD9     	movff	plusw1,fsr2l
 12632  012C58  0EDD               	movlw	-35
 12633  012C5A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12634  012C60  006F FF7B FFF6     	movff	postinc2,tblptrl
 12635  012C66  006F FF77 FFF7     	movff	postdec2,tblptrh
 12636  012C6C                     	if	0	;tblptru may be non-zero
 12637  012C6C                     	endif
 12638  012C6C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12639  012C6C  0E00               	movlw	low (__mediumconst shr (0+16))
 12640  012C6E  6EF8               	movwf	tblptru,c
 12641  012C70                     	endif
 12642  012C70  0008               	tblrd		*
 12643  012C72  50F5               	movf	tablat,w,c
 12644  012C74  6E09               	movwf	(btemp+8)^0,c
 12645  012C76  6A0A               	clrf	(btemp+9)^0,c
 12646  012C78  500B               	movf	(btemp+10)^0,w,c
 12647  012C7A  2609               	addwf	(btemp+8)^0,f,c
 12648  012C7C  500C               	movf	(btemp+11)^0,w,c
 12649  012C7E  220A               	addwfc	(btemp+9)^0,f,c
 12650  012C80  500A               	movf	(btemp+9)^0,w,c
 12651  012C82  E106               	bnz	u12130
 12652  012C84  0E1A               	movlw	26
 12653  012C86  5C09               	subwf	(btemp+8)^0,w,c
 12654  012C88  B0D8               	btfsc	status,0,c
 12655  012C8A  D002               	goto	u12130
 12656  012C8C  0E01               	movlw	1
 12657  012C8E  D001               	goto	u12140
 12658  012C90                     u12130:
 12659  012C90  0E00               	movlw	0
 12660  012C92                     u12140:
 12661  012C92  6E0B               	movwf	(btemp+10)^0,c
 12662  012C94  6A0C               	clrf	(btemp+11)^0,c
 12663                           
 12664                           ;stkvar	_vfpfcnvrt$5582 @ sp[(-32)+2]
 12665  012C96  0EE2               	movlw	-30
 12666  012C98  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12667  012C9E  0EE3               	movlw	-29
 12668  012CA0  0060  F033  FFE3   	movff	btemp+11,plusw1
 12669                           
 12670                           ;stkvar	_vfpfcnvrt$5582 @ sp[(-32)+2]
 12671  012CA6  0EE2               	movlw	-30
 12672  012CA8  006F FF8C  F001    	movff	plusw1,btemp
 12673  012CAE  0EE3               	movlw	-29
 12674  012CB0  50E3               	movf	plusw1,w,c
 12675  012CB2  1001               	iorwf	btemp^0,w,c
 12676                           
 12677                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 12678                           ;stkvar	_ap @ sp[(-32)+-6]
 12679                           
 12680                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 12681                           
 12682                           ;stkvar	_f @ sp[(-32)+22]
 12683                           
 12684                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 12685                           ;stkvar	_ap @ sp[(-32)+-6]
 12686  012CB4  0EDA               	movlw	-38
 12687  012CB6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12688  012CBC  0EDB               	movlw	-37
 12689  012CBE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12690  012CC4  0E04               	movlw	4
 12691  012CC6  5EDE               	subwf	postinc2,f,c
 12692  012CC8  0E00               	movlw	0
 12693  012CCA  5ADD               	subwfb	postdec2,f,c
 12694  012CCC  006F FF78  F00B    	movff	postinc2,btemp+10
 12695  012CD2  006F FF74  F00C    	movff	postdec2,btemp+11
 12696  012CD8  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12697  012CDE  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12698  012CE4  006F FF78  F009    	movff	postinc2,btemp+8
 12699  012CEA  006F FF78  F00A    	movff	postinc2,btemp+9
 12700  012CF0  006F FF78  F00B    	movff	postinc2,btemp+10
 12701  012CF6  006F FF78  F00C    	movff	postinc2,btemp+11
 12702                           
 12703                           ;stkvar	_f @ sp[(-32)+22]
 12704  012CFC  0EF6               	movlw	-10
 12705  012CFE  0060  F027  FFE3   	movff	btemp+8,plusw1
 12706  012D04  0EF7               	movlw	-9
 12707  012D06  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12708  012D0C  0EF8               	movlw	-8
 12709  012D0E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12710  012D14  0EF9               	movlw	-7
 12711  012D16  0060  F033  FFE3   	movff	btemp+11,plusw1
 12712                           
 12713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 12714                           ;stkvar	_fmt @ sp[(-32)+-4]
 12715  012D1C  0EDC               	movlw	-36
 12716  012D1E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12717  012D24  0EDD               	movlw	-35
 12718  012D26  006F FF8F FFDA     	movff	plusw1,fsr2h
 12719  012D2C  0E02               	movlw	2
 12720  012D2E  26DE               	addwf	postinc2,f,c
 12721  012D30  0E00               	movlw	0
 12722  012D32  22DD               	addwfc	postdec2,f,c
 12723  012D34  D736               	goto	l12578
 12724  012D36                     l12602:
 12725                           
 12726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 12727                           ;stkvar	_fmt @ sp[(-32)+-4]
 12728  012D36  0EDC               	movlw	-36
 12729  012D38  006F FF8F FFD9     	movff	plusw1,fsr2l
 12730  012D3E  0EDD               	movlw	-35
 12731  012D40  006F FF8F FFDA     	movff	plusw1,fsr2h
 12732  012D46  006F FF7B FFF6     	movff	postinc2,tblptrl
 12733  012D4C  006F FF77 FFF7     	movff	postdec2,tblptrh
 12734  012D52                     	if	0	;tblptru may be non-zero
 12735  012D52                     	endif
 12736  012D52                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12737  012D52  0E00               	movlw	low (__mediumconst shr (0+16))
 12738  012D54  6EF8               	movwf	tblptru,c
 12739  012D56                     	endif
 12740  012D56  0008               	tblrd		*
 12741  012D58  50F5               	movf	tablat,w,c
 12742  012D5A  0A73               	xorlw	115
 12743  012D5C  A4D8               	btfss	status,2,c
 12744  012D5E  D042               	goto	l12612
 12745                           
 12746                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 12747                           ;stkvar	_fmt @ sp[(-32)+-4]
 12748  012D60  0EDC               	movlw	-36
 12749  012D62  006F FF8F FFD9     	movff	plusw1,fsr2l
 12750  012D68  0EDD               	movlw	-35
 12751  012D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12752  012D70  2ADE               	incf	postinc2,f,c
 12753  012D72  0E00               	movlw	0
 12754  012D74  22DD               	addwfc	postdec2,f,c
 12755                           
 12756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 12757                           ;stkvar	_ap @ sp[(-32)+-6]
 12758  012D76  0EDA               	movlw	-38
 12759  012D78  006F FF8F FFD9     	movff	plusw1,fsr2l
 12760  012D7E  0EDB               	movlw	-37
 12761  012D80  006F FF8F FFDA     	movff	plusw1,fsr2h
 12762  012D86  0E02               	movlw	2
 12763  012D88  5EDE               	subwf	postinc2,f,c
 12764  012D8A  0E00               	movlw	0
 12765  012D8C  5ADD               	subwfb	postdec2,f,c
 12766  012D8E  006F FF78  F00B    	movff	postinc2,btemp+10
 12767  012D94  006F FF74  F00C    	movff	postdec2,btemp+11
 12768  012D9A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12769  012DA0  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12770  012DA6  006F FF78  F00B    	movff	postinc2,btemp+10
 12771  012DAC  006F FF74  F00C    	movff	postdec2,btemp+11
 12772                           
 12773                           ;stkvar	_cp @ sp[(-32)+29]
 12774  012DB2  0EFE               	movlw	-2
 12775  012DB4  0060  F033  FFE3   	movff	btemp+11,plusw1
 12776  012DBA  0EFD               	movlw	-3
 12777  012DBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12778                           
 12779                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 12780                           ;stkvar	_cp @ sp[(-32)+29]
 12781  012DC2  0EFD               	movlw	-3
 12782  012DC4  006F FF8F FFE6     	movff	plusw1,postinc1
 12783  012DCA  006F FF8F FFE6     	movff	plusw1,postinc1
 12784                           
 12785                           ;stkvar	_fp @ sp[(-34)+-2]
 12786  012DD0  0EDC               	movlw	-36
 12787  012DD2  006F FF8F FFE6     	movff	plusw1,postinc1
 12788  012DD8  006F FF8F FFE6     	movff	plusw1,postinc1
 12789  012DDE  EC08  F0BA         	call	_stoa	;wreg free
 12790  012DE2  D2AF               	goto	l2362
 12791  012DE4                     l12612:
 12792                           
 12793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 12794                           ;stkvar	_fmt @ sp[(-32)+-4]
 12795  012DE4  0EDC               	movlw	-36
 12796  012DE6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12797  012DEC  0EDD               	movlw	-35
 12798  012DEE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12799  012DF4  006F FF7B FFF6     	movff	postinc2,tblptrl
 12800  012DFA  006F FF77 FFF7     	movff	postdec2,tblptrh
 12801  012E00                     	if	0	;tblptru may be non-zero
 12802  012E00                     	endif
 12803  012E00                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12804  012E00  0E00               	movlw	low (__mediumconst shr (0+16))
 12805  012E02  6EF8               	movwf	tblptru,c
 12806  012E04                     	endif
 12807  012E04  0008               	tblrd		*
 12808  012E06  50F5               	movf	tablat,w,c
 12809  012E08  0A75               	xorlw	117
 12810  012E0A  A4D8               	btfss	status,2,c
 12811  012E0C  D07C               	goto	l12622
 12812                           
 12813                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 12814                           ;stkvar	_fmt @ sp[(-32)+-4]
 12815  012E0E  0EDC               	movlw	-36
 12816  012E10  006F FF8F FFD9     	movff	plusw1,fsr2l
 12817  012E16  0EDD               	movlw	-35
 12818  012E18  006F FF8F FFDA     	movff	plusw1,fsr2h
 12819  012E1E  2ADE               	incf	postinc2,f,c
 12820  012E20  0E00               	movlw	0
 12821  012E22  22DD               	addwfc	postdec2,f,c
 12822                           
 12823                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 12824                           ;stkvar	_ap @ sp[(-32)+-6]
 12825  012E24  0EDA               	movlw	-38
 12826  012E26  006F FF8F FFD9     	movff	plusw1,fsr2l
 12827  012E2C  0EDB               	movlw	-37
 12828  012E2E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12829  012E34  0E02               	movlw	2
 12830  012E36  5EDE               	subwf	postinc2,f,c
 12831  012E38  0E00               	movlw	0
 12832  012E3A  5ADD               	subwfb	postdec2,f,c
 12833  012E3C  006F FF78  F00B    	movff	postinc2,btemp+10
 12834  012E42  006F FF74  F00C    	movff	postdec2,btemp+11
 12835  012E48  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12836  012E4E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12837  012E54  006F FF78  F00B    	movff	postinc2,btemp+10
 12838  012E5A  006F FF74  F00C    	movff	postdec2,btemp+11
 12839  012E60  500B               	movf	(btemp+10)^0,w,c
 12840  012E62  6E11               	movwf	(btemp+16)^0,c
 12841  012E64  500C               	movf	(btemp+11)^0,w,c
 12842  012E66  6E12               	movwf	(btemp+17)^0,c
 12843  012E68  6A13               	clrf	(btemp+18)^0,c
 12844  012E6A  6A14               	clrf	(btemp+19)^0,c
 12845  012E6C  6A15               	clrf	(btemp+20)^0,c
 12846  012E6E  6A16               	clrf	(btemp+21)^0,c
 12847  012E70  6A17               	clrf	(btemp+22)^0,c
 12848  012E72  6A18               	clrf	(btemp+23)^0,c
 12849                           
 12850                           ;stkvar	_llu @ sp[(-32)+6]
 12851  012E74  0EE6               	movlw	-26
 12852  012E76  0060  F047  FFE3   	movff	btemp+16,plusw1
 12853  012E7C  0EE7               	movlw	-25
 12854  012E7E  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12855  012E84  0EE8               	movlw	-24
 12856  012E86  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12857  012E8C  0EE9               	movlw	-23
 12858  012E8E  0060  F053  FFE3   	movff	btemp+19,plusw1
 12859  012E94  0EEA               	movlw	-22
 12860  012E96  0060  F057  FFE3   	movff	btemp+20,plusw1
 12861  012E9C  0EEB               	movlw	-21
 12862  012E9E  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12863  012EA4  0EEC               	movlw	-20
 12864  012EA6  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12865  012EAC  0EED               	movlw	-19
 12866  012EAE  0060  F063  FFE3   	movff	btemp+23,plusw1
 12867                           
 12868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 12869                           ;stkvar	_llu @ sp[(-32)+6]
 12870  012EB4  50E1               	movf	fsr1l,w,c
 12871  012EB6  0FE6               	addlw	-26
 12872  012EB8  6ED9               	movwf	fsr2l,c
 12873  012EBA  50E2               	movf	fsr1h,w,c
 12874  012EBC  6EDA               	movwf	fsr2h,c
 12875  012EBE  0EFF               	movlw	255
 12876  012EC0  22DA               	addwfc	fsr2h,f,c
 12877  012EC2  006F FF7B FFE6     	movff	postinc2,postinc1
 12878  012EC8  006F FF7B FFE6     	movff	postinc2,postinc1
 12879  012ECE  006F FF7B FFE6     	movff	postinc2,postinc1
 12880  012ED4  006F FF7B FFE6     	movff	postinc2,postinc1
 12881  012EDA  006F FF7B FFE6     	movff	postinc2,postinc1
 12882  012EE0  006F FF7B FFE6     	movff	postinc2,postinc1
 12883  012EE6  006F FF7B FFE6     	movff	postinc2,postinc1
 12884  012EEC  006F FF7B FFE6     	movff	postinc2,postinc1
 12885                           
 12886                           ;stkvar	_fp @ sp[(-40)+-2]
 12887  012EF2  0ED6               	movlw	-42
 12888  012EF4  006F FF8F FFE6     	movff	plusw1,postinc1
 12889  012EFA  006F FF8F FFE6     	movff	plusw1,postinc1
 12890  012F00  ECF4  F0B3         	call	_utoa	;wreg free
 12891  012F04  D21E               	goto	l2362
 12892  012F06                     l12622:
 12893                           
 12894                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 12895  012F06  0E02               	movlw	2
 12896  012F08  6EE6               	movwf	postinc1,c
 12897  012F0A  0E00               	movlw	0
 12898  012F0C  6EE6               	movwf	postinc1,c
 12899  012F0E  0EF3               	movlw	low STR_87
 12900  012F10  6EE6               	movwf	postinc1,c
 12901  012F12  0EFF               	movlw	high STR_87
 12902  012F14  6EE6               	movwf	postinc1,c
 12903                           
 12904                           ;stkvar	_fmt @ sp[(-36)+-4]
 12905  012F16  0ED8               	movlw	-40
 12906  012F18  006F FF8F FFD9     	movff	plusw1,fsr2l
 12907  012F1E  0ED9               	movlw	-39
 12908  012F20  006F FF8F FFDA     	movff	plusw1,fsr2h
 12909  012F26  006F FF78  F00B    	movff	postinc2,btemp+10
 12910  012F2C  006F FF74  F00C    	movff	postdec2,btemp+11
 12911  012F32  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12912  012F38  0060  F033  FFE6   	movff	btemp+11,postinc1
 12913  012F3E  EC24  F0C0         	call	_strncmp	;wreg free
 12914  012F42  5001               	movf	btemp^0,w,c
 12915  012F44  1002               	iorwf	(btemp+1)^0,w,c
 12916  012F46  A4D8               	btfss	status,2,c
 12917  012F48  D039               	goto	l12632
 12918                           
 12919                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 12920                           ;stkvar	_fmt @ sp[(-32)+-4]
 12921  012F4A  0EDC               	movlw	-36
 12922  012F4C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12923  012F52  0EDD               	movlw	-35
 12924  012F54  006F FF8F FFDA     	movff	plusw1,fsr2h
 12925  012F5A  0E02               	movlw	2
 12926  012F5C  26DE               	addwf	postinc2,f,c
 12927  012F5E  0E00               	movlw	0
 12928  012F60  22DD               	addwfc	postdec2,f,c
 12929                           
 12930                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 12931                           ;stkvar	_ap @ sp[(-32)+-6]
 12932  012F62  0EDA               	movlw	-38
 12933  012F64  006F FF8F FFD9     	movff	plusw1,fsr2l
 12934  012F6A  0EDB               	movlw	-37
 12935  012F6C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12936  012F72  0E04               	movlw	4
 12937  012F74  5EDE               	subwf	postinc2,f,c
 12938  012F76  0E00               	movlw	0
 12939  012F78  5ADD               	subwfb	postdec2,f,c
 12940  012F7A  006F FF78  F00B    	movff	postinc2,btemp+10
 12941  012F80  006F FF74  F00C    	movff	postdec2,btemp+11
 12942  012F86  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12943  012F8C  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12944  012F92  006F FF78  F009    	movff	postinc2,btemp+8
 12945  012F98  006F FF78  F00A    	movff	postinc2,btemp+9
 12946  012F9E  006F FF78  F00B    	movff	postinc2,btemp+10
 12947  012FA4  006F FF78  F00C    	movff	postinc2,btemp+11
 12948  012FAA  5009               	movf	(btemp+8)^0,w,c
 12949  012FAC  6E11               	movwf	(btemp+16)^0,c
 12950  012FAE  500A               	movf	(btemp+9)^0,w,c
 12951  012FB0  6E12               	movwf	(btemp+17)^0,c
 12952  012FB2  500B               	movf	(btemp+10)^0,w,c
 12953  012FB4  6E13               	movwf	(btemp+18)^0,c
 12954  012FB6  500C               	movf	(btemp+11)^0,w,c
 12955  012FB8  6E14               	movwf	(btemp+19)^0,c
 12956  012FBA  D758               	goto	L10
 12957  012FBC                     l12632:
 12958                           
 12959                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 12960                           ;stkvar	_fmt @ sp[(-32)+-4]
 12961  012FBC  0EDC               	movlw	-36
 12962  012FBE  006F FF8F FFD9     	movff	plusw1,fsr2l
 12963  012FC4  0EDD               	movlw	-35
 12964  012FC6  006F FF8F FFDA     	movff	plusw1,fsr2h
 12965  012FCC  006F FF7B FFF6     	movff	postinc2,tblptrl
 12966  012FD2  006F FF77 FFF7     	movff	postdec2,tblptrh
 12967  012FD8                     	if	0	;tblptru may be non-zero
 12968  012FD8                     	endif
 12969  012FD8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12970  012FD8  0E00               	movlw	low (__mediumconst shr (0+16))
 12971  012FDA  6EF8               	movwf	tblptru,c
 12972  012FDC                     	endif
 12973  012FDC  0008               	tblrd		*
 12974  012FDE  50F5               	movf	tablat,w,c
 12975  012FE0  0A78               	xorlw	120
 12976  012FE2  B4D8               	btfsc	status,2,c
 12977  012FE4  D015               	goto	u12200
 12978                           
 12979                           ;stkvar	_fmt @ sp[(-32)+-4]
 12980  012FE6  0EDC               	movlw	-36
 12981  012FE8  006F FF8F FFD9     	movff	plusw1,fsr2l
 12982  012FEE  0EDD               	movlw	-35
 12983  012FF0  006F FF8F FFDA     	movff	plusw1,fsr2h
 12984  012FF6  006F FF7B FFF6     	movff	postinc2,tblptrl
 12985  012FFC  006F FF77 FFF7     	movff	postdec2,tblptrh
 12986  013002                     	if	0	;tblptru may be non-zero
 12987  013002                     	endif
 12988  013002                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12989  013002  0E00               	movlw	low (__mediumconst shr (0+16))
 12990  013004  6EF8               	movwf	tblptru,c
 12991  013006                     	endif
 12992  013006  0008               	tblrd		*
 12993  013008  50F5               	movf	tablat,w,c
 12994  01300A  0A58               	xorlw	88
 12995  01300C  A4D8               	btfss	status,2,c
 12996  01300E  D094               	goto	l12646
 12997  013010                     u12200:
 12998                           
 12999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 13000                           ;stkvar	_fmt @ sp[(-32)+-4]
 13001  013010  0EDC               	movlw	-36
 13002  013012  006F FF8F FFD9     	movff	plusw1,fsr2l
 13003  013018  0EDD               	movlw	-35
 13004  01301A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13005  013020  006F FF7B FFF6     	movff	postinc2,tblptrl
 13006  013026  006F FF77 FFF7     	movff	postdec2,tblptrh
 13007  01302C                     	if	0	;tblptru may be non-zero
 13008  01302C                     	endif
 13009  01302C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13010  01302C  0E00               	movlw	low (__mediumconst shr (0+16))
 13011  01302E  6EF8               	movwf	tblptru,c
 13012  013030                     	endif
 13013                           
 13014                           ;stkvar	_c @ sp[(-32)+31]
 13015  013030  0008               	tblrd		*
 13016  013032  0EFF               	movlw	-1
 13017  013034  006F FFD7 FFE3     	movff	tablat,plusw1
 13018                           
 13019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 13020                           ;stkvar	_fmt @ sp[(-32)+-4]
 13021  01303A  0EDC               	movlw	-36
 13022  01303C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13023  013042  0EDD               	movlw	-35
 13024  013044  006F FF8F FFDA     	movff	plusw1,fsr2h
 13025  01304A  2ADE               	incf	postinc2,f,c
 13026  01304C  0E00               	movlw	0
 13027  01304E  22DD               	addwfc	postdec2,f,c
 13028                           
 13029                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 13030                           ;stkvar	_ap @ sp[(-32)+-6]
 13031  013050  0EDA               	movlw	-38
 13032  013052  006F FF8F FFD9     	movff	plusw1,fsr2l
 13033  013058  0EDB               	movlw	-37
 13034  01305A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13035  013060  0E02               	movlw	2
 13036  013062  5EDE               	subwf	postinc2,f,c
 13037  013064  0E00               	movlw	0
 13038  013066  5ADD               	subwfb	postdec2,f,c
 13039  013068  006F FF78  F00B    	movff	postinc2,btemp+10
 13040  01306E  006F FF74  F00C    	movff	postdec2,btemp+11
 13041  013074  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13042  01307A  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13043  013080  006F FF78  F00B    	movff	postinc2,btemp+10
 13044  013086  006F FF74  F00C    	movff	postdec2,btemp+11
 13045  01308C  500B               	movf	(btemp+10)^0,w,c
 13046  01308E  6E11               	movwf	(btemp+16)^0,c
 13047  013090  500C               	movf	(btemp+11)^0,w,c
 13048  013092  6E12               	movwf	(btemp+17)^0,c
 13049  013094  6A13               	clrf	(btemp+18)^0,c
 13050  013096  6A14               	clrf	(btemp+19)^0,c
 13051  013098  6A15               	clrf	(btemp+20)^0,c
 13052  01309A  6A16               	clrf	(btemp+21)^0,c
 13053  01309C  6A17               	clrf	(btemp+22)^0,c
 13054  01309E  6A18               	clrf	(btemp+23)^0,c
 13055                           
 13056                           ;stkvar	_llu @ sp[(-32)+6]
 13057  0130A0  0EE6               	movlw	-26
 13058  0130A2  0060  F047  FFE3   	movff	btemp+16,plusw1
 13059  0130A8  0EE7               	movlw	-25
 13060  0130AA  0060  F04B  FFE3   	movff	btemp+17,plusw1
 13061  0130B0  0EE8               	movlw	-24
 13062  0130B2  0060  F04F  FFE3   	movff	btemp+18,plusw1
 13063  0130B8  0EE9               	movlw	-23
 13064  0130BA  0060  F053  FFE3   	movff	btemp+19,plusw1
 13065  0130C0  0EEA               	movlw	-22
 13066  0130C2  0060  F057  FFE3   	movff	btemp+20,plusw1
 13067  0130C8  0EEB               	movlw	-21
 13068  0130CA  0060  F05B  FFE3   	movff	btemp+21,plusw1
 13069  0130D0  0EEC               	movlw	-20
 13070  0130D2  0060  F05F  FFE3   	movff	btemp+22,plusw1
 13071  0130D8  0EED               	movlw	-19
 13072  0130DA  0060  F063  FFE3   	movff	btemp+23,plusw1
 13073                           
 13074                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 13075                           ;stkvar	_c @ sp[(-32)+31]
 13076  0130E0  0EFF               	movlw	-1
 13077  0130E2  50E3               	movf	plusw1,w,c
 13078  0130E4  6EE6               	movwf	postinc1,c
 13079                           
 13080                           ;stkvar	_llu @ sp[(-33)+6]
 13081  0130E6  50E1               	movf	fsr1l,w,c
 13082  0130E8  0FE5               	addlw	-27
 13083  0130EA  6ED9               	movwf	fsr2l,c
 13084  0130EC  50E2               	movf	fsr1h,w,c
 13085  0130EE  6EDA               	movwf	fsr2h,c
 13086  0130F0  0EFF               	movlw	255
 13087  0130F2  22DA               	addwfc	fsr2h,f,c
 13088  0130F4  006F FF7B FFE6     	movff	postinc2,postinc1
 13089  0130FA  006F FF7B FFE6     	movff	postinc2,postinc1
 13090  013100  006F FF7B FFE6     	movff	postinc2,postinc1
 13091  013106  006F FF7B FFE6     	movff	postinc2,postinc1
 13092  01310C  006F FF7B FFE6     	movff	postinc2,postinc1
 13093  013112  006F FF7B FFE6     	movff	postinc2,postinc1
 13094  013118  006F FF7B FFE6     	movff	postinc2,postinc1
 13095  01311E  006F FF7B FFE6     	movff	postinc2,postinc1
 13096                           
 13097                           ;stkvar	_fp @ sp[(-41)+-2]
 13098  013124  0ED5               	movlw	-43
 13099  013126  006F FF8F FFE6     	movff	plusw1,postinc1
 13100  01312C  006F FF8F FFE6     	movff	plusw1,postinc1
 13101  013132  EC61  F0B0         	call	_xtoa	;wreg free
 13102  013136  D105               	goto	l2362
 13103  013138                     l12646:
 13104                           
 13105                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 13106  013138  0E02               	movlw	2
 13107  01313A  6EE6               	movwf	postinc1,c
 13108  01313C  0E00               	movlw	0
 13109  01313E  6EE6               	movwf	postinc1,c
 13110  013140  0EF6               	movlw	low STR_92
 13111  013142  6EE6               	movwf	postinc1,c
 13112  013144  0EFF               	movlw	high STR_92
 13113  013146  6EE6               	movwf	postinc1,c
 13114                           
 13115                           ;stkvar	_fmt @ sp[(-36)+-4]
 13116  013148  0ED8               	movlw	-40
 13117  01314A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13118  013150  0ED9               	movlw	-39
 13119  013152  006F FF8F FFDA     	movff	plusw1,fsr2h
 13120  013158  006F FF78  F00B    	movff	postinc2,btemp+10
 13121  01315E  006F FF74  F00C    	movff	postdec2,btemp+11
 13122  013164  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13123  01316A  0060  F033  FFE6   	movff	btemp+11,postinc1
 13124  013170  EC24  F0C0         	call	_strncmp	;wreg free
 13125  013174  5001               	movf	btemp^0,w,c
 13126  013176  1002               	iorwf	(btemp+1)^0,w,c
 13127  013178  B4D8               	btfsc	status,2,c
 13128  01317A  D022               	goto	u12220
 13129  01317C  0E02               	movlw	2
 13130  01317E  6EE6               	movwf	postinc1,c
 13131  013180  0E00               	movlw	0
 13132  013182  6EE6               	movwf	postinc1,c
 13133  013184  0EE7               	movlw	low STR_96
 13134  013186  6EE6               	movwf	postinc1,c
 13135  013188  0EFF               	movlw	high STR_96
 13136  01318A  6EE6               	movwf	postinc1,c
 13137                           
 13138                           ;stkvar	_fmt @ sp[(-36)+-4]
 13139  01318C  0ED8               	movlw	-40
 13140  01318E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13141  013194  0ED9               	movlw	-39
 13142  013196  006F FF8F FFDA     	movff	plusw1,fsr2h
 13143  01319C  006F FF78  F00B    	movff	postinc2,btemp+10
 13144  0131A2  006F FF74  F00C    	movff	postdec2,btemp+11
 13145  0131A8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13146  0131AE  0060  F033  FFE6   	movff	btemp+11,postinc1
 13147  0131B4  EC24  F0C0         	call	_strncmp	;wreg free
 13148  0131B8  5001               	movf	btemp^0,w,c
 13149  0131BA  1002               	iorwf	(btemp+1)^0,w,c
 13150  0131BC  A4D8               	btfss	status,2,c
 13151  0131BE  D058               	goto	l12660
 13152  0131C0                     u12220:
 13153                           
 13154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 13155                           ;stkvar	_fmt @ sp[(-32)+-4]
 13156  0131C0  0EDC               	movlw	-36
 13157  0131C2  006F FF8F FFD9     	movff	plusw1,fsr2l
 13158  0131C8  0EDD               	movlw	-35
 13159  0131CA  006F FF8F FFDA     	movff	plusw1,fsr2h
 13160  0131D0  006F FF78  F00B    	movff	postinc2,btemp+10
 13161  0131D6  006F FF74  F00C    	movff	postdec2,btemp+11
 13162  0131DC  0E01               	movlw	1
 13163  0131DE  260B               	addwf	(btemp+10)^0,f,c
 13164  0131E0  0E00               	movlw	0
 13165  0131E2  220C               	addwfc	(btemp+11)^0,f,c
 13166  0131E4  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 13167  0131EA  0060  F033  FFF7   	movff	btemp+11,tblptrh
 13168  0131F0                     	if	0	;tblptru may be non-zero
 13169  0131F0                     	endif
 13170  0131F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13171  0131F0  0E00               	movlw	low (__mediumconst shr (0+16))
 13172  0131F2  6EF8               	movwf	tblptru,c
 13173  0131F4                     	endif
 13174                           
 13175                           ;stkvar	_c @ sp[(-32)+31]
 13176  0131F4  0008               	tblrd		*
 13177  0131F6  0EFF               	movlw	-1
 13178  0131F8  006F FFD7 FFE3     	movff	tablat,plusw1
 13179                           
 13180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 13181                           ;stkvar	_fmt @ sp[(-32)+-4]
 13182  0131FE  0EDC               	movlw	-36
 13183  013200  006F FF8F FFD9     	movff	plusw1,fsr2l
 13184  013206  0EDD               	movlw	-35
 13185  013208  006F FF8F FFDA     	movff	plusw1,fsr2h
 13186  01320E  0E02               	movlw	2
 13187  013210  26DE               	addwf	postinc2,f,c
 13188  013212  0E00               	movlw	0
 13189  013214  22DD               	addwfc	postdec2,f,c
 13190                           
 13191                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 13192                           ;stkvar	_ap @ sp[(-32)+-6]
 13193  013216  0EDA               	movlw	-38
 13194  013218  006F FF8F FFD9     	movff	plusw1,fsr2l
 13195  01321E  0EDB               	movlw	-37
 13196  013220  006F FF8F FFDA     	movff	plusw1,fsr2h
 13197  013226  0E04               	movlw	4
 13198  013228  5EDE               	subwf	postinc2,f,c
 13199  01322A  0E00               	movlw	0
 13200  01322C  5ADD               	subwfb	postdec2,f,c
 13201  01322E  006F FF78  F00B    	movff	postinc2,btemp+10
 13202  013234  006F FF74  F00C    	movff	postdec2,btemp+11
 13203  01323A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13204  013240  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13205  013246  006F FF78  F009    	movff	postinc2,btemp+8
 13206  01324C  006F FF78  F00A    	movff	postinc2,btemp+9
 13207  013252  006F FF78  F00B    	movff	postinc2,btemp+10
 13208  013258  006F FF78  F00C    	movff	postinc2,btemp+11
 13209  01325E  5009               	movf	(btemp+8)^0,w,c
 13210  013260  6E11               	movwf	(btemp+16)^0,c
 13211  013262  500A               	movf	(btemp+9)^0,w,c
 13212  013264  6E12               	movwf	(btemp+17)^0,c
 13213  013266  500B               	movf	(btemp+10)^0,w,c
 13214  013268  6E13               	movwf	(btemp+18)^0,c
 13215  01326A  500C               	movf	(btemp+11)^0,w,c
 13216  01326C  6E14               	movwf	(btemp+19)^0,c
 13217  01326E  D714               	goto	L11
 13218  013270                     l12660:
 13219                           
 13220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 13221                           ;stkvar	_fmt @ sp[(-32)+-4]
 13222  013270  0EDC               	movlw	-36
 13223  013272  006F FF8F FFD9     	movff	plusw1,fsr2l
 13224  013278  0EDD               	movlw	-35
 13225  01327A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13226  013280  006F FF7B FFF6     	movff	postinc2,tblptrl
 13227  013286  006F FF77 FFF7     	movff	postdec2,tblptrh
 13228  01328C                     	if	0	;tblptru may be non-zero
 13229  01328C                     	endif
 13230  01328C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13231  01328C  0E00               	movlw	low (__mediumconst shr (0+16))
 13232  01328E  6EF8               	movwf	tblptru,c
 13233  013290                     	endif
 13234  013290  0008               	tblrd		*
 13235  013292  50F5               	movf	tablat,w,c
 13236  013294  0A25               	xorlw	37
 13237  013296  A4D8               	btfss	status,2,c
 13238  013298  D01A               	goto	l12670
 13239                           
 13240                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 13241                           ;stkvar	_fmt @ sp[(-32)+-4]
 13242  01329A  0EDC               	movlw	-36
 13243  01329C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13244  0132A2  0EDD               	movlw	-35
 13245  0132A4  006F FF8F FFDA     	movff	plusw1,fsr2h
 13246  0132AA  2ADE               	incf	postinc2,f,c
 13247  0132AC  0E00               	movlw	0
 13248  0132AE  22DD               	addwfc	postdec2,f,c
 13249                           
 13250                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 13251                           ;stkvar	_fp @ sp[(-32)+-2]
 13252  0132B0  0EDE               	movlw	-34
 13253  0132B2  006F FF8F FFE6     	movff	plusw1,postinc1
 13254  0132B8  006F FF8F FFE6     	movff	plusw1,postinc1
 13255  0132BE  0E25               	movlw	37
 13256  0132C0  6EE6               	movwf	postinc1,c
 13257  0132C2  0E00               	movlw	0
 13258  0132C4  6EE6               	movwf	postinc1,c
 13259  0132C6  ECD0  F0CB         	call	_fputc	;wreg free
 13260  0132CA                     l12666:
 13261                           
 13262                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 13263  0132CA  0E01               	movlw	1
 13264  0132CC  D00C               	goto	L12
 13265  0132CE                     l12670:
 13266                           
 13267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 13268                           ;stkvar	_fmt @ sp[(-32)+-4]
 13269  0132CE  0EDC               	movlw	-36
 13270  0132D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 13271  0132D6  0EDD               	movlw	-35
 13272  0132D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 13273  0132DE  2ADE               	incf	postinc2,f,c
 13274  0132E0  0E00               	movlw	0
 13275  0132E2  22DD               	addwfc	postdec2,f,c
 13276                           
 13277                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 13278  0132E4  0E00               	movlw	0
 13279  0132E6                     L12:
 13280  0132E6  6E01               	movwf	btemp^0,c
 13281  0132E8  0E00               	movlw	0
 13282  0132EA  6E02               	movwf	(btemp+1)^0,c
 13283  0132EC  D02A               	goto	l2362
 13284  0132EE                     l12676:
 13285                           
 13286                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 13287                           ;stkvar	_fp @ sp[(-32)+-2]
 13288  0132EE  0EDE               	movlw	-34
 13289  0132F0  006F FF8F FFE6     	movff	plusw1,postinc1
 13290  0132F6  006F FF8F FFE6     	movff	plusw1,postinc1
 13291                           
 13292                           ;stkvar	_fmt @ sp[(-34)+-4]
 13293  0132FC  0EDA               	movlw	-38
 13294  0132FE  006F FF8F FFD9     	movff	plusw1,fsr2l
 13295  013304  0EDB               	movlw	-37
 13296  013306  006F FF8F FFDA     	movff	plusw1,fsr2h
 13297  01330C  006F FF7B FFF6     	movff	postinc2,tblptrl
 13298  013312  006F FF77 FFF7     	movff	postdec2,tblptrh
 13299  013318                     	if	0	;tblptru may be non-zero
 13300  013318                     	endif
 13301  013318                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13302  013318  0E00               	movlw	low (__mediumconst shr (0+16))
 13303  01331A  6EF8               	movwf	tblptru,c
 13304  01331C                     	endif
 13305  01331C  0008               	tblrd		*
 13306  01331E  50F5               	movf	tablat,w,c
 13307  013320  6EE6               	movwf	postinc1,c
 13308  013322  0E00               	movlw	0
 13309  013324  6EE6               	movwf	postinc1,c
 13310  013326  ECD0  F0CB         	call	_fputc	;wreg free
 13311                           
 13312                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 13313                           ;stkvar	_fmt @ sp[(-32)+-4]
 13314  01332A  0EDC               	movlw	-36
 13315  01332C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13316  013332  0EDD               	movlw	-35
 13317  013334  006F FF8F FFDA     	movff	plusw1,fsr2h
 13318  01333A  2ADE               	incf	postinc2,f,c
 13319  01333C  0E00               	movlw	0
 13320  01333E  22DD               	addwfc	postdec2,f,c
 13321  013340  D7C4               	goto	l12666
 13322  013342                     l2362:
 13323                           
 13324                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 13325  013342  0EDA               	movlw	218
 13326  013344  26E1               	addwf	fsr1l,f,c
 13327  013346  0EFF               	movlw	255
 13328  013348  22E2               	addwfc	fsr1h,f,c
 13329  01334A  0012               	return		;funcret
 13330  01334C                     __end_of_vfpfcnvrt:
 13331                           	opt callstack 0
 13332                           
 13333 ;; *************** function _xtoa *****************
 13334 ;; Defined at:
 13335 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13336 ;; Parameters:    Size  Location     Type
 13337 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13338 ;;		 -> f(6), NULL(0), 
 13339 ;;  d               8  [STACK] unsigned long long 
 13340 ;;  x               1  [STACK] unsigned char 
 13341 ;; Auto vars:     Size  Location     Type
 13342 ;;  n               8  [STACK] unsigned long long 
 13343 ;;  c               2  [STACK] int 
 13344 ;;  i               2  [STACK] int 
 13345 ;;  w               2  [STACK] int 
 13346 ;;  p               2  [STACK] int 
 13347 ;; Return value:  Size  Location     Type
 13348 ;;                  2  [STACK] int 
 13349 ;; Registers used:
 13350 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 13351 ;; Tracked objects:
 13352 ;;		On entry : 0/0
 13353 ;;		On exit  : 0/0
 13354 ;;		Unchanged: 0/0
 13355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13360 ;;Total ram usage:        0 bytes
 13361 ;; Hardware stack levels used:    1
 13362 ;; Hardware stack levels required when called:   20
 13363 ;; This function calls:
 13364 ;;		_isalpha
 13365 ;;		_isupper
 13366 ;;		_pad
 13367 ;;		_toupper
 13368 ;; This function is called by:
 13369 ;;		_vfpfcnvrt
 13370 ;; This function uses a reentrant model
 13371 ;;
 13372                           
 13373                           	psect	text48
 13374  0160C2                     __ptext48:
 13375                           	opt callstack 0
 13376  0160C2                     _xtoa:
 13377                           	opt callstack 0
 13378                           
 13379                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 13380  0160C2  0E14               	movlw	20
 13381  0160C4  26E1               	addwf	fsr1l,f,c
 13382  0160C6  0E00               	movlw	0
 13383  0160C8  22E2               	addwfc	fsr1h,f,c
 13384                           
 13385                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 13386                           
 13387                           ;incstack = 0
 13388 ;; hardware stack exceeded
 13389  0160CA  AE3D               	btfss	(_prec+1)^0,7,c
 13390                           
 13391                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 13392  0160CC  923E               	bcf	_flags^0,1,c
 13393                           
 13394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 13395  0160CE  BE3D               	btfsc	(_prec+1)^0,7,c
 13396  0160D0  D005               	goto	u11760
 13397  0160D2  503D               	movf	(_prec+1)^0,w,c
 13398  0160D4  E110               	bnz	l12396
 13399  0160D6  043C               	decf	_prec^0,w,c
 13400  0160D8  B0D8               	btfsc	status,0,c
 13401  0160DA  D00D               	goto	l12396
 13402  0160DC                     u11760:
 13403  0160DC  0E01               	movlw	1
 13404  0160DE  6E0B               	movwf	(btemp+10)^0,c
 13405  0160E0  0E00               	movlw	0
 13406  0160E2  6E0C               	movwf	(btemp+11)^0,c
 13407                           
 13408                           ;stkvar	_p @ sp[(-20)+18]
 13409  0160E4  0EFE               	movlw	-2
 13410  0160E6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13411  0160EC  0EFF               	movlw	-1
 13412  0160EE  0060  F033  FFE3   	movff	btemp+11,plusw1
 13413  0160F4  D008               	goto	l2312
 13414  0160F6                     l12396:
 13415                           
 13416                           ;stkvar	_p @ sp[(-20)+18]
 13417  0160F6  0EFE               	movlw	-2
 13418  0160F8  0060  F0F3  FFE3   	movff	_prec,plusw1
 13419  0160FE  0EFF               	movlw	-1
 13420  016100  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 13421  016106                     l2312:
 13422                           
 13423                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 13424                           ;stkvar	_w @ sp[(-20)+16]
 13425  016106  0EFC               	movlw	-4
 13426  016108  0060  F0EB  FFE3   	movff	_width,plusw1
 13427  01610E  0EFD               	movlw	-3
 13428  016110  0060  F0EF  FFE3   	movff	_width+1,plusw1
 13429                           
 13430                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 13431  016116  A83E               	btfss	_flags^0,4,c
 13432  016118  D00B               	goto	l12402
 13433                           
 13434                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 13435                           ;stkvar	_w @ sp[(-20)+16]
 13436  01611A  50E1               	movf	fsr1l,w,c
 13437  01611C  0FFC               	addlw	-4
 13438  01611E  6ED9               	movwf	fsr2l,c
 13439  016120  50E2               	movf	fsr1h,w,c
 13440  016122  6EDA               	movwf	fsr2h,c
 13441  016124  0EFF               	movlw	255
 13442  016126  22DA               	addwfc	fsr2h,f,c
 13443  016128  0EFE               	movlw	254
 13444  01612A  26DE               	addwf	postinc2,f,c
 13445  01612C  0EFF               	movlw	255
 13446  01612E  22DD               	addwfc	postdec2,f,c
 13447  016130                     l12402:
 13448                           
 13449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 13450                           ;stkvar	_d @ sp[(-20)+-10]
 13451  016130  0EE2               	movlw	226
 13452  016132  24E1               	addwf	fsr1l,w,c
 13453  016134  6ED9               	movwf	fsr2l,c
 13454  016136  0EFF               	movlw	255
 13455  016138  20E2               	addwfc	fsr1h,w,c
 13456  01613A  6EDA               	movwf	fsr2h,c
 13457                           
 13458                           ;stkvar	_n @ sp[(-20)+4]
 13459  01613C  0E08               	movlw	8
 13460  01613E  6E01               	movwf	btemp^0,c
 13461  016140  0EF0               	movlw	-16
 13462  016142                     us1178999:
 13463  016142  006F FF7B FFE3     	movff	postinc2,plusw1
 13464  016148  28E8               	incf	wreg,w,c
 13465  01614A  2E01               	decfsz	btemp^0,f,c
 13466  01614C  D7FA               	bra	us1178999
 13467                           
 13468                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 13469  01614E  0E4F               	movlw	79
 13470  016150  6E0B               	movwf	(btemp+10)^0,c
 13471  016152  0E00               	movlw	0
 13472  016154  6E0C               	movwf	(btemp+11)^0,c
 13473                           
 13474                           ;stkvar	_i @ sp[(-20)+14]
 13475  016156  0EFA               	movlw	-6
 13476  016158  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13477  01615E  0EFB               	movlw	-5
 13478  016160  0060  F033  FFE3   	movff	btemp+11,plusw1
 13479                           
 13480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 13481  016166  0102               	movlb	2	; () banked
 13482  016168  6BE6               	clrf	(_dbuf+79)& (0+255),b
 13483                           
 13484                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13485  01616A  D0EE               	goto	l12440
 13486  01616C                     l12408:
 13487                           
 13488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 13489                           ;stkvar	_i @ sp[(-20)+14]
 13490  01616C  50E1               	movf	fsr1l,w,c
 13491  01616E  0FFA               	addlw	-6
 13492  016170  6ED9               	movwf	fsr2l,c
 13493  016172  50E2               	movf	fsr1h,w,c
 13494  016174  6EDA               	movwf	fsr2h,c
 13495  016176  0EFF               	movlw	255
 13496  016178  22DA               	addwfc	fsr2h,f,c
 13497  01617A  06DE               	decf	postinc2,f,c
 13498  01617C  0E00               	movlw	0
 13499  01617E  5ADD               	subwfb	postdec2,f,c
 13500                           
 13501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 13502                           ;stkvar	_n @ sp[(-20)+4]
 13503  016180  0EF0               	movlw	-16
 13504  016182  006F FF8C  F00B    	movff	plusw1,btemp+10
 13505  016188  0EF1               	movlw	-15
 13506  01618A  006F FF8C  F00C    	movff	plusw1,btemp+11
 13507  016190  0E0F               	movlw	15
 13508  016192  160B               	andwf	(btemp+10)^0,f,c
 13509  016194  0E00               	movlw	0
 13510  016196  160C               	andwf	(btemp+11)^0,f,c
 13511                           
 13512                           ;stkvar	_c @ sp[(-20)+12]
 13513  016198  0EF8               	movlw	-8
 13514  01619A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13515  0161A0  0EF9               	movlw	-7
 13516  0161A2  0060  F033  FFE3   	movff	btemp+11,plusw1
 13517                           
 13518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 13519                           ;stkvar	_c @ sp[(-20)+12]
 13520  0161A8  0EF9               	movlw	-7
 13521  0161AA  BEE3               	btfsc	plusw1,7,c
 13522  0161AC  D00F               	goto	l12416
 13523  0161AE  0EF9               	movlw	-7
 13524  0161B0  50E3               	movf	plusw1,w,c
 13525  0161B2  E108               	bnz	u11790
 13526  0161B4  0EF8               	movlw	-8
 13527  0161B6  006F FF8C  F001    	movff	plusw1,btemp
 13528  0161BC  0E0A               	movlw	10
 13529  0161BE  5E01               	subwf	btemp^0,f,c
 13530  0161C0  A0D8               	btfss	status,0,c
 13531  0161C2  D004               	goto	l12416
 13532  0161C4                     u11790:
 13533                           
 13534                           ;stkvar	_c @ sp[(-20)+12]
 13535  0161C4  0EF8               	movlw	-8
 13536  0161C6  50E3               	movf	plusw1,w,c
 13537  0161C8  0F57               	addlw	87
 13538  0161CA  D003               	goto	L13
 13539  0161CC                     l12416:
 13540                           
 13541                           ;stkvar	_c @ sp[(-20)+12]
 13542  0161CC  0EF8               	movlw	-8
 13543  0161CE  50E3               	movf	plusw1,w,c
 13544  0161D0  0F30               	addlw	48
 13545  0161D2                     L13:
 13546  0161D2  6E0B               	movwf	(btemp+10)^0,c
 13547  0161D4  0EF9               	movlw	-7
 13548  0161D6  006F FF8C  F00C    	movff	plusw1,btemp+11
 13549  0161DC  0E00               	movlw	0
 13550  0161DE  220C               	addwfc	(btemp+11)^0,f,c
 13551                           
 13552                           ;stkvar	_c @ sp[(-20)+12]
 13553  0161E0  0EF8               	movlw	-8
 13554  0161E2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13555  0161E8  0EF9               	movlw	-7
 13556  0161EA  0060  F033  FFE3   	movff	btemp+11,plusw1
 13557  0161F0  0EBF               	movlw	191
 13558  0161F2  6E0B               	movwf	(btemp+10)^0,c
 13559  0161F4  0EFF               	movlw	255
 13560  0161F6  6E0C               	movwf	(btemp+11)^0,c
 13561                           
 13562                           ;stkvar	_x @ sp[(-20)+-11]
 13563  0161F8  0EE1               	movlw	-31
 13564  0161FA  50E3               	movf	plusw1,w,c
 13565  0161FC  6E09               	movwf	(btemp+8)^0,c
 13566  0161FE  6A0A               	clrf	(btemp+9)^0,c
 13567  016200  500B               	movf	(btemp+10)^0,w,c
 13568  016202  2609               	addwf	(btemp+8)^0,f,c
 13569  016204  500C               	movf	(btemp+11)^0,w,c
 13570  016206  220A               	addwfc	(btemp+9)^0,f,c
 13571  016208  500A               	movf	(btemp+9)^0,w,c
 13572  01620A  E106               	bnz	u11800
 13573  01620C  0E1A               	movlw	26
 13574  01620E  5C09               	subwf	(btemp+8)^0,w,c
 13575  016210  B0D8               	btfsc	status,0,c
 13576  016212  D002               	goto	u11800
 13577  016214  0E01               	movlw	1
 13578  016216  D001               	goto	u11810
 13579  016218                     u11800:
 13580  016218  0E00               	movlw	0
 13581  01621A                     u11810:
 13582  01621A  6E0B               	movwf	(btemp+10)^0,c
 13583  01621C  6A0C               	clrf	(btemp+11)^0,c
 13584                           
 13585                           ;stkvar	_xtoa$5555 @ sp[(-20)+2]
 13586  01621E  0EEE               	movlw	-18
 13587  016220  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13588  016226  0EEF               	movlw	-17
 13589  016228  0060  F033  FFE3   	movff	btemp+11,plusw1
 13590                           
 13591                           ;stkvar	_xtoa$5555 @ sp[(-20)+2]
 13592  01622E  0EEE               	movlw	-18
 13593  016230  006F FF8C  F001    	movff	plusw1,btemp
 13594  016236  0EEF               	movlw	-17
 13595  016238  50E3               	movf	plusw1,w,c
 13596  01623A  1001               	iorwf	btemp^0,w,c
 13597  01623C  B4D8               	btfsc	status,2,c
 13598  01623E  D041               	goto	l12432
 13599  016240  0E9F               	movlw	159
 13600  016242  6E0B               	movwf	(btemp+10)^0,c
 13601  016244  0EFF               	movlw	255
 13602  016246  6E0C               	movwf	(btemp+11)^0,c
 13603                           
 13604                           ;stkvar	_c @ sp[(-20)+12]
 13605  016248  0EF8               	movlw	-8
 13606  01624A  006F FF8C  F009    	movff	plusw1,btemp+8
 13607  016250  0EF9               	movlw	-7
 13608  016252  006F FF8C  F00A    	movff	plusw1,btemp+9
 13609  016258  0E20               	movlw	32
 13610  01625A  1209               	iorwf	(btemp+8)^0,f,c
 13611  01625C  0E00               	movlw	0
 13612  01625E  120A               	iorwf	(btemp+9)^0,f,c
 13613  016260  500B               	movf	(btemp+10)^0,w,c
 13614  016262  2609               	addwf	(btemp+8)^0,f,c
 13615  016264  500C               	movf	(btemp+11)^0,w,c
 13616  016266  220A               	addwfc	(btemp+9)^0,f,c
 13617  016268  500A               	movf	(btemp+9)^0,w,c
 13618  01626A  E106               	bnz	u11830
 13619  01626C  0E1A               	movlw	26
 13620  01626E  5C09               	subwf	(btemp+8)^0,w,c
 13621  016270  B0D8               	btfsc	status,0,c
 13622  016272  D002               	goto	u11830
 13623  016274  0E01               	movlw	1
 13624  016276  D001               	goto	u11840
 13625  016278                     u11830:
 13626  016278  0E00               	movlw	0
 13627  01627A                     u11840:
 13628  01627A  6E0B               	movwf	(btemp+10)^0,c
 13629  01627C  6A0C               	clrf	(btemp+11)^0,c
 13630                           
 13631                           ;stkvar	_xtoa$5556 @ sp[(-20)+0]
 13632  01627E  0EEC               	movlw	-20
 13633  016280  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13634  016286  0EED               	movlw	-19
 13635  016288  0060  F033  FFE3   	movff	btemp+11,plusw1
 13636                           
 13637                           ;stkvar	_xtoa$5556 @ sp[(-20)+0]
 13638  01628E  0EEC               	movlw	-20
 13639  016290  006F FF8C  F001    	movff	plusw1,btemp
 13640  016296  0EED               	movlw	-19
 13641  016298  50E3               	movf	plusw1,w,c
 13642  01629A  1001               	iorwf	btemp^0,w,c
 13643  01629C  B4D8               	btfsc	status,2,c
 13644  01629E  D011               	goto	l12432
 13645                           
 13646                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 13647                           ;stkvar	_c @ sp[(-20)+12]
 13648  0162A0  0EF8               	movlw	-8
 13649  0162A2  006F FF8F FFE6     	movff	plusw1,postinc1
 13650  0162A8  006F FF8F FFE6     	movff	plusw1,postinc1
 13651  0162AE  EC5B  F0D6         	call	_toupper	;wreg free
 13652                           
 13653                           ;stkvar	_c @ sp[(-20)+12]
 13654  0162B2  0EF8               	movlw	-8
 13655  0162B4  0060  F007  FFE3   	movff	btemp,plusw1
 13656  0162BA  0EF9               	movlw	-7
 13657  0162BC  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13658  0162C2                     l12432:
 13659                           
 13660                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 13661                           ;stkvar	_c @ sp[(-20)+12]
 13662                           ;stkvar	_i @ sp[(-20)+14]
 13663  0162C2  0EFA               	movlw	-6
 13664  0162C4  006F FF8C  F00B    	movff	plusw1,btemp+10
 13665  0162CA  0EFB               	movlw	-5
 13666  0162CC  006F FF8C  F00C    	movff	plusw1,btemp+11
 13667  0162D2  0E97               	movlw	low _dbuf
 13668  0162D4  240B               	addwf	(btemp+10)^0,w,c
 13669  0162D6  6ED9               	movwf	fsr2l,c
 13670  0162D8  0E02               	movlw	high _dbuf
 13671  0162DA  200C               	addwfc	(btemp+11)^0,w,c
 13672  0162DC  6EDA               	movwf	fsr2h,c
 13673  0162DE  0EF8               	movlw	-8
 13674  0162E0  006F FF8F FFDF     	movff	plusw1,indf2
 13675                           
 13676                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 13677                           ;stkvar	_p @ sp[(-20)+18]
 13678  0162E6  50E1               	movf	fsr1l,w,c
 13679  0162E8  0FFE               	addlw	-2
 13680  0162EA  6ED9               	movwf	fsr2l,c
 13681  0162EC  50E2               	movf	fsr1h,w,c
 13682  0162EE  6EDA               	movwf	fsr2h,c
 13683  0162F0  0EFF               	movlw	255
 13684  0162F2  22DA               	addwfc	fsr2h,f,c
 13685  0162F4  06DE               	decf	postinc2,f,c
 13686  0162F6  0E00               	movlw	0
 13687  0162F8  5ADD               	subwfb	postdec2,f,c
 13688                           
 13689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 13690                           ;stkvar	_w @ sp[(-20)+16]
 13691  0162FA  50E1               	movf	fsr1l,w,c
 13692  0162FC  0FFC               	addlw	-4
 13693  0162FE  6ED9               	movwf	fsr2l,c
 13694  016300  50E2               	movf	fsr1h,w,c
 13695  016302  6EDA               	movwf	fsr2h,c
 13696  016304  0EFF               	movlw	255
 13697  016306  22DA               	addwfc	fsr2h,f,c
 13698  016308  06DE               	decf	postinc2,f,c
 13699  01630A  0E00               	movlw	0
 13700  01630C  5ADD               	subwfb	postdec2,f,c
 13701                           
 13702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 13703  01630E  0E04               	movlw	4
 13704  016310  6E0C               	movwf	(btemp+11)^0,c
 13705                           
 13706                           ;stkvar	_n @ sp[(-20)+4]
 13707  016312  50E1               	movf	fsr1l,w,c
 13708  016314  0FF0               	addlw	-16
 13709  016316  6ED9               	movwf	fsr2l,c
 13710  016318  50E2               	movf	fsr1h,w,c
 13711  01631A  6EDA               	movwf	fsr2h,c
 13712  01631C  0EFF               	movlw	255
 13713  01631E  22DA               	addwfc	fsr2h,f,c
 13714  016320  280C               	incf	(btemp+11)^0,w,c
 13715  016322  52DE               	movf	postinc2,f,c
 13716  016324  D00F               	goto	u11860
 13717  016326                     u11865:
 13718  016326  52DE               	movf	postinc2,f,c
 13719  016328  52DE               	movf	postinc2,f,c
 13720  01632A  52DE               	movf	postinc2,f,c
 13721  01632C  52DE               	movf	postinc2,f,c
 13722  01632E  52DE               	movf	postinc2,f,c
 13723  016330  52DE               	movf	postinc2,f,c
 13724  016332  90D8               	bcf	status,0,c
 13725  016334  32DD               	rrcf	postdec2,f,c
 13726  016336  32DD               	rrcf	postdec2,f,c
 13727  016338  32DD               	rrcf	postdec2,f,c
 13728  01633A  32DD               	rrcf	postdec2,f,c
 13729  01633C  32DD               	rrcf	postdec2,f,c
 13730  01633E  32DD               	rrcf	postdec2,f,c
 13731  016340  32DD               	rrcf	postdec2,f,c
 13732  016342  32DE               	rrcf	postinc2,f,c
 13733  016344                     u11860:
 13734  016344  2EE8               	decfsz	wreg,f,c
 13735  016346  D7EF               	goto	u11865
 13736  016348                     l12440:
 13737                           
 13738                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13739                           ;stkvar	_i @ sp[(-20)+14]
 13740  016348  0EFB               	movlw	-5
 13741  01634A  BEE3               	btfsc	plusw1,7,c
 13742  01634C  D03A               	goto	u11910
 13743  01634E  0EFB               	movlw	-5
 13744  016350  50E3               	movf	plusw1,w,c
 13745  016352  E108               	bnz	u11870
 13746  016354  0EFA               	movlw	-6
 13747  016356  006F FF8C  F001    	movff	plusw1,btemp
 13748  01635C  0E02               	movlw	2
 13749  01635E  5E01               	subwf	btemp^0,f,c
 13750  016360  A0D8               	btfss	status,0,c
 13751  016362  D02F               	goto	u11910
 13752  016364                     u11870:
 13753                           
 13754                           ;stkvar	_n @ sp[(-20)+4]
 13755  016364  0EF0               	movlw	-16
 13756  016366  50E3               	movf	plusw1,w,c
 13757  016368  E115               	bnz	u11881
 13758  01636A  0EF1               	movlw	-15
 13759  01636C  50E3               	movf	plusw1,w,c
 13760  01636E  E112               	bnz	u11881
 13761  016370  0EF2               	movlw	-14
 13762  016372  50E3               	movf	plusw1,w,c
 13763  016374  E10F               	bnz	u11881
 13764  016376  0EF3               	movlw	-13
 13765  016378  50E3               	movf	plusw1,w,c
 13766  01637A  E10C               	bnz	u11881
 13767  01637C  0EF4               	movlw	-12
 13768  01637E  50E3               	movf	plusw1,w,c
 13769  016380  E109               	bnz	u11881
 13770  016382  0EF5               	movlw	-11
 13771  016384  50E3               	movf	plusw1,w,c
 13772  016386  E106               	bnz	u11881
 13773  016388  0EF6               	movlw	-10
 13774  01638A  50E3               	movf	plusw1,w,c
 13775  01638C  E103               	bnz	u11881
 13776  01638E  0EF7               	movlw	-9
 13777  016390  50E3               	movf	plusw1,w,c
 13778  016392  A4D8               	btfss	status,2,c
 13779  016394                     u11881:
 13780  016394  D6EB               	goto	l12408
 13781                           
 13782                           ;stkvar	_p @ sp[(-20)+18]
 13783  016396  0EFF               	movlw	-1
 13784  016398  BEE3               	btfsc	plusw1,7,c
 13785  01639A  D007               	goto	u11890
 13786  01639C  0EFF               	movlw	-1
 13787  01639E  50E3               	movf	plusw1,w,c
 13788  0163A0  E103               	bnz	u11891
 13789  0163A2  0EFE               	movlw	-2
 13790  0163A4  04E3               	decf	plusw1,w,c
 13791  0163A6  B0D8               	btfsc	status,0,c
 13792  0163A8                     u11891:
 13793  0163A8  D6E1               	goto	l12408
 13794  0163AA                     u11890:
 13795                           
 13796                           ;stkvar	_w @ sp[(-20)+16]
 13797  0163AA  0EFD               	movlw	-3
 13798  0163AC  BEE3               	btfsc	plusw1,7,c
 13799  0163AE  D009               	goto	u11910
 13800  0163B0  0EFD               	movlw	-3
 13801  0163B2  50E3               	movf	plusw1,w,c
 13802  0163B4  E104               	bnz	u11900
 13803  0163B6  0EFC               	movlw	-4
 13804  0163B8  04E3               	decf	plusw1,w,c
 13805  0163BA  A0D8               	btfss	status,0,c
 13806  0163BC  D002               	goto	u11910
 13807  0163BE                     u11900:
 13808  0163BE  B23E               	btfsc	_flags^0,1,c
 13809  0163C0  D6D5               	goto	l12408
 13810  0163C2                     u11910:
 13811                           
 13812                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 13813  0163C2  A83E               	btfss	_flags^0,4,c
 13814  0163C4  D036               	goto	l12456
 13815                           
 13816                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 13817                           ;stkvar	_i @ sp[(-20)+14]
 13818  0163C6  50E1               	movf	fsr1l,w,c
 13819  0163C8  0FFA               	addlw	-6
 13820  0163CA  6ED9               	movwf	fsr2l,c
 13821  0163CC  50E2               	movf	fsr1h,w,c
 13822  0163CE  6EDA               	movwf	fsr2h,c
 13823  0163D0  0EFF               	movlw	255
 13824  0163D2  22DA               	addwfc	fsr2h,f,c
 13825  0163D4  06DE               	decf	postinc2,f,c
 13826  0163D6  0E00               	movlw	0
 13827  0163D8  5ADD               	subwfb	postdec2,f,c
 13828                           
 13829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 13830                           ;stkvar	_x @ sp[(-20)+-11]
 13831                           ;stkvar	_i @ sp[(-20)+14]
 13832  0163DA  0EFA               	movlw	-6
 13833  0163DC  006F FF8C  F00B    	movff	plusw1,btemp+10
 13834  0163E2  0EFB               	movlw	-5
 13835  0163E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 13836  0163EA  0E97               	movlw	low _dbuf
 13837  0163EC  240B               	addwf	(btemp+10)^0,w,c
 13838  0163EE  6ED9               	movwf	fsr2l,c
 13839  0163F0  0E02               	movlw	high _dbuf
 13840  0163F2  200C               	addwfc	(btemp+11)^0,w,c
 13841  0163F4  6EDA               	movwf	fsr2h,c
 13842  0163F6  0EE1               	movlw	-31
 13843  0163F8  006F FF8F FFDF     	movff	plusw1,indf2
 13844                           
 13845                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 13846                           ;stkvar	_i @ sp[(-20)+14]
 13847  0163FE  50E1               	movf	fsr1l,w,c
 13848  016400  0FFA               	addlw	-6
 13849  016402  6ED9               	movwf	fsr2l,c
 13850  016404  50E2               	movf	fsr1h,w,c
 13851  016406  6EDA               	movwf	fsr2h,c
 13852  016408  0EFF               	movlw	255
 13853  01640A  22DA               	addwfc	fsr2h,f,c
 13854  01640C  06DE               	decf	postinc2,f,c
 13855  01640E  0E00               	movlw	0
 13856  016410  5ADD               	subwfb	postdec2,f,c
 13857                           
 13858                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 13859                           ;stkvar	_i @ sp[(-20)+14]
 13860  016412  0EFA               	movlw	-6
 13861  016414  006F FF8C  F00B    	movff	plusw1,btemp+10
 13862  01641A  0EFB               	movlw	-5
 13863  01641C  006F FF8C  F00C    	movff	plusw1,btemp+11
 13864  016422  0E97               	movlw	low _dbuf
 13865  016424  240B               	addwf	(btemp+10)^0,w,c
 13866  016426  6ED9               	movwf	fsr2l,c
 13867  016428  0E02               	movlw	high _dbuf
 13868  01642A  200C               	addwfc	(btemp+11)^0,w,c
 13869  01642C  6EDA               	movwf	fsr2h,c
 13870  01642E  0E30               	movlw	48
 13871  016430  6EDF               	movwf	indf2,c
 13872  016432                     l12456:
 13873                           
 13874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 13875                           ;stkvar	_w @ sp[(-20)+16]
 13876  016432  0EFC               	movlw	-4
 13877  016434  006F FF8F FFE6     	movff	plusw1,postinc1
 13878  01643A  006F FF8F FFE6     	movff	plusw1,postinc1
 13879                           
 13880                           ;stkvar	_i @ sp[(-22)+14]
 13881  016440  0E97               	movlw	low _dbuf
 13882  016442  6E0B               	movwf	(btemp+10)^0,c
 13883  016444  0E02               	movlw	high _dbuf
 13884  016446  6E0C               	movwf	(btemp+11)^0,c
 13885  016448  0EF8               	movlw	-8
 13886  01644A  50E3               	movf	plusw1,w,c
 13887  01644C  260B               	addwf	(btemp+10)^0,f,c
 13888  01644E  0EF9               	movlw	-7
 13889  016450  50E3               	movf	plusw1,w,c
 13890  016452  220C               	addwfc	(btemp+11)^0,f,c
 13891  016454  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13892  01645A  0060  F033  FFE6   	movff	btemp+11,postinc1
 13893                           
 13894                           ;stkvar	_fp @ sp[(-24)+-2]
 13895  016460  0EE6               	movlw	-26
 13896  016462  006F FF8F FFE6     	movff	plusw1,postinc1
 13897  016468  006F FF8F FFE6     	movff	plusw1,postinc1
 13898  01646E  EC7B  F0CD         	call	_pad	;wreg free
 13899                           
 13900                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 13901  016472  0EE1               	movlw	225
 13902  016474  26E1               	addwf	fsr1l,f,c
 13903  016476  0EFF               	movlw	255
 13904  016478  22E2               	addwfc	fsr1h,f,c
 13905  01647A  0012               	return		;funcret
 13906  01647C                     __end_of_xtoa:
 13907                           	opt callstack 0
 13908                           
 13909 ;; *************** function _toupper *****************
 13910 ;; Defined at:
 13911 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 13912 ;; Parameters:    Size  Location     Type
 13913 ;;  c               2  [STACK] int 
 13914 ;; Auto vars:     Size  Location     Type
 13915 ;;		None
 13916 ;; Return value:  Size  Location     Type
 13917 ;;                  2  [STACK] int 
 13918 ;; Registers used:
 13919 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13920 ;; Tracked objects:
 13921 ;;		On entry : 0/2
 13922 ;;		On exit  : 0/0
 13923 ;;		Unchanged: 0/0
 13924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13929 ;;Total ram usage:        0 bytes
 13930 ;; Hardware stack levels used:    1
 13931 ;; Hardware stack levels required when called:   16
 13932 ;; This function calls:
 13933 ;;		_islower
 13934 ;; This function is called by:
 13935 ;;		_xtoa
 13936 ;; This function uses a reentrant model
 13937 ;;
 13938                           
 13939                           	psect	text49
 13940  01ACB6                     __ptext49:
 13941                           	opt callstack 0
 13942  01ACB6                     _toupper:
 13943                           	opt callstack 0
 13944                           
 13945                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13946  01ACB6  52E6               	movf	postinc1,f,c
 13947  01ACB8  52E6               	movf	postinc1,f,c
 13948                           
 13949                           ;stkvar	_c @ sp[(-2)+-2]
 13950                           
 13951                           ;incstack = 0
 13952 ;; hardware stack exceeded
 13953  01ACBA  0EFC               	movlw	-4
 13954  01ACBC  50E3               	movf	plusw1,w,c
 13955  01ACBE  0F9F               	addlw	159
 13956  01ACC0  6E0B               	movwf	(btemp+10)^0,c
 13957  01ACC2  0EFD               	movlw	-3
 13958  01ACC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 13959  01ACCA  0EFF               	movlw	255
 13960  01ACCC  220C               	addwfc	(btemp+11)^0,f,c
 13961  01ACCE  500C               	movf	(btemp+11)^0,w,c
 13962  01ACD0  E106               	bnz	u6230
 13963  01ACD2  0E1A               	movlw	26
 13964  01ACD4  5C0B               	subwf	(btemp+10)^0,w,c
 13965  01ACD6  B0D8               	btfsc	status,0,c
 13966  01ACD8  D002               	goto	u6230
 13967  01ACDA  0E01               	movlw	1
 13968  01ACDC  D001               	goto	u6240
 13969  01ACDE                     u6230:
 13970  01ACDE  0E00               	movlw	0
 13971  01ACE0                     u6240:
 13972  01ACE0  6E0B               	movwf	(btemp+10)^0,c
 13973  01ACE2  6A0C               	clrf	(btemp+11)^0,c
 13974                           
 13975                           ;stkvar	_toupper$6362 @ sp[(-2)+0]
 13976  01ACE4  0EFE               	movlw	-2
 13977  01ACE6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13978  01ACEC  0EFF               	movlw	-1
 13979  01ACEE  0060  F033  FFE3   	movff	btemp+11,plusw1
 13980                           
 13981                           ;stkvar	_toupper$6362 @ sp[(-2)+0]
 13982  01ACF4  0EFE               	movlw	-2
 13983  01ACF6  006F FF8C  F001    	movff	plusw1,btemp
 13984  01ACFC  0EFF               	movlw	-1
 13985  01ACFE  50E3               	movf	plusw1,w,c
 13986  01AD00  1001               	iorwf	btemp^0,w,c
 13987  01AD02  B4D8               	btfsc	status,2,c
 13988  01AD04  D00D               	goto	l8100
 13989                           
 13990                           ;stkvar	_c @ sp[(-2)+-2]
 13991  01AD06  0EFC               	movlw	-4
 13992  01AD08  006F FF8C  F001    	movff	plusw1,btemp
 13993  01AD0E  0EFD               	movlw	-3
 13994  01AD10  006F FF8C  F002    	movff	plusw1,btemp+1
 13995  01AD16  0E5F               	movlw	95
 13996  01AD18  1601               	andwf	btemp^0,f,c
 13997  01AD1A  0E00               	movlw	0
 13998  01AD1C  1602               	andwf	(btemp+1)^0,f,c
 13999  01AD1E  D008               	goto	l3479
 14000  01AD20                     l8100:
 14001                           
 14002                           ;stkvar	_c @ sp[(-2)+-2]
 14003  01AD20  0EFC               	movlw	-4
 14004  01AD22  006F FF8C  F001    	movff	plusw1,btemp
 14005  01AD28  0EFD               	movlw	-3
 14006  01AD2A  006F FF8C  F002    	movff	plusw1,btemp+1
 14007  01AD30                     l3479:
 14008                           
 14009                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14010  01AD30  52E5               	movf	postdec1,f,c
 14011  01AD32  52E5               	movf	postdec1,f,c
 14012  01AD34  52E5               	movf	postdec1,f,c
 14013  01AD36  52E5               	movf	postdec1,f,c
 14014  01AD38  0012               	return		;funcret
 14015  01AD3A                     __end_of_toupper:
 14016                           	opt callstack 0
 14017                           
 14018 ;; *************** function _islower *****************
 14019 ;; Defined at:
 14020 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 14021 ;; Parameters:    Size  Location     Type
 14022 ;;  c               2  [STACK] int 
 14023 ;; Auto vars:     Size  Location     Type
 14024 ;;		None
 14025 ;; Return value:  Size  Location     Type
 14026 ;;                  2  [STACK] int 
 14027 ;; Registers used:
 14028 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 14029 ;; Tracked objects:
 14030 ;;		On entry : 0/0
 14031 ;;		On exit  : 0/0
 14032 ;;		Unchanged: 0/0
 14033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14038 ;;Total ram usage:        0 bytes
 14039 ;; Hardware stack levels used:    1
 14040 ;; Hardware stack levels required when called:   15
 14041 ;; This function calls:
 14042 ;;		Nothing
 14043 ;; This function is called by:
 14044 ;;		_toupper
 14045 ;; This function uses a reentrant model
 14046 ;;
 14047                           
 14048                           	psect	text50
 14049  01B9E2                     __ptext50:
 14050                           	opt callstack 0
 14051  01B9E2                     _islower:
 14052                           	opt callstack 0
 14053                           
 14054                           ;stkvar	_c @ sp[(0)+-2]
 14055                           
 14056                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14057                           ;incstack = 0
 14058 ;; hardware stack exceeded
 14059  01B9E2  0EFE               	movlw	-2
 14060  01B9E4  50E3               	movf	plusw1,w,c
 14061  01B9E6  0F9F               	addlw	159
 14062  01B9E8  6E0B               	movwf	(btemp+10)^0,c
 14063  01B9EA  0EFF               	movlw	-1
 14064  01B9EC  006F FF8C  F00C    	movff	plusw1,btemp+11
 14065  01B9F2  0EFF               	movlw	255
 14066  01B9F4  220C               	addwfc	(btemp+11)^0,f,c
 14067  01B9F6  500C               	movf	(btemp+11)^0,w,c
 14068  01B9F8  E106               	bnz	u5870
 14069  01B9FA  0E1A               	movlw	26
 14070  01B9FC  5C0B               	subwf	(btemp+10)^0,w,c
 14071  01B9FE  B0D8               	btfsc	status,0,c
 14072  01BA00  D002               	goto	u5870
 14073  01BA02  0E01               	movlw	1
 14074  01BA04  D001               	goto	u5880
 14075  01BA06                     u5870:
 14076  01BA06  0E00               	movlw	0
 14077  01BA08                     u5880:
 14078  01BA08  6E01               	movwf	btemp^0,c
 14079  01BA0A  6A02               	clrf	(btemp+1)^0,c
 14080                           
 14081                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14082  01BA0C  52E5               	movf	postdec1,f,c
 14083  01BA0E  52E5               	movf	postdec1,f,c
 14084  01BA10  0012               	return		;funcret
 14085  01BA12                     __end_of_islower:
 14086                           	opt callstack 0
 14087                           
 14088 ;; *************** function _isalpha *****************
 14089 ;; Defined at:
 14090 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 14091 ;; Parameters:    Size  Location     Type
 14092 ;;  c               2  [STACK] int 
 14093 ;; Auto vars:     Size  Location     Type
 14094 ;;		None
 14095 ;; Return value:  Size  Location     Type
 14096 ;;                  2  [STACK] int 
 14097 ;; Registers used:
 14098 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 14099 ;; Tracked objects:
 14100 ;;		On entry : 0/0
 14101 ;;		On exit  : 0/0
 14102 ;;		Unchanged: 0/0
 14103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14108 ;;Total ram usage:        0 bytes
 14109 ;; Hardware stack levels used:    1
 14110 ;; Hardware stack levels required when called:   15
 14111 ;; This function calls:
 14112 ;;		Nothing
 14113 ;; This function is called by:
 14114 ;;		_xtoa
 14115 ;; This function uses a reentrant model
 14116 ;;
 14117                           
 14118                           	psect	text51
 14119  01B624                     __ptext51:
 14120                           	opt callstack 0
 14121  01B624                     _isalpha:
 14122                           	opt callstack 0
 14123                           
 14124                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14125                           ;incstack = 0
 14126 ;; hardware stack exceeded
 14127  01B624  0E9F               	movlw	159
 14128  01B626  6E0B               	movwf	(btemp+10)^0,c
 14129  01B628  0EFF               	movlw	255
 14130  01B62A  6E0C               	movwf	(btemp+11)^0,c
 14131                           
 14132                           ;stkvar	_c @ sp[(0)+-2]
 14133  01B62C  0EFE               	movlw	-2
 14134  01B62E  006F FF8C  F009    	movff	plusw1,btemp+8
 14135  01B634  0EFF               	movlw	-1
 14136  01B636  006F FF8C  F00A    	movff	plusw1,btemp+9
 14137  01B63C  0E20               	movlw	32
 14138  01B63E  1209               	iorwf	(btemp+8)^0,f,c
 14139  01B640  0E00               	movlw	0
 14140  01B642  120A               	iorwf	(btemp+9)^0,f,c
 14141  01B644  500B               	movf	(btemp+10)^0,w,c
 14142  01B646  2609               	addwf	(btemp+8)^0,f,c
 14143  01B648  500C               	movf	(btemp+11)^0,w,c
 14144  01B64A  220A               	addwfc	(btemp+9)^0,f,c
 14145  01B64C  500A               	movf	(btemp+9)^0,w,c
 14146  01B64E  E106               	bnz	u6210
 14147  01B650  0E1A               	movlw	26
 14148  01B652  5C09               	subwf	(btemp+8)^0,w,c
 14149  01B654  B0D8               	btfsc	status,0,c
 14150  01B656  D002               	goto	u6210
 14151  01B658  0E01               	movlw	1
 14152  01B65A  D001               	goto	u6220
 14153  01B65C                     u6210:
 14154  01B65C  0E00               	movlw	0
 14155  01B65E                     u6220:
 14156  01B65E  6E01               	movwf	btemp^0,c
 14157  01B660  6A02               	clrf	(btemp+1)^0,c
 14158                           
 14159                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14160  01B662  52E5               	movf	postdec1,f,c
 14161  01B664  52E5               	movf	postdec1,f,c
 14162  01B666  0012               	return		;funcret
 14163  01B668                     __end_of_isalpha:
 14164                           	opt callstack 0
 14165                           
 14166 ;; *************** function _utoa *****************
 14167 ;; Defined at:
 14168 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14169 ;; Parameters:    Size  Location     Type
 14170 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14171 ;;		 -> f(6), NULL(0), 
 14172 ;;  d               8  [STACK] unsigned long long 
 14173 ;; Auto vars:     Size  Location     Type
 14174 ;;  n               8  [STACK] unsigned long long 
 14175 ;;  i               2  [STACK] int 
 14176 ;;  w               2  [STACK] int 
 14177 ;;  p               2  [STACK] int 
 14178 ;; Return value:  Size  Location     Type
 14179 ;;                  2  [STACK] int 
 14180 ;; Registers used:
 14181 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 14182 ;; Tracked objects:
 14183 ;;		On entry : 0/0
 14184 ;;		On exit  : 0/0
 14185 ;;		Unchanged: 0/0
 14186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14191 ;;Total ram usage:        0 bytes
 14192 ;; Hardware stack levels used:    1
 14193 ;; Hardware stack levels required when called:   20
 14194 ;; This function calls:
 14195 ;;		___lodiv
 14196 ;;		___lomod
 14197 ;;		_pad
 14198 ;; This function is called by:
 14199 ;;		_vfpfcnvrt
 14200 ;; This function uses a reentrant model
 14201 ;;
 14202                           
 14203                           	psect	text52
 14204  0167E8                     __ptext52:
 14205                           	opt callstack 0
 14206  0167E8                     _utoa:
 14207                           	opt callstack 0
 14208                           
 14209                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 14210  0167E8  0E0E               	movlw	14
 14211  0167EA  26E1               	addwf	fsr1l,f,c
 14212  0167EC  0E00               	movlw	0
 14213  0167EE  22E2               	addwfc	fsr1h,f,c
 14214                           
 14215                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 14216                           
 14217                           ;incstack = 0
 14218 ;; hardware stack exceeded
 14219  0167F0  AE3D               	btfss	(_prec+1)^0,7,c
 14220                           
 14221                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 14222  0167F2  923E               	bcf	_flags^0,1,c
 14223                           
 14224                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 14225  0167F4  BE3D               	btfsc	(_prec+1)^0,7,c
 14226  0167F6  D005               	goto	u11680
 14227  0167F8  503D               	movf	(_prec+1)^0,w,c
 14228  0167FA  E110               	bnz	l12356
 14229  0167FC  043C               	decf	_prec^0,w,c
 14230  0167FE  B0D8               	btfsc	status,0,c
 14231  016800  D00D               	goto	l12356
 14232  016802                     u11680:
 14233  016802  0E01               	movlw	1
 14234  016804  6E0B               	movwf	(btemp+10)^0,c
 14235  016806  0E00               	movlw	0
 14236  016808  6E0C               	movwf	(btemp+11)^0,c
 14237                           
 14238                           ;stkvar	_p @ sp[(-14)+12]
 14239  01680A  0EFE               	movlw	-2
 14240  01680C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14241  016812  0EFF               	movlw	-1
 14242  016814  0060  F033  FFE3   	movff	btemp+11,plusw1
 14243  01681A  D008               	goto	l2297
 14244  01681C                     l12356:
 14245                           
 14246                           ;stkvar	_p @ sp[(-14)+12]
 14247  01681C  0EFE               	movlw	-2
 14248  01681E  0060  F0F3  FFE3   	movff	_prec,plusw1
 14249  016824  0EFF               	movlw	-1
 14250  016826  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 14251  01682C                     l2297:
 14252                           
 14253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 14254                           ;stkvar	_w @ sp[(-14)+10]
 14255  01682C  0EFC               	movlw	-4
 14256  01682E  0060  F0EB  FFE3   	movff	_width,plusw1
 14257  016834  0EFD               	movlw	-3
 14258  016836  0060  F0EF  FFE3   	movff	_width+1,plusw1
 14259                           
 14260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 14261                           ;stkvar	_d @ sp[(-14)+-10]
 14262  01683C  0EE8               	movlw	232
 14263  01683E  24E1               	addwf	fsr1l,w,c
 14264  016840  6ED9               	movwf	fsr2l,c
 14265  016842  0EFF               	movlw	255
 14266  016844  20E2               	addwfc	fsr1h,w,c
 14267  016846  6EDA               	movwf	fsr2h,c
 14268                           
 14269                           ;stkvar	_n @ sp[(-14)+0]
 14270  016848  0E08               	movlw	8
 14271  01684A  6E01               	movwf	btemp^0,c
 14272  01684C  0EF2               	movlw	-14
 14273  01684E                     us1169999:
 14274  01684E  006F FF7B FFE3     	movff	postinc2,plusw1
 14275  016854  28E8               	incf	wreg,w,c
 14276  016856  2E01               	decfsz	btemp^0,f,c
 14277  016858  D7FA               	bra	us1169999
 14278                           
 14279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 14280  01685A  0E4F               	movlw	79
 14281  01685C  6E0B               	movwf	(btemp+10)^0,c
 14282  01685E  0E00               	movlw	0
 14283  016860  6E0C               	movwf	(btemp+11)^0,c
 14284                           
 14285                           ;stkvar	_i @ sp[(-14)+8]
 14286  016862  0EFA               	movlw	-6
 14287  016864  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14288  01686A  0EFB               	movlw	-5
 14289  01686C  0060  F033  FFE3   	movff	btemp+11,plusw1
 14290                           
 14291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 14292  016872  0102               	movlb	2	; () banked
 14293  016874  6BE6               	clrf	(_dbuf+79)& (0+255),b
 14294                           
 14295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 14296  016876  D0FB               	goto	l12374
 14297  016878                     l12364:
 14298                           
 14299                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 14300                           ;stkvar	_i @ sp[(-14)+8]
 14301  016878  50E1               	movf	fsr1l,w,c
 14302  01687A  0FFA               	addlw	-6
 14303  01687C  6ED9               	movwf	fsr2l,c
 14304  01687E  50E2               	movf	fsr1h,w,c
 14305  016880  6EDA               	movwf	fsr2h,c
 14306  016882  0EFF               	movlw	255
 14307  016884  22DA               	addwfc	fsr2h,f,c
 14308  016886  06DE               	decf	postinc2,f,c
 14309  016888  0E00               	movlw	0
 14310  01688A  5ADD               	subwfb	postdec2,f,c
 14311                           
 14312                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 14313  01688C  0E0A               	movlw	10
 14314  01688E  6EE6               	movwf	postinc1,c
 14315  016890  0E00               	movlw	0
 14316  016892  6EE6               	movwf	postinc1,c
 14317  016894  0E00               	movlw	0
 14318  016896  6EE6               	movwf	postinc1,c
 14319  016898  0E00               	movlw	0
 14320  01689A  6EE6               	movwf	postinc1,c
 14321  01689C  0E00               	movlw	0
 14322  01689E  6EE6               	movwf	postinc1,c
 14323  0168A0  0E00               	movlw	0
 14324  0168A2  6EE6               	movwf	postinc1,c
 14325  0168A4  0E00               	movlw	0
 14326  0168A6  6EE6               	movwf	postinc1,c
 14327  0168A8  0E00               	movlw	0
 14328  0168AA  6EE6               	movwf	postinc1,c
 14329                           
 14330                           ;stkvar	_n @ sp[(-22)+0]
 14331  0168AC  50E1               	movf	fsr1l,w,c
 14332  0168AE  0FEA               	addlw	-22
 14333  0168B0  6ED9               	movwf	fsr2l,c
 14334  0168B2  50E2               	movf	fsr1h,w,c
 14335  0168B4  6EDA               	movwf	fsr2h,c
 14336  0168B6  0EFF               	movlw	255
 14337  0168B8  22DA               	addwfc	fsr2h,f,c
 14338  0168BA  006F FF7B FFE6     	movff	postinc2,postinc1
 14339  0168C0  006F FF7B FFE6     	movff	postinc2,postinc1
 14340  0168C6  006F FF7B FFE6     	movff	postinc2,postinc1
 14341  0168CC  006F FF7B FFE6     	movff	postinc2,postinc1
 14342  0168D2  006F FF7B FFE6     	movff	postinc2,postinc1
 14343  0168D8  006F FF7B FFE6     	movff	postinc2,postinc1
 14344  0168DE  006F FF7B FFE6     	movff	postinc2,postinc1
 14345  0168E4  006F FF7B FFE6     	movff	postinc2,postinc1
 14346  0168EA  ECFE  F0C9         	call	___lomod	;wreg free
 14347  0168EE  52E5               	movf	postdec1,f,c
 14348  0168F0  006F FF9C  F018    	movff	indf1,btemp+23
 14349  0168F6  52E5               	movf	postdec1,f,c
 14350  0168F8  006F FF9C  F017    	movff	indf1,btemp+22
 14351  0168FE  52E5               	movf	postdec1,f,c
 14352  016900  006F FF9C  F016    	movff	indf1,btemp+21
 14353  016906  52E5               	movf	postdec1,f,c
 14354  016908  006F FF9C  F015    	movff	indf1,btemp+20
 14355  01690E  52E5               	movf	postdec1,f,c
 14356  016910  006F FF9C  F014    	movff	indf1,btemp+19
 14357  016916  52E5               	movf	postdec1,f,c
 14358  016918  006F FF9C  F013    	movff	indf1,btemp+18
 14359  01691E  52E5               	movf	postdec1,f,c
 14360  016920  006F FF9C  F012    	movff	indf1,btemp+17
 14361  016926  52E5               	movf	postdec1,f,c
 14362  016928  006F FF9C  F011    	movff	indf1,btemp+16
 14363  01692E  0EF8               	movlw	248
 14364  016930  26E1               	addwf	fsr1l,f,c
 14365  016932  0EFF               	movlw	255
 14366  016934  22E2               	addwfc	fsr1h,f,c
 14367  016936  0E30               	movlw	48
 14368  016938  2611               	addwf	(btemp+16)^0,f,c
 14369                           
 14370                           ;stkvar	_i @ sp[(-14)+8]
 14371  01693A  0EFA               	movlw	-6
 14372  01693C  006F FF8C  F00B    	movff	plusw1,btemp+10
 14373  016942  0EFB               	movlw	-5
 14374  016944  006F FF8C  F00C    	movff	plusw1,btemp+11
 14375  01694A  0E97               	movlw	low _dbuf
 14376  01694C  240B               	addwf	(btemp+10)^0,w,c
 14377  01694E  6ED9               	movwf	fsr2l,c
 14378  016950  0E02               	movlw	high _dbuf
 14379  016952  200C               	addwfc	(btemp+11)^0,w,c
 14380  016954  6EDA               	movwf	fsr2h,c
 14381  016956  0060  F047  FFDF   	movff	btemp+16,indf2
 14382                           
 14383                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 14384                           ;stkvar	_p @ sp[(-14)+12]
 14385  01695C  50E1               	movf	fsr1l,w,c
 14386  01695E  0FFE               	addlw	-2
 14387  016960  6ED9               	movwf	fsr2l,c
 14388  016962  50E2               	movf	fsr1h,w,c
 14389  016964  6EDA               	movwf	fsr2h,c
 14390  016966  0EFF               	movlw	255
 14391  016968  22DA               	addwfc	fsr2h,f,c
 14392  01696A  06DE               	decf	postinc2,f,c
 14393  01696C  0E00               	movlw	0
 14394  01696E  5ADD               	subwfb	postdec2,f,c
 14395                           
 14396                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 14397                           ;stkvar	_w @ sp[(-14)+10]
 14398  016970  50E1               	movf	fsr1l,w,c
 14399  016972  0FFC               	addlw	-4
 14400  016974  6ED9               	movwf	fsr2l,c
 14401  016976  50E2               	movf	fsr1h,w,c
 14402  016978  6EDA               	movwf	fsr2h,c
 14403  01697A  0EFF               	movlw	255
 14404  01697C  22DA               	addwfc	fsr2h,f,c
 14405  01697E  06DE               	decf	postinc2,f,c
 14406  016980  0E00               	movlw	0
 14407  016982  5ADD               	subwfb	postdec2,f,c
 14408                           
 14409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 14410  016984  0E0A               	movlw	10
 14411  016986  6EE6               	movwf	postinc1,c
 14412  016988  0E00               	movlw	0
 14413  01698A  6EE6               	movwf	postinc1,c
 14414  01698C  0E00               	movlw	0
 14415  01698E  6EE6               	movwf	postinc1,c
 14416  016990  0E00               	movlw	0
 14417  016992  6EE6               	movwf	postinc1,c
 14418  016994  0E00               	movlw	0
 14419  016996  6EE6               	movwf	postinc1,c
 14420  016998  0E00               	movlw	0
 14421  01699A  6EE6               	movwf	postinc1,c
 14422  01699C  0E00               	movlw	0
 14423  01699E  6EE6               	movwf	postinc1,c
 14424  0169A0  0E00               	movlw	0
 14425  0169A2  6EE6               	movwf	postinc1,c
 14426                           
 14427                           ;stkvar	_n @ sp[(-22)+0]
 14428  0169A4  50E1               	movf	fsr1l,w,c
 14429  0169A6  0FEA               	addlw	-22
 14430  0169A8  6ED9               	movwf	fsr2l,c
 14431  0169AA  50E2               	movf	fsr1h,w,c
 14432  0169AC  6EDA               	movwf	fsr2h,c
 14433  0169AE  0EFF               	movlw	255
 14434  0169B0  22DA               	addwfc	fsr2h,f,c
 14435  0169B2  006F FF7B FFE6     	movff	postinc2,postinc1
 14436  0169B8  006F FF7B FFE6     	movff	postinc2,postinc1
 14437  0169BE  006F FF7B FFE6     	movff	postinc2,postinc1
 14438  0169C4  006F FF7B FFE6     	movff	postinc2,postinc1
 14439  0169CA  006F FF7B FFE6     	movff	postinc2,postinc1
 14440  0169D0  006F FF7B FFE6     	movff	postinc2,postinc1
 14441  0169D6  006F FF7B FFE6     	movff	postinc2,postinc1
 14442  0169DC  006F FF7B FFE6     	movff	postinc2,postinc1
 14443  0169E2  EC7B  F0C6         	call	___lodiv	;wreg free
 14444  0169E6  52E5               	movf	postdec1,f,c
 14445  0169E8  006F FF9C  F018    	movff	indf1,btemp+23
 14446  0169EE  52E5               	movf	postdec1,f,c
 14447  0169F0  006F FF9C  F017    	movff	indf1,btemp+22
 14448  0169F6  52E5               	movf	postdec1,f,c
 14449  0169F8  006F FF9C  F016    	movff	indf1,btemp+21
 14450  0169FE  52E5               	movf	postdec1,f,c
 14451  016A00  006F FF9C  F015    	movff	indf1,btemp+20
 14452  016A06  52E5               	movf	postdec1,f,c
 14453  016A08  006F FF9C  F014    	movff	indf1,btemp+19
 14454  016A0E  52E5               	movf	postdec1,f,c
 14455  016A10  006F FF9C  F013    	movff	indf1,btemp+18
 14456  016A16  52E5               	movf	postdec1,f,c
 14457  016A18  006F FF9C  F012    	movff	indf1,btemp+17
 14458  016A1E  52E5               	movf	postdec1,f,c
 14459  016A20  006F FF9C  F011    	movff	indf1,btemp+16
 14460  016A26  0EF8               	movlw	248
 14461  016A28  26E1               	addwf	fsr1l,f,c
 14462  016A2A  0EFF               	movlw	255
 14463  016A2C  22E2               	addwfc	fsr1h,f,c
 14464                           
 14465                           ;stkvar	_n @ sp[(-14)+0]
 14466  016A2E  0EF2               	movlw	-14
 14467  016A30  0060  F047  FFE3   	movff	btemp+16,plusw1
 14468  016A36  0EF3               	movlw	-13
 14469  016A38  0060  F04B  FFE3   	movff	btemp+17,plusw1
 14470  016A3E  0EF4               	movlw	-12
 14471  016A40  0060  F04F  FFE3   	movff	btemp+18,plusw1
 14472  016A46  0EF5               	movlw	-11
 14473  016A48  0060  F053  FFE3   	movff	btemp+19,plusw1
 14474  016A4E  0EF6               	movlw	-10
 14475  016A50  0060  F057  FFE3   	movff	btemp+20,plusw1
 14476  016A56  0EF7               	movlw	-9
 14477  016A58  0060  F05B  FFE3   	movff	btemp+21,plusw1
 14478  016A5E  0EF8               	movlw	-8
 14479  016A60  0060  F05F  FFE3   	movff	btemp+22,plusw1
 14480  016A66  0EF9               	movlw	-7
 14481  016A68  0060  F063  FFE3   	movff	btemp+23,plusw1
 14482  016A6E                     l12374:
 14483                           
 14484                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 14485                           ;stkvar	_i @ sp[(-14)+8]
 14486  016A6E  0EFA               	movlw	-6
 14487  016A70  006F FF8C  F001    	movff	plusw1,btemp
 14488  016A76  0EFB               	movlw	-5
 14489  016A78  50E3               	movf	plusw1,w,c
 14490  016A7A  1001               	iorwf	btemp^0,w,c
 14491  016A7C  B4D8               	btfsc	status,2,c
 14492  016A7E  D02F               	goto	u11740
 14493                           
 14494                           ;stkvar	_n @ sp[(-14)+0]
 14495  016A80  0EF2               	movlw	-14
 14496  016A82  50E3               	movf	plusw1,w,c
 14497  016A84  E115               	bnz	u11711
 14498  016A86  0EF3               	movlw	-13
 14499  016A88  50E3               	movf	plusw1,w,c
 14500  016A8A  E112               	bnz	u11711
 14501  016A8C  0EF4               	movlw	-12
 14502  016A8E  50E3               	movf	plusw1,w,c
 14503  016A90  E10F               	bnz	u11711
 14504  016A92  0EF5               	movlw	-11
 14505  016A94  50E3               	movf	plusw1,w,c
 14506  016A96  E10C               	bnz	u11711
 14507  016A98  0EF6               	movlw	-10
 14508  016A9A  50E3               	movf	plusw1,w,c
 14509  016A9C  E109               	bnz	u11711
 14510  016A9E  0EF7               	movlw	-9
 14511  016AA0  50E3               	movf	plusw1,w,c
 14512  016AA2  E106               	bnz	u11711
 14513  016AA4  0EF8               	movlw	-8
 14514  016AA6  50E3               	movf	plusw1,w,c
 14515  016AA8  E103               	bnz	u11711
 14516  016AAA  0EF9               	movlw	-7
 14517  016AAC  50E3               	movf	plusw1,w,c
 14518  016AAE  A4D8               	btfss	status,2,c
 14519  016AB0                     u11711:
 14520  016AB0  D6E3               	goto	l12364
 14521                           
 14522                           ;stkvar	_p @ sp[(-14)+12]
 14523  016AB2  0EFF               	movlw	-1
 14524  016AB4  BEE3               	btfsc	plusw1,7,c
 14525  016AB6  D007               	goto	u11720
 14526  016AB8  0EFF               	movlw	-1
 14527  016ABA  50E3               	movf	plusw1,w,c
 14528  016ABC  E103               	bnz	u11721
 14529  016ABE  0EFE               	movlw	-2
 14530  016AC0  04E3               	decf	plusw1,w,c
 14531  016AC2  B0D8               	btfsc	status,0,c
 14532  016AC4                     u11721:
 14533  016AC4  D6D9               	goto	l12364
 14534  016AC6                     u11720:
 14535                           
 14536                           ;stkvar	_w @ sp[(-14)+10]
 14537  016AC6  0EFD               	movlw	-3
 14538  016AC8  BEE3               	btfsc	plusw1,7,c
 14539  016ACA  D009               	goto	u11740
 14540  016ACC  0EFD               	movlw	-3
 14541  016ACE  50E3               	movf	plusw1,w,c
 14542  016AD0  E104               	bnz	u11730
 14543  016AD2  0EFC               	movlw	-4
 14544  016AD4  04E3               	decf	plusw1,w,c
 14545  016AD6  A0D8               	btfss	status,0,c
 14546  016AD8  D002               	goto	u11740
 14547  016ADA                     u11730:
 14548  016ADA  B23E               	btfsc	_flags^0,1,c
 14549  016ADC  D6CD               	goto	l12364
 14550  016ADE                     u11740:
 14551                           
 14552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 14553                           ;stkvar	_w @ sp[(-14)+10]
 14554  016ADE  0EFC               	movlw	-4
 14555  016AE0  006F FF8F FFE6     	movff	plusw1,postinc1
 14556  016AE6  006F FF8F FFE6     	movff	plusw1,postinc1
 14557                           
 14558                           ;stkvar	_i @ sp[(-16)+8]
 14559  016AEC  0E97               	movlw	low _dbuf
 14560  016AEE  6E0B               	movwf	(btemp+10)^0,c
 14561  016AF0  0E02               	movlw	high _dbuf
 14562  016AF2  6E0C               	movwf	(btemp+11)^0,c
 14563  016AF4  0EF8               	movlw	-8
 14564  016AF6  50E3               	movf	plusw1,w,c
 14565  016AF8  260B               	addwf	(btemp+10)^0,f,c
 14566  016AFA  0EF9               	movlw	-7
 14567  016AFC  50E3               	movf	plusw1,w,c
 14568  016AFE  220C               	addwfc	(btemp+11)^0,f,c
 14569  016B00  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14570  016B06  0060  F033  FFE6   	movff	btemp+11,postinc1
 14571                           
 14572                           ;stkvar	_fp @ sp[(-18)+-2]
 14573  016B0C  0EEC               	movlw	-20
 14574  016B0E  006F FF8F FFE6     	movff	plusw1,postinc1
 14575  016B14  006F FF8F FFE6     	movff	plusw1,postinc1
 14576  016B1A  EC7B  F0CD         	call	_pad	;wreg free
 14577                           
 14578                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 14579  016B1E  0EE8               	movlw	232
 14580  016B20  26E1               	addwf	fsr1l,f,c
 14581  016B22  0EFF               	movlw	255
 14582  016B24  22E2               	addwfc	fsr1h,f,c
 14583  016B26  0012               	return		;funcret
 14584  016B28                     __end_of_utoa:
 14585                           	opt callstack 0
 14586                           
 14587 ;; *************** function ___lomod *****************
 14588 ;; Defined at:
 14589 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 14590 ;; Parameters:    Size  Location     Type
 14591 ;;  dividend        8  [STACK] unsigned long long 
 14592 ;;  divisor         8  [STACK] unsigned long long 
 14593 ;; Auto vars:     Size  Location     Type
 14594 ;;  counter         1  [STACK] unsigned char 
 14595 ;; Return value:  Size  Location     Type
 14596 ;;                  8  [STACK] unsigned long long 
 14597 ;; Registers used:
 14598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 14599 ;; Tracked objects:
 14600 ;;		On entry : 0/2
 14601 ;;		On exit  : 0/0
 14602 ;;		Unchanged: 0/0
 14603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14608 ;;Total ram usage:        0 bytes
 14609 ;; Hardware stack levels used:    1
 14610 ;; Hardware stack levels required when called:   15
 14611 ;; This function calls:
 14612 ;;		Nothing
 14613 ;; This function is called by:
 14614 ;;		_utoa
 14615 ;; This function uses a reentrant model
 14616 ;;
 14617                           
 14618                           	psect	text53
 14619  0193FC                     __ptext53:
 14620                           	opt callstack 0
 14621  0193FC                     ___lomod:
 14622                           	opt callstack 0
 14623                           
 14624                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 14625  0193FC  52E6               	movf	postinc1,f,c
 14626                           
 14627                           ;stkvar	_divisor @ sp[(-1)+-16]
 14628                           
 14629                           ;incstack = 0
 14630 ;; hardware stack exceeded
 14631  0193FE  0EEF               	movlw	-17
 14632  019400  50E3               	movf	plusw1,w,c
 14633  019402  E116               	bnz	u7360
 14634  019404  0EF0               	movlw	-16
 14635  019406  50E3               	movf	plusw1,w,c
 14636  019408  E113               	bnz	u7360
 14637  01940A  0EF1               	movlw	-15
 14638  01940C  50E3               	movf	plusw1,w,c
 14639  01940E  E110               	bnz	u7360
 14640  019410  0EF2               	movlw	-14
 14641  019412  50E3               	movf	plusw1,w,c
 14642  019414  E10D               	bnz	u7360
 14643  019416  0EF3               	movlw	-13
 14644  019418  50E3               	movf	plusw1,w,c
 14645  01941A  E10A               	bnz	u7360
 14646  01941C  0EF4               	movlw	-12
 14647  01941E  50E3               	movf	plusw1,w,c
 14648  019420  E107               	bnz	u7360
 14649  019422  0EF5               	movlw	-11
 14650  019424  50E3               	movf	plusw1,w,c
 14651  019426  E104               	bnz	u7360
 14652  019428  0EF6               	movlw	-10
 14653  01942A  50E3               	movf	plusw1,w,c
 14654  01942C  B4D8               	btfsc	status,2,c
 14655  01942E  D075               	goto	u7390
 14656  019430                     u7360:
 14657                           
 14658                           ;stkvar	_counter @ sp[(-1)+0]
 14659  019430  0EFF               	movlw	-1
 14660  019432  6AE3               	clrf	plusw1,c
 14661  019434  D012               	goto	L14
 14662  019436                     l8710:
 14663                           
 14664                           ;stkvar	_divisor @ sp[(-1)+-16]
 14665  019436  90D8               	bcf	status,0,c
 14666  019438  0EEF               	movlw	-17
 14667  01943A  36E3               	rlcf	plusw1,f,c
 14668  01943C  0EF0               	movlw	-16
 14669  01943E  36E3               	rlcf	plusw1,f,c
 14670  019440  0EF1               	movlw	-15
 14671  019442  36E3               	rlcf	plusw1,f,c
 14672  019444  0EF2               	movlw	-14
 14673  019446  36E3               	rlcf	plusw1,f,c
 14674  019448  0EF3               	movlw	-13
 14675  01944A  36E3               	rlcf	plusw1,f,c
 14676  01944C  0EF4               	movlw	-12
 14677  01944E  36E3               	rlcf	plusw1,f,c
 14678  019450  0EF5               	movlw	-11
 14679  019452  36E3               	rlcf	plusw1,f,c
 14680  019454  0EF6               	movlw	-10
 14681  019456  36E3               	rlcf	plusw1,f,c
 14682                           
 14683                           ;stkvar	_counter @ sp[(-1)+0]
 14684  019458  0EFF               	movlw	-1
 14685  01945A                     L14:
 14686  01945A  2AE3               	incf	plusw1,f,c
 14687                           
 14688                           ;stkvar	_divisor @ sp[(-1)+-16]
 14689  01945C  0EF6               	movlw	-10
 14690  01945E  AEE3               	btfss	plusw1,7,c
 14691  019460  D7EA               	goto	l8710
 14692  019462                     u7370:
 14693                           
 14694                           ;stkvar	_divisor @ sp[(-1)+-16]
 14695                           ;stkvar	_dividend @ sp[(-1)+-8]
 14696  019462  50E1               	movf	fsr1l,w,c
 14697  019464  0FF7               	addlw	-9
 14698  019466  6ED9               	movwf	fsr2l,c
 14699  019468  50E2               	movf	fsr1h,w,c
 14700  01946A  6EDA               	movwf	fsr2h,c
 14701  01946C  0EFF               	movlw	255
 14702  01946E  22DA               	addwfc	fsr2h,f,c
 14703  019470  0EEF               	movlw	-17
 14704  019472  50E3               	movf	plusw1,w,c
 14705  019474  5CDE               	subwf	postinc2,w,c
 14706  019476  0EF0               	movlw	-16
 14707  019478  50E3               	movf	plusw1,w,c
 14708  01947A  58DE               	subwfb	postinc2,w,c
 14709  01947C  0EF1               	movlw	-15
 14710  01947E  50E3               	movf	plusw1,w,c
 14711  019480  58DE               	subwfb	postinc2,w,c
 14712  019482  0EF2               	movlw	-14
 14713  019484  50E3               	movf	plusw1,w,c
 14714  019486  58DE               	subwfb	postinc2,w,c
 14715  019488  0EF3               	movlw	-13
 14716  01948A  50E3               	movf	plusw1,w,c
 14717  01948C  58DE               	subwfb	postinc2,w,c
 14718  01948E  0EF4               	movlw	-12
 14719  019490  50E3               	movf	plusw1,w,c
 14720  019492  58DE               	subwfb	postinc2,w,c
 14721  019494  0EF5               	movlw	-11
 14722  019496  50E3               	movf	plusw1,w,c
 14723  019498  58DE               	subwfb	postinc2,w,c
 14724  01949A  0EF6               	movlw	-10
 14725  01949C  50E3               	movf	plusw1,w,c
 14726  01949E  58DE               	subwfb	postinc2,w,c
 14727  0194A0  A0D8               	btfss	status,0,c
 14728  0194A2  D01F               	goto	l8718
 14729                           
 14730                           ;stkvar	_divisor @ sp[(-1)+-16]
 14731                           ;stkvar	_dividend @ sp[(-1)+-8]
 14732  0194A4  50E1               	movf	fsr1l,w,c
 14733  0194A6  0FF7               	addlw	-9
 14734  0194A8  6ED9               	movwf	fsr2l,c
 14735  0194AA  50E2               	movf	fsr1h,w,c
 14736  0194AC  6EDA               	movwf	fsr2h,c
 14737  0194AE  0EFF               	movlw	255
 14738  0194B0  22DA               	addwfc	fsr2h,f,c
 14739  0194B2  0EEF               	movlw	-17
 14740  0194B4  50E3               	movf	plusw1,w,c
 14741  0194B6  5EDE               	subwf	postinc2,f,c
 14742  0194B8  0EF0               	movlw	-16
 14743  0194BA  50E3               	movf	plusw1,w,c
 14744  0194BC  5ADE               	subwfb	postinc2,f,c
 14745  0194BE  0EF1               	movlw	-15
 14746  0194C0  50E3               	movf	plusw1,w,c
 14747  0194C2  5ADE               	subwfb	postinc2,f,c
 14748  0194C4  0EF2               	movlw	-14
 14749  0194C6  50E3               	movf	plusw1,w,c
 14750  0194C8  5ADE               	subwfb	postinc2,f,c
 14751  0194CA  0EF3               	movlw	-13
 14752  0194CC  50E3               	movf	plusw1,w,c
 14753  0194CE  5ADE               	subwfb	postinc2,f,c
 14754  0194D0  0EF4               	movlw	-12
 14755  0194D2  50E3               	movf	plusw1,w,c
 14756  0194D4  5ADE               	subwfb	postinc2,f,c
 14757  0194D6  0EF5               	movlw	-11
 14758  0194D8  50E3               	movf	plusw1,w,c
 14759  0194DA  5ADE               	subwfb	postinc2,f,c
 14760  0194DC  0EF6               	movlw	-10
 14761  0194DE  50E3               	movf	plusw1,w,c
 14762  0194E0  5ADE               	subwfb	postinc2,f,c
 14763  0194E2                     l8718:
 14764                           
 14765                           ;stkvar	_divisor @ sp[(-1)+-16]
 14766  0194E2  90D8               	bcf	status,0,c
 14767  0194E4  0EF6               	movlw	-10
 14768  0194E6  32E3               	rrcf	plusw1,f,c
 14769  0194E8  0EF5               	movlw	-11
 14770  0194EA  32E3               	rrcf	plusw1,f,c
 14771  0194EC  0EF4               	movlw	-12
 14772  0194EE  32E3               	rrcf	plusw1,f,c
 14773  0194F0  0EF3               	movlw	-13
 14774  0194F2  32E3               	rrcf	plusw1,f,c
 14775  0194F4  0EF2               	movlw	-14
 14776  0194F6  32E3               	rrcf	plusw1,f,c
 14777  0194F8  0EF1               	movlw	-15
 14778  0194FA  32E3               	rrcf	plusw1,f,c
 14779  0194FC  0EF0               	movlw	-16
 14780  0194FE  32E3               	rrcf	plusw1,f,c
 14781  019500  0EEF               	movlw	-17
 14782  019502  32E3               	rrcf	plusw1,f,c
 14783                           
 14784                           ;stkvar	_counter @ sp[(-1)+0]
 14785  019504  0EFF               	movlw	-1
 14786  019506  50E3               	movf	plusw1,w,c
 14787  019508  6E01               	movwf	btemp^0,c
 14788  01950A  0E01               	movlw	1
 14789  01950C  5E01               	subwf	btemp^0,f,c
 14790  01950E  0EFF               	movlw	-1
 14791  019510  0060  F007  FFE3   	movff	btemp,plusw1
 14792  019516  A4D8               	btfss	status,2,c
 14793  019518  D7A4               	goto	u7370
 14794  01951A                     u7390:
 14795                           
 14796                           ;stkvar	_dividend @ sp[(-1)+-8]
 14797  01951A  0EF7               	movlw	247
 14798  01951C  24E1               	addwf	fsr1l,w,c
 14799  01951E  6ED9               	movwf	fsr2l,c
 14800  019520  0EFF               	movlw	255
 14801  019522  20E2               	addwfc	fsr1h,w,c
 14802  019524  6EDA               	movwf	fsr2h,c
 14803                           
 14804                           ;stkvar	?___lomod @ sp[(-1)+-8]
 14805  019526  0E08               	movlw	8
 14806  019528  6E01               	movwf	btemp^0,c
 14807  01952A  0EF7               	movlw	-9
 14808  01952C                     us740999:
 14809  01952C  006F FF7B FFE3     	movff	postinc2,plusw1
 14810  019532  28E8               	incf	wreg,w,c
 14811  019534  2E01               	decfsz	btemp^0,f,c
 14812  019536  D7FA               	bra	us740999
 14813                           
 14814                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 14815  019538  52E5               	movf	postdec1,f,c
 14816  01953A  0012               	return		;funcret
 14817  01953C                     __end_of___lomod:
 14818                           	opt callstack 0
 14819                           
 14820 ;; *************** function ___lodiv *****************
 14821 ;; Defined at:
 14822 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 14823 ;; Parameters:    Size  Location     Type
 14824 ;;  dividend        8  [STACK] unsigned long long 
 14825 ;;  divisor         8  [STACK] unsigned long long 
 14826 ;; Auto vars:     Size  Location     Type
 14827 ;;  quotient        8  [STACK] unsigned long long 
 14828 ;;  counter         1  [STACK] unsigned char 
 14829 ;; Return value:  Size  Location     Type
 14830 ;;                  8  [STACK] unsigned long long 
 14831 ;; Registers used:
 14832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 14833 ;; Tracked objects:
 14834 ;;		On entry : 0/2
 14835 ;;		On exit  : 0/0
 14836 ;;		Unchanged: 0/0
 14837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14842 ;;Total ram usage:        0 bytes
 14843 ;; Hardware stack levels used:    1
 14844 ;; Hardware stack levels required when called:   15
 14845 ;; This function calls:
 14846 ;;		Nothing
 14847 ;; This function is called by:
 14848 ;;		_utoa
 14849 ;; This function uses a reentrant model
 14850 ;;
 14851                           
 14852                           	psect	text54
 14853  018CF6                     __ptext54:
 14854                           	opt callstack 0
 14855  018CF6                     ___lodiv:
 14856                           	opt callstack 0
 14857                           
 14858                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 14859  018CF6  0E09               	movlw	9
 14860  018CF8  26E1               	addwf	fsr1l,f,c
 14861  018CFA  0E00               	movlw	0
 14862  018CFC  22E2               	addwfc	fsr1h,f,c
 14863                           
 14864                           ;stkvar	_quotient @ sp[(-9)+0]
 14865                           
 14866                           ;incstack = 0
 14867 ;; hardware stack exceeded
 14868  018CFE  0E07               	movlw	7
 14869  018D00  6E01               	movwf	btemp^0,c
 14870  018D02  0EF7               	movlw	-9
 14871  018D04                     u7301:
 14872  018D04  6AE3               	clrf	plusw1,c
 14873  018D06  2AE8               	incf	wreg,f,c
 14874  018D08  0601               	decf	btemp^0,f,c
 14875  018D0A  E2FC               	bc	u7301
 14876                           
 14877                           ;stkvar	_divisor @ sp[(-9)+-16]
 14878  018D0C  0EE7               	movlw	-25
 14879  018D0E  50E3               	movf	plusw1,w,c
 14880  018D10  E116               	bnz	u7310
 14881  018D12  0EE8               	movlw	-24
 14882  018D14  50E3               	movf	plusw1,w,c
 14883  018D16  E113               	bnz	u7310
 14884  018D18  0EE9               	movlw	-23
 14885  018D1A  50E3               	movf	plusw1,w,c
 14886  018D1C  E110               	bnz	u7310
 14887  018D1E  0EEA               	movlw	-22
 14888  018D20  50E3               	movf	plusw1,w,c
 14889  018D22  E10D               	bnz	u7310
 14890  018D24  0EEB               	movlw	-21
 14891  018D26  50E3               	movf	plusw1,w,c
 14892  018D28  E10A               	bnz	u7310
 14893  018D2A  0EEC               	movlw	-20
 14894  018D2C  50E3               	movf	plusw1,w,c
 14895  018D2E  E107               	bnz	u7310
 14896  018D30  0EED               	movlw	-19
 14897  018D32  50E3               	movf	plusw1,w,c
 14898  018D34  E104               	bnz	u7310
 14899  018D36  0EEE               	movlw	-18
 14900  018D38  50E3               	movf	plusw1,w,c
 14901  018D3A  B4D8               	btfsc	status,2,c
 14902  018D3C  D088               	goto	u7340
 14903  018D3E                     u7310:
 14904                           
 14905                           ;stkvar	_counter @ sp[(-9)+8]
 14906  018D3E  0EFF               	movlw	-1
 14907  018D40  6AE3               	clrf	plusw1,c
 14908  018D42  D012               	goto	L15
 14909  018D44                     l8686:
 14910                           
 14911                           ;stkvar	_divisor @ sp[(-9)+-16]
 14912  018D44  90D8               	bcf	status,0,c
 14913  018D46  0EE7               	movlw	-25
 14914  018D48  36E3               	rlcf	plusw1,f,c
 14915  018D4A  0EE8               	movlw	-24
 14916  018D4C  36E3               	rlcf	plusw1,f,c
 14917  018D4E  0EE9               	movlw	-23
 14918  018D50  36E3               	rlcf	plusw1,f,c
 14919  018D52  0EEA               	movlw	-22
 14920  018D54  36E3               	rlcf	plusw1,f,c
 14921  018D56  0EEB               	movlw	-21
 14922  018D58  36E3               	rlcf	plusw1,f,c
 14923  018D5A  0EEC               	movlw	-20
 14924  018D5C  36E3               	rlcf	plusw1,f,c
 14925  018D5E  0EED               	movlw	-19
 14926  018D60  36E3               	rlcf	plusw1,f,c
 14927  018D62  0EEE               	movlw	-18
 14928  018D64  36E3               	rlcf	plusw1,f,c
 14929                           
 14930                           ;stkvar	_counter @ sp[(-9)+8]
 14931  018D66  0EFF               	movlw	-1
 14932  018D68                     L15:
 14933  018D68  2AE3               	incf	plusw1,f,c
 14934                           
 14935                           ;stkvar	_divisor @ sp[(-9)+-16]
 14936  018D6A  0EEE               	movlw	-18
 14937  018D6C  AEE3               	btfss	plusw1,7,c
 14938  018D6E  D7EA               	goto	l8686
 14939  018D70                     u7320:
 14940                           
 14941                           ;stkvar	_quotient @ sp[(-9)+0]
 14942  018D70  90D8               	bcf	status,0,c
 14943  018D72  0EF7               	movlw	-9
 14944  018D74  36E3               	rlcf	plusw1,f,c
 14945  018D76  0EF8               	movlw	-8
 14946  018D78  36E3               	rlcf	plusw1,f,c
 14947  018D7A  0EF9               	movlw	-7
 14948  018D7C  36E3               	rlcf	plusw1,f,c
 14949  018D7E  0EFA               	movlw	-6
 14950  018D80  36E3               	rlcf	plusw1,f,c
 14951  018D82  0EFB               	movlw	-5
 14952  018D84  36E3               	rlcf	plusw1,f,c
 14953  018D86  0EFC               	movlw	-4
 14954  018D88  36E3               	rlcf	plusw1,f,c
 14955  018D8A  0EFD               	movlw	-3
 14956  018D8C  36E3               	rlcf	plusw1,f,c
 14957  018D8E  0EFE               	movlw	-2
 14958  018D90  36E3               	rlcf	plusw1,f,c
 14959                           
 14960                           ;stkvar	_divisor @ sp[(-9)+-16]
 14961                           ;stkvar	_dividend @ sp[(-9)+-8]
 14962  018D92  50E1               	movf	fsr1l,w,c
 14963  018D94  0FEF               	addlw	-17
 14964  018D96  6ED9               	movwf	fsr2l,c
 14965  018D98  50E2               	movf	fsr1h,w,c
 14966  018D9A  6EDA               	movwf	fsr2h,c
 14967  018D9C  0EFF               	movlw	255
 14968  018D9E  22DA               	addwfc	fsr2h,f,c
 14969  018DA0  0EE7               	movlw	-25
 14970  018DA2  50E3               	movf	plusw1,w,c
 14971  018DA4  5CDE               	subwf	postinc2,w,c
 14972  018DA6  0EE8               	movlw	-24
 14973  018DA8  50E3               	movf	plusw1,w,c
 14974  018DAA  58DE               	subwfb	postinc2,w,c
 14975  018DAC  0EE9               	movlw	-23
 14976  018DAE  50E3               	movf	plusw1,w,c
 14977  018DB0  58DE               	subwfb	postinc2,w,c
 14978  018DB2  0EEA               	movlw	-22
 14979  018DB4  50E3               	movf	plusw1,w,c
 14980  018DB6  58DE               	subwfb	postinc2,w,c
 14981  018DB8  0EEB               	movlw	-21
 14982  018DBA  50E3               	movf	plusw1,w,c
 14983  018DBC  58DE               	subwfb	postinc2,w,c
 14984  018DBE  0EEC               	movlw	-20
 14985  018DC0  50E3               	movf	plusw1,w,c
 14986  018DC2  58DE               	subwfb	postinc2,w,c
 14987  018DC4  0EED               	movlw	-19
 14988  018DC6  50E3               	movf	plusw1,w,c
 14989  018DC8  58DE               	subwfb	postinc2,w,c
 14990  018DCA  0EEE               	movlw	-18
 14991  018DCC  50E3               	movf	plusw1,w,c
 14992  018DCE  58DE               	subwfb	postinc2,w,c
 14993  018DD0  A0D8               	btfss	status,0,c
 14994  018DD2  D021               	goto	l8698
 14995                           
 14996                           ;stkvar	_divisor @ sp[(-9)+-16]
 14997                           ;stkvar	_dividend @ sp[(-9)+-8]
 14998  018DD4  50E1               	movf	fsr1l,w,c
 14999  018DD6  0FEF               	addlw	-17
 15000  018DD8  6ED9               	movwf	fsr2l,c
 15001  018DDA  50E2               	movf	fsr1h,w,c
 15002  018DDC  6EDA               	movwf	fsr2h,c
 15003  018DDE  0EFF               	movlw	255
 15004  018DE0  22DA               	addwfc	fsr2h,f,c
 15005  018DE2  0EE7               	movlw	-25
 15006  018DE4  50E3               	movf	plusw1,w,c
 15007  018DE6  5EDE               	subwf	postinc2,f,c
 15008  018DE8  0EE8               	movlw	-24
 15009  018DEA  50E3               	movf	plusw1,w,c
 15010  018DEC  5ADE               	subwfb	postinc2,f,c
 15011  018DEE  0EE9               	movlw	-23
 15012  018DF0  50E3               	movf	plusw1,w,c
 15013  018DF2  5ADE               	subwfb	postinc2,f,c
 15014  018DF4  0EEA               	movlw	-22
 15015  018DF6  50E3               	movf	plusw1,w,c
 15016  018DF8  5ADE               	subwfb	postinc2,f,c
 15017  018DFA  0EEB               	movlw	-21
 15018  018DFC  50E3               	movf	plusw1,w,c
 15019  018DFE  5ADE               	subwfb	postinc2,f,c
 15020  018E00  0EEC               	movlw	-20
 15021  018E02  50E3               	movf	plusw1,w,c
 15022  018E04  5ADE               	subwfb	postinc2,f,c
 15023  018E06  0EED               	movlw	-19
 15024  018E08  50E3               	movf	plusw1,w,c
 15025  018E0A  5ADE               	subwfb	postinc2,f,c
 15026  018E0C  0EEE               	movlw	-18
 15027  018E0E  50E3               	movf	plusw1,w,c
 15028  018E10  5ADE               	subwfb	postinc2,f,c
 15029                           
 15030                           ;stkvar	_quotient @ sp[(-9)+0]
 15031  018E12  0EF7               	movlw	-9
 15032  018E14  80E3               	bsf	plusw1,0,c
 15033  018E16                     l8698:
 15034                           
 15035                           ;stkvar	_divisor @ sp[(-9)+-16]
 15036  018E16  90D8               	bcf	status,0,c
 15037  018E18  0EEE               	movlw	-18
 15038  018E1A  32E3               	rrcf	plusw1,f,c
 15039  018E1C  0EED               	movlw	-19
 15040  018E1E  32E3               	rrcf	plusw1,f,c
 15041  018E20  0EEC               	movlw	-20
 15042  018E22  32E3               	rrcf	plusw1,f,c
 15043  018E24  0EEB               	movlw	-21
 15044  018E26  32E3               	rrcf	plusw1,f,c
 15045  018E28  0EEA               	movlw	-22
 15046  018E2A  32E3               	rrcf	plusw1,f,c
 15047  018E2C  0EE9               	movlw	-23
 15048  018E2E  32E3               	rrcf	plusw1,f,c
 15049  018E30  0EE8               	movlw	-24
 15050  018E32  32E3               	rrcf	plusw1,f,c
 15051  018E34  0EE7               	movlw	-25
 15052  018E36  32E3               	rrcf	plusw1,f,c
 15053                           
 15054                           ;stkvar	_counter @ sp[(-9)+8]
 15055  018E38  0EFF               	movlw	-1
 15056  018E3A  50E3               	movf	plusw1,w,c
 15057  018E3C  6E01               	movwf	btemp^0,c
 15058  018E3E  0E01               	movlw	1
 15059  018E40  5E01               	subwf	btemp^0,f,c
 15060  018E42  0EFF               	movlw	-1
 15061  018E44  0060  F007  FFE3   	movff	btemp,plusw1
 15062  018E4A  A4D8               	btfss	status,2,c
 15063  018E4C  D791               	goto	u7320
 15064  018E4E                     u7340:
 15065                           
 15066                           ;stkvar	_quotient @ sp[(-9)+0]
 15067  018E4E  0EF7               	movlw	247
 15068  018E50  24E1               	addwf	fsr1l,w,c
 15069  018E52  6ED9               	movwf	fsr2l,c
 15070  018E54  0EFF               	movlw	255
 15071  018E56  20E2               	addwfc	fsr1h,w,c
 15072  018E58  6EDA               	movwf	fsr2h,c
 15073                           
 15074                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 15075  018E5A  0E08               	movlw	8
 15076  018E5C  6E01               	movwf	btemp^0,c
 15077  018E5E  0EEF               	movlw	-17
 15078  018E60                     us735999:
 15079  018E60  006F FF7B FFE3     	movff	postinc2,plusw1
 15080  018E66  28E8               	incf	wreg,w,c
 15081  018E68  2E01               	decfsz	btemp^0,f,c
 15082  018E6A  D7FA               	bra	us735999
 15083                           
 15084                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 15085  018E6C  0EF7               	movlw	247
 15086  018E6E  26E1               	addwf	fsr1l,f,c
 15087  018E70  0EFF               	movlw	255
 15088  018E72  22E2               	addwfc	fsr1h,f,c
 15089  018E74  0012               	return		;funcret
 15090  018E76                     __end_of___lodiv:
 15091                           	opt callstack 0
 15092                           
 15093 ;; *************** function _strncmp *****************
 15094 ;; Defined at:
 15095 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 15096 ;; Parameters:    Size  Location     Type
 15097 ;;  _l              2  [STACK] PTR const unsigned char 
 15098 ;;		 -> ct(3), STR_64(121), STR_62(3), STR_61(3), 
 15099 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 15100 ;;		 -> STR_56(19), STR_55(19), STR_54(24), STR_53(15), 
 15101 ;;		 -> STR_52(15), STR_51(15), STR_50(10), STR_49(10), 
 15102 ;;		 -> STR_48(19), STR_47(19), STR_44(3), STR_43(3), 
 15103 ;;		 -> STR_42(22), STR_41(22), STR_40(22), STR_39(23), 
 15104 ;;		 -> STR_38(23), STR_37(23), STR_36(23), STR_35(23), 
 15105 ;;		 -> STR_34(23), STR_33(22), STR_32(22), STR_31(22), 
 15106 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 15107 ;;		 -> STR_26(22), STR_25(22), STR_24(22), STR_23(22), 
 15108 ;;		 -> STR_22(22), STR_21(17), STR_20(16), STR_19(16), 
 15109 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 15110 ;;		 -> STR_14(21), STR_13(21), STR_12(21), STR_11(22), 
 15111 ;;		 -> STR_10(22), STR_9(26), STR_8(21), STR_7(21), 
 15112 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 15113 ;;		 -> STR_1(21), 
 15114 ;;  _r              2  [STACK] PTR const unsigned char 
 15115 ;;		 -> STR_98(3), STR_94(3), STR_89(3), STR_84(3), 
 15116 ;;		 -> STR_79(3), STR_75(3), 
 15117 ;;  n               2  [STACK] unsigned int 
 15118 ;; Auto vars:     Size  Location     Type
 15119 ;;  r               2  [STACK] PTR const unsigned char 
 15120 ;;		 -> STR_98(3), STR_94(3), STR_89(3), STR_84(3), 
 15121 ;;		 -> STR_79(3), STR_75(3), 
 15122 ;;  l               2  [STACK] PTR const unsigned char 
 15123 ;;		 -> ct(3), STR_64(121), STR_62(3), STR_61(3), 
 15124 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 15125 ;;		 -> STR_56(19), STR_55(19), STR_54(24), STR_53(15), 
 15126 ;;		 -> STR_52(15), STR_51(15), STR_50(10), STR_49(10), 
 15127 ;;		 -> STR_48(19), STR_47(19), STR_44(3), STR_43(3), 
 15128 ;;		 -> STR_42(22), STR_41(22), STR_40(22), STR_39(23), 
 15129 ;;		 -> STR_38(23), STR_37(23), STR_36(23), STR_35(23), 
 15130 ;;		 -> STR_34(23), STR_33(22), STR_32(22), STR_31(22), 
 15131 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 15132 ;;		 -> STR_26(22), STR_25(22), STR_24(22), STR_23(22), 
 15133 ;;		 -> STR_22(22), STR_21(17), STR_20(16), STR_19(16), 
 15134 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 15135 ;;		 -> STR_14(21), STR_13(21), STR_12(21), STR_11(22), 
 15136 ;;		 -> STR_10(22), STR_9(26), STR_8(21), STR_7(21), 
 15137 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 15138 ;;		 -> STR_1(21), 
 15139 ;; Return value:  Size  Location     Type
 15140 ;;                  2  [STACK] int 
 15141 ;; Registers used:
 15142 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 15143 ;; Tracked objects:
 15144 ;;		On entry : 0/0
 15145 ;;		On exit  : 0/0
 15146 ;;		Unchanged: 0/0
 15147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15152 ;;Total ram usage:        0 bytes
 15153 ;; Hardware stack levels used:    1
 15154 ;; Hardware stack levels required when called:   15
 15155 ;; This function calls:
 15156 ;;		Nothing
 15157 ;; This function is called by:
 15158 ;;		_vfpfcnvrt
 15159 ;; This function uses a reentrant model
 15160 ;;
 15161                           
 15162                           	psect	text55
 15163  018048                     __ptext55:
 15164                           	opt callstack 0
 15165  018048                     _strncmp:
 15166                           	opt callstack 0
 15167                           
 15168                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15169  018048  52E6               	movf	postinc1,f,c
 15170  01804A  52E6               	movf	postinc1,f,c
 15171  01804C  52E6               	movf	postinc1,f,c
 15172  01804E  52E6               	movf	postinc1,f,c
 15173                           
 15174                           ;stkvar	__l @ sp[(-4)+-2]
 15175                           
 15176                           ;incstack = 0
 15177 ;; hardware stack exceeded
 15178  018050  0EFA               	movlw	-6
 15179  018052  006F FF8C  F00B    	movff	plusw1,btemp+10
 15180  018058  0EFB               	movlw	-5
 15181  01805A  006F FF8C  F00C    	movff	plusw1,btemp+11
 15182                           
 15183                           ;stkvar	_l @ sp[(-4)+2]
 15184  018060  0EFF               	movlw	-1
 15185  018062  0060  F033  FFE3   	movff	btemp+11,plusw1
 15186  018068  0EFE               	movlw	-2
 15187  01806A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15188                           
 15189                           ;stkvar	__r @ sp[(-4)+-4]
 15190  018070  0EF8               	movlw	-8
 15191  018072  006F FF8C  F00B    	movff	plusw1,btemp+10
 15192  018078  0EF9               	movlw	-7
 15193  01807A  006F FF8C  F00C    	movff	plusw1,btemp+11
 15194                           
 15195                           ;stkvar	_r @ sp[(-4)+0]
 15196  018080  0EFD               	movlw	-3
 15197  018082  0060  F033  FFE3   	movff	btemp+11,plusw1
 15198  018088  0EFC               	movlw	-4
 15199  01808A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15200                           
 15201                           ;stkvar	_n @ sp[(-4)+-6]
 15202  018090  0EF6               	movlw	-10
 15203  018092  006F FF8C  F001    	movff	plusw1,btemp
 15204  018098  0E01               	movlw	1
 15205  01809A  5E01               	subwf	btemp^0,f,c
 15206  01809C  0EF6               	movlw	-10
 15207  01809E  0060  F007  FFE3   	movff	btemp,plusw1
 15208  0180A4  0EF7               	movlw	-9
 15209  0180A6  006F FF8C  F001    	movff	plusw1,btemp
 15210  0180AC  0E00               	movlw	0
 15211  0180AE  5A01               	subwfb	btemp^0,f,c
 15212  0180B0  0EF7               	movlw	-9
 15213  0180B2  0060  F007  FFE3   	movff	btemp,plusw1
 15214  0180B8  0EF6               	movlw	-10
 15215  0180BA  28E3               	incf	plusw1,w,c
 15216  0180BC  E13F               	bnz	l9368
 15217  0180BE  0EF7               	movlw	-9
 15218  0180C0  28E3               	incf	plusw1,w,c
 15219  0180C2  A4D8               	btfss	status,2,c
 15220  0180C4  D03B               	goto	l9368
 15221  0180C6  0E00               	movlw	0
 15222  0180C8  6E01               	movwf	btemp^0,c
 15223  0180CA  0E00               	movlw	0
 15224  0180CC  6E02               	movwf	(btemp+1)^0,c
 15225  0180CE  D0C7               	goto	l3451
 15226  0180D0                     l9366:
 15227                           
 15228                           ;stkvar	_l @ sp[(-4)+2]
 15229  0180D0  0EFE               	movlw	-2
 15230  0180D2  50E3               	movf	plusw1,w,c
 15231  0180D4  0F01               	addlw	1
 15232  0180D6  6E01               	movwf	btemp^0,c
 15233  0180D8  0EFE               	movlw	-2
 15234  0180DA  0060  F007  FFE3   	movff	btemp,plusw1
 15235  0180E0  6A01               	clrf	btemp^0,c
 15236  0180E2  0EFF               	movlw	-1
 15237  0180E4  50E3               	movf	plusw1,w,c
 15238  0180E6  2001               	addwfc	btemp^0,w,c
 15239  0180E8  6E01               	movwf	btemp^0,c
 15240  0180EA  0EFF               	movlw	-1
 15241  0180EC  0060  F007  FFE3   	movff	btemp,plusw1
 15242                           
 15243                           ;stkvar	_r @ sp[(-4)+0]
 15244  0180F2  0EFC               	movlw	-4
 15245  0180F4  50E3               	movf	plusw1,w,c
 15246  0180F6  0F01               	addlw	1
 15247  0180F8  6E01               	movwf	btemp^0,c
 15248  0180FA  0EFC               	movlw	-4
 15249  0180FC  0060  F007  FFE3   	movff	btemp,plusw1
 15250  018102  6A01               	clrf	btemp^0,c
 15251  018104  0EFD               	movlw	-3
 15252  018106  50E3               	movf	plusw1,w,c
 15253  018108  2001               	addwfc	btemp^0,w,c
 15254  01810A  6E01               	movwf	btemp^0,c
 15255  01810C  0EFD               	movlw	-3
 15256  01810E  0060  F007  FFE3   	movff	btemp,plusw1
 15257                           
 15258                           ;stkvar	_n @ sp[(-4)+-6]
 15259  018114  0EF6               	movlw	-10
 15260  018116  006F FF8C  F001    	movff	plusw1,btemp
 15261  01811C  0E01               	movlw	1
 15262  01811E  5E01               	subwf	btemp^0,f,c
 15263  018120  0EF6               	movlw	-10
 15264  018122  0060  F007  FFE3   	movff	btemp,plusw1
 15265  018128  0EF7               	movlw	-9
 15266  01812A  006F FF8C  F001    	movff	plusw1,btemp
 15267  018130  0E00               	movlw	0
 15268  018132  5A01               	subwfb	btemp^0,f,c
 15269  018134  0EF7               	movlw	-9
 15270  018136  0060  F007  FFE3   	movff	btemp,plusw1
 15271  01813C                     l9368:
 15272                           
 15273                           ;stkvar	_l @ sp[(-4)+2]
 15274  01813C  0EFE               	movlw	-2
 15275  01813E  006F FF8F FFF6     	movff	plusw1,tblptrl
 15276  018144  0EFF               	movlw	-1
 15277  018146  006F FF8F FFF7     	movff	plusw1,tblptrh
 15278  01814C  0E00               	movlw	low (__mediumconst shr (0+16))
 15279  01814E  6EF8               	movwf	tblptru,c
 15280  018150  0E1F               	movlw	(high __ramtop+-1)
 15281  018152  64F7               	cpfsgt	tblptrh,c
 15282  018154  D003               	bra	u8597
 15283  018156  0008               	tblrd		*
 15284  018158  50F5               	movf	tablat,w,c
 15285  01815A  D007               	bra	u8590
 15286  01815C                     u8597:
 15287  01815C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15288  018162  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15289  018168  50EF               	movf	indf0,w,c
 15290  01816A                     u8590:
 15291  01816A  0900               	iorlw	0
 15292  01816C  B4D8               	btfsc	status,2,c
 15293  01816E  D04A               	goto	u8630
 15294                           
 15295                           ;stkvar	_r @ sp[(-4)+0]
 15296  018170  50E1               	movf	fsr1l,w,c
 15297  018172  0FFC               	addlw	-4
 15298  018174  6ED9               	movwf	fsr2l,c
 15299  018176  50E2               	movf	fsr1h,w,c
 15300  018178  6EDA               	movwf	fsr2h,c
 15301  01817A  0EFF               	movlw	255
 15302  01817C  22DA               	addwfc	fsr2h,f,c
 15303  01817E  006F FF7B FFF6     	movff	postinc2,tblptrl
 15304  018184  006F FF77 FFF7     	movff	postdec2,tblptrh
 15305  01818A                     	if	0	;tblptru may be non-zero
 15306  01818A                     	endif
 15307  01818A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15308  01818A  0E00               	movlw	low (__mediumconst shr (0+16))
 15309  01818C  6EF8               	movwf	tblptru,c
 15310  01818E                     	endif
 15311  01818E  0008               	tblrd		*
 15312  018190  50F5               	movf	tablat,w,c
 15313  018192  0900               	iorlw	0
 15314  018194  B4D8               	btfsc	status,2,c
 15315  018196  D036               	goto	u8630
 15316                           
 15317                           ;stkvar	_n @ sp[(-4)+-6]
 15318  018198  0EF6               	movlw	-10
 15319  01819A  006F FF8C  F001    	movff	plusw1,btemp
 15320  0181A0  0EF7               	movlw	-9
 15321  0181A2  50E3               	movf	plusw1,w,c
 15322  0181A4  1001               	iorwf	btemp^0,w,c
 15323  0181A6  B4D8               	btfsc	status,2,c
 15324  0181A8  D02D               	goto	u8630
 15325                           
 15326                           ;stkvar	_r @ sp[(-4)+0]
 15327  0181AA  50E1               	movf	fsr1l,w,c
 15328  0181AC  0FFC               	addlw	-4
 15329  0181AE  6ED9               	movwf	fsr2l,c
 15330  0181B0  50E2               	movf	fsr1h,w,c
 15331  0181B2  6EDA               	movwf	fsr2h,c
 15332  0181B4  0EFF               	movlw	255
 15333  0181B6  22DA               	addwfc	fsr2h,f,c
 15334  0181B8  006F FF7B FFF6     	movff	postinc2,tblptrl
 15335  0181BE  006F FF77 FFF7     	movff	postdec2,tblptrh
 15336  0181C4                     	if	0	;tblptru may be non-zero
 15337  0181C4                     	endif
 15338  0181C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15339  0181C4  0E00               	movlw	low (__mediumconst shr (0+16))
 15340  0181C6  6EF8               	movwf	tblptru,c
 15341  0181C8                     	endif
 15342  0181C8  0008               	tblrd		*
 15343  0181CA  006F FFD4  F00C    	movff	tablat,btemp+11
 15344                           
 15345                           ;stkvar	_l @ sp[(-4)+2]
 15346  0181D0  0EFE               	movlw	-2
 15347  0181D2  006F FF8F FFF6     	movff	plusw1,tblptrl
 15348  0181D8  0EFF               	movlw	-1
 15349  0181DA  006F FF8F FFF7     	movff	plusw1,tblptrh
 15350  0181E0  0E00               	movlw	low (__mediumconst shr (0+16))
 15351  0181E2  6EF8               	movwf	tblptru,c
 15352  0181E4  0E1F               	movlw	(high __ramtop+-1)
 15353  0181E6  64F7               	cpfsgt	tblptrh,c
 15354  0181E8  D003               	bra	u8637
 15355  0181EA  0008               	tblrd		*
 15356  0181EC  50F5               	movf	tablat,w,c
 15357  0181EE  D007               	bra	u8635
 15358  0181F0                     u8637:
 15359  0181F0  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15360  0181F6  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15361  0181FC  50EF               	movf	indf0,w,c
 15362  0181FE                     u8635:
 15363  0181FE  180C               	xorwf	(btemp+11)^0,w,c
 15364  018200  B4D8               	btfsc	status,2,c
 15365  018202  D766               	goto	l9366
 15366  018204                     u8630:
 15367                           
 15368                           ;stkvar	_l @ sp[(-4)+2]
 15369  018204  0EFE               	movlw	-2
 15370  018206  006F FF8F FFF6     	movff	plusw1,tblptrl
 15371  01820C  0EFF               	movlw	-1
 15372  01820E  006F FF8F FFF7     	movff	plusw1,tblptrh
 15373  018214  0E00               	movlw	low (__mediumconst shr (0+16))
 15374  018216  6EF8               	movwf	tblptru,c
 15375  018218  0E1F               	movlw	(high __ramtop+-1)
 15376  01821A  64F7               	cpfsgt	tblptrh,c
 15377  01821C  D003               	bra	u8647
 15378  01821E  0008               	tblrd		*
 15379  018220  50F5               	movf	tablat,w,c
 15380  018222  D007               	bra	u8640
 15381  018224                     u8647:
 15382  018224  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15383  01822A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15384  018230  50EF               	movf	indf0,w,c
 15385  018232                     u8640:
 15386  018232  6E01               	movwf	btemp^0,c
 15387  018234  6A02               	clrf	(btemp+1)^0,c
 15388                           
 15389                           ;stkvar	_r @ sp[(-4)+0]
 15390  018236  50E1               	movf	fsr1l,w,c
 15391  018238  0FFC               	addlw	-4
 15392  01823A  6ED9               	movwf	fsr2l,c
 15393  01823C  50E2               	movf	fsr1h,w,c
 15394  01823E  6EDA               	movwf	fsr2h,c
 15395  018240  0EFF               	movlw	255
 15396  018242  22DA               	addwfc	fsr2h,f,c
 15397  018244  006F FF7B FFF6     	movff	postinc2,tblptrl
 15398  01824A  006F FF77 FFF7     	movff	postdec2,tblptrh
 15399  018250                     	if	0	;tblptru may be non-zero
 15400  018250                     	endif
 15401  018250                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15402  018250  0E00               	movlw	low (__mediumconst shr (0+16))
 15403  018252  6EF8               	movwf	tblptru,c
 15404  018254                     	endif
 15405  018254  0008               	tblrd		*
 15406  018256  50F5               	movf	tablat,w,c
 15407  018258  5E01               	subwf	btemp^0,f,c
 15408  01825A  0E00               	movlw	0
 15409  01825C  5A02               	subwfb	(btemp+1)^0,f,c
 15410  01825E                     l3451:
 15411                           
 15412                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 15413  01825E  0EF6               	movlw	246
 15414  018260  26E1               	addwf	fsr1l,f,c
 15415  018262  0EFF               	movlw	255
 15416  018264  22E2               	addwfc	fsr1h,f,c
 15417  018266  0012               	return		;funcret
 15418  018268                     __end_of_strncmp:
 15419                           	opt callstack 0
 15420                           
 15421 ;; *************** function _stoa *****************
 15422 ;; Defined at:
 15423 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15424 ;; Parameters:    Size  Location     Type
 15425 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15426 ;;		 -> f(6), NULL(0), 
 15427 ;;  s               2  [STACK] PTR unsigned char 
 15428 ;;		 -> ?_printf(2), ?_sprintf(2), STR_46(9), STR_45(12), 
 15429 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 15430 ;;		 -> V(191), 
 15431 ;; Auto vars:     Size  Location     Type
 15432 ;;  nuls            7  [STACK] unsigned char [7]
 15433 ;;  l               2  [STACK] int 
 15434 ;;  p               2  [STACK] int 
 15435 ;;  cp              2  [STACK] PTR unsigned char 
 15436 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_46(9), 
 15437 ;;		 -> STR_45(12), D.lcd(480), D(482), T(144), 
 15438 ;;		 -> STR_3(5), V(191), 
 15439 ;;  w               2  [STACK] int 
 15440 ;;  i               2  [STACK] int 
 15441 ;; Return value:  Size  Location     Type
 15442 ;;                  2  [STACK] int 
 15443 ;; Registers used:
 15444 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 15445 ;; Tracked objects:
 15446 ;;		On entry : 0/0
 15447 ;;		On exit  : 0/0
 15448 ;;		Unchanged: 0/0
 15449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15454 ;;Total ram usage:        0 bytes
 15455 ;; Hardware stack levels used:    1
 15456 ;; Hardware stack levels required when called:   18
 15457 ;; This function calls:
 15458 ;;		_fputc
 15459 ;;		_strlen
 15460 ;; This function is called by:
 15461 ;;		_vfpfcnvrt
 15462 ;; This function uses a reentrant model
 15463 ;;
 15464                           
 15465                           	psect	text56
 15466  017410                     __ptext56:
 15467                           	opt callstack 0
 15468  017410                     _stoa:
 15469                           	opt callstack 0
 15470                           
 15471                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15472  017410  0E11               	movlw	17
 15473  017412  26E1               	addwf	fsr1l,f,c
 15474  017414  0E00               	movlw	0
 15475  017416  22E2               	addwfc	fsr1h,f,c
 15476                           
 15477                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 15478                           
 15479                           ;incstack = 0
 15480 ;; hardware stack exceeded
 15481  017418  EE20  F0F0         	lfsr	2,stoa@F1166
 15482                           
 15483                           ;stkvar	_nuls @ sp[(-17)+0]
 15484  01741C  0E07               	movlw	7
 15485  01741E  6E01               	movwf	btemp^0,c
 15486  017420  0EEF               	movlw	-17
 15487  017422                     us1157999:
 15488  017422  006F FF7B FFE3     	movff	postinc2,plusw1
 15489  017428  28E8               	incf	wreg,w,c
 15490  01742A  2E01               	decfsz	btemp^0,f,c
 15491  01742C  D7FA               	bra	us1157999
 15492                           
 15493                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 15494                           ;stkvar	_s @ sp[(-17)+-4]
 15495  01742E  0EEB               	movlw	-21
 15496  017430  006F FF8C  F00B    	movff	plusw1,btemp+10
 15497  017436  0EEC               	movlw	-20
 15498  017438  006F FF8C  F00C    	movff	plusw1,btemp+11
 15499                           
 15500                           ;stkvar	_cp @ sp[(-17)+11]
 15501  01743E  0EFB               	movlw	-5
 15502  017440  0060  F033  FFE3   	movff	btemp+11,plusw1
 15503  017446  0EFA               	movlw	-6
 15504  017448  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15505                           
 15506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 15507                           ;stkvar	_cp @ sp[(-17)+11]
 15508  01744E  0EFA               	movlw	-6
 15509  017450  006F FF8C  F001    	movff	plusw1,btemp
 15510  017456  0EFB               	movlw	-5
 15511  017458  50E3               	movf	plusw1,w,c
 15512  01745A  1001               	iorwf	btemp^0,w,c
 15513  01745C  A4D8               	btfss	status,2,c
 15514  01745E  D00E               	goto	l12304
 15515                           
 15516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 15517                           ;stkvar	_nuls @ sp[(-17)+0]
 15518  017460  0EEF               	movlw	239
 15519  017462  24E1               	addwf	fsr1l,w,c
 15520  017464  6E0B               	movwf	(btemp+10)^0,c
 15521  017466  0EFF               	movlw	255
 15522  017468  20E2               	addwfc	fsr1h,w,c
 15523  01746A  6E0C               	movwf	(btemp+11)^0,c
 15524                           
 15525                           ;stkvar	_cp @ sp[(-17)+11]
 15526  01746C  0EFB               	movlw	-5
 15527  01746E  0060  F033  FFE3   	movff	btemp+11,plusw1
 15528  017474  0EFA               	movlw	-6
 15529  017476  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15530  01747C                     l12304:
 15531                           
 15532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 15533                           ;stkvar	_cp @ sp[(-17)+11]
 15534  01747C  0EFA               	movlw	-6
 15535  01747E  006F FF8F FFE6     	movff	plusw1,postinc1
 15536  017484  006F FF8F FFE6     	movff	plusw1,postinc1
 15537  01748A  ECA0  F0D4         	call	_strlen	;wreg free
 15538                           
 15539                           ;stkvar	_l @ sp[(-17)+7]
 15540  01748E  0EF6               	movlw	-10
 15541  017490  0060  F007  FFE3   	movff	btemp,plusw1
 15542  017496  0EF7               	movlw	-9
 15543  017498  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15544                           
 15545                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 15546                           ;stkvar	_p @ sp[(-17)+9]
 15547  01749E  0EF8               	movlw	-8
 15548  0174A0  0060  F0F3  FFE3   	movff	_prec,plusw1
 15549  0174A6  0EF9               	movlw	-7
 15550  0174A8  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 15551                           
 15552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 15553                           ;stkvar	_p @ sp[(-17)+9]
 15554  0174AE  0EF9               	movlw	-7
 15555  0174B0  BEE3               	btfsc	plusw1,7,c
 15556  0174B2  D023               	goto	l2276
 15557                           
 15558                           ;stkvar	_l @ sp[(-17)+7]
 15559                           ;stkvar	_p @ sp[(-17)+9]
 15560  0174B4  50E1               	movf	fsr1l,w,c
 15561  0174B6  0FF8               	addlw	-8
 15562  0174B8  6ED9               	movwf	fsr2l,c
 15563  0174BA  50E2               	movf	fsr1h,w,c
 15564  0174BC  6EDA               	movwf	fsr2h,c
 15565  0174BE  0EFF               	movlw	255
 15566  0174C0  22DA               	addwfc	fsr2h,f,c
 15567  0174C2  0EF6               	movlw	-10
 15568  0174C4  50E3               	movf	plusw1,w,c
 15569  0174C6  5CDE               	subwf	postinc2,w,c
 15570  0174C8  50DE               	movf	postinc2,w,c
 15571  0174CA  0A80               	xorlw	128
 15572  0174CC  6E01               	movwf	btemp^0,c
 15573  0174CE  0EF7               	movlw	-9
 15574  0174D0  50E3               	movf	plusw1,w,c
 15575  0174D2  0A80               	xorlw	128
 15576  0174D4  5801               	subwfb	btemp^0,w,c
 15577  0174D6  B0D8               	btfsc	status,0,c
 15578  0174D8  D010               	goto	l2276
 15579                           
 15580                           ;stkvar	_p @ sp[(-17)+9]
 15581                           ;stkvar	_l @ sp[(-17)+7]
 15582  0174DA  0EF8               	movlw	-8
 15583  0174DC  006F FF8C  F001    	movff	plusw1,btemp
 15584  0174E2  0EF6               	movlw	-10
 15585  0174E4  0060  F007  FFE3   	movff	btemp,plusw1
 15586  0174EA  0EF9               	movlw	-7
 15587  0174EC  006F FF8C  F001    	movff	plusw1,btemp
 15588  0174F2  0EF7               	movlw	-9
 15589  0174F4  0060  F007  FFE3   	movff	btemp,plusw1
 15590  0174FA                     l2276:
 15591                           
 15592                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 15593                           ;stkvar	_l @ sp[(-17)+7]
 15594                           ;stkvar	_p @ sp[(-17)+9]
 15595  0174FA  0EF6               	movlw	-10
 15596  0174FC  006F FF8C  F001    	movff	plusw1,btemp
 15597  017502  0EF8               	movlw	-8
 15598  017504  0060  F007  FFE3   	movff	btemp,plusw1
 15599  01750A  0EF7               	movlw	-9
 15600  01750C  006F FF8C  F001    	movff	plusw1,btemp
 15601  017512  0EF9               	movlw	-7
 15602  017514  0060  F007  FFE3   	movff	btemp,plusw1
 15603                           
 15604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 15605                           ;stkvar	_w @ sp[(-17)+13]
 15606  01751A  0EFC               	movlw	-4
 15607  01751C  0060  F0EB  FFE3   	movff	_width,plusw1
 15608  017522  0EFD               	movlw	-3
 15609  017524  0060  F0EF  FFE3   	movff	_width+1,plusw1
 15610                           
 15611                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 15612  01752A  A03E               	btfss	_flags^0,0,c
 15613  01752C  D01F               	goto	l12324
 15614  01752E  D031               	goto	u11620
 15615  017530                     l12320:
 15616                           
 15617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 15618                           ;stkvar	_fp @ sp[(-17)+-2]
 15619  017530  0EED               	movlw	-19
 15620  017532  006F FF8F FFE6     	movff	plusw1,postinc1
 15621  017538  006F FF8F FFE6     	movff	plusw1,postinc1
 15622  01753E  0E20               	movlw	32
 15623  017540  6EE6               	movwf	postinc1,c
 15624  017542  0E00               	movlw	0
 15625  017544  6EE6               	movwf	postinc1,c
 15626  017546  ECD0  F0CB         	call	_fputc	;wreg free
 15627                           
 15628                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 15629                           ;stkvar	_l @ sp[(-17)+7]
 15630  01754A  0EF6               	movlw	-10
 15631  01754C  50E3               	movf	plusw1,w,c
 15632  01754E  0F01               	addlw	1
 15633  017550  6E01               	movwf	btemp^0,c
 15634  017552  0EF6               	movlw	-10
 15635  017554  0060  F007  FFE3   	movff	btemp,plusw1
 15636  01755A  6A01               	clrf	btemp^0,c
 15637  01755C  0EF7               	movlw	-9
 15638  01755E  50E3               	movf	plusw1,w,c
 15639  017560  2001               	addwfc	btemp^0,w,c
 15640  017562  6E01               	movwf	btemp^0,c
 15641  017564  0EF7               	movlw	-9
 15642  017566  0060  F007  FFE3   	movff	btemp,plusw1
 15643  01756C                     l12324:
 15644                           
 15645                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 15646                           ;stkvar	_w @ sp[(-17)+13]
 15647                           ;stkvar	_l @ sp[(-17)+7]
 15648  01756C  50E1               	movf	fsr1l,w,c
 15649  01756E  0FF6               	addlw	-10
 15650  017570  6ED9               	movwf	fsr2l,c
 15651  017572  50E2               	movf	fsr1h,w,c
 15652  017574  6EDA               	movwf	fsr2h,c
 15653  017576  0EFF               	movlw	255
 15654  017578  22DA               	addwfc	fsr2h,f,c
 15655  01757A  0EFC               	movlw	-4
 15656  01757C  50E3               	movf	plusw1,w,c
 15657  01757E  5CDE               	subwf	postinc2,w,c
 15658  017580  50DE               	movf	postinc2,w,c
 15659  017582  0A80               	xorlw	128
 15660  017584  6E01               	movwf	btemp^0,c
 15661  017586  0EFD               	movlw	-3
 15662  017588  50E3               	movf	plusw1,w,c
 15663  01758A  0A80               	xorlw	128
 15664  01758C  5801               	subwfb	btemp^0,w,c
 15665  01758E  A0D8               	btfss	status,0,c
 15666  017590  D7CF               	goto	l12320
 15667  017592                     u11620:
 15668                           
 15669                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 15670                           ;stkvar	_i @ sp[(-17)+15]
 15671  017592  0EFE               	movlw	-2
 15672  017594  6AE3               	clrf	plusw1,c
 15673  017596  0EFF               	movlw	-1
 15674  017598  6AE3               	clrf	plusw1,c
 15675                           
 15676                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15677  01759A  D045               	goto	l12334
 15678  01759C                     l12328:
 15679                           
 15680                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 15681                           ;stkvar	_fp @ sp[(-17)+-2]
 15682  01759C  0EED               	movlw	-19
 15683  01759E  006F FF8F FFE6     	movff	plusw1,postinc1
 15684  0175A4  006F FF8F FFE6     	movff	plusw1,postinc1
 15685                           
 15686                           ;stkvar	_cp @ sp[(-19)+11]
 15687  0175AA  0EF8               	movlw	-8
 15688  0175AC  006F FF8F FFF6     	movff	plusw1,tblptrl
 15689  0175B2  0EF9               	movlw	-7
 15690  0175B4  006F FF8F FFF7     	movff	plusw1,tblptrh
 15691  0175BA  0E00               	movlw	low (__mediumconst shr (0+16))
 15692  0175BC  6EF8               	movwf	tblptru,c
 15693  0175BE  0E1F               	movlw	(high __ramtop+-1)
 15694  0175C0  64F7               	cpfsgt	tblptrh,c
 15695  0175C2  D003               	bra	u11637
 15696  0175C4  0008               	tblrd		*
 15697  0175C6  50F5               	movf	tablat,w,c
 15698  0175C8  D007               	bra	u11630
 15699  0175CA                     u11637:
 15700  0175CA  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15701  0175D0  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15702  0175D6  50EF               	movf	indf0,w,c
 15703  0175D8                     u11630:
 15704  0175D8  6EE6               	movwf	postinc1,c
 15705  0175DA  0E00               	movlw	0
 15706  0175DC  6EE6               	movwf	postinc1,c
 15707  0175DE  ECD0  F0CB         	call	_fputc	;wreg free
 15708                           
 15709                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 15710                           ;stkvar	_cp @ sp[(-17)+11]
 15711  0175E2  0EFA               	movlw	-6
 15712  0175E4  50E3               	movf	plusw1,w,c
 15713  0175E6  0F01               	addlw	1
 15714  0175E8  6E01               	movwf	btemp^0,c
 15715  0175EA  0EFA               	movlw	-6
 15716  0175EC  0060  F007  FFE3   	movff	btemp,plusw1
 15717  0175F2  6A01               	clrf	btemp^0,c
 15718  0175F4  0EFB               	movlw	-5
 15719  0175F6  50E3               	movf	plusw1,w,c
 15720  0175F8  2001               	addwfc	btemp^0,w,c
 15721  0175FA  6E01               	movwf	btemp^0,c
 15722  0175FC  0EFB               	movlw	-5
 15723  0175FE  0060  F007  FFE3   	movff	btemp,plusw1
 15724                           
 15725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 15726                           ;stkvar	_i @ sp[(-17)+15]
 15727  017604  0EFE               	movlw	-2
 15728  017606  50E3               	movf	plusw1,w,c
 15729  017608  0F01               	addlw	1
 15730  01760A  6E01               	movwf	btemp^0,c
 15731  01760C  0EFE               	movlw	-2
 15732  01760E  0060  F007  FFE3   	movff	btemp,plusw1
 15733  017614  6A01               	clrf	btemp^0,c
 15734  017616  0EFF               	movlw	-1
 15735  017618  50E3               	movf	plusw1,w,c
 15736  01761A  2001               	addwfc	btemp^0,w,c
 15737  01761C  6E01               	movwf	btemp^0,c
 15738  01761E  0EFF               	movlw	-1
 15739  017620  0060  F007  FFE3   	movff	btemp,plusw1
 15740  017626                     l12334:
 15741                           
 15742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15743                           ;stkvar	_p @ sp[(-17)+9]
 15744                           ;stkvar	_i @ sp[(-17)+15]
 15745  017626  50E1               	movf	fsr1l,w,c
 15746  017628  0FFE               	addlw	-2
 15747  01762A  6ED9               	movwf	fsr2l,c
 15748  01762C  50E2               	movf	fsr1h,w,c
 15749  01762E  6EDA               	movwf	fsr2h,c
 15750  017630  0EFF               	movlw	255
 15751  017632  22DA               	addwfc	fsr2h,f,c
 15752  017634  0EF8               	movlw	-8
 15753  017636  50E3               	movf	plusw1,w,c
 15754  017638  5CDE               	subwf	postinc2,w,c
 15755  01763A  50DE               	movf	postinc2,w,c
 15756  01763C  0A80               	xorlw	128
 15757  01763E  6E01               	movwf	btemp^0,c
 15758  017640  0EF9               	movlw	-7
 15759  017642  50E3               	movf	plusw1,w,c
 15760  017644  0A80               	xorlw	128
 15761  017646  5801               	subwfb	btemp^0,w,c
 15762  017648  A0D8               	btfss	status,0,c
 15763  01764A  D7A8               	goto	l12328
 15764                           
 15765                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 15766  01764C  B03E               	btfsc	_flags^0,0,c
 15767  01764E  D01F               	goto	l12342
 15768  017650  D031               	goto	u11660
 15769  017652                     l12338:
 15770                           
 15771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 15772                           ;stkvar	_fp @ sp[(-17)+-2]
 15773  017652  0EED               	movlw	-19
 15774  017654  006F FF8F FFE6     	movff	plusw1,postinc1
 15775  01765A  006F FF8F FFE6     	movff	plusw1,postinc1
 15776  017660  0E20               	movlw	32
 15777  017662  6EE6               	movwf	postinc1,c
 15778  017664  0E00               	movlw	0
 15779  017666  6EE6               	movwf	postinc1,c
 15780  017668  ECD0  F0CB         	call	_fputc	;wreg free
 15781                           
 15782                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 15783                           ;stkvar	_l @ sp[(-17)+7]
 15784  01766C  0EF6               	movlw	-10
 15785  01766E  50E3               	movf	plusw1,w,c
 15786  017670  0F01               	addlw	1
 15787  017672  6E01               	movwf	btemp^0,c
 15788  017674  0EF6               	movlw	-10
 15789  017676  0060  F007  FFE3   	movff	btemp,plusw1
 15790  01767C  6A01               	clrf	btemp^0,c
 15791  01767E  0EF7               	movlw	-9
 15792  017680  50E3               	movf	plusw1,w,c
 15793  017682  2001               	addwfc	btemp^0,w,c
 15794  017684  6E01               	movwf	btemp^0,c
 15795  017686  0EF7               	movlw	-9
 15796  017688  0060  F007  FFE3   	movff	btemp,plusw1
 15797  01768E                     l12342:
 15798                           
 15799                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 15800                           ;stkvar	_w @ sp[(-17)+13]
 15801                           ;stkvar	_l @ sp[(-17)+7]
 15802  01768E  50E1               	movf	fsr1l,w,c
 15803  017690  0FF6               	addlw	-10
 15804  017692  6ED9               	movwf	fsr2l,c
 15805  017694  50E2               	movf	fsr1h,w,c
 15806  017696  6EDA               	movwf	fsr2h,c
 15807  017698  0EFF               	movlw	255
 15808  01769A  22DA               	addwfc	fsr2h,f,c
 15809  01769C  0EFC               	movlw	-4
 15810  01769E  50E3               	movf	plusw1,w,c
 15811  0176A0  5CDE               	subwf	postinc2,w,c
 15812  0176A2  50DE               	movf	postinc2,w,c
 15813  0176A4  0A80               	xorlw	128
 15814  0176A6  6E01               	movwf	btemp^0,c
 15815  0176A8  0EFD               	movlw	-3
 15816  0176AA  50E3               	movf	plusw1,w,c
 15817  0176AC  0A80               	xorlw	128
 15818  0176AE  5801               	subwfb	btemp^0,w,c
 15819  0176B0  A0D8               	btfss	status,0,c
 15820  0176B2  D7CF               	goto	l12338
 15821  0176B4                     u11660:
 15822                           
 15823                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 15824                           ;stkvar	_l @ sp[(-17)+7]
 15825  0176B4  0EF6               	movlw	-10
 15826  0176B6  006F FF8C  F001    	movff	plusw1,btemp
 15827  0176BC  0EF7               	movlw	-9
 15828  0176BE  006F FF8C  F002    	movff	plusw1,btemp+1
 15829                           
 15830                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 15831  0176C4  0EEB               	movlw	235
 15832  0176C6  26E1               	addwf	fsr1l,f,c
 15833  0176C8  0EFF               	movlw	255
 15834  0176CA  22E2               	addwfc	fsr1h,f,c
 15835  0176CC  0012               	return		;funcret
 15836  0176CE                     __end_of_stoa:
 15837                           	opt callstack 0
 15838                           
 15839 ;; *************** function _efgtoa *****************
 15840 ;; Defined at:
 15841 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15842 ;; Parameters:    Size  Location     Type
 15843 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15844 ;;		 -> f(6), NULL(0), 
 15845 ;;  f               4  [STACK] PTR struct _IO_FILE
 15846 ;;  c               1  [STACK] unsigned char 
 15847 ;; Auto vars:     Size  Location     Type
 15848 ;;  u               4  [STACK] unsigned char 
 15849 ;;  g               4  [STACK] unsigned char 
 15850 ;;  l               4  [STACK] unsigned char 
 15851 ;;  h               4  [STACK] unsigned char 
 15852 ;;  ou              4  [STACK] unsigned char 
 15853 ;;  n               2  [STACK] int 
 15854 ;;  e               2  [STACK] int 
 15855 ;;  i               2  [STACK] int 
 15856 ;;  w               2  [STACK] int 
 15857 ;;  p               2  [STACK] int 
 15858 ;;  sign            2  [STACK] int 
 15859 ;;  d               2  [STACK] int 
 15860 ;;  ne              2  [STACK] int 
 15861 ;;  m               2  [STACK] int 
 15862 ;;  pp              2  [STACK] int 
 15863 ;;  t               2  [STACK] int 
 15864 ;;  mode            1  [STACK] unsigned char 
 15865 ;;  nmode           1  [STACK] unsigned char 
 15866 ;; Return value:  Size  Location     Type
 15867 ;;                  2  [STACK] int 
 15868 ;; Registers used:
 15869 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15870 ;; Tracked objects:
 15871 ;;		On entry : 0/0
 15872 ;;		On exit  : 0/0
 15873 ;;		Unchanged: 0/0
 15874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15879 ;;Total ram usage:        0 bytes
 15880 ;; Hardware stack levels used:    1
 15881 ;; Hardware stack levels required when called:   20
 15882 ;; This function calls:
 15883 ;;		___awdiv
 15884 ;;		___awmod
 15885 ;;		___fladd
 15886 ;;		___fldiv
 15887 ;;		___fleq
 15888 ;;		___flge
 15889 ;;		___flmul
 15890 ;;		___flneg
 15891 ;;		___flsub
 15892 ;;		___fltol
 15893 ;;		___fpclassifyf
 15894 ;;		_floorf
 15895 ;;		_isupper
 15896 ;;		_pad
 15897 ;;		_strcpy
 15898 ;;		_tolower
 15899 ;; This function is called by:
 15900 ;;		_vfpfcnvrt
 15901 ;; This function uses a reentrant model
 15902 ;;
 15903                           
 15904                           	psect	text57
 15905  010000                     __ptext57:
 15906                           	opt callstack 0
 15907  010000                     _efgtoa:
 15908                           	opt callstack 0
 15909                           
 15910                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15911  010000  0E38               	movlw	56
 15912  010002  26E1               	addwf	fsr1l,f,c
 15913  010004  0E00               	movlw	0
 15914  010006  22E2               	addwfc	fsr1h,f,c
 15915                           
 15916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 15917                           ;stkvar	_sign @ sp[(-56)+42]
 15918                           
 15919                           ;incstack = 0
 15920 ;; hardware stack exceeded
 15921  010008  0EF2               	movlw	-14
 15922  01000A  6AE3               	clrf	plusw1,c
 15923  01000C  0EF3               	movlw	-13
 15924  01000E  6AE3               	clrf	plusw1,c
 15925                           
 15926                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 15927                           ;stkvar	_f @ sp[(-56)+-6]
 15928  010010  0EC2               	movlw	-62
 15929  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 15930  010018  0EC3               	movlw	-61
 15931  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 15932  010020  0EC4               	movlw	-60
 15933  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 15934  010028  0EC5               	movlw	-59
 15935  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 15936                           
 15937                           ;stkvar	_g @ sp[(-56)+16]
 15938  010030  0ED8               	movlw	-40
 15939  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 15940  010038  0ED9               	movlw	-39
 15941  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15942  010040  0EDA               	movlw	-38
 15943  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15944  010048  0EDB               	movlw	-37
 15945  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 15946                           
 15947                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 15948                           ;stkvar	_g @ sp[(-56)+16]
 15949  010050  0EDB               	movlw	-37
 15950  010052  AEE3               	btfss	plusw1,7,c
 15951  010054  D02B               	goto	l12002
 15952                           
 15953                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 15954  010056  0E01               	movlw	1
 15955  010058  6E0B               	movwf	(btemp+10)^0,c
 15956  01005A  0E00               	movlw	0
 15957  01005C  6E0C               	movwf	(btemp+11)^0,c
 15958                           
 15959                           ;stkvar	_sign @ sp[(-56)+42]
 15960  01005E  0EF2               	movlw	-14
 15961  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15962  010066  0EF3               	movlw	-13
 15963  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 15964                           
 15965                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 15966                           ;stkvar	_g @ sp[(-56)+16]
 15967  01006E  0ED8               	movlw	-40
 15968  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 15969  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 15970  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 15971  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 15972  010088  EC3C  F0DA         	call	___flneg	;wreg free
 15973                           
 15974                           ;stkvar	_g @ sp[(-56)+16]
 15975  01008C  0ED8               	movlw	-40
 15976  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 15977  010094  0ED9               	movlw	-39
 15978  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15979  01009C  0EDA               	movlw	-38
 15980  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15981  0100A4  0EDB               	movlw	-37
 15982  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 15983  0100AC                     l12002:
 15984                           
 15985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 15986                           ;stkvar	_n @ sp[(-56)+32]
 15987  0100AC  0EE8               	movlw	-24
 15988  0100AE  6AE3               	clrf	plusw1,c
 15989  0100B0  0EE9               	movlw	-23
 15990  0100B2  6AE3               	clrf	plusw1,c
 15991                           
 15992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 15993                           ;stkvar	_w @ sp[(-56)+38]
 15994  0100B4  0EEE               	movlw	-18
 15995  0100B6  0060  F0EB  FFE3   	movff	_width,plusw1
 15996  0100BC  0EEF               	movlw	-17
 15997  0100BE  0060  F0EF  FFE3   	movff	_width+1,plusw1
 15998                           
 15999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 16000                           ;stkvar	_sign @ sp[(-56)+42]
 16001  0100C4  0EF2               	movlw	-14
 16002  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 16003  0100CC  0EF3               	movlw	-13
 16004  0100CE  50E3               	movf	plusw1,w,c
 16005  0100D0  1001               	iorwf	btemp^0,w,c
 16006  0100D2  A4D8               	btfss	status,2,c
 16007  0100D4  D002               	goto	u11070
 16008  0100D6  A43E               	btfss	_flags^0,2,c
 16009  0100D8  D036               	goto	l12022
 16010  0100DA                     u11070:
 16011                           
 16012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 16013                           ;stkvar	_sign @ sp[(-56)+42]
 16014  0100DA  0EF2               	movlw	-14
 16015  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 16016  0100E2  0EF3               	movlw	-13
 16017  0100E4  50E3               	movf	plusw1,w,c
 16018  0100E6  1001               	iorwf	btemp^0,w,c
 16019  0100E8  A4D8               	btfss	status,2,c
 16020  0100EA  D002               	goto	l12014
 16021  0100EC  0E2B               	movlw	43
 16022  0100EE  D001               	goto	L16
 16023  0100F0                     l12014:
 16024  0100F0  0E2D               	movlw	45
 16025  0100F2                     L16:
 16026  0100F2  6E0B               	movwf	(btemp+10)^0,c
 16027  0100F4  0E00               	movlw	0
 16028  0100F6  6E0C               	movwf	(btemp+11)^0,c
 16029                           
 16030                           ;stkvar	_efgtoa$5517 @ sp[(-56)+10]
 16031  0100F8  0ED2               	movlw	-46
 16032  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16033  010100  0ED3               	movlw	-45
 16034  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 16035                           
 16036                           ;stkvar	_efgtoa$5517 @ sp[(-56)+10]
 16037  010108  0ED2               	movlw	-46
 16038  01010A  006F FF8C  F297    	movff	plusw1,_dbuf
 16039                           
 16040                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 16041                           ;stkvar	_n @ sp[(-56)+32]
 16042  010110  0EE8               	movlw	-24
 16043  010112  50E3               	movf	plusw1,w,c
 16044  010114  0F01               	addlw	1
 16045  010116  6E01               	movwf	btemp^0,c
 16046  010118  0EE8               	movlw	-24
 16047  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 16048  010120  6A01               	clrf	btemp^0,c
 16049  010122  0EE9               	movlw	-23
 16050  010124  50E3               	movf	plusw1,w,c
 16051  010126  2001               	addwfc	btemp^0,w,c
 16052  010128  6E01               	movwf	btemp^0,c
 16053  01012A  0EE9               	movlw	-23
 16054  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 16055                           
 16056                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 16057                           ;stkvar	_w @ sp[(-56)+38]
 16058  010132  50E1               	movf	fsr1l,w,c
 16059  010134  0FEE               	addlw	-18
 16060  010136  6ED9               	movwf	fsr2l,c
 16061  010138  50E2               	movf	fsr1h,w,c
 16062  01013A  6EDA               	movwf	fsr2h,c
 16063  01013C  0EFF               	movlw	255
 16064  01013E  22DA               	addwfc	fsr2h,f,c
 16065  010140  06DE               	decf	postinc2,f,c
 16066  010142  0E00               	movlw	0
 16067  010144  5ADD               	subwfb	postdec2,f,c
 16068  010146                     l12022:
 16069                           
 16070                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 16071                           ;stkvar	_g @ sp[(-56)+16]
 16072  010146  0ED8               	movlw	-40
 16073  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 16074  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 16075  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 16076  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 16077  010160  ECED  F0C4         	call	___fpclassifyf	;wreg free
 16078  010164  0401               	decf	btemp^0,w,c
 16079  010166  1002               	iorwf	(btemp+1)^0,w,c
 16080  010168  A4D8               	btfss	status,2,c
 16081  01016A  D076               	goto	l12040
 16082  01016C  0EBF               	movlw	191
 16083  01016E  6E0B               	movwf	(btemp+10)^0,c
 16084  010170  0EFF               	movlw	255
 16085  010172  6E0C               	movwf	(btemp+11)^0,c
 16086                           
 16087                           ;stkvar	_c @ sp[(-56)+-7]
 16088  010174  0EC1               	movlw	-63
 16089  010176  50E3               	movf	plusw1,w,c
 16090  010178  6E09               	movwf	(btemp+8)^0,c
 16091  01017A  6A0A               	clrf	(btemp+9)^0,c
 16092  01017C  500B               	movf	(btemp+10)^0,w,c
 16093  01017E  2609               	addwf	(btemp+8)^0,f,c
 16094  010180  500C               	movf	(btemp+11)^0,w,c
 16095  010182  220A               	addwfc	(btemp+9)^0,f,c
 16096  010184  500A               	movf	(btemp+9)^0,w,c
 16097  010186  E106               	bnz	u11100
 16098  010188  0E1A               	movlw	26
 16099  01018A  5C09               	subwf	(btemp+8)^0,w,c
 16100  01018C  B0D8               	btfsc	status,0,c
 16101  01018E  D002               	goto	u11100
 16102  010190  0E01               	movlw	1
 16103  010192  D001               	goto	u11110
 16104  010194                     u11100:
 16105  010194  0E00               	movlw	0
 16106  010196                     u11110:
 16107  010196  6E0B               	movwf	(btemp+10)^0,c
 16108  010198  6A0C               	clrf	(btemp+11)^0,c
 16109                           
 16110                           ;stkvar	_efgtoa$5518 @ sp[(-56)+8]
 16111  01019A  0ED0               	movlw	-48
 16112  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16113  0101A2  0ED1               	movlw	-47
 16114  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 16115                           
 16116                           ;stkvar	_efgtoa$5518 @ sp[(-56)+8]
 16117  0101AA  0ED0               	movlw	-48
 16118  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 16119  0101B2  0ED1               	movlw	-47
 16120  0101B4  50E3               	movf	plusw1,w,c
 16121  0101B6  1001               	iorwf	btemp^0,w,c
 16122  0101B8  B4D8               	btfsc	status,2,c
 16123  0101BA  D017               	goto	l12032
 16124                           
 16125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 16126  0101BC  0ED7               	movlw	low STR_65
 16127  0101BE  6EE6               	movwf	postinc1,c
 16128  0101C0  0EFF               	movlw	high STR_65
 16129  0101C2  6EE6               	movwf	postinc1,c
 16130                           
 16131                           ;stkvar	_n @ sp[(-58)+32]
 16132  0101C4  0E97               	movlw	low _dbuf
 16133  0101C6  6E0B               	movwf	(btemp+10)^0,c
 16134  0101C8  0E02               	movlw	high _dbuf
 16135  0101CA  6E0C               	movwf	(btemp+11)^0,c
 16136  0101CC  0EE6               	movlw	-26
 16137  0101CE  50E3               	movf	plusw1,w,c
 16138  0101D0  260B               	addwf	(btemp+10)^0,f,c
 16139  0101D2  0EE7               	movlw	-25
 16140  0101D4  50E3               	movf	plusw1,w,c
 16141  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 16142  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16143  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 16144  0101E4  ECCF  F0D1         	call	_strcpy	;wreg free
 16145                           
 16146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 16147  0101E8  D016               	goto	l12034
 16148  0101EA                     l12032:
 16149                           
 16150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 16151  0101EA  0EDF               	movlw	low STR_66
 16152  0101EC  6EE6               	movwf	postinc1,c
 16153  0101EE  0EFF               	movlw	high STR_66
 16154  0101F0  6EE6               	movwf	postinc1,c
 16155                           
 16156                           ;stkvar	_n @ sp[(-58)+32]
 16157  0101F2  0E97               	movlw	low _dbuf
 16158  0101F4  6E0B               	movwf	(btemp+10)^0,c
 16159  0101F6  0E02               	movlw	high _dbuf
 16160  0101F8  6E0C               	movwf	(btemp+11)^0,c
 16161  0101FA  0EE6               	movlw	-26
 16162  0101FC  50E3               	movf	plusw1,w,c
 16163  0101FE  260B               	addwf	(btemp+10)^0,f,c
 16164  010200  0EE7               	movlw	-25
 16165  010202  50E3               	movf	plusw1,w,c
 16166  010204  220C               	addwfc	(btemp+11)^0,f,c
 16167  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16168  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 16169  010212  ECCF  F0D1         	call	_strcpy	;wreg free
 16170  010216                     l12034:
 16171                           
 16172                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 16173                           ;stkvar	_w @ sp[(-56)+38]
 16174  010216  50E1               	movf	fsr1l,w,c
 16175  010218  0FEE               	addlw	-18
 16176  01021A  6ED9               	movwf	fsr2l,c
 16177  01021C  50E2               	movf	fsr1h,w,c
 16178  01021E  6EDA               	movwf	fsr2h,c
 16179  010220  0EFF               	movlw	255
 16180  010222  22DA               	addwfc	fsr2h,f,c
 16181  010224  0EFD               	movlw	253
 16182  010226  26DE               	addwf	postinc2,f,c
 16183  010228  0EFF               	movlw	255
 16184  01022A  22DD               	addwfc	postdec2,f,c
 16185  01022C                     l12036:
 16186                           
 16187                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 16188                           ;stkvar	_w @ sp[(-56)+38]
 16189  01022C  0EEE               	movlw	-18
 16190  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 16191  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 16192  01023A  0E97               	movlw	low _dbuf
 16193  01023C  6EE6               	movwf	postinc1,c
 16194  01023E  0E02               	movlw	high _dbuf
 16195  010240  6EE6               	movwf	postinc1,c
 16196                           
 16197                           ;stkvar	_fp @ sp[(-60)+-2]
 16198  010242  0EC2               	movlw	-62
 16199  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 16200  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 16201  010250  EC7B  F0CD         	call	_pad	;wreg free
 16202  010254  EF1D  F089         	goto	l2194
 16203  010258                     l12040:
 16204                           
 16205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 16206                           ;stkvar	_g @ sp[(-56)+16]
 16207  010258  0ED8               	movlw	-40
 16208  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 16209  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 16210  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 16211  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 16212  010272  ECED  F0C4         	call	___fpclassifyf	;wreg free
 16213  010276  5001               	movf	btemp^0,w,c
 16214  010278  1002               	iorwf	(btemp+1)^0,w,c
 16215  01027A  A4D8               	btfss	status,2,c
 16216  01027C  D056               	goto	l12058
 16217  01027E  0EBF               	movlw	191
 16218  010280  6E0B               	movwf	(btemp+10)^0,c
 16219  010282  0EFF               	movlw	255
 16220  010284  6E0C               	movwf	(btemp+11)^0,c
 16221                           
 16222                           ;stkvar	_c @ sp[(-56)+-7]
 16223  010286  0EC1               	movlw	-63
 16224  010288  50E3               	movf	plusw1,w,c
 16225  01028A  6E09               	movwf	(btemp+8)^0,c
 16226  01028C  6A0A               	clrf	(btemp+9)^0,c
 16227  01028E  500B               	movf	(btemp+10)^0,w,c
 16228  010290  2609               	addwf	(btemp+8)^0,f,c
 16229  010292  500C               	movf	(btemp+11)^0,w,c
 16230  010294  220A               	addwfc	(btemp+9)^0,f,c
 16231  010296  500A               	movf	(btemp+9)^0,w,c
 16232  010298  E106               	bnz	u11140
 16233  01029A  0E1A               	movlw	26
 16234  01029C  5C09               	subwf	(btemp+8)^0,w,c
 16235  01029E  B0D8               	btfsc	status,0,c
 16236  0102A0  D002               	goto	u11140
 16237  0102A2  0E01               	movlw	1
 16238  0102A4  D001               	goto	u11150
 16239  0102A6                     u11140:
 16240  0102A6  0E00               	movlw	0
 16241  0102A8                     u11150:
 16242  0102A8  6E0B               	movwf	(btemp+10)^0,c
 16243  0102AA  6A0C               	clrf	(btemp+11)^0,c
 16244                           
 16245                           ;stkvar	_efgtoa$5522 @ sp[(-56)+6]
 16246  0102AC  0ECE               	movlw	-50
 16247  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16248  0102B4  0ECF               	movlw	-49
 16249  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 16250                           
 16251                           ;stkvar	_efgtoa$5522 @ sp[(-56)+6]
 16252  0102BC  0ECE               	movlw	-50
 16253  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 16254  0102C4  0ECF               	movlw	-49
 16255  0102C6  50E3               	movf	plusw1,w,c
 16256  0102C8  1001               	iorwf	btemp^0,w,c
 16257  0102CA  B4D8               	btfsc	status,2,c
 16258  0102CC  D017               	goto	l12050
 16259                           
 16260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 16261  0102CE  0EDB               	movlw	low STR_69
 16262  0102D0  6EE6               	movwf	postinc1,c
 16263  0102D2  0EFF               	movlw	high STR_69
 16264  0102D4  6EE6               	movwf	postinc1,c
 16265                           
 16266                           ;stkvar	_n @ sp[(-58)+32]
 16267  0102D6  0E97               	movlw	low _dbuf
 16268  0102D8  6E0B               	movwf	(btemp+10)^0,c
 16269  0102DA  0E02               	movlw	high _dbuf
 16270  0102DC  6E0C               	movwf	(btemp+11)^0,c
 16271  0102DE  0EE6               	movlw	-26
 16272  0102E0  50E3               	movf	plusw1,w,c
 16273  0102E2  260B               	addwf	(btemp+10)^0,f,c
 16274  0102E4  0EE7               	movlw	-25
 16275  0102E6  50E3               	movf	plusw1,w,c
 16276  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 16277  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16278  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 16279  0102F6  ECCF  F0D1         	call	_strcpy	;wreg free
 16280                           
 16281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 16282  0102FA  D78D               	goto	l12034
 16283  0102FC                     l12050:
 16284                           
 16285                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 16286  0102FC  0EE3               	movlw	low STR_70
 16287  0102FE  6EE6               	movwf	postinc1,c
 16288  010300  0EFF               	movlw	high STR_70
 16289  010302  6EE6               	movwf	postinc1,c
 16290                           
 16291                           ;stkvar	_n @ sp[(-58)+32]
 16292  010304  0E97               	movlw	low _dbuf
 16293  010306  6E0B               	movwf	(btemp+10)^0,c
 16294  010308  0E02               	movlw	high _dbuf
 16295  01030A  6E0C               	movwf	(btemp+11)^0,c
 16296  01030C  0EE6               	movlw	-26
 16297  01030E  50E3               	movf	plusw1,w,c
 16298  010310  260B               	addwf	(btemp+10)^0,f,c
 16299  010312  0EE7               	movlw	-25
 16300  010314  50E3               	movf	plusw1,w,c
 16301  010316  220C               	addwfc	(btemp+11)^0,f,c
 16302  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16303  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 16304  010324  ECCF  F0D1         	call	_strcpy	;wreg free
 16305  010328  D776               	goto	l12034
 16306  01032A                     l12058:
 16307                           
 16308                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 16309  01032A  0E00               	movlw	0
 16310  01032C  6E09               	movwf	(btemp+8)^0,c
 16311  01032E  0E00               	movlw	0
 16312  010330  6E0A               	movwf	(btemp+9)^0,c
 16313  010332  0E80               	movlw	128
 16314  010334  6E0B               	movwf	(btemp+10)^0,c
 16315  010336  0E3F               	movlw	63
 16316  010338  6E0C               	movwf	(btemp+11)^0,c
 16317                           
 16318                           ;stkvar	_u @ sp[(-56)+12]
 16319  01033A  0ED4               	movlw	-44
 16320  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 16321  010342  0ED5               	movlw	-43
 16322  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16323  01034A  0ED6               	movlw	-42
 16324  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16325  010352  0ED7               	movlw	-41
 16326  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 16327                           
 16328                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 16329                           ;stkvar	_e @ sp[(-56)+34]
 16330  01035A  0EEA               	movlw	-22
 16331  01035C  6AE3               	clrf	plusw1,c
 16332  01035E  0EEB               	movlw	-21
 16333  010360  6AE3               	clrf	plusw1,c
 16334                           
 16335                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 16336  010362  0E00               	movlw	0
 16337  010364  6EE6               	movwf	postinc1,c
 16338  010366  0E00               	movlw	0
 16339  010368  6EE6               	movwf	postinc1,c
 16340  01036A  0E00               	movlw	0
 16341  01036C  6EE6               	movwf	postinc1,c
 16342  01036E  0E00               	movlw	0
 16343  010370  6EE6               	movwf	postinc1,c
 16344                           
 16345                           ;stkvar	_g @ sp[(-60)+16]
 16346  010372  0ED4               	movlw	-44
 16347  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 16348  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 16349  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 16350  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 16351  01038C  EC39  F0D2         	call	___fleq	;wreg free
 16352  010390  A001               	btfss	btemp& (0+255),0,c
 16353  010392  D039               	goto	l12070
 16354  010394  D0BC               	goto	u11190
 16355  010396                     l12066:
 16356                           
 16357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 16358  010396  0E00               	movlw	0
 16359  010398  6EE6               	movwf	postinc1,c
 16360  01039A  0E00               	movlw	0
 16361  01039C  6EE6               	movwf	postinc1,c
 16362  01039E  0E20               	movlw	32
 16363  0103A0  6EE6               	movwf	postinc1,c
 16364  0103A2  0E41               	movlw	65
 16365  0103A4  6EE6               	movwf	postinc1,c
 16366                           
 16367                           ;stkvar	_u @ sp[(-60)+12]
 16368  0103A6  0ED0               	movlw	-48
 16369  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16370  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 16371  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 16372  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 16373  0103C0  ECC1  F09E         	call	___flmul	;wreg free
 16374                           
 16375                           ;stkvar	_u @ sp[(-56)+12]
 16376  0103C4  0ED4               	movlw	-44
 16377  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 16378  0103CC  0ED5               	movlw	-43
 16379  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16380  0103D4  0ED6               	movlw	-42
 16381  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16382  0103DC  0ED7               	movlw	-41
 16383  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 16384                           
 16385                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 16386                           ;stkvar	_e @ sp[(-56)+34]
 16387  0103E4  0EEA               	movlw	-22
 16388  0103E6  50E3               	movf	plusw1,w,c
 16389  0103E8  0F01               	addlw	1
 16390  0103EA  6E01               	movwf	btemp^0,c
 16391  0103EC  0EEA               	movlw	-22
 16392  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 16393  0103F4  6A01               	clrf	btemp^0,c
 16394  0103F6  0EEB               	movlw	-21
 16395  0103F8  50E3               	movf	plusw1,w,c
 16396  0103FA  2001               	addwfc	btemp^0,w,c
 16397  0103FC  6E01               	movwf	btemp^0,c
 16398  0103FE  0EEB               	movlw	-21
 16399  010400  0060  F007  FFE3   	movff	btemp,plusw1
 16400  010406                     l12070:
 16401                           
 16402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 16403  010406  0E00               	movlw	0
 16404  010408  6EE6               	movwf	postinc1,c
 16405  01040A  0E00               	movlw	0
 16406  01040C  6EE6               	movwf	postinc1,c
 16407  01040E  0E20               	movlw	32
 16408  010410  6EE6               	movwf	postinc1,c
 16409  010412  0E41               	movlw	65
 16410  010414  6EE6               	movwf	postinc1,c
 16411                           
 16412                           ;stkvar	_u @ sp[(-60)+12]
 16413  010416  0ED0               	movlw	-48
 16414  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 16415  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 16416  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 16417  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 16418  010430  ECC1  F09E         	call	___flmul	;wreg free
 16419  010434  0060  F007  FFE6   	movff	btemp,postinc1
 16420  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16421  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16422  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 16423                           
 16424                           ;stkvar	_g @ sp[(-60)+16]
 16425  01044C  0ED4               	movlw	-44
 16426  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 16427  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 16428  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 16429  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 16430  010466  ECF4  F0C7         	call	___flge	;wreg free
 16431  01046A  A001               	btfss	btemp& (0+255),0,c
 16432  01046C  D032               	goto	l12076
 16433  01046E  D793               	goto	l12066
 16434  010470                     l12072:
 16435                           
 16436                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 16437  010470  0E00               	movlw	0
 16438  010472  6EE6               	movwf	postinc1,c
 16439  010474  0E00               	movlw	0
 16440  010476  6EE6               	movwf	postinc1,c
 16441  010478  0E20               	movlw	32
 16442  01047A  6EE6               	movwf	postinc1,c
 16443  01047C  0E41               	movlw	65
 16444  01047E  6EE6               	movwf	postinc1,c
 16445                           
 16446                           ;stkvar	_u @ sp[(-60)+12]
 16447  010480  0ED0               	movlw	-48
 16448  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 16449  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 16450  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 16451  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 16452  01049A  ECB4  F0A6         	call	___fldiv	;wreg free
 16453                           
 16454                           ;stkvar	_u @ sp[(-56)+12]
 16455  01049E  0ED4               	movlw	-44
 16456  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 16457  0104A6  0ED5               	movlw	-43
 16458  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16459  0104AE  0ED6               	movlw	-42
 16460  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16461  0104B6  0ED7               	movlw	-41
 16462  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 16463                           
 16464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 16465                           ;stkvar	_e @ sp[(-56)+34]
 16466  0104BE  50E1               	movf	fsr1l,w,c
 16467  0104C0  0FEA               	addlw	-22
 16468  0104C2  6ED9               	movwf	fsr2l,c
 16469  0104C4  50E2               	movf	fsr1h,w,c
 16470  0104C6  6EDA               	movwf	fsr2h,c
 16471  0104C8  0EFF               	movlw	255
 16472  0104CA  22DA               	addwfc	fsr2h,f,c
 16473  0104CC  06DE               	decf	postinc2,f,c
 16474  0104CE  0E00               	movlw	0
 16475  0104D0  5ADD               	subwfb	postdec2,f,c
 16476  0104D2                     l12076:
 16477                           
 16478                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 16479                           ;stkvar	_u @ sp[(-56)+12]
 16480  0104D2  0ED4               	movlw	-44
 16481  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16482  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 16483  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 16484  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 16485                           
 16486                           ;stkvar	_g @ sp[(-60)+16]
 16487  0104EC  0ED4               	movlw	-44
 16488  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 16489  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 16490  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 16491  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 16492  010506  ECF4  F0C7         	call	___flge	;wreg free
 16493  01050A  A001               	btfss	btemp& (0+255),0,c
 16494  01050C  D7B1               	goto	l12072
 16495  01050E                     u11190:
 16496                           
 16497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 16498                           ;stkvar	_c @ sp[(-56)+-7]
 16499  01050E  0EC1               	movlw	-63
 16500  010510  50E3               	movf	plusw1,w,c
 16501  010512  6EE6               	movwf	postinc1,c
 16502  010514  0E00               	movlw	0
 16503  010516  6EE6               	movwf	postinc1,c
 16504  010518  EC9D  F0D6         	call	_tolower	;wreg free
 16505                           
 16506                           ;stkvar	_mode @ sp[(-56)+54]
 16507  01051C  0EFE               	movlw	-2
 16508  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 16509                           
 16510                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 16511                           ;stkvar	_mode @ sp[(-56)+54]
 16512                           ;stkvar	_nmode @ sp[(-56)+55]
 16513  010524  0EFE               	movlw	-2
 16514  010526  006F FF8C  F001    	movff	plusw1,btemp
 16515  01052C  0EFF               	movlw	-1
 16516  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 16517                           
 16518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 16519                           ;stkvar	_mode @ sp[(-56)+54]
 16520  010534  0EFE               	movlw	-2
 16521  010536  006F FF8C  F001    	movff	plusw1,btemp
 16522  01053C  0E67               	movlw	103
 16523  01053E  1801               	xorwf	btemp^0,w,c
 16524  010540  A4D8               	btfss	status,2,c
 16525  010542  D025               	goto	l12094
 16526                           
 16527                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 16528  010544  503C               	movf	_prec^0,w,c
 16529  010546  103D               	iorwf	(_prec+1)^0,w,c
 16530  010548  A4D8               	btfss	status,2,c
 16531  01054A  D004               	goto	l12088
 16532                           
 16533                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 16534  01054C  0E00               	movlw	0
 16535  01054E  6E3D               	movwf	(_prec+1)^0,c
 16536  010550  0E01               	movlw	1
 16537  010552  6E3C               	movwf	_prec^0,c
 16538  010554                     l12088:
 16539                           
 16540                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 16541  010554  BE3D               	btfsc	(_prec+1)^0,7,c
 16542  010556  D005               	goto	u11220
 16543  010558  503D               	movf	(_prec+1)^0,w,c
 16544  01055A  E110               	bnz	l12092
 16545  01055C  043C               	decf	_prec^0,w,c
 16546  01055E  B0D8               	btfsc	status,0,c
 16547  010560  D00D               	goto	l12092
 16548  010562                     u11220:
 16549  010562  0E06               	movlw	6
 16550  010564  6E0B               	movwf	(btemp+10)^0,c
 16551  010566  0E00               	movlw	0
 16552  010568  6E0C               	movwf	(btemp+11)^0,c
 16553                           
 16554                           ;stkvar	_p @ sp[(-56)+40]
 16555  01056A  0EF0               	movlw	-16
 16556  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16557  010572  0EF1               	movlw	-15
 16558  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 16559  01057A  D00C               	goto	l12100
 16560  01057C                     l12092:
 16561                           
 16562                           ;stkvar	_p @ sp[(-56)+40]
 16563  01057C  0EF0               	movlw	-16
 16564  01057E  0060  F0F3  FFE3   	movff	_prec,plusw1
 16565  010584  0EF1               	movlw	-15
 16566  010586  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 16567  01058C  D003               	goto	l12100
 16568  01058E                     l12094:
 16569                           
 16570                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 16571  01058E  AE3D               	btfss	(_prec+1)^0,7,c
 16572  010590  D7F5               	goto	l12092
 16573  010592  D7E7               	goto	u11220
 16574  010594                     l12100:
 16575                           
 16576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 16577                           ;stkvar	_mode @ sp[(-56)+54]
 16578  010594  0EFE               	movlw	-2
 16579  010596  006F FF8C  F001    	movff	plusw1,btemp
 16580  01059C  0E67               	movlw	103
 16581  01059E  1801               	xorwf	btemp^0,w,c
 16582  0105A0  A4D8               	btfss	status,2,c
 16583  0105A2  D02F               	goto	l12110
 16584                           
 16585                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 16586                           ;stkvar	_e @ sp[(-56)+34]
 16587  0105A4  0EEB               	movlw	-21
 16588  0105A6  AEE3               	btfss	plusw1,7,c
 16589  0105A8  D00E               	goto	u11250
 16590  0105AA  0EEA               	movlw	-22
 16591  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 16592  0105B2  0EFC               	movlw	252
 16593  0105B4  5E01               	subwf	btemp^0,f,c
 16594  0105B6  0EEB               	movlw	-21
 16595  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 16596  0105BE  0EFF               	movlw	255
 16597  0105C0  5A01               	subwfb	btemp^0,f,c
 16598  0105C2  A0D8               	btfss	status,0,c
 16599  0105C4  D018               	goto	l12108
 16600  0105C6                     u11250:
 16601                           
 16602                           ;stkvar	_e @ sp[(-56)+34]
 16603                           ;stkvar	_p @ sp[(-56)+40]
 16604  0105C6  0EF0               	movlw	-16
 16605  0105C8  50E3               	movf	plusw1,w,c
 16606  0105CA  0FFF               	addlw	255
 16607  0105CC  6E0B               	movwf	(btemp+10)^0,c
 16608  0105CE  0EF1               	movlw	-15
 16609  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 16610  0105D6  0EFF               	movlw	255
 16611  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 16612  0105DA  0EEA               	movlw	-22
 16613  0105DC  50E3               	movf	plusw1,w,c
 16614  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 16615  0105E0  500C               	movf	(btemp+11)^0,w,c
 16616  0105E2  0A80               	xorlw	128
 16617  0105E4  6E01               	movwf	btemp^0,c
 16618  0105E6  0EEB               	movlw	-21
 16619  0105E8  50E3               	movf	plusw1,w,c
 16620  0105EA  0A80               	xorlw	128
 16621  0105EC  5801               	subwfb	btemp^0,w,c
 16622  0105EE  A0D8               	btfss	status,0,c
 16623  0105F0  D002               	goto	l12108
 16624                           
 16625                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 16626  0105F2  0E66               	movlw	102
 16627  0105F4  D001               	goto	L17
 16628  0105F6                     l12108:
 16629                           
 16630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 16631  0105F6  0E65               	movlw	101
 16632  0105F8                     L17:
 16633  0105F8  6E0C               	movwf	(btemp+11)^0,c
 16634                           
 16635                           ;stkvar	_nmode @ sp[(-56)+55]
 16636  0105FA  0EFF               	movlw	-1
 16637  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 16638  010602                     l12110:
 16639                           
 16640                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 16641                           ;stkvar	_p @ sp[(-56)+40]
 16642                           ;stkvar	_m @ sp[(-56)+48]
 16643  010602  0EF0               	movlw	-16
 16644  010604  006F FF8C  F001    	movff	plusw1,btemp
 16645  01060A  0EF8               	movlw	-8
 16646  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 16647  010612  0EF1               	movlw	-15
 16648  010614  006F FF8C  F001    	movff	plusw1,btemp
 16649  01061A  0EF9               	movlw	-7
 16650  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 16651                           
 16652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 16653                           ;stkvar	_mode @ sp[(-56)+54]
 16654  010622  0EFE               	movlw	-2
 16655  010624  006F FF8C  F001    	movff	plusw1,btemp
 16656  01062A  0E67               	movlw	103
 16657  01062C  1801               	xorwf	btemp^0,w,c
 16658  01062E  A4D8               	btfss	status,2,c
 16659  010630  D00B               	goto	u11290
 16660                           
 16661                           ;stkvar	_nmode @ sp[(-56)+55]
 16662  010632  0EFF               	movlw	-1
 16663  010634  006F FF8C  F001    	movff	plusw1,btemp
 16664  01063A  0E66               	movlw	102
 16665  01063C  1801               	xorwf	btemp^0,w,c
 16666  01063E  A4D8               	btfss	status,2,c
 16667  010640  D014               	goto	l2223
 16668                           
 16669                           ;stkvar	_e @ sp[(-56)+34]
 16670  010642  0EEB               	movlw	-21
 16671  010644  AEE3               	btfss	plusw1,7,c
 16672  010646  D011               	goto	l2223
 16673  010648                     u11290:
 16674                           
 16675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 16676                           ;stkvar	_m @ sp[(-56)+48]
 16677  010648  0EF8               	movlw	-8
 16678  01064A  50E3               	movf	plusw1,w,c
 16679  01064C  0F01               	addlw	1
 16680  01064E  6E01               	movwf	btemp^0,c
 16681  010650  0EF8               	movlw	-8
 16682  010652  0060  F007  FFE3   	movff	btemp,plusw1
 16683  010658  6A01               	clrf	btemp^0,c
 16684  01065A  0EF9               	movlw	-7
 16685  01065C  50E3               	movf	plusw1,w,c
 16686  01065E  2001               	addwfc	btemp^0,w,c
 16687  010660  6E01               	movwf	btemp^0,c
 16688  010662  0EF9               	movlw	-7
 16689  010664  0060  F007  FFE3   	movff	btemp,plusw1
 16690  01066A                     l2223:
 16691                           
 16692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 16693                           ;stkvar	_nmode @ sp[(-56)+55]
 16694  01066A  0EFF               	movlw	-1
 16695  01066C  006F FF8C  F001    	movff	plusw1,btemp
 16696  010672  0E66               	movlw	102
 16697  010674  1801               	xorwf	btemp^0,w,c
 16698  010676  A4D8               	btfss	status,2,c
 16699  010678  D03B               	goto	l12130
 16700                           
 16701                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 16702                           ;stkvar	_e @ sp[(-56)+34]
 16703  01067A  0EEB               	movlw	-21
 16704  01067C  AEE3               	btfss	plusw1,7,c
 16705  01067E  D01C               	goto	l12126
 16706                           
 16707                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 16708  010680  0E00               	movlw	0
 16709  010682  6E09               	movwf	(btemp+8)^0,c
 16710  010684  0E00               	movlw	0
 16711  010686  6E0A               	movwf	(btemp+9)^0,c
 16712  010688  0E80               	movlw	128
 16713  01068A  6E0B               	movwf	(btemp+10)^0,c
 16714  01068C  0E3F               	movlw	63
 16715  01068E  6E0C               	movwf	(btemp+11)^0,c
 16716                           
 16717                           ;stkvar	_u @ sp[(-56)+12]
 16718  010690  0ED4               	movlw	-44
 16719  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 16720  010698  0ED5               	movlw	-43
 16721  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16722  0106A0  0ED6               	movlw	-42
 16723  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16724  0106A8  0ED7               	movlw	-41
 16725  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 16726                           
 16727                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 16728                           ;stkvar	_e @ sp[(-56)+34]
 16729  0106B0  0EEA               	movlw	-22
 16730  0106B2  6AE3               	clrf	plusw1,c
 16731  0106B4  0EEB               	movlw	-21
 16732  0106B6  6AE3               	clrf	plusw1,c
 16733  0106B8                     l12126:
 16734                           
 16735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 16736                           ;stkvar	_mode @ sp[(-56)+54]
 16737  0106B8  0EFE               	movlw	-2
 16738  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 16739  0106C0  0E67               	movlw	103
 16740  0106C2  1801               	xorwf	btemp^0,w,c
 16741  0106C4  B4D8               	btfsc	status,2,c
 16742  0106C6  D014               	goto	l12130
 16743                           
 16744                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 16745                           ;stkvar	_e @ sp[(-56)+34]
 16746                           ;stkvar	_m @ sp[(-56)+48]
 16747  0106C8  0EF8               	movlw	-8
 16748  0106CA  50E3               	movf	plusw1,w,c
 16749  0106CC  6E01               	movwf	btemp^0,c
 16750  0106CE  0EEA               	movlw	-22
 16751  0106D0  50E3               	movf	plusw1,w,c
 16752  0106D2  2601               	addwf	btemp^0,f,c
 16753  0106D4  0EF8               	movlw	-8
 16754  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 16755  0106DC  0EF9               	movlw	-7
 16756  0106DE  50E3               	movf	plusw1,w,c
 16757  0106E0  6E01               	movwf	btemp^0,c
 16758  0106E2  0EEB               	movlw	-21
 16759  0106E4  50E3               	movf	plusw1,w,c
 16760  0106E6  2201               	addwfc	btemp^0,f,c
 16761  0106E8  0EF9               	movlw	-7
 16762  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 16763  0106F0                     l12130:
 16764                           
 16765                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 16766                           ;stkvar	_i @ sp[(-56)+36]
 16767  0106F0  0EEC               	movlw	-20
 16768  0106F2  6AE3               	clrf	plusw1,c
 16769  0106F4  0EED               	movlw	-19
 16770  0106F6  6AE3               	clrf	plusw1,c
 16771                           
 16772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 16773                           ;stkvar	_g @ sp[(-56)+16]
 16774  0106F8  0ED8               	movlw	-40
 16775  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 16776  010700  0ED9               	movlw	-39
 16777  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 16778  010708  0EDA               	movlw	-38
 16779  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 16780  010710  0EDB               	movlw	-37
 16781  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 16782                           
 16783                           ;stkvar	_h @ sp[(-56)+24]
 16784  010718  0EE0               	movlw	-32
 16785  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 16786  010720  0EE1               	movlw	-31
 16787  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16788  010728  0EE2               	movlw	-30
 16789  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16790  010730  0EE3               	movlw	-29
 16791  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 16792                           
 16793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 16794                           ;stkvar	_u @ sp[(-56)+12]
 16795  010738  0ED4               	movlw	-44
 16796  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 16797  010740  0ED5               	movlw	-43
 16798  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 16799  010748  0ED6               	movlw	-42
 16800  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 16801  010750  0ED7               	movlw	-41
 16802  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 16803                           
 16804                           ;stkvar	_ou @ sp[(-56)+28]
 16805  010758  0EE4               	movlw	-28
 16806  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 16807  010760  0EE5               	movlw	-27
 16808  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16809  010768  0EE6               	movlw	-26
 16810  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16811  010770  0EE7               	movlw	-25
 16812  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 16813                           
 16814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16815  010778  D0D6               	goto	l12146
 16816  01077A                     l12136:
 16817                           
 16818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 16819                           ;stkvar	_u @ sp[(-56)+12]
 16820  01077A  0ED4               	movlw	-44
 16821  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 16822  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 16823  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 16824  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 16825                           
 16826                           ;stkvar	_h @ sp[(-60)+24]
 16827  010794  0EDC               	movlw	-36
 16828  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 16829  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 16830  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16831  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16832  0107AE  ECB4  F0A6         	call	___fldiv	;wreg free
 16833  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 16834  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16835  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16836  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 16837  0107CA  EC3E  F0B2         	call	_floorf	;wreg free
 16838                           
 16839                           ;stkvar	_l @ sp[(-56)+20]
 16840  0107CE  0EDC               	movlw	-36
 16841  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 16842  0107D6  0EDD               	movlw	-35
 16843  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16844  0107DE  0EDE               	movlw	-34
 16845  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16846  0107E6  0EDF               	movlw	-33
 16847  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 16848                           
 16849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 16850                           ;stkvar	_l @ sp[(-56)+20]
 16851  0107EE  0EDC               	movlw	-36
 16852  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 16853  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 16854  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 16855  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 16856  010808  EC3B  F0C7         	call	___fltol	;wreg free
 16857  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 16858  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 16859                           
 16860                           ;stkvar	_d @ sp[(-56)+44]
 16861  010818  0EF4               	movlw	-12
 16862  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16863  010820  0EF5               	movlw	-11
 16864  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 16865                           
 16866                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 16867                           ;stkvar	_u @ sp[(-56)+12]
 16868  010828  0ED4               	movlw	-44
 16869  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 16870  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 16871  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 16872  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 16873                           
 16874                           ;stkvar	_l @ sp[(-60)+20]
 16875  010842  0ED8               	movlw	-40
 16876  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 16877  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 16878  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 16879  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 16880  01085C  ECC1  F09E         	call	___flmul	;wreg free
 16881  010860  0060  F007  FFE6   	movff	btemp,postinc1
 16882  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16883  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16884  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 16885                           
 16886                           ;stkvar	_h @ sp[(-60)+24]
 16887  010878  0EDC               	movlw	-36
 16888  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 16889  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 16890  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 16891  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 16892  010892  ECEF  F0DA         	call	___flsub	;wreg free
 16893                           
 16894                           ;stkvar	_h @ sp[(-56)+24]
 16895  010896  0EE0               	movlw	-32
 16896  010898  0060  F007  FFE3   	movff	btemp,plusw1
 16897  01089E  0EE1               	movlw	-31
 16898  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16899  0108A6  0EE2               	movlw	-30
 16900  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16901  0108AE  0EE3               	movlw	-29
 16902  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 16903                           
 16904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 16905  0108B6  0E00               	movlw	0
 16906  0108B8  6EE6               	movwf	postinc1,c
 16907  0108BA  0E00               	movlw	0
 16908  0108BC  6EE6               	movwf	postinc1,c
 16909  0108BE  0E20               	movlw	32
 16910  0108C0  6EE6               	movwf	postinc1,c
 16911  0108C2  0E41               	movlw	65
 16912  0108C4  6EE6               	movwf	postinc1,c
 16913                           
 16914                           ;stkvar	_u @ sp[(-60)+12]
 16915  0108C6  0ED0               	movlw	-48
 16916  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16917  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 16918  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16919  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 16920  0108E0  ECB4  F0A6         	call	___fldiv	;wreg free
 16921                           
 16922                           ;stkvar	_u @ sp[(-56)+12]
 16923  0108E4  0ED4               	movlw	-44
 16924  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 16925  0108EC  0ED5               	movlw	-43
 16926  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16927  0108F4  0ED6               	movlw	-42
 16928  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16929  0108FC  0ED7               	movlw	-41
 16930  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 16931                           
 16932                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 16933                           ;stkvar	_i @ sp[(-56)+36]
 16934  010904  0EEC               	movlw	-20
 16935  010906  50E3               	movf	plusw1,w,c
 16936  010908  0F01               	addlw	1
 16937  01090A  6E01               	movwf	btemp^0,c
 16938  01090C  0EEC               	movlw	-20
 16939  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 16940  010914  6A01               	clrf	btemp^0,c
 16941  010916  0EED               	movlw	-19
 16942  010918  50E3               	movf	plusw1,w,c
 16943  01091A  2001               	addwfc	btemp^0,w,c
 16944  01091C  6E01               	movwf	btemp^0,c
 16945  01091E  0EED               	movlw	-19
 16946  010920  0060  F007  FFE3   	movff	btemp,plusw1
 16947  010926                     l12146:
 16948                           
 16949                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16950                           ;stkvar	_m @ sp[(-56)+48]
 16951                           ;stkvar	_i @ sp[(-56)+36]
 16952  010926  50E1               	movf	fsr1l,w,c
 16953  010928  0FEC               	addlw	-20
 16954  01092A  6ED9               	movwf	fsr2l,c
 16955  01092C  50E2               	movf	fsr1h,w,c
 16956  01092E  6EDA               	movwf	fsr2h,c
 16957  010930  0EFF               	movlw	255
 16958  010932  22DA               	addwfc	fsr2h,f,c
 16959  010934  0EF8               	movlw	-8
 16960  010936  50E3               	movf	plusw1,w,c
 16961  010938  5CDE               	subwf	postinc2,w,c
 16962  01093A  50DE               	movf	postinc2,w,c
 16963  01093C  0A80               	xorlw	128
 16964  01093E  6E01               	movwf	btemp^0,c
 16965  010940  0EF9               	movlw	-7
 16966  010942  50E3               	movf	plusw1,w,c
 16967  010944  0A80               	xorlw	128
 16968  010946  5801               	subwfb	btemp^0,w,c
 16969  010948  A0D8               	btfss	status,0,c
 16970  01094A  D717               	goto	l12136
 16971                           
 16972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 16973  01094C  0E00               	movlw	0
 16974  01094E  6EE6               	movwf	postinc1,c
 16975  010950  0E00               	movlw	0
 16976  010952  6EE6               	movwf	postinc1,c
 16977  010954  0EA0               	movlw	160
 16978  010956  6EE6               	movwf	postinc1,c
 16979  010958  0E40               	movlw	64
 16980  01095A  6EE6               	movwf	postinc1,c
 16981                           
 16982                           ;stkvar	_u @ sp[(-60)+12]
 16983  01095C  0ED0               	movlw	-48
 16984  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 16985  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 16986  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 16987  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 16988  010976  ECC1  F09E         	call	___flmul	;wreg free
 16989                           
 16990                           ;stkvar	_l @ sp[(-56)+20]
 16991  01097A  0EDC               	movlw	-36
 16992  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 16993  010982  0EDD               	movlw	-35
 16994  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16995  01098A  0EDE               	movlw	-34
 16996  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16997  010992  0EDF               	movlw	-33
 16998  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 16999                           
 17000                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 17001                           ;stkvar	_l @ sp[(-56)+20]
 17002  01099A  0EDC               	movlw	-36
 17003  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 17004  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 17005  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 17006  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 17007                           
 17008                           ;stkvar	_h @ sp[(-60)+24]
 17009  0109B4  0EDC               	movlw	-36
 17010  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 17011  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 17012  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 17013  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 17014  0109CE  ECF4  F0C7         	call	___flge	;wreg free
 17015  0109D2  A001               	btfss	btemp& (0+255),0,c
 17016  0109D4  D021               	goto	u11360
 17017                           
 17018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 17019                           ;stkvar	_l @ sp[(-56)+20]
 17020                           
 17021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 17022                           
 17023                           ;stkvar	_l @ sp[(-56)+20]
 17024                           
 17025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 17026  0109D6  0EDC               	movlw	-36
 17027  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 17028  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 17029  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 17030  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 17031                           
 17032                           ;stkvar	_h @ sp[(-60)+24]
 17033  0109F0  0EDC               	movlw	-36
 17034  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 17035  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 17036  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 17037  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 17038  010A0A  EC39  F0D2         	call	___fleq	;wreg free
 17039  010A0E  A001               	btfss	btemp& (0+255),0,c
 17040  010A10  D01B               	goto	l12160
 17041                           
 17042                           ;stkvar	_d @ sp[(-56)+44]
 17043  010A12  0EF4               	movlw	-12
 17044  010A14  B0E3               	btfsc	plusw1,0,c
 17045  010A16  D018               	goto	l12160
 17046  010A18                     u11360:
 17047                           
 17048                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 17049  010A18  0E00               	movlw	0
 17050  010A1A  6E09               	movwf	(btemp+8)^0,c
 17051  010A1C  0E00               	movlw	0
 17052  010A1E  6E0A               	movwf	(btemp+9)^0,c
 17053  010A20  0E00               	movlw	0
 17054  010A22  6E0B               	movwf	(btemp+10)^0,c
 17055  010A24  0E00               	movlw	0
 17056  010A26  6E0C               	movwf	(btemp+11)^0,c
 17057                           
 17058                           ;stkvar	_l @ sp[(-56)+20]
 17059  010A28  0EDC               	movlw	-36
 17060  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17061  010A30  0EDD               	movlw	-35
 17062  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17063  010A38  0EDE               	movlw	-34
 17064  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17065  010A40  0EDF               	movlw	-33
 17066  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 17067  010A48                     l12160:
 17068                           
 17069                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 17070                           ;stkvar	_l @ sp[(-56)+20]
 17071  010A48  0EDC               	movlw	-36
 17072  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 17073  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 17074  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 17075  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 17076                           
 17077                           ;stkvar	_g @ sp[(-60)+16]
 17078  010A62  0ED4               	movlw	-44
 17079  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 17080  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 17081  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 17082  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 17083  010A7C  ECD6  F0A2         	call	___fladd	;wreg free
 17084                           
 17085                           ;stkvar	_h @ sp[(-56)+24]
 17086  010A80  0EE0               	movlw	-32
 17087  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 17088  010A88  0EE1               	movlw	-31
 17089  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17090  010A90  0EE2               	movlw	-30
 17091  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17092  010A98  0EE3               	movlw	-29
 17093  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 17094                           
 17095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 17096                           ;stkvar	_ou @ sp[(-56)+28]
 17097  010AA0  0EE4               	movlw	-28
 17098  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 17099  010AA8  0EE5               	movlw	-27
 17100  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 17101  010AB0  0EE6               	movlw	-26
 17102  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 17103  010AB8  0EE7               	movlw	-25
 17104  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 17105                           
 17106                           ;stkvar	_u @ sp[(-56)+12]
 17107  010AC0  0ED4               	movlw	-44
 17108  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 17109  010AC8  0ED5               	movlw	-43
 17110  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17111  010AD0  0ED6               	movlw	-42
 17112  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17113  010AD8  0ED7               	movlw	-41
 17114  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 17115                           
 17116                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 17117                           ;stkvar	_nmode @ sp[(-56)+55]
 17118  010AE0  0EFF               	movlw	-1
 17119  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 17120  010AE8  0E65               	movlw	101
 17121  010AEA  1801               	xorwf	btemp^0,w,c
 17122  010AEC  B4D8               	btfsc	status,2,c
 17123  010AEE  D011               	goto	l12168
 17124                           
 17125                           ;stkvar	_e @ sp[(-56)+34]
 17126                           ;stkvar	_ne @ sp[(-56)+46]
 17127  010AF0  0EEA               	movlw	-22
 17128  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 17129  010AF8  0EF6               	movlw	-10
 17130  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 17131  010B00  0EEB               	movlw	-21
 17132  010B02  006F FF8C  F001    	movff	plusw1,btemp
 17133  010B08  0EF7               	movlw	-9
 17134  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 17135  010B10  D004               	goto	l2238
 17136  010B12                     l12168:
 17137                           
 17138                           ;stkvar	_ne @ sp[(-56)+46]
 17139  010B12  0EF6               	movlw	-10
 17140  010B14  6AE3               	clrf	plusw1,c
 17141  010B16  0EF7               	movlw	-9
 17142  010B18  6AE3               	clrf	plusw1,c
 17143  010B1A                     l2238:
 17144                           
 17145                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 17146                           ;stkvar	_pp @ sp[(-56)+50]
 17147  010B1A  0EFA               	movlw	-6
 17148  010B1C  6AE3               	clrf	plusw1,c
 17149  010B1E  0EFB               	movlw	-5
 17150  010B20  6AE3               	clrf	plusw1,c
 17151                           
 17152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 17153                           ;stkvar	_t @ sp[(-56)+52]
 17154  010B22  0EFC               	movlw	-4
 17155  010B24  6AE3               	clrf	plusw1,c
 17156  010B26  0EFD               	movlw	-3
 17157  010B28  6AE3               	clrf	plusw1,c
 17158                           
 17159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 17160                           ;stkvar	_i @ sp[(-56)+36]
 17161  010B2A  0EEC               	movlw	-20
 17162  010B2C  6AE3               	clrf	plusw1,c
 17163  010B2E  0EED               	movlw	-19
 17164  010B30  6AE3               	clrf	plusw1,c
 17165                           
 17166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 17167  010B32  D1B7               	goto	l12220
 17168  010B34                     l12170:
 17169                           
 17170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 17171                           ;stkvar	_u @ sp[(-56)+12]
 17172  010B34  0ED4               	movlw	-44
 17173  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 17174  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 17175  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 17176  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 17177                           
 17178                           ;stkvar	_h @ sp[(-60)+24]
 17179  010B4E  0EDC               	movlw	-36
 17180  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 17181  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 17182  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 17183  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 17184  010B68  ECB4  F0A6         	call	___fldiv	;wreg free
 17185  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 17186  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17187  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17188  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 17189  010B84  EC3E  F0B2         	call	_floorf	;wreg free
 17190                           
 17191                           ;stkvar	_l @ sp[(-56)+20]
 17192  010B88  0EDC               	movlw	-36
 17193  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 17194  010B90  0EDD               	movlw	-35
 17195  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17196  010B98  0EDE               	movlw	-34
 17197  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17198  010BA0  0EDF               	movlw	-33
 17199  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 17200                           
 17201                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 17202                           ;stkvar	_l @ sp[(-56)+20]
 17203  010BA8  0EDC               	movlw	-36
 17204  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 17205  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 17206  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 17207  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 17208  010BC2  EC3B  F0C7         	call	___fltol	;wreg free
 17209  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 17210  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 17211                           
 17212                           ;stkvar	_d @ sp[(-56)+44]
 17213  010BD2  0EF4               	movlw	-12
 17214  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17215  010BDA  0EF5               	movlw	-11
 17216  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17217                           
 17218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 17219  010BE2  B83E               	btfsc	_flags^0,4,c
 17220  010BE4  D026               	goto	l12184
 17221                           
 17222                           ;stkvar	_d @ sp[(-56)+44]
 17223  010BE6  0EF4               	movlw	-12
 17224  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 17225  010BEE  0EF5               	movlw	-11
 17226  010BF0  50E3               	movf	plusw1,w,c
 17227  010BF2  1001               	iorwf	btemp^0,w,c
 17228  010BF4  A4D8               	btfss	status,2,c
 17229  010BF6  D01D               	goto	l12184
 17230                           
 17231                           ;stkvar	_mode @ sp[(-56)+54]
 17232  010BF8  0EFE               	movlw	-2
 17233  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 17234  010C00  0E67               	movlw	103
 17235  010C02  1801               	xorwf	btemp^0,w,c
 17236  010C04  A4D8               	btfss	status,2,c
 17237  010C06  D015               	goto	l12184
 17238                           
 17239                           ;stkvar	_ne @ sp[(-56)+46]
 17240  010C08  0EF7               	movlw	-9
 17241  010C0A  AEE3               	btfss	plusw1,7,c
 17242  010C0C  D012               	goto	l12184
 17243                           
 17244                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 17245                           ;stkvar	_t @ sp[(-56)+52]
 17246  010C0E  0EFC               	movlw	-4
 17247  010C10  50E3               	movf	plusw1,w,c
 17248  010C12  0F01               	addlw	1
 17249  010C14  6E01               	movwf	btemp^0,c
 17250  010C16  0EFC               	movlw	-4
 17251  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 17252  010C1E  6A01               	clrf	btemp^0,c
 17253  010C20  0EFD               	movlw	-3
 17254  010C22  50E3               	movf	plusw1,w,c
 17255  010C24  2001               	addwfc	btemp^0,w,c
 17256  010C26  6E01               	movwf	btemp^0,c
 17257  010C28  0EFD               	movlw	-3
 17258  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 17259                           
 17260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 17261  010C30  D0AF               	goto	l12212
 17262  010C32                     l12184:
 17263                           
 17264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 17265                           ;stkvar	_pp @ sp[(-56)+50]
 17266  010C32  0EFA               	movlw	-6
 17267  010C34  006F FF8C  F001    	movff	plusw1,btemp
 17268  010C3A  0EFB               	movlw	-5
 17269  010C3C  50E3               	movf	plusw1,w,c
 17270  010C3E  1001               	iorwf	btemp^0,w,c
 17271  010C40  A4D8               	btfss	status,2,c
 17272  010C42  D070               	goto	l12204
 17273                           
 17274                           ;stkvar	_ne @ sp[(-56)+46]
 17275  010C44  0EF7               	movlw	-9
 17276  010C46  AEE3               	btfss	plusw1,7,c
 17277  010C48  D06D               	goto	l12204
 17278                           
 17279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 17280                           ;stkvar	_n @ sp[(-56)+32]
 17281  010C4A  0EE8               	movlw	-24
 17282  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 17283  010C52  0EE9               	movlw	-23
 17284  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 17285  010C5A  0E97               	movlw	low _dbuf
 17286  010C5C  240B               	addwf	(btemp+10)^0,w,c
 17287  010C5E  6ED9               	movwf	fsr2l,c
 17288  010C60  0E02               	movlw	high _dbuf
 17289  010C62  200C               	addwfc	(btemp+11)^0,w,c
 17290  010C64  6EDA               	movwf	fsr2h,c
 17291  010C66  0E2E               	movlw	46
 17292  010C68  6EDF               	movwf	indf2,c
 17293                           
 17294                           ;stkvar	_n @ sp[(-56)+32]
 17295  010C6A  0EE8               	movlw	-24
 17296  010C6C  50E3               	movf	plusw1,w,c
 17297  010C6E  0F01               	addlw	1
 17298  010C70  6E01               	movwf	btemp^0,c
 17299  010C72  0EE8               	movlw	-24
 17300  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 17301  010C7A  6A01               	clrf	btemp^0,c
 17302  010C7C  0EE9               	movlw	-23
 17303  010C7E  50E3               	movf	plusw1,w,c
 17304  010C80  2001               	addwfc	btemp^0,w,c
 17305  010C82  6E01               	movwf	btemp^0,c
 17306  010C84  0EE9               	movlw	-23
 17307  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 17308                           
 17309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 17310                           ;stkvar	_w @ sp[(-56)+38]
 17311  010C8C  50E1               	movf	fsr1l,w,c
 17312  010C8E  0FEE               	addlw	-18
 17313  010C90  6ED9               	movwf	fsr2l,c
 17314  010C92  50E2               	movf	fsr1h,w,c
 17315  010C94  6EDA               	movwf	fsr2h,c
 17316  010C96  0EFF               	movlw	255
 17317  010C98  22DA               	addwfc	fsr2h,f,c
 17318  010C9A  06DE               	decf	postinc2,f,c
 17319  010C9C  0E00               	movlw	0
 17320  010C9E  5ADD               	subwfb	postdec2,f,c
 17321                           
 17322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 17323  010CA0  0E01               	movlw	1
 17324  010CA2  6E0B               	movwf	(btemp+10)^0,c
 17325  010CA4  0E00               	movlw	0
 17326  010CA6  6E0C               	movwf	(btemp+11)^0,c
 17327                           
 17328                           ;stkvar	_pp @ sp[(-56)+50]
 17329  010CA8  0EFA               	movlw	-6
 17330  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17331  010CB0  0EFB               	movlw	-5
 17332  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 17333  010CB8  D035               	goto	l12204
 17334  010CBA                     l12196:
 17335                           
 17336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 17337                           ;stkvar	_n @ sp[(-56)+32]
 17338  010CBA  0EE8               	movlw	-24
 17339  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 17340  010CC2  0EE9               	movlw	-23
 17341  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 17342  010CCA  0E97               	movlw	low _dbuf
 17343  010CCC  240B               	addwf	(btemp+10)^0,w,c
 17344  010CCE  6ED9               	movwf	fsr2l,c
 17345  010CD0  0E02               	movlw	high _dbuf
 17346  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 17347  010CD4  6EDA               	movwf	fsr2h,c
 17348  010CD6  0E30               	movlw	48
 17349  010CD8  6EDF               	movwf	indf2,c
 17350                           
 17351                           ;stkvar	_n @ sp[(-56)+32]
 17352  010CDA  0EE8               	movlw	-24
 17353  010CDC  50E3               	movf	plusw1,w,c
 17354  010CDE  0F01               	addlw	1
 17355  010CE0  6E01               	movwf	btemp^0,c
 17356  010CE2  0EE8               	movlw	-24
 17357  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 17358  010CEA  6A01               	clrf	btemp^0,c
 17359  010CEC  0EE9               	movlw	-23
 17360  010CEE  50E3               	movf	plusw1,w,c
 17361  010CF0  2001               	addwfc	btemp^0,w,c
 17362  010CF2  6E01               	movwf	btemp^0,c
 17363  010CF4  0EE9               	movlw	-23
 17364  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 17365                           
 17366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 17367                           ;stkvar	_w @ sp[(-56)+38]
 17368  010CFC  50E1               	movf	fsr1l,w,c
 17369  010CFE  0FEE               	addlw	-18
 17370  010D00  6ED9               	movwf	fsr2l,c
 17371  010D02  50E2               	movf	fsr1h,w,c
 17372  010D04  6EDA               	movwf	fsr2h,c
 17373  010D06  0EFF               	movlw	255
 17374  010D08  22DA               	addwfc	fsr2h,f,c
 17375  010D0A  06DE               	decf	postinc2,f,c
 17376  010D0C  0E00               	movlw	0
 17377  010D0E  5ADD               	subwfb	postdec2,f,c
 17378                           
 17379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 17380                           ;stkvar	_t @ sp[(-56)+52]
 17381  010D10  50E1               	movf	fsr1l,w,c
 17382  010D12  0FFC               	addlw	-4
 17383  010D14  6ED9               	movwf	fsr2l,c
 17384  010D16  50E2               	movf	fsr1h,w,c
 17385  010D18  6EDA               	movwf	fsr2h,c
 17386  010D1A  0EFF               	movlw	255
 17387  010D1C  22DA               	addwfc	fsr2h,f,c
 17388  010D1E  06DE               	decf	postinc2,f,c
 17389  010D20  0E00               	movlw	0
 17390  010D22  5ADD               	subwfb	postdec2,f,c
 17391  010D24                     l12204:
 17392                           
 17393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 17394                           ;stkvar	_t @ sp[(-56)+52]
 17395  010D24  0EFC               	movlw	-4
 17396  010D26  006F FF8C  F001    	movff	plusw1,btemp
 17397  010D2C  0EFD               	movlw	-3
 17398  010D2E  50E3               	movf	plusw1,w,c
 17399  010D30  1001               	iorwf	btemp^0,w,c
 17400  010D32  A4D8               	btfss	status,2,c
 17401  010D34  D7C2               	goto	l12196
 17402                           
 17403                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 17404                           ;stkvar	_n @ sp[(-56)+32]
 17405  010D36  0EE8               	movlw	-24
 17406  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 17407  010D3E  0EE9               	movlw	-23
 17408  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 17409  010D46  0E97               	movlw	low _dbuf
 17410  010D48  240B               	addwf	(btemp+10)^0,w,c
 17411  010D4A  6ED9               	movwf	fsr2l,c
 17412  010D4C  0E02               	movlw	high _dbuf
 17413  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 17414  010D50  6EDA               	movwf	fsr2h,c
 17415                           
 17416                           ;stkvar	_d @ sp[(-56)+44]
 17417  010D52  0EF4               	movlw	-12
 17418  010D54  50E3               	movf	plusw1,w,c
 17419  010D56  0F30               	addlw	48
 17420  010D58  6EDF               	movwf	indf2,c
 17421                           
 17422                           ;stkvar	_n @ sp[(-56)+32]
 17423  010D5A  0EE8               	movlw	-24
 17424  010D5C  50E3               	movf	plusw1,w,c
 17425  010D5E  0F01               	addlw	1
 17426  010D60  6E01               	movwf	btemp^0,c
 17427  010D62  0EE8               	movlw	-24
 17428  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 17429  010D6A  6A01               	clrf	btemp^0,c
 17430  010D6C  0EE9               	movlw	-23
 17431  010D6E  50E3               	movf	plusw1,w,c
 17432  010D70  2001               	addwfc	btemp^0,w,c
 17433  010D72  6E01               	movwf	btemp^0,c
 17434  010D74  0EE9               	movlw	-23
 17435  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 17436                           
 17437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 17438                           ;stkvar	_w @ sp[(-56)+38]
 17439  010D7C  50E1               	movf	fsr1l,w,c
 17440  010D7E  0FEE               	addlw	-18
 17441  010D80  6ED9               	movwf	fsr2l,c
 17442  010D82  50E2               	movf	fsr1h,w,c
 17443  010D84  6EDA               	movwf	fsr2h,c
 17444  010D86  0EFF               	movlw	255
 17445  010D88  22DA               	addwfc	fsr2h,f,c
 17446  010D8A  06DE               	decf	postinc2,f,c
 17447  010D8C  0E00               	movlw	0
 17448  010D8E  5ADD               	subwfb	postdec2,f,c
 17449  010D90                     l12212:
 17450                           
 17451                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 17452                           ;stkvar	_u @ sp[(-56)+12]
 17453  010D90  0ED4               	movlw	-44
 17454  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 17455  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 17456  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 17457  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 17458                           
 17459                           ;stkvar	_l @ sp[(-60)+20]
 17460  010DAA  0ED8               	movlw	-40
 17461  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 17462  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 17463  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 17464  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 17465  010DC4  ECC1  F09E         	call	___flmul	;wreg free
 17466  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 17467  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17468  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17469  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 17470                           
 17471                           ;stkvar	_h @ sp[(-60)+24]
 17472  010DE0  0EDC               	movlw	-36
 17473  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 17474  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 17475  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 17476  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 17477  010DFA  ECEF  F0DA         	call	___flsub	;wreg free
 17478                           
 17479                           ;stkvar	_h @ sp[(-56)+24]
 17480  010DFE  0EE0               	movlw	-32
 17481  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 17482  010E06  0EE1               	movlw	-31
 17483  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17484  010E0E  0EE2               	movlw	-30
 17485  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17486  010E16  0EE3               	movlw	-29
 17487  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 17488                           
 17489                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 17490  010E1E  0E00               	movlw	0
 17491  010E20  6EE6               	movwf	postinc1,c
 17492  010E22  0E00               	movlw	0
 17493  010E24  6EE6               	movwf	postinc1,c
 17494  010E26  0E20               	movlw	32
 17495  010E28  6EE6               	movwf	postinc1,c
 17496  010E2A  0E41               	movlw	65
 17497  010E2C  6EE6               	movwf	postinc1,c
 17498                           
 17499                           ;stkvar	_u @ sp[(-60)+12]
 17500  010E2E  0ED0               	movlw	-48
 17501  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 17502  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 17503  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 17504  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 17505  010E48  ECB4  F0A6         	call	___fldiv	;wreg free
 17506                           
 17507                           ;stkvar	_u @ sp[(-56)+12]
 17508  010E4C  0ED4               	movlw	-44
 17509  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 17510  010E54  0ED5               	movlw	-43
 17511  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17512  010E5C  0ED6               	movlw	-42
 17513  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17514  010E64  0ED7               	movlw	-41
 17515  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 17516                           
 17517                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 17518                           ;stkvar	_ne @ sp[(-56)+46]
 17519  010E6C  50E1               	movf	fsr1l,w,c
 17520  010E6E  0FF6               	addlw	-10
 17521  010E70  6ED9               	movwf	fsr2l,c
 17522  010E72  50E2               	movf	fsr1h,w,c
 17523  010E74  6EDA               	movwf	fsr2h,c
 17524  010E76  0EFF               	movlw	255
 17525  010E78  22DA               	addwfc	fsr2h,f,c
 17526  010E7A  06DE               	decf	postinc2,f,c
 17527  010E7C  0E00               	movlw	0
 17528  010E7E  5ADD               	subwfb	postdec2,f,c
 17529                           
 17530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 17531                           ;stkvar	_i @ sp[(-56)+36]
 17532  010E80  0EEC               	movlw	-20
 17533  010E82  50E3               	movf	plusw1,w,c
 17534  010E84  0F01               	addlw	1
 17535  010E86  6E01               	movwf	btemp^0,c
 17536  010E88  0EEC               	movlw	-20
 17537  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 17538  010E90  6A01               	clrf	btemp^0,c
 17539  010E92  0EED               	movlw	-19
 17540  010E94  50E3               	movf	plusw1,w,c
 17541  010E96  2001               	addwfc	btemp^0,w,c
 17542  010E98  6E01               	movwf	btemp^0,c
 17543  010E9A  0EED               	movlw	-19
 17544  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 17545  010EA2                     l12220:
 17546                           
 17547                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 17548                           ;stkvar	_m @ sp[(-56)+48]
 17549                           ;stkvar	_i @ sp[(-56)+36]
 17550  010EA2  50E1               	movf	fsr1l,w,c
 17551  010EA4  0FEC               	addlw	-20
 17552  010EA6  6ED9               	movwf	fsr2l,c
 17553  010EA8  50E2               	movf	fsr1h,w,c
 17554  010EAA  6EDA               	movwf	fsr2h,c
 17555  010EAC  0EFF               	movlw	255
 17556  010EAE  22DA               	addwfc	fsr2h,f,c
 17557  010EB0  0EF8               	movlw	-8
 17558  010EB2  50E3               	movf	plusw1,w,c
 17559  010EB4  5CDE               	subwf	postinc2,w,c
 17560  010EB6  50DE               	movf	postinc2,w,c
 17561  010EB8  0A80               	xorlw	128
 17562  010EBA  6E01               	movwf	btemp^0,c
 17563  010EBC  0EF9               	movlw	-7
 17564  010EBE  50E3               	movf	plusw1,w,c
 17565  010EC0  0A80               	xorlw	128
 17566  010EC2  5801               	subwfb	btemp^0,w,c
 17567  010EC4  B0D8               	btfsc	status,0,c
 17568  010EC6  D00E               	goto	u11460
 17569                           
 17570                           ;stkvar	_n @ sp[(-56)+32]
 17571  010EC8  0EE9               	movlw	-23
 17572  010ECA  BEE3               	btfsc	plusw1,7,c
 17573  010ECC  D633               	goto	l12170
 17574  010ECE  0EE9               	movlw	-23
 17575  010ED0  50E3               	movf	plusw1,w,c
 17576  010ED2  E108               	bnz	u11460
 17577  010ED4  0EE8               	movlw	-24
 17578  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 17579  010EDC  0E4B               	movlw	75
 17580  010EDE  5E01               	subwf	btemp^0,f,c
 17581  010EE0  A0D8               	btfss	status,0,c
 17582  010EE2  D628               	goto	l12170
 17583  010EE4                     u11460:
 17584                           
 17585                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 17586                           ;stkvar	_pp @ sp[(-56)+50]
 17587  010EE4  0EFA               	movlw	-6
 17588  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 17589  010EEC  0EFB               	movlw	-5
 17590  010EEE  50E3               	movf	plusw1,w,c
 17591  010EF0  1001               	iorwf	btemp^0,w,c
 17592  010EF2  B4D8               	btfsc	status,2,c
 17593  010EF4  A83E               	btfss	_flags^0,4,c
 17594  010EF6  D021               	goto	l12232
 17595                           
 17596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 17597                           ;stkvar	_n @ sp[(-56)+32]
 17598  010EF8  0EE8               	movlw	-24
 17599  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 17600  010F00  0EE9               	movlw	-23
 17601  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 17602  010F08  0E97               	movlw	low _dbuf
 17603  010F0A  240B               	addwf	(btemp+10)^0,w,c
 17604  010F0C  6ED9               	movwf	fsr2l,c
 17605  010F0E  0E02               	movlw	high _dbuf
 17606  010F10  200C               	addwfc	(btemp+11)^0,w,c
 17607  010F12  6EDA               	movwf	fsr2h,c
 17608  010F14  0E2E               	movlw	46
 17609  010F16  6EDF               	movwf	indf2,c
 17610                           
 17611                           ;stkvar	_n @ sp[(-56)+32]
 17612  010F18  0EE8               	movlw	-24
 17613  010F1A  50E3               	movf	plusw1,w,c
 17614  010F1C  0F01               	addlw	1
 17615  010F1E  6E01               	movwf	btemp^0,c
 17616  010F20  0EE8               	movlw	-24
 17617  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 17618  010F28  6A01               	clrf	btemp^0,c
 17619  010F2A  0EE9               	movlw	-23
 17620  010F2C  50E3               	movf	plusw1,w,c
 17621  010F2E  2001               	addwfc	btemp^0,w,c
 17622  010F30  6E01               	movwf	btemp^0,c
 17623  010F32  0EE9               	movlw	-23
 17624  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 17625  010F3A                     l12232:
 17626                           
 17627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 17628                           ;stkvar	_n @ sp[(-56)+32]
 17629  010F3A  0EE8               	movlw	-24
 17630  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 17631  010F42  0EE9               	movlw	-23
 17632  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 17633  010F4A  0E97               	movlw	low _dbuf
 17634  010F4C  240B               	addwf	(btemp+10)^0,w,c
 17635  010F4E  6ED9               	movwf	fsr2l,c
 17636  010F50  0E02               	movlw	high _dbuf
 17637  010F52  200C               	addwfc	(btemp+11)^0,w,c
 17638  010F54  6EDA               	movwf	fsr2h,c
 17639  010F56  0E00               	movlw	0
 17640  010F58  6EDF               	movwf	indf2,c
 17641                           
 17642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 17643                           ;stkvar	_nmode @ sp[(-56)+55]
 17644  010F5A  0EFF               	movlw	-1
 17645  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 17646  010F62  0E65               	movlw	101
 17647  010F64  1801               	xorwf	btemp^0,w,c
 17648  010F66  A4D8               	btfss	status,2,c
 17649  010F68  EF16  F081         	goto	l12036
 17650                           
 17651                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 17652  010F6C  0E4F               	movlw	79
 17653  010F6E  6E0B               	movwf	(btemp+10)^0,c
 17654  010F70  0E00               	movlw	0
 17655  010F72  6E0C               	movwf	(btemp+11)^0,c
 17656                           
 17657                           ;stkvar	_i @ sp[(-56)+36]
 17658  010F74  0EEC               	movlw	-20
 17659  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17660  010F7C  0EED               	movlw	-19
 17661  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17662                           
 17663                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 17664                           ;stkvar	_i @ sp[(-56)+36]
 17665  010F84  0EEC               	movlw	-20
 17666  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 17667  010F8C  0EED               	movlw	-19
 17668  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17669  010F94  0E97               	movlw	low _dbuf
 17670  010F96  240B               	addwf	(btemp+10)^0,w,c
 17671  010F98  6ED9               	movwf	fsr2l,c
 17672  010F9A  0E02               	movlw	high _dbuf
 17673  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 17674  010F9E  6EDA               	movwf	fsr2h,c
 17675  010FA0  0E00               	movlw	0
 17676  010FA2  6EDF               	movwf	indf2,c
 17677                           
 17678                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 17679                           ;stkvar	_sign @ sp[(-56)+42]
 17680  010FA4  0EF2               	movlw	-14
 17681  010FA6  6AE3               	clrf	plusw1,c
 17682  010FA8  0EF3               	movlw	-13
 17683  010FAA  6AE3               	clrf	plusw1,c
 17684                           
 17685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 17686                           ;stkvar	_e @ sp[(-56)+34]
 17687  010FAC  0EEB               	movlw	-21
 17688  010FAE  AEE3               	btfss	plusw1,7,c
 17689  010FB0  D012               	goto	l12246
 17690                           
 17691                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 17692  010FB2  0E01               	movlw	1
 17693  010FB4  6E0B               	movwf	(btemp+10)^0,c
 17694  010FB6  0E00               	movlw	0
 17695  010FB8  6E0C               	movwf	(btemp+11)^0,c
 17696                           
 17697                           ;stkvar	_sign @ sp[(-56)+42]
 17698  010FBA  0EF2               	movlw	-14
 17699  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17700  010FC2  0EF3               	movlw	-13
 17701  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 17702                           
 17703                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 17704                           ;stkvar	_e @ sp[(-56)+34]
 17705                           ;stkvar	_e @ sp[(-56)+34]
 17706  010FCA  0EEA               	movlw	-22
 17707  010FCC  6CE3               	negf	plusw1,c
 17708  010FCE  0EEB               	movlw	-21
 17709  010FD0  1EE3               	comf	plusw1,f,c
 17710  010FD2  B0D8               	btfsc	status,0,c
 17711  010FD4  2AE3               	incf	plusw1,f,c
 17712  010FD6                     l12246:
 17713                           
 17714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 17715  010FD6  0E02               	movlw	2
 17716  010FD8  6E0B               	movwf	(btemp+10)^0,c
 17717  010FDA  0E00               	movlw	0
 17718  010FDC  6E0C               	movwf	(btemp+11)^0,c
 17719                           
 17720                           ;stkvar	_p @ sp[(-56)+40]
 17721  010FDE  0EF0               	movlw	-16
 17722  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17723  010FE6  0EF1               	movlw	-15
 17724  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 17725                           
 17726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17727  010FEE  D051               	goto	l12258
 17728  010FF0                     l12248:
 17729                           
 17730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 17731                           ;stkvar	_i @ sp[(-56)+36]
 17732  010FF0  50E1               	movf	fsr1l,w,c
 17733  010FF2  0FEC               	addlw	-20
 17734  010FF4  6ED9               	movwf	fsr2l,c
 17735  010FF6  50E2               	movf	fsr1h,w,c
 17736  010FF8  6EDA               	movwf	fsr2h,c
 17737  010FFA  0EFF               	movlw	255
 17738  010FFC  22DA               	addwfc	fsr2h,f,c
 17739  010FFE  06DE               	decf	postinc2,f,c
 17740  011000  0E00               	movlw	0
 17741  011002  5ADD               	subwfb	postdec2,f,c
 17742                           
 17743                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 17744                           ;stkvar	_i @ sp[(-56)+36]
 17745  011004  0EEC               	movlw	-20
 17746  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 17747  01100C  0EED               	movlw	-19
 17748  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17749  011014  0E97               	movlw	low _dbuf
 17750  011016  240B               	addwf	(btemp+10)^0,w,c
 17751  011018  6ED9               	movwf	fsr2l,c
 17752  01101A  0E02               	movlw	high _dbuf
 17753  01101C  200C               	addwfc	(btemp+11)^0,w,c
 17754  01101E  6EDA               	movwf	fsr2h,c
 17755  011020  0E0A               	movlw	10
 17756  011022  6EE6               	movwf	postinc1,c
 17757  011024  0E00               	movlw	0
 17758  011026  6EE6               	movwf	postinc1,c
 17759                           
 17760                           ;stkvar	_e @ sp[(-58)+34]
 17761  011028  0EE8               	movlw	-24
 17762  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 17763  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 17764  011036  ECEF  F0CC         	call	___awmod	;wreg free
 17765  01103A  5001               	movf	btemp^0,w,c
 17766  01103C  0F30               	addlw	48
 17767  01103E  6EDF               	movwf	indf2,c
 17768                           
 17769                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 17770  011040  0E0A               	movlw	10
 17771  011042  6EE6               	movwf	postinc1,c
 17772  011044  0E00               	movlw	0
 17773  011046  6EE6               	movwf	postinc1,c
 17774                           
 17775                           ;stkvar	_e @ sp[(-58)+34]
 17776  011048  0EE8               	movlw	-24
 17777  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 17778  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 17779  011056  EC57  F0C9         	call	___awdiv	;wreg free
 17780                           
 17781                           ;stkvar	_e @ sp[(-56)+34]
 17782  01105A  0EEA               	movlw	-22
 17783  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 17784  011062  0EEB               	movlw	-21
 17785  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17786                           
 17787                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 17788                           ;stkvar	_p @ sp[(-56)+40]
 17789  01106A  50E1               	movf	fsr1l,w,c
 17790  01106C  0FF0               	addlw	-16
 17791  01106E  6ED9               	movwf	fsr2l,c
 17792  011070  50E2               	movf	fsr1h,w,c
 17793  011072  6EDA               	movwf	fsr2h,c
 17794  011074  0EFF               	movlw	255
 17795  011076  22DA               	addwfc	fsr2h,f,c
 17796  011078  06DE               	decf	postinc2,f,c
 17797  01107A  0E00               	movlw	0
 17798  01107C  5ADD               	subwfb	postdec2,f,c
 17799                           
 17800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 17801                           ;stkvar	_w @ sp[(-56)+38]
 17802  01107E  50E1               	movf	fsr1l,w,c
 17803  011080  0FEE               	addlw	-18
 17804  011082  6ED9               	movwf	fsr2l,c
 17805  011084  50E2               	movf	fsr1h,w,c
 17806  011086  6EDA               	movwf	fsr2h,c
 17807  011088  0EFF               	movlw	255
 17808  01108A  22DA               	addwfc	fsr2h,f,c
 17809  01108C  06DE               	decf	postinc2,f,c
 17810  01108E  0E00               	movlw	0
 17811  011090  5ADD               	subwfb	postdec2,f,c
 17812  011092                     l12258:
 17813                           
 17814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17815                           ;stkvar	_e @ sp[(-56)+34]
 17816  011092  0EEA               	movlw	-22
 17817  011094  006F FF8C  F001    	movff	plusw1,btemp
 17818  01109A  0EEB               	movlw	-21
 17819  01109C  50E3               	movf	plusw1,w,c
 17820  01109E  1001               	iorwf	btemp^0,w,c
 17821  0110A0  A4D8               	btfss	status,2,c
 17822  0110A2  D7A6               	goto	l12248
 17823                           
 17824                           ;stkvar	_p @ sp[(-56)+40]
 17825  0110A4  0EF1               	movlw	-15
 17826  0110A6  BEE3               	btfsc	plusw1,7,c
 17827  0110A8  D007               	goto	u11520
 17828  0110AA  0EF1               	movlw	-15
 17829  0110AC  50E3               	movf	plusw1,w,c
 17830  0110AE  E1A0               	bnz	l12248
 17831  0110B0  0EF0               	movlw	-16
 17832  0110B2  04E3               	decf	plusw1,w,c
 17833  0110B4  B0D8               	btfsc	status,0,c
 17834  0110B6  D79C               	goto	l12248
 17835  0110B8                     u11520:
 17836                           
 17837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 17838                           ;stkvar	_i @ sp[(-56)+36]
 17839  0110B8  50E1               	movf	fsr1l,w,c
 17840  0110BA  0FEC               	addlw	-20
 17841  0110BC  6ED9               	movwf	fsr2l,c
 17842  0110BE  50E2               	movf	fsr1h,w,c
 17843  0110C0  6EDA               	movwf	fsr2h,c
 17844  0110C2  0EFF               	movlw	255
 17845  0110C4  22DA               	addwfc	fsr2h,f,c
 17846  0110C6  06DE               	decf	postinc2,f,c
 17847  0110C8  0E00               	movlw	0
 17848  0110CA  5ADD               	subwfb	postdec2,f,c
 17849                           
 17850                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 17851                           ;stkvar	_sign @ sp[(-56)+42]
 17852  0110CC  0EF2               	movlw	-14
 17853  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 17854  0110D4  0EF3               	movlw	-13
 17855  0110D6  50E3               	movf	plusw1,w,c
 17856  0110D8  1001               	iorwf	btemp^0,w,c
 17857  0110DA  A4D8               	btfss	status,2,c
 17858  0110DC  D002               	goto	l12268
 17859  0110DE  0E2B               	movlw	43
 17860  0110E0  D001               	goto	L18
 17861  0110E2                     l12268:
 17862  0110E2  0E2D               	movlw	45
 17863  0110E4                     L18:
 17864  0110E4  6E0B               	movwf	(btemp+10)^0,c
 17865  0110E6  0E00               	movlw	0
 17866  0110E8  6E0C               	movwf	(btemp+11)^0,c
 17867                           
 17868                           ;stkvar	_efgtoa$5526 @ sp[(-56)+4]
 17869  0110EA  0ECC               	movlw	-52
 17870  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17871  0110F2  0ECD               	movlw	-51
 17872  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 17873                           
 17874                           ;stkvar	_efgtoa$5526 @ sp[(-56)+4]
 17875                           ;stkvar	_i @ sp[(-56)+36]
 17876  0110FA  0EEC               	movlw	-20
 17877  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 17878  011102  0EED               	movlw	-19
 17879  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 17880  01110A  0E97               	movlw	low _dbuf
 17881  01110C  240B               	addwf	(btemp+10)^0,w,c
 17882  01110E  6ED9               	movwf	fsr2l,c
 17883  011110  0E02               	movlw	high _dbuf
 17884  011112  200C               	addwfc	(btemp+11)^0,w,c
 17885  011114  6EDA               	movwf	fsr2h,c
 17886  011116  0ECC               	movlw	-52
 17887  011118  006F FF8F FFDF     	movff	plusw1,indf2
 17888                           
 17889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 17890                           ;stkvar	_w @ sp[(-56)+38]
 17891  01111E  50E1               	movf	fsr1l,w,c
 17892  011120  0FEE               	addlw	-18
 17893  011122  6ED9               	movwf	fsr2l,c
 17894  011124  50E2               	movf	fsr1h,w,c
 17895  011126  6EDA               	movwf	fsr2h,c
 17896  011128  0EFF               	movlw	255
 17897  01112A  22DA               	addwfc	fsr2h,f,c
 17898  01112C  06DE               	decf	postinc2,f,c
 17899  01112E  0E00               	movlw	0
 17900  011130  5ADD               	subwfb	postdec2,f,c
 17901                           
 17902                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 17903                           ;stkvar	_i @ sp[(-56)+36]
 17904  011132  50E1               	movf	fsr1l,w,c
 17905  011134  0FEC               	addlw	-20
 17906  011136  6ED9               	movwf	fsr2l,c
 17907  011138  50E2               	movf	fsr1h,w,c
 17908  01113A  6EDA               	movwf	fsr2h,c
 17909  01113C  0EFF               	movlw	255
 17910  01113E  22DA               	addwfc	fsr2h,f,c
 17911  011140  06DE               	decf	postinc2,f,c
 17912  011142  0E00               	movlw	0
 17913  011144  5ADD               	subwfb	postdec2,f,c
 17914  011146  0EBF               	movlw	191
 17915  011148  6E0B               	movwf	(btemp+10)^0,c
 17916  01114A  0EFF               	movlw	255
 17917  01114C  6E0C               	movwf	(btemp+11)^0,c
 17918                           
 17919                           ;stkvar	_c @ sp[(-56)+-7]
 17920  01114E  0EC1               	movlw	-63
 17921  011150  50E3               	movf	plusw1,w,c
 17922  011152  6E09               	movwf	(btemp+8)^0,c
 17923  011154  6A0A               	clrf	(btemp+9)^0,c
 17924  011156  500B               	movf	(btemp+10)^0,w,c
 17925  011158  2609               	addwf	(btemp+8)^0,f,c
 17926  01115A  500C               	movf	(btemp+11)^0,w,c
 17927  01115C  220A               	addwfc	(btemp+9)^0,f,c
 17928  01115E  500A               	movf	(btemp+9)^0,w,c
 17929  011160  E106               	bnz	u11540
 17930  011162  0E1A               	movlw	26
 17931  011164  5C09               	subwf	(btemp+8)^0,w,c
 17932  011166  B0D8               	btfsc	status,0,c
 17933  011168  D002               	goto	u11540
 17934  01116A  0E01               	movlw	1
 17935  01116C  D001               	goto	u11550
 17936  01116E                     u11540:
 17937  01116E  0E00               	movlw	0
 17938  011170                     u11550:
 17939  011170  6E0B               	movwf	(btemp+10)^0,c
 17940  011172  6A0C               	clrf	(btemp+11)^0,c
 17941                           
 17942                           ;stkvar	_efgtoa$5528 @ sp[(-56)+0]
 17943  011174  0EC8               	movlw	-56
 17944  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17945  01117C  0EC9               	movlw	-55
 17946  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17947                           
 17948                           ;stkvar	_efgtoa$5528 @ sp[(-56)+0]
 17949  011184  0EC8               	movlw	-56
 17950  011186  006F FF8C  F001    	movff	plusw1,btemp
 17951  01118C  0EC9               	movlw	-55
 17952  01118E  50E3               	movf	plusw1,w,c
 17953  011190  1001               	iorwf	btemp^0,w,c
 17954  011192  A4D8               	btfss	status,2,c
 17955  011194  D002               	goto	l12284
 17956  011196  0E65               	movlw	101
 17957  011198  D001               	goto	L19
 17958  01119A                     l12284:
 17959  01119A  0E45               	movlw	69
 17960  01119C                     L19:
 17961  01119C  6E0B               	movwf	(btemp+10)^0,c
 17962  01119E  0E00               	movlw	0
 17963  0111A0  6E0C               	movwf	(btemp+11)^0,c
 17964                           
 17965                           ;stkvar	_efgtoa$5527 @ sp[(-56)+2]
 17966  0111A2  0ECA               	movlw	-54
 17967  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17968  0111AA  0ECB               	movlw	-53
 17969  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17970                           
 17971                           ;stkvar	_efgtoa$5527 @ sp[(-56)+2]
 17972                           ;stkvar	_i @ sp[(-56)+36]
 17973  0111B2  0EEC               	movlw	-20
 17974  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 17975  0111BA  0EED               	movlw	-19
 17976  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 17977  0111C2  0E97               	movlw	low _dbuf
 17978  0111C4  240B               	addwf	(btemp+10)^0,w,c
 17979  0111C6  6ED9               	movwf	fsr2l,c
 17980  0111C8  0E02               	movlw	high _dbuf
 17981  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 17982  0111CC  6EDA               	movwf	fsr2h,c
 17983  0111CE  0ECA               	movlw	-54
 17984  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 17985                           
 17986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 17987                           ;stkvar	_w @ sp[(-56)+38]
 17988  0111D6  50E1               	movf	fsr1l,w,c
 17989  0111D8  0FEE               	addlw	-18
 17990  0111DA  6ED9               	movwf	fsr2l,c
 17991  0111DC  50E2               	movf	fsr1h,w,c
 17992  0111DE  6EDA               	movwf	fsr2h,c
 17993  0111E0  0EFF               	movlw	255
 17994  0111E2  22DA               	addwfc	fsr2h,f,c
 17995  0111E4  06DE               	decf	postinc2,f,c
 17996  0111E6  0E00               	movlw	0
 17997  0111E8  5ADD               	subwfb	postdec2,f,c
 17998                           
 17999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 18000                           ;stkvar	_i @ sp[(-56)+36]
 18001  0111EA  0EEC               	movlw	-20
 18002  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 18003  0111F2  0EED               	movlw	-19
 18004  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 18005  0111FA  0E97               	movlw	low _dbuf
 18006  0111FC  240B               	addwf	(btemp+10)^0,w,c
 18007  0111FE  6E09               	movwf	(btemp+8)^0,c
 18008  011200  0E02               	movlw	high _dbuf
 18009  011202  200C               	addwfc	(btemp+11)^0,w,c
 18010  011204  6E0A               	movwf	(btemp+9)^0,c
 18011  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 18012  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 18013                           
 18014                           ;stkvar	_n @ sp[(-58)+32]
 18015  011212  0E97               	movlw	low _dbuf
 18016  011214  6E0B               	movwf	(btemp+10)^0,c
 18017  011216  0E02               	movlw	high _dbuf
 18018  011218  6E0C               	movwf	(btemp+11)^0,c
 18019  01121A  0EE6               	movlw	-26
 18020  01121C  50E3               	movf	plusw1,w,c
 18021  01121E  260B               	addwf	(btemp+10)^0,f,c
 18022  011220  0EE7               	movlw	-25
 18023  011222  50E3               	movf	plusw1,w,c
 18024  011224  220C               	addwfc	(btemp+11)^0,f,c
 18025  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18026  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 18027  011232  ECCF  F0D1         	call	_strcpy	;wreg free
 18028  011236  EF16  F081         	goto	l12036
 18029  01123A                     l2194:
 18030                           
 18031                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 18032  01123A  0EC1               	movlw	193
 18033  01123C  26E1               	addwf	fsr1l,f,c
 18034  01123E  0EFF               	movlw	255
 18035  011240  22E2               	addwfc	fsr1h,f,c
 18036  011242  0012               	return		;funcret
 18037  011244                     __end_of_efgtoa:
 18038                           	opt callstack 0
 18039                           
 18040 ;; *************** function _tolower *****************
 18041 ;; Defined at:
 18042 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 18043 ;; Parameters:    Size  Location     Type
 18044 ;;  c               2  [STACK] int 
 18045 ;; Auto vars:     Size  Location     Type
 18046 ;;		None
 18047 ;; Return value:  Size  Location     Type
 18048 ;;                  2  [STACK] int 
 18049 ;; Registers used:
 18050 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 18051 ;; Tracked objects:
 18052 ;;		On entry : 0/0
 18053 ;;		On exit  : 0/0
 18054 ;;		Unchanged: 0/0
 18055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18060 ;;Total ram usage:        0 bytes
 18061 ;; Hardware stack levels used:    1
 18062 ;; Hardware stack levels required when called:   16
 18063 ;; This function calls:
 18064 ;;		_isupper
 18065 ;; This function is called by:
 18066 ;;		_efgtoa
 18067 ;;		_vfpfcnvrt
 18068 ;; This function uses a reentrant model
 18069 ;;
 18070                           
 18071                           	psect	text58
 18072  01AD3A                     __ptext58:
 18073                           	opt callstack 0
 18074  01AD3A                     _tolower:
 18075                           	opt callstack 0
 18076                           
 18077                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18078  01AD3A  52E6               	movf	postinc1,f,c
 18079  01AD3C  52E6               	movf	postinc1,f,c
 18080                           
 18081                           ;stkvar	_c @ sp[(-2)+-2]
 18082                           
 18083                           ;incstack = 0
 18084 ;; hardware stack exceeded
 18085  01AD3E  0EFC               	movlw	-4
 18086  01AD40  50E3               	movf	plusw1,w,c
 18087  01AD42  0FBF               	addlw	191
 18088  01AD44  6E0B               	movwf	(btemp+10)^0,c
 18089  01AD46  0EFD               	movlw	-3
 18090  01AD48  006F FF8C  F00C    	movff	plusw1,btemp+11
 18091  01AD4E  0EFF               	movlw	255
 18092  01AD50  220C               	addwfc	(btemp+11)^0,f,c
 18093  01AD52  500C               	movf	(btemp+11)^0,w,c
 18094  01AD54  E106               	bnz	u6080
 18095  01AD56  0E1A               	movlw	26
 18096  01AD58  5C0B               	subwf	(btemp+10)^0,w,c
 18097  01AD5A  B0D8               	btfsc	status,0,c
 18098  01AD5C  D002               	goto	u6080
 18099  01AD5E  0E01               	movlw	1
 18100  01AD60  D001               	goto	u6090
 18101  01AD62                     u6080:
 18102  01AD62  0E00               	movlw	0
 18103  01AD64                     u6090:
 18104  01AD64  6E0B               	movwf	(btemp+10)^0,c
 18105  01AD66  6A0C               	clrf	(btemp+11)^0,c
 18106                           
 18107                           ;stkvar	_tolower$6347 @ sp[(-2)+0]
 18108  01AD68  0EFE               	movlw	-2
 18109  01AD6A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18110  01AD70  0EFF               	movlw	-1
 18111  01AD72  0060  F033  FFE3   	movff	btemp+11,plusw1
 18112                           
 18113                           ;stkvar	_tolower$6347 @ sp[(-2)+0]
 18114  01AD78  0EFE               	movlw	-2
 18115  01AD7A  006F FF8C  F001    	movff	plusw1,btemp
 18116  01AD80  0EFF               	movlw	-1
 18117  01AD82  50E3               	movf	plusw1,w,c
 18118  01AD84  1001               	iorwf	btemp^0,w,c
 18119  01AD86  B4D8               	btfsc	status,2,c
 18120  01AD88  D00D               	goto	l8044
 18121                           
 18122                           ;stkvar	_c @ sp[(-2)+-2]
 18123  01AD8A  0EFC               	movlw	-4
 18124  01AD8C  006F FF8C  F001    	movff	plusw1,btemp
 18125  01AD92  0EFD               	movlw	-3
 18126  01AD94  006F FF8C  F002    	movff	plusw1,btemp+1
 18127  01AD9A  0E20               	movlw	32
 18128  01AD9C  1201               	iorwf	btemp^0,f,c
 18129  01AD9E  0E00               	movlw	0
 18130  01ADA0  1202               	iorwf	(btemp+1)^0,f,c
 18131  01ADA2  D008               	goto	l3466
 18132  01ADA4                     l8044:
 18133                           
 18134                           ;stkvar	_c @ sp[(-2)+-2]
 18135  01ADA4  0EFC               	movlw	-4
 18136  01ADA6  006F FF8C  F001    	movff	plusw1,btemp
 18137  01ADAC  0EFD               	movlw	-3
 18138  01ADAE  006F FF8C  F002    	movff	plusw1,btemp+1
 18139  01ADB4                     l3466:
 18140                           
 18141                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18142  01ADB4  52E5               	movf	postdec1,f,c
 18143  01ADB6  52E5               	movf	postdec1,f,c
 18144  01ADB8  52E5               	movf	postdec1,f,c
 18145  01ADBA  52E5               	movf	postdec1,f,c
 18146  01ADBC  0012               	return		;funcret
 18147  01ADBE                     __end_of_tolower:
 18148                           	opt callstack 0
 18149                           
 18150 ;; *************** function _isupper *****************
 18151 ;; Defined at:
 18152 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 18153 ;; Parameters:    Size  Location     Type
 18154 ;;  c               2  [STACK] int 
 18155 ;; Auto vars:     Size  Location     Type
 18156 ;;		None
 18157 ;; Return value:  Size  Location     Type
 18158 ;;                  2  [STACK] int 
 18159 ;; Registers used:
 18160 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 18161 ;; Tracked objects:
 18162 ;;		On entry : 0/0
 18163 ;;		On exit  : 0/0
 18164 ;;		Unchanged: 0/0
 18165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18170 ;;Total ram usage:        0 bytes
 18171 ;; Hardware stack levels used:    1
 18172 ;; Hardware stack levels required when called:   15
 18173 ;; This function calls:
 18174 ;;		Nothing
 18175 ;; This function is called by:
 18176 ;;		_efgtoa
 18177 ;;		_xtoa
 18178 ;;		_vfpfcnvrt
 18179 ;;		_tolower
 18180 ;; This function uses a reentrant model
 18181 ;;
 18182                           
 18183                           	psect	text59
 18184  01BA12                     __ptext59:
 18185                           	opt callstack 0
 18186  01BA12                     _isupper:
 18187                           	opt callstack 0
 18188                           
 18189                           ;stkvar	_c @ sp[(0)+-2]
 18190                           
 18191                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18192                           ;incstack = 0
 18193 ;; hardware stack exceeded
 18194  01BA12  0EFE               	movlw	-2
 18195  01BA14  50E3               	movf	plusw1,w,c
 18196  01BA16  0FBF               	addlw	191
 18197  01BA18  6E0B               	movwf	(btemp+10)^0,c
 18198  01BA1A  0EFF               	movlw	-1
 18199  01BA1C  006F FF8C  F00C    	movff	plusw1,btemp+11
 18200  01BA22  0EFF               	movlw	255
 18201  01BA24  220C               	addwfc	(btemp+11)^0,f,c
 18202  01BA26  500C               	movf	(btemp+11)^0,w,c
 18203  01BA28  E106               	bnz	u5430
 18204  01BA2A  0E1A               	movlw	26
 18205  01BA2C  5C0B               	subwf	(btemp+10)^0,w,c
 18206  01BA2E  B0D8               	btfsc	status,0,c
 18207  01BA30  D002               	goto	u5430
 18208  01BA32  0E01               	movlw	1
 18209  01BA34  D001               	goto	u5440
 18210  01BA36                     u5430:
 18211  01BA36  0E00               	movlw	0
 18212  01BA38                     u5440:
 18213  01BA38  6E01               	movwf	btemp^0,c
 18214  01BA3A  6A02               	clrf	(btemp+1)^0,c
 18215                           
 18216                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18217  01BA3C  52E5               	movf	postdec1,f,c
 18218  01BA3E  52E5               	movf	postdec1,f,c
 18219  01BA40  0012               	return		;funcret
 18220  01BA42                     __end_of_isupper:
 18221                           	opt callstack 0
 18222                           
 18223 ;; *************** function _strcpy *****************
 18224 ;; Defined at:
 18225 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 18226 ;; Parameters:    Size  Location     Type
 18227 ;;  dest            2  [STACK] PTR unsigned char 
 18228 ;;		 -> dbuf(80), 
 18229 ;;  src             2  [STACK] PTR const unsigned char 
 18230 ;;		 -> STR_70(4), STR_69(4), STR_66(4), STR_65(4), 
 18231 ;;		 -> dbuf(80), 
 18232 ;; Auto vars:     Size  Location     Type
 18233 ;;  d               2  [STACK] PTR unsigned char 
 18234 ;;		 -> dbuf(80), 
 18235 ;;  s               2  [STACK] PTR const unsigned char 
 18236 ;;		 -> STR_70(4), STR_69(4), STR_66(4), STR_65(4), 
 18237 ;;		 -> dbuf(80), 
 18238 ;; Return value:  Size  Location     Type
 18239 ;;                  2  [STACK] PTR unsigned char 
 18240 ;; Registers used:
 18241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 18242 ;; Tracked objects:
 18243 ;;		On entry : 0/0
 18244 ;;		On exit  : 0/0
 18245 ;;		Unchanged: 0/0
 18246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18251 ;;Total ram usage:        0 bytes
 18252 ;; Hardware stack levels used:    1
 18253 ;; Hardware stack levels required when called:   15
 18254 ;; This function calls:
 18255 ;;		Nothing
 18256 ;; This function is called by:
 18257 ;;		_efgtoa
 18258 ;; This function uses a reentrant model
 18259 ;;
 18260                           
 18261                           	psect	text60
 18262  01A39E                     __ptext60:
 18263                           	opt callstack 0
 18264  01A39E                     _strcpy:
 18265                           	opt callstack 0
 18266                           
 18267                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18268  01A39E  52E6               	movf	postinc1,f,c
 18269  01A3A0  52E6               	movf	postinc1,f,c
 18270  01A3A2  52E6               	movf	postinc1,f,c
 18271  01A3A4  52E6               	movf	postinc1,f,c
 18272                           
 18273                           ;stkvar	_src @ sp[(-4)+-4]
 18274                           
 18275                           ;incstack = 0
 18276 ;; hardware stack exceeded
 18277  01A3A6  0EF8               	movlw	-8
 18278  01A3A8  006F FF8C  F00B    	movff	plusw1,btemp+10
 18279  01A3AE  0EF9               	movlw	-7
 18280  01A3B0  006F FF8C  F00C    	movff	plusw1,btemp+11
 18281                           
 18282                           ;stkvar	_s @ sp[(-4)+2]
 18283  01A3B6  0EFF               	movlw	-1
 18284  01A3B8  0060  F033  FFE3   	movff	btemp+11,plusw1
 18285  01A3BE  0EFE               	movlw	-2
 18286  01A3C0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18287                           
 18288                           ;stkvar	_dest @ sp[(-4)+-2]
 18289  01A3C6  0EFA               	movlw	-6
 18290  01A3C8  006F FF8C  F00B    	movff	plusw1,btemp+10
 18291  01A3CE  0EFB               	movlw	-5
 18292  01A3D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 18293                           
 18294                           ;stkvar	_d @ sp[(-4)+0]
 18295  01A3D6  0EFD               	movlw	-3
 18296  01A3D8  0060  F033  FFE3   	movff	btemp+11,plusw1
 18297  01A3DE  0EFC               	movlw	-4
 18298  01A3E0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18299  01A3E6                     l11898:
 18300                           
 18301                           ;stkvar	_s @ sp[(-4)+2]
 18302  01A3E6  50E1               	movf	fsr1l,w,c
 18303  01A3E8  0FFE               	addlw	-2
 18304  01A3EA  6ED9               	movwf	fsr2l,c
 18305  01A3EC  50E2               	movf	fsr1h,w,c
 18306  01A3EE  6EDA               	movwf	fsr2h,c
 18307  01A3F0  0EFF               	movlw	255
 18308  01A3F2  22DA               	addwfc	fsr2h,f,c
 18309  01A3F4  006F FF7C  F00B    	movff	indf2,btemp+10
 18310  01A3FA  0E01               	movlw	1
 18311  01A3FC  26DE               	addwf	postinc2,f,c
 18312  01A3FE  006F FF7C  F00C    	movff	indf2,btemp+11
 18313  01A404  0E00               	movlw	0
 18314  01A406  22DD               	addwfc	postdec2,f,c
 18315  01A408  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 18316  01A40E  0060  F033  FFF7   	movff	btemp+11,tblptrh
 18317  01A414  0E00               	movlw	low (__mediumconst shr (0+16))
 18318  01A416  6EF8               	movwf	tblptru,c
 18319                           
 18320                           ;stkvar	_d @ sp[(-4)+0]
 18321  01A418  50E1               	movf	fsr1l,w,c
 18322  01A41A  0FFC               	addlw	-4
 18323  01A41C  6ED9               	movwf	fsr2l,c
 18324  01A41E  50E2               	movf	fsr1h,w,c
 18325  01A420  6EDA               	movwf	fsr2h,c
 18326  01A422  0EFF               	movlw	255
 18327  01A424  22DA               	addwfc	fsr2h,f,c
 18328  01A426  006F FF7C  F00B    	movff	indf2,btemp+10
 18329  01A42C  0E01               	movlw	1
 18330  01A42E  26DE               	addwf	postinc2,f,c
 18331  01A430  006F FF7C  F00C    	movff	indf2,btemp+11
 18332  01A436  0E00               	movlw	0
 18333  01A438  22DD               	addwfc	postdec2,f,c
 18334  01A43A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 18335  01A440  0060  F033  FFDA   	movff	btemp+11,fsr2h
 18336  01A446  0E1F               	movlw	(high __ramtop+-1)
 18337  01A448  64F7               	cpfsgt	tblptrh,c
 18338  01A44A  D003               	bra	u10847
 18339  01A44C  0008               	tblrd		*
 18340  01A44E  50F5               	movf	tablat,w,c
 18341  01A450  D007               	bra	u10840
 18342  01A452                     u10847:
 18343  01A452  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18344  01A458  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18345  01A45E  50EF               	movf	indf0,w,c
 18346  01A460                     u10840:
 18347  01A460  6EDF               	movwf	indf2,c
 18348  01A462  50DF               	movf	indf2,w,c
 18349  01A464  A4D8               	btfss	status,2,c
 18350  01A466  D7BF               	goto	l11898
 18351                           
 18352                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 18353  01A468  0EF8               	movlw	248
 18354  01A46A  26E1               	addwf	fsr1l,f,c
 18355  01A46C  0EFF               	movlw	255
 18356  01A46E  22E2               	addwfc	fsr1h,f,c
 18357  01A470  0012               	return		;funcret
 18358  01A472                     __end_of_strcpy:
 18359                           	opt callstack 0
 18360                           
 18361 ;; *************** function _floorf *****************
 18362 ;; Defined at:
 18363 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 18364 ;; Parameters:    Size  Location     Type
 18365 ;;  x               4  [STACK] float 
 18366 ;; Auto vars:     Size  Location     Type
 18367 ;;  u               4  [STACK] struct .
 18368 ;;  m               4  [STACK] unsigned long 
 18369 ;;  e               2  [STACK] int 
 18370 ;; Return value:  Size  Location     Type
 18371 ;;                  4  [STACK] float 
 18372 ;; Registers used:
 18373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 18374 ;; Tracked objects:
 18375 ;;		On entry : 0/0
 18376 ;;		On exit  : 0/0
 18377 ;;		Unchanged: 0/0
 18378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18383 ;;Total ram usage:        0 bytes
 18384 ;; Hardware stack levels used:    1
 18385 ;; Hardware stack levels required when called:   15
 18386 ;; This function calls:
 18387 ;;		Nothing
 18388 ;; This function is called by:
 18389 ;;		_efgtoa
 18390 ;; This function uses a reentrant model
 18391 ;;
 18392                           
 18393                           	psect	text61
 18394  01647C                     __ptext61:
 18395                           	opt callstack 0
 18396  01647C                     _floorf:
 18397                           	opt callstack 0
 18398                           
 18399                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 18400  01647C  0E0A               	movlw	10
 18401  01647E  26E1               	addwf	fsr1l,f,c
 18402  016480  0E00               	movlw	0
 18403  016482  22E2               	addwfc	fsr1h,f,c
 18404                           
 18405                           ;incstack = 0
 18406 ;; hardware stack exceeded
 18407  016484  0060  F1E8  F009   	movff	floorf@F524,btemp+8
 18408  01648A  0060  F1EC  F00A   	movff	floorf@F524+1,btemp+9
 18409  016490  0060  F1F0  F00B   	movff	floorf@F524+2,btemp+10
 18410  016496  0060  F1F4  F00C   	movff	floorf@F524+3,btemp+11
 18411                           
 18412                           ;stkvar	_u @ sp[(-10)+0]
 18413  01649C  0EF6               	movlw	-10
 18414  01649E  0060  F027  FFE3   	movff	btemp+8,plusw1
 18415  0164A4  0EF7               	movlw	-9
 18416  0164A6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18417  0164AC  0EF8               	movlw	-8
 18418  0164AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18419  0164B4  0EF9               	movlw	-7
 18420  0164B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 18421                           
 18422                           ;stkvar	_x @ sp[(-10)+-4]
 18423  0164BC  0EF2               	movlw	-14
 18424  0164BE  006F FF8C  F009    	movff	plusw1,btemp+8
 18425  0164C4  0EF3               	movlw	-13
 18426  0164C6  006F FF8C  F00A    	movff	plusw1,btemp+9
 18427  0164CC  0EF4               	movlw	-12
 18428  0164CE  006F FF8C  F00B    	movff	plusw1,btemp+10
 18429  0164D4  0EF5               	movlw	-11
 18430  0164D6  006F FF8C  F00C    	movff	plusw1,btemp+11
 18431                           
 18432                           ;stkvar	_u @ sp[(-10)+0]
 18433  0164DC  0EF6               	movlw	-10
 18434  0164DE  0060  F027  FFE3   	movff	btemp+8,plusw1
 18435  0164E4  0EF7               	movlw	-9
 18436  0164E6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18437  0164EC  0EF8               	movlw	-8
 18438  0164EE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18439  0164F4  0EF9               	movlw	-7
 18440  0164F6  0060  F033  FFE3   	movff	btemp+11,plusw1
 18441  0164FC  0E81               	movlw	129
 18442  0164FE  6E0B               	movwf	(btemp+10)^0,c
 18443  016500  0EFF               	movlw	255
 18444  016502  6E0C               	movwf	(btemp+11)^0,c
 18445                           
 18446                           ;stkvar	_u @ sp[(-10)+0]
 18447  016504  0EF6               	movlw	-10
 18448  016506  006F FF8C  F005    	movff	plusw1,btemp+4
 18449  01650C  0EF7               	movlw	-9
 18450  01650E  006F FF8C  F006    	movff	plusw1,btemp+5
 18451  016514  0EF8               	movlw	-8
 18452  016516  006F FF8C  F007    	movff	plusw1,btemp+6
 18453  01651C  0EF9               	movlw	-7
 18454  01651E  006F FF8C  F008    	movff	plusw1,btemp+7
 18455  016524  0E18               	movlw	24
 18456  016526  D005               	goto	u6110
 18457  016528                     u6115:
 18458  016528  90D8               	bcf	status,0,c
 18459  01652A  3208               	rrcf	(btemp+7)^0,f,c
 18460  01652C  3207               	rrcf	(btemp+6)^0,f,c
 18461  01652E  3206               	rrcf	(btemp+5)^0,f,c
 18462  016530  3205               	rrcf	(btemp+4)^0,f,c
 18463  016532                     u6110:
 18464  016532  2EE8               	decfsz	wreg,f,c
 18465  016534  D7F9               	goto	u6115
 18466  016536  0060  F014  F009   	movff	btemp+4,btemp+8
 18467  01653C  0060  F018  F00A   	movff	btemp+5,btemp+9
 18468  016542  0EFF               	movlw	255
 18469  016544  1609               	andwf	(btemp+8)^0,f,c
 18470  016546  0E00               	movlw	0
 18471  016548  160A               	andwf	(btemp+9)^0,f,c
 18472  01654A  500B               	movf	(btemp+10)^0,w,c
 18473  01654C  2609               	addwf	(btemp+8)^0,f,c
 18474  01654E  500C               	movf	(btemp+11)^0,w,c
 18475  016550  220A               	addwfc	(btemp+9)^0,f,c
 18476                           
 18477                           ;stkvar	_e @ sp[(-10)+8]
 18478  016552  0EFE               	movlw	-2
 18479  016554  0060  F027  FFE3   	movff	btemp+8,plusw1
 18480  01655A  0EFF               	movlw	-1
 18481  01655C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18482                           
 18483                           ;stkvar	_e @ sp[(-10)+8]
 18484  016562  0EFF               	movlw	-1
 18485  016564  BEE3               	btfsc	plusw1,7,c
 18486  016566  D019               	goto	l8058
 18487  016568  0EFF               	movlw	-1
 18488  01656A  50E3               	movf	plusw1,w,c
 18489  01656C  E108               	bnz	u6120
 18490  01656E  0EFE               	movlw	-2
 18491  016570  006F FF8C  F001    	movff	plusw1,btemp
 18492  016576  0E17               	movlw	23
 18493  016578  5E01               	subwf	btemp^0,f,c
 18494  01657A  A0D8               	btfss	status,0,c
 18495  01657C  D00E               	goto	l8058
 18496  01657E                     u6120:
 18497                           
 18498                           ;stkvar	_x @ sp[(-10)+-4]
 18499  01657E  0EF2               	movlw	-14
 18500  016580  006F FF8C  F001    	movff	plusw1,btemp
 18501  016586  0EF3               	movlw	-13
 18502  016588  006F FF8C  F002    	movff	plusw1,btemp+1
 18503  01658E  0EF4               	movlw	-12
 18504  016590  006F FF8C  F003    	movff	plusw1,btemp+2
 18505  016596  0EF5               	movlw	-11
 18506  016598  D11F               	goto	L20
 18507  01659A                     l8058:
 18508                           
 18509                           ;stkvar	_e @ sp[(-10)+8]
 18510  01659A  0EFF               	movlw	-1
 18511  01659C  BEE3               	btfsc	plusw1,7,c
 18512  01659E  D0B4               	goto	l8074
 18513                           
 18514                           ;stkvar	_e @ sp[(-10)+8]
 18515  0165A0  0EFE               	movlw	-2
 18516  0165A2  006F FF8C  F00C    	movff	plusw1,btemp+11
 18517  0165A8  0EFF               	movlw	255
 18518  0165AA  6E05               	movwf	(btemp+4)^0,c
 18519  0165AC  0EFF               	movlw	255
 18520  0165AE  6E06               	movwf	(btemp+5)^0,c
 18521  0165B0  0E7F               	movlw	127
 18522  0165B2  6E07               	movwf	(btemp+6)^0,c
 18523  0165B4  0E00               	movlw	0
 18524  0165B6  6E08               	movwf	(btemp+7)^0,c
 18525  0165B8                     u6145:
 18526  0165B8  660C               	tstfsz	(btemp+11)^0,c
 18527  0165BA  D001               	goto	u6146
 18528  0165BC  D007               	goto	u6147
 18529  0165BE                     u6146:
 18530  0165BE  3408               	rlcf	(btemp+7)^0,w,c
 18531  0165C0  3208               	rrcf	(btemp+7)^0,f,c
 18532  0165C2  3207               	rrcf	(btemp+6)^0,f,c
 18533  0165C4  3206               	rrcf	(btemp+5)^0,f,c
 18534  0165C6  3205               	rrcf	(btemp+4)^0,f,c
 18535  0165C8  2E0C               	decfsz	(btemp+11)^0,f,c
 18536  0165CA  D7F6               	goto	u6145
 18537  0165CC                     u6147:
 18538                           
 18539                           ;stkvar	_m @ sp[(-10)+4]
 18540  0165CC  0EFA               	movlw	-6
 18541  0165CE  0060  F017  FFE3   	movff	btemp+4,plusw1
 18542  0165D4  0EFB               	movlw	-5
 18543  0165D6  0060  F01B  FFE3   	movff	btemp+5,plusw1
 18544  0165DC  0EFC               	movlw	-4
 18545  0165DE  0060  F01F  FFE3   	movff	btemp+6,plusw1
 18546  0165E4  0EFD               	movlw	-3
 18547  0165E6  0060  F023  FFE3   	movff	btemp+7,plusw1
 18548                           
 18549                           ;stkvar	_m @ sp[(-10)+4]
 18550                           ;stkvar	_u @ sp[(-10)+0]
 18551  0165EC  0EF6               	movlw	-10
 18552  0165EE  006F FF8C  F009    	movff	plusw1,btemp+8
 18553  0165F4  0EF7               	movlw	-9
 18554  0165F6  006F FF8C  F00A    	movff	plusw1,btemp+9
 18555  0165FC  0EF8               	movlw	-8
 18556  0165FE  006F FF8C  F00B    	movff	plusw1,btemp+10
 18557  016604  0EF9               	movlw	-7
 18558  016606  006F FF8C  F00C    	movff	plusw1,btemp+11
 18559  01660C  0EFA               	movlw	-6
 18560  01660E  50E3               	movf	plusw1,w,c
 18561  016610  1609               	andwf	(btemp+8)^0,f,c
 18562  016612  0EFB               	movlw	-5
 18563  016614  50E3               	movf	plusw1,w,c
 18564  016616  160A               	andwf	(btemp+9)^0,f,c
 18565  016618  0EFC               	movlw	-4
 18566  01661A  50E3               	movf	plusw1,w,c
 18567  01661C  160B               	andwf	(btemp+10)^0,f,c
 18568  01661E  0EFD               	movlw	-3
 18569  016620  50E3               	movf	plusw1,w,c
 18570  016622  160C               	andwf	(btemp+11)^0,f,c
 18571  016624  5009               	movf	(btemp+8)^0,w,c
 18572  016626  100A               	iorwf	(btemp+9)^0,w,c
 18573  016628  100B               	iorwf	(btemp+10)^0,w,c
 18574  01662A  100C               	iorwf	(btemp+11)^0,w,c
 18575  01662C  B4D8               	btfsc	status,2,c
 18576  01662E  D7A7               	goto	u6120
 18577                           
 18578                           ;stkvar	_u @ sp[(-10)+0]
 18579  016630  0EF6               	movlw	-10
 18580  016632  006F FF8C  F009    	movff	plusw1,btemp+8
 18581  016638  0EF7               	movlw	-9
 18582  01663A  006F FF8C  F00A    	movff	plusw1,btemp+9
 18583  016640  0EF8               	movlw	-8
 18584  016642  006F FF8C  F00B    	movff	plusw1,btemp+10
 18585  016648  0EF9               	movlw	-7
 18586  01664A  006F FF8C  F00C    	movff	plusw1,btemp+11
 18587  016650  0E20               	movlw	32
 18588  016652  D005               	goto	u6160
 18589  016654                     u6165:
 18590  016654  90D8               	bcf	status,0,c
 18591  016656  320C               	rrcf	(btemp+11)^0,f,c
 18592  016658  320B               	rrcf	(btemp+10)^0,f,c
 18593  01665A  320A               	rrcf	(btemp+9)^0,f,c
 18594  01665C  3209               	rrcf	(btemp+8)^0,f,c
 18595  01665E                     u6160:
 18596  01665E  2EE8               	decfsz	wreg,f,c
 18597  016660  D7F9               	goto	u6165
 18598  016662  5009               	movf	(btemp+8)^0,w,c
 18599  016664  B4D8               	btfsc	status,2,c
 18600  016666  D028               	goto	l8072
 18601                           
 18602                           ;stkvar	_m @ sp[(-10)+4]
 18603                           ;stkvar	_u @ sp[(-10)+0]
 18604  016668  0EF6               	movlw	-10
 18605  01666A  50E3               	movf	plusw1,w,c
 18606  01666C  6E01               	movwf	btemp^0,c
 18607  01666E  0EFA               	movlw	-6
 18608  016670  50E3               	movf	plusw1,w,c
 18609  016672  2601               	addwf	btemp^0,f,c
 18610  016674  0EF6               	movlw	-10
 18611  016676  0060  F007  FFE3   	movff	btemp,plusw1
 18612  01667C  0EF7               	movlw	-9
 18613  01667E  50E3               	movf	plusw1,w,c
 18614  016680  6E01               	movwf	btemp^0,c
 18615  016682  0EFB               	movlw	-5
 18616  016684  50E3               	movf	plusw1,w,c
 18617  016686  2201               	addwfc	btemp^0,f,c
 18618  016688  0EF7               	movlw	-9
 18619  01668A  0060  F007  FFE3   	movff	btemp,plusw1
 18620  016690  0EF8               	movlw	-8
 18621  016692  50E3               	movf	plusw1,w,c
 18622  016694  6E01               	movwf	btemp^0,c
 18623  016696  0EFC               	movlw	-4
 18624  016698  50E3               	movf	plusw1,w,c
 18625  01669A  2201               	addwfc	btemp^0,f,c
 18626  01669C  0EF8               	movlw	-8
 18627  01669E  0060  F007  FFE3   	movff	btemp,plusw1
 18628  0166A4  0EF9               	movlw	-7
 18629  0166A6  50E3               	movf	plusw1,w,c
 18630  0166A8  6E01               	movwf	btemp^0,c
 18631  0166AA  0EFD               	movlw	-3
 18632  0166AC  50E3               	movf	plusw1,w,c
 18633  0166AE  2201               	addwfc	btemp^0,f,c
 18634  0166B0  0EF9               	movlw	-7
 18635  0166B2  0060  F007  FFE3   	movff	btemp,plusw1
 18636  0166B8                     l8072:
 18637                           
 18638                           ;stkvar	_m @ sp[(-10)+4]
 18639  0166B8  0EFA               	movlw	-6
 18640  0166BA  006F FF8C  F009    	movff	plusw1,btemp+8
 18641  0166C0  0EFB               	movlw	-5
 18642  0166C2  006F FF8C  F00A    	movff	plusw1,btemp+9
 18643  0166C8  0EFC               	movlw	-4
 18644  0166CA  006F FF8C  F00B    	movff	plusw1,btemp+10
 18645  0166D0  0EFD               	movlw	-3
 18646  0166D2  006F FF8C  F00C    	movff	plusw1,btemp+11
 18647  0166D8  1C09               	comf	(btemp+8)^0,w,c
 18648  0166DA  6E05               	movwf	(btemp+4)^0,c
 18649  0166DC  1C0A               	comf	(btemp+9)^0,w,c
 18650  0166DE  6E06               	movwf	(btemp+5)^0,c
 18651  0166E0  1C0B               	comf	(btemp+10)^0,w,c
 18652  0166E2  6E07               	movwf	(btemp+6)^0,c
 18653  0166E4  1C0C               	comf	(btemp+11)^0,w,c
 18654  0166E6  6E08               	movwf	(btemp+7)^0,c
 18655                           
 18656                           ;stkvar	_u @ sp[(-10)+0]
 18657  0166E8  50E1               	movf	fsr1l,w,c
 18658  0166EA  0FF6               	addlw	-10
 18659  0166EC  6ED9               	movwf	fsr2l,c
 18660  0166EE  50E2               	movf	fsr1h,w,c
 18661  0166F0  6EDA               	movwf	fsr2h,c
 18662  0166F2  0EFF               	movlw	255
 18663  0166F4  22DA               	addwfc	fsr2h,f,c
 18664  0166F6  5005               	movf	(btemp+4)^0,w,c
 18665  0166F8  16DE               	andwf	postinc2,f,c
 18666  0166FA  5006               	movf	(btemp+5)^0,w,c
 18667  0166FC  16DE               	andwf	postinc2,f,c
 18668  0166FE  5007               	movf	(btemp+6)^0,w,c
 18669  016700  16DE               	andwf	postinc2,f,c
 18670  016702  5008               	movf	(btemp+7)^0,w,c
 18671  016704  16DE               	andwf	postinc2,f,c
 18672  016706  D05B               	goto	l8082
 18673  016708                     l8074:
 18674                           
 18675                           ;stkvar	_u @ sp[(-10)+0]
 18676  016708  0EF6               	movlw	-10
 18677  01670A  006F FF8C  F009    	movff	plusw1,btemp+8
 18678  016710  0EF7               	movlw	-9
 18679  016712  006F FF8C  F00A    	movff	plusw1,btemp+9
 18680  016718  0EF8               	movlw	-8
 18681  01671A  006F FF8C  F00B    	movff	plusw1,btemp+10
 18682  016720  0EF9               	movlw	-7
 18683  016722  006F FF8C  F00C    	movff	plusw1,btemp+11
 18684  016728  0E20               	movlw	32
 18685  01672A  D005               	goto	u6180
 18686  01672C                     u6185:
 18687  01672C  90D8               	bcf	status,0,c
 18688  01672E  320C               	rrcf	(btemp+11)^0,f,c
 18689  016730  320B               	rrcf	(btemp+10)^0,f,c
 18690  016732  320A               	rrcf	(btemp+9)^0,f,c
 18691  016734  3209               	rrcf	(btemp+8)^0,f,c
 18692  016736                     u6180:
 18693  016736  2EE8               	decfsz	wreg,f,c
 18694  016738  D7F9               	goto	u6185
 18695  01673A  6609               	tstfsz	(btemp+8)^0,c
 18696  01673C  D009               	goto	l8078
 18697                           
 18698                           ;stkvar	_u @ sp[(-10)+0]
 18699  01673E  0EF6               	movlw	-10
 18700  016740  6AE3               	clrf	plusw1,c
 18701  016742  0EF7               	movlw	-9
 18702  016744  6AE3               	clrf	plusw1,c
 18703  016746  0EF8               	movlw	-8
 18704  016748  6AE3               	clrf	plusw1,c
 18705  01674A  0EF9               	movlw	-7
 18706  01674C  6AE3               	clrf	plusw1,c
 18707  01674E  D037               	goto	l8082
 18708  016750                     l8078:
 18709                           
 18710                           ;stkvar	_u @ sp[(-10)+0]
 18711  016750  0EF6               	movlw	-10
 18712  016752  006F FF8C  F009    	movff	plusw1,btemp+8
 18713  016758  0EF7               	movlw	-9
 18714  01675A  006F FF8C  F00A    	movff	plusw1,btemp+9
 18715  016760  0EF8               	movlw	-8
 18716  016762  006F FF8C  F00B    	movff	plusw1,btemp+10
 18717  016768  0EF9               	movlw	-7
 18718  01676A  006F FF8C  F00C    	movff	plusw1,btemp+11
 18719  016770  90D8               	bcf	status,0,c
 18720  016772  3409               	rlcf	(btemp+8)^0,w,c
 18721  016774  6E05               	movwf	(btemp+4)^0,c
 18722  016776  340A               	rlcf	(btemp+9)^0,w,c
 18723  016778  6E06               	movwf	(btemp+5)^0,c
 18724  01677A  340B               	rlcf	(btemp+10)^0,w,c
 18725  01677C  6E07               	movwf	(btemp+6)^0,c
 18726  01677E  340C               	rlcf	(btemp+11)^0,w,c
 18727  016780  6E08               	movwf	(btemp+7)^0,c
 18728  016782  5005               	movf	(btemp+4)^0,w,c
 18729  016784  1006               	iorwf	(btemp+5)^0,w,c
 18730  016786  1007               	iorwf	(btemp+6)^0,w,c
 18731  016788  1008               	iorwf	(btemp+7)^0,w,c
 18732  01678A  B4D8               	btfsc	status,2,c
 18733  01678C  D018               	goto	l8082
 18734  01678E  0E00               	movlw	0
 18735  016790  6E09               	movwf	(btemp+8)^0,c
 18736  016792  0E00               	movlw	0
 18737  016794  6E0A               	movwf	(btemp+9)^0,c
 18738  016796  0E80               	movlw	128
 18739  016798  6E0B               	movwf	(btemp+10)^0,c
 18740  01679A  0EBF               	movlw	191
 18741  01679C  6E0C               	movwf	(btemp+11)^0,c
 18742                           
 18743                           ;stkvar	_u @ sp[(-10)+0]
 18744  01679E  0EF6               	movlw	-10
 18745  0167A0  0060  F027  FFE3   	movff	btemp+8,plusw1
 18746  0167A6  0EF7               	movlw	-9
 18747  0167A8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18748  0167AE  0EF8               	movlw	-8
 18749  0167B0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18750  0167B6  0EF9               	movlw	-7
 18751  0167B8  0060  F033  FFE3   	movff	btemp+11,plusw1
 18752  0167BE                     l8082:
 18753                           
 18754                           ;stkvar	_u @ sp[(-10)+0]
 18755  0167BE  0EF6               	movlw	-10
 18756  0167C0  006F FF8C  F001    	movff	plusw1,btemp
 18757  0167C6  0EF7               	movlw	-9
 18758  0167C8  006F FF8C  F002    	movff	plusw1,btemp+1
 18759  0167CE  0EF8               	movlw	-8
 18760  0167D0  006F FF8C  F003    	movff	plusw1,btemp+2
 18761  0167D6  0EF9               	movlw	-7
 18762  0167D8                     L20:
 18763  0167D8  006F FF8C  F004    	movff	plusw1,btemp+3
 18764                           
 18765                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18766  0167DE  0EF2               	movlw	242
 18767  0167E0  26E1               	addwf	fsr1l,f,c
 18768  0167E2  0EFF               	movlw	255
 18769  0167E4  22E2               	addwfc	fsr1h,f,c
 18770  0167E6  0012               	return		;funcret
 18771  0167E8                     __end_of_floorf:
 18772                           	opt callstack 0
 18773                           
 18774 ;; *************** function ___fpclassifyf *****************
 18775 ;; Defined at:
 18776 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 18777 ;; Parameters:    Size  Location     Type
 18778 ;;  x               4  [STACK] float 
 18779 ;; Auto vars:     Size  Location     Type
 18780 ;;  u               4  [STACK] struct .
 18781 ;;  e               2  [STACK] int 
 18782 ;; Return value:  Size  Location     Type
 18783 ;;                  2  [STACK] int 
 18784 ;; Registers used:
 18785 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 18786 ;; Tracked objects:
 18787 ;;		On entry : 0/0
 18788 ;;		On exit  : 0/0
 18789 ;;		Unchanged: 0/0
 18790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18795 ;;Total ram usage:        0 bytes
 18796 ;; Hardware stack levels used:    1
 18797 ;; Hardware stack levels required when called:   15
 18798 ;; This function calls:
 18799 ;;		Nothing
 18800 ;; This function is called by:
 18801 ;;		_efgtoa
 18802 ;; This function uses a reentrant model
 18803 ;;
 18804                           
 18805                           	psect	text62
 18806  0189DA                     __ptext62:
 18807                           	opt callstack 0
 18808  0189DA                     ___fpclassifyf:
 18809                           	opt callstack 0
 18810                           
 18811                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18812  0189DA  0E06               	movlw	6
 18813  0189DC  26E1               	addwf	fsr1l,f,c
 18814  0189DE  0E00               	movlw	0
 18815  0189E0  22E2               	addwfc	fsr1h,f,c
 18816                           
 18817                           ;incstack = 0
 18818 ;; hardware stack exceeded
 18819  0189E2  0060  F208  F009   	movff	___fpclassifyf@F463,btemp+8
 18820  0189E8  0060  F20C  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 18821  0189EE  0060  F210  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 18822  0189F4  0060  F214  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 18823                           
 18824                           ;stkvar	_u @ sp[(-6)+0]
 18825  0189FA  0EFA               	movlw	-6
 18826  0189FC  0060  F027  FFE3   	movff	btemp+8,plusw1
 18827  018A02  0EFB               	movlw	-5
 18828  018A04  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18829  018A0A  0EFC               	movlw	-4
 18830  018A0C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18831  018A12  0EFD               	movlw	-3
 18832  018A14  0060  F033  FFE3   	movff	btemp+11,plusw1
 18833                           
 18834                           ;stkvar	_x @ sp[(-6)+-4]
 18835  018A1A  0EF6               	movlw	-10
 18836  018A1C  006F FF8C  F009    	movff	plusw1,btemp+8
 18837  018A22  0EF7               	movlw	-9
 18838  018A24  006F FF8C  F00A    	movff	plusw1,btemp+9
 18839  018A2A  0EF8               	movlw	-8
 18840  018A2C  006F FF8C  F00B    	movff	plusw1,btemp+10
 18841  018A32  0EF9               	movlw	-7
 18842  018A34  006F FF8C  F00C    	movff	plusw1,btemp+11
 18843                           
 18844                           ;stkvar	_u @ sp[(-6)+0]
 18845  018A3A  0EFA               	movlw	-6
 18846  018A3C  0060  F027  FFE3   	movff	btemp+8,plusw1
 18847  018A42  0EFB               	movlw	-5
 18848  018A44  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18849  018A4A  0EFC               	movlw	-4
 18850  018A4C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18851  018A52  0EFD               	movlw	-3
 18852  018A54  0060  F033  FFE3   	movff	btemp+11,plusw1
 18853                           
 18854                           ;stkvar	_u @ sp[(-6)+0]
 18855  018A5A  0EFA               	movlw	-6
 18856  018A5C  006F FF8C  F009    	movff	plusw1,btemp+8
 18857  018A62  0EFB               	movlw	-5
 18858  018A64  006F FF8C  F00A    	movff	plusw1,btemp+9
 18859  018A6A  0EFC               	movlw	-4
 18860  018A6C  006F FF8C  F00B    	movff	plusw1,btemp+10
 18861  018A72  0EFD               	movlw	-3
 18862  018A74  006F FF8C  F00C    	movff	plusw1,btemp+11
 18863  018A7A  0E18               	movlw	24
 18864  018A7C  D005               	goto	u5990
 18865  018A7E                     u5995:
 18866  018A7E  90D8               	bcf	status,0,c
 18867  018A80  320C               	rrcf	(btemp+11)^0,f,c
 18868  018A82  320B               	rrcf	(btemp+10)^0,f,c
 18869  018A84  320A               	rrcf	(btemp+9)^0,f,c
 18870  018A86  3209               	rrcf	(btemp+8)^0,f,c
 18871  018A88                     u5990:
 18872  018A88  2EE8               	decfsz	wreg,f,c
 18873  018A8A  D7F9               	goto	u5995
 18874  018A8C  0060  F024  F007   	movff	btemp+8,btemp+6
 18875  018A92  0060  F028  F008   	movff	btemp+9,btemp+7
 18876  018A98  0EFF               	movlw	255
 18877  018A9A  1607               	andwf	(btemp+6)^0,f,c
 18878  018A9C  0E00               	movlw	0
 18879  018A9E  1608               	andwf	(btemp+7)^0,f,c
 18880                           
 18881                           ;stkvar	_e @ sp[(-6)+4]
 18882  018AA0  0EFE               	movlw	-2
 18883  018AA2  0060  F01F  FFE3   	movff	btemp+6,plusw1
 18884  018AA8  0EFF               	movlw	-1
 18885  018AAA  0060  F023  FFE3   	movff	btemp+7,plusw1
 18886                           
 18887                           ;stkvar	_e @ sp[(-6)+4]
 18888  018AB0  0EFE               	movlw	-2
 18889  018AB2  006F FF8C  F001    	movff	plusw1,btemp
 18890  018AB8  0EFF               	movlw	-1
 18891  018ABA  50E3               	movf	plusw1,w,c
 18892  018ABC  1001               	iorwf	btemp^0,w,c
 18893  018ABE  A4D8               	btfss	status,2,c
 18894  018AC0  D023               	goto	l8020
 18895                           
 18896                           ;stkvar	_u @ sp[(-6)+0]
 18897  018AC2  0EFA               	movlw	-6
 18898  018AC4  006F FF8C  F009    	movff	plusw1,btemp+8
 18899  018ACA  0EFB               	movlw	-5
 18900  018ACC  006F FF8C  F00A    	movff	plusw1,btemp+9
 18901  018AD2  0EFC               	movlw	-4
 18902  018AD4  006F FF8C  F00B    	movff	plusw1,btemp+10
 18903  018ADA  0EFD               	movlw	-3
 18904  018ADC  006F FF8C  F00C    	movff	plusw1,btemp+11
 18905  018AE2  90D8               	bcf	status,0,c
 18906  018AE4  3409               	rlcf	(btemp+8)^0,w,c
 18907  018AE6  6E05               	movwf	(btemp+4)^0,c
 18908  018AE8  340A               	rlcf	(btemp+9)^0,w,c
 18909  018AEA  6E06               	movwf	(btemp+5)^0,c
 18910  018AEC  340B               	rlcf	(btemp+10)^0,w,c
 18911  018AEE  6E07               	movwf	(btemp+6)^0,c
 18912  018AF0  340C               	rlcf	(btemp+11)^0,w,c
 18913  018AF2  6E08               	movwf	(btemp+7)^0,c
 18914  018AF4  5005               	movf	(btemp+4)^0,w,c
 18915  018AF6  1006               	iorwf	(btemp+5)^0,w,c
 18916  018AF8  1007               	iorwf	(btemp+6)^0,w,c
 18917  018AFA  1008               	iorwf	(btemp+7)^0,w,c
 18918  018AFC  A4D8               	btfss	status,2,c
 18919  018AFE  D002               	goto	l8016
 18920  018B00  0E02               	movlw	2
 18921  018B02  D02E               	goto	L21
 18922  018B04                     l8016:
 18923  018B04  0E03               	movlw	3
 18924  018B06  D02C               	goto	L21
 18925  018B08                     l8020:
 18926                           
 18927                           ;stkvar	_e @ sp[(-6)+4]
 18928  018B08  0EFE               	movlw	-2
 18929  018B0A  28E3               	incf	plusw1,w,c
 18930  018B0C  E128               	bnz	l8026
 18931  018B0E  0EFF               	movlw	-1
 18932  018B10  50E3               	movf	plusw1,w,c
 18933  018B12  A4D8               	btfss	status,2,c
 18934  018B14  D024               	goto	l8026
 18935                           
 18936                           ;stkvar	_u @ sp[(-6)+0]
 18937  018B16  0EFA               	movlw	-6
 18938  018B18  006F FF8C  F009    	movff	plusw1,btemp+8
 18939  018B1E  0EFB               	movlw	-5
 18940  018B20  006F FF8C  F00A    	movff	plusw1,btemp+9
 18941  018B26  0EFC               	movlw	-4
 18942  018B28  006F FF8C  F00B    	movff	plusw1,btemp+10
 18943  018B2E  0EFD               	movlw	-3
 18944  018B30  006F FF8C  F00C    	movff	plusw1,btemp+11
 18945  018B36  0E09               	movlw	9
 18946  018B38                     u6035:
 18947  018B38  90D8               	bcf	status,0,c
 18948  018B3A  3609               	rlcf	(btemp+8)^0,f,c
 18949  018B3C  360A               	rlcf	(btemp+9)^0,f,c
 18950  018B3E  360B               	rlcf	(btemp+10)^0,f,c
 18951  018B40  360C               	rlcf	(btemp+11)^0,f,c
 18952  018B42  2EE8               	decfsz	wreg,f,c
 18953  018B44  D7F9               	goto	u6035
 18954  018B46  5009               	movf	(btemp+8)^0,w,c
 18955  018B48  100A               	iorwf	(btemp+9)^0,w,c
 18956  018B4A  100B               	iorwf	(btemp+10)^0,w,c
 18957  018B4C  100C               	iorwf	(btemp+11)^0,w,c
 18958  018B4E  A4D8               	btfss	status,2,c
 18959  018B50  D002               	goto	u6040
 18960  018B52  0E01               	movlw	1
 18961  018B54  D001               	goto	u6050
 18962  018B56                     u6040:
 18963  018B56  0E00               	movlw	0
 18964  018B58                     u6050:
 18965  018B58  6E01               	movwf	btemp^0,c
 18966  018B5A  6A02               	clrf	(btemp+1)^0,c
 18967  018B5C  D004               	goto	l3076
 18968  018B5E                     l8026:
 18969  018B5E  0E04               	movlw	4
 18970  018B60                     L21:
 18971  018B60  6E01               	movwf	btemp^0,c
 18972  018B62  0E00               	movlw	0
 18973  018B64  6E02               	movwf	(btemp+1)^0,c
 18974  018B66                     l3076:
 18975                           
 18976                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 18977  018B66  0EF6               	movlw	246
 18978  018B68  26E1               	addwf	fsr1l,f,c
 18979  018B6A  0EFF               	movlw	255
 18980  018B6C  22E2               	addwfc	fsr1h,f,c
 18981  018B6E  0012               	return		;funcret
 18982  018B70                     __end_of___fpclassifyf:
 18983                           	opt callstack 0
 18984                           
 18985 ;; *************** function ___fltol *****************
 18986 ;; Defined at:
 18987 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 18988 ;; Parameters:    Size  Location     Type
 18989 ;;  f1              4  [STACK] int 
 18990 ;; Auto vars:     Size  Location     Type
 18991 ;;  exp1            1  [STACK] unsigned char 
 18992 ;;  sign1           1  [STACK] unsigned char 
 18993 ;; Return value:  Size  Location     Type
 18994 ;;                  4  [STACK] long 
 18995 ;; Registers used:
 18996 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 18997 ;; Tracked objects:
 18998 ;;		On entry : 0/0
 18999 ;;		On exit  : 0/0
 19000 ;;		Unchanged: 0/0
 19001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19006 ;;Total ram usage:        0 bytes
 19007 ;; Hardware stack levels used:    1
 19008 ;; Hardware stack levels required when called:   15
 19009 ;; This function calls:
 19010 ;;		Nothing
 19011 ;; This function is called by:
 19012 ;;		_main
 19013 ;;		_calc_bsoc
 19014 ;;		_init_bsoc
 19015 ;;		_Volts_to_SOC
 19016 ;;		_efgtoa
 19017 ;; This function uses a reentrant model
 19018 ;;
 19019                           
 19020                           	psect	text63
 19021  018E76                     __ptext63:
 19022                           	opt callstack 0
 19023  018E76                     ___fltol:
 19024                           	opt callstack 0
 19025                           
 19026                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19027  018E76  52E6               	movf	postinc1,f,c
 19028  018E78  52E6               	movf	postinc1,f,c
 19029                           
 19030                           ;stkvar	_f1 @ sp[(-2)+-4]
 19031                           
 19032                           ;incstack = 0
 19033 ;; hardware stack exceeded
 19034  018E7A  0EFA               	movlw	-6
 19035  018E7C  006F FF8C  F009    	movff	plusw1,btemp+8
 19036  018E82  0EFB               	movlw	-5
 19037  018E84  006F FF8C  F00A    	movff	plusw1,btemp+9
 19038  018E8A  0EFC               	movlw	-4
 19039  018E8C  006F FF8C  F00B    	movff	plusw1,btemp+10
 19040  018E92  0EFD               	movlw	-3
 19041  018E94  006F FF8C  F00C    	movff	plusw1,btemp+11
 19042  018E9A  0E18               	movlw	24
 19043  018E9C  D005               	goto	u7200
 19044  018E9E                     u7205:
 19045  018E9E  90D8               	bcf	status,0,c
 19046  018EA0  320C               	rrcf	(btemp+11)^0,f,c
 19047  018EA2  320B               	rrcf	(btemp+10)^0,f,c
 19048  018EA4  320A               	rrcf	(btemp+9)^0,f,c
 19049  018EA6  3209               	rrcf	(btemp+8)^0,f,c
 19050  018EA8                     u7200:
 19051  018EA8  2EE8               	decfsz	wreg,f,c
 19052  018EAA  D7F9               	goto	u7205
 19053                           
 19054                           ;stkvar	_exp1 @ sp[(-2)+0]
 19055  018EAC  0EFE               	movlw	-2
 19056  018EAE  0060  F027  FFE3   	movff	btemp+8,plusw1
 19057  018EB4  0EFE               	movlw	-2
 19058  018EB6  50E3               	movf	plusw1,w,c
 19059  018EB8  A4D8               	btfss	status,2,c
 19060  018EBA  D006               	goto	l8646
 19061  018EBC                     u7210:
 19062  018EBC  0E00               	movlw	0
 19063  018EBE  6E01               	movwf	btemp^0,c
 19064  018EC0  6A02               	clrf	(btemp+1)^0,c
 19065  018EC2  6A03               	clrf	(btemp+2)^0,c
 19066  018EC4  6A04               	clrf	(btemp+3)^0,c
 19067  018EC6  D08B               	goto	l2692
 19068  018EC8                     l8646:
 19069                           
 19070                           ;stkvar	_f1 @ sp[(-2)+-4]
 19071  018EC8  0EFA               	movlw	-6
 19072  018ECA  006F FF8C  F009    	movff	plusw1,btemp+8
 19073  018ED0  0EFB               	movlw	-5
 19074  018ED2  006F FF8C  F00A    	movff	plusw1,btemp+9
 19075  018ED8  0EFC               	movlw	-4
 19076  018EDA  006F FF8C  F00B    	movff	plusw1,btemp+10
 19077  018EE0  0EFD               	movlw	-3
 19078  018EE2  006F FF8C  F00C    	movff	plusw1,btemp+11
 19079  018EE8  0E20               	movlw	32
 19080  018EEA  D005               	goto	u7220
 19081  018EEC                     u7225:
 19082  018EEC  90D8               	bcf	status,0,c
 19083  018EEE  320C               	rrcf	(btemp+11)^0,f,c
 19084  018EF0  320B               	rrcf	(btemp+10)^0,f,c
 19085  018EF2  320A               	rrcf	(btemp+9)^0,f,c
 19086  018EF4  3209               	rrcf	(btemp+8)^0,f,c
 19087  018EF6                     u7220:
 19088  018EF6  2EE8               	decfsz	wreg,f,c
 19089  018EF8  D7F9               	goto	u7225
 19090                           
 19091                           ;stkvar	_sign1 @ sp[(-2)+1]
 19092  018EFA  0EFF               	movlw	-1
 19093  018EFC  0060  F027  FFE3   	movff	btemp+8,plusw1
 19094                           
 19095                           ;stkvar	_f1 @ sp[(-2)+-4]
 19096  018F02  0EFC               	movlw	-4
 19097  018F04  8EE3               	bsf	plusw1,7,c
 19098                           
 19099                           ;stkvar	_f1 @ sp[(-2)+-4]
 19100  018F06  50E1               	movf	fsr1l,w,c
 19101  018F08  0FFA               	addlw	-6
 19102  018F0A  6ED9               	movwf	fsr2l,c
 19103  018F0C  50E2               	movf	fsr1h,w,c
 19104  018F0E  6EDA               	movwf	fsr2h,c
 19105  018F10  0EFF               	movlw	255
 19106  018F12  22DA               	addwfc	fsr2h,f,c
 19107  018F14  0EFF               	movlw	255
 19108  018F16  16DE               	andwf	postinc2,f,c
 19109  018F18  0EFF               	movlw	255
 19110  018F1A  16DE               	andwf	postinc2,f,c
 19111  018F1C  0EFF               	movlw	255
 19112  018F1E  16DE               	andwf	postinc2,f,c
 19113  018F20  0E00               	movlw	0
 19114  018F22  16DE               	andwf	postinc2,f,c
 19115                           
 19116                           ;stkvar	_exp1 @ sp[(-2)+0]
 19117  018F24  0EFE               	movlw	-2
 19118  018F26  006F FF8C  F001    	movff	plusw1,btemp
 19119  018F2C  0E96               	movlw	150
 19120  018F2E  5E01               	subwf	btemp^0,f,c
 19121  018F30  0EFE               	movlw	-2
 19122  018F32  0060  F007  FFE3   	movff	btemp,plusw1
 19123                           
 19124                           ;stkvar	_exp1 @ sp[(-2)+0]
 19125  018F38  0EFE               	movlw	-2
 19126  018F3A  AEE3               	btfss	plusw1,7,c
 19127  018F3C  D014               	goto	l8664
 19128                           
 19129                           ;stkvar	_exp1 @ sp[(-2)+0]
 19130  018F3E  0EFE               	movlw	-2
 19131  018F40  50E3               	movf	plusw1,w,c
 19132  018F42  0A80               	xorlw	128
 19133  018F44  0F97               	addlw	151
 19134  018F46  A0D8               	btfss	status,0,c
 19135  018F48  D7B9               	goto	u7210
 19136  018F4A                     l8662:
 19137                           
 19138                           ;stkvar	_f1 @ sp[(-2)+-4]
 19139  018F4A  90D8               	bcf	status,0,c
 19140  018F4C  0EFD               	movlw	-3
 19141  018F4E  32E3               	rrcf	plusw1,f,c
 19142  018F50  0EFC               	movlw	-4
 19143  018F52  32E3               	rrcf	plusw1,f,c
 19144  018F54  0EFB               	movlw	-5
 19145  018F56  32E3               	rrcf	plusw1,f,c
 19146  018F58  0EFA               	movlw	-6
 19147  018F5A  32E3               	rrcf	plusw1,f,c
 19148                           
 19149                           ;stkvar	_exp1 @ sp[(-2)+0]
 19150  018F5C  0EFE               	movlw	-2
 19151  018F5E  2AE3               	incf	plusw1,f,c
 19152  018F60  B4D8               	btfsc	status,2,c
 19153  018F62  D018               	goto	u7270
 19154  018F64  D7F2               	goto	l8662
 19155  018F66                     l8664:
 19156                           
 19157                           ;stkvar	_exp1 @ sp[(-2)+0]
 19158  018F66  0EFE               	movlw	-2
 19159  018F68  006F FF8C  F001    	movff	plusw1,btemp
 19160  018F6E  0E1F               	movlw	31
 19161  018F70  6401               	cpfsgt	btemp^0,c
 19162  018F72  D00C               	goto	l8672
 19163  018F74  D7A3               	goto	u7210
 19164  018F76                     l8670:
 19165                           
 19166                           ;stkvar	_f1 @ sp[(-2)+-4]
 19167  018F76  90D8               	bcf	status,0,c
 19168  018F78  0EFA               	movlw	-6
 19169  018F7A  36E3               	rlcf	plusw1,f,c
 19170  018F7C  0EFB               	movlw	-5
 19171  018F7E  36E3               	rlcf	plusw1,f,c
 19172  018F80  0EFC               	movlw	-4
 19173  018F82  36E3               	rlcf	plusw1,f,c
 19174  018F84  0EFD               	movlw	-3
 19175  018F86  36E3               	rlcf	plusw1,f,c
 19176                           
 19177                           ;stkvar	_exp1 @ sp[(-2)+0]
 19178  018F88  0EFE               	movlw	-2
 19179  018F8A  06E3               	decf	plusw1,f,c
 19180  018F8C                     l8672:
 19181                           
 19182                           ;stkvar	_exp1 @ sp[(-2)+0]
 19183  018F8C  0EFE               	movlw	-2
 19184  018F8E  50E3               	movf	plusw1,w,c
 19185  018F90  A4D8               	btfss	status,2,c
 19186  018F92  D7F1               	goto	l8670
 19187  018F94                     u7270:
 19188                           
 19189                           ;stkvar	_sign1 @ sp[(-2)+1]
 19190  018F94  0EFF               	movlw	-1
 19191  018F96  50E3               	movf	plusw1,w,c
 19192  018F98  B4D8               	btfsc	status,2,c
 19193  018F9A  D011               	goto	u7290
 19194                           
 19195                           ;stkvar	_f1 @ sp[(-2)+-4]
 19196                           ;stkvar	_f1 @ sp[(-2)+-4]
 19197  018F9C  0EFA               	movlw	-6
 19198  018F9E  6CE3               	negf	plusw1,c
 19199  018FA0  0EFB               	movlw	-5
 19200  018FA2  1EE3               	comf	plusw1,f,c
 19201  018FA4  0EFC               	movlw	-4
 19202  018FA6  1EE3               	comf	plusw1,f,c
 19203  018FA8  0EFD               	movlw	-3
 19204  018FAA  1EE3               	comf	plusw1,f,c
 19205  018FAC  E308               	bnc	u7290
 19206  018FAE  0EFB               	movlw	-5
 19207  018FB0  2AE3               	incf	plusw1,f,c
 19208  018FB2  E305               	bnc	u7290
 19209  018FB4  0EFC               	movlw	-4
 19210  018FB6  2AE3               	incf	plusw1,f,c
 19211  018FB8  E302               	bnc	u7290
 19212  018FBA  0EFD               	movlw	-3
 19213  018FBC  2AE3               	incf	plusw1,f,c
 19214  018FBE                     u7290:
 19215                           
 19216                           ;stkvar	_f1 @ sp[(-2)+-4]
 19217  018FBE  0EFA               	movlw	-6
 19218  018FC0  006F FF8C  F001    	movff	plusw1,btemp
 19219  018FC6  0EFB               	movlw	-5
 19220  018FC8  006F FF8C  F002    	movff	plusw1,btemp+1
 19221  018FCE  0EFC               	movlw	-4
 19222  018FD0  006F FF8C  F003    	movff	plusw1,btemp+2
 19223  018FD6  0EFD               	movlw	-3
 19224  018FD8  006F FF8C  F004    	movff	plusw1,btemp+3
 19225  018FDE                     l2692:
 19226                           
 19227                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19228  018FDE  0EFA               	movlw	250
 19229  018FE0  26E1               	addwf	fsr1l,f,c
 19230  018FE2  0EFF               	movlw	255
 19231  018FE4  22E2               	addwfc	fsr1h,f,c
 19232  018FE6  0012               	return		;funcret
 19233  018FE8                     __end_of___fltol:
 19234                           	opt callstack 0
 19235                           
 19236 ;; *************** function ___flneg *****************
 19237 ;; Defined at:
 19238 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 19239 ;; Parameters:    Size  Location     Type
 19240 ;;  f1              4  [STACK] long 
 19241 ;; Auto vars:     Size  Location     Type
 19242 ;;		None
 19243 ;; Return value:  Size  Location     Type
 19244 ;;                  4  [STACK] long 
 19245 ;; Registers used:
 19246 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 19247 ;; Tracked objects:
 19248 ;;		On entry : 0/0
 19249 ;;		On exit  : 0/0
 19250 ;;		Unchanged: 0/0
 19251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19256 ;;Total ram usage:        0 bytes
 19257 ;; Hardware stack levels used:    1
 19258 ;; Hardware stack levels required when called:   15
 19259 ;; This function calls:
 19260 ;;		Nothing
 19261 ;; This function is called by:
 19262 ;;		_calc_bsoc
 19263 ;;		_efgtoa
 19264 ;; This function uses a reentrant model
 19265 ;;
 19266                           
 19267                           	psect	text64
 19268  01B478                     __ptext64:
 19269                           	opt callstack 0
 19270  01B478                     ___flneg:
 19271                           	opt callstack 0
 19272                           
 19273                           ;stkvar	_f1 @ sp[(0)+-4]
 19274                           
 19275                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19276                           ;incstack = 0
 19277 ;; hardware stack exceeded
 19278  01B478  0EFC               	movlw	-4
 19279  01B47A  50E3               	movf	plusw1,w,c
 19280  01B47C  E10A               	bnz	u7190
 19281  01B47E  0EFD               	movlw	-3
 19282  01B480  50E3               	movf	plusw1,w,c
 19283  01B482  E107               	bnz	u7190
 19284  01B484  0EFE               	movlw	-2
 19285  01B486  50E3               	movf	plusw1,w,c
 19286  01B488  E104               	bnz	u7190
 19287  01B48A  0EFF               	movlw	-1
 19288  01B48C  50E3               	movf	plusw1,w,c
 19289  01B48E  B4D8               	btfsc	status,2,c
 19290  01B490  D002               	goto	l8636
 19291  01B492                     u7190:
 19292                           
 19293                           ;stkvar	_f1 @ sp[(0)+-4]
 19294  01B492  0EFF               	movlw	-1
 19295  01B494  7EE3               	btg	plusw1,7,c
 19296  01B496                     l8636:
 19297                           
 19298                           ;stkvar	_f1 @ sp[(0)+-4]
 19299  01B496  0EFC               	movlw	-4
 19300  01B498  006F FF8C  F001    	movff	plusw1,btemp
 19301  01B49E  0EFD               	movlw	-3
 19302  01B4A0  006F FF8C  F002    	movff	plusw1,btemp+1
 19303  01B4A6  0EFE               	movlw	-2
 19304  01B4A8  006F FF8C  F003    	movff	plusw1,btemp+2
 19305  01B4AE  0EFF               	movlw	-1
 19306  01B4B0  006F FF8C  F004    	movff	plusw1,btemp+3
 19307                           
 19308                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19309  01B4B6  52E5               	movf	postdec1,f,c
 19310  01B4B8  52E5               	movf	postdec1,f,c
 19311  01B4BA  52E5               	movf	postdec1,f,c
 19312  01B4BC  52E5               	movf	postdec1,f,c
 19313  01B4BE  0012               	return		;funcret
 19314  01B4C0                     __end_of___flneg:
 19315                           	opt callstack 0
 19316                           
 19317 ;; *************** function ___fleq *****************
 19318 ;; Defined at:
 19319 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 19320 ;; Parameters:    Size  Location     Type
 19321 ;;  ff1             4  [STACK] long 
 19322 ;;  ff2             4  [STACK] long 
 19323 ;; Auto vars:     Size  Location     Type
 19324 ;;		None
 19325 ;; Return value:  Size  Location     Type
 19326 ;;		None               void
 19327 ;; Registers used:
 19328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19329 ;; Tracked objects:
 19330 ;;		On entry : 0/0
 19331 ;;		On exit  : 0/0
 19332 ;;		Unchanged: 0/0
 19333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19338 ;;Total ram usage:        0 bytes
 19339 ;; Hardware stack levels used:    1
 19340 ;; Hardware stack levels required when called:   15
 19341 ;; This function calls:
 19342 ;;		Nothing
 19343 ;; This function is called by:
 19344 ;;		_efgtoa
 19345 ;; This function uses a reentrant model
 19346 ;;
 19347                           
 19348                           	psect	text65
 19349  01A472                     __ptext65:
 19350                           	opt callstack 0
 19351  01A472                     ___fleq:
 19352                           	opt callstack 0
 19353                           
 19354                           ;stkvar	_ff1 @ sp[(0)+-4]
 19355                           
 19356                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19357                           ;incstack = 0
 19358 ;; hardware stack exceeded
 19359  01A472  50E1               	movf	fsr1l,w,c
 19360  01A474  0FFC               	addlw	-4
 19361  01A476  6ED9               	movwf	fsr2l,c
 19362  01A478  50E2               	movf	fsr1h,w,c
 19363  01A47A  6EDA               	movwf	fsr2h,c
 19364  01A47C  0EFF               	movlw	255
 19365  01A47E  22DA               	addwfc	fsr2h,f,c
 19366  01A480  0E00               	movlw	0
 19367  01A482  14DE               	andwf	postinc2,w,c
 19368  01A484  6E09               	movwf	(btemp+8)^0,c
 19369  01A486  0E00               	movlw	0
 19370  01A488  14DE               	andwf	postinc2,w,c
 19371  01A48A  6E0A               	movwf	(btemp+9)^0,c
 19372  01A48C  0E80               	movlw	128
 19373  01A48E  14DE               	andwf	postinc2,w,c
 19374  01A490  6E0B               	movwf	(btemp+10)^0,c
 19375  01A492  0E7F               	movlw	127
 19376  01A494  14DE               	andwf	postinc2,w,c
 19377  01A496  6E0C               	movwf	(btemp+11)^0,c
 19378  01A498  5009               	movf	(btemp+8)^0,w,c
 19379  01A49A  100A               	iorwf	(btemp+9)^0,w,c
 19380  01A49C  100B               	iorwf	(btemp+10)^0,w,c
 19381  01A49E  100C               	iorwf	(btemp+11)^0,w,c
 19382  01A4A0  A4D8               	btfss	status,2,c
 19383  01A4A2  D008               	goto	l8594
 19384                           
 19385                           ;stkvar	_ff1 @ sp[(0)+-4]
 19386  01A4A4  0EFC               	movlw	-4
 19387  01A4A6  6AE3               	clrf	plusw1,c
 19388  01A4A8  0EFD               	movlw	-3
 19389  01A4AA  6AE3               	clrf	plusw1,c
 19390  01A4AC  0EFE               	movlw	-2
 19391  01A4AE  6AE3               	clrf	plusw1,c
 19392  01A4B0  0EFF               	movlw	-1
 19393  01A4B2  6AE3               	clrf	plusw1,c
 19394  01A4B4                     l8594:
 19395                           
 19396                           ;stkvar	_ff2 @ sp[(0)+-8]
 19397  01A4B4  50E1               	movf	fsr1l,w,c
 19398  01A4B6  0FF8               	addlw	-8
 19399  01A4B8  6ED9               	movwf	fsr2l,c
 19400  01A4BA  50E2               	movf	fsr1h,w,c
 19401  01A4BC  6EDA               	movwf	fsr2h,c
 19402  01A4BE  0EFF               	movlw	255
 19403  01A4C0  22DA               	addwfc	fsr2h,f,c
 19404  01A4C2  0E00               	movlw	0
 19405  01A4C4  14DE               	andwf	postinc2,w,c
 19406  01A4C6  6E09               	movwf	(btemp+8)^0,c
 19407  01A4C8  0E00               	movlw	0
 19408  01A4CA  14DE               	andwf	postinc2,w,c
 19409  01A4CC  6E0A               	movwf	(btemp+9)^0,c
 19410  01A4CE  0E80               	movlw	128
 19411  01A4D0  14DE               	andwf	postinc2,w,c
 19412  01A4D2  6E0B               	movwf	(btemp+10)^0,c
 19413  01A4D4  0E7F               	movlw	127
 19414  01A4D6  14DE               	andwf	postinc2,w,c
 19415  01A4D8  6E0C               	movwf	(btemp+11)^0,c
 19416  01A4DA  5009               	movf	(btemp+8)^0,w,c
 19417  01A4DC  100A               	iorwf	(btemp+9)^0,w,c
 19418  01A4DE  100B               	iorwf	(btemp+10)^0,w,c
 19419  01A4E0  100C               	iorwf	(btemp+11)^0,w,c
 19420  01A4E2  A4D8               	btfss	status,2,c
 19421  01A4E4  D008               	goto	l8598
 19422                           
 19423                           ;stkvar	_ff2 @ sp[(0)+-8]
 19424  01A4E6  0EF8               	movlw	-8
 19425  01A4E8  6AE3               	clrf	plusw1,c
 19426  01A4EA  0EF9               	movlw	-7
 19427  01A4EC  6AE3               	clrf	plusw1,c
 19428  01A4EE  0EFA               	movlw	-6
 19429  01A4F0  6AE3               	clrf	plusw1,c
 19430  01A4F2  0EFB               	movlw	-5
 19431  01A4F4  6AE3               	clrf	plusw1,c
 19432  01A4F6                     l8598:
 19433                           
 19434                           ;stkvar	_ff2 @ sp[(0)+-8]
 19435                           ;stkvar	_ff1 @ sp[(0)+-4]
 19436  01A4F6  50E1               	movf	fsr1l,w,c
 19437  01A4F8  0FFC               	addlw	-4
 19438  01A4FA  6ED9               	movwf	fsr2l,c
 19439  01A4FC  50E2               	movf	fsr1h,w,c
 19440  01A4FE  6EDA               	movwf	fsr2h,c
 19441  01A500  0EFF               	movlw	255
 19442  01A502  22DA               	addwfc	fsr2h,f,c
 19443  01A504  0EF8               	movlw	-8
 19444  01A506  50E3               	movf	plusw1,w,c
 19445  01A508  18DE               	xorwf	postinc2,w,c
 19446  01A50A  E10D               	bnz	u7130
 19447  01A50C  0EF9               	movlw	-7
 19448  01A50E  50E3               	movf	plusw1,w,c
 19449  01A510  18DE               	xorwf	postinc2,w,c
 19450  01A512  E109               	bnz	u7130
 19451  01A514  0EFA               	movlw	-6
 19452  01A516  50E3               	movf	plusw1,w,c
 19453  01A518  18DE               	xorwf	postinc2,w,c
 19454  01A51A  E105               	bnz	u7130
 19455  01A51C  0EFB               	movlw	-5
 19456  01A51E  50E3               	movf	plusw1,w,c
 19457  01A520  18DE               	xorwf	postinc2,w,c
 19458  01A522  B4D8               	btfsc	status,2,c
 19459  01A524  D002               	goto	l8602
 19460  01A526                     u7130:
 19461  01A526  9001               	bcf	btemp& (0+255),0,c
 19462  01A528  D001               	goto	l2654
 19463  01A52A                     l8602:
 19464  01A52A  8001               	bsf	btemp& (0+255),0,c
 19465  01A52C                     l2654:
 19466                           
 19467                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 19468  01A52C  0EF8               	movlw	248
 19469  01A52E  26E1               	addwf	fsr1l,f,c
 19470  01A530  0EFF               	movlw	255
 19471  01A532  22E2               	addwfc	fsr1h,f,c
 19472  01A534  0012               	return		;funcret
 19473  01A536                     __end_of___fleq:
 19474                           	opt callstack 0
 19475                           
 19476 ;; *************** function ___awmod *****************
 19477 ;; Defined at:
 19478 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 19479 ;; Parameters:    Size  Location     Type
 19480 ;;  dividend        2  [STACK] int 
 19481 ;;  divisor         2  [STACK] int 
 19482 ;; Auto vars:     Size  Location     Type
 19483 ;;  sign            1  [STACK] unsigned char 
 19484 ;;  counter         1  [STACK] unsigned char 
 19485 ;; Return value:  Size  Location     Type
 19486 ;;                  2  [STACK] int 
 19487 ;; Registers used:
 19488 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19489 ;; Tracked objects:
 19490 ;;		On entry : 0/0
 19491 ;;		On exit  : 0/0
 19492 ;;		Unchanged: 0/0
 19493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19498 ;;Total ram usage:        0 bytes
 19499 ;; Hardware stack levels used:    1
 19500 ;; Hardware stack levels required when called:   15
 19501 ;; This function calls:
 19502 ;;		Nothing
 19503 ;; This function is called by:
 19504 ;;		_efgtoa
 19505 ;; This function uses a reentrant model
 19506 ;;
 19507                           
 19508                           	psect	text66
 19509  0199DE                     __ptext66:
 19510                           	opt callstack 0
 19511  0199DE                     ___awmod:
 19512                           	opt callstack 0
 19513                           
 19514                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19515  0199DE  52E6               	movf	postinc1,f,c
 19516  0199E0  52E6               	movf	postinc1,f,c
 19517                           
 19518                           ;stkvar	_sign @ sp[(-2)+0]
 19519                           
 19520                           ;incstack = 0
 19521 ;; hardware stack exceeded
 19522  0199E2  0EFE               	movlw	-2
 19523  0199E4  6AE3               	clrf	plusw1,c
 19524                           
 19525                           ;stkvar	_dividend @ sp[(-2)+-2]
 19526  0199E6  0EFD               	movlw	-3
 19527  0199E8  AEE3               	btfss	plusw1,7,c
 19528  0199EA  D009               	goto	l8560
 19529                           
 19530                           ;stkvar	_dividend @ sp[(-2)+-2]
 19531                           ;stkvar	_dividend @ sp[(-2)+-2]
 19532  0199EC  0EFC               	movlw	-4
 19533  0199EE  6CE3               	negf	plusw1,c
 19534  0199F0  0EFD               	movlw	-3
 19535  0199F2  1EE3               	comf	plusw1,f,c
 19536  0199F4  B0D8               	btfsc	status,0,c
 19537  0199F6  2AE3               	incf	plusw1,f,c
 19538                           
 19539                           ;stkvar	_sign @ sp[(-2)+0]
 19540  0199F8  0EFE               	movlw	-2
 19541  0199FA  6AE3               	clrf	plusw1,c
 19542  0199FC  2AE3               	incf	plusw1,f,c
 19543  0199FE                     l8560:
 19544                           
 19545                           ;stkvar	_divisor @ sp[(-2)+-4]
 19546  0199FE  0EFB               	movlw	-5
 19547  019A00  AEE3               	btfss	plusw1,7,c
 19548  019A02  D006               	goto	l8564
 19549                           
 19550                           ;stkvar	_divisor @ sp[(-2)+-4]
 19551                           ;stkvar	_divisor @ sp[(-2)+-4]
 19552  019A04  0EFA               	movlw	-6
 19553  019A06  6CE3               	negf	plusw1,c
 19554  019A08  0EFB               	movlw	-5
 19555  019A0A  1EE3               	comf	plusw1,f,c
 19556  019A0C  B0D8               	btfsc	status,0,c
 19557  019A0E  2AE3               	incf	plusw1,f,c
 19558  019A10                     l8564:
 19559                           
 19560                           ;stkvar	_divisor @ sp[(-2)+-4]
 19561  019A10  0EFA               	movlw	-6
 19562  019A12  006F FF8C  F001    	movff	plusw1,btemp
 19563  019A18  0EFB               	movlw	-5
 19564  019A1A  50E3               	movf	plusw1,w,c
 19565  019A1C  1001               	iorwf	btemp^0,w,c
 19566  019A1E  B4D8               	btfsc	status,2,c
 19567  019A20  D053               	goto	u7090
 19568                           
 19569                           ;stkvar	_counter @ sp[(-2)+1]
 19570  019A22  0EFF               	movlw	-1
 19571  019A24  6AE3               	clrf	plusw1,c
 19572  019A26  D012               	goto	L22
 19573  019A28                     l8568:
 19574                           
 19575                           ;stkvar	_divisor @ sp[(-2)+-4]
 19576  019A28  0EFA               	movlw	-6
 19577  019A2A  50E3               	movf	plusw1,w,c
 19578  019A2C  90D8               	bcf	status,0,c
 19579  019A2E  34E8               	rlcf	wreg,w,c
 19580  019A30  6E01               	movwf	btemp^0,c
 19581  019A32  0EFA               	movlw	-6
 19582  019A34  0060  F007  FFE3   	movff	btemp,plusw1
 19583  019A3A  0EFB               	movlw	-5
 19584  019A3C  50E3               	movf	plusw1,w,c
 19585  019A3E  34E8               	rlcf	wreg,w,c
 19586  019A40  6E01               	movwf	btemp^0,c
 19587  019A42  0EFB               	movlw	-5
 19588  019A44  0060  F007  FFE3   	movff	btemp,plusw1
 19589                           
 19590                           ;stkvar	_counter @ sp[(-2)+1]
 19591  019A4A  0EFF               	movlw	-1
 19592  019A4C                     L22:
 19593  019A4C  2AE3               	incf	plusw1,f,c
 19594                           
 19595                           ;stkvar	_divisor @ sp[(-2)+-4]
 19596  019A4E  0EFB               	movlw	-5
 19597  019A50  AEE3               	btfss	plusw1,7,c
 19598  019A52  D7EA               	goto	l8568
 19599  019A54                     u7070:
 19600                           
 19601                           ;stkvar	_divisor @ sp[(-2)+-4]
 19602  019A54  0EFA               	movlw	-6
 19603  019A56  006F FF8C  F00B    	movff	plusw1,btemp+10
 19604  019A5C  0EFB               	movlw	-5
 19605  019A5E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19606                           
 19607                           ;stkvar	_dividend @ sp[(-2)+-2]
 19608  019A64  0EFC               	movlw	-4
 19609  019A66  006F FF8C  F009    	movff	plusw1,btemp+8
 19610  019A6C  0EFD               	movlw	-3
 19611  019A6E  006F FF8C  F00A    	movff	plusw1,btemp+9
 19612  019A74  500B               	movf	(btemp+10)^0,w,c
 19613  019A76  5C09               	subwf	(btemp+8)^0,w,c
 19614  019A78  500C               	movf	(btemp+11)^0,w,c
 19615  019A7A  580A               	subwfb	(btemp+9)^0,w,c
 19616  019A7C  A0D8               	btfss	status,0,c
 19617  019A7E  D014               	goto	l8578
 19618                           
 19619                           ;stkvar	_divisor @ sp[(-2)+-4]
 19620                           ;stkvar	_dividend @ sp[(-2)+-2]
 19621  019A80  0EFC               	movlw	-4
 19622  019A82  50E3               	movf	plusw1,w,c
 19623  019A84  6E01               	movwf	btemp^0,c
 19624  019A86  0EFA               	movlw	-6
 19625  019A88  50E3               	movf	plusw1,w,c
 19626  019A8A  5E01               	subwf	btemp^0,f,c
 19627  019A8C  0EFC               	movlw	-4
 19628  019A8E  0060  F007  FFE3   	movff	btemp,plusw1
 19629  019A94  0EFD               	movlw	-3
 19630  019A96  50E3               	movf	plusw1,w,c
 19631  019A98  6E01               	movwf	btemp^0,c
 19632  019A9A  0EFB               	movlw	-5
 19633  019A9C  50E3               	movf	plusw1,w,c
 19634  019A9E  5A01               	subwfb	btemp^0,f,c
 19635  019AA0  0EFD               	movlw	-3
 19636  019AA2  0060  F007  FFE3   	movff	btemp,plusw1
 19637  019AA8                     l8578:
 19638                           
 19639                           ;stkvar	_divisor @ sp[(-2)+-4]
 19640  019AA8  90D8               	bcf	status,0,c
 19641  019AAA  0EFB               	movlw	-5
 19642  019AAC  32E3               	rrcf	plusw1,f,c
 19643  019AAE  0EFA               	movlw	-6
 19644  019AB0  32E3               	rrcf	plusw1,f,c
 19645                           
 19646                           ;stkvar	_counter @ sp[(-2)+1]
 19647  019AB2  0EFF               	movlw	-1
 19648  019AB4  50E3               	movf	plusw1,w,c
 19649  019AB6  6E01               	movwf	btemp^0,c
 19650  019AB8  0E01               	movlw	1
 19651  019ABA  5E01               	subwf	btemp^0,f,c
 19652  019ABC  0EFF               	movlw	-1
 19653  019ABE  0060  F007  FFE3   	movff	btemp,plusw1
 19654  019AC4  A4D8               	btfss	status,2,c
 19655  019AC6  D7C6               	goto	u7070
 19656  019AC8                     u7090:
 19657                           
 19658                           ;stkvar	_sign @ sp[(-2)+0]
 19659  019AC8  0EFE               	movlw	-2
 19660  019ACA  50E3               	movf	plusw1,w,c
 19661  019ACC  B4D8               	btfsc	status,2,c
 19662  019ACE  D006               	goto	l8586
 19663                           
 19664                           ;stkvar	_dividend @ sp[(-2)+-2]
 19665                           ;stkvar	_dividend @ sp[(-2)+-2]
 19666  019AD0  0EFC               	movlw	-4
 19667  019AD2  6CE3               	negf	plusw1,c
 19668  019AD4  0EFD               	movlw	-3
 19669  019AD6  1EE3               	comf	plusw1,f,c
 19670  019AD8  B0D8               	btfsc	status,0,c
 19671  019ADA  2AE3               	incf	plusw1,f,c
 19672  019ADC                     l8586:
 19673                           
 19674                           ;stkvar	_dividend @ sp[(-2)+-2]
 19675  019ADC  0EFC               	movlw	-4
 19676  019ADE  006F FF8C  F001    	movff	plusw1,btemp
 19677  019AE4  0EFD               	movlw	-3
 19678  019AE6  006F FF8C  F002    	movff	plusw1,btemp+1
 19679                           
 19680                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19681  019AEC  0EFA               	movlw	250
 19682  019AEE  26E1               	addwf	fsr1l,f,c
 19683  019AF0  0EFF               	movlw	255
 19684  019AF2  22E2               	addwfc	fsr1h,f,c
 19685  019AF4  0012               	return		;funcret
 19686  019AF6                     __end_of___awmod:
 19687                           	opt callstack 0
 19688                           
 19689 ;; *************** function ___awdiv *****************
 19690 ;; Defined at:
 19691 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 19692 ;; Parameters:    Size  Location     Type
 19693 ;;  dividend        2  [STACK] int 
 19694 ;;  divisor         2  [STACK] int 
 19695 ;; Auto vars:     Size  Location     Type
 19696 ;;  quotient        2  [STACK] int 
 19697 ;;  sign            1  [STACK] unsigned char 
 19698 ;;  counter         1  [STACK] unsigned char 
 19699 ;; Return value:  Size  Location     Type
 19700 ;;                  2  [STACK] int 
 19701 ;; Registers used:
 19702 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19703 ;; Tracked objects:
 19704 ;;		On entry : 0/0
 19705 ;;		On exit  : 0/0
 19706 ;;		Unchanged: 0/0
 19707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19712 ;;Total ram usage:        0 bytes
 19713 ;; Hardware stack levels used:    1
 19714 ;; Hardware stack levels required when called:   15
 19715 ;; This function calls:
 19716 ;;		Nothing
 19717 ;; This function is called by:
 19718 ;;		_efgtoa
 19719 ;; This function uses a reentrant model
 19720 ;;
 19721                           
 19722                           	psect	text67
 19723  0192AE                     __ptext67:
 19724                           	opt callstack 0
 19725  0192AE                     ___awdiv:
 19726                           	opt callstack 0
 19727                           
 19728                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19729  0192AE  52E6               	movf	postinc1,f,c
 19730  0192B0  52E6               	movf	postinc1,f,c
 19731  0192B2  52E6               	movf	postinc1,f,c
 19732  0192B4  52E6               	movf	postinc1,f,c
 19733                           
 19734                           ;stkvar	_sign @ sp[(-4)+2]
 19735                           
 19736                           ;incstack = 0
 19737 ;; hardware stack exceeded
 19738  0192B6  0EFE               	movlw	-2
 19739  0192B8  6AE3               	clrf	plusw1,c
 19740                           
 19741                           ;stkvar	_divisor @ sp[(-4)+-4]
 19742  0192BA  0EF9               	movlw	-7
 19743  0192BC  AEE3               	btfss	plusw1,7,c
 19744  0192BE  D009               	goto	l8514
 19745                           
 19746                           ;stkvar	_divisor @ sp[(-4)+-4]
 19747                           ;stkvar	_divisor @ sp[(-4)+-4]
 19748  0192C0  0EF8               	movlw	-8
 19749  0192C2  6CE3               	negf	plusw1,c
 19750  0192C4  0EF9               	movlw	-7
 19751  0192C6  1EE3               	comf	plusw1,f,c
 19752  0192C8  B0D8               	btfsc	status,0,c
 19753  0192CA  2AE3               	incf	plusw1,f,c
 19754                           
 19755                           ;stkvar	_sign @ sp[(-4)+2]
 19756  0192CC  0EFE               	movlw	-2
 19757  0192CE  6AE3               	clrf	plusw1,c
 19758  0192D0  2AE3               	incf	plusw1,f,c
 19759  0192D2                     l8514:
 19760                           
 19761                           ;stkvar	_dividend @ sp[(-4)+-2]
 19762  0192D2  0EFB               	movlw	-5
 19763  0192D4  AEE3               	btfss	plusw1,7,c
 19764  0192D6  D008               	goto	l8520
 19765                           
 19766                           ;stkvar	_dividend @ sp[(-4)+-2]
 19767                           ;stkvar	_dividend @ sp[(-4)+-2]
 19768  0192D8  0EFA               	movlw	-6
 19769  0192DA  6CE3               	negf	plusw1,c
 19770  0192DC  0EFB               	movlw	-5
 19771  0192DE  1EE3               	comf	plusw1,f,c
 19772  0192E0  B0D8               	btfsc	status,0,c
 19773  0192E2  2AE3               	incf	plusw1,f,c
 19774                           
 19775                           ;stkvar	_sign @ sp[(-4)+2]
 19776  0192E4  0EFE               	movlw	-2
 19777  0192E6  70E3               	btg	plusw1,0,c
 19778  0192E8                     l8520:
 19779                           
 19780                           ;stkvar	_quotient @ sp[(-4)+0]
 19781  0192E8  0EFC               	movlw	-4
 19782  0192EA  6AE3               	clrf	plusw1,c
 19783  0192EC  0EFD               	movlw	-3
 19784  0192EE  6AE3               	clrf	plusw1,c
 19785                           
 19786                           ;stkvar	_divisor @ sp[(-4)+-4]
 19787  0192F0  0EF8               	movlw	-8
 19788  0192F2  006F FF8C  F001    	movff	plusw1,btemp
 19789  0192F8  0EF9               	movlw	-7
 19790  0192FA  50E3               	movf	plusw1,w,c
 19791  0192FC  1001               	iorwf	btemp^0,w,c
 19792  0192FE  B4D8               	btfsc	status,2,c
 19793  019300  D066               	goto	u7020
 19794                           
 19795                           ;stkvar	_counter @ sp[(-4)+3]
 19796  019302  0EFF               	movlw	-1
 19797  019304  6AE3               	clrf	plusw1,c
 19798  019306  D012               	goto	L23
 19799  019308                     l8526:
 19800                           
 19801                           ;stkvar	_divisor @ sp[(-4)+-4]
 19802  019308  0EF8               	movlw	-8
 19803  01930A  50E3               	movf	plusw1,w,c
 19804  01930C  90D8               	bcf	status,0,c
 19805  01930E  34E8               	rlcf	wreg,w,c
 19806  019310  6E01               	movwf	btemp^0,c
 19807  019312  0EF8               	movlw	-8
 19808  019314  0060  F007  FFE3   	movff	btemp,plusw1
 19809  01931A  0EF9               	movlw	-7
 19810  01931C  50E3               	movf	plusw1,w,c
 19811  01931E  34E8               	rlcf	wreg,w,c
 19812  019320  6E01               	movwf	btemp^0,c
 19813  019322  0EF9               	movlw	-7
 19814  019324  0060  F007  FFE3   	movff	btemp,plusw1
 19815                           
 19816                           ;stkvar	_counter @ sp[(-4)+3]
 19817  01932A  0EFF               	movlw	-1
 19818  01932C                     L23:
 19819  01932C  2AE3               	incf	plusw1,f,c
 19820                           
 19821                           ;stkvar	_divisor @ sp[(-4)+-4]
 19822  01932E  0EF9               	movlw	-7
 19823  019330  AEE3               	btfss	plusw1,7,c
 19824  019332  D7EA               	goto	l8526
 19825  019334                     u7000:
 19826                           
 19827                           ;stkvar	_quotient @ sp[(-4)+0]
 19828  019334  0EFC               	movlw	-4
 19829  019336  50E3               	movf	plusw1,w,c
 19830  019338  90D8               	bcf	status,0,c
 19831  01933A  34E8               	rlcf	wreg,w,c
 19832  01933C  6E01               	movwf	btemp^0,c
 19833  01933E  0EFC               	movlw	-4
 19834  019340  0060  F007  FFE3   	movff	btemp,plusw1
 19835  019346  0EFD               	movlw	-3
 19836  019348  50E3               	movf	plusw1,w,c
 19837  01934A  34E8               	rlcf	wreg,w,c
 19838  01934C  6E01               	movwf	btemp^0,c
 19839  01934E  0EFD               	movlw	-3
 19840  019350  0060  F007  FFE3   	movff	btemp,plusw1
 19841                           
 19842                           ;stkvar	_divisor @ sp[(-4)+-4]
 19843  019356  0EF8               	movlw	-8
 19844  019358  006F FF8C  F00B    	movff	plusw1,btemp+10
 19845  01935E  0EF9               	movlw	-7
 19846  019360  006F FF8C  F00C    	movff	plusw1,btemp+11
 19847                           
 19848                           ;stkvar	_dividend @ sp[(-4)+-2]
 19849  019366  0EFA               	movlw	-6
 19850  019368  006F FF8C  F009    	movff	plusw1,btemp+8
 19851  01936E  0EFB               	movlw	-5
 19852  019370  006F FF8C  F00A    	movff	plusw1,btemp+9
 19853  019376  500B               	movf	(btemp+10)^0,w,c
 19854  019378  5C09               	subwf	(btemp+8)^0,w,c
 19855  01937A  500C               	movf	(btemp+11)^0,w,c
 19856  01937C  580A               	subwfb	(btemp+9)^0,w,c
 19857  01937E  A0D8               	btfss	status,0,c
 19858  019380  D016               	goto	l8540
 19859                           
 19860                           ;stkvar	_divisor @ sp[(-4)+-4]
 19861                           ;stkvar	_dividend @ sp[(-4)+-2]
 19862  019382  0EFA               	movlw	-6
 19863  019384  50E3               	movf	plusw1,w,c
 19864  019386  6E01               	movwf	btemp^0,c
 19865  019388  0EF8               	movlw	-8
 19866  01938A  50E3               	movf	plusw1,w,c
 19867  01938C  5E01               	subwf	btemp^0,f,c
 19868  01938E  0EFA               	movlw	-6
 19869  019390  0060  F007  FFE3   	movff	btemp,plusw1
 19870  019396  0EFB               	movlw	-5
 19871  019398  50E3               	movf	plusw1,w,c
 19872  01939A  6E01               	movwf	btemp^0,c
 19873  01939C  0EF9               	movlw	-7
 19874  01939E  50E3               	movf	plusw1,w,c
 19875  0193A0  5A01               	subwfb	btemp^0,f,c
 19876  0193A2  0EFB               	movlw	-5
 19877  0193A4  0060  F007  FFE3   	movff	btemp,plusw1
 19878                           
 19879                           ;stkvar	_quotient @ sp[(-4)+0]
 19880  0193AA  0EFC               	movlw	-4
 19881  0193AC  80E3               	bsf	plusw1,0,c
 19882  0193AE                     l8540:
 19883                           
 19884                           ;stkvar	_divisor @ sp[(-4)+-4]
 19885  0193AE  90D8               	bcf	status,0,c
 19886  0193B0  0EF9               	movlw	-7
 19887  0193B2  32E3               	rrcf	plusw1,f,c
 19888  0193B4  0EF8               	movlw	-8
 19889  0193B6  32E3               	rrcf	plusw1,f,c
 19890                           
 19891                           ;stkvar	_counter @ sp[(-4)+3]
 19892  0193B8  0EFF               	movlw	-1
 19893  0193BA  50E3               	movf	plusw1,w,c
 19894  0193BC  6E01               	movwf	btemp^0,c
 19895  0193BE  0E01               	movlw	1
 19896  0193C0  5E01               	subwf	btemp^0,f,c
 19897  0193C2  0EFF               	movlw	-1
 19898  0193C4  0060  F007  FFE3   	movff	btemp,plusw1
 19899  0193CA  A4D8               	btfss	status,2,c
 19900  0193CC  D7B3               	goto	u7000
 19901  0193CE                     u7020:
 19902                           
 19903                           ;stkvar	_sign @ sp[(-4)+2]
 19904  0193CE  0EFE               	movlw	-2
 19905  0193D0  50E3               	movf	plusw1,w,c
 19906  0193D2  B4D8               	btfsc	status,2,c
 19907  0193D4  D006               	goto	l8548
 19908                           
 19909                           ;stkvar	_quotient @ sp[(-4)+0]
 19910                           ;stkvar	_quotient @ sp[(-4)+0]
 19911  0193D6  0EFC               	movlw	-4
 19912  0193D8  6CE3               	negf	plusw1,c
 19913  0193DA  0EFD               	movlw	-3
 19914  0193DC  1EE3               	comf	plusw1,f,c
 19915  0193DE  B0D8               	btfsc	status,0,c
 19916  0193E0  2AE3               	incf	plusw1,f,c
 19917  0193E2                     l8548:
 19918                           
 19919                           ;stkvar	_quotient @ sp[(-4)+0]
 19920  0193E2  0EFC               	movlw	-4
 19921  0193E4  006F FF8C  F001    	movff	plusw1,btemp
 19922  0193EA  0EFD               	movlw	-3
 19923  0193EC  006F FF8C  F002    	movff	plusw1,btemp+1
 19924                           
 19925                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19926  0193F2  0EF8               	movlw	248
 19927  0193F4  26E1               	addwf	fsr1l,f,c
 19928  0193F6  0EFF               	movlw	255
 19929  0193F8  22E2               	addwfc	fsr1h,f,c
 19930  0193FA  0012               	return		;funcret
 19931  0193FC                     __end_of___awdiv:
 19932                           	opt callstack 0
 19933                           
 19934 ;; *************** function _dtoa *****************
 19935 ;; Defined at:
 19936 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19937 ;; Parameters:    Size  Location     Type
 19938 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19939 ;;		 -> f(6), NULL(0), 
 19940 ;;  d               8  [STACK] long long 
 19941 ;; Auto vars:     Size  Location     Type
 19942 ;;  n               8  [STACK] long long 
 19943 ;;  i               2  [STACK] int 
 19944 ;;  s               2  [STACK] int 
 19945 ;;  w               2  [STACK] int 
 19946 ;;  p               2  [STACK] int 
 19947 ;; Return value:  Size  Location     Type
 19948 ;;                  2  [STACK] int 
 19949 ;; Registers used:
 19950 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 19951 ;; Tracked objects:
 19952 ;;		On entry : 0/0
 19953 ;;		On exit  : 0/0
 19954 ;;		Unchanged: 0/0
 19955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19960 ;;Total ram usage:        0 bytes
 19961 ;; Hardware stack levels used:    1
 19962 ;; Hardware stack levels required when called:   20
 19963 ;; This function calls:
 19964 ;;		___aodiv
 19965 ;;		___aomod
 19966 ;;		_abs
 19967 ;;		_pad
 19968 ;; This function is called by:
 19969 ;;		_vfpfcnvrt
 19970 ;; This function uses a reentrant model
 19971 ;;
 19972                           
 19973                           	psect	text68
 19974  0157F6                     __ptext68:
 19975                           	opt callstack 0
 19976  0157F6                     _dtoa:
 19977                           	opt callstack 0
 19978                           
 19979                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 19980  0157F6  0E12               	movlw	18
 19981  0157F8  26E1               	addwf	fsr1l,f,c
 19982  0157FA  0E00               	movlw	0
 19983  0157FC  22E2               	addwfc	fsr1h,f,c
 19984                           
 19985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 19986                           ;stkvar	_d @ sp[(-18)+-10]
 19987                           
 19988                           ;incstack = 0
 19989 ;; hardware stack exceeded
 19990  0157FE  0EE4               	movlw	228
 19991  015800  24E1               	addwf	fsr1l,w,c
 19992  015802  6ED9               	movwf	fsr2l,c
 19993  015804  0EFF               	movlw	255
 19994  015806  20E2               	addwfc	fsr1h,w,c
 19995  015808  6EDA               	movwf	fsr2h,c
 19996                           
 19997                           ;stkvar	_n @ sp[(-18)+2]
 19998  01580A  0E08               	movlw	8
 19999  01580C  6E01               	movwf	btemp^0,c
 20000  01580E  0EF0               	movlw	-16
 20001  015810                     us1088999:
 20002  015810  006F FF7B FFE3     	movff	postinc2,plusw1
 20003  015816  28E8               	incf	wreg,w,c
 20004  015818  2E01               	decfsz	btemp^0,f,c
 20005  01581A  D7FA               	bra	us1088999
 20006                           
 20007                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 20008                           ;stkvar	_n @ sp[(-18)+2]
 20009  01581C  0EF7               	movlw	-9
 20010  01581E  AEE3               	btfss	plusw1,7,c
 20011  015820  D002               	goto	u10890
 20012  015822  0E01               	movlw	1
 20013  015824  D001               	goto	u10900
 20014  015826                     u10890:
 20015  015826  0E00               	movlw	0
 20016  015828                     u10900:
 20017  015828  6E0B               	movwf	(btemp+10)^0,c
 20018  01582A  6A0C               	clrf	(btemp+11)^0,c
 20019                           
 20020                           ;stkvar	_s @ sp[(-18)+12]
 20021  01582C  0EFA               	movlw	-6
 20022  01582E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20023  015834  0EFB               	movlw	-5
 20024  015836  0060  F033  FFE3   	movff	btemp+11,plusw1
 20025                           
 20026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 20027                           ;stkvar	_s @ sp[(-18)+12]
 20028  01583C  0EFA               	movlw	-6
 20029  01583E  006F FF8C  F001    	movff	plusw1,btemp
 20030  015844  0EFB               	movlw	-5
 20031  015846  50E3               	movf	plusw1,w,c
 20032  015848  1001               	iorwf	btemp^0,w,c
 20033  01584A  B4D8               	btfsc	status,2,c
 20034  01584C  D025               	goto	u10920
 20035                           
 20036                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 20037                           ;stkvar	_n @ sp[(-18)+2]
 20038                           ;stkvar	_n @ sp[(-18)+2]
 20039  01584E  0EF0               	movlw	-16
 20040  015850  6CE3               	negf	plusw1,c
 20041  015852  0EF1               	movlw	-15
 20042  015854  1EE3               	comf	plusw1,f,c
 20043  015856  0EF2               	movlw	-14
 20044  015858  1EE3               	comf	plusw1,f,c
 20045  01585A  0EF3               	movlw	-13
 20046  01585C  1EE3               	comf	plusw1,f,c
 20047  01585E  0EF4               	movlw	-12
 20048  015860  1EE3               	comf	plusw1,f,c
 20049  015862  0EF5               	movlw	-11
 20050  015864  1EE3               	comf	plusw1,f,c
 20051  015866  0EF6               	movlw	-10
 20052  015868  1EE3               	comf	plusw1,f,c
 20053  01586A  0EF7               	movlw	-9
 20054  01586C  1EE3               	comf	plusw1,f,c
 20055  01586E  E314               	bnc	u10920
 20056  015870  0EF1               	movlw	-15
 20057  015872  2AE3               	incf	plusw1,f,c
 20058  015874  E311               	bnc	u10920
 20059  015876  0EF2               	movlw	-14
 20060  015878  2AE3               	incf	plusw1,f,c
 20061  01587A  E30E               	bnc	u10920
 20062  01587C  0EF3               	movlw	-13
 20063  01587E  2AE3               	incf	plusw1,f,c
 20064  015880  E30B               	bnc	u10920
 20065  015882  0EF4               	movlw	-12
 20066  015884  2AE3               	incf	plusw1,f,c
 20067  015886  E308               	bnc	u10920
 20068  015888  0EF5               	movlw	-11
 20069  01588A  2AE3               	incf	plusw1,f,c
 20070  01588C  E305               	bnc	u10920
 20071  01588E  0EF6               	movlw	-10
 20072  015890  2AE3               	incf	plusw1,f,c
 20073  015892  E302               	bnc	u10920
 20074  015894  0EF7               	movlw	-9
 20075  015896  2AE3               	incf	plusw1,f,c
 20076  015898                     u10920:
 20077                           
 20078                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 20079  015898  AE3D               	btfss	(_prec+1)^0,7,c
 20080                           
 20081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 20082  01589A  923E               	bcf	_flags^0,1,c
 20083                           
 20084                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 20085  01589C  BE3D               	btfsc	(_prec+1)^0,7,c
 20086  01589E  D005               	goto	u10940
 20087  0158A0  503D               	movf	(_prec+1)^0,w,c
 20088  0158A2  E110               	bnz	l11942
 20089  0158A4  043C               	decf	_prec^0,w,c
 20090  0158A6  B0D8               	btfsc	status,0,c
 20091  0158A8  D00D               	goto	l11942
 20092  0158AA                     u10940:
 20093  0158AA  0E01               	movlw	1
 20094  0158AC  6E0B               	movwf	(btemp+10)^0,c
 20095  0158AE  0E00               	movlw	0
 20096  0158B0  6E0C               	movwf	(btemp+11)^0,c
 20097                           
 20098                           ;stkvar	_p @ sp[(-18)+16]
 20099  0158B2  0EFE               	movlw	-2
 20100  0158B4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20101  0158BA  0EFF               	movlw	-1
 20102  0158BC  0060  F033  FFE3   	movff	btemp+11,plusw1
 20103  0158C2  D008               	goto	l2158
 20104  0158C4                     l11942:
 20105                           
 20106                           ;stkvar	_p @ sp[(-18)+16]
 20107  0158C4  0EFE               	movlw	-2
 20108  0158C6  0060  F0F3  FFE3   	movff	_prec,plusw1
 20109  0158CC  0EFF               	movlw	-1
 20110  0158CE  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 20111  0158D4                     l2158:
 20112                           
 20113                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 20114                           ;stkvar	_w @ sp[(-18)+14]
 20115  0158D4  0EFC               	movlw	-4
 20116  0158D6  0060  F0EB  FFE3   	movff	_width,plusw1
 20117  0158DC  0EFD               	movlw	-3
 20118  0158DE  0060  F0EF  FFE3   	movff	_width+1,plusw1
 20119                           
 20120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 20121                           ;stkvar	_s @ sp[(-18)+12]
 20122  0158E4  0EFA               	movlw	-6
 20123  0158E6  006F FF8C  F001    	movff	plusw1,btemp
 20124  0158EC  0EFB               	movlw	-5
 20125  0158EE  50E3               	movf	plusw1,w,c
 20126  0158F0  1001               	iorwf	btemp^0,w,c
 20127  0158F2  A4D8               	btfss	status,2,c
 20128  0158F4  D002               	goto	u10960
 20129  0158F6  A43E               	btfss	_flags^0,2,c
 20130  0158F8  D00A               	goto	l11950
 20131  0158FA                     u10960:
 20132                           
 20133                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 20134                           ;stkvar	_w @ sp[(-18)+14]
 20135  0158FA  50E1               	movf	fsr1l,w,c
 20136  0158FC  0FFC               	addlw	-4
 20137  0158FE  6ED9               	movwf	fsr2l,c
 20138  015900  50E2               	movf	fsr1h,w,c
 20139  015902  6EDA               	movwf	fsr2h,c
 20140  015904  0EFF               	movlw	255
 20141  015906  22DA               	addwfc	fsr2h,f,c
 20142  015908  06DE               	decf	postinc2,f,c
 20143  01590A  0E00               	movlw	0
 20144  01590C  5ADD               	subwfb	postdec2,f,c
 20145  01590E                     l11950:
 20146                           
 20147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 20148  01590E  0E4F               	movlw	79
 20149  015910  6E0B               	movwf	(btemp+10)^0,c
 20150  015912  0E00               	movlw	0
 20151  015914  6E0C               	movwf	(btemp+11)^0,c
 20152                           
 20153                           ;stkvar	_i @ sp[(-18)+10]
 20154  015916  0EF8               	movlw	-8
 20155  015918  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20156  01591E  0EF9               	movlw	-7
 20157  015920  0060  F033  FFE3   	movff	btemp+11,plusw1
 20158                           
 20159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 20160  015926  0102               	movlb	2	; () banked
 20161  015928  6BE6               	clrf	(_dbuf+79)& (0+255),b
 20162                           
 20163                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 20164  01592A  D109               	goto	l11964
 20165  01592C                     l11954:
 20166                           
 20167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 20168                           ;stkvar	_i @ sp[(-18)+10]
 20169  01592C  50E1               	movf	fsr1l,w,c
 20170  01592E  0FF8               	addlw	-8
 20171  015930  6ED9               	movwf	fsr2l,c
 20172  015932  50E2               	movf	fsr1h,w,c
 20173  015934  6EDA               	movwf	fsr2h,c
 20174  015936  0EFF               	movlw	255
 20175  015938  22DA               	addwfc	fsr2h,f,c
 20176  01593A  06DE               	decf	postinc2,f,c
 20177  01593C  0E00               	movlw	0
 20178  01593E  5ADD               	subwfb	postdec2,f,c
 20179                           
 20180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 20181  015940  0E0A               	movlw	10
 20182  015942  6EE6               	movwf	postinc1,c
 20183  015944  0E00               	movlw	0
 20184  015946  6EE6               	movwf	postinc1,c
 20185  015948  0E00               	movlw	0
 20186  01594A  6EE6               	movwf	postinc1,c
 20187  01594C  0E00               	movlw	0
 20188  01594E  6EE6               	movwf	postinc1,c
 20189  015950  0E00               	movlw	0
 20190  015952  6EE6               	movwf	postinc1,c
 20191  015954  0E00               	movlw	0
 20192  015956  6EE6               	movwf	postinc1,c
 20193  015958  0E00               	movlw	0
 20194  01595A  6EE6               	movwf	postinc1,c
 20195  01595C  0E00               	movlw	0
 20196  01595E  6EE6               	movwf	postinc1,c
 20197                           
 20198                           ;stkvar	_n @ sp[(-26)+2]
 20199  015960  50E1               	movf	fsr1l,w,c
 20200  015962  0FE8               	addlw	-24
 20201  015964  6ED9               	movwf	fsr2l,c
 20202  015966  50E2               	movf	fsr1h,w,c
 20203  015968  6EDA               	movwf	fsr2h,c
 20204  01596A  0EFF               	movlw	255
 20205  01596C  22DA               	addwfc	fsr2h,f,c
 20206  01596E  006F FF7B FFE6     	movff	postinc2,postinc1
 20207  015974  006F FF7B FFE6     	movff	postinc2,postinc1
 20208  01597A  006F FF7B FFE6     	movff	postinc2,postinc1
 20209  015980  006F FF7B FFE6     	movff	postinc2,postinc1
 20210  015986  006F FF7B FFE6     	movff	postinc2,postinc1
 20211  01598C  006F FF7B FFE6     	movff	postinc2,postinc1
 20212  015992  006F FF7B FFE6     	movff	postinc2,postinc1
 20213  015998  006F FF7B FFE6     	movff	postinc2,postinc1
 20214  01599E  EC04  F0BF         	call	___aomod	;wreg free
 20215  0159A2  52E5               	movf	postdec1,f,c
 20216  0159A4  006F FF9C  F018    	movff	indf1,btemp+23
 20217  0159AA  52E5               	movf	postdec1,f,c
 20218  0159AC  006F FF9C  F017    	movff	indf1,btemp+22
 20219  0159B2  52E5               	movf	postdec1,f,c
 20220  0159B4  006F FF9C  F016    	movff	indf1,btemp+21
 20221  0159BA  52E5               	movf	postdec1,f,c
 20222  0159BC  006F FF9C  F015    	movff	indf1,btemp+20
 20223  0159C2  52E5               	movf	postdec1,f,c
 20224  0159C4  006F FF9C  F014    	movff	indf1,btemp+19
 20225  0159CA  52E5               	movf	postdec1,f,c
 20226  0159CC  006F FF9C  F013    	movff	indf1,btemp+18
 20227  0159D2  52E5               	movf	postdec1,f,c
 20228  0159D4  006F FF9C  F012    	movff	indf1,btemp+17
 20229  0159DA  52E5               	movf	postdec1,f,c
 20230  0159DC  006F FF9C  F011    	movff	indf1,btemp+16
 20231  0159E2  0EF8               	movlw	248
 20232  0159E4  26E1               	addwf	fsr1l,f,c
 20233  0159E6  0EFF               	movlw	255
 20234  0159E8  22E2               	addwfc	fsr1h,f,c
 20235  0159EA  0060  F044  F00B   	movff	btemp+16,btemp+10
 20236  0159F0  0060  F048  F00C   	movff	btemp+17,btemp+11
 20237  0159F6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 20238  0159FC  0060  F033  FFE6   	movff	btemp+11,postinc1
 20239  015A02  ECCC  F0DA         	call	_abs	;wreg free
 20240  015A06  0E30               	movlw	48
 20241  015A08  2601               	addwf	btemp^0,f,c
 20242                           
 20243                           ;stkvar	_i @ sp[(-18)+10]
 20244  015A0A  0EF8               	movlw	-8
 20245  015A0C  006F FF8C  F00B    	movff	plusw1,btemp+10
 20246  015A12  0EF9               	movlw	-7
 20247  015A14  006F FF8C  F00C    	movff	plusw1,btemp+11
 20248  015A1A  0E97               	movlw	low _dbuf
 20249  015A1C  240B               	addwf	(btemp+10)^0,w,c
 20250  015A1E  6ED9               	movwf	fsr2l,c
 20251  015A20  0E02               	movlw	high _dbuf
 20252  015A22  200C               	addwfc	(btemp+11)^0,w,c
 20253  015A24  6EDA               	movwf	fsr2h,c
 20254  015A26  0060  F007  FFDF   	movff	btemp,indf2
 20255                           
 20256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 20257                           ;stkvar	_p @ sp[(-18)+16]
 20258  015A2C  50E1               	movf	fsr1l,w,c
 20259  015A2E  0FFE               	addlw	-2
 20260  015A30  6ED9               	movwf	fsr2l,c
 20261  015A32  50E2               	movf	fsr1h,w,c
 20262  015A34  6EDA               	movwf	fsr2h,c
 20263  015A36  0EFF               	movlw	255
 20264  015A38  22DA               	addwfc	fsr2h,f,c
 20265  015A3A  06DE               	decf	postinc2,f,c
 20266  015A3C  0E00               	movlw	0
 20267  015A3E  5ADD               	subwfb	postdec2,f,c
 20268                           
 20269                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 20270                           ;stkvar	_w @ sp[(-18)+14]
 20271  015A40  50E1               	movf	fsr1l,w,c
 20272  015A42  0FFC               	addlw	-4
 20273  015A44  6ED9               	movwf	fsr2l,c
 20274  015A46  50E2               	movf	fsr1h,w,c
 20275  015A48  6EDA               	movwf	fsr2h,c
 20276  015A4A  0EFF               	movlw	255
 20277  015A4C  22DA               	addwfc	fsr2h,f,c
 20278  015A4E  06DE               	decf	postinc2,f,c
 20279  015A50  0E00               	movlw	0
 20280  015A52  5ADD               	subwfb	postdec2,f,c
 20281                           
 20282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 20283  015A54  0E0A               	movlw	10
 20284  015A56  6EE6               	movwf	postinc1,c
 20285  015A58  0E00               	movlw	0
 20286  015A5A  6EE6               	movwf	postinc1,c
 20287  015A5C  0E00               	movlw	0
 20288  015A5E  6EE6               	movwf	postinc1,c
 20289  015A60  0E00               	movlw	0
 20290  015A62  6EE6               	movwf	postinc1,c
 20291  015A64  0E00               	movlw	0
 20292  015A66  6EE6               	movwf	postinc1,c
 20293  015A68  0E00               	movlw	0
 20294  015A6A  6EE6               	movwf	postinc1,c
 20295  015A6C  0E00               	movlw	0
 20296  015A6E  6EE6               	movwf	postinc1,c
 20297  015A70  0E00               	movlw	0
 20298  015A72  6EE6               	movwf	postinc1,c
 20299                           
 20300                           ;stkvar	_n @ sp[(-26)+2]
 20301  015A74  50E1               	movf	fsr1l,w,c
 20302  015A76  0FE8               	addlw	-24
 20303  015A78  6ED9               	movwf	fsr2l,c
 20304  015A7A  50E2               	movf	fsr1h,w,c
 20305  015A7C  6EDA               	movwf	fsr2h,c
 20306  015A7E  0EFF               	movlw	255
 20307  015A80  22DA               	addwfc	fsr2h,f,c
 20308  015A82  006F FF7B FFE6     	movff	postinc2,postinc1
 20309  015A88  006F FF7B FFE6     	movff	postinc2,postinc1
 20310  015A8E  006F FF7B FFE6     	movff	postinc2,postinc1
 20311  015A94  006F FF7B FFE6     	movff	postinc2,postinc1
 20312  015A9A  006F FF7B FFE6     	movff	postinc2,postinc1
 20313  015AA0  006F FF7B FFE6     	movff	postinc2,postinc1
 20314  015AA6  006F FF7B FFE6     	movff	postinc2,postinc1
 20315  015AAC  006F FF7B FFE6     	movff	postinc2,postinc1
 20316  015AB2  EC67  F0BB         	call	___aodiv	;wreg free
 20317  015AB6  52E5               	movf	postdec1,f,c
 20318  015AB8  006F FF9C  F018    	movff	indf1,btemp+23
 20319  015ABE  52E5               	movf	postdec1,f,c
 20320  015AC0  006F FF9C  F017    	movff	indf1,btemp+22
 20321  015AC6  52E5               	movf	postdec1,f,c
 20322  015AC8  006F FF9C  F016    	movff	indf1,btemp+21
 20323  015ACE  52E5               	movf	postdec1,f,c
 20324  015AD0  006F FF9C  F015    	movff	indf1,btemp+20
 20325  015AD6  52E5               	movf	postdec1,f,c
 20326  015AD8  006F FF9C  F014    	movff	indf1,btemp+19
 20327  015ADE  52E5               	movf	postdec1,f,c
 20328  015AE0  006F FF9C  F013    	movff	indf1,btemp+18
 20329  015AE6  52E5               	movf	postdec1,f,c
 20330  015AE8  006F FF9C  F012    	movff	indf1,btemp+17
 20331  015AEE  52E5               	movf	postdec1,f,c
 20332  015AF0  006F FF9C  F011    	movff	indf1,btemp+16
 20333  015AF6  0EF8               	movlw	248
 20334  015AF8  26E1               	addwf	fsr1l,f,c
 20335  015AFA  0EFF               	movlw	255
 20336  015AFC  22E2               	addwfc	fsr1h,f,c
 20337                           
 20338                           ;stkvar	_n @ sp[(-18)+2]
 20339  015AFE  0EF0               	movlw	-16
 20340  015B00  0060  F047  FFE3   	movff	btemp+16,plusw1
 20341  015B06  0EF1               	movlw	-15
 20342  015B08  0060  F04B  FFE3   	movff	btemp+17,plusw1
 20343  015B0E  0EF2               	movlw	-14
 20344  015B10  0060  F04F  FFE3   	movff	btemp+18,plusw1
 20345  015B16  0EF3               	movlw	-13
 20346  015B18  0060  F053  FFE3   	movff	btemp+19,plusw1
 20347  015B1E  0EF4               	movlw	-12
 20348  015B20  0060  F057  FFE3   	movff	btemp+20,plusw1
 20349  015B26  0EF5               	movlw	-11
 20350  015B28  0060  F05B  FFE3   	movff	btemp+21,plusw1
 20351  015B2E  0EF6               	movlw	-10
 20352  015B30  0060  F05F  FFE3   	movff	btemp+22,plusw1
 20353  015B36  0EF7               	movlw	-9
 20354  015B38  0060  F063  FFE3   	movff	btemp+23,plusw1
 20355  015B3E                     l11964:
 20356                           
 20357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 20358                           ;stkvar	_i @ sp[(-18)+10]
 20359  015B3E  0EF9               	movlw	-7
 20360  015B40  BEE3               	btfsc	plusw1,7,c
 20361  015B42  D036               	goto	u11010
 20362  015B44  0EF9               	movlw	-7
 20363  015B46  50E3               	movf	plusw1,w,c
 20364  015B48  E104               	bnz	u10970
 20365  015B4A  0EF8               	movlw	-8
 20366  015B4C  04E3               	decf	plusw1,w,c
 20367  015B4E  A0D8               	btfss	status,0,c
 20368  015B50  D02F               	goto	u11010
 20369  015B52                     u10970:
 20370                           
 20371                           ;stkvar	_n @ sp[(-18)+2]
 20372  015B52  0EF0               	movlw	-16
 20373  015B54  50E3               	movf	plusw1,w,c
 20374  015B56  E115               	bnz	u10981
 20375  015B58  0EF1               	movlw	-15
 20376  015B5A  50E3               	movf	plusw1,w,c
 20377  015B5C  E112               	bnz	u10981
 20378  015B5E  0EF2               	movlw	-14
 20379  015B60  50E3               	movf	plusw1,w,c
 20380  015B62  E10F               	bnz	u10981
 20381  015B64  0EF3               	movlw	-13
 20382  015B66  50E3               	movf	plusw1,w,c
 20383  015B68  E10C               	bnz	u10981
 20384  015B6A  0EF4               	movlw	-12
 20385  015B6C  50E3               	movf	plusw1,w,c
 20386  015B6E  E109               	bnz	u10981
 20387  015B70  0EF5               	movlw	-11
 20388  015B72  50E3               	movf	plusw1,w,c
 20389  015B74  E106               	bnz	u10981
 20390  015B76  0EF6               	movlw	-10
 20391  015B78  50E3               	movf	plusw1,w,c
 20392  015B7A  E103               	bnz	u10981
 20393  015B7C  0EF7               	movlw	-9
 20394  015B7E  50E3               	movf	plusw1,w,c
 20395  015B80  A4D8               	btfss	status,2,c
 20396  015B82                     u10981:
 20397  015B82  D6D4               	goto	l11954
 20398                           
 20399                           ;stkvar	_p @ sp[(-18)+16]
 20400  015B84  0EFF               	movlw	-1
 20401  015B86  BEE3               	btfsc	plusw1,7,c
 20402  015B88  D007               	goto	u10990
 20403  015B8A  0EFF               	movlw	-1
 20404  015B8C  50E3               	movf	plusw1,w,c
 20405  015B8E  E103               	bnz	u10991
 20406  015B90  0EFE               	movlw	-2
 20407  015B92  04E3               	decf	plusw1,w,c
 20408  015B94  B0D8               	btfsc	status,0,c
 20409  015B96                     u10991:
 20410  015B96  D6CA               	goto	l11954
 20411  015B98                     u10990:
 20412                           
 20413                           ;stkvar	_w @ sp[(-18)+14]
 20414  015B98  0EFD               	movlw	-3
 20415  015B9A  BEE3               	btfsc	plusw1,7,c
 20416  015B9C  D009               	goto	u11010
 20417  015B9E  0EFD               	movlw	-3
 20418  015BA0  50E3               	movf	plusw1,w,c
 20419  015BA2  E104               	bnz	u11000
 20420  015BA4  0EFC               	movlw	-4
 20421  015BA6  04E3               	decf	plusw1,w,c
 20422  015BA8  A0D8               	btfss	status,0,c
 20423  015BAA  D002               	goto	u11010
 20424  015BAC                     u11000:
 20425  015BAC  B23E               	btfsc	_flags^0,1,c
 20426  015BAE  D6BE               	goto	l11954
 20427  015BB0                     u11010:
 20428                           
 20429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 20430                           ;stkvar	_s @ sp[(-18)+12]
 20431  015BB0  0EFA               	movlw	-6
 20432  015BB2  006F FF8C  F001    	movff	plusw1,btemp
 20433  015BB8  0EFB               	movlw	-5
 20434  015BBA  50E3               	movf	plusw1,w,c
 20435  015BBC  1001               	iorwf	btemp^0,w,c
 20436  015BBE  A4D8               	btfss	status,2,c
 20437  015BC0  D002               	goto	u11030
 20438  015BC2  A43E               	btfss	_flags^0,2,c
 20439  015BC4  D033               	goto	l11988
 20440  015BC6                     u11030:
 20441                           
 20442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 20443                           ;stkvar	_i @ sp[(-18)+10]
 20444  015BC6  50E1               	movf	fsr1l,w,c
 20445  015BC8  0FF8               	addlw	-8
 20446  015BCA  6ED9               	movwf	fsr2l,c
 20447  015BCC  50E2               	movf	fsr1h,w,c
 20448  015BCE  6EDA               	movwf	fsr2h,c
 20449  015BD0  0EFF               	movlw	255
 20450  015BD2  22DA               	addwfc	fsr2h,f,c
 20451  015BD4  06DE               	decf	postinc2,f,c
 20452  015BD6  0E00               	movlw	0
 20453  015BD8  5ADD               	subwfb	postdec2,f,c
 20454                           
 20455                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 20456                           ;stkvar	_s @ sp[(-18)+12]
 20457  015BDA  0EFA               	movlw	-6
 20458  015BDC  006F FF8C  F001    	movff	plusw1,btemp
 20459  015BE2  0EFB               	movlw	-5
 20460  015BE4  50E3               	movf	plusw1,w,c
 20461  015BE6  1001               	iorwf	btemp^0,w,c
 20462  015BE8  A4D8               	btfss	status,2,c
 20463  015BEA  D002               	goto	l11984
 20464  015BEC  0E2B               	movlw	43
 20465  015BEE  D001               	goto	L24
 20466  015BF0                     l11984:
 20467  015BF0  0E2D               	movlw	45
 20468  015BF2                     L24:
 20469  015BF2  6E0B               	movwf	(btemp+10)^0,c
 20470  015BF4  0E00               	movlw	0
 20471  015BF6  6E0C               	movwf	(btemp+11)^0,c
 20472                           
 20473                           ;stkvar	_dtoa$5494 @ sp[(-18)+0]
 20474  015BF8  0EEE               	movlw	-18
 20475  015BFA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20476  015C00  0EEF               	movlw	-17
 20477  015C02  0060  F033  FFE3   	movff	btemp+11,plusw1
 20478                           
 20479                           ;stkvar	_dtoa$5494 @ sp[(-18)+0]
 20480                           ;stkvar	_i @ sp[(-18)+10]
 20481  015C08  0EF8               	movlw	-8
 20482  015C0A  006F FF8C  F00B    	movff	plusw1,btemp+10
 20483  015C10  0EF9               	movlw	-7
 20484  015C12  006F FF8C  F00C    	movff	plusw1,btemp+11
 20485  015C18  0E97               	movlw	low _dbuf
 20486  015C1A  240B               	addwf	(btemp+10)^0,w,c
 20487  015C1C  6ED9               	movwf	fsr2l,c
 20488  015C1E  0E02               	movlw	high _dbuf
 20489  015C20  200C               	addwfc	(btemp+11)^0,w,c
 20490  015C22  6EDA               	movwf	fsr2h,c
 20491  015C24  0EEE               	movlw	-18
 20492  015C26  006F FF8F FFDF     	movff	plusw1,indf2
 20493  015C2C                     l11988:
 20494                           
 20495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 20496                           ;stkvar	_w @ sp[(-18)+14]
 20497  015C2C  0EFC               	movlw	-4
 20498  015C2E  006F FF8F FFE6     	movff	plusw1,postinc1
 20499  015C34  006F FF8F FFE6     	movff	plusw1,postinc1
 20500                           
 20501                           ;stkvar	_i @ sp[(-20)+10]
 20502  015C3A  0E97               	movlw	low _dbuf
 20503  015C3C  6E0B               	movwf	(btemp+10)^0,c
 20504  015C3E  0E02               	movlw	high _dbuf
 20505  015C40  6E0C               	movwf	(btemp+11)^0,c
 20506  015C42  0EF6               	movlw	-10
 20507  015C44  50E3               	movf	plusw1,w,c
 20508  015C46  260B               	addwf	(btemp+10)^0,f,c
 20509  015C48  0EF7               	movlw	-9
 20510  015C4A  50E3               	movf	plusw1,w,c
 20511  015C4C  220C               	addwfc	(btemp+11)^0,f,c
 20512  015C4E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 20513  015C54  0060  F033  FFE6   	movff	btemp+11,postinc1
 20514                           
 20515                           ;stkvar	_fp @ sp[(-22)+-2]
 20516  015C5A  0EE8               	movlw	-24
 20517  015C5C  006F FF8F FFE6     	movff	plusw1,postinc1
 20518  015C62  006F FF8F FFE6     	movff	plusw1,postinc1
 20519  015C68  EC7B  F0CD         	call	_pad	;wreg free
 20520                           
 20521                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 20522  015C6C  0EE4               	movlw	228
 20523  015C6E  26E1               	addwf	fsr1l,f,c
 20524  015C70  0EFF               	movlw	255
 20525  015C72  22E2               	addwfc	fsr1h,f,c
 20526  015C74  0012               	return		;funcret
 20527  015C76                     __end_of_dtoa:
 20528                           	opt callstack 0
 20529                           
 20530 ;; *************** function _abs *****************
 20531 ;; Defined at:
 20532 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 20533 ;; Parameters:    Size  Location     Type
 20534 ;;  a               2  [STACK] int 
 20535 ;; Auto vars:     Size  Location     Type
 20536 ;;		None
 20537 ;; Return value:  Size  Location     Type
 20538 ;;                  2  [STACK] int 
 20539 ;; Registers used:
 20540 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 20541 ;; Tracked objects:
 20542 ;;		On entry : 0/2
 20543 ;;		On exit  : 0/0
 20544 ;;		Unchanged: 0/0
 20545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20550 ;;Total ram usage:        0 bytes
 20551 ;; Hardware stack levels used:    1
 20552 ;; Hardware stack levels required when called:   15
 20553 ;; This function calls:
 20554 ;;		Nothing
 20555 ;; This function is called by:
 20556 ;;		_dtoa
 20557 ;; This function uses a reentrant model
 20558 ;;
 20559                           
 20560                           	psect	text69
 20561  01B598                     __ptext69:
 20562                           	opt callstack 0
 20563  01B598                     _abs:
 20564                           	opt callstack 0
 20565                           
 20566                           ;stkvar	_a @ sp[(0)+-2]
 20567                           
 20568                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20569                           ;incstack = 0
 20570 ;; hardware stack exceeded
 20571  01B598  0EFF               	movlw	-1
 20572  01B59A  BEE3               	btfsc	plusw1,7,c
 20573  01B59C  D007               	goto	u5980
 20574  01B59E  0EFF               	movlw	-1
 20575  01B5A0  50E3               	movf	plusw1,w,c
 20576  01B5A2  E112               	bnz	l8002
 20577  01B5A4  0EFE               	movlw	-2
 20578  01B5A6  04E3               	decf	plusw1,w,c
 20579  01B5A8  B0D8               	btfsc	status,0,c
 20580  01B5AA  D00E               	goto	l8002
 20581  01B5AC                     u5980:
 20582                           
 20583                           ;stkvar	_a @ sp[(0)+-2]
 20584  01B5AC  0EFE               	movlw	-2
 20585  01B5AE  006F FF8C  F001    	movff	plusw1,btemp
 20586  01B5B4  1E01               	comf	btemp^0,f,c
 20587  01B5B6  0EFF               	movlw	-1
 20588  01B5B8  006F FF8C  F002    	movff	plusw1,btemp+1
 20589  01B5BE  1E02               	comf	(btemp+1)^0,f,c
 20590  01B5C0  2A01               	incf	btemp^0,f,c
 20591  01B5C2  B4D8               	btfsc	status,2,c
 20592  01B5C4  2A02               	incf	(btemp+1)^0,f,c
 20593  01B5C6  D008               	goto	l3084
 20594  01B5C8                     l8002:
 20595                           
 20596                           ;stkvar	_a @ sp[(0)+-2]
 20597  01B5C8  0EFE               	movlw	-2
 20598  01B5CA  006F FF8C  F001    	movff	plusw1,btemp
 20599  01B5D0  0EFF               	movlw	-1
 20600  01B5D2  006F FF8C  F002    	movff	plusw1,btemp+1
 20601  01B5D8                     l3084:
 20602                           
 20603                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 20604  01B5D8  52E5               	movf	postdec1,f,c
 20605  01B5DA  52E5               	movf	postdec1,f,c
 20606  01B5DC  0012               	return		;funcret
 20607  01B5DE                     __end_of_abs:
 20608                           	opt callstack 0
 20609                           
 20610 ;; *************** function ___aomod *****************
 20611 ;; Defined at:
 20612 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 20613 ;; Parameters:    Size  Location     Type
 20614 ;;  dividend        8  [STACK] long long 
 20615 ;;  divisor         8  [STACK] long long 
 20616 ;; Auto vars:     Size  Location     Type
 20617 ;;  sign            1  [STACK] unsigned char 
 20618 ;;  counter         1  [STACK] unsigned char 
 20619 ;; Return value:  Size  Location     Type
 20620 ;;                  8  [STACK] long long 
 20621 ;; Registers used:
 20622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20623 ;; Tracked objects:
 20624 ;;		On entry : 0/2
 20625 ;;		On exit  : 0/0
 20626 ;;		Unchanged: 0/0
 20627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20632 ;;Total ram usage:        0 bytes
 20633 ;; Hardware stack levels used:    1
 20634 ;; Hardware stack levels required when called:   15
 20635 ;; This function calls:
 20636 ;;		Nothing
 20637 ;; This function is called by:
 20638 ;;		_dtoa
 20639 ;; This function uses a reentrant model
 20640 ;;
 20641                           
 20642                           	psect	text70
 20643  017E08                     __ptext70:
 20644                           	opt callstack 0
 20645  017E08                     ___aomod:
 20646                           	opt callstack 0
 20647                           
 20648                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 20649  017E08  52E6               	movf	postinc1,f,c
 20650  017E0A  52E6               	movf	postinc1,f,c
 20651                           
 20652                           ;stkvar	_sign @ sp[(-2)+0]
 20653                           
 20654                           ;incstack = 0
 20655 ;; hardware stack exceeded
 20656  017E0C  0EFE               	movlw	-2
 20657  017E0E  6AE3               	clrf	plusw1,c
 20658                           
 20659                           ;stkvar	_dividend @ sp[(-2)+-8]
 20660  017E10  0EFD               	movlw	-3
 20661  017E12  AEE3               	btfss	plusw1,7,c
 20662  017E14  D028               	goto	l8160
 20663                           
 20664                           ;stkvar	_dividend @ sp[(-2)+-8]
 20665                           ;stkvar	_dividend @ sp[(-2)+-8]
 20666  017E16  0EF6               	movlw	-10
 20667  017E18  6CE3               	negf	plusw1,c
 20668  017E1A  0EF7               	movlw	-9
 20669  017E1C  1EE3               	comf	plusw1,f,c
 20670  017E1E  0EF8               	movlw	-8
 20671  017E20  1EE3               	comf	plusw1,f,c
 20672  017E22  0EF9               	movlw	-7
 20673  017E24  1EE3               	comf	plusw1,f,c
 20674  017E26  0EFA               	movlw	-6
 20675  017E28  1EE3               	comf	plusw1,f,c
 20676  017E2A  0EFB               	movlw	-5
 20677  017E2C  1EE3               	comf	plusw1,f,c
 20678  017E2E  0EFC               	movlw	-4
 20679  017E30  1EE3               	comf	plusw1,f,c
 20680  017E32  0EFD               	movlw	-3
 20681  017E34  1EE3               	comf	plusw1,f,c
 20682  017E36  E314               	bnc	u6410
 20683  017E38  0EF7               	movlw	-9
 20684  017E3A  2AE3               	incf	plusw1,f,c
 20685  017E3C  E311               	bnc	u6410
 20686  017E3E  0EF8               	movlw	-8
 20687  017E40  2AE3               	incf	plusw1,f,c
 20688  017E42  E30E               	bnc	u6410
 20689  017E44  0EF9               	movlw	-7
 20690  017E46  2AE3               	incf	plusw1,f,c
 20691  017E48  E30B               	bnc	u6410
 20692  017E4A  0EFA               	movlw	-6
 20693  017E4C  2AE3               	incf	plusw1,f,c
 20694  017E4E  E308               	bnc	u6410
 20695  017E50  0EFB               	movlw	-5
 20696  017E52  2AE3               	incf	plusw1,f,c
 20697  017E54  E305               	bnc	u6410
 20698  017E56  0EFC               	movlw	-4
 20699  017E58  2AE3               	incf	plusw1,f,c
 20700  017E5A  E302               	bnc	u6410
 20701  017E5C  0EFD               	movlw	-3
 20702  017E5E  2AE3               	incf	plusw1,f,c
 20703  017E60                     u6410:
 20704                           
 20705                           ;stkvar	_sign @ sp[(-2)+0]
 20706  017E60  0EFE               	movlw	-2
 20707  017E62  6AE3               	clrf	plusw1,c
 20708  017E64  2AE3               	incf	plusw1,f,c
 20709  017E66                     l8160:
 20710                           
 20711                           ;stkvar	_divisor @ sp[(-2)+-16]
 20712  017E66  0EF5               	movlw	-11
 20713  017E68  AEE3               	btfss	plusw1,7,c
 20714  017E6A  D025               	goto	u6430
 20715                           
 20716                           ;stkvar	_divisor @ sp[(-2)+-16]
 20717                           ;stkvar	_divisor @ sp[(-2)+-16]
 20718  017E6C  0EEE               	movlw	-18
 20719  017E6E  6CE3               	negf	plusw1,c
 20720  017E70  0EEF               	movlw	-17
 20721  017E72  1EE3               	comf	plusw1,f,c
 20722  017E74  0EF0               	movlw	-16
 20723  017E76  1EE3               	comf	plusw1,f,c
 20724  017E78  0EF1               	movlw	-15
 20725  017E7A  1EE3               	comf	plusw1,f,c
 20726  017E7C  0EF2               	movlw	-14
 20727  017E7E  1EE3               	comf	plusw1,f,c
 20728  017E80  0EF3               	movlw	-13
 20729  017E82  1EE3               	comf	plusw1,f,c
 20730  017E84  0EF4               	movlw	-12
 20731  017E86  1EE3               	comf	plusw1,f,c
 20732  017E88  0EF5               	movlw	-11
 20733  017E8A  1EE3               	comf	plusw1,f,c
 20734  017E8C  E314               	bnc	u6430
 20735  017E8E  0EEF               	movlw	-17
 20736  017E90  2AE3               	incf	plusw1,f,c
 20737  017E92  E311               	bnc	u6430
 20738  017E94  0EF0               	movlw	-16
 20739  017E96  2AE3               	incf	plusw1,f,c
 20740  017E98  E30E               	bnc	u6430
 20741  017E9A  0EF1               	movlw	-15
 20742  017E9C  2AE3               	incf	plusw1,f,c
 20743  017E9E  E30B               	bnc	u6430
 20744  017EA0  0EF2               	movlw	-14
 20745  017EA2  2AE3               	incf	plusw1,f,c
 20746  017EA4  E308               	bnc	u6430
 20747  017EA6  0EF3               	movlw	-13
 20748  017EA8  2AE3               	incf	plusw1,f,c
 20749  017EAA  E305               	bnc	u6430
 20750  017EAC  0EF4               	movlw	-12
 20751  017EAE  2AE3               	incf	plusw1,f,c
 20752  017EB0  E302               	bnc	u6430
 20753  017EB2  0EF5               	movlw	-11
 20754  017EB4  2AE3               	incf	plusw1,f,c
 20755  017EB6                     u6430:
 20756                           
 20757                           ;stkvar	_divisor @ sp[(-2)+-16]
 20758  017EB6  0EEE               	movlw	-18
 20759  017EB8  50E3               	movf	plusw1,w,c
 20760  017EBA  E116               	bnz	u6440
 20761  017EBC  0EEF               	movlw	-17
 20762  017EBE  50E3               	movf	plusw1,w,c
 20763  017EC0  E113               	bnz	u6440
 20764  017EC2  0EF0               	movlw	-16
 20765  017EC4  50E3               	movf	plusw1,w,c
 20766  017EC6  E110               	bnz	u6440
 20767  017EC8  0EF1               	movlw	-15
 20768  017ECA  50E3               	movf	plusw1,w,c
 20769  017ECC  E10D               	bnz	u6440
 20770  017ECE  0EF2               	movlw	-14
 20771  017ED0  50E3               	movf	plusw1,w,c
 20772  017ED2  E10A               	bnz	u6440
 20773  017ED4  0EF3               	movlw	-13
 20774  017ED6  50E3               	movf	plusw1,w,c
 20775  017ED8  E107               	bnz	u6440
 20776  017EDA  0EF4               	movlw	-12
 20777  017EDC  50E3               	movf	plusw1,w,c
 20778  017EDE  E104               	bnz	u6440
 20779  017EE0  0EF5               	movlw	-11
 20780  017EE2  50E3               	movf	plusw1,w,c
 20781  017EE4  B4D8               	btfsc	status,2,c
 20782  017EE6  D075               	goto	u6470
 20783  017EE8                     u6440:
 20784                           
 20785                           ;stkvar	_counter @ sp[(-2)+1]
 20786  017EE8  0EFF               	movlw	-1
 20787  017EEA  6AE3               	clrf	plusw1,c
 20788  017EEC  D012               	goto	L25
 20789  017EEE                     l8168:
 20790                           
 20791                           ;stkvar	_divisor @ sp[(-2)+-16]
 20792  017EEE  90D8               	bcf	status,0,c
 20793  017EF0  0EEE               	movlw	-18
 20794  017EF2  36E3               	rlcf	plusw1,f,c
 20795  017EF4  0EEF               	movlw	-17
 20796  017EF6  36E3               	rlcf	plusw1,f,c
 20797  017EF8  0EF0               	movlw	-16
 20798  017EFA  36E3               	rlcf	plusw1,f,c
 20799  017EFC  0EF1               	movlw	-15
 20800  017EFE  36E3               	rlcf	plusw1,f,c
 20801  017F00  0EF2               	movlw	-14
 20802  017F02  36E3               	rlcf	plusw1,f,c
 20803  017F04  0EF3               	movlw	-13
 20804  017F06  36E3               	rlcf	plusw1,f,c
 20805  017F08  0EF4               	movlw	-12
 20806  017F0A  36E3               	rlcf	plusw1,f,c
 20807  017F0C  0EF5               	movlw	-11
 20808  017F0E  36E3               	rlcf	plusw1,f,c
 20809                           
 20810                           ;stkvar	_counter @ sp[(-2)+1]
 20811  017F10  0EFF               	movlw	-1
 20812  017F12                     L25:
 20813  017F12  2AE3               	incf	plusw1,f,c
 20814                           
 20815                           ;stkvar	_divisor @ sp[(-2)+-16]
 20816  017F14  0EF5               	movlw	-11
 20817  017F16  AEE3               	btfss	plusw1,7,c
 20818  017F18  D7EA               	goto	l8168
 20819  017F1A                     u6450:
 20820                           
 20821                           ;stkvar	_divisor @ sp[(-2)+-16]
 20822                           ;stkvar	_dividend @ sp[(-2)+-8]
 20823  017F1A  50E1               	movf	fsr1l,w,c
 20824  017F1C  0FF6               	addlw	-10
 20825  017F1E  6ED9               	movwf	fsr2l,c
 20826  017F20  50E2               	movf	fsr1h,w,c
 20827  017F22  6EDA               	movwf	fsr2h,c
 20828  017F24  0EFF               	movlw	255
 20829  017F26  22DA               	addwfc	fsr2h,f,c
 20830  017F28  0EEE               	movlw	-18
 20831  017F2A  50E3               	movf	plusw1,w,c
 20832  017F2C  5CDE               	subwf	postinc2,w,c
 20833  017F2E  0EEF               	movlw	-17
 20834  017F30  50E3               	movf	plusw1,w,c
 20835  017F32  58DE               	subwfb	postinc2,w,c
 20836  017F34  0EF0               	movlw	-16
 20837  017F36  50E3               	movf	plusw1,w,c
 20838  017F38  58DE               	subwfb	postinc2,w,c
 20839  017F3A  0EF1               	movlw	-15
 20840  017F3C  50E3               	movf	plusw1,w,c
 20841  017F3E  58DE               	subwfb	postinc2,w,c
 20842  017F40  0EF2               	movlw	-14
 20843  017F42  50E3               	movf	plusw1,w,c
 20844  017F44  58DE               	subwfb	postinc2,w,c
 20845  017F46  0EF3               	movlw	-13
 20846  017F48  50E3               	movf	plusw1,w,c
 20847  017F4A  58DE               	subwfb	postinc2,w,c
 20848  017F4C  0EF4               	movlw	-12
 20849  017F4E  50E3               	movf	plusw1,w,c
 20850  017F50  58DE               	subwfb	postinc2,w,c
 20851  017F52  0EF5               	movlw	-11
 20852  017F54  50E3               	movf	plusw1,w,c
 20853  017F56  58DE               	subwfb	postinc2,w,c
 20854  017F58  A0D8               	btfss	status,0,c
 20855  017F5A  D01F               	goto	l8176
 20856                           
 20857                           ;stkvar	_divisor @ sp[(-2)+-16]
 20858                           ;stkvar	_dividend @ sp[(-2)+-8]
 20859  017F5C  50E1               	movf	fsr1l,w,c
 20860  017F5E  0FF6               	addlw	-10
 20861  017F60  6ED9               	movwf	fsr2l,c
 20862  017F62  50E2               	movf	fsr1h,w,c
 20863  017F64  6EDA               	movwf	fsr2h,c
 20864  017F66  0EFF               	movlw	255
 20865  017F68  22DA               	addwfc	fsr2h,f,c
 20866  017F6A  0EEE               	movlw	-18
 20867  017F6C  50E3               	movf	plusw1,w,c
 20868  017F6E  5EDE               	subwf	postinc2,f,c
 20869  017F70  0EEF               	movlw	-17
 20870  017F72  50E3               	movf	plusw1,w,c
 20871  017F74  5ADE               	subwfb	postinc2,f,c
 20872  017F76  0EF0               	movlw	-16
 20873  017F78  50E3               	movf	plusw1,w,c
 20874  017F7A  5ADE               	subwfb	postinc2,f,c
 20875  017F7C  0EF1               	movlw	-15
 20876  017F7E  50E3               	movf	plusw1,w,c
 20877  017F80  5ADE               	subwfb	postinc2,f,c
 20878  017F82  0EF2               	movlw	-14
 20879  017F84  50E3               	movf	plusw1,w,c
 20880  017F86  5ADE               	subwfb	postinc2,f,c
 20881  017F88  0EF3               	movlw	-13
 20882  017F8A  50E3               	movf	plusw1,w,c
 20883  017F8C  5ADE               	subwfb	postinc2,f,c
 20884  017F8E  0EF4               	movlw	-12
 20885  017F90  50E3               	movf	plusw1,w,c
 20886  017F92  5ADE               	subwfb	postinc2,f,c
 20887  017F94  0EF5               	movlw	-11
 20888  017F96  50E3               	movf	plusw1,w,c
 20889  017F98  5ADE               	subwfb	postinc2,f,c
 20890  017F9A                     l8176:
 20891                           
 20892                           ;stkvar	_divisor @ sp[(-2)+-16]
 20893  017F9A  90D8               	bcf	status,0,c
 20894  017F9C  0EF5               	movlw	-11
 20895  017F9E  32E3               	rrcf	plusw1,f,c
 20896  017FA0  0EF4               	movlw	-12
 20897  017FA2  32E3               	rrcf	plusw1,f,c
 20898  017FA4  0EF3               	movlw	-13
 20899  017FA6  32E3               	rrcf	plusw1,f,c
 20900  017FA8  0EF2               	movlw	-14
 20901  017FAA  32E3               	rrcf	plusw1,f,c
 20902  017FAC  0EF1               	movlw	-15
 20903  017FAE  32E3               	rrcf	plusw1,f,c
 20904  017FB0  0EF0               	movlw	-16
 20905  017FB2  32E3               	rrcf	plusw1,f,c
 20906  017FB4  0EEF               	movlw	-17
 20907  017FB6  32E3               	rrcf	plusw1,f,c
 20908  017FB8  0EEE               	movlw	-18
 20909  017FBA  32E3               	rrcf	plusw1,f,c
 20910                           
 20911                           ;stkvar	_counter @ sp[(-2)+1]
 20912  017FBC  0EFF               	movlw	-1
 20913  017FBE  50E3               	movf	plusw1,w,c
 20914  017FC0  6E01               	movwf	btemp^0,c
 20915  017FC2  0E01               	movlw	1
 20916  017FC4  5E01               	subwf	btemp^0,f,c
 20917  017FC6  0EFF               	movlw	-1
 20918  017FC8  0060  F007  FFE3   	movff	btemp,plusw1
 20919  017FCE  A4D8               	btfss	status,2,c
 20920  017FD0  D7A4               	goto	u6450
 20921  017FD2                     u6470:
 20922                           
 20923                           ;stkvar	_sign @ sp[(-2)+0]
 20924  017FD2  0EFE               	movlw	-2
 20925  017FD4  50E3               	movf	plusw1,w,c
 20926  017FD6  B4D8               	btfsc	status,2,c
 20927  017FD8  D025               	goto	u6490
 20928                           
 20929                           ;stkvar	_dividend @ sp[(-2)+-8]
 20930                           ;stkvar	_dividend @ sp[(-2)+-8]
 20931  017FDA  0EF6               	movlw	-10
 20932  017FDC  6CE3               	negf	plusw1,c
 20933  017FDE  0EF7               	movlw	-9
 20934  017FE0  1EE3               	comf	plusw1,f,c
 20935  017FE2  0EF8               	movlw	-8
 20936  017FE4  1EE3               	comf	plusw1,f,c
 20937  017FE6  0EF9               	movlw	-7
 20938  017FE8  1EE3               	comf	plusw1,f,c
 20939  017FEA  0EFA               	movlw	-6
 20940  017FEC  1EE3               	comf	plusw1,f,c
 20941  017FEE  0EFB               	movlw	-5
 20942  017FF0  1EE3               	comf	plusw1,f,c
 20943  017FF2  0EFC               	movlw	-4
 20944  017FF4  1EE3               	comf	plusw1,f,c
 20945  017FF6  0EFD               	movlw	-3
 20946  017FF8  1EE3               	comf	plusw1,f,c
 20947  017FFA  E314               	bnc	u6490
 20948  017FFC  0EF7               	movlw	-9
 20949  017FFE  2AE3               	incf	plusw1,f,c
 20950  018000  E311               	bnc	u6490
 20951  018002  0EF8               	movlw	-8
 20952  018004  2AE3               	incf	plusw1,f,c
 20953  018006  E30E               	bnc	u6490
 20954  018008  0EF9               	movlw	-7
 20955  01800A  2AE3               	incf	plusw1,f,c
 20956  01800C  E30B               	bnc	u6490
 20957  01800E  0EFA               	movlw	-6
 20958  018010  2AE3               	incf	plusw1,f,c
 20959  018012  E308               	bnc	u6490
 20960  018014  0EFB               	movlw	-5
 20961  018016  2AE3               	incf	plusw1,f,c
 20962  018018  E305               	bnc	u6490
 20963  01801A  0EFC               	movlw	-4
 20964  01801C  2AE3               	incf	plusw1,f,c
 20965  01801E  E302               	bnc	u6490
 20966  018020  0EFD               	movlw	-3
 20967  018022  2AE3               	incf	plusw1,f,c
 20968  018024                     u6490:
 20969                           
 20970                           ;stkvar	_dividend @ sp[(-2)+-8]
 20971  018024  0EF6               	movlw	246
 20972  018026  24E1               	addwf	fsr1l,w,c
 20973  018028  6ED9               	movwf	fsr2l,c
 20974  01802A  0EFF               	movlw	255
 20975  01802C  20E2               	addwfc	fsr1h,w,c
 20976  01802E  6EDA               	movwf	fsr2h,c
 20977                           
 20978                           ;stkvar	?___aomod @ sp[(-2)+-8]
 20979  018030  0E08               	movlw	8
 20980  018032  6E01               	movwf	btemp^0,c
 20981  018034  0EF6               	movlw	-10
 20982  018036                     us650999:
 20983  018036  006F FF7B FFE3     	movff	postinc2,plusw1
 20984  01803C  28E8               	incf	wreg,w,c
 20985  01803E  2E01               	decfsz	btemp^0,f,c
 20986  018040  D7FA               	bra	us650999
 20987                           
 20988                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 20989  018042  52E5               	movf	postdec1,f,c
 20990  018044  52E5               	movf	postdec1,f,c
 20991  018046  0012               	return		;funcret
 20992  018048                     __end_of___aomod:
 20993                           	opt callstack 0
 20994                           
 20995 ;; *************** function ___aodiv *****************
 20996 ;; Defined at:
 20997 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 20998 ;; Parameters:    Size  Location     Type
 20999 ;;  dividend        8  [STACK] long long 
 21000 ;;  divisor         8  [STACK] long long 
 21001 ;; Auto vars:     Size  Location     Type
 21002 ;;  quotient        8  [STACK] long long 
 21003 ;;  sign            1  [STACK] unsigned char 
 21004 ;;  counter         1  [STACK] unsigned char 
 21005 ;; Return value:  Size  Location     Type
 21006 ;;                  8  [STACK] long long 
 21007 ;; Registers used:
 21008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 21009 ;; Tracked objects:
 21010 ;;		On entry : 0/2
 21011 ;;		On exit  : 0/0
 21012 ;;		Unchanged: 0/0
 21013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21018 ;;Total ram usage:        0 bytes
 21019 ;; Hardware stack levels used:    1
 21020 ;; Hardware stack levels required when called:   15
 21021 ;; This function calls:
 21022 ;;		Nothing
 21023 ;; This function is called by:
 21024 ;;		_dtoa
 21025 ;; This function uses a reentrant model
 21026 ;;
 21027                           
 21028                           	psect	text71
 21029  0176CE                     __ptext71:
 21030                           	opt callstack 0
 21031  0176CE                     ___aodiv:
 21032                           	opt callstack 0
 21033                           
 21034                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 21035  0176CE  0E0A               	movlw	10
 21036  0176D0  26E1               	addwf	fsr1l,f,c
 21037  0176D2  0E00               	movlw	0
 21038  0176D4  22E2               	addwfc	fsr1h,f,c
 21039                           
 21040                           ;stkvar	_sign @ sp[(-10)+8]
 21041                           
 21042                           ;incstack = 0
 21043 ;; hardware stack exceeded
 21044  0176D6  0EFE               	movlw	-2
 21045  0176D8  6AE3               	clrf	plusw1,c
 21046                           
 21047                           ;stkvar	_divisor @ sp[(-10)+-16]
 21048  0176DA  0EED               	movlw	-19
 21049  0176DC  AEE3               	btfss	plusw1,7,c
 21050  0176DE  D028               	goto	l8116
 21051                           
 21052                           ;stkvar	_divisor @ sp[(-10)+-16]
 21053                           ;stkvar	_divisor @ sp[(-10)+-16]
 21054  0176E0  0EE6               	movlw	-26
 21055  0176E2  6CE3               	negf	plusw1,c
 21056  0176E4  0EE7               	movlw	-25
 21057  0176E6  1EE3               	comf	plusw1,f,c
 21058  0176E8  0EE8               	movlw	-24
 21059  0176EA  1EE3               	comf	plusw1,f,c
 21060  0176EC  0EE9               	movlw	-23
 21061  0176EE  1EE3               	comf	plusw1,f,c
 21062  0176F0  0EEA               	movlw	-22
 21063  0176F2  1EE3               	comf	plusw1,f,c
 21064  0176F4  0EEB               	movlw	-21
 21065  0176F6  1EE3               	comf	plusw1,f,c
 21066  0176F8  0EEC               	movlw	-20
 21067  0176FA  1EE3               	comf	plusw1,f,c
 21068  0176FC  0EED               	movlw	-19
 21069  0176FE  1EE3               	comf	plusw1,f,c
 21070  017700  E314               	bnc	u6290
 21071  017702  0EE7               	movlw	-25
 21072  017704  2AE3               	incf	plusw1,f,c
 21073  017706  E311               	bnc	u6290
 21074  017708  0EE8               	movlw	-24
 21075  01770A  2AE3               	incf	plusw1,f,c
 21076  01770C  E30E               	bnc	u6290
 21077  01770E  0EE9               	movlw	-23
 21078  017710  2AE3               	incf	plusw1,f,c
 21079  017712  E30B               	bnc	u6290
 21080  017714  0EEA               	movlw	-22
 21081  017716  2AE3               	incf	plusw1,f,c
 21082  017718  E308               	bnc	u6290
 21083  01771A  0EEB               	movlw	-21
 21084  01771C  2AE3               	incf	plusw1,f,c
 21085  01771E  E305               	bnc	u6290
 21086  017720  0EEC               	movlw	-20
 21087  017722  2AE3               	incf	plusw1,f,c
 21088  017724  E302               	bnc	u6290
 21089  017726  0EED               	movlw	-19
 21090  017728  2AE3               	incf	plusw1,f,c
 21091  01772A                     u6290:
 21092                           
 21093                           ;stkvar	_sign @ sp[(-10)+8]
 21094  01772A  0EFE               	movlw	-2
 21095  01772C  6AE3               	clrf	plusw1,c
 21096  01772E  2AE3               	incf	plusw1,f,c
 21097  017730                     l8116:
 21098                           
 21099                           ;stkvar	_dividend @ sp[(-10)+-8]
 21100  017730  0EF5               	movlw	-11
 21101  017732  AEE3               	btfss	plusw1,7,c
 21102  017734  D027               	goto	l8122
 21103                           
 21104                           ;stkvar	_dividend @ sp[(-10)+-8]
 21105                           ;stkvar	_dividend @ sp[(-10)+-8]
 21106  017736  0EEE               	movlw	-18
 21107  017738  6CE3               	negf	plusw1,c
 21108  01773A  0EEF               	movlw	-17
 21109  01773C  1EE3               	comf	plusw1,f,c
 21110  01773E  0EF0               	movlw	-16
 21111  017740  1EE3               	comf	plusw1,f,c
 21112  017742  0EF1               	movlw	-15
 21113  017744  1EE3               	comf	plusw1,f,c
 21114  017746  0EF2               	movlw	-14
 21115  017748  1EE3               	comf	plusw1,f,c
 21116  01774A  0EF3               	movlw	-13
 21117  01774C  1EE3               	comf	plusw1,f,c
 21118  01774E  0EF4               	movlw	-12
 21119  017750  1EE3               	comf	plusw1,f,c
 21120  017752  0EF5               	movlw	-11
 21121  017754  1EE3               	comf	plusw1,f,c
 21122  017756  E314               	bnc	u6310
 21123  017758  0EEF               	movlw	-17
 21124  01775A  2AE3               	incf	plusw1,f,c
 21125  01775C  E311               	bnc	u6310
 21126  01775E  0EF0               	movlw	-16
 21127  017760  2AE3               	incf	plusw1,f,c
 21128  017762  E30E               	bnc	u6310
 21129  017764  0EF1               	movlw	-15
 21130  017766  2AE3               	incf	plusw1,f,c
 21131  017768  E30B               	bnc	u6310
 21132  01776A  0EF2               	movlw	-14
 21133  01776C  2AE3               	incf	plusw1,f,c
 21134  01776E  E308               	bnc	u6310
 21135  017770  0EF3               	movlw	-13
 21136  017772  2AE3               	incf	plusw1,f,c
 21137  017774  E305               	bnc	u6310
 21138  017776  0EF4               	movlw	-12
 21139  017778  2AE3               	incf	plusw1,f,c
 21140  01777A  E302               	bnc	u6310
 21141  01777C  0EF5               	movlw	-11
 21142  01777E  2AE3               	incf	plusw1,f,c
 21143  017780                     u6310:
 21144                           
 21145                           ;stkvar	_sign @ sp[(-10)+8]
 21146  017780  0EFE               	movlw	-2
 21147  017782  70E3               	btg	plusw1,0,c
 21148  017784                     l8122:
 21149                           
 21150                           ;stkvar	_quotient @ sp[(-10)+0]
 21151  017784  0E07               	movlw	7
 21152  017786  6E01               	movwf	btemp^0,c
 21153  017788  0EF6               	movlw	-10
 21154  01778A                     u6321:
 21155  01778A  6AE3               	clrf	plusw1,c
 21156  01778C  2AE8               	incf	wreg,f,c
 21157  01778E  0601               	decf	btemp^0,f,c
 21158  017790  E2FC               	bc	u6321
 21159                           
 21160                           ;stkvar	_divisor @ sp[(-10)+-16]
 21161  017792  0EE6               	movlw	-26
 21162  017794  50E3               	movf	plusw1,w,c
 21163  017796  E116               	bnz	u6330
 21164  017798  0EE7               	movlw	-25
 21165  01779A  50E3               	movf	plusw1,w,c
 21166  01779C  E113               	bnz	u6330
 21167  01779E  0EE8               	movlw	-24
 21168  0177A0  50E3               	movf	plusw1,w,c
 21169  0177A2  E110               	bnz	u6330
 21170  0177A4  0EE9               	movlw	-23
 21171  0177A6  50E3               	movf	plusw1,w,c
 21172  0177A8  E10D               	bnz	u6330
 21173  0177AA  0EEA               	movlw	-22
 21174  0177AC  50E3               	movf	plusw1,w,c
 21175  0177AE  E10A               	bnz	u6330
 21176  0177B0  0EEB               	movlw	-21
 21177  0177B2  50E3               	movf	plusw1,w,c
 21178  0177B4  E107               	bnz	u6330
 21179  0177B6  0EEC               	movlw	-20
 21180  0177B8  50E3               	movf	plusw1,w,c
 21181  0177BA  E104               	bnz	u6330
 21182  0177BC  0EED               	movlw	-19
 21183  0177BE  50E3               	movf	plusw1,w,c
 21184  0177C0  B4D8               	btfsc	status,2,c
 21185  0177C2  D088               	goto	u6360
 21186  0177C4                     u6330:
 21187                           
 21188                           ;stkvar	_counter @ sp[(-10)+9]
 21189  0177C4  0EFF               	movlw	-1
 21190  0177C6  6AE3               	clrf	plusw1,c
 21191  0177C8  D012               	goto	L26
 21192  0177CA                     l8128:
 21193                           
 21194                           ;stkvar	_divisor @ sp[(-10)+-16]
 21195  0177CA  90D8               	bcf	status,0,c
 21196  0177CC  0EE6               	movlw	-26
 21197  0177CE  36E3               	rlcf	plusw1,f,c
 21198  0177D0  0EE7               	movlw	-25
 21199  0177D2  36E3               	rlcf	plusw1,f,c
 21200  0177D4  0EE8               	movlw	-24
 21201  0177D6  36E3               	rlcf	plusw1,f,c
 21202  0177D8  0EE9               	movlw	-23
 21203  0177DA  36E3               	rlcf	plusw1,f,c
 21204  0177DC  0EEA               	movlw	-22
 21205  0177DE  36E3               	rlcf	plusw1,f,c
 21206  0177E0  0EEB               	movlw	-21
 21207  0177E2  36E3               	rlcf	plusw1,f,c
 21208  0177E4  0EEC               	movlw	-20
 21209  0177E6  36E3               	rlcf	plusw1,f,c
 21210  0177E8  0EED               	movlw	-19
 21211  0177EA  36E3               	rlcf	plusw1,f,c
 21212                           
 21213                           ;stkvar	_counter @ sp[(-10)+9]
 21214  0177EC  0EFF               	movlw	-1
 21215  0177EE                     L26:
 21216  0177EE  2AE3               	incf	plusw1,f,c
 21217                           
 21218                           ;stkvar	_divisor @ sp[(-10)+-16]
 21219  0177F0  0EED               	movlw	-19
 21220  0177F2  AEE3               	btfss	plusw1,7,c
 21221  0177F4  D7EA               	goto	l8128
 21222  0177F6                     u6340:
 21223                           
 21224                           ;stkvar	_quotient @ sp[(-10)+0]
 21225  0177F6  90D8               	bcf	status,0,c
 21226  0177F8  0EF6               	movlw	-10
 21227  0177FA  36E3               	rlcf	plusw1,f,c
 21228  0177FC  0EF7               	movlw	-9
 21229  0177FE  36E3               	rlcf	plusw1,f,c
 21230  017800  0EF8               	movlw	-8
 21231  017802  36E3               	rlcf	plusw1,f,c
 21232  017804  0EF9               	movlw	-7
 21233  017806  36E3               	rlcf	plusw1,f,c
 21234  017808  0EFA               	movlw	-6
 21235  01780A  36E3               	rlcf	plusw1,f,c
 21236  01780C  0EFB               	movlw	-5
 21237  01780E  36E3               	rlcf	plusw1,f,c
 21238  017810  0EFC               	movlw	-4
 21239  017812  36E3               	rlcf	plusw1,f,c
 21240  017814  0EFD               	movlw	-3
 21241  017816  36E3               	rlcf	plusw1,f,c
 21242                           
 21243                           ;stkvar	_divisor @ sp[(-10)+-16]
 21244                           ;stkvar	_dividend @ sp[(-10)+-8]
 21245  017818  50E1               	movf	fsr1l,w,c
 21246  01781A  0FEE               	addlw	-18
 21247  01781C  6ED9               	movwf	fsr2l,c
 21248  01781E  50E2               	movf	fsr1h,w,c
 21249  017820  6EDA               	movwf	fsr2h,c
 21250  017822  0EFF               	movlw	255
 21251  017824  22DA               	addwfc	fsr2h,f,c
 21252  017826  0EE6               	movlw	-26
 21253  017828  50E3               	movf	plusw1,w,c
 21254  01782A  5CDE               	subwf	postinc2,w,c
 21255  01782C  0EE7               	movlw	-25
 21256  01782E  50E3               	movf	plusw1,w,c
 21257  017830  58DE               	subwfb	postinc2,w,c
 21258  017832  0EE8               	movlw	-24
 21259  017834  50E3               	movf	plusw1,w,c
 21260  017836  58DE               	subwfb	postinc2,w,c
 21261  017838  0EE9               	movlw	-23
 21262  01783A  50E3               	movf	plusw1,w,c
 21263  01783C  58DE               	subwfb	postinc2,w,c
 21264  01783E  0EEA               	movlw	-22
 21265  017840  50E3               	movf	plusw1,w,c
 21266  017842  58DE               	subwfb	postinc2,w,c
 21267  017844  0EEB               	movlw	-21
 21268  017846  50E3               	movf	plusw1,w,c
 21269  017848  58DE               	subwfb	postinc2,w,c
 21270  01784A  0EEC               	movlw	-20
 21271  01784C  50E3               	movf	plusw1,w,c
 21272  01784E  58DE               	subwfb	postinc2,w,c
 21273  017850  0EED               	movlw	-19
 21274  017852  50E3               	movf	plusw1,w,c
 21275  017854  58DE               	subwfb	postinc2,w,c
 21276  017856  A0D8               	btfss	status,0,c
 21277  017858  D021               	goto	l8140
 21278                           
 21279                           ;stkvar	_divisor @ sp[(-10)+-16]
 21280                           ;stkvar	_dividend @ sp[(-10)+-8]
 21281  01785A  50E1               	movf	fsr1l,w,c
 21282  01785C  0FEE               	addlw	-18
 21283  01785E  6ED9               	movwf	fsr2l,c
 21284  017860  50E2               	movf	fsr1h,w,c
 21285  017862  6EDA               	movwf	fsr2h,c
 21286  017864  0EFF               	movlw	255
 21287  017866  22DA               	addwfc	fsr2h,f,c
 21288  017868  0EE6               	movlw	-26
 21289  01786A  50E3               	movf	plusw1,w,c
 21290  01786C  5EDE               	subwf	postinc2,f,c
 21291  01786E  0EE7               	movlw	-25
 21292  017870  50E3               	movf	plusw1,w,c
 21293  017872  5ADE               	subwfb	postinc2,f,c
 21294  017874  0EE8               	movlw	-24
 21295  017876  50E3               	movf	plusw1,w,c
 21296  017878  5ADE               	subwfb	postinc2,f,c
 21297  01787A  0EE9               	movlw	-23
 21298  01787C  50E3               	movf	plusw1,w,c
 21299  01787E  5ADE               	subwfb	postinc2,f,c
 21300  017880  0EEA               	movlw	-22
 21301  017882  50E3               	movf	plusw1,w,c
 21302  017884  5ADE               	subwfb	postinc2,f,c
 21303  017886  0EEB               	movlw	-21
 21304  017888  50E3               	movf	plusw1,w,c
 21305  01788A  5ADE               	subwfb	postinc2,f,c
 21306  01788C  0EEC               	movlw	-20
 21307  01788E  50E3               	movf	plusw1,w,c
 21308  017890  5ADE               	subwfb	postinc2,f,c
 21309  017892  0EED               	movlw	-19
 21310  017894  50E3               	movf	plusw1,w,c
 21311  017896  5ADE               	subwfb	postinc2,f,c
 21312                           
 21313                           ;stkvar	_quotient @ sp[(-10)+0]
 21314  017898  0EF6               	movlw	-10
 21315  01789A  80E3               	bsf	plusw1,0,c
 21316  01789C                     l8140:
 21317                           
 21318                           ;stkvar	_divisor @ sp[(-10)+-16]
 21319  01789C  90D8               	bcf	status,0,c
 21320  01789E  0EED               	movlw	-19
 21321  0178A0  32E3               	rrcf	plusw1,f,c
 21322  0178A2  0EEC               	movlw	-20
 21323  0178A4  32E3               	rrcf	plusw1,f,c
 21324  0178A6  0EEB               	movlw	-21
 21325  0178A8  32E3               	rrcf	plusw1,f,c
 21326  0178AA  0EEA               	movlw	-22
 21327  0178AC  32E3               	rrcf	plusw1,f,c
 21328  0178AE  0EE9               	movlw	-23
 21329  0178B0  32E3               	rrcf	plusw1,f,c
 21330  0178B2  0EE8               	movlw	-24
 21331  0178B4  32E3               	rrcf	plusw1,f,c
 21332  0178B6  0EE7               	movlw	-25
 21333  0178B8  32E3               	rrcf	plusw1,f,c
 21334  0178BA  0EE6               	movlw	-26
 21335  0178BC  32E3               	rrcf	plusw1,f,c
 21336                           
 21337                           ;stkvar	_counter @ sp[(-10)+9]
 21338  0178BE  0EFF               	movlw	-1
 21339  0178C0  50E3               	movf	plusw1,w,c
 21340  0178C2  6E01               	movwf	btemp^0,c
 21341  0178C4  0E01               	movlw	1
 21342  0178C6  5E01               	subwf	btemp^0,f,c
 21343  0178C8  0EFF               	movlw	-1
 21344  0178CA  0060  F007  FFE3   	movff	btemp,plusw1
 21345  0178D0  A4D8               	btfss	status,2,c
 21346  0178D2  D791               	goto	u6340
 21347  0178D4                     u6360:
 21348                           
 21349                           ;stkvar	_sign @ sp[(-10)+8]
 21350  0178D4  0EFE               	movlw	-2
 21351  0178D6  50E3               	movf	plusw1,w,c
 21352  0178D8  B4D8               	btfsc	status,2,c
 21353  0178DA  D025               	goto	u6380
 21354                           
 21355                           ;stkvar	_quotient @ sp[(-10)+0]
 21356                           ;stkvar	_quotient @ sp[(-10)+0]
 21357  0178DC  0EF6               	movlw	-10
 21358  0178DE  6CE3               	negf	plusw1,c
 21359  0178E0  0EF7               	movlw	-9
 21360  0178E2  1EE3               	comf	plusw1,f,c
 21361  0178E4  0EF8               	movlw	-8
 21362  0178E6  1EE3               	comf	plusw1,f,c
 21363  0178E8  0EF9               	movlw	-7
 21364  0178EA  1EE3               	comf	plusw1,f,c
 21365  0178EC  0EFA               	movlw	-6
 21366  0178EE  1EE3               	comf	plusw1,f,c
 21367  0178F0  0EFB               	movlw	-5
 21368  0178F2  1EE3               	comf	plusw1,f,c
 21369  0178F4  0EFC               	movlw	-4
 21370  0178F6  1EE3               	comf	plusw1,f,c
 21371  0178F8  0EFD               	movlw	-3
 21372  0178FA  1EE3               	comf	plusw1,f,c
 21373  0178FC  E314               	bnc	u6380
 21374  0178FE  0EF7               	movlw	-9
 21375  017900  2AE3               	incf	plusw1,f,c
 21376  017902  E311               	bnc	u6380
 21377  017904  0EF8               	movlw	-8
 21378  017906  2AE3               	incf	plusw1,f,c
 21379  017908  E30E               	bnc	u6380
 21380  01790A  0EF9               	movlw	-7
 21381  01790C  2AE3               	incf	plusw1,f,c
 21382  01790E  E30B               	bnc	u6380
 21383  017910  0EFA               	movlw	-6
 21384  017912  2AE3               	incf	plusw1,f,c
 21385  017914  E308               	bnc	u6380
 21386  017916  0EFB               	movlw	-5
 21387  017918  2AE3               	incf	plusw1,f,c
 21388  01791A  E305               	bnc	u6380
 21389  01791C  0EFC               	movlw	-4
 21390  01791E  2AE3               	incf	plusw1,f,c
 21391  017920  E302               	bnc	u6380
 21392  017922  0EFD               	movlw	-3
 21393  017924  2AE3               	incf	plusw1,f,c
 21394  017926                     u6380:
 21395                           
 21396                           ;stkvar	_quotient @ sp[(-10)+0]
 21397  017926  0EF6               	movlw	246
 21398  017928  24E1               	addwf	fsr1l,w,c
 21399  01792A  6ED9               	movwf	fsr2l,c
 21400  01792C  0EFF               	movlw	255
 21401  01792E  20E2               	addwfc	fsr1h,w,c
 21402  017930  6EDA               	movwf	fsr2h,c
 21403                           
 21404                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 21405  017932  0E08               	movlw	8
 21406  017934  6E01               	movwf	btemp^0,c
 21407  017936  0EEE               	movlw	-18
 21408  017938                     us639999:
 21409  017938  006F FF7B FFE3     	movff	postinc2,plusw1
 21410  01793E  28E8               	incf	wreg,w,c
 21411  017940  2E01               	decfsz	btemp^0,f,c
 21412  017942  D7FA               	bra	us639999
 21413                           
 21414                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 21415  017944  0EF6               	movlw	246
 21416  017946  26E1               	addwf	fsr1l,f,c
 21417  017948  0EFF               	movlw	255
 21418  01794A  22E2               	addwfc	fsr1h,f,c
 21419  01794C  0012               	return		;funcret
 21420  01794E                     __end_of___aodiv:
 21421                           	opt callstack 0
 21422                           
 21423 ;; *************** function _ctoa *****************
 21424 ;; Defined at:
 21425 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21426 ;; Parameters:    Size  Location     Type
 21427 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21428 ;;		 -> f(6), NULL(0), 
 21429 ;;  c               1  [STACK] unsigned char 
 21430 ;; Auto vars:     Size  Location     Type
 21431 ;;  w               2  [STACK] int 
 21432 ;;  l               2    0        int 
 21433 ;; Return value:  Size  Location     Type
 21434 ;;                  2  [STACK] int 
 21435 ;; Registers used:
 21436 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 21437 ;; Tracked objects:
 21438 ;;		On entry : 0/0
 21439 ;;		On exit  : 0/0
 21440 ;;		Unchanged: 0/0
 21441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21446 ;;Total ram usage:        0 bytes
 21447 ;; Hardware stack levels used:    1
 21448 ;; Hardware stack levels required when called:   20
 21449 ;; This function calls:
 21450 ;;		_pad
 21451 ;; This function is called by:
 21452 ;;		_vfpfcnvrt
 21453 ;; This function uses a reentrant model
 21454 ;;
 21455                           
 21456                           	psect	text72
 21457  01AC2E                     __ptext72:
 21458                           	opt callstack 0
 21459  01AC2E                     _ctoa:
 21460                           	opt callstack 0
 21461                           
 21462                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21463  01AC2E  52E6               	movf	postinc1,f,c
 21464  01AC30  52E6               	movf	postinc1,f,c
 21465                           
 21466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 21467                           
 21468                           ;incstack = 0
 21469 ;; hardware stack exceeded
 21470  01AC32  503A               	movf	_width^0,w,c
 21471  01AC34  103B               	iorwf	(_width+1)^0,w,c
 21472  01AC36  A4D8               	btfss	status,2,c
 21473  01AC38  D009               	goto	l11916
 21474                           
 21475                           ;stkvar	_w @ sp[(-2)+0]
 21476  01AC3A  0EFE               	movlw	-2
 21477  01AC3C  0060  F0EB  FFE3   	movff	_width,plusw1
 21478  01AC42  0EFF               	movlw	-1
 21479  01AC44  0060  F0EF  FFE3   	movff	_width+1,plusw1
 21480  01AC4A  D016               	goto	l11918
 21481  01AC4C                     l11916:
 21482  01AC4C  0EFF               	movlw	255
 21483  01AC4E  6E0B               	movwf	(btemp+10)^0,c
 21484  01AC50  0EFF               	movlw	255
 21485  01AC52  6E0C               	movwf	(btemp+11)^0,c
 21486  01AC54  0060  F0E8  F009   	movff	_width,btemp+8
 21487  01AC5A  0060  F0EC  F00A   	movff	_width+1,btemp+9
 21488  01AC60  500B               	movf	(btemp+10)^0,w,c
 21489  01AC62  2609               	addwf	(btemp+8)^0,f,c
 21490  01AC64  500C               	movf	(btemp+11)^0,w,c
 21491  01AC66  220A               	addwfc	(btemp+9)^0,f,c
 21492                           
 21493                           ;stkvar	_w @ sp[(-2)+0]
 21494  01AC68  0EFE               	movlw	-2
 21495  01AC6A  0060  F027  FFE3   	movff	btemp+8,plusw1
 21496  01AC70  0EFF               	movlw	-1
 21497  01AC72  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21498  01AC78                     l11918:
 21499                           
 21500                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 21501                           ;stkvar	_c @ sp[(-2)+-3]
 21502  01AC78  0EFB               	movlw	-5
 21503  01AC7A  006F FF8C  F297    	movff	plusw1,_dbuf
 21504                           
 21505                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 21506  01AC80  0102               	movlb	2	; () banked
 21507  01AC82  6B98               	clrf	(_dbuf+1)& (0+255),b
 21508                           
 21509                           ; BSR set to: 2
 21510                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 21511                           ;stkvar	_w @ sp[(-2)+0]
 21512  01AC84  0EFE               	movlw	-2
 21513  01AC86  006F FF8F FFE6     	movff	plusw1,postinc1
 21514  01AC8C  006F FF8F FFE6     	movff	plusw1,postinc1
 21515  01AC92  0E97               	movlw	low _dbuf
 21516  01AC94  6EE6               	movwf	postinc1,c
 21517  01AC96  0E02               	movlw	high _dbuf
 21518  01AC98  6EE6               	movwf	postinc1,c
 21519                           
 21520                           ;stkvar	_fp @ sp[(-6)+-2]
 21521  01AC9A  0EF8               	movlw	-8
 21522  01AC9C  006F FF8F FFE6     	movff	plusw1,postinc1
 21523  01ACA2  006F FF8F FFE6     	movff	plusw1,postinc1
 21524  01ACA8  EC7B  F0CD         	call	_pad	;wreg free
 21525                           
 21526                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 21527  01ACAC  0EFB               	movlw	251
 21528  01ACAE  26E1               	addwf	fsr1l,f,c
 21529  01ACB0  0EFF               	movlw	255
 21530  01ACB2  22E2               	addwfc	fsr1h,f,c
 21531  01ACB4  0012               	return		;funcret
 21532  01ACB6                     __end_of_ctoa:
 21533                           	opt callstack 0
 21534                           
 21535 ;; *************** function _pad *****************
 21536 ;; Defined at:
 21537 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21538 ;; Parameters:    Size  Location     Type
 21539 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21540 ;;		 -> f(6), NULL(0), 
 21541 ;;  buf             2  [STACK] PTR unsigned char 
 21542 ;;		 -> dbuf(80), 
 21543 ;;  p               2  [STACK] int 
 21544 ;; Auto vars:     Size  Location     Type
 21545 ;;  w               2  [STACK] int 
 21546 ;;  i               2  [STACK] int 
 21547 ;; Return value:  Size  Location     Type
 21548 ;;                  2  [STACK] int 
 21549 ;; Registers used:
 21550 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 21551 ;; Tracked objects:
 21552 ;;		On entry : 0/2
 21553 ;;		On exit  : 0/0
 21554 ;;		Unchanged: 0/0
 21555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21560 ;;Total ram usage:        0 bytes
 21561 ;; Hardware stack levels used:    1
 21562 ;; Hardware stack levels required when called:   19
 21563 ;; This function calls:
 21564 ;;		_fputc
 21565 ;;		_fputs
 21566 ;;		_strlen
 21567 ;; This function is called by:
 21568 ;;		_ctoa
 21569 ;;		_dtoa
 21570 ;;		_efgtoa
 21571 ;;		_utoa
 21572 ;;		_xtoa
 21573 ;; This function uses a reentrant model
 21574 ;;
 21575                           
 21576                           	psect	text73
 21577  019AF6                     __ptext73:
 21578                           	opt callstack 0
 21579  019AF6                     _pad:
 21580                           	opt callstack 0
 21581                           
 21582                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21583  019AF6  52E6               	movf	postinc1,f,c
 21584  019AF8  52E6               	movf	postinc1,f,c
 21585  019AFA  52E6               	movf	postinc1,f,c
 21586  019AFC  52E6               	movf	postinc1,f,c
 21587                           
 21588                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 21589                           
 21590                           ;incstack = 0
 21591 ;; hardware stack exceeded
 21592  019AFE  A03E               	btfss	_flags^0,0,c
 21593  019B00  D010               	goto	l11878
 21594                           
 21595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 21596                           ;stkvar	_fp @ sp[(-4)+-2]
 21597  019B02  0EFA               	movlw	-6
 21598  019B04  006F FF8F FFE6     	movff	plusw1,postinc1
 21599  019B0A  006F FF8F FFE6     	movff	plusw1,postinc1
 21600                           
 21601                           ;stkvar	_buf @ sp[(-6)+-4]
 21602  019B10  0EF6               	movlw	-10
 21603  019B12  006F FF8F FFE6     	movff	plusw1,postinc1
 21604  019B18  006F FF8F FFE6     	movff	plusw1,postinc1
 21605  019B1E  ECF1  F0D4         	call	_fputs	;wreg free
 21606  019B22                     l11878:
 21607                           
 21608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 21609                           ;stkvar	_p @ sp[(-4)+-6]
 21610  019B22  0EF7               	movlw	-9
 21611  019B24  BEE3               	btfsc	plusw1,7,c
 21612  019B26  D011               	goto	l11882
 21613                           
 21614                           ;stkvar	_p @ sp[(-4)+-6]
 21615                           ;stkvar	_w @ sp[(-4)+0]
 21616  019B28  0EF6               	movlw	-10
 21617  019B2A  006F FF8C  F001    	movff	plusw1,btemp
 21618  019B30  0EFC               	movlw	-4
 21619  019B32  0060  F007  FFE3   	movff	btemp,plusw1
 21620  019B38  0EF7               	movlw	-9
 21621  019B3A  006F FF8C  F001    	movff	plusw1,btemp
 21622  019B40  0EFD               	movlw	-3
 21623  019B42  0060  F007  FFE3   	movff	btemp,plusw1
 21624  019B48  D004               	goto	l2138
 21625  019B4A                     l11882:
 21626                           
 21627                           ;stkvar	_w @ sp[(-4)+0]
 21628  019B4A  0EFC               	movlw	-4
 21629  019B4C  6AE3               	clrf	plusw1,c
 21630  019B4E  0EFD               	movlw	-3
 21631  019B50  6AE3               	clrf	plusw1,c
 21632  019B52                     l2138:
 21633                           
 21634                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 21635                           ;stkvar	_i @ sp[(-4)+2]
 21636  019B52  0EFE               	movlw	-2
 21637  019B54  6AE3               	clrf	plusw1,c
 21638  019B56  0EFF               	movlw	-1
 21639  019B58  6AE3               	clrf	plusw1,c
 21640                           
 21641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 21642  019B5A  D01E               	goto	l11888
 21643  019B5C                     l11884:
 21644                           
 21645                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 21646                           ;stkvar	_fp @ sp[(-4)+-2]
 21647  019B5C  0EFA               	movlw	-6
 21648  019B5E  006F FF8F FFE6     	movff	plusw1,postinc1
 21649  019B64  006F FF8F FFE6     	movff	plusw1,postinc1
 21650  019B6A  0E20               	movlw	32
 21651  019B6C  6EE6               	movwf	postinc1,c
 21652  019B6E  0E00               	movlw	0
 21653  019B70  6EE6               	movwf	postinc1,c
 21654  019B72  ECD0  F0CB         	call	_fputc	;wreg free
 21655                           
 21656                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 21657                           ;stkvar	_i @ sp[(-4)+2]
 21658  019B76  0EFE               	movlw	-2
 21659  019B78  50E3               	movf	plusw1,w,c
 21660  019B7A  0F01               	addlw	1
 21661  019B7C  6E01               	movwf	btemp^0,c
 21662  019B7E  0EFE               	movlw	-2
 21663  019B80  0060  F007  FFE3   	movff	btemp,plusw1
 21664  019B86  6A01               	clrf	btemp^0,c
 21665  019B88  0EFF               	movlw	-1
 21666  019B8A  50E3               	movf	plusw1,w,c
 21667  019B8C  2001               	addwfc	btemp^0,w,c
 21668  019B8E  6E01               	movwf	btemp^0,c
 21669  019B90  0EFF               	movlw	-1
 21670  019B92  0060  F007  FFE3   	movff	btemp,plusw1
 21671  019B98                     l11888:
 21672                           
 21673                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 21674                           ;stkvar	_w @ sp[(-4)+0]
 21675                           ;stkvar	_i @ sp[(-4)+2]
 21676  019B98  50E1               	movf	fsr1l,w,c
 21677  019B9A  0FFE               	addlw	-2
 21678  019B9C  6ED9               	movwf	fsr2l,c
 21679  019B9E  50E2               	movf	fsr1h,w,c
 21680  019BA0  6EDA               	movwf	fsr2h,c
 21681  019BA2  0EFF               	movlw	255
 21682  019BA4  22DA               	addwfc	fsr2h,f,c
 21683  019BA6  0EFC               	movlw	-4
 21684  019BA8  50E3               	movf	plusw1,w,c
 21685  019BAA  5CDE               	subwf	postinc2,w,c
 21686  019BAC  50DE               	movf	postinc2,w,c
 21687  019BAE  0A80               	xorlw	128
 21688  019BB0  6E01               	movwf	btemp^0,c
 21689  019BB2  0EFD               	movlw	-3
 21690  019BB4  50E3               	movf	plusw1,w,c
 21691  019BB6  0A80               	xorlw	128
 21692  019BB8  5801               	subwfb	btemp^0,w,c
 21693  019BBA  A0D8               	btfss	status,0,c
 21694  019BBC  D7CF               	goto	l11884
 21695                           
 21696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 21697  019BBE  B03E               	btfsc	_flags^0,0,c
 21698  019BC0  D010               	goto	l11892
 21699                           
 21700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 21701                           ;stkvar	_fp @ sp[(-4)+-2]
 21702  019BC2  0EFA               	movlw	-6
 21703  019BC4  006F FF8F FFE6     	movff	plusw1,postinc1
 21704  019BCA  006F FF8F FFE6     	movff	plusw1,postinc1
 21705                           
 21706                           ;stkvar	_buf @ sp[(-6)+-4]
 21707  019BD0  0EF6               	movlw	-10
 21708  019BD2  006F FF8F FFE6     	movff	plusw1,postinc1
 21709  019BD8  006F FF8F FFE6     	movff	plusw1,postinc1
 21710  019BDE  ECF1  F0D4         	call	_fputs	;wreg free
 21711  019BE2                     l11892:
 21712                           
 21713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 21714                           ;stkvar	_w @ sp[(-4)+0]
 21715                           ;stkvar	_buf @ sp[(-4)+-4]
 21716  019BE2  0EF8               	movlw	-8
 21717  019BE4  006F FF8F FFE6     	movff	plusw1,postinc1
 21718  019BEA  006F FF8F FFE6     	movff	plusw1,postinc1
 21719  019BF0  ECA0  F0D4         	call	_strlen	;wreg free
 21720  019BF4  0EFC               	movlw	-4
 21721  019BF6  50E3               	movf	plusw1,w,c
 21722  019BF8  2601               	addwf	btemp^0,f,c
 21723  019BFA  0EFD               	movlw	-3
 21724  019BFC  50E3               	movf	plusw1,w,c
 21725  019BFE  2202               	addwfc	(btemp+1)^0,f,c
 21726                           
 21727                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 21728  019C00  0EF6               	movlw	246
 21729  019C02  26E1               	addwf	fsr1l,f,c
 21730  019C04  0EFF               	movlw	255
 21731  019C06  22E2               	addwfc	fsr1h,f,c
 21732  019C08  0012               	return		;funcret
 21733  019C0A                     __end_of_pad:
 21734                           	opt callstack 0
 21735                           
 21736 ;; *************** function _strlen *****************
 21737 ;; Defined at:
 21738 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 21739 ;; Parameters:    Size  Location     Type
 21740 ;;  s               2  [STACK] PTR const unsigned char 
 21741 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21742 ;;		 -> spin(120), STR_46(9), STR_45(12), D.lcd(480), 
 21743 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 21744 ;;		 -> V(191), 
 21745 ;; Auto vars:     Size  Location     Type
 21746 ;;  a               2  [STACK] PTR const unsigned char 
 21747 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21748 ;;		 -> spin(120), STR_46(9), STR_45(12), D.lcd(480), 
 21749 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 21750 ;;		 -> V(191), 
 21751 ;; Return value:  Size  Location     Type
 21752 ;;                  2  [STACK] unsigned int 
 21753 ;; Registers used:
 21754 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 21755 ;; Tracked objects:
 21756 ;;		On entry : 0/0
 21757 ;;		On exit  : 0/0
 21758 ;;		Unchanged: 0/0
 21759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21764 ;;Total ram usage:        0 bytes
 21765 ;; Hardware stack levels used:    1
 21766 ;; Hardware stack levels required when called:   15
 21767 ;; This function calls:
 21768 ;;		Nothing
 21769 ;; This function is called by:
 21770 ;;		_eaDogM_WriteString
 21771 ;;		_spinners
 21772 ;;		_calc_bsoc
 21773 ;;		_pad
 21774 ;;		_stoa
 21775 ;; This function uses a reentrant model
 21776 ;;
 21777                           
 21778                           	psect	text74
 21779  01A940                     __ptext74:
 21780                           	opt callstack 0
 21781  01A940                     _strlen:
 21782                           	opt callstack 0
 21783                           
 21784                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21785  01A940  52E6               	movf	postinc1,f,c
 21786  01A942  52E6               	movf	postinc1,f,c
 21787                           
 21788                           ;stkvar	_s @ sp[(-2)+-2]
 21789                           
 21790                           ;incstack = 0
 21791 ;; hardware stack exceeded
 21792  01A944  0EFC               	movlw	-4
 21793  01A946  006F FF8C  F00B    	movff	plusw1,btemp+10
 21794  01A94C  0EFD               	movlw	-3
 21795  01A94E  006F FF8C  F00C    	movff	plusw1,btemp+11
 21796                           
 21797                           ;stkvar	_a @ sp[(-2)+0]
 21798  01A954  0EFF               	movlw	-1
 21799  01A956  0060  F033  FFE3   	movff	btemp+11,plusw1
 21800  01A95C  0EFE               	movlw	-2
 21801  01A95E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21802  01A964  D011               	goto	l7692
 21803  01A966                     l7690:
 21804                           
 21805                           ;stkvar	_s @ sp[(-2)+-2]
 21806  01A966  0EFC               	movlw	-4
 21807  01A968  50E3               	movf	plusw1,w,c
 21808  01A96A  0F01               	addlw	1
 21809  01A96C  6E01               	movwf	btemp^0,c
 21810  01A96E  0EFC               	movlw	-4
 21811  01A970  0060  F007  FFE3   	movff	btemp,plusw1
 21812  01A976  6A01               	clrf	btemp^0,c
 21813  01A978  0EFD               	movlw	-3
 21814  01A97A  50E3               	movf	plusw1,w,c
 21815  01A97C  2001               	addwfc	btemp^0,w,c
 21816  01A97E  6E01               	movwf	btemp^0,c
 21817  01A980  0EFD               	movlw	-3
 21818  01A982  0060  F007  FFE3   	movff	btemp,plusw1
 21819  01A988                     l7692:
 21820                           
 21821                           ;stkvar	_s @ sp[(-2)+-2]
 21822  01A988  0EFC               	movlw	-4
 21823  01A98A  006F FF8F FFF6     	movff	plusw1,tblptrl
 21824  01A990  0EFD               	movlw	-3
 21825  01A992  006F FF8F FFF7     	movff	plusw1,tblptrh
 21826  01A998  0E00               	movlw	low (__mediumconst shr (0+16))
 21827  01A99A  6EF8               	movwf	tblptru,c
 21828  01A99C  0E1F               	movlw	(high __ramtop+-1)
 21829  01A99E  64F7               	cpfsgt	tblptrh,c
 21830  01A9A0  D003               	bra	u5407
 21831  01A9A2  0008               	tblrd		*
 21832  01A9A4  50F5               	movf	tablat,w,c
 21833  01A9A6  D007               	bra	u5400
 21834  01A9A8                     u5407:
 21835  01A9A8  006F FFDB FFE9     	movff	tblptrl,fsr0l
 21836  01A9AE  006F FFDF FFEA     	movff	tblptrh,fsr0h
 21837  01A9B4  50EF               	movf	indf0,w,c
 21838  01A9B6                     u5400:
 21839  01A9B6  0900               	iorlw	0
 21840  01A9B8  A4D8               	btfss	status,2,c
 21841  01A9BA  D7D5               	goto	l7690
 21842                           
 21843                           ;stkvar	_a @ sp[(-2)+0]
 21844                           ;stkvar	_s @ sp[(-2)+-2]
 21845  01A9BC  0EFC               	movlw	-4
 21846  01A9BE  006F FF8C  F001    	movff	plusw1,btemp
 21847  01A9C4  0EFD               	movlw	-3
 21848  01A9C6  006F FF8C  F002    	movff	plusw1,btemp+1
 21849  01A9CC  0EFE               	movlw	-2
 21850  01A9CE  50E3               	movf	plusw1,w,c
 21851  01A9D0  5E01               	subwf	btemp^0,f,c
 21852  01A9D2  0EFF               	movlw	-1
 21853  01A9D4  50E3               	movf	plusw1,w,c
 21854  01A9D6  5A02               	subwfb	(btemp+1)^0,f,c
 21855                           
 21856                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 21857  01A9D8  52E5               	movf	postdec1,f,c
 21858  01A9DA  52E5               	movf	postdec1,f,c
 21859  01A9DC  52E5               	movf	postdec1,f,c
 21860  01A9DE  52E5               	movf	postdec1,f,c
 21861  01A9E0  0012               	return		;funcret
 21862  01A9E2                     __end_of_strlen:
 21863                           	opt callstack 0
 21864                           
 21865 ;; *************** function _fputs *****************
 21866 ;; Defined at:
 21867 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 21868 ;; Parameters:    Size  Location     Type
 21869 ;;  s               2  [STACK] PTR const unsigned char 
 21870 ;;		 -> dbuf(80), 
 21871 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21872 ;;		 -> f(6), NULL(0), 
 21873 ;; Auto vars:     Size  Location     Type
 21874 ;;  i               2  [STACK] int 
 21875 ;;  c               1  [STACK] unsigned char 
 21876 ;; Return value:  Size  Location     Type
 21877 ;;                  2  [STACK] int 
 21878 ;; Registers used:
 21879 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21880 ;; Tracked objects:
 21881 ;;		On entry : 0/2
 21882 ;;		On exit  : 0/0
 21883 ;;		Unchanged: 0/0
 21884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21889 ;;Total ram usage:        0 bytes
 21890 ;; Hardware stack levels used:    1
 21891 ;; Hardware stack levels required when called:   18
 21892 ;; This function calls:
 21893 ;;		_fputc
 21894 ;; This function is called by:
 21895 ;;		_pad
 21896 ;; This function uses a reentrant model
 21897 ;;
 21898                           
 21899                           	psect	text75
 21900  01A9E2                     __ptext75:
 21901                           	opt callstack 0
 21902  01A9E2                     _fputs:
 21903                           	opt callstack 0
 21904                           
 21905                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21906  01A9E2  52E6               	movf	postinc1,f,c
 21907  01A9E4  52E6               	movf	postinc1,f,c
 21908  01A9E6  52E6               	movf	postinc1,f,c
 21909                           
 21910                           ;stkvar	_i @ sp[(-3)+0]
 21911                           
 21912                           ;incstack = 0
 21913 ;; hardware stack exceeded
 21914  01A9E8  0EFD               	movlw	-3
 21915  01A9EA  6AE3               	clrf	plusw1,c
 21916  01A9EC  0EFE               	movlw	-2
 21917  01A9EE  6AE3               	clrf	plusw1,c
 21918  01A9F0  D01F               	goto	l11830
 21919  01A9F2                     l11826:
 21920                           
 21921                           ;stkvar	_fp @ sp[(-3)+-4]
 21922  01A9F2  0EF9               	movlw	-7
 21923  01A9F4  006F FF8F FFE6     	movff	plusw1,postinc1
 21924  01A9FA  006F FF8F FFE6     	movff	plusw1,postinc1
 21925                           
 21926                           ;stkvar	_c @ sp[(-5)+2]
 21927  01AA00  0EFD               	movlw	-3
 21928  01AA02  50E3               	movf	plusw1,w,c
 21929  01AA04  6EE6               	movwf	postinc1,c
 21930  01AA06  0E00               	movlw	0
 21931  01AA08  6EE6               	movwf	postinc1,c
 21932  01AA0A  ECD0  F0CB         	call	_fputc	;wreg free
 21933                           
 21934                           ;stkvar	_i @ sp[(-3)+0]
 21935  01AA0E  0EFD               	movlw	-3
 21936  01AA10  50E3               	movf	plusw1,w,c
 21937  01AA12  0F01               	addlw	1
 21938  01AA14  6E01               	movwf	btemp^0,c
 21939  01AA16  0EFD               	movlw	-3
 21940  01AA18  0060  F007  FFE3   	movff	btemp,plusw1
 21941  01AA1E  6A01               	clrf	btemp^0,c
 21942  01AA20  0EFE               	movlw	-2
 21943  01AA22  50E3               	movf	plusw1,w,c
 21944  01AA24  2001               	addwfc	btemp^0,w,c
 21945  01AA26  6E01               	movwf	btemp^0,c
 21946  01AA28  0EFE               	movlw	-2
 21947  01AA2A  0060  F007  FFE3   	movff	btemp,plusw1
 21948  01AA30                     l11830:
 21949                           
 21950                           ;stkvar	_i @ sp[(-3)+0]
 21951  01AA30  0EFD               	movlw	-3
 21952  01AA32  006F FF8C  F00B    	movff	plusw1,btemp+10
 21953  01AA38  0EFE               	movlw	-2
 21954  01AA3A  006F FF8C  F00C    	movff	plusw1,btemp+11
 21955                           
 21956                           ;stkvar	_s @ sp[(-3)+-2]
 21957  01AA40  0EFB               	movlw	-5
 21958  01AA42  006F FF8C  F009    	movff	plusw1,btemp+8
 21959  01AA48  0EFC               	movlw	-4
 21960  01AA4A  006F FF8C  F00A    	movff	plusw1,btemp+9
 21961  01AA50  500B               	movf	(btemp+10)^0,w,c
 21962  01AA52  2409               	addwf	(btemp+8)^0,w,c
 21963  01AA54  6ED9               	movwf	fsr2l,c
 21964  01AA56  500C               	movf	(btemp+11)^0,w,c
 21965  01AA58  200A               	addwfc	(btemp+9)^0,w,c
 21966  01AA5A  6EDA               	movwf	fsr2h,c
 21967  01AA5C  50DF               	movf	indf2,w,c
 21968  01AA5E  6E0C               	movwf	(btemp+11)^0,c
 21969                           
 21970                           ;stkvar	_c @ sp[(-3)+2]
 21971  01AA60  0EFF               	movlw	-1
 21972  01AA62  0060  F033  FFE3   	movff	btemp+11,plusw1
 21973  01AA68  0EFF               	movlw	-1
 21974  01AA6A  50E3               	movf	plusw1,w,c
 21975  01AA6C  A4D8               	btfss	status,2,c
 21976  01AA6E  D7C1               	goto	l11826
 21977                           
 21978                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21979  01AA70  0EF9               	movlw	249
 21980  01AA72  26E1               	addwf	fsr1l,f,c
 21981  01AA74  0EFF               	movlw	255
 21982  01AA76  22E2               	addwfc	fsr1h,f,c
 21983  01AA78  0012               	return		;funcret
 21984  01AA7A                     __end_of_fputs:
 21985                           	opt callstack 0
 21986                           
 21987 ;; *************** function _fputc *****************
 21988 ;; Defined at:
 21989 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 21990 ;; Parameters:    Size  Location     Type
 21991 ;;  c               2  [STACK] int 
 21992 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21993 ;;		 -> f(6), NULL(0), 
 21994 ;; Auto vars:     Size  Location     Type
 21995 ;;		None
 21996 ;; Return value:  Size  Location     Type
 21997 ;;                  2  [STACK] int 
 21998 ;; Registers used:
 21999 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 22000 ;; Tracked objects:
 22001 ;;		On entry : 0/0
 22002 ;;		On exit  : 0/0
 22003 ;;		Unchanged: 0/0
 22004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22009 ;;Total ram usage:        0 bytes
 22010 ;; Hardware stack levels used:    1
 22011 ;; Hardware stack levels required when called:   17
 22012 ;; This function calls:
 22013 ;;		_putch
 22014 ;; This function is called by:
 22015 ;;		_pad
 22016 ;;		_stoa
 22017 ;;		_vfpfcnvrt
 22018 ;;		_fputs
 22019 ;; This function uses a reentrant model
 22020 ;;
 22021                           
 22022                           	psect	text76
 22023  0197A0                     __ptext76:
 22024                           	opt callstack 0
 22025  0197A0                     _fputc:
 22026                           	opt callstack 0
 22027                           
 22028                           ;stkvar	_fp @ sp[(0)+-4]
 22029                           
 22030                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22031                           ;incstack = 0
 22032 ;; hardware stack exceeded
 22033  0197A0  0EFC               	movlw	-4
 22034  0197A2  006F FF8C  F001    	movff	plusw1,btemp
 22035  0197A8  0EFD               	movlw	-3
 22036  0197AA  50E3               	movf	plusw1,w,c
 22037  0197AC  1001               	iorwf	btemp^0,w,c
 22038  0197AE  B4D8               	btfsc	status,2,c
 22039  0197B0  D009               	goto	u10710
 22040                           
 22041                           ;stkvar	_fp @ sp[(0)+-4]
 22042  0197B2  0EFC               	movlw	-4
 22043  0197B4  006F FF8C  F001    	movff	plusw1,btemp
 22044  0197BA  0EFD               	movlw	-3
 22045  0197BC  50E3               	movf	plusw1,w,c
 22046  0197BE  1001               	iorwf	btemp^0,w,c
 22047  0197C0  A4D8               	btfss	status,2,c
 22048  0197C2  D006               	goto	l11814
 22049  0197C4                     u10710:
 22050                           
 22051                           ;stkvar	_c @ sp[(0)+-2]
 22052  0197C4  0EFE               	movlw	-2
 22053  0197C6  50E3               	movf	plusw1,w,c
 22054  0197C8  6EE6               	movwf	postinc1,c
 22055  0197CA  ECED  F0DF         	call	_putch	;wreg free
 22056  0197CE  D075               	goto	l3184
 22057  0197D0                     l11814:
 22058                           
 22059                           ;stkvar	_fp @ sp[(0)+-4]
 22060  0197D0  0EFC               	movlw	-4
 22061  0197D2  006F FF8C  F00B    	movff	plusw1,btemp+10
 22062  0197D8  0EFD               	movlw	-3
 22063  0197DA  006F FF8C  F00C    	movff	plusw1,btemp+11
 22064  0197E0  0E04               	movlw	4
 22065  0197E2  240B               	addwf	(btemp+10)^0,w,c
 22066  0197E4  6ED9               	movwf	fsr2l,c
 22067  0197E6  0E00               	movlw	0
 22068  0197E8  200C               	addwfc	(btemp+11)^0,w,c
 22069  0197EA  6EDA               	movwf	fsr2h,c
 22070  0197EC  50DE               	movf	postinc2,w,c
 22071  0197EE  10DE               	iorwf	postinc2,w,c
 22072  0197F0  B4D8               	btfsc	status,2,c
 22073  0197F2  D026               	goto	u10730
 22074                           
 22075                           ;stkvar	_fp @ sp[(0)+-4]
 22076  0197F4  0EFC               	movlw	-4
 22077  0197F6  006F FF8C  F00B    	movff	plusw1,btemp+10
 22078  0197FC  0EFD               	movlw	-3
 22079  0197FE  006F FF8C  F00C    	movff	plusw1,btemp+11
 22080  019804  0E04               	movlw	4
 22081  019806  240B               	addwf	(btemp+10)^0,w,c
 22082  019808  6ED9               	movwf	fsr2l,c
 22083  01980A  0E00               	movlw	0
 22084  01980C  200C               	addwfc	(btemp+11)^0,w,c
 22085  01980E  6EDA               	movwf	fsr2h,c
 22086                           
 22087                           ;stkvar	_fp @ sp[(0)+-4]
 22088  019810  0EFC               	movlw	-4
 22089  019812  006F FF8C  F00B    	movff	plusw1,btemp+10
 22090  019818  0EFD               	movlw	-3
 22091  01981A  006F FF8C  F00C    	movff	plusw1,btemp+11
 22092  019820  0E02               	movlw	2
 22093  019822  240B               	addwf	(btemp+10)^0,w,c
 22094  019824  6EE9               	movwf	fsr0l,c
 22095  019826  0E00               	movlw	0
 22096  019828  200C               	addwfc	(btemp+11)^0,w,c
 22097  01982A  6EEA               	movwf	fsr0h,c
 22098  01982C  50DE               	movf	postinc2,w,c
 22099  01982E  5CEE               	subwf	postinc0,w,c
 22100  019830  50EE               	movf	postinc0,w,c
 22101  019832  0A80               	xorlw	128
 22102  019834  6E01               	movwf	btemp^0,c
 22103  019836  50DE               	movf	postinc2,w,c
 22104  019838  0A80               	xorlw	128
 22105  01983A  5801               	subwfb	btemp^0,w,c
 22106  01983C  B0D8               	btfsc	status,0,c
 22107  01983E  D03D               	goto	l3184
 22108  019840                     u10730:
 22109                           
 22110                           ;stkvar	_c @ sp[(0)+-2]
 22111                           ;stkvar	_fp @ sp[(0)+-4]
 22112  019840  0EFC               	movlw	-4
 22113  019842  006F FF8C  F00B    	movff	plusw1,btemp+10
 22114  019848  0EFD               	movlw	-3
 22115  01984A  006F FF8C  F00C    	movff	plusw1,btemp+11
 22116  019850  0E02               	movlw	2
 22117  019852  240B               	addwf	(btemp+10)^0,w,c
 22118  019854  6ED9               	movwf	fsr2l,c
 22119  019856  0E00               	movlw	0
 22120  019858  200C               	addwfc	(btemp+11)^0,w,c
 22121  01985A  6EDA               	movwf	fsr2h,c
 22122  01985C  006F FF78  F00B    	movff	postinc2,btemp+10
 22123  019862  006F FF74  F00C    	movff	postdec2,btemp+11
 22124                           
 22125                           ;stkvar	_fp @ sp[(0)+-4]
 22126  019868  0EFC               	movlw	-4
 22127  01986A  006F FF8F FFD9     	movff	plusw1,fsr2l
 22128  019870  0EFD               	movlw	-3
 22129  019872  006F FF8F FFDA     	movff	plusw1,fsr2h
 22130  019878  006F FF78  F009    	movff	postinc2,btemp+8
 22131  01987E  006F FF74  F00A    	movff	postdec2,btemp+9
 22132  019884  500B               	movf	(btemp+10)^0,w,c
 22133  019886  2409               	addwf	(btemp+8)^0,w,c
 22134  019888  6ED9               	movwf	fsr2l,c
 22135  01988A  500C               	movf	(btemp+11)^0,w,c
 22136  01988C  200A               	addwfc	(btemp+9)^0,w,c
 22137  01988E  6EDA               	movwf	fsr2h,c
 22138  019890  0EFE               	movlw	-2
 22139  019892  006F FF8F FFDF     	movff	plusw1,indf2
 22140                           
 22141                           ;stkvar	_fp @ sp[(0)+-4]
 22142  019898  0EFC               	movlw	-4
 22143  01989A  006F FF8C  F00B    	movff	plusw1,btemp+10
 22144  0198A0  0EFD               	movlw	-3
 22145  0198A2  006F FF8C  F00C    	movff	plusw1,btemp+11
 22146  0198A8  0E02               	movlw	2
 22147  0198AA  240B               	addwf	(btemp+10)^0,w,c
 22148  0198AC  6ED9               	movwf	fsr2l,c
 22149  0198AE  0E00               	movlw	0
 22150  0198B0  200C               	addwfc	(btemp+11)^0,w,c
 22151  0198B2  6EDA               	movwf	fsr2h,c
 22152  0198B4  2ADE               	incf	postinc2,f,c
 22153  0198B6  0E00               	movlw	0
 22154  0198B8  22DD               	addwfc	postdec2,f,c
 22155  0198BA                     l3184:
 22156                           
 22157                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 22158  0198BA  52E5               	movf	postdec1,f,c
 22159  0198BC  52E5               	movf	postdec1,f,c
 22160  0198BE  52E5               	movf	postdec1,f,c
 22161  0198C0  52E5               	movf	postdec1,f,c
 22162  0198C2  0012               	return		;funcret
 22163  0198C4                     __end_of_fputc:
 22164                           	opt callstack 0
 22165                           
 22166 ;; *************** function _putch *****************
 22167 ;; Defined at:
 22168 ;;		line 421 in file "eadog.c"
 22169 ;; Parameters:    Size  Location     Type
 22170 ;;  c               1  [STACK] unsigned char 
 22171 ;; Auto vars:     Size  Location     Type
 22172 ;;		None
 22173 ;; Return value:  Size  Location     Type
 22174 ;;                  1  [STACK] void 
 22175 ;; Registers used:
 22176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 22177 ;; Tracked objects:
 22178 ;;		On entry : 0/0
 22179 ;;		On exit  : 0/0
 22180 ;;		Unchanged: 0/0
 22181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22186 ;;Total ram usage:        0 bytes
 22187 ;; Hardware stack levels used:    1
 22188 ;; Hardware stack levels required when called:   16
 22189 ;; This function calls:
 22190 ;;		_ringBufS_put_dma
 22191 ;; This function is called by:
 22192 ;;		_fputc
 22193 ;; This function uses a reentrant model
 22194 ;;
 22195                           
 22196                           	psect	text77
 22197  01BFDA                     __ptext77:
 22198                           	opt callstack 0
 22199  01BFDA                     _putch:
 22200                           	opt callstack 0
 22201                           
 22202                           ;eadog.c: 421: void putch(char c);eadog.c: 422: {;eadog.c: 423:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 22203                           ;stkvar	_c @ sp[(0)+-1]
 22204                           
 22205                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22206                           ;incstack = 0
 22207 ;; hardware stack exceeded
 22208  01BFDA  0EFF               	movlw	-1
 22209  01BFDC  50E3               	movf	plusw1,w,c
 22210  01BFDE  6EE6               	movwf	postinc1,c
 22211  01BFE0  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 22212  01BFE6  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 22213  01BFEC  ECA4  F0D3         	call	_ringBufS_put_dma	;wreg free
 22214                           
 22215                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 22216  01BFF0  52E5               	movf	postdec1,f,c
 22217  01BFF2  0012               	return		;funcret
 22218  01BFF4                     __end_of_putch:
 22219                           	opt callstack 0
 22220                           
 22221 ;; *************** function _ringBufS_put_dma *****************
 22222 ;; Defined at:
 22223 ;;		line 67 in file "ringbufs.c"
 22224 ;; Parameters:    Size  Location     Type
 22225 ;;  _this           2  [STACK] PTR struct ringBufS_t
 22226 ;;		 -> ring_buf1(67), 
 22227 ;;  c               1  [STACK] const unsigned char 
 22228 ;; Auto vars:     Size  Location     Type
 22229 ;;		None
 22230 ;; Return value:  Size  Location     Type
 22231 ;;                  1  [STACK] void 
 22232 ;; Registers used:
 22233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 22234 ;; Tracked objects:
 22235 ;;		On entry : 0/0
 22236 ;;		On exit  : 0/0
 22237 ;;		Unchanged: 0/0
 22238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22243 ;;Total ram usage:        0 bytes
 22244 ;; Hardware stack levels used:    1
 22245 ;; Hardware stack levels required when called:   15
 22246 ;; This function calls:
 22247 ;;		Nothing
 22248 ;; This function is called by:
 22249 ;;		_putch
 22250 ;; This function uses a reentrant model
 22251 ;;
 22252                           
 22253                           	psect	text78
 22254  01A748                     __ptext78:
 22255                           	opt callstack 0
 22256  01A748                     _ringBufS_put_dma:
 22257                           	opt callstack 0
 22258                           
 22259                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 22260                           ;stkvar	__this @ sp[(0)+-2]
 22261                           
 22262                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22263                           ;incstack = 0
 22264 ;; hardware stack exceeded
 22265  01A748  0EFE               	movlw	-2
 22266  01A74A  006F FF8C  F00B    	movff	plusw1,btemp+10
 22267  01A750  0EFF               	movlw	-1
 22268  01A752  006F FF8C  F00C    	movff	plusw1,btemp+11
 22269  01A758  0E42               	movlw	66
 22270  01A75A  240B               	addwf	(btemp+10)^0,w,c
 22271  01A75C  6ED9               	movwf	fsr2l,c
 22272  01A75E  0E00               	movlw	0
 22273  01A760  200C               	addwfc	(btemp+11)^0,w,c
 22274  01A762  6EDA               	movwf	fsr2h,c
 22275  01A764  0E40               	movlw	64
 22276  01A766  60DF               	cpfslt	indf2,c
 22277  01A768  D040               	goto	l1584
 22278                           
 22279                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 22280                           ;stkvar	_c @ sp[(0)+-3]
 22281                           ;stkvar	__this @ sp[(0)+-2]
 22282  01A76A  0EFE               	movlw	-2
 22283  01A76C  006F FF8C  F00B    	movff	plusw1,btemp+10
 22284  01A772  0EFF               	movlw	-1
 22285  01A774  006F FF8C  F00C    	movff	plusw1,btemp+11
 22286  01A77A  0E40               	movlw	64
 22287  01A77C  240B               	addwf	(btemp+10)^0,w,c
 22288  01A77E  6ED9               	movwf	fsr2l,c
 22289  01A780  0E00               	movlw	0
 22290  01A782  200C               	addwfc	(btemp+11)^0,w,c
 22291  01A784  6EDA               	movwf	fsr2h,c
 22292  01A786  50DF               	movf	indf2,w,c
 22293  01A788  6E0C               	movwf	(btemp+11)^0,c
 22294                           
 22295                           ;stkvar	__this @ sp[(0)+-2]
 22296  01A78A  0EFE               	movlw	-2
 22297  01A78C  006F FF8C  F009    	movff	plusw1,btemp+8
 22298  01A792  0EFF               	movlw	-1
 22299  01A794  006F FF8C  F00A    	movff	plusw1,btemp+9
 22300  01A79A  500C               	movf	(btemp+11)^0,w,c
 22301  01A79C  2409               	addwf	(btemp+8)^0,w,c
 22302  01A79E  6ED9               	movwf	fsr2l,c
 22303  01A7A0  0E00               	movlw	0
 22304  01A7A2  200A               	addwfc	(btemp+9)^0,w,c
 22305  01A7A4  6EDA               	movwf	fsr2h,c
 22306  01A7A6  0EFD               	movlw	-3
 22307  01A7A8  006F FF8F FFDF     	movff	plusw1,indf2
 22308                           
 22309                           ;ringbufs.c: 71:   ++_this->head;
 22310                           ;stkvar	__this @ sp[(0)+-2]
 22311  01A7AE  0EFE               	movlw	-2
 22312  01A7B0  006F FF8C  F00B    	movff	plusw1,btemp+10
 22313  01A7B6  0EFF               	movlw	-1
 22314  01A7B8  006F FF8C  F00C    	movff	plusw1,btemp+11
 22315  01A7BE  0E40               	movlw	64
 22316  01A7C0  240B               	addwf	(btemp+10)^0,w,c
 22317  01A7C2  6ED9               	movwf	fsr2l,c
 22318  01A7C4  0E00               	movlw	0
 22319  01A7C6  200C               	addwfc	(btemp+11)^0,w,c
 22320  01A7C8  6EDA               	movwf	fsr2h,c
 22321  01A7CA  2ADF               	incf	indf2,f,c
 22322                           
 22323                           ;ringbufs.c: 72:   ++_this->count;
 22324                           ;stkvar	__this @ sp[(0)+-2]
 22325  01A7CC  0EFE               	movlw	-2
 22326  01A7CE  006F FF8C  F00B    	movff	plusw1,btemp+10
 22327  01A7D4  0EFF               	movlw	-1
 22328  01A7D6  006F FF8C  F00C    	movff	plusw1,btemp+11
 22329  01A7DC  0E42               	movlw	66
 22330  01A7DE  240B               	addwf	(btemp+10)^0,w,c
 22331  01A7E0  6ED9               	movwf	fsr2l,c
 22332  01A7E2  0E00               	movlw	0
 22333  01A7E4  200C               	addwfc	(btemp+11)^0,w,c
 22334  01A7E6  6EDA               	movwf	fsr2h,c
 22335  01A7E8  2ADF               	incf	indf2,f,c
 22336  01A7EA                     l1584:
 22337                           
 22338                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 22339  01A7EA  52E5               	movf	postdec1,f,c
 22340  01A7EC  52E5               	movf	postdec1,f,c
 22341  01A7EE  52E5               	movf	postdec1,f,c
 22342  01A7F0  0012               	return		;funcret
 22343  01A7F2                     __end_of_ringBufS_put_dma:
 22344                           	opt callstack 0
 22345                           
 22346 ;; *************** function _atoi *****************
 22347 ;; Defined at:
 22348 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 22349 ;; Parameters:    Size  Location     Type
 22350 ;;  s               2  [STACK] PTR const unsigned char 
 22351 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 22352 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 22353 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 22354 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 22355 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(22), 
 22356 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 22357 ;;		 -> STR_37(23), STR_36(23), STR_35(23), STR_34(23), 
 22358 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 22359 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 22360 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 22361 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 22362 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 22363 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 22364 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 22365 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 22366 ;; Auto vars:     Size  Location     Type
 22367 ;;  n               2  [STACK] int 
 22368 ;;  neg             2  [STACK] int 
 22369 ;; Return value:  Size  Location     Type
 22370 ;;                  2  [STACK] int 
 22371 ;; Registers used:
 22372 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 22373 ;; Tracked objects:
 22374 ;;		On entry : 0/0
 22375 ;;		On exit  : 0/0
 22376 ;;		Unchanged: 0/0
 22377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22382 ;;Total ram usage:        0 bytes
 22383 ;; Hardware stack levels used:    1
 22384 ;; Hardware stack levels required when called:   16
 22385 ;; This function calls:
 22386 ;;		_isdigit
 22387 ;;		_isspace
 22388 ;; This function is called by:
 22389 ;;		_vfpfcnvrt
 22390 ;; This function uses a reentrant model
 22391 ;;
 22392                           
 22393                           	psect	text79
 22394  01794E                     __ptext79:
 22395                           	opt callstack 0
 22396  01794E                     _atoi:
 22397                           	opt callstack 0
 22398                           
 22399                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22400  01794E  0E09               	movlw	9
 22401  017950  26E1               	addwf	fsr1l,f,c
 22402  017952  0E00               	movlw	0
 22403  017954  22E2               	addwfc	fsr1h,f,c
 22404                           
 22405                           ;stkvar	_n @ sp[(-9)+5]
 22406                           
 22407                           ;incstack = 0
 22408 ;; hardware stack exceeded
 22409  017956  0EFC               	movlw	-4
 22410  017958  6AE3               	clrf	plusw1,c
 22411  01795A  0EFD               	movlw	-3
 22412  01795C  6AE3               	clrf	plusw1,c
 22413                           
 22414                           ;stkvar	_neg @ sp[(-9)+7]
 22415  01795E  0EFE               	movlw	-2
 22416  017960  6AE3               	clrf	plusw1,c
 22417  017962  0EFF               	movlw	-1
 22418  017964  6AE3               	clrf	plusw1,c
 22419  017966  D011               	goto	l9316
 22420  017968                     l9314:
 22421                           
 22422                           ;stkvar	_s @ sp[(-9)+-2]
 22423  017968  0EF5               	movlw	-11
 22424  01796A  50E3               	movf	plusw1,w,c
 22425  01796C  0F01               	addlw	1
 22426  01796E  6E01               	movwf	btemp^0,c
 22427  017970  0EF5               	movlw	-11
 22428  017972  0060  F007  FFE3   	movff	btemp,plusw1
 22429  017978  6A01               	clrf	btemp^0,c
 22430  01797A  0EF6               	movlw	-10
 22431  01797C  50E3               	movf	plusw1,w,c
 22432  01797E  2001               	addwfc	btemp^0,w,c
 22433  017980  6E01               	movwf	btemp^0,c
 22434  017982  0EF6               	movlw	-10
 22435  017984  0060  F007  FFE3   	movff	btemp,plusw1
 22436  01798A                     l9316:
 22437                           
 22438                           ;stkvar	_atoi$6077 @ sp[(-9)+4]
 22439  01798A  0EFB               	movlw	-5
 22440  01798C  6AE3               	clrf	plusw1,c
 22441  01798E  2AE3               	incf	plusw1,f,c
 22442                           
 22443                           ;stkvar	_s @ sp[(-9)+-2]
 22444  017990  50E1               	movf	fsr1l,w,c
 22445  017992  0FF5               	addlw	-11
 22446  017994  6ED9               	movwf	fsr2l,c
 22447  017996  50E2               	movf	fsr1h,w,c
 22448  017998  6EDA               	movwf	fsr2h,c
 22449  01799A  0EFF               	movlw	255
 22450  01799C  22DA               	addwfc	fsr2h,f,c
 22451  01799E  006F FF7B FFF6     	movff	postinc2,tblptrl
 22452  0179A4  006F FF77 FFF7     	movff	postdec2,tblptrh
 22453  0179AA                     	if	0	;tblptru may be non-zero
 22454  0179AA                     	endif
 22455  0179AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22456  0179AA  0E00               	movlw	low (__mediumconst shr (0+16))
 22457  0179AC  6EF8               	movwf	tblptru,c
 22458  0179AE                     	endif
 22459  0179AE  0008               	tblrd		*
 22460  0179B0  50F5               	movf	tablat,w,c
 22461  0179B2  0A20               	xorlw	32
 22462  0179B4  B4D8               	btfsc	status,2,c
 22463  0179B6  D023               	goto	l9324
 22464  0179B8  0EF7               	movlw	247
 22465  0179BA  6E0B               	movwf	(btemp+10)^0,c
 22466  0179BC  0EFF               	movlw	255
 22467  0179BE  6E0C               	movwf	(btemp+11)^0,c
 22468                           
 22469                           ;stkvar	_s @ sp[(-9)+-2]
 22470  0179C0  50E1               	movf	fsr1l,w,c
 22471  0179C2  0FF5               	addlw	-11
 22472  0179C4  6ED9               	movwf	fsr2l,c
 22473  0179C6  50E2               	movf	fsr1h,w,c
 22474  0179C8  6EDA               	movwf	fsr2h,c
 22475  0179CA  0EFF               	movlw	255
 22476  0179CC  22DA               	addwfc	fsr2h,f,c
 22477  0179CE  006F FF7B FFF6     	movff	postinc2,tblptrl
 22478  0179D4  006F FF77 FFF7     	movff	postdec2,tblptrh
 22479  0179DA                     	if	0	;tblptru may be non-zero
 22480  0179DA                     	endif
 22481  0179DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22482  0179DA  0E00               	movlw	low (__mediumconst shr (0+16))
 22483  0179DC  6EF8               	movwf	tblptru,c
 22484  0179DE                     	endif
 22485  0179DE  0008               	tblrd		*
 22486  0179E0  50F5               	movf	tablat,w,c
 22487  0179E2  6E09               	movwf	(btemp+8)^0,c
 22488  0179E4  6A0A               	clrf	(btemp+9)^0,c
 22489  0179E6  500B               	movf	(btemp+10)^0,w,c
 22490  0179E8  2609               	addwf	(btemp+8)^0,f,c
 22491  0179EA  500C               	movf	(btemp+11)^0,w,c
 22492  0179EC  220A               	addwfc	(btemp+9)^0,f,c
 22493  0179EE  500A               	movf	(btemp+9)^0,w,c
 22494  0179F0  E104               	bnz	u8520
 22495  0179F2  0E05               	movlw	5
 22496  0179F4  5C09               	subwf	(btemp+8)^0,w,c
 22497  0179F6  A0D8               	btfss	status,0,c
 22498  0179F8  D002               	goto	l9324
 22499  0179FA                     u8520:
 22500                           
 22501                           ;stkvar	_atoi$6077 @ sp[(-9)+4]
 22502  0179FA  0EFB               	movlw	-5
 22503  0179FC  6AE3               	clrf	plusw1,c
 22504  0179FE                     l9324:
 22505                           
 22506                           ;stkvar	_atoi$6077 @ sp[(-9)+4]
 22507  0179FE  0EFB               	movlw	-5
 22508  017A00  50E3               	movf	plusw1,w,c
 22509  017A02  6E0B               	movwf	(btemp+10)^0,c
 22510  017A04  6A0C               	clrf	(btemp+11)^0,c
 22511                           
 22512                           ;stkvar	_atoi$6076 @ sp[(-9)+2]
 22513  017A06  0EF9               	movlw	-7
 22514  017A08  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22515  017A0E  0EFA               	movlw	-6
 22516  017A10  0060  F033  FFE3   	movff	btemp+11,plusw1
 22517                           
 22518                           ;stkvar	_atoi$6076 @ sp[(-9)+2]
 22519  017A16  0EF9               	movlw	-7
 22520  017A18  006F FF8C  F001    	movff	plusw1,btemp
 22521  017A1E  0EFA               	movlw	-6
 22522  017A20  50E3               	movf	plusw1,w,c
 22523  017A22  1001               	iorwf	btemp^0,w,c
 22524  017A24  B4D8               	btfsc	status,2,c
 22525  017A26  D01F               	goto	l9334
 22526  017A28  D79F               	goto	l9314
 22527  017A2A                     l9330:
 22528  017A2A  0E01               	movlw	1
 22529  017A2C  6E0B               	movwf	(btemp+10)^0,c
 22530  017A2E  0E00               	movlw	0
 22531  017A30  6E0C               	movwf	(btemp+11)^0,c
 22532                           
 22533                           ;stkvar	_neg @ sp[(-9)+7]
 22534  017A32  0EFE               	movlw	-2
 22535  017A34  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22536  017A3A  0EFF               	movlw	-1
 22537  017A3C  0060  F033  FFE3   	movff	btemp+11,plusw1
 22538  017A42                     l9332:
 22539                           
 22540                           ;stkvar	_s @ sp[(-9)+-2]
 22541  017A42  0EF5               	movlw	-11
 22542  017A44  50E3               	movf	plusw1,w,c
 22543  017A46  0F01               	addlw	1
 22544  017A48  6E01               	movwf	btemp^0,c
 22545  017A4A  0EF5               	movlw	-11
 22546  017A4C  0060  F007  FFE3   	movff	btemp,plusw1
 22547  017A52  6A01               	clrf	btemp^0,c
 22548  017A54  0EF6               	movlw	-10
 22549  017A56  50E3               	movf	plusw1,w,c
 22550  017A58  2001               	addwfc	btemp^0,w,c
 22551  017A5A  6E01               	movwf	btemp^0,c
 22552  017A5C  0EF6               	movlw	-10
 22553  017A5E  0060  F007  FFE3   	movff	btemp,plusw1
 22554  017A64  D053               	goto	l9340
 22555  017A66                     l9334:
 22556                           
 22557                           ;stkvar	_s @ sp[(-9)+-2]
 22558  017A66  50E1               	movf	fsr1l,w,c
 22559  017A68  0FF5               	addlw	-11
 22560  017A6A  6ED9               	movwf	fsr2l,c
 22561  017A6C  50E2               	movf	fsr1h,w,c
 22562  017A6E  6EDA               	movwf	fsr2h,c
 22563  017A70  0EFF               	movlw	255
 22564  017A72  22DA               	addwfc	fsr2h,f,c
 22565  017A74  006F FF7B FFF6     	movff	postinc2,tblptrl
 22566  017A7A  006F FF77 FFF7     	movff	postdec2,tblptrh
 22567  017A80                     	if	0	;tblptru may be non-zero
 22568  017A80                     	endif
 22569  017A80                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22570  017A80  0E00               	movlw	low (__mediumconst shr (0+16))
 22571  017A82  6EF8               	movwf	tblptru,c
 22572  017A84                     	endif
 22573  017A84  0008               	tblrd		*
 22574  017A86  50F5               	movf	tablat,w,c
 22575  017A88  6E0B               	movwf	(btemp+10)^0,c
 22576  017A8A  6A0C               	clrf	(btemp+11)^0,c
 22577                           
 22578                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22579                           ; Switch size 1, requested type "simple"
 22580                           ; Number of cases is 1, Range of values is 0 to 0
 22581                           ; switch strategies available:
 22582                           ; Name         Instructions Cycles
 22583                           ; simple_byte            4     3 (average)
 22584                           ;	Chosen strategy is simple_byte
 22585  017A8C  500C               	movf	(btemp+11)^0,w,c
 22586  017A8E  0A00               	xorlw	0	; case 0
 22587  017A90  A4D8               	btfss	status,2,c
 22588  017A92  D03C               	goto	l9340
 22589                           
 22590                           ; Switch size 1, requested type "simple"
 22591                           ; Number of cases is 2, Range of values is 43 to 45
 22592                           ; switch strategies available:
 22593                           ; Name         Instructions Cycles
 22594                           ; simple_byte            7     4 (average)
 22595                           ;	Chosen strategy is simple_byte
 22596  017A94  500B               	movf	(btemp+10)^0,w,c
 22597  017A96  0A2B               	xorlw	43	; case 43
 22598  017A98  B4D8               	btfsc	status,2,c
 22599  017A9A  D7D3               	goto	l9332
 22600  017A9C  0A06               	xorlw	6	; case 45
 22601  017A9E  B4D8               	btfsc	status,2,c
 22602  017AA0  D7C4               	goto	l9330
 22603  017AA2  D034               	goto	l9340
 22604  017AA4                     l9336:
 22605                           
 22606                           ;stkvar	_n @ sp[(-9)+5]
 22607  017AA4  0EFC               	movlw	-4
 22608  017AA6  006F FF8C  F00B    	movff	plusw1,btemp+10
 22609  017AAC  0EFD               	movlw	-3
 22610  017AAE  006F FF8C  F00C    	movff	plusw1,btemp+11
 22611  017AB4  0E0A               	movlw	10
 22612  017AB6  020B               	mulwf	(btemp+10)^0,c
 22613  017AB8  006F FFCC  F009    	movff	prodl,btemp+8
 22614  017ABE  006F FFD0  F00A    	movff	prodh,btemp+9
 22615  017AC4  020C               	mulwf	(btemp+11)^0,c
 22616  017AC6  50F3               	movf	prodl,w,c
 22617  017AC8  260A               	addwf	(btemp+9)^0,f,c
 22618                           
 22619                           ;stkvar	_s @ sp[(-9)+-2]
 22620  017ACA  50E1               	movf	fsr1l,w,c
 22621  017ACC  0FF5               	addlw	-11
 22622  017ACE  6ED9               	movwf	fsr2l,c
 22623  017AD0  50E2               	movf	fsr1h,w,c
 22624  017AD2  6EDA               	movwf	fsr2h,c
 22625  017AD4  0EFF               	movlw	255
 22626  017AD6  22DA               	addwfc	fsr2h,f,c
 22627  017AD8  006F FF7B FFF6     	movff	postinc2,tblptrl
 22628  017ADE  006F FF77 FFF7     	movff	postdec2,tblptrh
 22629  017AE4                     	if	0	;tblptru may be non-zero
 22630  017AE4                     	endif
 22631  017AE4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22632  017AE4  0E00               	movlw	low (__mediumconst shr (0+16))
 22633  017AE6  6EF8               	movwf	tblptru,c
 22634  017AE8                     	endif
 22635  017AE8  0008               	tblrd		*
 22636  017AEA  50F5               	movf	tablat,w,c
 22637  017AEC  5E09               	subwf	(btemp+8)^0,f,c
 22638  017AEE  0E00               	movlw	0
 22639  017AF0  5A0A               	subwfb	(btemp+9)^0,f,c
 22640  017AF2  0E30               	movlw	48
 22641  017AF4  2609               	addwf	(btemp+8)^0,f,c
 22642  017AF6  0E00               	movlw	0
 22643  017AF8  220A               	addwfc	(btemp+9)^0,f,c
 22644                           
 22645                           ;stkvar	_n @ sp[(-9)+5]
 22646  017AFA  0EFC               	movlw	-4
 22647  017AFC  0060  F027  FFE3   	movff	btemp+8,plusw1
 22648  017B02  0EFD               	movlw	-3
 22649  017B04  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22650  017B0A  D79B               	goto	l9332
 22651  017B0C                     l9340:
 22652  017B0C  0ED0               	movlw	208
 22653  017B0E  6E0B               	movwf	(btemp+10)^0,c
 22654  017B10  0EFF               	movlw	255
 22655  017B12  6E0C               	movwf	(btemp+11)^0,c
 22656                           
 22657                           ;stkvar	_s @ sp[(-9)+-2]
 22658  017B14  50E1               	movf	fsr1l,w,c
 22659  017B16  0FF5               	addlw	-11
 22660  017B18  6ED9               	movwf	fsr2l,c
 22661  017B1A  50E2               	movf	fsr1h,w,c
 22662  017B1C  6EDA               	movwf	fsr2h,c
 22663  017B1E  0EFF               	movlw	255
 22664  017B20  22DA               	addwfc	fsr2h,f,c
 22665  017B22  006F FF7B FFF6     	movff	postinc2,tblptrl
 22666  017B28  006F FF77 FFF7     	movff	postdec2,tblptrh
 22667  017B2E                     	if	0	;tblptru may be non-zero
 22668  017B2E                     	endif
 22669  017B2E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22670  017B2E  0E00               	movlw	low (__mediumconst shr (0+16))
 22671  017B30  6EF8               	movwf	tblptru,c
 22672  017B32                     	endif
 22673  017B32  0008               	tblrd		*
 22674  017B34  50F5               	movf	tablat,w,c
 22675  017B36  6E09               	movwf	(btemp+8)^0,c
 22676  017B38  6A0A               	clrf	(btemp+9)^0,c
 22677  017B3A  500B               	movf	(btemp+10)^0,w,c
 22678  017B3C  2609               	addwf	(btemp+8)^0,f,c
 22679  017B3E  500C               	movf	(btemp+11)^0,w,c
 22680  017B40  220A               	addwfc	(btemp+9)^0,f,c
 22681  017B42  500A               	movf	(btemp+9)^0,w,c
 22682  017B44  E106               	bnz	u8540
 22683  017B46  0E0A               	movlw	10
 22684  017B48  5C09               	subwf	(btemp+8)^0,w,c
 22685  017B4A  B0D8               	btfsc	status,0,c
 22686  017B4C  D002               	goto	u8540
 22687  017B4E  0E01               	movlw	1
 22688  017B50  D001               	goto	u8550
 22689  017B52                     u8540:
 22690  017B52  0E00               	movlw	0
 22691  017B54                     u8550:
 22692  017B54  6E0B               	movwf	(btemp+10)^0,c
 22693  017B56  6A0C               	clrf	(btemp+11)^0,c
 22694                           
 22695                           ;stkvar	_atoi$6078 @ sp[(-9)+0]
 22696  017B58  0EF7               	movlw	-9
 22697  017B5A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22698  017B60  0EF8               	movlw	-8
 22699  017B62  0060  F033  FFE3   	movff	btemp+11,plusw1
 22700                           
 22701                           ;stkvar	_atoi$6078 @ sp[(-9)+0]
 22702  017B68  0EF7               	movlw	-9
 22703  017B6A  006F FF8C  F001    	movff	plusw1,btemp
 22704  017B70  0EF8               	movlw	-8
 22705  017B72  50E3               	movf	plusw1,w,c
 22706  017B74  1001               	iorwf	btemp^0,w,c
 22707  017B76  A4D8               	btfss	status,2,c
 22708  017B78  D795               	goto	l9336
 22709                           
 22710                           ;stkvar	_neg @ sp[(-9)+7]
 22711  017B7A  0EFE               	movlw	-2
 22712  017B7C  006F FF8C  F001    	movff	plusw1,btemp
 22713  017B82  0EFF               	movlw	-1
 22714  017B84  50E3               	movf	plusw1,w,c
 22715  017B86  1001               	iorwf	btemp^0,w,c
 22716  017B88  A4D8               	btfss	status,2,c
 22717  017B8A  D00E               	goto	l9350
 22718                           
 22719                           ;stkvar	_n @ sp[(-9)+5]
 22720  017B8C  0EFC               	movlw	-4
 22721  017B8E  006F FF8C  F001    	movff	plusw1,btemp
 22722  017B94  1E01               	comf	btemp^0,f,c
 22723  017B96  0EFD               	movlw	-3
 22724  017B98  006F FF8C  F002    	movff	plusw1,btemp+1
 22725  017B9E  1E02               	comf	(btemp+1)^0,f,c
 22726  017BA0  2A01               	incf	btemp^0,f,c
 22727  017BA2  B4D8               	btfsc	status,2,c
 22728  017BA4  2A02               	incf	(btemp+1)^0,f,c
 22729  017BA6  D008               	goto	l3115
 22730  017BA8                     l9350:
 22731                           
 22732                           ;stkvar	_n @ sp[(-9)+5]
 22733  017BA8  0EFC               	movlw	-4
 22734  017BAA  006F FF8C  F001    	movff	plusw1,btemp
 22735  017BB0  0EFD               	movlw	-3
 22736  017BB2  006F FF8C  F002    	movff	plusw1,btemp+1
 22737  017BB8                     l3115:
 22738                           
 22739                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 22740  017BB8  0EF5               	movlw	245
 22741  017BBA  26E1               	addwf	fsr1l,f,c
 22742  017BBC  0EFF               	movlw	255
 22743  017BBE  22E2               	addwfc	fsr1h,f,c
 22744  017BC0  0012               	return		;funcret
 22745  017BC2                     __end_of_atoi:
 22746                           	opt callstack 0
 22747                           
 22748 ;; *************** function _isspace *****************
 22749 ;; Defined at:
 22750 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 22751 ;; Parameters:    Size  Location     Type
 22752 ;;  c               2  [STACK] int 
 22753 ;; Auto vars:     Size  Location     Type
 22754 ;;		None
 22755 ;; Return value:  Size  Location     Type
 22756 ;;                  2  [STACK] int 
 22757 ;; Registers used:
 22758 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22759 ;; Tracked objects:
 22760 ;;		On entry : 0/0
 22761 ;;		On exit  : 0/0
 22762 ;;		Unchanged: 0/0
 22763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22768 ;;Total ram usage:        0 bytes
 22769 ;; Hardware stack levels used:    1
 22770 ;; Hardware stack levels required when called:   15
 22771 ;; This function calls:
 22772 ;;		Nothing
 22773 ;; This function is called by:
 22774 ;;		_atoi
 22775 ;; This function uses a reentrant model
 22776 ;;
 22777                           
 22778                           	psect	text80
 22779  01B2F2                     __ptext80:
 22780                           	opt callstack 0
 22781  01B2F2                     _isspace:
 22782                           	opt callstack 0
 22783                           
 22784                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22785  01B2F2  52E6               	movf	postinc1,f,c
 22786                           
 22787                           ;stkvar	_isspace$6127 @ sp[(-1)+0]
 22788                           
 22789                           ;incstack = 0
 22790 ;; hardware stack exceeded
 22791  01B2F4  0EFF               	movlw	-1
 22792  01B2F6  6AE3               	clrf	plusw1,c
 22793  01B2F8  2AE3               	incf	plusw1,f,c
 22794                           
 22795                           ;stkvar	_c @ sp[(-1)+-2]
 22796  01B2FA  0EFD               	movlw	-3
 22797  01B2FC  006F FF8C  F001    	movff	plusw1,btemp
 22798  01B302  0E20               	movlw	32
 22799  01B304  1801               	xorwf	btemp^0,w,c
 22800  01B306  E104               	bnz	u7410
 22801  01B308  0EFE               	movlw	-2
 22802  01B30A  50E3               	movf	plusw1,w,c
 22803  01B30C  B4D8               	btfsc	status,2,c
 22804  01B30E  D012               	goto	l8734
 22805  01B310                     u7410:
 22806                           
 22807                           ;stkvar	_c @ sp[(-1)+-2]
 22808  01B310  0EFD               	movlw	-3
 22809  01B312  50E3               	movf	plusw1,w,c
 22810  01B314  0FF7               	addlw	247
 22811  01B316  6E0B               	movwf	(btemp+10)^0,c
 22812  01B318  0EFE               	movlw	-2
 22813  01B31A  006F FF8C  F00C    	movff	plusw1,btemp+11
 22814  01B320  0EFF               	movlw	255
 22815  01B322  220C               	addwfc	(btemp+11)^0,f,c
 22816  01B324  500C               	movf	(btemp+11)^0,w,c
 22817  01B326  E104               	bnz	u7420
 22818  01B328  0E05               	movlw	5
 22819  01B32A  5C0B               	subwf	(btemp+10)^0,w,c
 22820  01B32C  A0D8               	btfss	status,0,c
 22821  01B32E  D002               	goto	l8734
 22822  01B330                     u7420:
 22823                           
 22824                           ;stkvar	_isspace$6127 @ sp[(-1)+0]
 22825  01B330  0EFF               	movlw	-1
 22826  01B332  6AE3               	clrf	plusw1,c
 22827  01B334                     l8734:
 22828                           
 22829                           ;stkvar	_isspace$6127 @ sp[(-1)+0]
 22830  01B334  0EFF               	movlw	-1
 22831  01B336  50E3               	movf	plusw1,w,c
 22832  01B338  6E01               	movwf	btemp^0,c
 22833  01B33A  6A02               	clrf	(btemp+1)^0,c
 22834                           
 22835                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22836  01B33C  52E5               	movf	postdec1,f,c
 22837  01B33E  52E5               	movf	postdec1,f,c
 22838  01B340  52E5               	movf	postdec1,f,c
 22839  01B342  0012               	return		;funcret
 22840  01B344                     __end_of_isspace:
 22841                           	opt callstack 0
 22842                           
 22843 ;; *************** function _isdigit *****************
 22844 ;; Defined at:
 22845 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 22846 ;; Parameters:    Size  Location     Type
 22847 ;;  c               2  [STACK] int 
 22848 ;; Auto vars:     Size  Location     Type
 22849 ;;		None
 22850 ;; Return value:  Size  Location     Type
 22851 ;;                  2  [STACK] int 
 22852 ;; Registers used:
 22853 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22854 ;; Tracked objects:
 22855 ;;		On entry : 0/0
 22856 ;;		On exit  : 0/0
 22857 ;;		Unchanged: 0/0
 22858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22863 ;;Total ram usage:        0 bytes
 22864 ;; Hardware stack levels used:    1
 22865 ;; Hardware stack levels required when called:   15
 22866 ;; This function calls:
 22867 ;;		Nothing
 22868 ;; This function is called by:
 22869 ;;		_vfpfcnvrt
 22870 ;;		_atoi
 22871 ;; This function uses a reentrant model
 22872 ;;
 22873                           
 22874                           	psect	text81
 22875  01BA42                     __ptext81:
 22876                           	opt callstack 0
 22877  01BA42                     _isdigit:
 22878                           	opt callstack 0
 22879                           
 22880                           ;stkvar	_c @ sp[(0)+-2]
 22881                           
 22882                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22883                           ;incstack = 0
 22884 ;; hardware stack exceeded
 22885  01BA42  0EFE               	movlw	-2
 22886  01BA44  50E3               	movf	plusw1,w,c
 22887  01BA46  0FD0               	addlw	208
 22888  01BA48  6E0B               	movwf	(btemp+10)^0,c
 22889  01BA4A  0EFF               	movlw	-1
 22890  01BA4C  006F FF8C  F00C    	movff	plusw1,btemp+11
 22891  01BA52  0EFF               	movlw	255
 22892  01BA54  220C               	addwfc	(btemp+11)^0,f,c
 22893  01BA56  500C               	movf	(btemp+11)^0,w,c
 22894  01BA58  E106               	bnz	u6260
 22895  01BA5A  0E0A               	movlw	10
 22896  01BA5C  5C0B               	subwf	(btemp+10)^0,w,c
 22897  01BA5E  B0D8               	btfsc	status,0,c
 22898  01BA60  D002               	goto	u6260
 22899  01BA62  0E01               	movlw	1
 22900  01BA64  D001               	goto	u6270
 22901  01BA66                     u6260:
 22902  01BA66  0E00               	movlw	0
 22903  01BA68                     u6270:
 22904  01BA68  6E01               	movwf	btemp^0,c
 22905  01BA6A  6A02               	clrf	(btemp+1)^0,c
 22906                           
 22907                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22908  01BA6C  52E5               	movf	postdec1,f,c
 22909  01BA6E  52E5               	movf	postdec1,f,c
 22910  01BA70  0012               	return		;funcret
 22911  01BA72                     __end_of_isdigit:
 22912                           	opt callstack 0
 22913                           
 22914 ;; *************** function _set_vterm *****************
 22915 ;; Defined at:
 22916 ;;		line 107 in file "mconfig.c"
 22917 ;; Parameters:    Size  Location     Type
 22918 ;;  vterm           1  [STACK] const unsigned char 
 22919 ;; Auto vars:     Size  Location     Type
 22920 ;;		None
 22921 ;; Return value:  Size  Location     Type
 22922 ;;                  1  [STACK] unsigned char 
 22923 ;; Registers used:
 22924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 22925 ;; Tracked objects:
 22926 ;;		On entry : 0/0
 22927 ;;		On exit  : 0/0
 22928 ;;		Unchanged: 0/0
 22929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22934 ;;Total ram usage:        0 bytes
 22935 ;; Hardware stack levels used:    1
 22936 ;; Hardware stack levels required when called:   15
 22937 ;; This function calls:
 22938 ;;		Nothing
 22939 ;; This function is called by:
 22940 ;;		_main
 22941 ;;		_check_help
 22942 ;; This function uses a reentrant model
 22943 ;;
 22944                           
 22945                           	psect	text82
 22946  01BF64                     __ptext82:
 22947                           	opt callstack 0
 22948  01BF64                     _set_vterm:
 22949                           	opt callstack 15
 22950                           
 22951                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 22952                           ;stkvar	_vterm @ sp[(0)+-1]
 22953                           
 22954                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22955                           ;incstack = 0
 22956  01BF64  0EFF               	movlw	-1
 22957  01BF66  006F FF8C  F00C    	movff	plusw1,btemp+11
 22958  01BF6C  0E03               	movlw	3
 22959  01BF6E  160C               	andwf	(btemp+11)^0,f,c
 22960  01BF70  EE22  F20A         	lfsr	2,_D+480
 22961  01BF74  50DF               	movf	223,w,c
 22962  01BF76  180C               	xorwf	(btemp+11)^0,w,c
 22963  01BF78  0BFE               	andlw	-2
 22964  01BF7A  180C               	xorwf	(btemp+11)^0,w,c
 22965  01BF7C  6EDF               	movwf	223,c
 22966                           
 22967                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22968  01BF7E  52E5               	movf	postdec1,f,c
 22969  01BF80  0012               	return		;funcret
 22970  01BF82                     __end_of_set_vterm:
 22971                           	opt callstack 0
 22972                           
 22973 ;; *************** function _set_temp_display_help *****************
 22974 ;; Defined at:
 22975 ;;		line 211 in file "mconfig.c"
 22976 ;; Parameters:    Size  Location     Type
 22977 ;;  new_response    1  [STACK] const enum E16509
 22978 ;; Auto vars:     Size  Location     Type
 22979 ;;		None
 22980 ;; Return value:  Size  Location     Type
 22981 ;;                  1  [STACK] enum E16509
 22982 ;; Registers used:
 22983 ;;		wreg, fsr1l, fsr1h
 22984 ;; Tracked objects:
 22985 ;;		On entry : 0/1
 22986 ;;		On exit  : 3F/1
 22987 ;;		Unchanged: 0/0
 22988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22993 ;;Total ram usage:        0 bytes
 22994 ;; Hardware stack levels used:    1
 22995 ;; Hardware stack levels required when called:   15
 22996 ;; This function calls:
 22997 ;;		Nothing
 22998 ;; This function is called by:
 22999 ;;		_check_help
 23000 ;; This function uses a reentrant model
 23001 ;;
 23002                           
 23003                           	psect	text83
 23004  01C0C6                     __ptext83:
 23005                           	opt callstack 0
 23006  01C0C6                     _set_temp_display_help:
 23007                           	opt callstack 14
 23008                           
 23009                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 23010                           
 23011                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23012                           ;incstack = 0
 23013  01C0C6  0101               	movlb	1	; () banked
 23014  01C0C8  51D5               	movf	(_V+165)& (0+255),w,b	;volatile
 23015                           
 23016                           ; BSR set to: 1
 23017                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 23018                           ;stkvar	_new_response_info @ sp[(0)+-1]
 23019  01C0CA  0EFF               	movlw	-1
 23020  01C0CC  006F FF8C  F1D5    	movff	plusw1,_V+165	;volatile
 23021                           
 23022                           ; BSR set to: 1
 23023                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 23024  01C0D2  52E5               	movf	postdec1,f,c
 23025  01C0D4  0012               	return		;funcret
 23026  01C0D6                     __end_of_set_temp_display_help:
 23027                           	opt callstack 0
 23028                           
 23029 ;; *************** function _set_display_info *****************
 23030 ;; Defined at:
 23031 ;;		line 200 in file "mconfig.c"
 23032 ;; Parameters:    Size  Location     Type
 23033 ;;  new_response    1  [STACK] const enum E16509
 23034 ;; Auto vars:     Size  Location     Type
 23035 ;;		None
 23036 ;; Return value:  Size  Location     Type
 23037 ;;                  1  [STACK] enum E16994
 23038 ;; Registers used:
 23039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 23040 ;; Tracked objects:
 23041 ;;		On entry : 0/1
 23042 ;;		On exit  : 0/0
 23043 ;;		Unchanged: 0/0
 23044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23049 ;;Total ram usage:        0 bytes
 23050 ;; Hardware stack levels used:    1
 23051 ;; Hardware stack levels required when called:   16
 23052 ;; This function calls:
 23053 ;;		_TimerDone
 23054 ;; This function is called by:
 23055 ;;		_main
 23056 ;;		_check_help
 23057 ;; This function uses a reentrant model
 23058 ;;
 23059                           
 23060                           	psect	text84
 23061  01BF82                     __ptext84:
 23062                           	opt callstack 0
 23063  01BF82                     _set_display_info:
 23064                           	opt callstack 14
 23065                           
 23066                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 23067                           
 23068                           ; BSR set to: 1
 23069                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23070                           ;incstack = 0
 23071  01BF82  0E07               	movlw	7
 23072  01BF84  6EE6               	movwf	postinc1,c
 23073  01BF86  ECBB  F0DD         	call	_TimerDone	;wreg free
 23074  01BF8A  5001               	movf	btemp^0,w,c
 23075  01BF8C  B4D8               	btfsc	status,2,c
 23076  01BF8E  D006               	goto	l1719
 23077                           
 23078                           ;mconfig.c: 205:   old_info = V.response.info;
 23079  01BF90  0101               	movlb	1	; () banked
 23080  01BF92  51D4               	movf	(_V+164)& (0+255),w,b	;volatile
 23081                           
 23082                           ; BSR set to: 1
 23083                           ;mconfig.c: 206:   V.response.info = new_response_info;
 23084                           ;stkvar	_new_response_info @ sp[(0)+-1]
 23085  01BF94  0EFF               	movlw	-1
 23086  01BF96  006F FF8C  F1D4    	movff	plusw1,_V+164	;volatile
 23087  01BF9C                     l1719:
 23088                           
 23089                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 23090  01BF9C  52E5               	movf	postdec1,f,c
 23091  01BF9E  0012               	return		;funcret
 23092  01BFA0                     __end_of_set_display_info:
 23093                           	opt callstack 0
 23094                           
 23095 ;; *************** function _mode_lamp_dim *****************
 23096 ;; Defined at:
 23097 ;;		line 13 in file "mconfig.c"
 23098 ;; Parameters:    Size  Location     Type
 23099 ;;  level           2  [STACK] const unsigned short 
 23100 ;; Auto vars:     Size  Location     Type
 23101 ;;		None
 23102 ;; Return value:  Size  Location     Type
 23103 ;;                  1  [STACK] void 
 23104 ;; Registers used:
 23105 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23106 ;; Tracked objects:
 23107 ;;		On entry : 0/1
 23108 ;;		On exit  : 0/0
 23109 ;;		Unchanged: 0/0
 23110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23115 ;;Total ram usage:        0 bytes
 23116 ;; Hardware stack levels used:    1
 23117 ;; Hardware stack levels required when called:   16
 23118 ;; This function calls:
 23119 ;;		_PWM8_LoadDutyValue
 23120 ;; This function is called by:
 23121 ;;		_main
 23122 ;;		_check_help
 23123 ;; This function uses a reentrant model
 23124 ;;
 23125                           
 23126                           	psect	text85
 23127  01C00E                     __ptext85:
 23128                           	opt callstack 0
 23129  01C00E                     _mode_lamp_dim:
 23130                           	opt callstack 14
 23131                           
 23132                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 23133                           ;stkvar	_level @ sp[(0)+-2]
 23134                           
 23135                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23136                           ;incstack = 0
 23137  01C00E  0EFE               	movlw	-2
 23138  01C010  006F FF8F FFE6     	movff	plusw1,postinc1
 23139  01C016  006F FF8F FFE6     	movff	plusw1,postinc1
 23140  01C01C  EC34  F0DB         	call	_PWM8_LoadDutyValue	;wreg free
 23141                           
 23142                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 23143  01C020  52E5               	movf	postdec1,f,c
 23144  01C022  52E5               	movf	postdec1,f,c
 23145  01C024  0012               	return		;funcret
 23146  01C026                     __end_of_mode_lamp_dim:
 23147                           	opt callstack 0
 23148                           
 23149 ;; *************** function _mode_lamp_bright *****************
 23150 ;; Defined at:
 23151 ;;		line 18 in file "mconfig.c"
 23152 ;; Parameters:    Size  Location     Type
 23153 ;;		None
 23154 ;; Auto vars:     Size  Location     Type
 23155 ;;		None
 23156 ;; Return value:  Size  Location     Type
 23157 ;;                  1  [STACK] void 
 23158 ;; Registers used:
 23159 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23160 ;; Tracked objects:
 23161 ;;		On entry : 0/0
 23162 ;;		On exit  : 0/0
 23163 ;;		Unchanged: 0/0
 23164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23169 ;;Total ram usage:        0 bytes
 23170 ;; Hardware stack levels used:    1
 23171 ;; Hardware stack levels required when called:   16
 23172 ;; This function calls:
 23173 ;;		_PWM8_LoadDutyValue
 23174 ;; This function is called by:
 23175 ;;		_check_help
 23176 ;; This function uses a reentrant model
 23177 ;;
 23178                           
 23179                           	psect	text86
 23180  01C102                     __ptext86:
 23181                           	opt callstack 0
 23182  01C102                     _mode_lamp_bright:
 23183                           	opt callstack 13
 23184                           
 23185                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 23186                           
 23187                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23188                           ;incstack = 0
 23189  01C102  0E2C               	movlw	44
 23190  01C104  6EE6               	movwf	postinc1,c
 23191  01C106  0E01               	movlw	1
 23192  01C108  6EE6               	movwf	postinc1,c
 23193  01C10A  EC34  F0DB         	call	_PWM8_LoadDutyValue	;wreg free
 23194                           
 23195                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23196  01C10E  0012               	return		;funcret
 23197  01C110                     __end_of_mode_lamp_bright:
 23198                           	opt callstack 0
 23199                           
 23200 ;; *************** function _PWM8_LoadDutyValue *****************
 23201 ;; Defined at:
 23202 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 23203 ;; Parameters:    Size  Location     Type
 23204 ;;  dutyValue       2  [STACK] unsigned short 
 23205 ;; Auto vars:     Size  Location     Type
 23206 ;;		None
 23207 ;; Return value:  Size  Location     Type
 23208 ;;                  1  [STACK] void 
 23209 ;; Registers used:
 23210 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23211 ;; Tracked objects:
 23212 ;;		On entry : 0/1
 23213 ;;		On exit  : 0/0
 23214 ;;		Unchanged: 0/0
 23215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23220 ;;Total ram usage:        0 bytes
 23221 ;; Hardware stack levels used:    1
 23222 ;; Hardware stack levels required when called:   15
 23223 ;; This function calls:
 23224 ;;		Nothing
 23225 ;; This function is called by:
 23226 ;;		_mode_lamp_dim
 23227 ;;		_mode_lamp_bright
 23228 ;; This function uses a reentrant model
 23229 ;;
 23230                           
 23231                           	psect	text87
 23232  01B668                     __ptext87:
 23233                           	opt callstack 0
 23234  01B668                     _PWM8_LoadDutyValue:
 23235                           	opt callstack 14
 23236                           
 23237                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 23238                           ;stkvar	_dutyValue @ sp[(0)+-2]
 23239                           
 23240                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23241                           ;incstack = 0
 23242  01B668  0EFE               	movlw	-2
 23243  01B66A  006F FF8C  F00B    	movff	plusw1,btemp+10
 23244  01B670  0EFF               	movlw	-1
 23245  01B672  006F FF8C  F00C    	movff	plusw1,btemp+11
 23246  01B678  90D8               	bcf	status,0,c
 23247  01B67A  320C               	rrcf	(btemp+11)^0,f,c
 23248  01B67C  320B               	rrcf	(btemp+10)^0,f,c
 23249  01B67E  90D8               	bcf	status,0,c
 23250  01B680  320C               	rrcf	(btemp+11)^0,f,c
 23251  01B682  320B               	rrcf	(btemp+10)^0,f,c
 23252  01B684  500B               	movf	(btemp+10)^0,w,c
 23253  01B686  6E61               	movwf	97,c	;volatile
 23254                           
 23255                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 23256                           ;stkvar	_dutyValue @ sp[(0)+-2]
 23257  01B688  0EFE               	movlw	-2
 23258  01B68A  006F FF8C  F00C    	movff	plusw1,btemp+11
 23259  01B690  0E03               	movlw	3
 23260  01B692  160C               	andwf	(btemp+11)^0,f,c
 23261  01B694  0E06               	movlw	6
 23262  01B696  6E01               	movwf	btemp^0,c
 23263  01B698                     u9355:
 23264  01B698  90D8               	bcf	status,0,c
 23265  01B69A  360C               	rlcf	(btemp+11)^0,f,c
 23266  01B69C  2E01               	decfsz	btemp^0,f,c
 23267  01B69E  D7FC               	goto	u9355
 23268  01B6A0  500C               	movf	(btemp+11)^0,w,c
 23269  01B6A2  6E60               	movwf	96,c	;volatile
 23270                           
 23271                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 23272  01B6A4  52E5               	movf	postdec1,f,c
 23273  01B6A6  52E5               	movf	postdec1,f,c
 23274  01B6A8  0012               	return		;funcret
 23275  01B6AA                     __end_of_PWM8_LoadDutyValue:
 23276                           	opt callstack 0
 23277                           
 23278 ;; *************** function _help_button *****************
 23279 ;; Defined at:
 23280 ;;		line 26 in file "mconfig.c"
 23281 ;; Parameters:    Size  Location     Type
 23282 ;;		None
 23283 ;; Auto vars:     Size  Location     Type
 23284 ;;		None
 23285 ;; Return value:  Size  Location     Type
 23286 ;;                  1  [STACK] _Bool 
 23287 ;; Registers used:
 23288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23289 ;; Tracked objects:
 23290 ;;		On entry : 0/1
 23291 ;;		On exit  : 0/0
 23292 ;;		Unchanged: 0/0
 23293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23298 ;;Total ram usage:        0 bytes
 23299 ;; Hardware stack levels used:    1
 23300 ;; Hardware stack levels required when called:   16
 23301 ;; This function calls:
 23302 ;;		_StartTimer
 23303 ;;		_TimerDone
 23304 ;; This function is called by:
 23305 ;;		_check_help
 23306 ;; This function uses a reentrant model
 23307 ;;
 23308                           
 23309                           	psect	text88
 23310  01B8A4                     __ptext88:
 23311                           	opt callstack 0
 23312  01B8A4                     _help_button:
 23313                           	opt callstack 13
 23314                           
 23315                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 23316                           
 23317                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23318                           ;incstack = 0
 23319  01B8A4  B0CB               	btfsc	203,0,c	;volatile
 23320  01B8A6  D00C               	goto	l1662
 23321                           
 23322                           ;mconfig.c: 29:   V.help = 1;
 23323  01B8A8  0101               	movlb	1	; () banked
 23324  01B8AA  85CB               	bsf	(_V+155)& (0+255),2,b	;volatile
 23325                           
 23326                           ; BSR set to: 1
 23327                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 23328  01B8AC  0E08               	movlw	8
 23329  01B8AE  6EE6               	movwf	postinc1,c
 23330  01B8B0  ECBB  F0DD         	call	_TimerDone	;wreg free
 23331  01B8B4  5001               	movf	btemp^0,w,c
 23332  01B8B6  B4D8               	btfsc	status,2,c
 23333  01B8B8  D003               	goto	l1662
 23334                           
 23335                           ;mconfig.c: 31:    return 1;
 23336  01B8BA  0E01               	movlw	1
 23337  01B8BC  6E01               	movwf	btemp^0,c
 23338  01B8BE  0012               	return	
 23339  01B8C0                     l1662:
 23340                           
 23341                           ;mconfig.c: 34:  if (!V.help)
 23342  01B8C0  0101               	movlb	1	; () banked
 23343  01B8C2  B5CB               	btfsc	(_V+155)& (0+255),2,b	;volatile
 23344  01B8C4  D008               	goto	l10462
 23345                           
 23346                           ; BSR set to: 1
 23347                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 23348  01B8C6  0E2C               	movlw	44
 23349  01B8C8  6EE6               	movwf	postinc1,c
 23350  01B8CA  0E01               	movlw	1
 23351  01B8CC  6EE6               	movwf	postinc1,c
 23352  01B8CE  0E08               	movlw	8
 23353  01B8D0  6EE6               	movwf	postinc1,c
 23354  01B8D2  EC95  F0DB         	call	_StartTimer	;wreg free
 23355  01B8D6                     l10462:
 23356                           
 23357                           ;mconfig.c: 37:  return 0;
 23358  01B8D6  0E00               	movlw	0
 23359  01B8D8  6E01               	movwf	btemp^0,c
 23360                           
 23361                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 23362  01B8DA  0012               	return		;funcret
 23363  01B8DC                     __end_of_help_button:
 23364                           	opt callstack 0
 23365                           
 23366 ;; *************** function _TimerDone *****************
 23367 ;; Defined at:
 23368 ;;		line 20 in file "timers.c"
 23369 ;; Parameters:    Size  Location     Type
 23370 ;;  timer           1  [STACK] const unsigned char 
 23371 ;; Auto vars:     Size  Location     Type
 23372 ;;		None
 23373 ;; Return value:  Size  Location     Type
 23374 ;;                  1  [STACK] _Bool 
 23375 ;; Registers used:
 23376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 23377 ;; Tracked objects:
 23378 ;;		On entry : 0/1
 23379 ;;		On exit  : 0/0
 23380 ;;		Unchanged: 0/0
 23381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23386 ;;Total ram usage:        0 bytes
 23387 ;; Hardware stack levels used:    1
 23388 ;; Hardware stack levels required when called:   15
 23389 ;; This function calls:
 23390 ;;		Nothing
 23391 ;; This function is called by:
 23392 ;;		_main
 23393 ;;		_WaitMs
 23394 ;;		_help_button
 23395 ;;		_check_help
 23396 ;;		_set_display_info
 23397 ;;		_update_adc_result
 23398 ;;		_esr_check
 23399 ;; This function uses a reentrant model
 23400 ;;
 23401                           
 23402                           	psect	text89
 23403  01BB76                     __ptext89:
 23404                           	opt callstack 0
 23405  01BB76                     _TimerDone:
 23406                           	opt callstack 14
 23407                           
 23408                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23409                           ;incstack = 0
 23410  01BB76  0004               	clrwdt		;# 
 23411                           
 23412                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 23413                           ;stkvar	_timer @ sp[(0)+-1]
 23414  01BB78  0EFF               	movlw	-1
 23415  01BB7A  50E3               	movf	plusw1,w,c
 23416  01BB7C  0D02               	mullw	2
 23417  01BB7E  0E7D               	movlw	low _tickCount
 23418  01BB80  24F3               	addwf	243,w,c
 23419  01BB82  6ED9               	movwf	fsr2l,c
 23420  01BB84  0E02               	movlw	high _tickCount
 23421  01BB86  20F4               	addwfc	prodh,w,c
 23422  01BB88  6EDA               	movwf	fsr2h,c
 23423  01BB8A  50DE               	movf	postinc2,w,c
 23424  01BB8C  10DE               	iorwf	postinc2,w,c
 23425  01BB8E  A4D8               	btfss	status,2,c
 23426  01BB90  D002               	goto	l9748
 23427                           
 23428                           ;timers.c: 24:   return 1;
 23429  01BB92  0E01               	movlw	1
 23430  01BB94  D001               	goto	L27
 23431  01BB96                     l9748:
 23432                           
 23433                           ;timers.c: 26:  return 0;
 23434  01BB96  0E00               	movlw	0
 23435  01BB98                     L27:
 23436  01BB98  6E01               	movwf	btemp^0,c
 23437                           
 23438                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 23439  01BB9A  52E5               	movf	postdec1,f,c
 23440  01BB9C  0012               	return		;funcret
 23441  01BB9E                     __end_of_TimerDone:
 23442                           	opt callstack 0
 23443                           
 23444 ;; *************** function _StartTimer *****************
 23445 ;; Defined at:
 23446 ;;		line 12 in file "timers.c"
 23447 ;; Parameters:    Size  Location     Type
 23448 ;;  timer           1  [STACK] const unsigned char 
 23449 ;;  count           2  [STACK] const unsigned short 
 23450 ;; Auto vars:     Size  Location     Type
 23451 ;;		None
 23452 ;; Return value:  Size  Location     Type
 23453 ;;                  1  [STACK] void 
 23454 ;; Registers used:
 23455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23456 ;; Tracked objects:
 23457 ;;		On entry : 0/0
 23458 ;;		On exit  : 0/0
 23459 ;;		Unchanged: 0/0
 23460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23465 ;;Total ram usage:        0 bytes
 23466 ;; Hardware stack levels used:    1
 23467 ;; Hardware stack levels required when called:   15
 23468 ;; This function calls:
 23469 ;;		Nothing
 23470 ;; This function is called by:
 23471 ;;		_main
 23472 ;;		_WaitMs
 23473 ;;		_help_button
 23474 ;;		_check_help
 23475 ;;		_update_adc_result
 23476 ;;		_calc_bsoc
 23477 ;;		_esr_check
 23478 ;; This function uses a reentrant model
 23479 ;;
 23480                           
 23481                           	psect	text90
 23482  01B72A                     __ptext90:
 23483                           	opt callstack 0
 23484  01B72A                     _StartTimer:
 23485                           	opt callstack 0
 23486                           
 23487                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 23488                           ;stkvar	_count @ sp[(0)+-3]
 23489                           
 23490                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23491                           ;incstack = 0
 23492 ;; hardware stack exceeded
 23493  01B72A  0EFD               	movlw	-3
 23494  01B72C  006F FF8C  F00B    	movff	plusw1,btemp+10
 23495  01B732  0EFE               	movlw	-2
 23496  01B734  006F FF8C  F00C    	movff	plusw1,btemp+11
 23497  01B73A  90D8               	bcf	status,0,c
 23498  01B73C  340B               	rlcf	(btemp+10)^0,w,c
 23499  01B73E  6E09               	movwf	(btemp+8)^0,c
 23500  01B740  340C               	rlcf	(btemp+11)^0,w,c
 23501  01B742  6E0A               	movwf	(btemp+9)^0,c
 23502                           
 23503                           ;stkvar	_timer @ sp[(0)+-1]
 23504  01B744  0EFF               	movlw	-1
 23505  01B746  50E3               	movf	plusw1,w,c
 23506  01B748  0D02               	mullw	2
 23507  01B74A  0E7D               	movlw	low _tickCount
 23508  01B74C  24F3               	addwf	243,w,c
 23509  01B74E  6ED9               	movwf	fsr2l,c
 23510  01B750  0E02               	movlw	high _tickCount
 23511  01B752  20F4               	addwfc	prodh,w,c
 23512  01B754  6EDA               	movwf	fsr2h,c
 23513  01B756  0060  F027  FFDE   	movff	btemp+8,postinc2
 23514  01B75C  0060  F02B  FFDD   	movff	btemp+9,postdec2
 23515                           
 23516                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 23517  01B762  52E5               	movf	postdec1,f,c
 23518  01B764  52E5               	movf	postdec1,f,c
 23519  01B766  52E5               	movf	postdec1,f,c
 23520  01B768  0012               	return		;funcret
 23521  01B76A                     __end_of_StartTimer:
 23522                           	opt callstack 0
 23523                           
 23524 ;; *************** function _display_info *****************
 23525 ;; Defined at:
 23526 ;;		line 190 in file "mconfig.c"
 23527 ;; Parameters:    Size  Location     Type
 23528 ;;		None
 23529 ;; Auto vars:     Size  Location     Type
 23530 ;;		None
 23531 ;; Return value:  Size  Location     Type
 23532 ;;                  1  [STACK] enum E16509
 23533 ;; Registers used:
 23534 ;;		btemp
 23535 ;; Tracked objects:
 23536 ;;		On entry : 0/1
 23537 ;;		On exit  : 0/0
 23538 ;;		Unchanged: 0/0
 23539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23544 ;;Total ram usage:        0 bytes
 23545 ;; Hardware stack levels used:    1
 23546 ;; Hardware stack levels required when called:   15
 23547 ;; This function calls:
 23548 ;;		Nothing
 23549 ;; This function is called by:
 23550 ;;		_check_help
 23551 ;; This function uses a reentrant model
 23552 ;;
 23553                           
 23554                           	psect	text91
 23555  01C186                     __ptext91:
 23556                           	opt callstack 0
 23557  01C186                     _display_info:
 23558                           	opt callstack 14
 23559                           
 23560                           ;mconfig.c: 192:  return V.response.info;
 23561                           
 23562                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23563                           ;incstack = 0
 23564  01C186  0060  F750  F001   	movff	_V+164,btemp	;volatile
 23565                           
 23566                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 23567  01C18C  0012               	return		;funcret
 23568  01C18E                     __end_of_display_info:
 23569                           	opt callstack 0
 23570                           
 23571 ;; *************** function _display_help *****************
 23572 ;; Defined at:
 23573 ;;		line 195 in file "mconfig.c"
 23574 ;; Parameters:    Size  Location     Type
 23575 ;;		None
 23576 ;; Auto vars:     Size  Location     Type
 23577 ;;		None
 23578 ;; Return value:  Size  Location     Type
 23579 ;;                  1  [STACK] enum E16509
 23580 ;; Registers used:
 23581 ;;		btemp
 23582 ;; Tracked objects:
 23583 ;;		On entry : 3F/1
 23584 ;;		On exit  : 0/0
 23585 ;;		Unchanged: 0/0
 23586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23591 ;;Total ram usage:        0 bytes
 23592 ;; Hardware stack levels used:    1
 23593 ;; Hardware stack levels required when called:   15
 23594 ;; This function calls:
 23595 ;;		Nothing
 23596 ;; This function is called by:
 23597 ;;		_check_help
 23598 ;; This function uses a reentrant model
 23599 ;;
 23600                           
 23601                           	psect	text92
 23602  01C18E                     __ptext92:
 23603                           	opt callstack 0
 23604  01C18E                     _display_help:
 23605                           	opt callstack 14
 23606                           
 23607                           ;mconfig.c: 197:  return V.response.help_temp;
 23608                           
 23609                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23610                           ;incstack = 0
 23611  01C18E  0060  F754  F001   	movff	_V+165,btemp	;volatile
 23612                           
 23613                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 23614  01C194  0012               	return		;funcret
 23615  01C196                     __end_of_display_help:
 23616                           	opt callstack 0
 23617                           
 23618 ;; *************** function _check_enter_button *****************
 23619 ;; Defined at:
 23620 ;;		line 42 in file "hid.c"
 23621 ;; Parameters:    Size  Location     Type
 23622 ;;  h               1  [STACK] PTR struct H_data
 23623 ;;		 -> H(7), 
 23624 ;; Auto vars:     Size  Location     Type
 23625 ;;		None
 23626 ;; Return value:  Size  Location     Type
 23627 ;;                  1  [STACK] _Bool 
 23628 ;; Registers used:
 23629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 23630 ;; Tracked objects:
 23631 ;;		On entry : 0/0
 23632 ;;		On exit  : 0/0
 23633 ;;		Unchanged: 0/0
 23634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23639 ;;Total ram usage:        0 bytes
 23640 ;; Hardware stack levels used:    1
 23641 ;; Hardware stack levels required when called:   15
 23642 ;; This function calls:
 23643 ;;		Nothing
 23644 ;; This function is called by:
 23645 ;;		_main
 23646 ;; This function uses a reentrant model
 23647 ;;
 23648                           
 23649                           	psect	text93
 23650  01B76A                     __ptext93:
 23651                           	opt callstack 0
 23652  01B76A                     _check_enter_button:
 23653                           	opt callstack 15
 23654                           
 23655                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 23656                           ;stkvar	_h @ sp[(0)+-1]
 23657                           
 23658                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23659                           ;incstack = 0
 23660  01B76A  0EFF               	movlw	-1
 23661  01B76C  50E3               	movf	plusw1,w,c
 23662  01B76E  6ED9               	movwf	fsr2l,c
 23663  01B770  6ADA               	clrf	fsr2h,c
 23664  01B772  0E04               	movlw	4
 23665  01B774  26D9               	addwf	fsr2l,f,c
 23666  01B776  50DF               	movf	indf2,w,c
 23667  01B778  A4D8               	btfss	status,2,c
 23668  01B77A  D013               	goto	l11092
 23669                           
 23670                           ;stkvar	_h @ sp[(0)+-1]
 23671  01B77C  0EFF               	movlw	-1
 23672  01B77E  50E3               	movf	plusw1,w,c
 23673  01B780  6ED9               	movwf	fsr2l,c
 23674  01B782  6ADA               	clrf	fsr2h,c
 23675  01B784  0E05               	movlw	5
 23676  01B786  26D9               	addwf	fsr2l,f,c
 23677  01B788  50DF               	movf	indf2,w,c
 23678  01B78A  A4D8               	btfss	status,2,c
 23679  01B78C  D00A               	goto	l11092
 23680                           
 23681                           ;hid.c: 45:   h->wait_enter = 1;
 23682                           ;stkvar	_h @ sp[(0)+-1]
 23683  01B78E  0EFF               	movlw	-1
 23684  01B790  50E3               	movf	plusw1,w,c
 23685  01B792  6ED9               	movwf	fsr2l,c
 23686  01B794  6ADA               	clrf	fsr2h,c
 23687  01B796  0E04               	movlw	4
 23688  01B798  26D9               	addwf	fsr2l,f,c
 23689  01B79A  0E01               	movlw	1
 23690  01B79C  6EDF               	movwf	indf2,c
 23691                           
 23692                           ;hid.c: 46:   return 1;
 23693  01B79E  0E01               	movlw	1
 23694  01B7A0  D001               	goto	L28
 23695  01B7A2                     l11092:
 23696                           
 23697                           ;hid.c: 48:  return 0;
 23698  01B7A2  0E00               	movlw	0
 23699  01B7A4                     L28:
 23700  01B7A4  6E01               	movwf	btemp^0,c
 23701                           
 23702                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 23703  01B7A6  52E5               	movf	postdec1,f,c
 23704  01B7A8  0012               	return		;funcret
 23705  01B7AA                     __end_of_check_enter_button:
 23706                           	opt callstack 0
 23707                           
 23708 ;; *************** function _calc_ror_data *****************
 23709 ;; Defined at:
 23710 ;;		line 102 in file "mbmc.c"
 23711 ;; Parameters:    Size  Location     Type
 23712 ;;		None
 23713 ;; Auto vars:     Size  Location     Type
 23714 ;;		None
 23715 ;; Return value:  Size  Location     Type
 23716 ;;                  1  [STACK] void 
 23717 ;; Registers used:
 23718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23719 ;; Tracked objects:
 23720 ;;		On entry : 0/39
 23721 ;;		On exit  : 0/0
 23722 ;;		Unchanged: 0/0
 23723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23728 ;;Total ram usage:        0 bytes
 23729 ;; Hardware stack levels used:    1
 23730 ;; Hardware stack levels required when called:   18
 23731 ;; This function calls:
 23732 ;;		___flge
 23733 ;;		___flsub
 23734 ;;		_conv_raw_result
 23735 ;;		_fabsf
 23736 ;; This function is called by:
 23737 ;;		_main
 23738 ;; This function uses a reentrant model
 23739 ;;
 23740                           
 23741                           	psect	text94
 23742  018B70                     __ptext94:
 23743                           	opt callstack 0
 23744  018B70                     _calc_ror_data:
 23745                           	opt callstack 12
 23746                           
 23747                           ;mbmc.c: 104:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 106:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 23748                           
 23749                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23750                           ;incstack = 0
 23751  018B70  0060  F21B  FFE6   	movff	calc_ror_data@bcror,postinc1
 23752  018B76  0060  F21F  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 23753  018B7C  0060  F223  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 23754  018B82  0060  F227  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 23755  018B88  0E00               	movlw	0
 23756  018B8A  6EE6               	movwf	postinc1,c
 23757  018B8C  0E00               	movlw	0
 23758  018B8E  6EE6               	movwf	postinc1,c
 23759  018B90  EC71  F0A9         	call	_conv_raw_result	;wreg free
 23760  018B94  0060  F007  FFE6   	movff	btemp,postinc1
 23761  018B9A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23762  018BA0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23763  018BA6  0060  F013  FFE6   	movff	btemp+3,postinc1
 23764  018BAC  ECEF  F0DA         	call	___flsub	;wreg free
 23765  018BB0  0060  F007  FFE6   	movff	btemp,postinc1
 23766  018BB6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23767  018BBC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23768  018BC2  0060  F013  FFE6   	movff	btemp+3,postinc1
 23769  018BC8  ECF7  F0D2         	call	_fabsf	;wreg free
 23770  018BCC  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 23771  018BD2  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 23772  018BD8  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 23773  018BDE  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 23774                           
 23775                           ;mbmc.c: 107:  bcror = conv_raw_result(C_BATT, CONV);
 23776  018BE4  0E00               	movlw	0
 23777  018BE6  6EE6               	movwf	postinc1,c
 23778  018BE8  0E00               	movlw	0
 23779  018BEA  6EE6               	movwf	postinc1,c
 23780  018BEC  EC71  F0A9         	call	_conv_raw_result	;wreg free
 23781  018BF0  0060  F004  F086   	movff	btemp,calc_ror_data@bcror
 23782  018BF6  0060  F008  F087   	movff	btemp+1,calc_ror_data@bcror+1
 23783  018BFC  0060  F00C  F088   	movff	btemp+2,calc_ror_data@bcror+2
 23784  018C02  0060  F010  F089   	movff	btemp+3,calc_ror_data@bcror+3
 23785                           
 23786                           ;mbmc.c: 108:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 23787  018C08  0060  F22B  FFE6   	movff	calc_ror_data@bvror,postinc1
 23788  018C0E  0060  F22F  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 23789  018C14  0060  F233  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 23790  018C1A  0060  F237  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 23791  018C20  0E00               	movlw	0
 23792  018C22  6EE6               	movwf	postinc1,c
 23793  018C24  0E04               	movlw	4
 23794  018C26  6EE6               	movwf	postinc1,c
 23795  018C28  EC71  F0A9         	call	_conv_raw_result	;wreg free
 23796  018C2C  0060  F007  FFE6   	movff	btemp,postinc1
 23797  018C32  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23798  018C38  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23799  018C3E  0060  F013  FFE6   	movff	btemp+3,postinc1
 23800  018C44  ECEF  F0DA         	call	___flsub	;wreg free
 23801  018C48  0060  F007  FFE6   	movff	btemp,postinc1
 23802  018C4E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23803  018C54  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23804  018C5A  0060  F013  FFE6   	movff	btemp+3,postinc1
 23805  018C60  ECF7  F0D2         	call	_fabsf	;wreg free
 23806  018C64  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 23807  018C6A  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 23808  018C70  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 23809  018C76  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 23810                           
 23811                           ;mbmc.c: 109:  if (C.bv_ror < 0.0051)
 23812  018C7C  0EE7               	movlw	231
 23813  018C7E  6EE6               	movwf	postinc1,c
 23814  018C80  0E1D               	movlw	29
 23815  018C82  6EE6               	movwf	postinc1,c
 23816  018C84  0EA7               	movlw	167
 23817  018C86  6EE6               	movwf	postinc1,c
 23818  018C88  0E3B               	movlw	59
 23819  018C8A  6EE6               	movwf	postinc1,c
 23820  018C8C  EE21  F36B         	lfsr	2,_C+108	;volatile
 23821  018C90  006F FF7B FFE6     	movff	postinc2,postinc1
 23822  018C96  006F FF7B FFE6     	movff	postinc2,postinc1
 23823  018C9C  006F FF7B FFE6     	movff	postinc2,postinc1
 23824  018CA2  006F FF7B FFE6     	movff	postinc2,postinc1
 23825  018CA8  ECF4  F0C7         	call	___flge	;wreg free
 23826  018CAC  B001               	btfsc	btemp& (0+255),0,c
 23827  018CAE  D010               	goto	l10882
 23828                           
 23829                           ;mbmc.c: 110:   C.bv_ror = 0.0140 + 0.0001;
 23830  018CB0  0EB0               	movlw	176
 23831  018CB2  006F FFA0  F76B    	movff	wreg,_C+108	;volatile
 23832  018CB8  0E03               	movlw	3
 23833  018CBA  006F FFA0  F76C    	movff	wreg,_C+109	;volatile
 23834  018CC0  0E67               	movlw	103
 23835  018CC2  006F FFA0  F76D    	movff	wreg,_C+110	;volatile
 23836  018CC8  0E3C               	movlw	60
 23837  018CCA  006F FFA0  F76E    	movff	wreg,_C+111	;volatile
 23838  018CD0                     l10882:
 23839                           
 23840                           ;mbmc.c: 111:  bvror = conv_raw_result(V_BAT, CONV);
 23841  018CD0  0E00               	movlw	0
 23842  018CD2  6EE6               	movwf	postinc1,c
 23843  018CD4  0E04               	movlw	4
 23844  018CD6  6EE6               	movwf	postinc1,c
 23845  018CD8  EC71  F0A9         	call	_conv_raw_result	;wreg free
 23846  018CDC  0060  F004  F08A   	movff	btemp,calc_ror_data@bvror
 23847  018CE2  0060  F008  F08B   	movff	btemp+1,calc_ror_data@bvror+1
 23848  018CE8  0060  F00C  F08C   	movff	btemp+2,calc_ror_data@bvror+2
 23849  018CEE  0060  F010  F08D   	movff	btemp+3,calc_ror_data@bvror+3
 23850                           
 23851                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 23852  018CF4  0012               	return		;funcret
 23853  018CF6                     __end_of_calc_ror_data:
 23854                           	opt callstack 0
 23855                           
 23856 ;; *************** function _fabsf *****************
 23857 ;; Defined at:
 23858 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 23859 ;; Parameters:    Size  Location     Type
 23860 ;;  x               4  [STACK] float 
 23861 ;; Auto vars:     Size  Location     Type
 23862 ;;  u               4  [STACK] struct .
 23863 ;; Return value:  Size  Location     Type
 23864 ;;                  4  [STACK] float 
 23865 ;; Registers used:
 23866 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 23867 ;; Tracked objects:
 23868 ;;		On entry : 0/0
 23869 ;;		On exit  : 0/0
 23870 ;;		Unchanged: 0/0
 23871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23876 ;;Total ram usage:        0 bytes
 23877 ;; Hardware stack levels used:    1
 23878 ;; Hardware stack levels required when called:   15
 23879 ;; This function calls:
 23880 ;;		Nothing
 23881 ;; This function is called by:
 23882 ;;		_main
 23883 ;;		_calc_ror_data
 23884 ;;		_calc_bsoc
 23885 ;;		_esr_check
 23886 ;; This function uses a reentrant model
 23887 ;;
 23888                           
 23889                           	psect	text95
 23890  01A5EE                     __ptext95:
 23891                           	opt callstack 0
 23892  01A5EE                     _fabsf:
 23893                           	opt callstack 0
 23894                           
 23895                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23896  01A5EE  52E6               	movf	postinc1,f,c
 23897  01A5F0  52E6               	movf	postinc1,f,c
 23898  01A5F2  52E6               	movf	postinc1,f,c
 23899  01A5F4  52E6               	movf	postinc1,f,c
 23900                           
 23901                           ;incstack = 0
 23902 ;; hardware stack exceeded
 23903  01A5F6  0060  F1F8  F009   	movff	fabsf@F463,btemp+8
 23904  01A5FC  0060  F1FC  F00A   	movff	fabsf@F463+1,btemp+9
 23905  01A602  0060  F200  F00B   	movff	fabsf@F463+2,btemp+10
 23906  01A608  0060  F204  F00C   	movff	fabsf@F463+3,btemp+11
 23907                           
 23908                           ;stkvar	_u @ sp[(-4)+0]
 23909  01A60E  0EFC               	movlw	-4
 23910  01A610  0060  F027  FFE3   	movff	btemp+8,plusw1
 23911  01A616  0EFD               	movlw	-3
 23912  01A618  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23913  01A61E  0EFE               	movlw	-2
 23914  01A620  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23915  01A626  0EFF               	movlw	-1
 23916  01A628  0060  F033  FFE3   	movff	btemp+11,plusw1
 23917                           
 23918                           ;stkvar	_x @ sp[(-4)+-4]
 23919  01A62E  0EF8               	movlw	-8
 23920  01A630  006F FF8C  F009    	movff	plusw1,btemp+8
 23921  01A636  0EF9               	movlw	-7
 23922  01A638  006F FF8C  F00A    	movff	plusw1,btemp+9
 23923  01A63E  0EFA               	movlw	-6
 23924  01A640  006F FF8C  F00B    	movff	plusw1,btemp+10
 23925  01A646  0EFB               	movlw	-5
 23926  01A648  006F FF8C  F00C    	movff	plusw1,btemp+11
 23927                           
 23928                           ;stkvar	_u @ sp[(-4)+0]
 23929  01A64E  0EFC               	movlw	-4
 23930  01A650  0060  F027  FFE3   	movff	btemp+8,plusw1
 23931  01A656  0EFD               	movlw	-3
 23932  01A658  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23933  01A65E  0EFE               	movlw	-2
 23934  01A660  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23935  01A666  0EFF               	movlw	-1
 23936  01A668  0060  F033  FFE3   	movff	btemp+11,plusw1
 23937                           
 23938                           ;stkvar	_u @ sp[(-4)+0]
 23939  01A66E  0EFF               	movlw	-1
 23940  01A670  9EE3               	bcf	plusw1,7,c
 23941                           
 23942                           ;stkvar	_u @ sp[(-4)+0]
 23943  01A672  0EFC               	movlw	-4
 23944  01A674  006F FF8C  F001    	movff	plusw1,btemp
 23945  01A67A  0EFD               	movlw	-3
 23946  01A67C  006F FF8C  F002    	movff	plusw1,btemp+1
 23947  01A682  0EFE               	movlw	-2
 23948  01A684  006F FF8C  F003    	movff	plusw1,btemp+2
 23949  01A68A  0EFF               	movlw	-1
 23950  01A68C  006F FF8C  F004    	movff	plusw1,btemp+3
 23951                           
 23952                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 23953  01A692  0EF8               	movlw	248
 23954  01A694  26E1               	addwf	fsr1l,f,c
 23955  01A696  0EFF               	movlw	255
 23956  01A698  22E2               	addwfc	fsr1h,f,c
 23957  01A69A  0012               	return		;funcret
 23958  01A69C                     __end_of_fabsf:
 23959                           	opt callstack 0
 23960                           
 23961 ;; *************** function _conv_raw_result *****************
 23962 ;; Defined at:
 23963 ;;		line 98 in file "daq.c"
 23964 ;; Parameters:    Size  Location     Type
 23965 ;;  chan            1  [STACK] const enum E16582
 23966 ;;  to_what         1  [STACK] const enum E16644
 23967 ;; Auto vars:     Size  Location     Type
 23968 ;;		None
 23969 ;; Return value:  Size  Location     Type
 23970 ;;                  4  [STACK] float 
 23971 ;; Registers used:
 23972 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23973 ;; Tracked objects:
 23974 ;;		On entry : 0/39
 23975 ;;		On exit  : 0/0
 23976 ;;		Unchanged: 0/0
 23977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23982 ;;Total ram usage:        0 bytes
 23983 ;; Hardware stack levels used:    1
 23984 ;; Hardware stack levels required when called:   17
 23985 ;; This function calls:
 23986 ;;		___fladd
 23987 ;;		___fldiv
 23988 ;;		___flmul
 23989 ;;		___flsub
 23990 ;;		___xxtofl
 23991 ;;		_get_raw_result
 23992 ;;		_nanf
 23993 ;; This function is called by:
 23994 ;;		_main
 23995 ;;		_convert_adc_data
 23996 ;;		_calc_ror_data
 23997 ;;		_check_day_time
 23998 ;;		_init_bsoc
 23999 ;;		_esr_check
 24000 ;; This function uses a reentrant model
 24001 ;;
 24002                           
 24003                           	psect	text96
 24004  0152E2                     __ptext96:
 24005                           	opt callstack 0
 24006  0152E2                     _conv_raw_result:
 24007                           	opt callstack 0
 24008                           
 24009                           ;daq.c: 98: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 99: {;daq.c: 101:  switch (to_what) {
 24010                           
 24011                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24012                           ;incstack = 0
 24013 ;; hardware stack exceeded
 24014  0152E2  D276               	goto	l9730
 24015  0152E4                     l9676:
 24016                           
 24017                           ;daq.c: 103:   if (!(0b0011110001110111 >> chan & 0x1))
 24018                           ;stkvar	_chan @ sp[(0)+-1]
 24019  0152E4  0EFF               	movlw	-1
 24020  0152E6  006F FF8C  F00C    	movff	plusw1,btemp+11
 24021  0152EC  0E77               	movlw	119
 24022  0152EE  6E09               	movwf	(btemp+8)^0,c
 24023  0152F0  0E3C               	movlw	60
 24024  0152F2  6E0A               	movwf	(btemp+9)^0,c
 24025  0152F4  2A0C               	incf	(btemp+11)^0,f,c
 24026  0152F6  D003               	goto	u9074
 24027  0152F8                     u9075:
 24028  0152F8  340A               	rlcf	(btemp+9)^0,w,c
 24029  0152FA  320A               	rrcf	(btemp+9)^0,f,c
 24030  0152FC  3209               	rrcf	(btemp+8)^0,f,c
 24031  0152FE                     u9074:
 24032  0152FE  2E0C               	decfsz	(btemp+11)^0,f,c
 24033  015300  D7FB               	goto	u9075
 24034  015302  B009               	btfsc	(btemp+8)^0,0,c
 24035  015304  D007               	goto	l9682
 24036                           
 24037                           ;daq.c: 104:    return nanf("");
 24038  015306  0E4F               	movlw	low (STR_64+120)
 24039  015308  6EE6               	movwf	postinc1,c
 24040  01530A  0EFC               	movlw	high (STR_64+120)
 24041  01530C  6EE6               	movwf	postinc1,c
 24042  01530E  EC91  F0D8         	call	_nanf	;wreg free
 24043  015312  D26E               	goto	l1781
 24044  015314                     l9682:
 24045                           
 24046                           ;daq.c: 106:   if (0b0000000000000011 >> chan & 0x1) {
 24047                           ;stkvar	_chan @ sp[(0)+-1]
 24048  015314  0EFF               	movlw	-1
 24049  015316  006F FF8C  F00C    	movff	plusw1,btemp+11
 24050  01531C  0E03               	movlw	3
 24051  01531E  6E09               	movwf	(btemp+8)^0,c
 24052  015320  0E00               	movlw	0
 24053  015322  6E0A               	movwf	(btemp+9)^0,c
 24054  015324  2A0C               	incf	(btemp+11)^0,f,c
 24055  015326  D003               	goto	u9094
 24056  015328                     u9095:
 24057  015328  340A               	rlcf	(btemp+9)^0,w,c
 24058  01532A  320A               	rrcf	(btemp+9)^0,f,c
 24059  01532C  3209               	rrcf	(btemp+8)^0,f,c
 24060  01532E                     u9094:
 24061  01532E  2E0C               	decfsz	(btemp+11)^0,f,c
 24062  015330  D7FB               	goto	u9095
 24063  015332  A009               	btfss	(btemp+8)^0,0,c
 24064  015334  D11F               	goto	l9696
 24065                           
 24066                           ;daq.c: 107:    if (0b0000000000000001 >> chan & 0x1) {
 24067                           ;stkvar	_chan @ sp[(0)+-1]
 24068  015336  0EFF               	movlw	-1
 24069  015338  006F FF8C  F00C    	movff	plusw1,btemp+11
 24070  01533E  0E01               	movlw	1
 24071  015340  6E09               	movwf	(btemp+8)^0,c
 24072  015342  0E00               	movlw	0
 24073  015344  6E0A               	movwf	(btemp+9)^0,c
 24074  015346  2A0C               	incf	(btemp+11)^0,f,c
 24075  015348  D003               	goto	u9114
 24076  01534A                     u9115:
 24077  01534A  340A               	rlcf	(btemp+9)^0,w,c
 24078  01534C  320A               	rrcf	(btemp+9)^0,f,c
 24079  01534E  3209               	rrcf	(btemp+8)^0,f,c
 24080  015350                     u9114:
 24081  015350  2E0C               	decfsz	(btemp+11)^0,f,c
 24082  015352  D7FB               	goto	u9115
 24083  015354  A009               	btfss	(btemp+8)^0,0,c
 24084  015356  D087               	goto	l9692
 24085                           
 24086                           ;daq.c: 108:     return R.n_zero[0]+((float) ((int16_t) get_raw_result(chan)) - R.n_offs
      +                          et[0]) * 0.0850000;
 24087  015358  0060  F493  FFE6   	movff	_R+36,postinc1
 24088  01535E  0060  F497  FFE6   	movff	_R+37,postinc1
 24089  015364  0060  F49B  FFE6   	movff	_R+38,postinc1
 24090  01536A  0060  F49F  FFE6   	movff	_R+39,postinc1
 24091  015370  0E7B               	movlw	123
 24092  015372  6EE6               	movwf	postinc1,c
 24093  015374  0E14               	movlw	20
 24094  015376  6EE6               	movwf	postinc1,c
 24095  015378  0EAE               	movlw	174
 24096  01537A  6EE6               	movwf	postinc1,c
 24097  01537C  0E3D               	movlw	61
 24098  01537E  6EE6               	movwf	postinc1,c
 24099  015380  0060  F480  F009   	movff	_R+32,btemp+8	;volatile
 24100  015386  0060  F484  F00A   	movff	_R+33,btemp+9	;volatile
 24101  01538C  0E00               	movlw	0
 24102  01538E  BE0A               	btfsc	(btemp+9)^0,7,c
 24103  015390  0EFF               	movlw	255
 24104  015392  6E0B               	movwf	(btemp+10)^0,c
 24105  015394  6E0C               	movwf	(btemp+11)^0,c
 24106  015396  0060  F027  FFE6   	movff	btemp+8,postinc1
 24107  01539C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 24108  0153A2  0060  F02F  FFE6   	movff	btemp+10,postinc1
 24109  0153A8  0060  F033  FFE6   	movff	btemp+11,postinc1
 24110  0153AE  0E01               	movlw	1
 24111  0153B0  6EE6               	movwf	postinc1,c
 24112  0153B2  EC3D  F0C2         	call	___xxtofl	;wreg free
 24113  0153B6  0060  F007  FFE6   	movff	btemp,postinc1
 24114  0153BC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24115  0153C2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24116  0153C8  0060  F013  FFE6   	movff	btemp+3,postinc1
 24117                           
 24118                           ;stkvar	_chan @ sp[(-12)+-1]
 24119  0153CE  0EF3               	movlw	-13
 24120  0153D0  50E3               	movf	plusw1,w,c
 24121  0153D2  6EE6               	movwf	postinc1,c
 24122  0153D4  EC52  F0DF         	call	_get_raw_result	;wreg free
 24123  0153D8  0060  F004  F00B   	movff	btemp,btemp+10
 24124  0153DE  0060  F008  F00C   	movff	btemp+1,btemp+11
 24125  0153E4  500B               	movf	(btemp+10)^0,w,c
 24126  0153E6  6E05               	movwf	(btemp+4)^0,c
 24127  0153E8  500C               	movf	(btemp+11)^0,w,c
 24128  0153EA  6E06               	movwf	(btemp+5)^0,c
 24129  0153EC  6A07               	clrf	(btemp+6)^0,c
 24130  0153EE  6A08               	clrf	(btemp+7)^0,c
 24131  0153F0  0060  F017  FFE6   	movff	btemp+4,postinc1
 24132  0153F6  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24133  0153FC  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24134  015402  0060  F023  FFE6   	movff	btemp+7,postinc1
 24135  015408  0E00               	movlw	0
 24136  01540A  6EE6               	movwf	postinc1,c
 24137  01540C  EC3D  F0C2         	call	___xxtofl	;wreg free
 24138  015410  0060  F007  FFE6   	movff	btemp,postinc1
 24139  015416  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24140  01541C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24141  015422  0060  F013  FFE6   	movff	btemp+3,postinc1
 24142  015428  ECEF  F0DA         	call	___flsub	;wreg free
 24143  01542C  0060  F007  FFE6   	movff	btemp,postinc1
 24144  015432  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24145  015438  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24146  01543E  0060  F013  FFE6   	movff	btemp+3,postinc1
 24147  015444  ECC1  F09E         	call	___flmul	;wreg free
 24148  015448  0060  F007  FFE6   	movff	btemp,postinc1
 24149  01544E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24150  015454  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24151  01545A  0060  F013  FFE6   	movff	btemp+3,postinc1
 24152  015460  ECD6  F0A2         	call	___fladd	;wreg free
 24153  015464  D1C5               	goto	l1781
 24154  015466                     l9692:
 24155                           
 24156                           ;daq.c: 110:     return R.n_zero[1]+((float) ((int16_t) get_raw_result(chan)) - R.n_offs
      +                          et[1]) * 0.0350000;
 24157  015466  0060  F4A3  FFE6   	movff	_R+40,postinc1
 24158  01546C  0060  F4A7  FFE6   	movff	_R+41,postinc1
 24159  015472  0060  F4AB  FFE6   	movff	_R+42,postinc1
 24160  015478  0060  F4AF  FFE6   	movff	_R+43,postinc1
 24161  01547E  0E29               	movlw	41
 24162  015480  6EE6               	movwf	postinc1,c
 24163  015482  0E5C               	movlw	92
 24164  015484  6EE6               	movwf	postinc1,c
 24165  015486  0E0F               	movlw	15
 24166  015488  6EE6               	movwf	postinc1,c
 24167  01548A  0E3D               	movlw	61
 24168  01548C  6EE6               	movwf	postinc1,c
 24169  01548E  0060  F488  F009   	movff	_R+34,btemp+8	;volatile
 24170  015494  0060  F48C  F00A   	movff	_R+35,btemp+9	;volatile
 24171  01549A  0E00               	movlw	0
 24172  01549C  BE0A               	btfsc	(btemp+9)^0,7,c
 24173  01549E  0EFF               	movlw	255
 24174  0154A0  6E0B               	movwf	(btemp+10)^0,c
 24175  0154A2  6E0C               	movwf	(btemp+11)^0,c
 24176  0154A4  0060  F027  FFE6   	movff	btemp+8,postinc1
 24177  0154AA  0060  F02B  FFE6   	movff	btemp+9,postinc1
 24178  0154B0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 24179  0154B6  0060  F033  FFE6   	movff	btemp+11,postinc1
 24180  0154BC  0E01               	movlw	1
 24181  0154BE  6EE6               	movwf	postinc1,c
 24182  0154C0  EC3D  F0C2         	call	___xxtofl	;wreg free
 24183  0154C4  0060  F007  FFE6   	movff	btemp,postinc1
 24184  0154CA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24185  0154D0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24186  0154D6  0060  F013  FFE6   	movff	btemp+3,postinc1
 24187                           
 24188                           ;stkvar	_chan @ sp[(-12)+-1]
 24189  0154DC  0EF3               	movlw	-13
 24190  0154DE  50E3               	movf	plusw1,w,c
 24191  0154E0  6EE6               	movwf	postinc1,c
 24192  0154E2  EC52  F0DF         	call	_get_raw_result	;wreg free
 24193  0154E6  0060  F004  F00B   	movff	btemp,btemp+10
 24194  0154EC  0060  F008  F00C   	movff	btemp+1,btemp+11
 24195  0154F2  500B               	movf	(btemp+10)^0,w,c
 24196  0154F4  6E05               	movwf	(btemp+4)^0,c
 24197  0154F6  500C               	movf	(btemp+11)^0,w,c
 24198  0154F8  6E06               	movwf	(btemp+5)^0,c
 24199  0154FA  6A07               	clrf	(btemp+6)^0,c
 24200  0154FC  6A08               	clrf	(btemp+7)^0,c
 24201  0154FE  0060  F017  FFE6   	movff	btemp+4,postinc1
 24202  015504  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24203  01550A  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24204  015510  0060  F023  FFE6   	movff	btemp+7,postinc1
 24205  015516  0E00               	movlw	0
 24206  015518  6EE6               	movwf	postinc1,c
 24207  01551A  EC3D  F0C2         	call	___xxtofl	;wreg free
 24208  01551E  0060  F007  FFE6   	movff	btemp,postinc1
 24209  015524  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24210  01552A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24211  015530  0060  F013  FFE6   	movff	btemp+3,postinc1
 24212  015536  ECEF  F0DA         	call	___flsub	;wreg free
 24213  01553A  0060  F007  FFE6   	movff	btemp,postinc1
 24214  015540  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24215  015546  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24216  01554C  0060  F013  FFE6   	movff	btemp+3,postinc1
 24217  015552  ECC1  F09E         	call	___flmul	;wreg free
 24218  015556  0060  F007  FFE6   	movff	btemp,postinc1
 24219  01555C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24220  015562  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24221  015568  0060  F013  FFE6   	movff	btemp+3,postinc1
 24222  01556E  ECD6  F0A2         	call	___fladd	;wreg free
 24223  015572  D13E               	goto	l1781
 24224  015574                     l9696:
 24225                           
 24226                           ;daq.c: 113:    if (0b0000100000000000 >> chan & 0x1) {
 24227                           ;stkvar	_chan @ sp[(0)+-1]
 24228  015574  0EFF               	movlw	-1
 24229  015576  006F FF8C  F00C    	movff	plusw1,btemp+11
 24230  01557C  0E00               	movlw	0
 24231  01557E  6E09               	movwf	(btemp+8)^0,c
 24232  015580  0E08               	movlw	8
 24233  015582  6E0A               	movwf	(btemp+9)^0,c
 24234  015584  2A0C               	incf	(btemp+11)^0,f,c
 24235  015586  D003               	goto	u9134
 24236  015588                     u9135:
 24237  015588  340A               	rlcf	(btemp+9)^0,w,c
 24238  01558A  320A               	rrcf	(btemp+9)^0,f,c
 24239  01558C  3209               	rrcf	(btemp+8)^0,f,c
 24240  01558E                     u9134:
 24241  01558E  2E0C               	decfsz	(btemp+11)^0,f,c
 24242  015590  D7FB               	goto	u9135
 24243  015592  A009               	btfss	(btemp+8)^0,0,c
 24244  015594  D008               	goto	l9704
 24245                           
 24246                           ;daq.c: 114:     return 25.0;
 24247  015596  0E00               	movlw	0
 24248  015598  6E01               	movwf	btemp^0,c
 24249  01559A  0E00               	movlw	0
 24250  01559C  6E02               	movwf	(btemp+1)^0,c
 24251  01559E  0EC8               	movlw	200
 24252  0155A0  6E03               	movwf	(btemp+2)^0,c
 24253  0155A2  0E41               	movlw	65
 24254  0155A4  D113               	goto	L29
 24255  0155A6                     l9704:
 24256                           
 24257                           ;daq.c: 116:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 24258  0155A6  0E00               	movlw	0
 24259  0155A8  6EE6               	movwf	postinc1,c
 24260  0155AA  0E00               	movlw	0
 24261  0155AC  6EE6               	movwf	postinc1,c
 24262  0155AE  0E7A               	movlw	122
 24263  0155B0  6EE6               	movwf	postinc1,c
 24264  0155B2  0E44               	movlw	68
 24265  0155B4  6EE6               	movwf	postinc1,c
 24266  0155B6  0E61               	movlw	97
 24267  0155B8  6EE6               	movwf	postinc1,c
 24268  0155BA  0E03               	movlw	3
 24269  0155BC  6EE6               	movwf	postinc1,c
 24270  0155BE  0E84               	movlw	132
 24271  0155C0  6EE6               	movwf	postinc1,c
 24272  0155C2  0E40               	movlw	64
 24273  0155C4  6EE6               	movwf	postinc1,c
 24274                           
 24275                           ;stkvar	_chan @ sp[(-8)+-1]
 24276  0155C6  0EF7               	movlw	-9
 24277  0155C8  50E3               	movf	plusw1,w,c
 24278  0155CA  6EE6               	movwf	postinc1,c
 24279  0155CC  EC52  F0DF         	call	_get_raw_result	;wreg free
 24280  0155D0  0060  F004  F00B   	movff	btemp,btemp+10
 24281  0155D6  0060  F008  F00C   	movff	btemp+1,btemp+11
 24282  0155DC  500B               	movf	(btemp+10)^0,w,c
 24283  0155DE  6E05               	movwf	(btemp+4)^0,c
 24284  0155E0  500C               	movf	(btemp+11)^0,w,c
 24285  0155E2  6E06               	movwf	(btemp+5)^0,c
 24286  0155E4  6A07               	clrf	(btemp+6)^0,c
 24287  0155E6  6A08               	clrf	(btemp+7)^0,c
 24288  0155E8  0060  F017  FFE6   	movff	btemp+4,postinc1
 24289  0155EE  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24290  0155F4  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24291  0155FA  0060  F023  FFE6   	movff	btemp+7,postinc1
 24292  015600  0E00               	movlw	0
 24293  015602  6EE6               	movwf	postinc1,c
 24294  015604  EC3D  F0C2         	call	___xxtofl	;wreg free
 24295  015608  0060  F007  FFE6   	movff	btemp,postinc1
 24296  01560E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24297  015614  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24298  01561A  0060  F013  FFE6   	movff	btemp+3,postinc1
 24299  015620  ECC1  F09E         	call	___flmul	;wreg free
 24300  015624  0060  F007  FFE6   	movff	btemp,postinc1
 24301  01562A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24302  015630  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24303  015636  0060  F013  FFE6   	movff	btemp+3,postinc1
 24304  01563C  ECB4  F0A6         	call	___fldiv	;wreg free
 24305  015640  D0D7               	goto	l1781
 24306  015642                     l9708:
 24307                           
 24308                           ;daq.c: 121:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 24309                           ;stkvar	_chan @ sp[(0)+-1]
 24310  015642  0EFF               	movlw	-1
 24311  015644  006F FF8C  F00C    	movff	plusw1,btemp+11
 24312  01564A  0E03               	movlw	3
 24313  01564C  6E09               	movwf	(btemp+8)^0,c
 24314  01564E  0E00               	movlw	0
 24315  015650  6E0A               	movwf	(btemp+9)^0,c
 24316  015652  2A0C               	incf	(btemp+11)^0,f,c
 24317  015654  D003               	goto	u9154
 24318  015656                     u9155:
 24319  015656  340A               	rlcf	(btemp+9)^0,w,c
 24320  015658  320A               	rrcf	(btemp+9)^0,f,c
 24321  01565A  3209               	rrcf	(btemp+8)^0,f,c
 24322  01565C                     u9154:
 24323  01565C  2E0C               	decfsz	(btemp+11)^0,f,c
 24324  01565E  D7FB               	goto	u9155
 24325  015660  B009               	btfsc	(btemp+8)^0,0,c
 24326  015662  D011               	goto	u9180
 24327                           
 24328                           ;stkvar	_chan @ sp[(0)+-1]
 24329  015664  0EFF               	movlw	-1
 24330  015666  006F FF8C  F00C    	movff	plusw1,btemp+11
 24331  01566C  0E00               	movlw	0
 24332  01566E  6E09               	movwf	(btemp+8)^0,c
 24333  015670  0E08               	movlw	8
 24334  015672  6E0A               	movwf	(btemp+9)^0,c
 24335  015674  2A0C               	incf	(btemp+11)^0,f,c
 24336  015676  D003               	goto	u9174
 24337  015678                     u9175:
 24338  015678  340A               	rlcf	(btemp+9)^0,w,c
 24339  01567A  320A               	rrcf	(btemp+9)^0,f,c
 24340  01567C  3209               	rrcf	(btemp+8)^0,f,c
 24341  01567E                     u9174:
 24342  01567E  2E0C               	decfsz	(btemp+11)^0,f,c
 24343  015680  D7FB               	goto	u9175
 24344  015682  A009               	btfss	(btemp+8)^0,0,c
 24345  015684  D04E               	goto	l9716
 24346  015686                     u9180:
 24347                           
 24348                           ;daq.c: 122:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 24349  015686  0E00               	movlw	0
 24350  015688  6EE6               	movwf	postinc1,c
 24351  01568A  0E00               	movlw	0
 24352  01568C  6EE6               	movwf	postinc1,c
 24353  01568E  0E7A               	movlw	122
 24354  015690  6EE6               	movwf	postinc1,c
 24355  015692  0E44               	movlw	68
 24356  015694  6EE6               	movwf	postinc1,c
 24357  015696  0E00               	movlw	0
 24358  015698  6EE6               	movwf	postinc1,c
 24359  01569A  0E00               	movlw	0
 24360  01569C  6EE6               	movwf	postinc1,c
 24361  01569E  0E20               	movlw	32
 24362  0156A0  6EE6               	movwf	postinc1,c
 24363  0156A2  0E3F               	movlw	63
 24364  0156A4  6EE6               	movwf	postinc1,c
 24365                           
 24366                           ;stkvar	_chan @ sp[(-8)+-1]
 24367  0156A6  0EF7               	movlw	-9
 24368  0156A8  50E3               	movf	plusw1,w,c
 24369  0156AA  6EE6               	movwf	postinc1,c
 24370  0156AC  EC52  F0DF         	call	_get_raw_result	;wreg free
 24371  0156B0  0060  F004  F00B   	movff	btemp,btemp+10
 24372  0156B6  0060  F008  F00C   	movff	btemp+1,btemp+11
 24373  0156BC  500B               	movf	(btemp+10)^0,w,c
 24374  0156BE  6E05               	movwf	(btemp+4)^0,c
 24375  0156C0  500C               	movf	(btemp+11)^0,w,c
 24376  0156C2  6E06               	movwf	(btemp+5)^0,c
 24377  0156C4  6A07               	clrf	(btemp+6)^0,c
 24378  0156C6  6A08               	clrf	(btemp+7)^0,c
 24379  0156C8  0060  F017  FFE6   	movff	btemp+4,postinc1
 24380  0156CE  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24381  0156D4  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24382  0156DA  0060  F023  FFE6   	movff	btemp+7,postinc1
 24383  0156E0  0E00               	movlw	0
 24384  0156E2  6EE6               	movwf	postinc1,c
 24385  0156E4  EC3D  F0C2         	call	___xxtofl	;wreg free
 24386  0156E8  0060  F007  FFE6   	movff	btemp,postinc1
 24387  0156EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24388  0156F4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24389  0156FA  0060  F013  FFE6   	movff	btemp+3,postinc1
 24390  015700  ECC1  F09E         	call	___flmul	;wreg free
 24391  015704  0060  F007  FFE6   	movff	btemp,postinc1
 24392  01570A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24393  015710  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24394  015716  0060  F013  FFE6   	movff	btemp+3,postinc1
 24395  01571C  ECB4  F0A6         	call	___fldiv	;wreg free
 24396  015720  D067               	goto	l1781
 24397  015722                     l9716:
 24398                           
 24399                           ;daq.c: 124:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 24400  015722  0E00               	movlw	0
 24401  015724  6EE6               	movwf	postinc1,c
 24402  015726  0E00               	movlw	0
 24403  015728  6EE6               	movwf	postinc1,c
 24404  01572A  0E7A               	movlw	122
 24405  01572C  6EE6               	movwf	postinc1,c
 24406  01572E  0E44               	movlw	68
 24407  015730  6EE6               	movwf	postinc1,c
 24408  015732  0E61               	movlw	97
 24409  015734  6EE6               	movwf	postinc1,c
 24410  015736  0E03               	movlw	3
 24411  015738  6EE6               	movwf	postinc1,c
 24412  01573A  0E84               	movlw	132
 24413  01573C  6EE6               	movwf	postinc1,c
 24414  01573E  0E40               	movlw	64
 24415  015740  6EE6               	movwf	postinc1,c
 24416                           
 24417                           ;stkvar	_chan @ sp[(-8)+-1]
 24418  015742  0EF7               	movlw	-9
 24419  015744  50E3               	movf	plusw1,w,c
 24420  015746  6EE6               	movwf	postinc1,c
 24421  015748  EC52  F0DF         	call	_get_raw_result	;wreg free
 24422  01574C  0060  F004  F00B   	movff	btemp,btemp+10
 24423  015752  0060  F008  F00C   	movff	btemp+1,btemp+11
 24424  015758  500B               	movf	(btemp+10)^0,w,c
 24425  01575A  6E05               	movwf	(btemp+4)^0,c
 24426  01575C  500C               	movf	(btemp+11)^0,w,c
 24427  01575E  6E06               	movwf	(btemp+5)^0,c
 24428  015760  6A07               	clrf	(btemp+6)^0,c
 24429  015762  6A08               	clrf	(btemp+7)^0,c
 24430  015764  0060  F017  FFE6   	movff	btemp+4,postinc1
 24431  01576A  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24432  015770  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24433  015776  0060  F023  FFE6   	movff	btemp+7,postinc1
 24434  01577C  0E00               	movlw	0
 24435  01577E  6EE6               	movwf	postinc1,c
 24436  015780  EC3D  F0C2         	call	___xxtofl	;wreg free
 24437  015784  0060  F007  FFE6   	movff	btemp,postinc1
 24438  01578A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24439  015790  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24440  015796  0060  F013  FFE6   	movff	btemp+3,postinc1
 24441  01579C  ECC1  F09E         	call	___flmul	;wreg free
 24442  0157A0  0060  F007  FFE6   	movff	btemp,postinc1
 24443  0157A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24444  0157AC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24445  0157B2  0060  F013  FFE6   	movff	btemp+3,postinc1
 24446  0157B8  ECB4  F0A6         	call	___fldiv	;wreg free
 24447  0157BC  D019               	goto	l1781
 24448  0157BE                     l9722:
 24449                           
 24450                           ;daq.c: 127:   return 0.0;
 24451  0157BE  0E00               	movlw	0
 24452  0157C0  6E01               	movwf	btemp^0,c
 24453  0157C2  0E00               	movlw	0
 24454  0157C4  6E02               	movwf	(btemp+1)^0,c
 24455  0157C6  0E00               	movlw	0
 24456  0157C8  6E03               	movwf	(btemp+2)^0,c
 24457  0157CA  0E00               	movlw	0
 24458  0157CC                     L29:
 24459  0157CC  6E04               	movwf	(btemp+3)^0,c
 24460  0157CE  D010               	goto	l1781
 24461  0157D0                     l9730:
 24462                           
 24463                           ;stkvar	_to_what @ sp[(0)+-2]
 24464  0157D0  0EFE               	movlw	-2
 24465  0157D2  50E3               	movf	plusw1,w,c
 24466  0157D4  6E0B               	movwf	(btemp+10)^0,c
 24467  0157D6  6A0C               	clrf	(btemp+11)^0,c
 24468                           
 24469                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24470                           ; Switch size 1, requested type "simple"
 24471                           ; Number of cases is 1, Range of values is 0 to 0
 24472                           ; switch strategies available:
 24473                           ; Name         Instructions Cycles
 24474                           ; simple_byte            4     3 (average)
 24475                           ;	Chosen strategy is simple_byte
 24476  0157D8  500C               	movf	(btemp+11)^0,w,c
 24477  0157DA  0A00               	xorlw	0	; case 0
 24478  0157DC  A4D8               	btfss	status,2,c
 24479  0157DE  D7EF               	goto	l9722
 24480                           
 24481                           ; Switch size 1, requested type "simple"
 24482                           ; Number of cases is 2, Range of values is 0 to 1
 24483                           ; switch strategies available:
 24484                           ; Name         Instructions Cycles
 24485                           ; simple_byte            7     4 (average)
 24486                           ;	Chosen strategy is simple_byte
 24487  0157E0  500B               	movf	(btemp+10)^0,w,c
 24488  0157E2  0A00               	xorlw	0	; case 0
 24489  0157E4  B4D8               	btfsc	status,2,c
 24490  0157E6  D57E               	goto	l9676
 24491  0157E8  0A01               	xorlw	1	; case 1
 24492  0157EA  B4D8               	btfsc	status,2,c
 24493  0157EC  D72A               	goto	l9708
 24494  0157EE  D7E7               	goto	l9722
 24495  0157F0                     l1781:
 24496                           
 24497                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 24498  0157F0  52E5               	movf	postdec1,f,c
 24499  0157F2  52E5               	movf	postdec1,f,c
 24500  0157F4  0012               	return		;funcret
 24501  0157F6                     __end_of_conv_raw_result:
 24502                           	opt callstack 0
 24503                           
 24504 ;; *************** function _nanf *****************
 24505 ;; Defined at:
 24506 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 24507 ;; Parameters:    Size  Location     Type
 24508 ;;  s               2  [STACK] PTR const unsigned char 
 24509 ;;		 -> STR_101(1), STR_63(1), 
 24510 ;; Auto vars:     Size  Location     Type
 24511 ;;  u               4  [STACK] struct .
 24512 ;; Return value:  Size  Location     Type
 24513 ;;                  4  [STACK] float 
 24514 ;; Registers used:
 24515 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 24516 ;; Tracked objects:
 24517 ;;		On entry : 0/39
 24518 ;;		On exit  : 0/0
 24519 ;;		Unchanged: 0/0
 24520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24525 ;;Total ram usage:        0 bytes
 24526 ;; Hardware stack levels used:    1
 24527 ;; Hardware stack levels required when called:   15
 24528 ;; This function calls:
 24529 ;;		Nothing
 24530 ;; This function is called by:
 24531 ;;		_conv_raw_result
 24532 ;; This function uses a reentrant model
 24533 ;;
 24534                           
 24535                           	psect	text97
 24536  01B122                     __ptext97:
 24537                           	opt callstack 0
 24538  01B122                     _nanf:
 24539                           	opt callstack 0
 24540                           
 24541                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24542  01B122  52E6               	movf	postinc1,f,c
 24543  01B124  52E6               	movf	postinc1,f,c
 24544  01B126  52E6               	movf	postinc1,f,c
 24545  01B128  52E6               	movf	postinc1,f,c
 24546                           
 24547                           ;incstack = 0
 24548 ;; hardware stack exceeded
 24549  01B12A  0EFF               	movlw	255
 24550  01B12C  6E09               	movwf	(btemp+8)^0,c
 24551  01B12E  0EFF               	movlw	255
 24552  01B130  6E0A               	movwf	(btemp+9)^0,c
 24553  01B132  0EFF               	movlw	255
 24554  01B134  6E0B               	movwf	(btemp+10)^0,c
 24555  01B136  0E7F               	movlw	127
 24556  01B138  6E0C               	movwf	(btemp+11)^0,c
 24557                           
 24558                           ;stkvar	_u @ sp[(-4)+0]
 24559  01B13A  0EFC               	movlw	-4
 24560  01B13C  0060  F027  FFE3   	movff	btemp+8,plusw1
 24561  01B142  0EFD               	movlw	-3
 24562  01B144  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24563  01B14A  0EFE               	movlw	-2
 24564  01B14C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24565  01B152  0EFF               	movlw	-1
 24566  01B154  0060  F033  FFE3   	movff	btemp+11,plusw1
 24567                           
 24568                           ;stkvar	_u @ sp[(-4)+0]
 24569  01B15A  0EFC               	movlw	-4
 24570  01B15C  006F FF8C  F001    	movff	plusw1,btemp
 24571  01B162  0EFD               	movlw	-3
 24572  01B164  006F FF8C  F002    	movff	plusw1,btemp+1
 24573  01B16A  0EFE               	movlw	-2
 24574  01B16C  006F FF8C  F003    	movff	plusw1,btemp+2
 24575  01B172  0EFF               	movlw	-1
 24576  01B174  006F FF8C  F004    	movff	plusw1,btemp+3
 24577                           
 24578                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 24579  01B17A  0EFA               	movlw	250
 24580  01B17C  26E1               	addwf	fsr1l,f,c
 24581  01B17E  0EFF               	movlw	255
 24582  01B180  22E2               	addwfc	fsr1h,f,c
 24583  01B182  0012               	return		;funcret
 24584  01B184                     __end_of_nanf:
 24585                           	opt callstack 0
 24586                           
 24587 ;; *************** function _get_raw_result *****************
 24588 ;; Defined at:
 24589 ;;		line 90 in file "daq.c"
 24590 ;; Parameters:    Size  Location     Type
 24591 ;;  index           1  [STACK] const enum E16582
 24592 ;; Auto vars:     Size  Location     Type
 24593 ;;		None
 24594 ;; Return value:  Size  Location     Type
 24595 ;;                  2  [STACK] unsigned short 
 24596 ;; Registers used:
 24597 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 24598 ;; Tracked objects:
 24599 ;;		On entry : 0/1
 24600 ;;		On exit  : 0/0
 24601 ;;		Unchanged: 0/0
 24602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24607 ;;Total ram usage:        0 bytes
 24608 ;; Hardware stack levels used:    1
 24609 ;; Hardware stack levels required when called:   15
 24610 ;; This function calls:
 24611 ;;		Nothing
 24612 ;; This function is called by:
 24613 ;;		_main
 24614 ;;		_conv_raw_result
 24615 ;; This function uses a reentrant model
 24616 ;;
 24617                           
 24618                           	psect	text98
 24619  01BEA4                     __ptext98:
 24620                           	opt callstack 0
 24621  01BEA4                     _get_raw_result:
 24622                           	opt callstack 0
 24623                           
 24624                           ;daq.c: 90: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 91: {;daq.c: 
      +                          92:  return R.raw_adc[index];
 24625                           ;stkvar	_index @ sp[(0)+-1]
 24626                           
 24627                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24628                           ;incstack = 0
 24629 ;; hardware stack exceeded
 24630  01BEA4  0EFF               	movlw	-1
 24631  01BEA6  50E3               	movf	plusw1,w,c
 24632  01BEA8  0D02               	mullw	2
 24633  01BEAA  0E00               	movlw	low _R
 24634  01BEAC  24F3               	addwf	243,w,c
 24635  01BEAE  6ED9               	movwf	fsr2l,c
 24636  01BEB0  0E01               	movlw	high _R
 24637  01BEB2  20F4               	addwfc	prodh,w,c
 24638  01BEB4  6EDA               	movwf	fsr2h,c
 24639  01BEB6  006F FF78  F001    	movff	postinc2,btemp
 24640  01BEBC  006F FF74  F002    	movff	postdec2,btemp+1
 24641                           
 24642                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 24643  01BEC2  52E5               	movf	postdec1,f,c
 24644  01BEC4  0012               	return		;funcret
 24645  01BEC6                     __end_of_get_raw_result:
 24646                           	opt callstack 0
 24647                           
 24648 ;; *************** function ___xxtofl *****************
 24649 ;; Defined at:
 24650 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 24651 ;; Parameters:    Size  Location     Type
 24652 ;;  sign            1  [STACK] unsigned char 
 24653 ;;  val             4  [STACK] long 
 24654 ;; Auto vars:     Size  Location     Type
 24655 ;;  arg             4  [STACK] unsigned long 
 24656 ;;  exp             1  [STACK] unsigned char 
 24657 ;; Return value:  Size  Location     Type
 24658 ;;                  4  [STACK] unsigned char 
 24659 ;; Registers used:
 24660 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 24661 ;; Tracked objects:
 24662 ;;		On entry : 0/1
 24663 ;;		On exit  : 0/0
 24664 ;;		Unchanged: 0/0
 24665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24670 ;;Total ram usage:        0 bytes
 24671 ;; Hardware stack levels used:    1
 24672 ;; Hardware stack levels required when called:   15
 24673 ;; This function calls:
 24674 ;;		Nothing
 24675 ;; This function is called by:
 24676 ;;		_conv_raw_result
 24677 ;;		_init_bsoc
 24678 ;;		_Volts_to_SOC
 24679 ;; This function uses a reentrant model
 24680 ;;
 24681                           
 24682                           	psect	text99
 24683  01847A                     __ptext99:
 24684                           	opt callstack 0
 24685  01847A                     ___xxtofl:
 24686                           	opt callstack 0
 24687                           
 24688                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24689  01847A  0E05               	movlw	5
 24690  01847C  26E1               	addwf	fsr1l,f,c
 24691  01847E  0E00               	movlw	0
 24692  018480  22E2               	addwfc	fsr1h,f,c
 24693                           
 24694                           ;stkvar	_sign @ sp[(-5)+-1]
 24695                           
 24696                           ;incstack = 0
 24697 ;; hardware stack exceeded
 24698  018482  0EFA               	movlw	-6
 24699  018484  50E3               	movf	plusw1,w,c
 24700  018486  B4D8               	btfsc	status,2,c
 24701  018488  D01D               	goto	l9624
 24702                           
 24703                           ;stkvar	_val @ sp[(-5)+-5]
 24704  01848A  0EF9               	movlw	-7
 24705  01848C  AEE3               	btfss	plusw1,7,c
 24706  01848E  D01A               	goto	l9624
 24707                           
 24708                           ;stkvar	_val @ sp[(-5)+-5]
 24709  018490  0EF6               	movlw	-10
 24710  018492  006F FF8C  F009    	movff	plusw1,btemp+8
 24711  018498  0EF7               	movlw	-9
 24712  01849A  006F FF8C  F00A    	movff	plusw1,btemp+9
 24713  0184A0  0EF8               	movlw	-8
 24714  0184A2  006F FF8C  F00B    	movff	plusw1,btemp+10
 24715  0184A8  0EF9               	movlw	-7
 24716  0184AA  006F FF8C  F00C    	movff	plusw1,btemp+11
 24717  0184B0  1E09               	comf	(btemp+8)^0,f,c
 24718  0184B2  1E0A               	comf	(btemp+9)^0,f,c
 24719  0184B4  1E0B               	comf	(btemp+10)^0,f,c
 24720  0184B6  1E0C               	comf	(btemp+11)^0,f,c
 24721  0184B8  2A09               	incf	(btemp+8)^0,f,c
 24722  0184BA  0E00               	movlw	0
 24723  0184BC  220A               	addwfc	(btemp+9)^0,f,c
 24724  0184BE  220B               	addwfc	(btemp+10)^0,f,c
 24725  0184C0  220C               	addwfc	(btemp+11)^0,f,c
 24726  0184C2  D010               	goto	L30
 24727  0184C4                     l9624:
 24728                           
 24729                           ;stkvar	_val @ sp[(-5)+-5]
 24730  0184C4  0EF6               	movlw	-10
 24731  0184C6  006F FF8C  F009    	movff	plusw1,btemp+8
 24732  0184CC  0EF7               	movlw	-9
 24733  0184CE  006F FF8C  F00A    	movff	plusw1,btemp+9
 24734  0184D4  0EF8               	movlw	-8
 24735  0184D6  006F FF8C  F00B    	movff	plusw1,btemp+10
 24736  0184DC  0EF9               	movlw	-7
 24737  0184DE  006F FF8C  F00C    	movff	plusw1,btemp+11
 24738  0184E4                     L30:
 24739                           
 24740                           ;stkvar	_arg @ sp[(-5)+0]
 24741  0184E4  0EFB               	movlw	-5
 24742  0184E6  0060  F027  FFE3   	movff	btemp+8,plusw1
 24743  0184EC  0EFC               	movlw	-4
 24744  0184EE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24745  0184F4  0EFD               	movlw	-3
 24746  0184F6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24747  0184FC  0EFE               	movlw	-2
 24748  0184FE  0060  F033  FFE3   	movff	btemp+11,plusw1
 24749                           
 24750                           ;stkvar	_val @ sp[(-5)+-5]
 24751  018504  0EF6               	movlw	-10
 24752  018506  50E3               	movf	plusw1,w,c
 24753  018508  E113               	bnz	l9632
 24754  01850A  0EF7               	movlw	-9
 24755  01850C  50E3               	movf	plusw1,w,c
 24756  01850E  E110               	bnz	l9632
 24757  018510  0EF8               	movlw	-8
 24758  018512  50E3               	movf	plusw1,w,c
 24759  018514  E10D               	bnz	l9632
 24760  018516  0EF9               	movlw	-7
 24761  018518  50E3               	movf	plusw1,w,c
 24762  01851A  A4D8               	btfss	status,2,c
 24763  01851C  D009               	goto	l9632
 24764  01851E  0E00               	movlw	0
 24765  018520  6E01               	movwf	btemp^0,c
 24766  018522  0E00               	movlw	0
 24767  018524  6E02               	movwf	(btemp+1)^0,c
 24768  018526  0E00               	movlw	0
 24769  018528  6E03               	movwf	(btemp+2)^0,c
 24770  01852A  0E00               	movlw	0
 24771  01852C  6E04               	movwf	(btemp+3)^0,c
 24772  01852E  D0A2               	goto	l3053
 24773  018530                     l9632:
 24774  018530  0E96               	movlw	150
 24775  018532  6E0C               	movwf	(btemp+11)^0,c
 24776                           
 24777                           ;stkvar	_exp @ sp[(-5)+4]
 24778  018534  0EFF               	movlw	-1
 24779  018536  0060  F033  FFE3   	movff	btemp+11,plusw1
 24780  01853C  D00B               	goto	l9636
 24781  01853E                     l9634:
 24782                           
 24783                           ;stkvar	_exp @ sp[(-5)+4]
 24784  01853E  0EFF               	movlw	-1
 24785  018540  2AE3               	incf	plusw1,f,c
 24786                           
 24787                           ;stkvar	_arg @ sp[(-5)+0]
 24788  018542  90D8               	bcf	status,0,c
 24789  018544  0EFE               	movlw	-2
 24790  018546  32E3               	rrcf	plusw1,f,c
 24791  018548  0EFD               	movlw	-3
 24792  01854A  32E3               	rrcf	plusw1,f,c
 24793  01854C  0EFC               	movlw	-4
 24794  01854E  32E3               	rrcf	plusw1,f,c
 24795  018550  0EFB               	movlw	-5
 24796  018552  32E3               	rrcf	plusw1,f,c
 24797  018554                     l9636:
 24798                           
 24799                           ;stkvar	_arg @ sp[(-5)+0]
 24800  018554  50E1               	movf	fsr1l,w,c
 24801  018556  0FFB               	addlw	-5
 24802  018558  6ED9               	movwf	fsr2l,c
 24803  01855A  50E2               	movf	fsr1h,w,c
 24804  01855C  6EDA               	movwf	fsr2h,c
 24805  01855E  0EFF               	movlw	255
 24806  018560  22DA               	addwfc	fsr2h,f,c
 24807  018562  52DE               	movf	postinc2,f,c
 24808  018564  52DE               	movf	postinc2,f,c
 24809  018566  52DE               	movf	postinc2,f,c
 24810  018568  0EFE               	movlw	254
 24811  01856A  14DD               	andwf	postdec2,w,c
 24812  01856C  B4D8               	btfsc	status,2,c
 24813  01856E  D018               	goto	l9644
 24814  018570  D7E6               	goto	l9634
 24815  018572                     l9638:
 24816                           
 24817                           ;stkvar	_exp @ sp[(-5)+4]
 24818  018572  0EFF               	movlw	-1
 24819  018574  2AE3               	incf	plusw1,f,c
 24820                           
 24821                           ;stkvar	_arg @ sp[(-5)+0]
 24822  018576  50E1               	movf	fsr1l,w,c
 24823  018578  0FFB               	addlw	-5
 24824  01857A  6ED9               	movwf	fsr2l,c
 24825  01857C  50E2               	movf	fsr1h,w,c
 24826  01857E  6EDA               	movwf	fsr2h,c
 24827  018580  0EFF               	movlw	255
 24828  018582  22DA               	addwfc	fsr2h,f,c
 24829  018584  2ADE               	incf	postinc2,f,c
 24830  018586  0E00               	movlw	0
 24831  018588  22DE               	addwfc	postinc2,f,c
 24832  01858A  22DE               	addwfc	postinc2,f,c
 24833  01858C  22DE               	addwfc	postinc2,f,c
 24834                           
 24835                           ;stkvar	_arg @ sp[(-5)+0]
 24836  01858E  90D8               	bcf	status,0,c
 24837  018590  0EFE               	movlw	-2
 24838  018592  32E3               	rrcf	plusw1,f,c
 24839  018594  0EFD               	movlw	-3
 24840  018596  32E3               	rrcf	plusw1,f,c
 24841  018598  0EFC               	movlw	-4
 24842  01859A  32E3               	rrcf	plusw1,f,c
 24843  01859C  0EFB               	movlw	-5
 24844  01859E  32E3               	rrcf	plusw1,f,c
 24845  0185A0                     l9644:
 24846                           
 24847                           ;stkvar	_arg @ sp[(-5)+0]
 24848  0185A0  50E1               	movf	fsr1l,w,c
 24849  0185A2  0FFB               	addlw	-5
 24850  0185A4  6ED9               	movwf	fsr2l,c
 24851  0185A6  50E2               	movf	fsr1h,w,c
 24852  0185A8  6EDA               	movwf	fsr2h,c
 24853  0185AA  0EFF               	movlw	255
 24854  0185AC  22DA               	addwfc	fsr2h,f,c
 24855  0185AE  52DE               	movf	postinc2,f,c
 24856  0185B0  52DE               	movf	postinc2,f,c
 24857  0185B2  52DE               	movf	postinc2,f,c
 24858  0185B4  0EFF               	movlw	255
 24859  0185B6  14DD               	andwf	postdec2,w,c
 24860  0185B8  B4D8               	btfsc	status,2,c
 24861  0185BA  D00C               	goto	l9648
 24862  0185BC  D7DA               	goto	l9638
 24863  0185BE                     l9646:
 24864                           
 24865                           ;stkvar	_exp @ sp[(-5)+4]
 24866  0185BE  0EFF               	movlw	-1
 24867  0185C0  06E3               	decf	plusw1,f,c
 24868                           
 24869                           ;stkvar	_arg @ sp[(-5)+0]
 24870  0185C2  90D8               	bcf	status,0,c
 24871  0185C4  0EFB               	movlw	-5
 24872  0185C6  36E3               	rlcf	plusw1,f,c
 24873  0185C8  0EFC               	movlw	-4
 24874  0185CA  36E3               	rlcf	plusw1,f,c
 24875  0185CC  0EFD               	movlw	-3
 24876  0185CE  36E3               	rlcf	plusw1,f,c
 24877  0185D0  0EFE               	movlw	-2
 24878  0185D2  36E3               	rlcf	plusw1,f,c
 24879  0185D4                     l9648:
 24880                           
 24881                           ;stkvar	_arg @ sp[(-5)+0]
 24882  0185D4  0EFD               	movlw	-3
 24883  0185D6  BEE3               	btfsc	plusw1,7,c
 24884  0185D8  D007               	goto	u9030
 24885                           
 24886                           ;stkvar	_exp @ sp[(-5)+4]
 24887  0185DA  0EFF               	movlw	-1
 24888  0185DC  006F FF8C  F001    	movff	plusw1,btemp
 24889  0185E2  0E02               	movlw	2
 24890  0185E4  6001               	cpfslt	btemp^0,c
 24891  0185E6  D7EB               	goto	l9646
 24892  0185E8                     u9030:
 24893                           
 24894                           ;stkvar	_exp @ sp[(-5)+4]
 24895  0185E8  0EFF               	movlw	-1
 24896  0185EA  B0E3               	btfsc	plusw1,0,c
 24897  0185EC  D002               	goto	l9656
 24898                           
 24899                           ;stkvar	_arg @ sp[(-5)+0]
 24900  0185EE  0EFD               	movlw	-3
 24901  0185F0  9EE3               	bcf	plusw1,7,c
 24902  0185F2                     l9656:
 24903                           
 24904                           ;stkvar	_exp @ sp[(-5)+4]
 24905  0185F2  50E1               	movf	fsr1l,w,c
 24906  0185F4  0FFF               	addlw	-1
 24907  0185F6  6ED9               	movwf	fsr2l,c
 24908  0185F8  50E2               	movf	fsr1h,w,c
 24909  0185FA  6EDA               	movwf	fsr2h,c
 24910  0185FC  0EFF               	movlw	255
 24911  0185FE  22DA               	addwfc	fsr2h,f,c
 24912  018600  90D8               	bcf	status,0,c
 24913  018602  32DF               	rrcf	indf2,f,c
 24914                           
 24915                           ;stkvar	_exp @ sp[(-5)+4]
 24916  018604  0EFF               	movlw	-1
 24917  018606  006F FF8C  F00C    	movff	plusw1,btemp+11
 24918  01860C  0060  F030  F005   	movff	btemp+11,btemp+4
 24919  018612  6A06               	clrf	(btemp+5)^0,c
 24920  018614  6A07               	clrf	(btemp+6)^0,c
 24921  018616  6A08               	clrf	(btemp+7)^0,c
 24922  018618  0060  F014  F008   	movff	btemp+4,btemp+7
 24923  01861E  6A07               	clrf	(btemp+6)^0,c
 24924  018620  6A06               	clrf	(btemp+5)^0,c
 24925  018622  6A05               	clrf	(btemp+4)^0,c
 24926                           
 24927                           ;stkvar	_arg @ sp[(-5)+0]
 24928  018624  50E1               	movf	fsr1l,w,c
 24929  018626  0FFB               	addlw	-5
 24930  018628  6ED9               	movwf	fsr2l,c
 24931  01862A  50E2               	movf	fsr1h,w,c
 24932  01862C  6EDA               	movwf	fsr2h,c
 24933  01862E  0EFF               	movlw	255
 24934  018630  22DA               	addwfc	fsr2h,f,c
 24935  018632  5005               	movf	(btemp+4)^0,w,c
 24936  018634  12DE               	iorwf	postinc2,f,c
 24937  018636  5006               	movf	(btemp+5)^0,w,c
 24938  018638  12DE               	iorwf	postinc2,f,c
 24939  01863A  5007               	movf	(btemp+6)^0,w,c
 24940  01863C  12DE               	iorwf	postinc2,f,c
 24941  01863E  5008               	movf	(btemp+7)^0,w,c
 24942  018640  12DE               	iorwf	postinc2,f,c
 24943                           
 24944                           ;stkvar	_sign @ sp[(-5)+-1]
 24945  018642  0EFA               	movlw	-6
 24946  018644  50E3               	movf	plusw1,w,c
 24947  018646  B4D8               	btfsc	status,2,c
 24948  018648  D005               	goto	l9666
 24949                           
 24950                           ;stkvar	_val @ sp[(-5)+-5]
 24951  01864A  0EF9               	movlw	-7
 24952  01864C  AEE3               	btfss	plusw1,7,c
 24953  01864E  D002               	goto	l9666
 24954                           
 24955                           ;stkvar	_arg @ sp[(-5)+0]
 24956  018650  0EFE               	movlw	-2
 24957  018652  8EE3               	bsf	plusw1,7,c
 24958  018654                     l9666:
 24959                           
 24960                           ;stkvar	_arg @ sp[(-5)+0]
 24961  018654  0EFB               	movlw	-5
 24962  018656  006F FF8C  F001    	movff	plusw1,btemp
 24963  01865C  0EFC               	movlw	-4
 24964  01865E  006F FF8C  F002    	movff	plusw1,btemp+1
 24965  018664  0EFD               	movlw	-3
 24966  018666  006F FF8C  F003    	movff	plusw1,btemp+2
 24967  01866C  0EFE               	movlw	-2
 24968  01866E  006F FF8C  F004    	movff	plusw1,btemp+3
 24969  018674                     l3053:
 24970                           
 24971                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 24972  018674  0EF6               	movlw	246
 24973  018676  26E1               	addwf	fsr1l,f,c
 24974  018678  0EFF               	movlw	255
 24975  01867A  22E2               	addwfc	fsr1h,f,c
 24976  01867C  0012               	return		;funcret
 24977  01867E                     __end_of___xxtofl:
 24978                           	opt callstack 0
 24979                           
 24980 ;; *************** function ___fldiv *****************
 24981 ;; Defined at:
 24982 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 24983 ;; Parameters:    Size  Location     Type
 24984 ;;  b               4  [STACK] unsigned char 
 24985 ;;  a               4  [STACK] unsigned char 
 24986 ;; Auto vars:     Size  Location     Type
 24987 ;;  grs             4  [STACK] unsigned long 
 24988 ;;  rem             4  [STACK] unsigned long 
 24989 ;;  new_exp         2  [STACK] short 
 24990 ;;  aexp            1  [STACK] unsigned char 
 24991 ;;  bexp            1  [STACK] unsigned char 
 24992 ;;  sign            1  [STACK] unsigned char 
 24993 ;; Return value:  Size  Location     Type
 24994 ;;                  4  [STACK] unsigned char 
 24995 ;; Registers used:
 24996 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 24997 ;; Tracked objects:
 24998 ;;		On entry : 0/1
 24999 ;;		On exit  : 0/0
 25000 ;;		Unchanged: 0/0
 25001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25006 ;;Total ram usage:        0 bytes
 25007 ;; Hardware stack levels used:    1
 25008 ;; Hardware stack levels required when called:   15
 25009 ;; This function calls:
 25010 ;;		Nothing
 25011 ;; This function is called by:
 25012 ;;		_conv_raw_result
 25013 ;;		_calc_bsoc
 25014 ;;		_init_bsoc
 25015 ;;		_esr_check
 25016 ;;		_efgtoa
 25017 ;; This function uses a reentrant model
 25018 ;;
 25019                           
 25020                           	psect	text100
 25021  014D68                     __ptext100:
 25022                           	opt callstack 0
 25023  014D68                     ___fldiv:
 25024                           	opt callstack 0
 25025                           
 25026                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 25027  014D68  0E0D               	movlw	13
 25028  014D6A  26E1               	addwf	fsr1l,f,c
 25029  014D6C  0E00               	movlw	0
 25030  014D6E  22E2               	addwfc	fsr1h,f,c
 25031                           
 25032                           ;stkvar	_b @ sp[(-13)+-4]
 25033                           
 25034                           ;incstack = 0
 25035 ;; hardware stack exceeded
 25036  014D70  0EF2               	movlw	242
 25037  014D72  24E1               	addwf	fsr1l,w,c
 25038  014D74  6ED9               	movwf	fsr2l,c
 25039  014D76  0EFF               	movlw	255
 25040  014D78  20E2               	addwfc	fsr1h,w,c
 25041  014D7A  6EDA               	movwf	fsr2h,c
 25042  014D7C  50DF               	movf	indf2,w,c
 25043  014D7E  6E0C               	movwf	(btemp+11)^0,c
 25044  014D80  0E80               	movlw	128
 25045  014D82  160C               	andwf	(btemp+11)^0,f,c
 25046                           
 25047                           ;stkvar	_sign @ sp[(-13)+12]
 25048  014D84  0EFF               	movlw	-1
 25049  014D86  0060  F033  FFE3   	movff	btemp+11,plusw1
 25050                           
 25051                           ;stkvar	_b @ sp[(-13)+-4]
 25052  014D8C  0EF2               	movlw	242
 25053  014D8E  24E1               	addwf	fsr1l,w,c
 25054  014D90  6ED9               	movwf	fsr2l,c
 25055  014D92  0EFF               	movlw	255
 25056  014D94  20E2               	addwfc	fsr1h,w,c
 25057  014D96  6EDA               	movwf	fsr2h,c
 25058  014D98  50DF               	movf	indf2,w,c
 25059  014D9A  6E0C               	movwf	(btemp+11)^0,c
 25060  014D9C  90D8               	bcf	status,0,c
 25061  014D9E  340C               	rlcf	(btemp+11)^0,w,c
 25062  014DA0  6E0B               	movwf	(btemp+10)^0,c
 25063                           
 25064                           ;stkvar	_bexp @ sp[(-13)+11]
 25065  014DA2  0EFE               	movlw	-2
 25066  014DA4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25067                           
 25068                           ;stkvar	_b @ sp[(-13)+-4]
 25069  014DAA  0EF1               	movlw	241
 25070  014DAC  24E1               	addwf	fsr1l,w,c
 25071  014DAE  6ED9               	movwf	fsr2l,c
 25072  014DB0  0EFF               	movlw	255
 25073  014DB2  20E2               	addwfc	fsr1h,w,c
 25074  014DB4  6EDA               	movwf	fsr2h,c
 25075  014DB6  AEDF               	btfss	indf2,7,c
 25076  014DB8  D002               	goto	l8196
 25077                           
 25078                           ;stkvar	_bexp @ sp[(-13)+11]
 25079  014DBA  0EFE               	movlw	-2
 25080  014DBC  80E3               	bsf	plusw1,0,c
 25081  014DBE                     l8196:
 25082                           
 25083                           ;stkvar	_bexp @ sp[(-13)+11]
 25084  014DBE  0EFE               	movlw	-2
 25085  014DC0  50E3               	movf	plusw1,w,c
 25086  014DC2  B4D8               	btfsc	status,2,c
 25087  014DC4  D027               	goto	l8206
 25088                           
 25089                           ;stkvar	_bexp @ sp[(-13)+11]
 25090  014DC6  0EFE               	movlw	-2
 25091  014DC8  28E3               	incf	plusw1,w,c
 25092  014DCA  A4D8               	btfss	status,2,c
 25093  014DCC  D018               	goto	l8202
 25094  014DCE  0E00               	movlw	0
 25095  014DD0  6E09               	movwf	(btemp+8)^0,c
 25096  014DD2  0E00               	movlw	0
 25097  014DD4  6E0A               	movwf	(btemp+9)^0,c
 25098  014DD6  0E00               	movlw	0
 25099  014DD8  6E0B               	movwf	(btemp+10)^0,c
 25100  014DDA  0E00               	movlw	0
 25101  014DDC  6E0C               	movwf	(btemp+11)^0,c
 25102                           
 25103                           ;stkvar	_b @ sp[(-13)+-4]
 25104  014DDE  0EEF               	movlw	-17
 25105  014DE0  0060  F027  FFE3   	movff	btemp+8,plusw1
 25106  014DE6  0EF0               	movlw	-16
 25107  014DE8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25108  014DEE  0EF1               	movlw	-15
 25109  014DF0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25110  014DF6  0EF2               	movlw	-14
 25111  014DF8  0060  F033  FFE3   	movff	btemp+11,plusw1
 25112  014DFE                     l8202:
 25113                           
 25114                           ;stkvar	_b @ sp[(-13)+-4]
 25115  014DFE  0EF1               	movlw	-15
 25116  014E00  8EE3               	bsf	plusw1,7,c
 25117                           
 25118                           ;stkvar	_b @ sp[(-13)+-4]
 25119  014E02  0EF2               	movlw	242
 25120  014E04  24E1               	addwf	fsr1l,w,c
 25121  014E06  6ED9               	movwf	fsr2l,c
 25122  014E08  0EFF               	movlw	255
 25123  014E0A  20E2               	addwfc	fsr1h,w,c
 25124  014E0C  6EDA               	movwf	fsr2h,c
 25125  014E0E  0E00               	movlw	0
 25126  014E10  6EDF               	movwf	indf2,c
 25127  014E12  D018               	goto	l8208
 25128  014E14                     l8206:
 25129  014E14  0E00               	movlw	0
 25130  014E16  6E09               	movwf	(btemp+8)^0,c
 25131  014E18  0E00               	movlw	0
 25132  014E1A  6E0A               	movwf	(btemp+9)^0,c
 25133  014E1C  0E00               	movlw	0
 25134  014E1E  6E0B               	movwf	(btemp+10)^0,c
 25135  014E20  0E00               	movlw	0
 25136  014E22  6E0C               	movwf	(btemp+11)^0,c
 25137                           
 25138                           ;stkvar	_b @ sp[(-13)+-4]
 25139  014E24  0EEF               	movlw	-17
 25140  014E26  0060  F027  FFE3   	movff	btemp+8,plusw1
 25141  014E2C  0EF0               	movlw	-16
 25142  014E2E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25143  014E34  0EF1               	movlw	-15
 25144  014E36  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25145  014E3C  0EF2               	movlw	-14
 25146  014E3E  0060  F033  FFE3   	movff	btemp+11,plusw1
 25147  014E44                     l8208:
 25148                           
 25149                           ;stkvar	_a @ sp[(-13)+-8]
 25150  014E44  0EEE               	movlw	238
 25151  014E46  24E1               	addwf	fsr1l,w,c
 25152  014E48  6ED9               	movwf	fsr2l,c
 25153  014E4A  0EFF               	movlw	255
 25154  014E4C  20E2               	addwfc	fsr1h,w,c
 25155  014E4E  6EDA               	movwf	fsr2h,c
 25156  014E50  50DF               	movf	indf2,w,c
 25157  014E52  6E0C               	movwf	(btemp+11)^0,c
 25158  014E54  0E80               	movlw	128
 25159  014E56  160C               	andwf	(btemp+11)^0,f,c
 25160                           
 25161                           ;stkvar	_sign @ sp[(-13)+12]
 25162  014E58  50E1               	movf	fsr1l,w,c
 25163  014E5A  0FFF               	addlw	-1
 25164  014E5C  6ED9               	movwf	fsr2l,c
 25165  014E5E  50E2               	movf	fsr1h,w,c
 25166  014E60  6EDA               	movwf	fsr2h,c
 25167  014E62  0EFF               	movlw	255
 25168  014E64  22DA               	addwfc	fsr2h,f,c
 25169  014E66  500C               	movf	(btemp+11)^0,w,c
 25170  014E68  1ADF               	xorwf	indf2,f,c
 25171                           
 25172                           ;stkvar	_a @ sp[(-13)+-8]
 25173  014E6A  0EEE               	movlw	238
 25174  014E6C  24E1               	addwf	fsr1l,w,c
 25175  014E6E  6ED9               	movwf	fsr2l,c
 25176  014E70  0EFF               	movlw	255
 25177  014E72  20E2               	addwfc	fsr1h,w,c
 25178  014E74  6EDA               	movwf	fsr2h,c
 25179  014E76  50DF               	movf	indf2,w,c
 25180  014E78  6E0C               	movwf	(btemp+11)^0,c
 25181  014E7A  90D8               	bcf	status,0,c
 25182  014E7C  340C               	rlcf	(btemp+11)^0,w,c
 25183  014E7E  6E0B               	movwf	(btemp+10)^0,c
 25184                           
 25185                           ;stkvar	_aexp @ sp[(-13)+10]
 25186  014E80  0EFD               	movlw	-3
 25187  014E82  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25188                           
 25189                           ;stkvar	_a @ sp[(-13)+-8]
 25190  014E88  0EED               	movlw	237
 25191  014E8A  24E1               	addwf	fsr1l,w,c
 25192  014E8C  6ED9               	movwf	fsr2l,c
 25193  014E8E  0EFF               	movlw	255
 25194  014E90  20E2               	addwfc	fsr1h,w,c
 25195  014E92  6EDA               	movwf	fsr2h,c
 25196  014E94  AEDF               	btfss	indf2,7,c
 25197  014E96  D002               	goto	l8216
 25198                           
 25199                           ;stkvar	_aexp @ sp[(-13)+10]
 25200  014E98  0EFD               	movlw	-3
 25201  014E9A  80E3               	bsf	plusw1,0,c
 25202  014E9C                     l8216:
 25203                           
 25204                           ;stkvar	_aexp @ sp[(-13)+10]
 25205  014E9C  0EFD               	movlw	-3
 25206  014E9E  50E3               	movf	plusw1,w,c
 25207  014EA0  B4D8               	btfsc	status,2,c
 25208  014EA2  D027               	goto	l8226
 25209                           
 25210                           ;stkvar	_aexp @ sp[(-13)+10]
 25211  014EA4  0EFD               	movlw	-3
 25212  014EA6  28E3               	incf	plusw1,w,c
 25213  014EA8  A4D8               	btfss	status,2,c
 25214  014EAA  D018               	goto	l8222
 25215  014EAC  0E00               	movlw	0
 25216  014EAE  6E09               	movwf	(btemp+8)^0,c
 25217  014EB0  0E00               	movlw	0
 25218  014EB2  6E0A               	movwf	(btemp+9)^0,c
 25219  014EB4  0E00               	movlw	0
 25220  014EB6  6E0B               	movwf	(btemp+10)^0,c
 25221  014EB8  0E00               	movlw	0
 25222  014EBA  6E0C               	movwf	(btemp+11)^0,c
 25223                           
 25224                           ;stkvar	_a @ sp[(-13)+-8]
 25225  014EBC  0EEB               	movlw	-21
 25226  014EBE  0060  F027  FFE3   	movff	btemp+8,plusw1
 25227  014EC4  0EEC               	movlw	-20
 25228  014EC6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25229  014ECC  0EED               	movlw	-19
 25230  014ECE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25231  014ED4  0EEE               	movlw	-18
 25232  014ED6  0060  F033  FFE3   	movff	btemp+11,plusw1
 25233  014EDC                     l8222:
 25234                           
 25235                           ;stkvar	_a @ sp[(-13)+-8]
 25236  014EDC  0EED               	movlw	-19
 25237  014EDE  8EE3               	bsf	plusw1,7,c
 25238                           
 25239                           ;stkvar	_a @ sp[(-13)+-8]
 25240  014EE0  0EEE               	movlw	238
 25241  014EE2  24E1               	addwf	fsr1l,w,c
 25242  014EE4  6ED9               	movwf	fsr2l,c
 25243  014EE6  0EFF               	movlw	255
 25244  014EE8  20E2               	addwfc	fsr1h,w,c
 25245  014EEA  6EDA               	movwf	fsr2h,c
 25246  014EEC  0E00               	movlw	0
 25247  014EEE  6EDF               	movwf	indf2,c
 25248  014EF0  D018               	goto	l8228
 25249  014EF2                     l8226:
 25250  014EF2  0E00               	movlw	0
 25251  014EF4  6E09               	movwf	(btemp+8)^0,c
 25252  014EF6  0E00               	movlw	0
 25253  014EF8  6E0A               	movwf	(btemp+9)^0,c
 25254  014EFA  0E00               	movlw	0
 25255  014EFC  6E0B               	movwf	(btemp+10)^0,c
 25256  014EFE  0E00               	movlw	0
 25257  014F00  6E0C               	movwf	(btemp+11)^0,c
 25258                           
 25259                           ;stkvar	_a @ sp[(-13)+-8]
 25260  014F02  0EEB               	movlw	-21
 25261  014F04  0060  F027  FFE3   	movff	btemp+8,plusw1
 25262  014F0A  0EEC               	movlw	-20
 25263  014F0C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25264  014F12  0EED               	movlw	-19
 25265  014F14  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25266  014F1A  0EEE               	movlw	-18
 25267  014F1C  0060  F033  FFE3   	movff	btemp+11,plusw1
 25268  014F22                     l8228:
 25269                           
 25270                           ;stkvar	_a @ sp[(-13)+-8]
 25271  014F22  0EEB               	movlw	-21
 25272  014F24  50E3               	movf	plusw1,w,c
 25273  014F26  E139               	bnz	l8240
 25274  014F28  0EEC               	movlw	-20
 25275  014F2A  50E3               	movf	plusw1,w,c
 25276  014F2C  E136               	bnz	l8240
 25277  014F2E  0EED               	movlw	-19
 25278  014F30  50E3               	movf	plusw1,w,c
 25279  014F32  E133               	bnz	l8240
 25280  014F34  0EEE               	movlw	-18
 25281  014F36  50E3               	movf	plusw1,w,c
 25282  014F38  A4D8               	btfss	status,2,c
 25283  014F3A  D02F               	goto	l8240
 25284                           
 25285                           ;stkvar	_b @ sp[(-13)+-4]
 25286  014F3C  0EEF               	movlw	-17
 25287  014F3E  6AE3               	clrf	plusw1,c
 25288  014F40  0EF0               	movlw	-16
 25289  014F42  6AE3               	clrf	plusw1,c
 25290  014F44  0EF1               	movlw	-15
 25291  014F46  6AE3               	clrf	plusw1,c
 25292  014F48  0EF2               	movlw	-14
 25293  014F4A  6AE3               	clrf	plusw1,c
 25294                           
 25295                           ;stkvar	_b @ sp[(-13)+-4]
 25296  014F4C  0EF1               	movlw	241
 25297  014F4E  24E1               	addwf	fsr1l,w,c
 25298  014F50  6ED9               	movwf	fsr2l,c
 25299  014F52  0EFF               	movlw	255
 25300  014F54  20E2               	addwfc	fsr1h,w,c
 25301  014F56  6EDA               	movwf	fsr2h,c
 25302  014F58  0E80               	movlw	128
 25303  014F5A  12DE               	iorwf	postinc2,f,c
 25304  014F5C  0E7F               	movlw	127
 25305  014F5E  12DD               	iorwf	postdec2,f,c
 25306  014F60                     l8234:
 25307                           
 25308                           ;stkvar	_sign @ sp[(-13)+12]
 25309  014F60  0EFF               	movlw	-1
 25310  014F62  006F FF8C  F00C    	movff	plusw1,btemp+11
 25311                           
 25312                           ;stkvar	_b @ sp[(-13)+-4]
 25313  014F68  0EF2               	movlw	242
 25314  014F6A  24E1               	addwf	fsr1l,w,c
 25315  014F6C  6ED9               	movwf	fsr2l,c
 25316  014F6E  0EFF               	movlw	255
 25317  014F70  20E2               	addwfc	fsr1h,w,c
 25318  014F72  6EDA               	movwf	fsr2h,c
 25319  014F74  500C               	movf	(btemp+11)^0,w,c
 25320  014F76  12DF               	iorwf	indf2,f,c
 25321                           
 25322                           ;stkvar	_b @ sp[(-13)+-4]
 25323  014F78  0EEF               	movlw	-17
 25324  014F7A  006F FF8C  F001    	movff	plusw1,btemp
 25325  014F80  0EF0               	movlw	-16
 25326  014F82  006F FF8C  F002    	movff	plusw1,btemp+1
 25327  014F88  0EF1               	movlw	-15
 25328  014F8A  006F FF8C  F003    	movff	plusw1,btemp+2
 25329  014F90  0EF2               	movlw	-14
 25330  014F92  006F FF8C  F004    	movff	plusw1,btemp+3
 25331  014F98  D19F               	goto	l2977
 25332  014F9A                     l8240:
 25333                           
 25334                           ;stkvar	_bexp @ sp[(-13)+11]
 25335  014F9A  0EFE               	movlw	-2
 25336  014F9C  50E3               	movf	plusw1,w,c
 25337  014F9E  A4D8               	btfss	status,2,c
 25338  014FA0  D009               	goto	l8248
 25339  014FA2  0E00               	movlw	0
 25340  014FA4  6E01               	movwf	btemp^0,c
 25341  014FA6  0E00               	movlw	0
 25342  014FA8  6E02               	movwf	(btemp+1)^0,c
 25343  014FAA  0E00               	movlw	0
 25344  014FAC  6E03               	movwf	(btemp+2)^0,c
 25345  014FAE  0E00               	movlw	0
 25346  014FB0  6E04               	movwf	(btemp+3)^0,c
 25347  014FB2  D192               	goto	l2977
 25348  014FB4                     l8248:
 25349                           
 25350                           ;stkvar	_bexp @ sp[(-13)+11]
 25351  014FB4  0EFE               	movlw	-2
 25352  014FB6  50E3               	movf	plusw1,w,c
 25353  014FB8  6E0B               	movwf	(btemp+10)^0,c
 25354  014FBA  6A0C               	clrf	(btemp+11)^0,c
 25355                           
 25356                           ;stkvar	_aexp @ sp[(-13)+10]
 25357  014FBC  0EFD               	movlw	-3
 25358  014FBE  50E3               	movf	plusw1,w,c
 25359  014FC0  5E0B               	subwf	(btemp+10)^0,f,c
 25360  014FC2  0E00               	movlw	0
 25361  014FC4  5A0C               	subwfb	(btemp+11)^0,f,c
 25362  014FC6  0E7F               	movlw	127
 25363  014FC8  260B               	addwf	(btemp+10)^0,f,c
 25364  014FCA  0E00               	movlw	0
 25365  014FCC  220C               	addwfc	(btemp+11)^0,f,c
 25366                           
 25367                           ;stkvar	_new_exp @ sp[(-13)+8]
 25368  014FCE  0EFB               	movlw	-5
 25369  014FD0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25370  014FD6  0EFC               	movlw	-4
 25371  014FD8  0060  F033  FFE3   	movff	btemp+11,plusw1
 25372                           
 25373                           ;stkvar	_b @ sp[(-13)+-4]
 25374  014FDE  0EEF               	movlw	-17
 25375  014FE0  006F FF8C  F009    	movff	plusw1,btemp+8
 25376  014FE6  0EF0               	movlw	-16
 25377  014FE8  006F FF8C  F00A    	movff	plusw1,btemp+9
 25378  014FEE  0EF1               	movlw	-15
 25379  014FF0  006F FF8C  F00B    	movff	plusw1,btemp+10
 25380  014FF6  0EF2               	movlw	-14
 25381  014FF8  006F FF8C  F00C    	movff	plusw1,btemp+11
 25382                           
 25383                           ;stkvar	_rem @ sp[(-13)+4]
 25384  014FFE  0EF7               	movlw	-9
 25385  015000  0060  F027  FFE3   	movff	btemp+8,plusw1
 25386  015006  0EF8               	movlw	-8
 25387  015008  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25388  01500E  0EF9               	movlw	-7
 25389  015010  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25390  015016  0EFA               	movlw	-6
 25391  015018  0060  F033  FFE3   	movff	btemp+11,plusw1
 25392                           
 25393                           ;stkvar	_b @ sp[(-13)+-4]
 25394  01501E  0EEF               	movlw	-17
 25395  015020  6AE3               	clrf	plusw1,c
 25396  015022  0EF0               	movlw	-16
 25397  015024  6AE3               	clrf	plusw1,c
 25398  015026  0EF1               	movlw	-15
 25399  015028  6AE3               	clrf	plusw1,c
 25400  01502A  0EF2               	movlw	-14
 25401  01502C  6AE3               	clrf	plusw1,c
 25402                           
 25403                           ;stkvar	_grs @ sp[(-13)+0]
 25404  01502E  0EF3               	movlw	-13
 25405  015030  6AE3               	clrf	plusw1,c
 25406  015032  0EF4               	movlw	-12
 25407  015034  6AE3               	clrf	plusw1,c
 25408  015036  0EF5               	movlw	-11
 25409  015038  6AE3               	clrf	plusw1,c
 25410  01503A  0EF6               	movlw	-10
 25411  01503C  6AE3               	clrf	plusw1,c
 25412                           
 25413                           ;stkvar	_aexp @ sp[(-13)+10]
 25414  01503E  0EFD               	movlw	-3
 25415  015040  6AE3               	clrf	plusw1,c
 25416  015042  D050               	goto	l8276
 25417  015044                     l8258:
 25418                           
 25419                           ;stkvar	_aexp @ sp[(-13)+10]
 25420  015044  0EFD               	movlw	-3
 25421  015046  50E3               	movf	plusw1,w,c
 25422  015048  B4D8               	btfsc	status,2,c
 25423  01504A  D020               	goto	l8268
 25424                           
 25425                           ;stkvar	_rem @ sp[(-13)+4]
 25426  01504C  90D8               	bcf	status,0,c
 25427  01504E  0EF7               	movlw	-9
 25428  015050  36E3               	rlcf	plusw1,f,c
 25429  015052  0EF8               	movlw	-8
 25430  015054  36E3               	rlcf	plusw1,f,c
 25431  015056  0EF9               	movlw	-7
 25432  015058  36E3               	rlcf	plusw1,f,c
 25433  01505A  0EFA               	movlw	-6
 25434  01505C  36E3               	rlcf	plusw1,f,c
 25435                           
 25436                           ;stkvar	_b @ sp[(-13)+-4]
 25437  01505E  90D8               	bcf	status,0,c
 25438  015060  0EEF               	movlw	-17
 25439  015062  36E3               	rlcf	plusw1,f,c
 25440  015064  0EF0               	movlw	-16
 25441  015066  36E3               	rlcf	plusw1,f,c
 25442  015068  0EF1               	movlw	-15
 25443  01506A  36E3               	rlcf	plusw1,f,c
 25444  01506C  0EF2               	movlw	-14
 25445  01506E  36E3               	rlcf	plusw1,f,c
 25446                           
 25447                           ;stkvar	_grs @ sp[(-13)+0]
 25448  015070  0EF6               	movlw	-10
 25449  015072  AEE3               	btfss	plusw1,7,c
 25450  015074  D002               	goto	l8266
 25451                           
 25452                           ;stkvar	_b @ sp[(-13)+-4]
 25453  015076  0EEF               	movlw	-17
 25454  015078  80E3               	bsf	plusw1,0,c
 25455  01507A                     l8266:
 25456                           
 25457                           ;stkvar	_grs @ sp[(-13)+0]
 25458  01507A  90D8               	bcf	status,0,c
 25459  01507C  0EF3               	movlw	-13
 25460  01507E  36E3               	rlcf	plusw1,f,c
 25461  015080  0EF4               	movlw	-12
 25462  015082  36E3               	rlcf	plusw1,f,c
 25463  015084  0EF5               	movlw	-11
 25464  015086  36E3               	rlcf	plusw1,f,c
 25465  015088  0EF6               	movlw	-10
 25466  01508A  36E3               	rlcf	plusw1,f,c
 25467  01508C                     l8268:
 25468                           
 25469                           ;stkvar	_a @ sp[(-13)+-8]
 25470                           ;stkvar	_rem @ sp[(-13)+4]
 25471  01508C  50E1               	movf	fsr1l,w,c
 25472  01508E  0FF7               	addlw	-9
 25473  015090  6ED9               	movwf	fsr2l,c
 25474  015092  50E2               	movf	fsr1h,w,c
 25475  015094  6EDA               	movwf	fsr2h,c
 25476  015096  0EFF               	movlw	255
 25477  015098  22DA               	addwfc	fsr2h,f,c
 25478  01509A  0EEB               	movlw	-21
 25479  01509C  50E3               	movf	plusw1,w,c
 25480  01509E  5CDE               	subwf	postinc2,w,c
 25481  0150A0  0EEC               	movlw	-20
 25482  0150A2  50E3               	movf	plusw1,w,c
 25483  0150A4  58DE               	subwfb	postinc2,w,c
 25484  0150A6  0EED               	movlw	-19
 25485  0150A8  50E3               	movf	plusw1,w,c
 25486  0150AA  58DE               	subwfb	postinc2,w,c
 25487  0150AC  0EEE               	movlw	-18
 25488  0150AE  50E3               	movf	plusw1,w,c
 25489  0150B0  58DE               	subwfb	postinc2,w,c
 25490  0150B2  A0D8               	btfss	status,0,c
 25491  0150B4  D015               	goto	l8274
 25492                           
 25493                           ;stkvar	_grs @ sp[(-13)+0]
 25494  0150B6  0EF6               	movlw	-10
 25495  0150B8  8CE3               	bsf	plusw1,6,c
 25496                           
 25497                           ;stkvar	_a @ sp[(-13)+-8]
 25498                           ;stkvar	_rem @ sp[(-13)+4]
 25499  0150BA  50E1               	movf	fsr1l,w,c
 25500  0150BC  0FF7               	addlw	-9
 25501  0150BE  6ED9               	movwf	fsr2l,c
 25502  0150C0  50E2               	movf	fsr1h,w,c
 25503  0150C2  6EDA               	movwf	fsr2h,c
 25504  0150C4  0EFF               	movlw	255
 25505  0150C6  22DA               	addwfc	fsr2h,f,c
 25506  0150C8  0EEB               	movlw	-21
 25507  0150CA  50E3               	movf	plusw1,w,c
 25508  0150CC  5EDE               	subwf	postinc2,f,c
 25509  0150CE  0EEC               	movlw	-20
 25510  0150D0  50E3               	movf	plusw1,w,c
 25511  0150D2  5ADE               	subwfb	postinc2,f,c
 25512  0150D4  0EED               	movlw	-19
 25513  0150D6  50E3               	movf	plusw1,w,c
 25514  0150D8  5ADE               	subwfb	postinc2,f,c
 25515  0150DA  0EEE               	movlw	-18
 25516  0150DC  50E3               	movf	plusw1,w,c
 25517  0150DE  5ADE               	subwfb	postinc2,f,c
 25518  0150E0                     l8274:
 25519                           
 25520                           ;stkvar	_aexp @ sp[(-13)+10]
 25521  0150E0  0EFD               	movlw	-3
 25522  0150E2  2AE3               	incf	plusw1,f,c
 25523  0150E4                     l8276:
 25524                           
 25525                           ;stkvar	_aexp @ sp[(-13)+10]
 25526  0150E4  0EFD               	movlw	-3
 25527  0150E6  006F FF8C  F001    	movff	plusw1,btemp
 25528  0150EC  0E19               	movlw	25
 25529  0150EE  6401               	cpfsgt	btemp^0,c
 25530  0150F0  D7A9               	goto	l8258
 25531                           
 25532                           ;stkvar	_rem @ sp[(-13)+4]
 25533  0150F2  0EF7               	movlw	-9
 25534  0150F4  50E3               	movf	plusw1,w,c
 25535  0150F6  E10A               	bnz	u6630
 25536  0150F8  0EF8               	movlw	-8
 25537  0150FA  50E3               	movf	plusw1,w,c
 25538  0150FC  E107               	bnz	u6630
 25539  0150FE  0EF9               	movlw	-7
 25540  015100  50E3               	movf	plusw1,w,c
 25541  015102  E104               	bnz	u6630
 25542  015104  0EFA               	movlw	-6
 25543  015106  50E3               	movf	plusw1,w,c
 25544  015108  B4D8               	btfsc	status,2,c
 25545  01510A  D024               	goto	l8292
 25546  01510C                     u6630:
 25547                           
 25548                           ;stkvar	_grs @ sp[(-13)+0]
 25549  01510C  0EF3               	movlw	-13
 25550  01510E  80E3               	bsf	plusw1,0,c
 25551  015110  D021               	goto	l8292
 25552  015112                     l8282:
 25553                           
 25554                           ;stkvar	_b @ sp[(-13)+-4]
 25555  015112  90D8               	bcf	status,0,c
 25556  015114  0EEF               	movlw	-17
 25557  015116  36E3               	rlcf	plusw1,f,c
 25558  015118  0EF0               	movlw	-16
 25559  01511A  36E3               	rlcf	plusw1,f,c
 25560  01511C  0EF1               	movlw	-15
 25561  01511E  36E3               	rlcf	plusw1,f,c
 25562  015120  0EF2               	movlw	-14
 25563  015122  36E3               	rlcf	plusw1,f,c
 25564                           
 25565                           ;stkvar	_grs @ sp[(-13)+0]
 25566  015124  0EF6               	movlw	-10
 25567  015126  AEE3               	btfss	plusw1,7,c
 25568  015128  D002               	goto	l8288
 25569                           
 25570                           ;stkvar	_b @ sp[(-13)+-4]
 25571  01512A  0EEF               	movlw	-17
 25572  01512C  80E3               	bsf	plusw1,0,c
 25573  01512E                     l8288:
 25574                           
 25575                           ;stkvar	_grs @ sp[(-13)+0]
 25576  01512E  90D8               	bcf	status,0,c
 25577  015130  0EF3               	movlw	-13
 25578  015132  36E3               	rlcf	plusw1,f,c
 25579  015134  0EF4               	movlw	-12
 25580  015136  36E3               	rlcf	plusw1,f,c
 25581  015138  0EF5               	movlw	-11
 25582  01513A  36E3               	rlcf	plusw1,f,c
 25583  01513C  0EF6               	movlw	-10
 25584  01513E  36E3               	rlcf	plusw1,f,c
 25585                           
 25586                           ;stkvar	_new_exp @ sp[(-13)+8]
 25587  015140  50E1               	movf	fsr1l,w,c
 25588  015142  0FFB               	addlw	-5
 25589  015144  6ED9               	movwf	fsr2l,c
 25590  015146  50E2               	movf	fsr1h,w,c
 25591  015148  6EDA               	movwf	fsr2h,c
 25592  01514A  0EFF               	movlw	255
 25593  01514C  22DA               	addwfc	fsr2h,f,c
 25594  01514E  06DE               	decf	postinc2,f,c
 25595  015150  0E00               	movlw	0
 25596  015152  5ADD               	subwfb	postdec2,f,c
 25597  015154                     l8292:
 25598                           
 25599                           ;stkvar	_b @ sp[(-13)+-4]
 25600  015154  0EF1               	movlw	-15
 25601  015156  AEE3               	btfss	plusw1,7,c
 25602  015158  D7DC               	goto	l8282
 25603                           
 25604                           ;stkvar	_aexp @ sp[(-13)+10]
 25605  01515A  0EFD               	movlw	-3
 25606  01515C  6AE3               	clrf	plusw1,c
 25607                           
 25608                           ;stkvar	_grs @ sp[(-13)+0]
 25609  01515E  0EF6               	movlw	-10
 25610  015160  AEE3               	btfss	plusw1,7,c
 25611  015162  D020               	goto	l8306
 25612                           
 25613                           ;stkvar	_grs @ sp[(-13)+0]
 25614  015164  50E1               	movf	fsr1l,w,c
 25615  015166  0FF3               	addlw	-13
 25616  015168  6ED9               	movwf	fsr2l,c
 25617  01516A  50E2               	movf	fsr1h,w,c
 25618  01516C  6EDA               	movwf	fsr2h,c
 25619  01516E  0EFF               	movlw	255
 25620  015170  22DA               	addwfc	fsr2h,f,c
 25621  015172  0EFF               	movlw	255
 25622  015174  14DE               	andwf	postinc2,w,c
 25623  015176  6E09               	movwf	(btemp+8)^0,c
 25624  015178  0EFF               	movlw	255
 25625  01517A  14DE               	andwf	postinc2,w,c
 25626  01517C  6E0A               	movwf	(btemp+9)^0,c
 25627  01517E  0EFF               	movlw	255
 25628  015180  14DE               	andwf	postinc2,w,c
 25629  015182  6E0B               	movwf	(btemp+10)^0,c
 25630  015184  0E7F               	movlw	127
 25631  015186  14DE               	andwf	postinc2,w,c
 25632  015188  6E0C               	movwf	(btemp+11)^0,c
 25633  01518A  5009               	movf	(btemp+8)^0,w,c
 25634  01518C  100A               	iorwf	(btemp+9)^0,w,c
 25635  01518E  100B               	iorwf	(btemp+10)^0,w,c
 25636  015190  100C               	iorwf	(btemp+11)^0,w,c
 25637  015192  B4D8               	btfsc	status,2,c
 25638  015194  D004               	goto	l8302
 25639  015196                     u6670:
 25640                           
 25641                           ;stkvar	_aexp @ sp[(-13)+10]
 25642  015196  0EFD               	movlw	-3
 25643  015198  6AE3               	clrf	plusw1,c
 25644  01519A  2AE3               	incf	plusw1,f,c
 25645  01519C  D003               	goto	l8306
 25646  01519E                     l8302:
 25647                           
 25648                           ;stkvar	_b @ sp[(-13)+-4]
 25649  01519E  0EEF               	movlw	-17
 25650  0151A0  B0E3               	btfsc	plusw1,0,c
 25651  0151A2  D7F9               	goto	u6670
 25652  0151A4                     l8306:
 25653                           
 25654                           ;stkvar	_aexp @ sp[(-13)+10]
 25655  0151A4  0EFD               	movlw	-3
 25656  0151A6  50E3               	movf	plusw1,w,c
 25657  0151A8  B4D8               	btfsc	status,2,c
 25658  0151AA  D036               	goto	l8316
 25659                           
 25660                           ;stkvar	_b @ sp[(-13)+-4]
 25661  0151AC  50E1               	movf	fsr1l,w,c
 25662  0151AE  0FEF               	addlw	-17
 25663  0151B0  6ED9               	movwf	fsr2l,c
 25664  0151B2  50E2               	movf	fsr1h,w,c
 25665  0151B4  6EDA               	movwf	fsr2h,c
 25666  0151B6  0EFF               	movlw	255
 25667  0151B8  22DA               	addwfc	fsr2h,f,c
 25668  0151BA  2ADE               	incf	postinc2,f,c
 25669  0151BC  0E00               	movlw	0
 25670  0151BE  22DE               	addwfc	postinc2,f,c
 25671  0151C0  22DE               	addwfc	postinc2,f,c
 25672  0151C2  22DE               	addwfc	postinc2,f,c
 25673                           
 25674                           ;stkvar	_b @ sp[(-13)+-4]
 25675  0151C4  0EF2               	movlw	-14
 25676  0151C6  A0E3               	btfss	plusw1,0,c
 25677  0151C8  D027               	goto	l8316
 25678  0151CA  0E01               	movlw	1
 25679  0151CC  6E0C               	movwf	(btemp+11)^0,c
 25680                           
 25681                           ;stkvar	_b @ sp[(-13)+-4]
 25682  0151CE  50E1               	movf	fsr1l,w,c
 25683  0151D0  0FEF               	addlw	-17
 25684  0151D2  6ED9               	movwf	fsr2l,c
 25685  0151D4  50E2               	movf	fsr1h,w,c
 25686  0151D6  6EDA               	movwf	fsr2h,c
 25687  0151D8  0EFF               	movlw	255
 25688  0151DA  22DA               	addwfc	fsr2h,f,c
 25689  0151DC  280C               	incf	(btemp+11)^0,w,c
 25690  0151DE  52DE               	movf	postinc2,f,c
 25691  0151E0  D008               	goto	u6710
 25692  0151E2                     u6715:
 25693  0151E2  52DE               	movf	postinc2,f,c
 25694  0151E4  90D8               	bcf	status,0,c
 25695  0151E6  BEDC               	btfsc	preinc2,7,c
 25696  0151E8  80D8               	bsf	status,0,c
 25697  0151EA  32DD               	rrcf	postdec2,f,c
 25698  0151EC  32DD               	rrcf	postdec2,f,c
 25699  0151EE  32DD               	rrcf	postdec2,f,c
 25700  0151F0  32DE               	rrcf	postinc2,f,c
 25701  0151F2                     u6710:
 25702  0151F2  2EE8               	decfsz	wreg,f,c
 25703  0151F4  D7F6               	goto	u6715
 25704                           
 25705                           ;stkvar	_new_exp @ sp[(-13)+8]
 25706  0151F6  0EFB               	movlw	-5
 25707  0151F8  50E3               	movf	plusw1,w,c
 25708  0151FA  0F01               	addlw	1
 25709  0151FC  6E01               	movwf	btemp^0,c
 25710  0151FE  0EFB               	movlw	-5
 25711  015200  0060  F007  FFE3   	movff	btemp,plusw1
 25712  015206  6A01               	clrf	btemp^0,c
 25713  015208  0EFC               	movlw	-4
 25714  01520A  50E3               	movf	plusw1,w,c
 25715  01520C  2001               	addwfc	btemp^0,w,c
 25716  01520E  6E01               	movwf	btemp^0,c
 25717  015210  0EFC               	movlw	-4
 25718  015212  0060  F007  FFE3   	movff	btemp,plusw1
 25719  015218                     l8316:
 25720                           
 25721                           ;stkvar	_new_exp @ sp[(-13)+8]
 25722  015218  0EFC               	movlw	-4
 25723  01521A  BEE3               	btfsc	plusw1,7,c
 25724  01521C  D01B               	goto	l8322
 25725  01521E  0EFC               	movlw	-4
 25726  015220  50E3               	movf	plusw1,w,c
 25727  015222  E104               	bnz	u6720
 25728  015224  0EFB               	movlw	-5
 25729  015226  28E3               	incf	plusw1,w,c
 25730  015228  A0D8               	btfss	status,0,c
 25731  01522A  D014               	goto	l8322
 25732  01522C                     u6720:
 25733  01522C  0EFF               	movlw	255
 25734  01522E  6E0B               	movwf	(btemp+10)^0,c
 25735  015230  0E00               	movlw	0
 25736  015232  6E0C               	movwf	(btemp+11)^0,c
 25737                           
 25738                           ;stkvar	_new_exp @ sp[(-13)+8]
 25739  015234  0EFB               	movlw	-5
 25740  015236  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25741  01523C  0EFC               	movlw	-4
 25742  01523E  0060  F033  FFE3   	movff	btemp+11,plusw1
 25743                           
 25744                           ;stkvar	_b @ sp[(-13)+-4]
 25745  015244  0EEF               	movlw	-17
 25746  015246  6AE3               	clrf	plusw1,c
 25747  015248  0EF0               	movlw	-16
 25748  01524A  6AE3               	clrf	plusw1,c
 25749  01524C  0EF1               	movlw	-15
 25750  01524E  6AE3               	clrf	plusw1,c
 25751  015250  0EF2               	movlw	-14
 25752  015252  6AE3               	clrf	plusw1,c
 25753  015254                     l8322:
 25754                           
 25755                           ;stkvar	_new_exp @ sp[(-13)+8]
 25756  015254  0EFC               	movlw	-4
 25757  015256  BEE3               	btfsc	plusw1,7,c
 25758  015258  D007               	goto	u6730
 25759  01525A  0EFC               	movlw	-4
 25760  01525C  50E3               	movf	plusw1,w,c
 25761  01525E  E112               	bnz	l8328
 25762  015260  0EFB               	movlw	-5
 25763  015262  04E3               	decf	plusw1,w,c
 25764  015264  B0D8               	btfsc	status,0,c
 25765  015266  D00E               	goto	l8328
 25766  015268                     u6730:
 25767                           
 25768                           ;stkvar	_new_exp @ sp[(-13)+8]
 25769  015268  0EFB               	movlw	-5
 25770  01526A  6AE3               	clrf	plusw1,c
 25771  01526C  0EFC               	movlw	-4
 25772  01526E  6AE3               	clrf	plusw1,c
 25773                           
 25774                           ;stkvar	_b @ sp[(-13)+-4]
 25775  015270  0EEF               	movlw	-17
 25776  015272  6AE3               	clrf	plusw1,c
 25777  015274  0EF0               	movlw	-16
 25778  015276  6AE3               	clrf	plusw1,c
 25779  015278  0EF1               	movlw	-15
 25780  01527A  6AE3               	clrf	plusw1,c
 25781  01527C  0EF2               	movlw	-14
 25782  01527E  6AE3               	clrf	plusw1,c
 25783                           
 25784                           ;stkvar	_sign @ sp[(-13)+12]
 25785  015280  0EFF               	movlw	-1
 25786  015282  6AE3               	clrf	plusw1,c
 25787  015284                     l8328:
 25788                           
 25789                           ;stkvar	_new_exp @ sp[(-13)+8]
 25790                           ;stkvar	_bexp @ sp[(-13)+11]
 25791  015284  0EFB               	movlw	-5
 25792  015286  006F FF8C  F001    	movff	plusw1,btemp
 25793  01528C  0EFE               	movlw	-2
 25794  01528E  0060  F007  FFE3   	movff	btemp,plusw1
 25795                           
 25796                           ;stkvar	_bexp @ sp[(-13)+11]
 25797  015294  0EFE               	movlw	-2
 25798  015296  A0E3               	btfss	plusw1,0,c
 25799  015298  D009               	goto	l8334
 25800                           
 25801                           ;stkvar	_b @ sp[(-13)+-4]
 25802  01529A  0EF1               	movlw	241
 25803  01529C  24E1               	addwf	fsr1l,w,c
 25804  01529E  6ED9               	movwf	fsr2l,c
 25805  0152A0  0EFF               	movlw	255
 25806  0152A2  20E2               	addwfc	fsr1h,w,c
 25807  0152A4  6EDA               	movwf	fsr2h,c
 25808  0152A6  0E00               	movlw	0
 25809  0152A8  8EDB               	bsf	plusw2,7,c
 25810  0152AA  D008               	goto	l8336
 25811  0152AC                     l8334:
 25812                           
 25813                           ;stkvar	_b @ sp[(-13)+-4]
 25814  0152AC  0EF1               	movlw	241
 25815  0152AE  24E1               	addwf	fsr1l,w,c
 25816  0152B0  6ED9               	movwf	fsr2l,c
 25817  0152B2  0EFF               	movlw	255
 25818  0152B4  20E2               	addwfc	fsr1h,w,c
 25819  0152B6  6EDA               	movwf	fsr2h,c
 25820  0152B8  0E7F               	movlw	127
 25821  0152BA  16DF               	andwf	indf2,f,c
 25822  0152BC                     l8336:
 25823                           
 25824                           ;stkvar	_b @ sp[(-13)+-4]
 25825  0152BC  0EF2               	movlw	242
 25826  0152BE  24E1               	addwf	fsr1l,w,c
 25827  0152C0  6ED9               	movwf	fsr2l,c
 25828  0152C2  0EFF               	movlw	255
 25829  0152C4  20E2               	addwfc	fsr1h,w,c
 25830  0152C6  6EDA               	movwf	fsr2h,c
 25831                           
 25832                           ;stkvar	_bexp @ sp[(-13)+11]
 25833  0152C8  0EFE               	movlw	-2
 25834  0152CA  006F FF8C  F00C    	movff	plusw1,btemp+11
 25835  0152D0  90D8               	bcf	status,0,c
 25836  0152D2  300C               	rrcf	(btemp+11)^0,w,c
 25837  0152D4  6EDF               	movwf	indf2,c
 25838  0152D6  D644               	goto	l8234
 25839  0152D8                     l2977:
 25840                           
 25841                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 25842  0152D8  0EEB               	movlw	235
 25843  0152DA  26E1               	addwf	fsr1l,f,c
 25844  0152DC  0EFF               	movlw	255
 25845  0152DE  22E2               	addwfc	fsr1h,f,c
 25846  0152E0  0012               	return		;funcret
 25847  0152E2                     __end_of___fldiv:
 25848                           	opt callstack 0
 25849                           
 25850 ;; *************** function ___flge *****************
 25851 ;; Defined at:
 25852 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 25853 ;; Parameters:    Size  Location     Type
 25854 ;;  ff1             4  [STACK] unsigned char 
 25855 ;;  ff2             4  [STACK] unsigned char 
 25856 ;; Auto vars:     Size  Location     Type
 25857 ;;		None
 25858 ;; Return value:  Size  Location     Type
 25859 ;;		None               void
 25860 ;; Registers used:
 25861 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 25862 ;; Tracked objects:
 25863 ;;		On entry : 0/1
 25864 ;;		On exit  : 0/0
 25865 ;;		Unchanged: 0/0
 25866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25871 ;;Total ram usage:        0 bytes
 25872 ;; Hardware stack levels used:    1
 25873 ;; Hardware stack levels required when called:   15
 25874 ;; This function calls:
 25875 ;;		Nothing
 25876 ;; This function is called by:
 25877 ;;		_main
 25878 ;;		_calc_ror_data
 25879 ;;		_check_day_time
 25880 ;;		_calc_bsoc
 25881 ;;		_efgtoa
 25882 ;; This function uses a reentrant model
 25883 ;;
 25884                           
 25885                           	psect	text101
 25886  018FE8                     __ptext101:
 25887                           	opt callstack 0
 25888  018FE8                     ___flge:
 25889                           	opt callstack 0
 25890                           
 25891                           ;stkvar	_ff1 @ sp[(0)+-4]
 25892                           
 25893                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25894                           ;incstack = 0
 25895 ;; hardware stack exceeded
 25896  018FE8  50E1               	movf	fsr1l,w,c
 25897  018FEA  0FFC               	addlw	-4
 25898  018FEC  6ED9               	movwf	fsr2l,c
 25899  018FEE  50E2               	movf	fsr1h,w,c
 25900  018FF0  6EDA               	movwf	fsr2h,c
 25901  018FF2  0EFF               	movlw	255
 25902  018FF4  22DA               	addwfc	fsr2h,f,c
 25903  018FF6  0E00               	movlw	0
 25904  018FF8  14DE               	andwf	postinc2,w,c
 25905  018FFA  6E09               	movwf	(btemp+8)^0,c
 25906  018FFC  0E00               	movlw	0
 25907  018FFE  14DE               	andwf	postinc2,w,c
 25908  019000  6E0A               	movwf	(btemp+9)^0,c
 25909  019002  0E80               	movlw	128
 25910  019004  14DE               	andwf	postinc2,w,c
 25911  019006  6E0B               	movwf	(btemp+10)^0,c
 25912  019008  0E7F               	movlw	127
 25913  01900A  14DE               	andwf	postinc2,w,c
 25914  01900C  6E0C               	movwf	(btemp+11)^0,c
 25915  01900E  5009               	movf	(btemp+8)^0,w,c
 25916  019010  100A               	iorwf	(btemp+9)^0,w,c
 25917  019012  100B               	iorwf	(btemp+10)^0,w,c
 25918  019014  100C               	iorwf	(btemp+11)^0,w,c
 25919  019016  A4D8               	btfss	status,2,c
 25920  019018  D008               	goto	l8610
 25921                           
 25922                           ;stkvar	_ff1 @ sp[(0)+-4]
 25923  01901A  0EFC               	movlw	-4
 25924  01901C  6AE3               	clrf	plusw1,c
 25925  01901E  0EFD               	movlw	-3
 25926  019020  6AE3               	clrf	plusw1,c
 25927  019022  0EFE               	movlw	-2
 25928  019024  6AE3               	clrf	plusw1,c
 25929  019026  0EFF               	movlw	-1
 25930  019028  6AE3               	clrf	plusw1,c
 25931  01902A                     l8610:
 25932                           
 25933                           ;stkvar	_ff2 @ sp[(0)+-8]
 25934  01902A  50E1               	movf	fsr1l,w,c
 25935  01902C  0FF8               	addlw	-8
 25936  01902E  6ED9               	movwf	fsr2l,c
 25937  019030  50E2               	movf	fsr1h,w,c
 25938  019032  6EDA               	movwf	fsr2h,c
 25939  019034  0EFF               	movlw	255
 25940  019036  22DA               	addwfc	fsr2h,f,c
 25941  019038  0E00               	movlw	0
 25942  01903A  14DE               	andwf	postinc2,w,c
 25943  01903C  6E09               	movwf	(btemp+8)^0,c
 25944  01903E  0E00               	movlw	0
 25945  019040  14DE               	andwf	postinc2,w,c
 25946  019042  6E0A               	movwf	(btemp+9)^0,c
 25947  019044  0E80               	movlw	128
 25948  019046  14DE               	andwf	postinc2,w,c
 25949  019048  6E0B               	movwf	(btemp+10)^0,c
 25950  01904A  0E7F               	movlw	127
 25951  01904C  14DE               	andwf	postinc2,w,c
 25952  01904E  6E0C               	movwf	(btemp+11)^0,c
 25953  019050  5009               	movf	(btemp+8)^0,w,c
 25954  019052  100A               	iorwf	(btemp+9)^0,w,c
 25955  019054  100B               	iorwf	(btemp+10)^0,w,c
 25956  019056  100C               	iorwf	(btemp+11)^0,w,c
 25957  019058  A4D8               	btfss	status,2,c
 25958  01905A  D008               	goto	l2658
 25959                           
 25960                           ;stkvar	_ff2 @ sp[(0)+-8]
 25961  01905C  0EF8               	movlw	-8
 25962  01905E  6AE3               	clrf	plusw1,c
 25963  019060  0EF9               	movlw	-7
 25964  019062  6AE3               	clrf	plusw1,c
 25965  019064  0EFA               	movlw	-6
 25966  019066  6AE3               	clrf	plusw1,c
 25967  019068  0EFB               	movlw	-5
 25968  01906A  6AE3               	clrf	plusw1,c
 25969  01906C                     l2658:
 25970                           
 25971                           ;stkvar	_ff1 @ sp[(0)+-4]
 25972  01906C  0EFF               	movlw	-1
 25973  01906E  AEE3               	btfss	plusw1,7,c
 25974  019070  D024               	goto	l8616
 25975                           
 25976                           ;stkvar	_ff1 @ sp[(0)+-4]
 25977  019072  0E00               	movlw	0
 25978  019074  6E09               	movwf	(btemp+8)^0,c
 25979  019076  0E00               	movlw	0
 25980  019078  6E0A               	movwf	(btemp+9)^0,c
 25981  01907A  0E00               	movlw	0
 25982  01907C  6E0B               	movwf	(btemp+10)^0,c
 25983  01907E  0E80               	movlw	128
 25984  019080  6E0C               	movwf	(btemp+11)^0,c
 25985  019082  0EFC               	movlw	-4
 25986  019084  50E3               	movf	plusw1,w,c
 25987  019086  5E09               	subwf	(btemp+8)^0,f,c
 25988  019088  0EFD               	movlw	-3
 25989  01908A  50E3               	movf	plusw1,w,c
 25990  01908C  5A0A               	subwfb	(btemp+9)^0,f,c
 25991  01908E  0EFE               	movlw	-2
 25992  019090  50E3               	movf	plusw1,w,c
 25993  019092  5A0B               	subwfb	(btemp+10)^0,f,c
 25994  019094  0EFF               	movlw	-1
 25995  019096  50E3               	movf	plusw1,w,c
 25996  019098  5A0C               	subwfb	(btemp+11)^0,f,c
 25997                           
 25998                           ;stkvar	_ff1 @ sp[(0)+-4]
 25999  01909A  0EFC               	movlw	-4
 26000  01909C  0060  F027  FFE3   	movff	btemp+8,plusw1
 26001  0190A2  0EFD               	movlw	-3
 26002  0190A4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26003  0190AA  0EFE               	movlw	-2
 26004  0190AC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26005  0190B2  0EFF               	movlw	-1
 26006  0190B4  0060  F033  FFE3   	movff	btemp+11,plusw1
 26007  0190BA                     l8616:
 26008                           
 26009                           ;stkvar	_ff2 @ sp[(0)+-8]
 26010  0190BA  0EFB               	movlw	-5
 26011  0190BC  AEE3               	btfss	plusw1,7,c
 26012  0190BE  D024               	goto	l8620
 26013                           
 26014                           ;stkvar	_ff2 @ sp[(0)+-8]
 26015  0190C0  0E00               	movlw	0
 26016  0190C2  6E09               	movwf	(btemp+8)^0,c
 26017  0190C4  0E00               	movlw	0
 26018  0190C6  6E0A               	movwf	(btemp+9)^0,c
 26019  0190C8  0E00               	movlw	0
 26020  0190CA  6E0B               	movwf	(btemp+10)^0,c
 26021  0190CC  0E80               	movlw	128
 26022  0190CE  6E0C               	movwf	(btemp+11)^0,c
 26023  0190D0  0EF8               	movlw	-8
 26024  0190D2  50E3               	movf	plusw1,w,c
 26025  0190D4  5E09               	subwf	(btemp+8)^0,f,c
 26026  0190D6  0EF9               	movlw	-7
 26027  0190D8  50E3               	movf	plusw1,w,c
 26028  0190DA  5A0A               	subwfb	(btemp+9)^0,f,c
 26029  0190DC  0EFA               	movlw	-6
 26030  0190DE  50E3               	movf	plusw1,w,c
 26031  0190E0  5A0B               	subwfb	(btemp+10)^0,f,c
 26032  0190E2  0EFB               	movlw	-5
 26033  0190E4  50E3               	movf	plusw1,w,c
 26034  0190E6  5A0C               	subwfb	(btemp+11)^0,f,c
 26035                           
 26036                           ;stkvar	_ff2 @ sp[(0)+-8]
 26037  0190E8  0EF8               	movlw	-8
 26038  0190EA  0060  F027  FFE3   	movff	btemp+8,plusw1
 26039  0190F0  0EF9               	movlw	-7
 26040  0190F2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26041  0190F8  0EFA               	movlw	-6
 26042  0190FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26043  019100  0EFB               	movlw	-5
 26044  019102  0060  F033  FFE3   	movff	btemp+11,plusw1
 26045  019108                     l8620:
 26046                           
 26047                           ;stkvar	_ff1 @ sp[(0)+-4]
 26048  019108  0EFF               	movlw	-1
 26049  01910A  7EE3               	btg	plusw1,7,c
 26050                           
 26051                           ;stkvar	_ff2 @ sp[(0)+-8]
 26052  01910C  0EFB               	movlw	-5
 26053  01910E  7EE3               	btg	plusw1,7,c
 26054                           
 26055                           ;stkvar	_ff2 @ sp[(0)+-8]
 26056                           ;stkvar	_ff1 @ sp[(0)+-4]
 26057  019110  50E1               	movf	fsr1l,w,c
 26058  019112  0FFC               	addlw	-4
 26059  019114  6ED9               	movwf	fsr2l,c
 26060  019116  50E2               	movf	fsr1h,w,c
 26061  019118  6EDA               	movwf	fsr2h,c
 26062  01911A  0EFF               	movlw	255
 26063  01911C  22DA               	addwfc	fsr2h,f,c
 26064  01911E  0EF8               	movlw	-8
 26065  019120  50E3               	movf	plusw1,w,c
 26066  019122  5CDE               	subwf	postinc2,w,c
 26067  019124  0EF9               	movlw	-7
 26068  019126  50E3               	movf	plusw1,w,c
 26069  019128  58DE               	subwfb	postinc2,w,c
 26070  01912A  0EFA               	movlw	-6
 26071  01912C  50E3               	movf	plusw1,w,c
 26072  01912E  58DE               	subwfb	postinc2,w,c
 26073  019130  0EFB               	movlw	-5
 26074  019132  50E3               	movf	plusw1,w,c
 26075  019134  58DE               	subwfb	postinc2,w,c
 26076  019136  B0D8               	btfsc	status,0,c
 26077  019138  D002               	goto	l8628
 26078  01913A  9001               	bcf	btemp& (0+255),0,c
 26079  01913C  D001               	goto	l2665
 26080  01913E                     l8628:
 26081  01913E  8001               	bsf	btemp& (0+255),0,c
 26082  019140                     l2665:
 26083                           
 26084                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 26085  019140  0EF8               	movlw	248
 26086  019142  26E1               	addwf	fsr1l,f,c
 26087  019144  0EFF               	movlw	255
 26088  019146  22E2               	addwfc	fsr1h,f,c
 26089  019148  0012               	return		;funcret
 26090  01914A                     __end_of___flge:
 26091                           	opt callstack 0
 26092                           
 26093 ;; *************** function _calc_model_data *****************
 26094 ;; Defined at:
 26095 ;;		line 67 in file "mbmc.c"
 26096 ;; Parameters:    Size  Location     Type
 26097 ;;		None
 26098 ;; Auto vars:     Size  Location     Type
 26099 ;;		None
 26100 ;; Return value:  Size  Location     Type
 26101 ;;                  1  [STACK] void 
 26102 ;; Registers used:
 26103 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26104 ;; Tracked objects:
 26105 ;;		On entry : 0/1
 26106 ;;		On exit  : 3F/39
 26107 ;;		Unchanged: 0/0
 26108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26113 ;;Total ram usage:        0 bytes
 26114 ;; Hardware stack levels used:    1
 26115 ;; Hardware stack levels required when called:   18
 26116 ;; This function calls:
 26117 ;;		___fladd
 26118 ;;		___flmul
 26119 ;;		___flsub
 26120 ;;		_lp_filter
 26121 ;;		_start_bsoc
 26122 ;;		_stop_bsoc
 26123 ;; This function is called by:
 26124 ;;		_main
 26125 ;; This function uses a reentrant model
 26126 ;;
 26127                           
 26128                           	psect	text102
 26129  015C76                     __ptext102:
 26130                           	opt callstack 0
 26131  015C76                     _calc_model_data:
 26132                           	opt callstack 12
 26133                           
 26134                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 26135                           
 26136                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26137                           ;incstack = 0
 26138  015C76  ECD8  F0E0         	call	_stop_bsoc	;wreg free
 26139                           
 26140                           ; BSR set to: 57
 26141                           ;mbmc.c: 72:  if (!V.calib) {
 26142  015C7A  0101               	movlb	1	; () banked
 26143  015C7C  51DC               	movf	(_V+172)& (0+255),w,b	;volatile
 26144  015C7E  A4D8               	btfss	status,2,c
 26145  015C80  D219               	goto	l11046
 26146                           
 26147                           ; BSR set to: 1
 26148                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 26149  015C82  EE21  F2FF         	lfsr	2,_C
 26150  015C86  006F FF78  F743    	movff	postinc2,_C+68	;volatile
 26151  015C8C  006F FF78  F744    	movff	postinc2,_C+69	;volatile
 26152  015C92  006F FF78  F745    	movff	postinc2,_C+70	;volatile
 26153  015C98  006F FF74  F746    	movff	postdec2,_C+71	;volatile
 26154                           
 26155                           ; BSR set to: 1
 26156                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 26157  015C9E  0060  F23B  FFE6   	movff	calc_model_data@bcror,postinc1
 26158  015CA4  0060  F23F  FFE6   	movff	calc_model_data@bcror+1,postinc1
 26159  015CAA  0060  F243  FFE6   	movff	calc_model_data@bcror+2,postinc1
 26160  015CB0  0060  F247  FFE6   	movff	calc_model_data@bcror+3,postinc1
 26161  015CB6  EE21  F343         	lfsr	2,_C+68	;volatile
 26162  015CBA  006F FF7B FFE6     	movff	postinc2,postinc1
 26163  015CC0  006F FF7B FFE6     	movff	postinc2,postinc1
 26164  015CC6  006F FF7B FFE6     	movff	postinc2,postinc1
 26165  015CCC  006F FF7B FFE6     	movff	postinc2,postinc1
 26166  015CD2  ECEF  F0DA         	call	___flsub	;wreg free
 26167  015CD6  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 26168  015CDC  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 26169  015CE2  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 26170  015CE8  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 26171                           
 26172                           ;mbmc.c: 75:   bcror = C.c_bat;
 26173  015CEE  C743  F08E         	movff	_C+68,calc_model_data@bcror	;volatile
 26174  015CF2  C744  F08F         	movff	_C+69,calc_model_data@bcror+1	;volatile
 26175  015CF6  C745  F090         	movff	_C+70,calc_model_data@bcror+2	;volatile
 26176  015CFA  C746  F091         	movff	_C+71,calc_model_data@bcror+3	;volatile
 26177                           
 26178                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 26179  015CFE  EE21  F303         	lfsr	2,_C+4	;volatile
 26180  015D02  006F FF78  F747    	movff	postinc2,_C+72	;volatile
 26181  015D08  006F FF78  F748    	movff	postinc2,_C+73	;volatile
 26182  015D0E  006F FF78  F749    	movff	postinc2,_C+74	;volatile
 26183  015D14  006F FF74  F74A    	movff	postdec2,_C+75	;volatile
 26184                           
 26185                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 26186  015D1A  EE21  F30F         	lfsr	2,_C+16	;volatile
 26187  015D1E  006F FF78  F753    	movff	postinc2,_C+84	;volatile
 26188  015D24  006F FF78  F754    	movff	postinc2,_C+85	;volatile
 26189  015D2A  006F FF78  F755    	movff	postinc2,_C+86	;volatile
 26190  015D30  006F FF74  F756    	movff	postdec2,_C+87	;volatile
 26191                           
 26192                           ;mbmc.c: 78:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 26193  015D36  EE21  F333         	lfsr	2,_C+52	;volatile
 26194  015D3A  006F FF78  F767    	movff	postinc2,_C+104	;volatile
 26195  015D40  006F FF78  F768    	movff	postinc2,_C+105	;volatile
 26196  015D46  006F FF78  F769    	movff	postinc2,_C+106	;volatile
 26197  015D4C  006F FF74  F76A    	movff	postdec2,_C+107	;volatile
 26198                           
 26199                           ;mbmc.c: 79:   C.bv_ror = C.v_bat - bvror;
 26200  015D52  0060  F24B  FFE6   	movff	calc_model_data@bvror,postinc1
 26201  015D58  0060  F24F  FFE6   	movff	calc_model_data@bvror+1,postinc1
 26202  015D5E  0060  F253  FFE6   	movff	calc_model_data@bvror+2,postinc1
 26203  015D64  0060  F257  FFE6   	movff	calc_model_data@bvror+3,postinc1
 26204  015D6A  EE21  F353         	lfsr	2,_C+84	;volatile
 26205  015D6E  006F FF7B FFE6     	movff	postinc2,postinc1
 26206  015D74  006F FF7B FFE6     	movff	postinc2,postinc1
 26207  015D7A  006F FF7B FFE6     	movff	postinc2,postinc1
 26208  015D80  006F FF7B FFE6     	movff	postinc2,postinc1
 26209  015D86  ECEF  F0DA         	call	___flsub	;wreg free
 26210  015D8A  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 26211  015D90  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 26212  015D96  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 26213  015D9C  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 26214                           
 26215                           ;mbmc.c: 80:   bvror = C.v_bat;
 26216  015DA2  C753  F092         	movff	_C+84,calc_model_data@bvror	;volatile
 26217  015DA6  C754  F093         	movff	_C+85,calc_model_data@bvror+1	;volatile
 26218  015DAA  C755  F094         	movff	_C+86,calc_model_data@bvror+2	;volatile
 26219  015DAE  C756  F095         	movff	_C+87,calc_model_data@bvror+3	;volatile
 26220                           
 26221                           ;mbmc.c: 81:   C.v_pv = C.calc[V_PV];
 26222  015DB2  EE21  F313         	lfsr	2,_C+20	;volatile
 26223  015DB6  006F FF78  F74F    	movff	postinc2,_C+80	;volatile
 26224  015DBC  006F FF78  F750    	movff	postinc2,_C+81	;volatile
 26225  015DC2  006F FF78  F751    	movff	postinc2,_C+82	;volatile
 26226  015DC8  006F FF74  F752    	movff	postdec2,_C+83	;volatile
 26227                           
 26228                           ;mbmc.c: 82:   C.v_cc = C.calc[V_CC];
 26229  015DCE  EE21  F307         	lfsr	2,_C+8	;volatile
 26230  015DD2  006F FF78  F74B    	movff	postinc2,_C+76	;volatile
 26231  015DD8  006F FF78  F74C    	movff	postinc2,_C+77	;volatile
 26232  015DDE  006F FF78  F74D    	movff	postinc2,_C+78	;volatile
 26233  015DE4  006F FF74  F74E    	movff	postdec2,_C+79	;volatile
 26234                           
 26235                           ;mbmc.c: 83:   C.v_inverter = C.calc[V_INVERTER];
 26236  015DEA  EE21  F32F         	lfsr	2,_C+48	;volatile
 26237  015DEE  006F FF78  F763    	movff	postinc2,_C+100	;volatile
 26238  015DF4  006F FF78  F764    	movff	postinc2,_C+101	;volatile
 26239  015DFA  006F FF78  F765    	movff	postinc2,_C+102	;volatile
 26240  015E00  006F FF74  F766    	movff	postdec2,_C+103	;volatile
 26241                           
 26242                           ;mbmc.c: 84:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 26243  015E06  0E01               	movlw	1
 26244  015E08  6EE6               	movwf	postinc1,c
 26245  015E0A  0E10               	movlw	16
 26246  015E0C  6EE6               	movwf	postinc1,c
 26247  015E0E  EE21  F2FF         	lfsr	2,_C
 26248  015E12  006F FF7B FFE6     	movff	postinc2,postinc1
 26249  015E18  006F FF7B FFE6     	movff	postinc2,postinc1
 26250  015E1E  006F FF7B FFE6     	movff	postinc2,postinc1
 26251  015E24  006F FF7B FFE6     	movff	postinc2,postinc1
 26252  015E2A  EE21  F303         	lfsr	2,_C+4	;volatile
 26253  015E2E  006F FF7B FFE6     	movff	postinc2,postinc1
 26254  015E34  006F FF7B FFE6     	movff	postinc2,postinc1
 26255  015E3A  006F FF7B FFE6     	movff	postinc2,postinc1
 26256  015E40  006F FF7B FFE6     	movff	postinc2,postinc1
 26257  015E46  ECEF  F0DA         	call	___flsub	;wreg free
 26258  015E4A  0060  F007  FFE6   	movff	btemp,postinc1
 26259  015E50  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26260  015E56  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26261  015E5C  0060  F013  FFE6   	movff	btemp+3,postinc1
 26262  015E62  EC3F  F0C3         	call	_lp_filter	;wreg free
 26263  015E66  0060  F004  F73F   	movff	btemp,_C+64	;volatile
 26264  015E6C  0060  F008  F740   	movff	btemp+1,_C+65	;volatile
 26265  015E72  0060  F00C  F741   	movff	btemp+2,_C+66	;volatile
 26266  015E78  0060  F010  F742   	movff	btemp+3,_C+67	;volatile
 26267                           
 26268                           ;mbmc.c: 85:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 26269  015E7E  0E01               	movlw	1
 26270  015E80  6EE6               	movwf	postinc1,c
 26271  015E82  0E11               	movlw	17
 26272  015E84  6EE6               	movwf	postinc1,c
 26273  015E86  EE21  F353         	lfsr	2,_C+84	;volatile
 26274  015E8A  006F FF7B FFE6     	movff	postinc2,postinc1
 26275  015E90  006F FF7B FFE6     	movff	postinc2,postinc1
 26276  015E96  006F FF7B FFE6     	movff	postinc2,postinc1
 26277  015E9C  006F FF7B FFE6     	movff	postinc2,postinc1
 26278  015EA2  EE21  F33F         	lfsr	2,_C+64	;volatile
 26279  015EA6  006F FF7B FFE6     	movff	postinc2,postinc1
 26280  015EAC  006F FF7B FFE6     	movff	postinc2,postinc1
 26281  015EB2  006F FF7B FFE6     	movff	postinc2,postinc1
 26282  015EB8  006F FF7B FFE6     	movff	postinc2,postinc1
 26283  015EBE  ECC1  F09E         	call	___flmul	;wreg free
 26284  015EC2  0060  F007  FFE6   	movff	btemp,postinc1
 26285  015EC8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26286  015ECE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26287  015ED4  0060  F013  FFE6   	movff	btemp+3,postinc1
 26288  015EDA  EC3F  F0C3         	call	_lp_filter	;wreg free
 26289  015EDE  0060  F004  F773   	movff	btemp,_C+116	;volatile
 26290  015EE4  0060  F008  F774   	movff	btemp+1,_C+117	;volatile
 26291  015EEA  0060  F00C  F775   	movff	btemp+2,_C+118	;volatile
 26292  015EF0  0060  F010  F776   	movff	btemp+3,_C+119	;volatile
 26293                           
 26294                           ;mbmc.c: 86:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 26295  015EF6  0E01               	movlw	1
 26296  015EF8  6EE6               	movwf	postinc1,c
 26297  015EFA  0E12               	movlw	18
 26298  015EFC  6EE6               	movwf	postinc1,c
 26299  015EFE  EE21  F34F         	lfsr	2,_C+80	;volatile
 26300  015F02  006F FF7B FFE6     	movff	postinc2,postinc1
 26301  015F08  006F FF7B FFE6     	movff	postinc2,postinc1
 26302  015F0E  006F FF7B FFE6     	movff	postinc2,postinc1
 26303  015F14  006F FF7B FFE6     	movff	postinc2,postinc1
 26304  015F1A  EE21  F347         	lfsr	2,_C+72	;volatile
 26305  015F1E  006F FF7B FFE6     	movff	postinc2,postinc1
 26306  015F24  006F FF7B FFE6     	movff	postinc2,postinc1
 26307  015F2A  006F FF7B FFE6     	movff	postinc2,postinc1
 26308  015F30  006F FF7B FFE6     	movff	postinc2,postinc1
 26309  015F36  ECC1  F09E         	call	___flmul	;wreg free
 26310  015F3A  0060  F007  FFE6   	movff	btemp,postinc1
 26311  015F40  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26312  015F46  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26313  015F4C  0060  F013  FFE6   	movff	btemp+3,postinc1
 26314  015F52  EC3F  F0C3         	call	_lp_filter	;wreg free
 26315  015F56  0060  F004  F77B   	movff	btemp,_C+124	;volatile
 26316  015F5C  0060  F008  F77C   	movff	btemp+1,_C+125	;volatile
 26317  015F62  0060  F00C  F77D   	movff	btemp+2,_C+126	;volatile
 26318  015F68  0060  F010  F77E   	movff	btemp+3,_C+127	;volatile
 26319                           
 26320                           ;mbmc.c: 87:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 26321  015F6E  0E01               	movlw	1
 26322  015F70  6EE6               	movwf	postinc1,c
 26323  015F72  0E13               	movlw	19
 26324  015F74  6EE6               	movwf	postinc1,c
 26325  015F76  0E00               	movlw	0
 26326  015F78  6EE6               	movwf	postinc1,c
 26327  015F7A  0E00               	movlw	0
 26328  015F7C  6EE6               	movwf	postinc1,c
 26329  015F7E  0E60               	movlw	96
 26330  015F80  6EE6               	movwf	postinc1,c
 26331  015F82  0EC1               	movlw	193
 26332  015F84  6EE6               	movwf	postinc1,c
 26333  015F86  EE21  F363         	lfsr	2,_C+100	;volatile
 26334  015F8A  006F FF7B FFE6     	movff	postinc2,postinc1
 26335  015F90  006F FF7B FFE6     	movff	postinc2,postinc1
 26336  015F96  006F FF7B FFE6     	movff	postinc2,postinc1
 26337  015F9C  006F FF7B FFE6     	movff	postinc2,postinc1
 26338  015FA2  EE21  F33F         	lfsr	2,_C+64	;volatile
 26339  015FA6  006F FF7B FFE6     	movff	postinc2,postinc1
 26340  015FAC  006F FF7B FFE6     	movff	postinc2,postinc1
 26341  015FB2  006F FF7B FFE6     	movff	postinc2,postinc1
 26342  015FB8  006F FF7B FFE6     	movff	postinc2,postinc1
 26343  015FBE  ECC1  F09E         	call	___flmul	;wreg free
 26344  015FC2  0060  F007  FFE6   	movff	btemp,postinc1
 26345  015FC8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26346  015FCE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26347  015FD4  0060  F013  FFE6   	movff	btemp+3,postinc1
 26348  015FDA  ECD6  F0A2         	call	___fladd	;wreg free
 26349  015FDE  0060  F007  FFE6   	movff	btemp,postinc1
 26350  015FE4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26351  015FEA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26352  015FF0  0060  F013  FFE6   	movff	btemp+3,postinc1
 26353  015FF6  EC3F  F0C3         	call	_lp_filter	;wreg free
 26354  015FFA  0060  F004  F777   	movff	btemp,_C+120	;volatile
 26355  016000  0060  F008  F778   	movff	btemp+1,_C+121	;volatile
 26356  016006  0060  F00C  F779   	movff	btemp+2,_C+122	;volatile
 26357  01600C  0060  F010  F77A   	movff	btemp+3,_C+123	;volatile
 26358                           
 26359                           ;mbmc.c: 88:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 26360  016012  0E01               	movlw	1
 26361  016014  6EE6               	movwf	postinc1,c
 26362  016016  0E14               	movlw	20
 26363  016018  6EE6               	movwf	postinc1,c
 26364  01601A  EE21  F353         	lfsr	2,_C+84	;volatile
 26365  01601E  006F FF7B FFE6     	movff	postinc2,postinc1
 26366  016024  006F FF7B FFE6     	movff	postinc2,postinc1
 26367  01602A  006F FF7B FFE6     	movff	postinc2,postinc1
 26368  016030  006F FF7B FFE6     	movff	postinc2,postinc1
 26369  016036  EE21  F343         	lfsr	2,_C+68	;volatile
 26370  01603A  006F FF7B FFE6     	movff	postinc2,postinc1
 26371  016040  006F FF7B FFE6     	movff	postinc2,postinc1
 26372  016046  006F FF7B FFE6     	movff	postinc2,postinc1
 26373  01604C  006F FF7B FFE6     	movff	postinc2,postinc1
 26374  016052  ECC1  F09E         	call	___flmul	;wreg free
 26375  016056  0060  F007  FFE6   	movff	btemp,postinc1
 26376  01605C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26377  016062  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26378  016068  0060  F013  FFE6   	movff	btemp+3,postinc1
 26379  01606E  EC3F  F0C3         	call	_lp_filter	;wreg free
 26380  016072  0060  F004  F77F   	movff	btemp,_C+128	;volatile
 26381  016078  0060  F008  F780   	movff	btemp+1,_C+129	;volatile
 26382  01607E  0060  F00C  F781   	movff	btemp+2,_C+130	;volatile
 26383  016084  0060  F010  F782   	movff	btemp+3,_C+131	;volatile
 26384                           
 26385                           ;mbmc.c: 92:   if (C.p_inverter < 0.0)
 26386  01608A  EE21  F377         	lfsr	2,_C+120	;volatile
 26387  01608E  0E03               	movlw	3
 26388  016090  AEDB               	btfss	plusw2,7,c
 26389  016092  D010               	goto	l11046
 26390                           
 26391                           ;mbmc.c: 93:    C.p_inverter = 0.0001;
 26392  016094  0E17               	movlw	23
 26393  016096  006F FFA0  F777    	movff	wreg,_C+120	;volatile
 26394  01609C  0EB7               	movlw	183
 26395  01609E  006F FFA0  F778    	movff	wreg,_C+121	;volatile
 26396  0160A4  0ED1               	movlw	209
 26397  0160A6  006F FFA0  F779    	movff	wreg,_C+122	;volatile
 26398  0160AC  0E38               	movlw	56
 26399  0160AE  006F FFA0  F77A    	movff	wreg,_C+123	;volatile
 26400  0160B4                     l11046:
 26401                           
 26402                           ;mbmc.c: 95:  start_bsoc();
 26403  0160B4  EC63  F0DF         	call	_start_bsoc	;wreg free
 26404                           
 26405                           ; BSR set to: 57
 26406                           ;mbmc.c: 96:  C.update = 1;
 26407  0160B8  0E01               	movlw	1
 26408  0160BA  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 26409                           
 26410                           ; BSR set to: 57
 26411                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26412  0160C0  0012               	return		;funcret
 26413  0160C2                     __end_of_calc_model_data:
 26414                           	opt callstack 0
 26415                           
 26416 ;; *************** function _stop_bsoc *****************
 26417 ;; Defined at:
 26418 ;;		line 129 in file "bsoc.c"
 26419 ;; Parameters:    Size  Location     Type
 26420 ;;		None
 26421 ;; Auto vars:     Size  Location     Type
 26422 ;;		None
 26423 ;; Return value:  Size  Location     Type
 26424 ;;                  1  [STACK] void 
 26425 ;; Registers used:
 26426 ;;		None
 26427 ;; Tracked objects:
 26428 ;;		On entry : 0/1
 26429 ;;		On exit  : 3F/39
 26430 ;;		Unchanged: 0/0
 26431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26436 ;;Total ram usage:        0 bytes
 26437 ;; Hardware stack levels used:    1
 26438 ;; Hardware stack levels required when called:   15
 26439 ;; This function calls:
 26440 ;;		Nothing
 26441 ;; This function is called by:
 26442 ;;		_calc_model_data
 26443 ;; This function uses a reentrant model
 26444 ;;
 26445                           
 26446                           	psect	text103
 26447  01C1B0                     __ptext103:
 26448                           	opt callstack 0
 26449  01C1B0                     _stop_bsoc:
 26450                           	opt callstack 14
 26451                           
 26452                           ;bsoc.c: 132:  PIE6bits.TMR3IE = 0;
 26453                           
 26454                           ; BSR set to: 57
 26455                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26456                           ;incstack = 0
 26457  01C1B0  0139               	movlb	57	; () banked
 26458  01C1B2  9D96               	bcf	150,6,b	;volatile
 26459                           
 26460                           ; BSR set to: 57
 26461                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 26462  01C1B4  0012               	return		;funcret
 26463  01C1B6                     __end_of_stop_bsoc:
 26464                           	opt callstack 0
 26465                           
 26466 ;; *************** function _start_bsoc *****************
 26467 ;; Defined at:
 26468 ;;		line 120 in file "bsoc.c"
 26469 ;; Parameters:    Size  Location     Type
 26470 ;;		None
 26471 ;; Auto vars:     Size  Location     Type
 26472 ;;		None
 26473 ;; Return value:  Size  Location     Type
 26474 ;;                  1  [STACK] void 
 26475 ;; Registers used:
 26476 ;;		wreg, status,2, status,0, btemp+11
 26477 ;; Tracked objects:
 26478 ;;		On entry : 0/1
 26479 ;;		On exit  : 3F/39
 26480 ;;		Unchanged: 0/0
 26481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26486 ;;Total ram usage:        0 bytes
 26487 ;; Hardware stack levels used:    1
 26488 ;; Hardware stack levels required when called:   15
 26489 ;; This function calls:
 26490 ;;		Nothing
 26491 ;; This function is called by:
 26492 ;;		_calc_model_data
 26493 ;; This function uses a reentrant model
 26494 ;;
 26495                           
 26496                           	psect	text104
 26497  01BEC6                     __ptext104:
 26498                           	opt callstack 0
 26499  01BEC6                     _start_bsoc:
 26500                           	opt callstack 14
 26501                           
 26502                           ;bsoc.c: 123:  PIE6bits.TMR3IE = 1;
 26503                           
 26504                           ; BSR set to: 57
 26505                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26506                           ;incstack = 0
 26507  01BEC6  0139               	movlb	57	; () banked
 26508  01BEC8  8D96               	bsf	150,6,b	;volatile
 26509                           
 26510                           ; BSR set to: 57
 26511  01BECA  A4BE               	btfss	190,2,c	;volatile
 26512  01BECC  D002               	goto	u9620
 26513  01BECE  0E01               	movlw	1
 26514  01BED0  D001               	goto	u9626
 26515  01BED2                     u9620:
 26516  01BED2  0E00               	movlw	0
 26517  01BED4                     u9626:
 26518  01BED4  0AFF               	xorlw	255
 26519  01BED6  6E0C               	movwf	(btemp+11)^0,c
 26520  01BED8  460C               	rlncf	(btemp+11)^0,f,c
 26521  01BEDA  460C               	rlncf	(btemp+11)^0,f,c
 26522  01BEDC  50BE               	movf	190,w,c	;volatile
 26523  01BEDE  180C               	xorwf	(btemp+11)^0,w,c
 26524  01BEE0  0BFB               	andlw	-5
 26525  01BEE2  180C               	xorwf	(btemp+11)^0,w,c
 26526  01BEE4  6EBE               	movwf	190,c	;volatile
 26527                           
 26528                           ; BSR set to: 57
 26529                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 26530  01BEE6  0012               	return		;funcret
 26531  01BEE8                     __end_of_start_bsoc:
 26532                           	opt callstack 0
 26533                           
 26534 ;; *************** function _lp_filter *****************
 26535 ;; Defined at:
 26536 ;;		line 29 in file "mbmc.c"
 26537 ;; Parameters:    Size  Location     Type
 26538 ;;  new             4  [STACK] const float 
 26539 ;;  bn              1  [STACK] const unsigned char 
 26540 ;;  slow            1  [STACK] const char 
 26541 ;; Auto vars:     Size  Location     Type
 26542 ;;  lp_speed        4  [STACK] float 
 26543 ;; Return value:  Size  Location     Type
 26544 ;;                  4  [STACK] float 
 26545 ;; Registers used:
 26546 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26547 ;; Tracked objects:
 26548 ;;		On entry : 0/1
 26549 ;;		On exit  : 0/0
 26550 ;;		Unchanged: 0/0
 26551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26556 ;;Total ram usage:        0 bytes
 26557 ;; Hardware stack levels used:    1
 26558 ;; Hardware stack levels required when called:   17
 26559 ;; This function calls:
 26560 ;;		___fladd
 26561 ;;		___flmul
 26562 ;;		___flsub
 26563 ;; This function is called by:
 26564 ;;		_main
 26565 ;;		_convert_adc_data
 26566 ;;		_calc_model_data
 26567 ;; This function uses a reentrant model
 26568 ;;
 26569                           
 26570                           	psect	text105
 26571  01867E                     __ptext105:
 26572                           	opt callstack 0
 26573  01867E                     _lp_filter:
 26574                           	opt callstack 0
 26575                           
 26576                           ; BSR set to: 57
 26577                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26578  01867E  52E6               	movf	postinc1,f,c
 26579  018680  52E6               	movf	postinc1,f,c
 26580  018682  52E6               	movf	postinc1,f,c
 26581  018684  52E6               	movf	postinc1,f,c
 26582                           
 26583                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 26584                           ;stkvar	_bn @ sp[(-4)+-5]
 26585                           
 26586                           ;incstack = 0
 26587  018686  0EF7               	movlw	-9
 26588  018688  006F FF8C  F001    	movff	plusw1,btemp
 26589  01868E  0E14               	movlw	20
 26590  018690  6401               	cpfsgt	btemp^0,c
 26591  018692  D011               	goto	l10412
 26592  018694                     u9530:
 26593                           
 26594                           ;mbmc.c: 35:   return new;
 26595                           ;stkvar	_new @ sp[(-4)+-4]
 26596  018694  0EF8               	movlw	-8
 26597  018696  006F FF8C  F001    	movff	plusw1,btemp
 26598  01869C  0EF9               	movlw	-7
 26599  01869E  006F FF8C  F002    	movff	plusw1,btemp+1
 26600  0186A4  0EFA               	movlw	-6
 26601  0186A6  006F FF8C  F003    	movff	plusw1,btemp+2
 26602  0186AC  0EFB               	movlw	-5
 26603  0186AE  006F FF8C  F004    	movff	plusw1,btemp+3
 26604  0186B4  D0BD               	goto	l1832
 26605  0186B6                     l10412:
 26606                           
 26607                           ;mbmc.c: 37:  if (slow == (-1)) {
 26608                           ;stkvar	_slow @ sp[(-4)+-6]
 26609  0186B6  0EF6               	movlw	-10
 26610  0186B8  28E3               	incf	plusw1,w,c
 26611  0186BA  A4D8               	btfss	status,2,c
 26612  0186BC  D012               	goto	l10420
 26613                           
 26614                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 26615                           ;stkvar	_bn @ sp[(-4)+-5]
 26616  0186BE  0EF7               	movlw	-9
 26617  0186C0  50E3               	movf	plusw1,w,c
 26618  0186C2  0D04               	mullw	4
 26619  0186C4  0E00               	movlw	low lp_filter@smooth
 26620  0186C6  24F3               	addwf	243,w,c
 26621  0186C8  6ED9               	movwf	fsr2l,c
 26622  0186CA  0E02               	movlw	high lp_filter@smooth
 26623  0186CC  20F4               	addwfc	prodh,w,c
 26624  0186CE  6EDA               	movwf	fsr2h,c
 26625  0186D0  0E00               	movlw	0
 26626  0186D2  6EDE               	movwf	postinc2,c
 26627  0186D4  0E00               	movlw	0
 26628  0186D6  6EDE               	movwf	postinc2,c
 26629  0186D8  0E00               	movlw	0
 26630  0186DA  6EDE               	movwf	postinc2,c
 26631  0186DC  0E00               	movlw	0
 26632  0186DE  6EDD               	movwf	postdec2,c
 26633  0186E0  D7D9               	goto	u9530
 26634  0186E2                     l10420:
 26635                           
 26636                           ;mbmc.c: 42:  if (slow) {
 26637                           ;stkvar	_slow @ sp[(-4)+-6]
 26638  0186E2  0EF6               	movlw	-10
 26639  0186E4  50E3               	movf	plusw1,w,c
 26640  0186E6  B4D8               	btfsc	status,2,c
 26641  0186E8  D006               	goto	l10424
 26642                           
 26643                           ;mbmc.c: 43:   lp_speed = 0.033;
 26644  0186EA  0E02               	movlw	2
 26645  0186EC  6E09               	movwf	(btemp+8)^0,c
 26646  0186EE  0E2B               	movlw	43
 26647  0186F0  6E0A               	movwf	(btemp+9)^0,c
 26648  0186F2  0E07               	movlw	7
 26649  0186F4  D005               	goto	L31
 26650  0186F6                     l10424:
 26651                           
 26652                           ;mbmc.c: 45:   lp_speed = 0.066;
 26653  0186F6  0E02               	movlw	2
 26654  0186F8  6E09               	movwf	(btemp+8)^0,c
 26655  0186FA  0E2B               	movlw	43
 26656  0186FC  6E0A               	movwf	(btemp+9)^0,c
 26657  0186FE  0E87               	movlw	135
 26658  018700                     L31:
 26659  018700  6E0B               	movwf	(btemp+10)^0,c
 26660  018702  0E3D               	movlw	61
 26661  018704  6E0C               	movwf	(btemp+11)^0,c
 26662                           
 26663                           ;stkvar	_lp_speed @ sp[(-4)+0]
 26664  018706  0EFC               	movlw	-4
 26665  018708  0060  F027  FFE3   	movff	btemp+8,plusw1
 26666  01870E  0EFD               	movlw	-3
 26667  018710  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26668  018716  0EFE               	movlw	-2
 26669  018718  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26670  01871E  0EFF               	movlw	-1
 26671  018720  0060  F033  FFE3   	movff	btemp+11,plusw1
 26672                           
 26673                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 26674                           ;stkvar	_bn @ sp[(-4)+-5]
 26675  018726  0EF7               	movlw	-9
 26676  018728  50E3               	movf	plusw1,w,c
 26677  01872A  0D04               	mullw	4
 26678  01872C  0E00               	movlw	low lp_filter@smooth
 26679  01872E  24F3               	addwf	243,w,c
 26680  018730  6ED9               	movwf	fsr2l,c
 26681  018732  0E02               	movlw	high lp_filter@smooth
 26682  018734  20F4               	addwfc	prodh,w,c
 26683  018736  6EDA               	movwf	fsr2h,c
 26684  018738  006F FF7B FFE6     	movff	postinc2,postinc1
 26685  01873E  006F FF7B FFE6     	movff	postinc2,postinc1
 26686  018744  006F FF7B FFE6     	movff	postinc2,postinc1
 26687  01874A  006F FF7B FFE6     	movff	postinc2,postinc1
 26688                           
 26689                           ;stkvar	_lp_speed @ sp[(-8)+0]
 26690  018750  0EF8               	movlw	-8
 26691  018752  006F FF8F FFE6     	movff	plusw1,postinc1
 26692  018758  006F FF8F FFE6     	movff	plusw1,postinc1
 26693  01875E  006F FF8F FFE6     	movff	plusw1,postinc1
 26694  018764  006F FF8F FFE6     	movff	plusw1,postinc1
 26695                           
 26696                           ;stkvar	_bn @ sp[(-12)+-5]
 26697  01876A  0EEF               	movlw	-17
 26698  01876C  50E3               	movf	plusw1,w,c
 26699  01876E  0D04               	mullw	4
 26700  018770  0E00               	movlw	low lp_filter@smooth
 26701  018772  24F3               	addwf	243,w,c
 26702  018774  6ED9               	movwf	fsr2l,c
 26703  018776  0E02               	movlw	high lp_filter@smooth
 26704  018778  20F4               	addwfc	prodh,w,c
 26705  01877A  6EDA               	movwf	fsr2h,c
 26706  01877C  006F FF7B FFE6     	movff	postinc2,postinc1
 26707  018782  006F FF7B FFE6     	movff	postinc2,postinc1
 26708  018788  006F FF7B FFE6     	movff	postinc2,postinc1
 26709  01878E  006F FF7B FFE6     	movff	postinc2,postinc1
 26710                           
 26711                           ;stkvar	_new @ sp[(-16)+-4]
 26712  018794  0EEC               	movlw	-20
 26713  018796  006F FF8F FFE6     	movff	plusw1,postinc1
 26714  01879C  006F FF8F FFE6     	movff	plusw1,postinc1
 26715  0187A2  006F FF8F FFE6     	movff	plusw1,postinc1
 26716  0187A8  006F FF8F FFE6     	movff	plusw1,postinc1
 26717  0187AE  ECEF  F0DA         	call	___flsub	;wreg free
 26718  0187B2  0060  F007  FFE6   	movff	btemp,postinc1
 26719  0187B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26720  0187BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26721  0187C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 26722  0187CA  ECC1  F09E         	call	___flmul	;wreg free
 26723  0187CE  0060  F007  FFE6   	movff	btemp,postinc1
 26724  0187D4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26725  0187DA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26726  0187E0  0060  F013  FFE6   	movff	btemp+3,postinc1
 26727  0187E6  ECD6  F0A2         	call	___fladd	;wreg free
 26728                           
 26729                           ;stkvar	_bn @ sp[(-4)+-5]
 26730  0187EA  0EF7               	movlw	-9
 26731  0187EC  50E3               	movf	plusw1,w,c
 26732  0187EE  0D04               	mullw	4
 26733  0187F0  0E00               	movlw	low lp_filter@smooth
 26734  0187F2  24F3               	addwf	243,w,c
 26735  0187F4  6ED9               	movwf	fsr2l,c
 26736  0187F6  0E02               	movlw	high lp_filter@smooth
 26737  0187F8  20F4               	addwfc	prodh,w,c
 26738  0187FA  6EDA               	movwf	fsr2h,c
 26739  0187FC  0060  F007  FFDE   	movff	btemp,postinc2
 26740  018802  0060  F00B  FFDE   	movff	btemp+1,postinc2
 26741  018808  0060  F00F  FFDE   	movff	btemp+2,postinc2
 26742  01880E  0060  F013  FFDD   	movff	btemp+3,postdec2
 26743  018814  52DD               	movf	postdec2,f,c
 26744  018816  52DD               	movf	postdec2,f,c
 26745  018818  006F FF78  F001    	movff	postinc2,btemp
 26746  01881E  006F FF78  F002    	movff	postinc2,btemp+1
 26747  018824  006F FF78  F003    	movff	postinc2,btemp+2
 26748  01882A  006F FF78  F004    	movff	postinc2,btemp+3
 26749  018830                     l1832:
 26750                           
 26751                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 26752  018830  0EF6               	movlw	246
 26753  018832  26E1               	addwf	fsr1l,f,c
 26754  018834  0EFF               	movlw	255
 26755  018836  22E2               	addwfc	fsr1h,f,c
 26756  018838  0012               	return		;funcret
 26757  01883A                     __end_of_lp_filter:
 26758                           	opt callstack 0
 26759                           
 26760 ;; *************** function ___flsub *****************
 26761 ;; Defined at:
 26762 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26763 ;; Parameters:    Size  Location     Type
 26764 ;;  b               4  [STACK] float 
 26765 ;;  a               4  [STACK] float 
 26766 ;; Auto vars:     Size  Location     Type
 26767 ;;		None
 26768 ;; Return value:  Size  Location     Type
 26769 ;;                  4  [STACK] float 
 26770 ;; Registers used:
 26771 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26772 ;; Tracked objects:
 26773 ;;		On entry : 0/0
 26774 ;;		On exit  : 0/0
 26775 ;;		Unchanged: 0/0
 26776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26781 ;;Total ram usage:        0 bytes
 26782 ;; Hardware stack levels used:    1
 26783 ;; Hardware stack levels required when called:   16
 26784 ;; This function calls:
 26785 ;;		___fladd
 26786 ;; This function is called by:
 26787 ;;		_conv_raw_result
 26788 ;;		_lp_filter
 26789 ;;		_calc_model_data
 26790 ;;		_calc_ror_data
 26791 ;;		_esr_check
 26792 ;;		_efgtoa
 26793 ;; This function uses a reentrant model
 26794 ;;
 26795                           
 26796                           	psect	text106
 26797  01B5DE                     __ptext106:
 26798                           	opt callstack 0
 26799  01B5DE                     ___flsub:
 26800                           	opt callstack 0
 26801                           
 26802                           ;stkvar	_a @ sp[(0)+-8]
 26803                           
 26804                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26805                           ;incstack = 0
 26806 ;; hardware stack exceeded
 26807  01B5DE  0EFB               	movlw	-5
 26808  01B5E0  7EE3               	btg	plusw1,7,c
 26809                           
 26810                           ;stkvar	_a @ sp[(0)+-8]
 26811  01B5E2  0EF8               	movlw	-8
 26812  01B5E4  006F FF8F FFE6     	movff	plusw1,postinc1
 26813  01B5EA  006F FF8F FFE6     	movff	plusw1,postinc1
 26814  01B5F0  006F FF8F FFE6     	movff	plusw1,postinc1
 26815  01B5F6  006F FF8F FFE6     	movff	plusw1,postinc1
 26816                           
 26817                           ;stkvar	_b @ sp[(-4)+-4]
 26818  01B5FC  0EF8               	movlw	-8
 26819  01B5FE  006F FF8F FFE6     	movff	plusw1,postinc1
 26820  01B604  006F FF8F FFE6     	movff	plusw1,postinc1
 26821  01B60A  006F FF8F FFE6     	movff	plusw1,postinc1
 26822  01B610  006F FF8F FFE6     	movff	plusw1,postinc1
 26823  01B616  ECD6  F0A2         	call	___fladd	;wreg free
 26824                           
 26825                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 26826  01B61A  0EF8               	movlw	248
 26827  01B61C  26E1               	addwf	fsr1l,f,c
 26828  01B61E  0EFF               	movlw	255
 26829  01B620  22E2               	addwfc	fsr1h,f,c
 26830  01B622  0012               	return		;funcret
 26831  01B624                     __end_of___flsub:
 26832                           	opt callstack 0
 26833                           
 26834 ;; *************** function ___fladd *****************
 26835 ;; Defined at:
 26836 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26837 ;; Parameters:    Size  Location     Type
 26838 ;;  b               4  [STACK] float 
 26839 ;;  a               4  [STACK] float 
 26840 ;; Auto vars:     Size  Location     Type
 26841 ;;  grs             1  [STACK] unsigned char 
 26842 ;;  bexp            1  [STACK] unsigned char 
 26843 ;;  aexp            1  [STACK] unsigned char 
 26844 ;;  signs           1  [STACK] unsigned char 
 26845 ;; Return value:  Size  Location     Type
 26846 ;;                  4  [STACK] unsigned char 
 26847 ;; Registers used:
 26848 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26849 ;; Tracked objects:
 26850 ;;		On entry : 0/0
 26851 ;;		On exit  : 0/0
 26852 ;;		Unchanged: 0/0
 26853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26858 ;;Total ram usage:        0 bytes
 26859 ;; Hardware stack levels used:    1
 26860 ;; Hardware stack levels required when called:   15
 26861 ;; This function calls:
 26862 ;;		Nothing
 26863 ;; This function is called by:
 26864 ;;		_main
 26865 ;;		_conv_raw_result
 26866 ;;		_lp_filter
 26867 ;;		_calc_model_data
 26868 ;;		_efgtoa
 26869 ;;		___asfladd
 26870 ;;		___flsub
 26871 ;; This function uses a reentrant model
 26872 ;;
 26873                           
 26874                           	psect	text107
 26875  0145AC                     __ptext107:
 26876                           	opt callstack 0
 26877  0145AC                     ___fladd:
 26878                           	opt callstack 0
 26879                           
 26880                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26881  0145AC  52E6               	movf	postinc1,f,c
 26882  0145AE  52E6               	movf	postinc1,f,c
 26883  0145B0  52E6               	movf	postinc1,f,c
 26884  0145B2  52E6               	movf	postinc1,f,c
 26885                           
 26886                           ;stkvar	_b @ sp[(-4)+-4]
 26887                           
 26888                           ;incstack = 0
 26889 ;; hardware stack exceeded
 26890  0145B4  0EFB               	movlw	251
 26891  0145B6  24E1               	addwf	fsr1l,w,c
 26892  0145B8  6ED9               	movwf	fsr2l,c
 26893  0145BA  0EFF               	movlw	255
 26894  0145BC  20E2               	addwfc	fsr1h,w,c
 26895  0145BE  6EDA               	movwf	fsr2h,c
 26896  0145C0  50DF               	movf	indf2,w,c
 26897  0145C2  6E0C               	movwf	(btemp+11)^0,c
 26898  0145C4  0E80               	movlw	128
 26899  0145C6  160C               	andwf	(btemp+11)^0,f,c
 26900                           
 26901                           ;stkvar	_signs @ sp[(-4)+3]
 26902  0145C8  0EFF               	movlw	-1
 26903  0145CA  0060  F033  FFE3   	movff	btemp+11,plusw1
 26904                           
 26905                           ;stkvar	_b @ sp[(-4)+-4]
 26906  0145D0  0EFB               	movlw	251
 26907  0145D2  24E1               	addwf	fsr1l,w,c
 26908  0145D4  6ED9               	movwf	fsr2l,c
 26909  0145D6  0EFF               	movlw	255
 26910  0145D8  20E2               	addwfc	fsr1h,w,c
 26911  0145DA  6EDA               	movwf	fsr2h,c
 26912  0145DC  50DF               	movf	indf2,w,c
 26913  0145DE  6E0C               	movwf	(btemp+11)^0,c
 26914  0145E0  90D8               	bcf	status,0,c
 26915  0145E2  340C               	rlcf	(btemp+11)^0,w,c
 26916  0145E4  6E0B               	movwf	(btemp+10)^0,c
 26917                           
 26918                           ;stkvar	_bexp @ sp[(-4)+1]
 26919  0145E6  0EFD               	movlw	-3
 26920  0145E8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26921                           
 26922                           ;stkvar	_b @ sp[(-4)+-4]
 26923  0145EE  0EFA               	movlw	250
 26924  0145F0  24E1               	addwf	fsr1l,w,c
 26925  0145F2  6ED9               	movwf	fsr2l,c
 26926  0145F4  0EFF               	movlw	255
 26927  0145F6  20E2               	addwfc	fsr1h,w,c
 26928  0145F8  6EDA               	movwf	fsr2h,c
 26929  0145FA  AEDF               	btfss	indf2,7,c
 26930  0145FC  D002               	goto	l7718
 26931                           
 26932                           ;stkvar	_bexp @ sp[(-4)+1]
 26933  0145FE  0EFD               	movlw	-3
 26934  014600  80E3               	bsf	plusw1,0,c
 26935  014602                     l7718:
 26936                           
 26937                           ;stkvar	_bexp @ sp[(-4)+1]
 26938  014602  0EFD               	movlw	-3
 26939  014604  50E3               	movf	plusw1,w,c
 26940  014606  B4D8               	btfsc	status,2,c
 26941  014608  D027               	goto	l7728
 26942                           
 26943                           ;stkvar	_bexp @ sp[(-4)+1]
 26944  01460A  0EFD               	movlw	-3
 26945  01460C  28E3               	incf	plusw1,w,c
 26946  01460E  A4D8               	btfss	status,2,c
 26947  014610  D018               	goto	l7724
 26948  014612  0E00               	movlw	0
 26949  014614  6E09               	movwf	(btemp+8)^0,c
 26950  014616  0E00               	movlw	0
 26951  014618  6E0A               	movwf	(btemp+9)^0,c
 26952  01461A  0E00               	movlw	0
 26953  01461C  6E0B               	movwf	(btemp+10)^0,c
 26954  01461E  0E00               	movlw	0
 26955  014620  6E0C               	movwf	(btemp+11)^0,c
 26956                           
 26957                           ;stkvar	_b @ sp[(-4)+-4]
 26958  014622  0EF8               	movlw	-8
 26959  014624  0060  F027  FFE3   	movff	btemp+8,plusw1
 26960  01462A  0EF9               	movlw	-7
 26961  01462C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26962  014632  0EFA               	movlw	-6
 26963  014634  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26964  01463A  0EFB               	movlw	-5
 26965  01463C  0060  F033  FFE3   	movff	btemp+11,plusw1
 26966  014642                     l7724:
 26967                           
 26968                           ;stkvar	_b @ sp[(-4)+-4]
 26969  014642  0EFA               	movlw	-6
 26970  014644  8EE3               	bsf	plusw1,7,c
 26971                           
 26972                           ;stkvar	_b @ sp[(-4)+-4]
 26973  014646  0EFB               	movlw	251
 26974  014648  24E1               	addwf	fsr1l,w,c
 26975  01464A  6ED9               	movwf	fsr2l,c
 26976  01464C  0EFF               	movlw	255
 26977  01464E  20E2               	addwfc	fsr1h,w,c
 26978  014650  6EDA               	movwf	fsr2h,c
 26979  014652  0E00               	movlw	0
 26980  014654  6EDF               	movwf	indf2,c
 26981  014656  D018               	goto	l7730
 26982  014658                     l7728:
 26983  014658  0E00               	movlw	0
 26984  01465A  6E09               	movwf	(btemp+8)^0,c
 26985  01465C  0E00               	movlw	0
 26986  01465E  6E0A               	movwf	(btemp+9)^0,c
 26987  014660  0E00               	movlw	0
 26988  014662  6E0B               	movwf	(btemp+10)^0,c
 26989  014664  0E00               	movlw	0
 26990  014666  6E0C               	movwf	(btemp+11)^0,c
 26991                           
 26992                           ;stkvar	_b @ sp[(-4)+-4]
 26993  014668  0EF8               	movlw	-8
 26994  01466A  0060  F027  FFE3   	movff	btemp+8,plusw1
 26995  014670  0EF9               	movlw	-7
 26996  014672  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26997  014678  0EFA               	movlw	-6
 26998  01467A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26999  014680  0EFB               	movlw	-5
 27000  014682  0060  F033  FFE3   	movff	btemp+11,plusw1
 27001  014688                     l7730:
 27002                           
 27003                           ;stkvar	_a @ sp[(-4)+-8]
 27004  014688  0EF7               	movlw	247
 27005  01468A  24E1               	addwf	fsr1l,w,c
 27006  01468C  6ED9               	movwf	fsr2l,c
 27007  01468E  0EFF               	movlw	255
 27008  014690  20E2               	addwfc	fsr1h,w,c
 27009  014692  6EDA               	movwf	fsr2h,c
 27010  014694  50DF               	movf	indf2,w,c
 27011  014696  6E0C               	movwf	(btemp+11)^0,c
 27012  014698  0E80               	movlw	128
 27013  01469A  160C               	andwf	(btemp+11)^0,f,c
 27014                           
 27015                           ;stkvar	_aexp @ sp[(-4)+2]
 27016  01469C  0EFE               	movlw	-2
 27017  01469E  0060  F033  FFE3   	movff	btemp+11,plusw1
 27018                           
 27019                           ;stkvar	_signs @ sp[(-4)+3]
 27020                           ;stkvar	_aexp @ sp[(-4)+2]
 27021  0146A4  50E1               	movf	fsr1l,w,c
 27022  0146A6  0FFE               	addlw	-2
 27023  0146A8  6ED9               	movwf	fsr2l,c
 27024  0146AA  50E2               	movf	fsr1h,w,c
 27025  0146AC  6EDA               	movwf	fsr2h,c
 27026  0146AE  0EFF               	movlw	255
 27027  0146B0  22DA               	addwfc	fsr2h,f,c
 27028  0146B2  0EFF               	movlw	-1
 27029  0146B4  50E3               	movf	plusw1,w,c
 27030  0146B6  18DE               	xorwf	postinc2,w,c
 27031  0146B8  B4D8               	btfsc	status,2,c
 27032  0146BA  D002               	goto	l7736
 27033                           
 27034                           ;stkvar	_signs @ sp[(-4)+3]
 27035  0146BC  0EFF               	movlw	-1
 27036  0146BE  8CE3               	bsf	plusw1,6,c
 27037  0146C0                     l7736:
 27038                           
 27039                           ;stkvar	_a @ sp[(-4)+-8]
 27040  0146C0  0EF7               	movlw	247
 27041  0146C2  24E1               	addwf	fsr1l,w,c
 27042  0146C4  6ED9               	movwf	fsr2l,c
 27043  0146C6  0EFF               	movlw	255
 27044  0146C8  20E2               	addwfc	fsr1h,w,c
 27045  0146CA  6EDA               	movwf	fsr2h,c
 27046  0146CC  50DF               	movf	indf2,w,c
 27047  0146CE  6E0C               	movwf	(btemp+11)^0,c
 27048  0146D0  90D8               	bcf	status,0,c
 27049  0146D2  340C               	rlcf	(btemp+11)^0,w,c
 27050  0146D4  6E0B               	movwf	(btemp+10)^0,c
 27051                           
 27052                           ;stkvar	_aexp @ sp[(-4)+2]
 27053  0146D6  0EFE               	movlw	-2
 27054  0146D8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27055                           
 27056                           ;stkvar	_a @ sp[(-4)+-8]
 27057  0146DE  0EF6               	movlw	246
 27058  0146E0  24E1               	addwf	fsr1l,w,c
 27059  0146E2  6ED9               	movwf	fsr2l,c
 27060  0146E4  0EFF               	movlw	255
 27061  0146E6  20E2               	addwfc	fsr1h,w,c
 27062  0146E8  6EDA               	movwf	fsr2h,c
 27063  0146EA  AEDF               	btfss	indf2,7,c
 27064  0146EC  D002               	goto	l7742
 27065                           
 27066                           ;stkvar	_aexp @ sp[(-4)+2]
 27067  0146EE  0EFE               	movlw	-2
 27068  0146F0  80E3               	bsf	plusw1,0,c
 27069  0146F2                     l7742:
 27070                           
 27071                           ;stkvar	_aexp @ sp[(-4)+2]
 27072  0146F2  0EFE               	movlw	-2
 27073  0146F4  50E3               	movf	plusw1,w,c
 27074  0146F6  B4D8               	btfsc	status,2,c
 27075  0146F8  D027               	goto	l7752
 27076                           
 27077                           ;stkvar	_aexp @ sp[(-4)+2]
 27078  0146FA  0EFE               	movlw	-2
 27079  0146FC  28E3               	incf	plusw1,w,c
 27080  0146FE  A4D8               	btfss	status,2,c
 27081  014700  D018               	goto	l7748
 27082  014702  0E00               	movlw	0
 27083  014704  6E09               	movwf	(btemp+8)^0,c
 27084  014706  0E00               	movlw	0
 27085  014708  6E0A               	movwf	(btemp+9)^0,c
 27086  01470A  0E00               	movlw	0
 27087  01470C  6E0B               	movwf	(btemp+10)^0,c
 27088  01470E  0E00               	movlw	0
 27089  014710  6E0C               	movwf	(btemp+11)^0,c
 27090                           
 27091                           ;stkvar	_a @ sp[(-4)+-8]
 27092  014712  0EF4               	movlw	-12
 27093  014714  0060  F027  FFE3   	movff	btemp+8,plusw1
 27094  01471A  0EF5               	movlw	-11
 27095  01471C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27096  014722  0EF6               	movlw	-10
 27097  014724  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27098  01472A  0EF7               	movlw	-9
 27099  01472C  0060  F033  FFE3   	movff	btemp+11,plusw1
 27100  014732                     l7748:
 27101                           
 27102                           ;stkvar	_a @ sp[(-4)+-8]
 27103  014732  0EF6               	movlw	-10
 27104  014734  8EE3               	bsf	plusw1,7,c
 27105                           
 27106                           ;stkvar	_a @ sp[(-4)+-8]
 27107  014736  0EF7               	movlw	247
 27108  014738  24E1               	addwf	fsr1l,w,c
 27109  01473A  6ED9               	movwf	fsr2l,c
 27110  01473C  0EFF               	movlw	255
 27111  01473E  20E2               	addwfc	fsr1h,w,c
 27112  014740  6EDA               	movwf	fsr2h,c
 27113  014742  0E00               	movlw	0
 27114  014744  6EDF               	movwf	indf2,c
 27115  014746  D018               	goto	l7754
 27116  014748                     l7752:
 27117  014748  0E00               	movlw	0
 27118  01474A  6E09               	movwf	(btemp+8)^0,c
 27119  01474C  0E00               	movlw	0
 27120  01474E  6E0A               	movwf	(btemp+9)^0,c
 27121  014750  0E00               	movlw	0
 27122  014752  6E0B               	movwf	(btemp+10)^0,c
 27123  014754  0E00               	movlw	0
 27124  014756  6E0C               	movwf	(btemp+11)^0,c
 27125                           
 27126                           ;stkvar	_a @ sp[(-4)+-8]
 27127  014758  0EF4               	movlw	-12
 27128  01475A  0060  F027  FFE3   	movff	btemp+8,plusw1
 27129  014760  0EF5               	movlw	-11
 27130  014762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27131  014768  0EF6               	movlw	-10
 27132  01476A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27133  014770  0EF7               	movlw	-9
 27134  014772  0060  F033  FFE3   	movff	btemp+11,plusw1
 27135  014778                     l7754:
 27136                           
 27137                           ;stkvar	_bexp @ sp[(-4)+1]
 27138                           ;stkvar	_aexp @ sp[(-4)+2]
 27139  014778  50E1               	movf	fsr1l,w,c
 27140  01477A  0FFE               	addlw	-2
 27141  01477C  6ED9               	movwf	fsr2l,c
 27142  01477E  50E2               	movf	fsr1h,w,c
 27143  014780  6EDA               	movwf	fsr2h,c
 27144  014782  0EFF               	movlw	255
 27145  014784  22DA               	addwfc	fsr2h,f,c
 27146  014786  0EFD               	movlw	-3
 27147  014788  50E3               	movf	plusw1,w,c
 27148  01478A  5CDE               	subwf	postinc2,w,c
 27149  01478C  B0D8               	btfsc	status,0,c
 27150  01478E  D0A4               	goto	l7790
 27151                           
 27152                           ;stkvar	_signs @ sp[(-4)+3]
 27153  014790  0EFF               	movlw	-1
 27154  014792  ACE3               	btfss	plusw1,6,c
 27155  014794  D002               	goto	l7760
 27156                           
 27157                           ;stkvar	_signs @ sp[(-4)+3]
 27158  014796  0EFF               	movlw	-1
 27159  014798  7EE3               	btg	plusw1,7,c
 27160  01479A                     l7760:
 27161                           
 27162                           ;stkvar	_bexp @ sp[(-4)+1]
 27163                           ;stkvar	_grs @ sp[(-4)+0]
 27164  01479A  0EFD               	movlw	-3
 27165  01479C  006F FF8C  F001    	movff	plusw1,btemp
 27166  0147A2  0EFC               	movlw	-4
 27167  0147A4  0060  F007  FFE3   	movff	btemp,plusw1
 27168                           
 27169                           ;stkvar	_aexp @ sp[(-4)+2]
 27170                           ;stkvar	_bexp @ sp[(-4)+1]
 27171  0147AA  0EFE               	movlw	-2
 27172  0147AC  006F FF8C  F001    	movff	plusw1,btemp
 27173  0147B2  0EFD               	movlw	-3
 27174  0147B4  0060  F007  FFE3   	movff	btemp,plusw1
 27175                           
 27176                           ;stkvar	_grs @ sp[(-4)+0]
 27177                           ;stkvar	_aexp @ sp[(-4)+2]
 27178  0147BA  0EFC               	movlw	-4
 27179  0147BC  006F FF8C  F001    	movff	plusw1,btemp
 27180  0147C2  0EFE               	movlw	-2
 27181  0147C4  0060  F007  FFE3   	movff	btemp,plusw1
 27182                           
 27183                           ;stkvar	_b @ sp[(-4)+-4]
 27184                           ;stkvar	_grs @ sp[(-4)+0]
 27185  0147CA  0EF8               	movlw	-8
 27186  0147CC  006F FF8C  F001    	movff	plusw1,btemp
 27187  0147D2  0EFC               	movlw	-4
 27188  0147D4  0060  F007  FFE3   	movff	btemp,plusw1
 27189                           
 27190                           ;stkvar	_a @ sp[(-4)+-8]
 27191                           ;stkvar	_b @ sp[(-4)+-4]
 27192  0147DA  0EF4               	movlw	-12
 27193  0147DC  006F FF8C  F001    	movff	plusw1,btemp
 27194  0147E2  0EF8               	movlw	-8
 27195  0147E4  0060  F007  FFE3   	movff	btemp,plusw1
 27196                           
 27197                           ;stkvar	_grs @ sp[(-4)+0]
 27198                           ;stkvar	_a @ sp[(-4)+-8]
 27199  0147EA  0EFC               	movlw	-4
 27200  0147EC  006F FF8C  F001    	movff	plusw1,btemp
 27201  0147F2  0EF4               	movlw	-12
 27202  0147F4  0060  F007  FFE3   	movff	btemp,plusw1
 27203                           
 27204                           ;stkvar	_b @ sp[(-4)+-4]
 27205  0147FA  0EF9               	movlw	249
 27206  0147FC  24E1               	addwf	fsr1l,w,c
 27207  0147FE  6ED9               	movwf	fsr2l,c
 27208  014800  0EFF               	movlw	255
 27209  014802  20E2               	addwfc	fsr1h,w,c
 27210  014804  6EDA               	movwf	fsr2h,c
 27211  014806  50DF               	movf	indf2,w,c
 27212  014808  6E0C               	movwf	(btemp+11)^0,c
 27213                           
 27214                           ;stkvar	_grs @ sp[(-4)+0]
 27215  01480A  0EFC               	movlw	-4
 27216  01480C  0060  F033  FFE3   	movff	btemp+11,plusw1
 27217                           
 27218                           ;stkvar	_a @ sp[(-4)+-8]
 27219  014812  0EF5               	movlw	245
 27220  014814  24E1               	addwf	fsr1l,w,c
 27221  014816  6ED9               	movwf	fsr2l,c
 27222  014818  0EFF               	movlw	255
 27223  01481A  20E2               	addwfc	fsr1h,w,c
 27224  01481C  6EDA               	movwf	fsr2h,c
 27225                           
 27226                           ;stkvar	_b @ sp[(-4)+-4]
 27227  01481E  0EF9               	movlw	249
 27228  014820  24E1               	addwf	fsr1l,w,c
 27229  014822  6EE9               	movwf	fsr0l,c
 27230  014824  0EFF               	movlw	255
 27231  014826  20E2               	addwfc	fsr1h,w,c
 27232  014828  6EEA               	movwf	fsr0h,c
 27233  01482A  006F FF7F FFEF     	movff	indf2,indf0
 27234                           
 27235                           ;stkvar	_grs @ sp[(-4)+0]
 27236                           ;stkvar	_a @ sp[(-4)+-8]
 27237  014830  0EF5               	movlw	245
 27238  014832  24E1               	addwf	fsr1l,w,c
 27239  014834  6ED9               	movwf	fsr2l,c
 27240  014836  0EFF               	movlw	255
 27241  014838  20E2               	addwfc	fsr1h,w,c
 27242  01483A  6EDA               	movwf	fsr2h,c
 27243  01483C  0EFC               	movlw	-4
 27244  01483E  006F FF8F FFDF     	movff	plusw1,indf2
 27245                           
 27246                           ;stkvar	_b @ sp[(-4)+-4]
 27247  014844  0EFA               	movlw	250
 27248  014846  24E1               	addwf	fsr1l,w,c
 27249  014848  6ED9               	movwf	fsr2l,c
 27250  01484A  0EFF               	movlw	255
 27251  01484C  20E2               	addwfc	fsr1h,w,c
 27252  01484E  6EDA               	movwf	fsr2h,c
 27253  014850  50DF               	movf	indf2,w,c
 27254  014852  6E0C               	movwf	(btemp+11)^0,c
 27255                           
 27256                           ;stkvar	_grs @ sp[(-4)+0]
 27257  014854  0EFC               	movlw	-4
 27258  014856  0060  F033  FFE3   	movff	btemp+11,plusw1
 27259                           
 27260                           ;stkvar	_a @ sp[(-4)+-8]
 27261  01485C  0EF6               	movlw	246
 27262  01485E  24E1               	addwf	fsr1l,w,c
 27263  014860  6ED9               	movwf	fsr2l,c
 27264  014862  0EFF               	movlw	255
 27265  014864  20E2               	addwfc	fsr1h,w,c
 27266  014866  6EDA               	movwf	fsr2h,c
 27267                           
 27268                           ;stkvar	_b @ sp[(-4)+-4]
 27269  014868  0EFA               	movlw	250
 27270  01486A  24E1               	addwf	fsr1l,w,c
 27271  01486C  6EE9               	movwf	fsr0l,c
 27272  01486E  0EFF               	movlw	255
 27273  014870  20E2               	addwfc	fsr1h,w,c
 27274  014872  6EEA               	movwf	fsr0h,c
 27275  014874  006F FF7F FFEF     	movff	indf2,indf0
 27276                           
 27277                           ;stkvar	_grs @ sp[(-4)+0]
 27278                           ;stkvar	_a @ sp[(-4)+-8]
 27279  01487A  0EF6               	movlw	246
 27280  01487C  24E1               	addwf	fsr1l,w,c
 27281  01487E  6ED9               	movwf	fsr2l,c
 27282  014880  0EFF               	movlw	255
 27283  014882  20E2               	addwfc	fsr1h,w,c
 27284  014884  6EDA               	movwf	fsr2h,c
 27285  014886  0EFC               	movlw	-4
 27286  014888  006F FF8F FFDF     	movff	plusw1,indf2
 27287                           
 27288                           ;stkvar	_b @ sp[(-4)+-4]
 27289  01488E  0EFB               	movlw	251
 27290  014890  24E1               	addwf	fsr1l,w,c
 27291  014892  6ED9               	movwf	fsr2l,c
 27292  014894  0EFF               	movlw	255
 27293  014896  20E2               	addwfc	fsr1h,w,c
 27294  014898  6EDA               	movwf	fsr2h,c
 27295  01489A  50DF               	movf	indf2,w,c
 27296  01489C  6E0C               	movwf	(btemp+11)^0,c
 27297                           
 27298                           ;stkvar	_grs @ sp[(-4)+0]
 27299  01489E  0EFC               	movlw	-4
 27300  0148A0  0060  F033  FFE3   	movff	btemp+11,plusw1
 27301                           
 27302                           ;stkvar	_a @ sp[(-4)+-8]
 27303  0148A6  0EF7               	movlw	247
 27304  0148A8  24E1               	addwf	fsr1l,w,c
 27305  0148AA  6ED9               	movwf	fsr2l,c
 27306  0148AC  0EFF               	movlw	255
 27307  0148AE  20E2               	addwfc	fsr1h,w,c
 27308  0148B0  6EDA               	movwf	fsr2h,c
 27309                           
 27310                           ;stkvar	_b @ sp[(-4)+-4]
 27311  0148B2  0EFB               	movlw	251
 27312  0148B4  24E1               	addwf	fsr1l,w,c
 27313  0148B6  6EE9               	movwf	fsr0l,c
 27314  0148B8  0EFF               	movlw	255
 27315  0148BA  20E2               	addwfc	fsr1h,w,c
 27316  0148BC  6EEA               	movwf	fsr0h,c
 27317  0148BE  006F FF7F FFEF     	movff	indf2,indf0
 27318                           
 27319                           ;stkvar	_grs @ sp[(-4)+0]
 27320                           ;stkvar	_a @ sp[(-4)+-8]
 27321  0148C4  0EF7               	movlw	247
 27322  0148C6  24E1               	addwf	fsr1l,w,c
 27323  0148C8  6ED9               	movwf	fsr2l,c
 27324  0148CA  0EFF               	movlw	255
 27325  0148CC  20E2               	addwfc	fsr1h,w,c
 27326  0148CE  6EDA               	movwf	fsr2h,c
 27327  0148D0  0EFC               	movlw	-4
 27328  0148D2  006F FF8F FFDF     	movff	plusw1,indf2
 27329  0148D8                     l7790:
 27330                           
 27331                           ;stkvar	_grs @ sp[(-4)+0]
 27332  0148D8  0EFC               	movlw	-4
 27333  0148DA  6AE3               	clrf	plusw1,c
 27334                           
 27335                           ;stkvar	_aexp @ sp[(-4)+2]
 27336  0148DC  0EFE               	movlw	-2
 27337  0148DE  50E3               	movf	plusw1,w,c
 27338  0148E0  6E0B               	movwf	(btemp+10)^0,c
 27339  0148E2  6A0C               	clrf	(btemp+11)^0,c
 27340                           
 27341                           ;stkvar	_bexp @ sp[(-4)+1]
 27342  0148E4  0EFD               	movlw	-3
 27343  0148E6  50E3               	movf	plusw1,w,c
 27344  0148E8  5E0B               	subwf	(btemp+10)^0,f,c
 27345  0148EA  0E00               	movlw	0
 27346  0148EC  5A0C               	subwfb	(btemp+11)^0,f,c
 27347  0148EE  BE0C               	btfsc	(btemp+11)^0,7,c
 27348  0148F0  D062               	goto	l7814
 27349  0148F2  500C               	movf	(btemp+11)^0,w,c
 27350  0148F4  E104               	bnz	u5540
 27351  0148F6  0E1A               	movlw	26
 27352  0148F8  5C0B               	subwf	(btemp+10)^0,w,c
 27353  0148FA  A0D8               	btfss	status,0,c
 27354  0148FC  D05C               	goto	l7814
 27355  0148FE                     u5540:
 27356                           
 27357                           ;stkvar	_b @ sp[(-4)+-4]
 27358  0148FE  0EF8               	movlw	-8
 27359  014900  50E3               	movf	plusw1,w,c
 27360  014902  E10A               	bnz	u5551
 27361  014904  0EF9               	movlw	-7
 27362  014906  50E3               	movf	plusw1,w,c
 27363  014908  E107               	bnz	u5551
 27364  01490A  0EFA               	movlw	-6
 27365  01490C  50E3               	movf	plusw1,w,c
 27366  01490E  E104               	bnz	u5551
 27367  014910  0EFB               	movlw	-5
 27368  014912  50E3               	movf	plusw1,w,c
 27369  014914  B4D8               	btfsc	status,2,c
 27370  014916  D003               	goto	u5550
 27371  014918                     u5551:
 27372  014918  6A0C               	clrf	(btemp+11)^0,c
 27373  01491A  2A0C               	incf	(btemp+11)^0,f,c
 27374  01491C  D001               	goto	u5568
 27375  01491E                     u5550:
 27376  01491E  6A0C               	clrf	(btemp+11)^0,c
 27377  014920                     u5568:
 27378                           
 27379                           ;stkvar	_grs @ sp[(-4)+0]
 27380  014920  0EFC               	movlw	-4
 27381  014922  0060  F033  FFE3   	movff	btemp+11,plusw1
 27382                           
 27383                           ;stkvar	_b @ sp[(-4)+-4]
 27384  014928  0EF8               	movlw	-8
 27385  01492A  6AE3               	clrf	plusw1,c
 27386  01492C  0EF9               	movlw	-7
 27387  01492E  6AE3               	clrf	plusw1,c
 27388  014930  0EFA               	movlw	-6
 27389  014932  6AE3               	clrf	plusw1,c
 27390  014934  0EFB               	movlw	-5
 27391  014936  6AE3               	clrf	plusw1,c
 27392                           
 27393                           ;stkvar	_aexp @ sp[(-4)+2]
 27394                           ;stkvar	_bexp @ sp[(-4)+1]
 27395  014938  0EFE               	movlw	-2
 27396  01493A  006F FF8C  F001    	movff	plusw1,btemp
 27397  014940  0EFD               	movlw	-3
 27398  014942  0060  F007  FFE3   	movff	btemp,plusw1
 27399  014948  D042               	goto	u5600
 27400  01494A                     l7800:
 27401                           
 27402                           ;stkvar	_grs @ sp[(-4)+0]
 27403  01494A  0EFC               	movlw	-4
 27404  01494C  A0E3               	btfss	plusw1,0,c
 27405  01494E  D00D               	goto	l7804
 27406                           
 27407                           ;stkvar	_grs @ sp[(-4)+0]
 27408  014950  0EFC               	movlw	-4
 27409  014952  006F FF8C  F00C    	movff	plusw1,btemp+11
 27410  014958  90D8               	bcf	status,0,c
 27411  01495A  320C               	rrcf	(btemp+11)^0,f,c
 27412  01495C  0E01               	movlw	1
 27413  01495E  120C               	iorwf	(btemp+11)^0,f,c
 27414                           
 27415                           ;stkvar	_grs @ sp[(-4)+0]
 27416  014960  0EFC               	movlw	-4
 27417  014962  0060  F033  FFE3   	movff	btemp+11,plusw1
 27418  014968  D009               	goto	l7806
 27419  01496A                     l7804:
 27420                           
 27421                           ;stkvar	_grs @ sp[(-4)+0]
 27422  01496A  50E1               	movf	fsr1l,w,c
 27423  01496C  0FFC               	addlw	-4
 27424  01496E  6ED9               	movwf	fsr2l,c
 27425  014970  50E2               	movf	fsr1h,w,c
 27426  014972  6EDA               	movwf	fsr2h,c
 27427  014974  0EFF               	movlw	255
 27428  014976  22DA               	addwfc	fsr2h,f,c
 27429  014978  90D8               	bcf	status,0,c
 27430  01497A  32DF               	rrcf	indf2,f,c
 27431  01497C                     l7806:
 27432                           
 27433                           ;stkvar	_b @ sp[(-4)+-4]
 27434  01497C  0EF8               	movlw	-8
 27435  01497E  A0E3               	btfss	plusw1,0,c
 27436  014980  D002               	goto	l7810
 27437                           
 27438                           ;stkvar	_grs @ sp[(-4)+0]
 27439  014982  0EFC               	movlw	-4
 27440  014984  8EE3               	bsf	plusw1,7,c
 27441  014986                     l7810:
 27442  014986  0E01               	movlw	1
 27443  014988  6E0C               	movwf	(btemp+11)^0,c
 27444                           
 27445                           ;stkvar	_b @ sp[(-4)+-4]
 27446  01498A  50E1               	movf	fsr1l,w,c
 27447  01498C  0FF8               	addlw	-8
 27448  01498E  6ED9               	movwf	fsr2l,c
 27449  014990  50E2               	movf	fsr1h,w,c
 27450  014992  6EDA               	movwf	fsr2h,c
 27451  014994  0EFF               	movlw	255
 27452  014996  22DA               	addwfc	fsr2h,f,c
 27453  014998  280C               	incf	(btemp+11)^0,w,c
 27454  01499A  52DE               	movf	postinc2,f,c
 27455  01499C  D008               	goto	u5590
 27456  01499E                     u5595:
 27457  01499E  52DE               	movf	postinc2,f,c
 27458  0149A0  90D8               	bcf	status,0,c
 27459  0149A2  BEDC               	btfsc	preinc2,7,c
 27460  0149A4  80D8               	bsf	status,0,c
 27461  0149A6  32DD               	rrcf	postdec2,f,c
 27462  0149A8  32DD               	rrcf	postdec2,f,c
 27463  0149AA  32DD               	rrcf	postdec2,f,c
 27464  0149AC  32DE               	rrcf	postinc2,f,c
 27465  0149AE                     u5590:
 27466  0149AE  2EE8               	decfsz	wreg,f,c
 27467  0149B0  D7F6               	goto	u5595
 27468                           
 27469                           ;stkvar	_bexp @ sp[(-4)+1]
 27470  0149B2  0EFD               	movlw	-3
 27471  0149B4  2AE3               	incf	plusw1,f,c
 27472  0149B6                     l7814:
 27473                           
 27474                           ;stkvar	_aexp @ sp[(-4)+2]
 27475                           ;stkvar	_bexp @ sp[(-4)+1]
 27476  0149B6  50E1               	movf	fsr1l,w,c
 27477  0149B8  0FFD               	addlw	-3
 27478  0149BA  6ED9               	movwf	fsr2l,c
 27479  0149BC  50E2               	movf	fsr1h,w,c
 27480  0149BE  6EDA               	movwf	fsr2h,c
 27481  0149C0  0EFF               	movlw	255
 27482  0149C2  22DA               	addwfc	fsr2h,f,c
 27483  0149C4  0EFE               	movlw	-2
 27484  0149C6  50E3               	movf	plusw1,w,c
 27485  0149C8  5CDE               	subwf	postinc2,w,c
 27486  0149CA  A0D8               	btfss	status,0,c
 27487  0149CC  D7BE               	goto	l7800
 27488  0149CE                     u5600:
 27489                           
 27490                           ;stkvar	_signs @ sp[(-4)+3]
 27491  0149CE  0EFF               	movlw	-1
 27492  0149D0  BCE3               	btfsc	plusw1,6,c
 27493  0149D2  D066               	goto	l7842
 27494                           
 27495                           ;stkvar	_bexp @ sp[(-4)+1]
 27496  0149D4  0EFD               	movlw	-3
 27497  0149D6  50E3               	movf	plusw1,w,c
 27498  0149D8  B4D8               	btfsc	status,2,c
 27499  0149DA  D0F2               	goto	u5700
 27500                           
 27501                           ;stkvar	_a @ sp[(-4)+-8]
 27502                           ;stkvar	_b @ sp[(-4)+-4]
 27503  0149DC  0EF8               	movlw	-8
 27504  0149DE  50E3               	movf	plusw1,w,c
 27505  0149E0  6E01               	movwf	btemp^0,c
 27506  0149E2  0EF4               	movlw	-12
 27507  0149E4  50E3               	movf	plusw1,w,c
 27508  0149E6  2601               	addwf	btemp^0,f,c
 27509  0149E8  0EF8               	movlw	-8
 27510  0149EA  0060  F007  FFE3   	movff	btemp,plusw1
 27511  0149F0  0EF9               	movlw	-7
 27512  0149F2  50E3               	movf	plusw1,w,c
 27513  0149F4  6E01               	movwf	btemp^0,c
 27514  0149F6  0EF5               	movlw	-11
 27515  0149F8  50E3               	movf	plusw1,w,c
 27516  0149FA  2201               	addwfc	btemp^0,f,c
 27517  0149FC  0EF9               	movlw	-7
 27518  0149FE  0060  F007  FFE3   	movff	btemp,plusw1
 27519  014A04  0EFA               	movlw	-6
 27520  014A06  50E3               	movf	plusw1,w,c
 27521  014A08  6E01               	movwf	btemp^0,c
 27522  014A0A  0EF6               	movlw	-10
 27523  014A0C  50E3               	movf	plusw1,w,c
 27524  014A0E  2201               	addwfc	btemp^0,f,c
 27525  014A10  0EFA               	movlw	-6
 27526  014A12  0060  F007  FFE3   	movff	btemp,plusw1
 27527  014A18  0EFB               	movlw	-5
 27528  014A1A  50E3               	movf	plusw1,w,c
 27529  014A1C  6E01               	movwf	btemp^0,c
 27530  014A1E  0EF7               	movlw	-9
 27531  014A20  50E3               	movf	plusw1,w,c
 27532  014A22  2201               	addwfc	btemp^0,f,c
 27533  014A24  0EFB               	movlw	-5
 27534  014A26  0060  F007  FFE3   	movff	btemp,plusw1
 27535                           
 27536                           ;stkvar	_b @ sp[(-4)+-4]
 27537  014A2C  0EFB               	movlw	-5
 27538  014A2E  A0E3               	btfss	plusw1,0,c
 27539  014A30  D101               	goto	u5740
 27540                           
 27541                           ;stkvar	_grs @ sp[(-4)+0]
 27542  014A32  0EFC               	movlw	-4
 27543  014A34  A0E3               	btfss	plusw1,0,c
 27544  014A36  D00D               	goto	l7832
 27545                           
 27546                           ;stkvar	_grs @ sp[(-4)+0]
 27547  014A38  0EFC               	movlw	-4
 27548  014A3A  006F FF8C  F00C    	movff	plusw1,btemp+11
 27549  014A40  90D8               	bcf	status,0,c
 27550  014A42  320C               	rrcf	(btemp+11)^0,f,c
 27551  014A44  0E01               	movlw	1
 27552  014A46  120C               	iorwf	(btemp+11)^0,f,c
 27553                           
 27554                           ;stkvar	_grs @ sp[(-4)+0]
 27555  014A48  0EFC               	movlw	-4
 27556  014A4A  0060  F033  FFE3   	movff	btemp+11,plusw1
 27557  014A50  D009               	goto	l7834
 27558  014A52                     l7832:
 27559                           
 27560                           ;stkvar	_grs @ sp[(-4)+0]
 27561  014A52  50E1               	movf	fsr1l,w,c
 27562  014A54  0FFC               	addlw	-4
 27563  014A56  6ED9               	movwf	fsr2l,c
 27564  014A58  50E2               	movf	fsr1h,w,c
 27565  014A5A  6EDA               	movwf	fsr2h,c
 27566  014A5C  0EFF               	movlw	255
 27567  014A5E  22DA               	addwfc	fsr2h,f,c
 27568  014A60  90D8               	bcf	status,0,c
 27569  014A62  32DF               	rrcf	indf2,f,c
 27570  014A64                     l7834:
 27571                           
 27572                           ;stkvar	_b @ sp[(-4)+-4]
 27573  014A64  0EF8               	movlw	-8
 27574  014A66  A0E3               	btfss	plusw1,0,c
 27575  014A68  D002               	goto	l7838
 27576                           
 27577                           ;stkvar	_grs @ sp[(-4)+0]
 27578  014A6A  0EFC               	movlw	-4
 27579  014A6C  8EE3               	bsf	plusw1,7,c
 27580  014A6E                     l7838:
 27581  014A6E  0E01               	movlw	1
 27582  014A70  6E0C               	movwf	(btemp+11)^0,c
 27583                           
 27584                           ;stkvar	_b @ sp[(-4)+-4]
 27585  014A72  50E1               	movf	fsr1l,w,c
 27586  014A74  0FF8               	addlw	-8
 27587  014A76  6ED9               	movwf	fsr2l,c
 27588  014A78  50E2               	movf	fsr1h,w,c
 27589  014A7A  6EDA               	movwf	fsr2h,c
 27590  014A7C  0EFF               	movlw	255
 27591  014A7E  22DA               	addwfc	fsr2h,f,c
 27592  014A80  280C               	incf	(btemp+11)^0,w,c
 27593  014A82  52DE               	movf	postinc2,f,c
 27594  014A84  D008               	goto	u5660
 27595  014A86                     u5665:
 27596  014A86  52DE               	movf	postinc2,f,c
 27597  014A88  90D8               	bcf	status,0,c
 27598  014A8A  BEDC               	btfsc	preinc2,7,c
 27599  014A8C  80D8               	bsf	status,0,c
 27600  014A8E  32DD               	rrcf	postdec2,f,c
 27601  014A90  32DD               	rrcf	postdec2,f,c
 27602  014A92  32DD               	rrcf	postdec2,f,c
 27603  014A94  32DE               	rrcf	postinc2,f,c
 27604  014A96                     u5660:
 27605  014A96  2EE8               	decfsz	wreg,f,c
 27606  014A98  D7F6               	goto	u5665
 27607                           
 27608                           ;stkvar	_bexp @ sp[(-4)+1]
 27609  014A9A  0EFD               	movlw	-3
 27610  014A9C  2AE3               	incf	plusw1,f,c
 27611  014A9E  D0CA               	goto	u5740
 27612  014AA0                     l7842:
 27613                           
 27614                           ;stkvar	_a @ sp[(-4)+-8]
 27615                           ;stkvar	_b @ sp[(-4)+-4]
 27616  014AA0  50E1               	movf	fsr1l,w,c
 27617  014AA2  0FF8               	addlw	-8
 27618  014AA4  6ED9               	movwf	fsr2l,c
 27619  014AA6  50E2               	movf	fsr1h,w,c
 27620  014AA8  6EDA               	movwf	fsr2h,c
 27621  014AAA  0EFF               	movlw	255
 27622  014AAC  22DA               	addwfc	fsr2h,f,c
 27623  014AAE  0EF4               	movlw	-12
 27624  014AB0  50E3               	movf	plusw1,w,c
 27625  014AB2  5CDE               	subwf	postinc2,w,c
 27626  014AB4  0EF5               	movlw	-11
 27627  014AB6  50E3               	movf	plusw1,w,c
 27628  014AB8  58DE               	subwfb	postinc2,w,c
 27629  014ABA  0EF6               	movlw	-10
 27630  014ABC  50E3               	movf	plusw1,w,c
 27631  014ABE  58DE               	subwfb	postinc2,w,c
 27632  014AC0  50DE               	movf	postinc2,w,c
 27633  014AC2  0A80               	xorlw	128
 27634  014AC4  6E01               	movwf	btemp^0,c
 27635  014AC6  0EF7               	movlw	-9
 27636  014AC8  50E3               	movf	plusw1,w,c
 27637  014ACA  0A80               	xorlw	128
 27638  014ACC  5801               	subwfb	btemp^0,w,c
 27639  014ACE  B0D8               	btfsc	status,0,c
 27640  014AD0  D053               	goto	l7854
 27641                           
 27642                           ;stkvar	_b @ sp[(-4)+-4]
 27643                           ;stkvar	_a @ sp[(-4)+-8]
 27644  014AD2  0EF4               	movlw	-12
 27645  014AD4  006F FF8C  F009    	movff	plusw1,btemp+8
 27646  014ADA  0EF5               	movlw	-11
 27647  014ADC  006F FF8C  F00A    	movff	plusw1,btemp+9
 27648  014AE2  0EF6               	movlw	-10
 27649  014AE4  006F FF8C  F00B    	movff	plusw1,btemp+10
 27650  014AEA  0EF7               	movlw	-9
 27651  014AEC  006F FF8C  F00C    	movff	plusw1,btemp+11
 27652  014AF2  0EF8               	movlw	-8
 27653  014AF4  50E3               	movf	plusw1,w,c
 27654  014AF6  5E09               	subwf	(btemp+8)^0,f,c
 27655  014AF8  0EF9               	movlw	-7
 27656  014AFA  50E3               	movf	plusw1,w,c
 27657  014AFC  5A0A               	subwfb	(btemp+9)^0,f,c
 27658  014AFE  0EFA               	movlw	-6
 27659  014B00  50E3               	movf	plusw1,w,c
 27660  014B02  5A0B               	subwfb	(btemp+10)^0,f,c
 27661  014B04  0EFB               	movlw	-5
 27662  014B06  50E3               	movf	plusw1,w,c
 27663  014B08  5A0C               	subwfb	(btemp+11)^0,f,c
 27664  014B0A  0EFF               	movlw	255
 27665  014B0C  2409               	addwf	(btemp+8)^0,w,c
 27666  014B0E  6E05               	movwf	(btemp+4)^0,c
 27667  014B10  0EFF               	movlw	255
 27668  014B12  200A               	addwfc	(btemp+9)^0,w,c
 27669  014B14  6E06               	movwf	(btemp+5)^0,c
 27670  014B16  0EFF               	movlw	255
 27671  014B18  200B               	addwfc	(btemp+10)^0,w,c
 27672  014B1A  6E07               	movwf	(btemp+6)^0,c
 27673  014B1C  0EFF               	movlw	255
 27674  014B1E  200C               	addwfc	(btemp+11)^0,w,c
 27675  014B20  6E08               	movwf	(btemp+7)^0,c
 27676                           
 27677                           ;stkvar	_b @ sp[(-4)+-4]
 27678  014B22  0EF8               	movlw	-8
 27679  014B24  0060  F017  FFE3   	movff	btemp+4,plusw1
 27680  014B2A  0EF9               	movlw	-7
 27681  014B2C  0060  F01B  FFE3   	movff	btemp+5,plusw1
 27682  014B32  0EFA               	movlw	-6
 27683  014B34  0060  F01F  FFE3   	movff	btemp+6,plusw1
 27684  014B3A  0EFB               	movlw	-5
 27685  014B3C  0060  F023  FFE3   	movff	btemp+7,plusw1
 27686                           
 27687                           ;stkvar	_signs @ sp[(-4)+3]
 27688  014B42  0EFF               	movlw	-1
 27689  014B44  7EE3               	btg	plusw1,7,c
 27690                           
 27691                           ;stkvar	_grs @ sp[(-4)+0]
 27692  014B46  0EFC               	movlw	-4
 27693  014B48  50E3               	movf	plusw1,w,c
 27694  014B4A  0800               	sublw	0
 27695  014B4C  6E0C               	movwf	(btemp+11)^0,c
 27696                           
 27697                           ;stkvar	_grs @ sp[(-4)+0]
 27698  014B4E  0EFC               	movlw	-4
 27699  014B50  0060  F033  FFE3   	movff	btemp+11,plusw1
 27700                           
 27701                           ;stkvar	_grs @ sp[(-4)+0]
 27702  014B56  0EFC               	movlw	-4
 27703  014B58  50E3               	movf	plusw1,w,c
 27704  014B5A  A4D8               	btfss	status,2,c
 27705  014B5C  D020               	goto	l7856
 27706                           
 27707                           ;stkvar	_b @ sp[(-4)+-4]
 27708  014B5E  50E1               	movf	fsr1l,w,c
 27709  014B60  0FF8               	addlw	-8
 27710  014B62  6ED9               	movwf	fsr2l,c
 27711  014B64  50E2               	movf	fsr1h,w,c
 27712  014B66  6EDA               	movwf	fsr2h,c
 27713  014B68  0EFF               	movlw	255
 27714  014B6A  22DA               	addwfc	fsr2h,f,c
 27715  014B6C  2ADE               	incf	postinc2,f,c
 27716  014B6E  0E00               	movlw	0
 27717  014B70  22DE               	addwfc	postinc2,f,c
 27718  014B72  22DE               	addwfc	postinc2,f,c
 27719  014B74  22DE               	addwfc	postinc2,f,c
 27720  014B76  D013               	goto	l7856
 27721  014B78                     l7854:
 27722                           
 27723                           ;stkvar	_a @ sp[(-4)+-8]
 27724                           ;stkvar	_b @ sp[(-4)+-4]
 27725  014B78  50E1               	movf	fsr1l,w,c
 27726  014B7A  0FF8               	addlw	-8
 27727  014B7C  6ED9               	movwf	fsr2l,c
 27728  014B7E  50E2               	movf	fsr1h,w,c
 27729  014B80  6EDA               	movwf	fsr2h,c
 27730  014B82  0EFF               	movlw	255
 27731  014B84  22DA               	addwfc	fsr2h,f,c
 27732  014B86  0EF4               	movlw	-12
 27733  014B88  50E3               	movf	plusw1,w,c
 27734  014B8A  5EDE               	subwf	postinc2,f,c
 27735  014B8C  0EF5               	movlw	-11
 27736  014B8E  50E3               	movf	plusw1,w,c
 27737  014B90  5ADE               	subwfb	postinc2,f,c
 27738  014B92  0EF6               	movlw	-10
 27739  014B94  50E3               	movf	plusw1,w,c
 27740  014B96  5ADE               	subwfb	postinc2,f,c
 27741  014B98  0EF7               	movlw	-9
 27742  014B9A  50E3               	movf	plusw1,w,c
 27743  014B9C  5ADE               	subwfb	postinc2,f,c
 27744  014B9E                     l7856:
 27745                           
 27746                           ;stkvar	_b @ sp[(-4)+-4]
 27747  014B9E  0EF8               	movlw	-8
 27748  014BA0  50E3               	movf	plusw1,w,c
 27749  014BA2  E145               	bnz	l7878
 27750  014BA4  0EF9               	movlw	-7
 27751  014BA6  50E3               	movf	plusw1,w,c
 27752  014BA8  E142               	bnz	l7878
 27753  014BAA  0EFA               	movlw	-6
 27754  014BAC  50E3               	movf	plusw1,w,c
 27755  014BAE  E13F               	bnz	l7878
 27756  014BB0  0EFB               	movlw	-5
 27757  014BB2  50E3               	movf	plusw1,w,c
 27758  014BB4  A4D8               	btfss	status,2,c
 27759  014BB6  D03B               	goto	l7878
 27760                           
 27761                           ;stkvar	_grs @ sp[(-4)+0]
 27762  014BB8  0EFC               	movlw	-4
 27763  014BBA  50E3               	movf	plusw1,w,c
 27764  014BBC  A4D8               	btfss	status,2,c
 27765  014BBE  D037               	goto	l7878
 27766  014BC0                     u5700:
 27767  014BC0  0E00               	movlw	0
 27768  014BC2  6E01               	movwf	btemp^0,c
 27769  014BC4  0E00               	movlw	0
 27770  014BC6  6E02               	movwf	(btemp+1)^0,c
 27771  014BC8  0E00               	movlw	0
 27772  014BCA  6E03               	movwf	(btemp+2)^0,c
 27773  014BCC  0E00               	movlw	0
 27774  014BCE  6E04               	movwf	(btemp+3)^0,c
 27775  014BD0  D0C6               	goto	l2932
 27776  014BD2                     l7864:
 27777                           
 27778                           ;stkvar	_b @ sp[(-4)+-4]
 27779  014BD2  90D8               	bcf	status,0,c
 27780  014BD4  0EF8               	movlw	-8
 27781  014BD6  36E3               	rlcf	plusw1,f,c
 27782  014BD8  0EF9               	movlw	-7
 27783  014BDA  36E3               	rlcf	plusw1,f,c
 27784  014BDC  0EFA               	movlw	-6
 27785  014BDE  36E3               	rlcf	plusw1,f,c
 27786  014BE0  0EFB               	movlw	-5
 27787  014BE2  36E3               	rlcf	plusw1,f,c
 27788                           
 27789                           ;stkvar	_grs @ sp[(-4)+0]
 27790  014BE4  0EFC               	movlw	-4
 27791  014BE6  AEE3               	btfss	plusw1,7,c
 27792  014BE8  D002               	goto	l2944
 27793                           
 27794                           ;stkvar	_b @ sp[(-4)+-4]
 27795  014BEA  0EF8               	movlw	-8
 27796  014BEC  80E3               	bsf	plusw1,0,c
 27797  014BEE                     l2944:
 27798                           
 27799                           ;stkvar	_grs @ sp[(-4)+0]
 27800  014BEE  0EFC               	movlw	-4
 27801  014BF0  A0E3               	btfss	plusw1,0,c
 27802  014BF2  D00E               	goto	l7872
 27803                           
 27804                           ;stkvar	_grs @ sp[(-4)+0]
 27805  014BF4  0EFC               	movlw	-4
 27806  014BF6  006F FF8C  F00C    	movff	plusw1,btemp+11
 27807  014BFC  90D8               	bcf	status,0,c
 27808  014BFE  340C               	rlcf	(btemp+11)^0,w,c
 27809  014C00  6E0B               	movwf	(btemp+10)^0,c
 27810  014C02  0E01               	movlw	1
 27811  014C04  120B               	iorwf	(btemp+10)^0,f,c
 27812                           
 27813                           ;stkvar	_grs @ sp[(-4)+0]
 27814  014C06  0EFC               	movlw	-4
 27815  014C08  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27816  014C0E  D009               	goto	l7874
 27817  014C10                     l7872:
 27818                           
 27819                           ;stkvar	_grs @ sp[(-4)+0]
 27820  014C10  50E1               	movf	fsr1l,w,c
 27821  014C12  0FFC               	addlw	-4
 27822  014C14  6ED9               	movwf	fsr2l,c
 27823  014C16  50E2               	movf	fsr1h,w,c
 27824  014C18  6EDA               	movwf	fsr2h,c
 27825  014C1A  0EFF               	movlw	255
 27826  014C1C  22DA               	addwfc	fsr2h,f,c
 27827  014C1E  90D8               	bcf	status,0,c
 27828  014C20  36DF               	rlcf	indf2,f,c
 27829  014C22                     l7874:
 27830                           
 27831                           ;stkvar	_bexp @ sp[(-4)+1]
 27832  014C22  0EFD               	movlw	-3
 27833  014C24  50E3               	movf	plusw1,w,c
 27834  014C26  B4D8               	btfsc	status,2,c
 27835  014C28  D002               	goto	l7878
 27836                           
 27837                           ;stkvar	_bexp @ sp[(-4)+1]
 27838  014C2A  0EFD               	movlw	-3
 27839  014C2C  06E3               	decf	plusw1,f,c
 27840  014C2E                     l7878:
 27841                           
 27842                           ;stkvar	_b @ sp[(-4)+-4]
 27843  014C2E  0EFA               	movlw	-6
 27844  014C30  AEE3               	btfss	plusw1,7,c
 27845  014C32  D7CF               	goto	l7864
 27846  014C34                     u5740:
 27847                           
 27848                           ;stkvar	_aexp @ sp[(-4)+2]
 27849  014C34  0EFE               	movlw	-2
 27850  014C36  6AE3               	clrf	plusw1,c
 27851                           
 27852                           ;stkvar	_grs @ sp[(-4)+0]
 27853  014C38  0EFC               	movlw	-4
 27854  014C3A  AEE3               	btfss	plusw1,7,c
 27855  014C3C  D00F               	goto	l7892
 27856                           
 27857                           ;stkvar	_grs @ sp[(-4)+0]
 27858  014C3E  0EFC               	movlw	-4
 27859  014C40  006F FF8C  F00C    	movff	plusw1,btemp+11
 27860  014C46  0E7F               	movlw	127
 27861  014C48  160C               	andwf	(btemp+11)^0,f,c
 27862  014C4A  B4D8               	btfsc	status,2,c
 27863  014C4C  D004               	goto	l7888
 27864  014C4E                     u5760:
 27865                           
 27866                           ;stkvar	_aexp @ sp[(-4)+2]
 27867  014C4E  0EFE               	movlw	-2
 27868  014C50  6AE3               	clrf	plusw1,c
 27869  014C52  2AE3               	incf	plusw1,f,c
 27870  014C54  D003               	goto	l7892
 27871  014C56                     l7888:
 27872                           
 27873                           ;stkvar	_b @ sp[(-4)+-4]
 27874  014C56  0EF8               	movlw	-8
 27875  014C58  B0E3               	btfsc	plusw1,0,c
 27876  014C5A  D7F9               	goto	u5760
 27877  014C5C                     l7892:
 27878                           
 27879                           ;stkvar	_aexp @ sp[(-4)+2]
 27880  014C5C  0EFE               	movlw	-2
 27881  014C5E  50E3               	movf	plusw1,w,c
 27882  014C60  B4D8               	btfsc	status,2,c
 27883  014C62  D02B               	goto	l7904
 27884                           
 27885                           ;stkvar	_b @ sp[(-4)+-4]
 27886  014C64  50E1               	movf	fsr1l,w,c
 27887  014C66  0FF8               	addlw	-8
 27888  014C68  6ED9               	movwf	fsr2l,c
 27889  014C6A  50E2               	movf	fsr1h,w,c
 27890  014C6C  6EDA               	movwf	fsr2h,c
 27891  014C6E  0EFF               	movlw	255
 27892  014C70  22DA               	addwfc	fsr2h,f,c
 27893  014C72  2ADE               	incf	postinc2,f,c
 27894  014C74  0E00               	movlw	0
 27895  014C76  22DE               	addwfc	postinc2,f,c
 27896  014C78  22DE               	addwfc	postinc2,f,c
 27897  014C7A  22DE               	addwfc	postinc2,f,c
 27898                           
 27899                           ;stkvar	_b @ sp[(-4)+-4]
 27900  014C7C  0EFB               	movlw	-5
 27901  014C7E  A0E3               	btfss	plusw1,0,c
 27902  014C80  D01C               	goto	l7904
 27903  014C82  0E01               	movlw	1
 27904  014C84  6E0C               	movwf	(btemp+11)^0,c
 27905                           
 27906                           ;stkvar	_b @ sp[(-4)+-4]
 27907  014C86  50E1               	movf	fsr1l,w,c
 27908  014C88  0FF8               	addlw	-8
 27909  014C8A  6ED9               	movwf	fsr2l,c
 27910  014C8C  50E2               	movf	fsr1h,w,c
 27911  014C8E  6EDA               	movwf	fsr2h,c
 27912  014C90  0EFF               	movlw	255
 27913  014C92  22DA               	addwfc	fsr2h,f,c
 27914  014C94  280C               	incf	(btemp+11)^0,w,c
 27915  014C96  52DE               	movf	postinc2,f,c
 27916  014C98  D008               	goto	u5800
 27917  014C9A                     u5805:
 27918  014C9A  52DE               	movf	postinc2,f,c
 27919  014C9C  90D8               	bcf	status,0,c
 27920  014C9E  BEDC               	btfsc	preinc2,7,c
 27921  014CA0  80D8               	bsf	status,0,c
 27922  014CA2  32DD               	rrcf	postdec2,f,c
 27923  014CA4  32DD               	rrcf	postdec2,f,c
 27924  014CA6  32DD               	rrcf	postdec2,f,c
 27925  014CA8  32DE               	rrcf	postinc2,f,c
 27926  014CAA                     u5800:
 27927  014CAA  2EE8               	decfsz	wreg,f,c
 27928  014CAC  D7F6               	goto	u5805
 27929                           
 27930                           ;stkvar	_bexp @ sp[(-4)+1]
 27931  014CAE  0EFD               	movlw	-3
 27932  014CB0  28E3               	incf	plusw1,w,c
 27933  014CB2  B4D8               	btfsc	status,2,c
 27934  014CB4  D002               	goto	l7904
 27935                           
 27936                           ;stkvar	_bexp @ sp[(-4)+1]
 27937  014CB6  0EFD               	movlw	-3
 27938  014CB8  2AE3               	incf	plusw1,f,c
 27939  014CBA                     l7904:
 27940                           
 27941                           ;stkvar	_bexp @ sp[(-4)+1]
 27942  014CBA  0EFD               	movlw	-3
 27943  014CBC  28E3               	incf	plusw1,w,c
 27944  014CBE  B4D8               	btfsc	status,2,c
 27945  014CC0  D004               	goto	u5830
 27946                           
 27947                           ;stkvar	_bexp @ sp[(-4)+1]
 27948  014CC2  0EFD               	movlw	-3
 27949  014CC4  50E3               	movf	plusw1,w,c
 27950  014CC6  A4D8               	btfss	status,2,c
 27951  014CC8  D00E               	goto	l7914
 27952  014CCA                     u5830:
 27953                           
 27954                           ;stkvar	_b @ sp[(-4)+-4]
 27955  014CCA  0EF8               	movlw	-8
 27956  014CCC  6AE3               	clrf	plusw1,c
 27957  014CCE  0EF9               	movlw	-7
 27958  014CD0  6AE3               	clrf	plusw1,c
 27959  014CD2  0EFA               	movlw	-6
 27960  014CD4  6AE3               	clrf	plusw1,c
 27961  014CD6  0EFB               	movlw	-5
 27962  014CD8  6AE3               	clrf	plusw1,c
 27963                           
 27964                           ;stkvar	_bexp @ sp[(-4)+1]
 27965  014CDA  0EFD               	movlw	-3
 27966  014CDC  50E3               	movf	plusw1,w,c
 27967  014CDE  A4D8               	btfss	status,2,c
 27968  014CE0  D002               	goto	l7914
 27969                           
 27970                           ;stkvar	_signs @ sp[(-4)+3]
 27971  014CE2  0EFF               	movlw	-1
 27972  014CE4  6AE3               	clrf	plusw1,c
 27973  014CE6                     l7914:
 27974                           
 27975                           ;stkvar	_bexp @ sp[(-4)+1]
 27976  014CE6  0EFD               	movlw	-3
 27977  014CE8  A0E3               	btfss	plusw1,0,c
 27978  014CEA  D009               	goto	l7918
 27979                           
 27980                           ;stkvar	_b @ sp[(-4)+-4]
 27981  014CEC  0EFA               	movlw	250
 27982  014CEE  24E1               	addwf	fsr1l,w,c
 27983  014CF0  6ED9               	movwf	fsr2l,c
 27984  014CF2  0EFF               	movlw	255
 27985  014CF4  20E2               	addwfc	fsr1h,w,c
 27986  014CF6  6EDA               	movwf	fsr2h,c
 27987  014CF8  0E00               	movlw	0
 27988  014CFA  8EDB               	bsf	plusw2,7,c
 27989  014CFC  D008               	goto	l7920
 27990  014CFE                     l7918:
 27991                           
 27992                           ;stkvar	_b @ sp[(-4)+-4]
 27993  014CFE  0EFA               	movlw	250
 27994  014D00  24E1               	addwf	fsr1l,w,c
 27995  014D02  6ED9               	movwf	fsr2l,c
 27996  014D04  0EFF               	movlw	255
 27997  014D06  20E2               	addwfc	fsr1h,w,c
 27998  014D08  6EDA               	movwf	fsr2h,c
 27999  014D0A  0E7F               	movlw	127
 28000  014D0C  16DF               	andwf	indf2,f,c
 28001  014D0E                     l7920:
 28002                           
 28003                           ;stkvar	_b @ sp[(-4)+-4]
 28004  014D0E  0EFB               	movlw	251
 28005  014D10  24E1               	addwf	fsr1l,w,c
 28006  014D12  6ED9               	movwf	fsr2l,c
 28007  014D14  0EFF               	movlw	255
 28008  014D16  20E2               	addwfc	fsr1h,w,c
 28009  014D18  6EDA               	movwf	fsr2h,c
 28010                           
 28011                           ;stkvar	_bexp @ sp[(-4)+1]
 28012  014D1A  0EFD               	movlw	-3
 28013  014D1C  006F FF8C  F00C    	movff	plusw1,btemp+11
 28014  014D22  90D8               	bcf	status,0,c
 28015  014D24  300C               	rrcf	(btemp+11)^0,w,c
 28016  014D26  6EDF               	movwf	indf2,c
 28017                           
 28018                           ;stkvar	_signs @ sp[(-4)+3]
 28019  014D28  0EFF               	movlw	-1
 28020  014D2A  AEE3               	btfss	plusw1,7,c
 28021  014D2C  D008               	goto	l7926
 28022                           
 28023                           ;stkvar	_b @ sp[(-4)+-4]
 28024  014D2E  0EFB               	movlw	251
 28025  014D30  24E1               	addwf	fsr1l,w,c
 28026  014D32  6ED9               	movwf	fsr2l,c
 28027  014D34  0EFF               	movlw	255
 28028  014D36  20E2               	addwfc	fsr1h,w,c
 28029  014D38  6EDA               	movwf	fsr2h,c
 28030  014D3A  0E00               	movlw	0
 28031  014D3C  8EDB               	bsf	plusw2,7,c
 28032  014D3E                     l7926:
 28033                           
 28034                           ;stkvar	_b @ sp[(-4)+-4]
 28035  014D3E  0EF8               	movlw	-8
 28036  014D40  006F FF8C  F001    	movff	plusw1,btemp
 28037  014D46  0EF9               	movlw	-7
 28038  014D48  006F FF8C  F002    	movff	plusw1,btemp+1
 28039  014D4E  0EFA               	movlw	-6
 28040  014D50  006F FF8C  F003    	movff	plusw1,btemp+2
 28041  014D56  0EFB               	movlw	-5
 28042  014D58  006F FF8C  F004    	movff	plusw1,btemp+3
 28043  014D5E                     l2932:
 28044                           
 28045                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 28046  014D5E  0EF4               	movlw	244
 28047  014D60  26E1               	addwf	fsr1l,f,c
 28048  014D62  0EFF               	movlw	255
 28049  014D64  22E2               	addwfc	fsr1h,f,c
 28050  014D66  0012               	return		;funcret
 28051  014D68                     __end_of___fladd:
 28052                           	opt callstack 0
 28053                           
 28054 ;; *************** function ___flmul *****************
 28055 ;; Defined at:
 28056 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 28057 ;; Parameters:    Size  Location     Type
 28058 ;;  b               4  [STACK] unsigned char 
 28059 ;;  a               4  [STACK] unsigned char 
 28060 ;; Auto vars:     Size  Location     Type
 28061 ;;  prod            4  [STACK] struct .
 28062 ;;  grs             4  [STACK] unsigned long 
 28063 ;;  temp            2  [STACK] struct .
 28064 ;;  bexp            1  [STACK] unsigned char 
 28065 ;;  aexp            1  [STACK] unsigned char 
 28066 ;;  sign            1  [STACK] unsigned char 
 28067 ;; Return value:  Size  Location     Type
 28068 ;;                  4  [STACK] unsigned char 
 28069 ;; Registers used:
 28070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 28071 ;; Tracked objects:
 28072 ;;		On entry : 0/1
 28073 ;;		On exit  : 0/0
 28074 ;;		Unchanged: 0/0
 28075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28080 ;;Total ram usage:        0 bytes
 28081 ;; Hardware stack levels used:    1
 28082 ;; Hardware stack levels required when called:   15
 28083 ;; This function calls:
 28084 ;;		Nothing
 28085 ;; This function is called by:
 28086 ;;		_conv_raw_result
 28087 ;;		_lp_filter
 28088 ;;		_calc_model_data
 28089 ;;		_calc_bsoc
 28090 ;;		_init_bsoc
 28091 ;;		_efgtoa
 28092 ;; This function uses a reentrant model
 28093 ;;
 28094                           
 28095                           	psect	text108
 28096  013D82                     __ptext108:
 28097                           	opt callstack 0
 28098  013D82                     ___flmul:
 28099                           	opt callstack 0
 28100                           
 28101                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 28102  013D82  0E0D               	movlw	13
 28103  013D84  26E1               	addwf	fsr1l,f,c
 28104  013D86  0E00               	movlw	0
 28105  013D88  22E2               	addwfc	fsr1h,f,c
 28106                           
 28107                           ;stkvar	_b @ sp[(-13)+-4]
 28108                           
 28109                           ;incstack = 0
 28110 ;; hardware stack exceeded
 28111  013D8A  0EF2               	movlw	242
 28112  013D8C  24E1               	addwf	fsr1l,w,c
 28113  013D8E  6ED9               	movwf	fsr2l,c
 28114  013D90  0EFF               	movlw	255
 28115  013D92  20E2               	addwfc	fsr1h,w,c
 28116  013D94  6EDA               	movwf	fsr2h,c
 28117  013D96  50DF               	movf	indf2,w,c
 28118  013D98  6E0C               	movwf	(btemp+11)^0,c
 28119  013D9A  0E80               	movlw	128
 28120  013D9C  160C               	andwf	(btemp+11)^0,f,c
 28121                           
 28122                           ;stkvar	_sign @ sp[(-13)+12]
 28123  013D9E  0EFF               	movlw	-1
 28124  013DA0  0060  F033  FFE3   	movff	btemp+11,plusw1
 28125                           
 28126                           ;stkvar	_b @ sp[(-13)+-4]
 28127  013DA6  0EF2               	movlw	242
 28128  013DA8  24E1               	addwf	fsr1l,w,c
 28129  013DAA  6ED9               	movwf	fsr2l,c
 28130  013DAC  0EFF               	movlw	255
 28131  013DAE  20E2               	addwfc	fsr1h,w,c
 28132  013DB0  6EDA               	movwf	fsr2h,c
 28133  013DB2  50DF               	movf	indf2,w,c
 28134  013DB4  6E0C               	movwf	(btemp+11)^0,c
 28135  013DB6  90D8               	bcf	status,0,c
 28136  013DB8  340C               	rlcf	(btemp+11)^0,w,c
 28137  013DBA  6E0B               	movwf	(btemp+10)^0,c
 28138                           
 28139                           ;stkvar	_bexp @ sp[(-13)+10]
 28140  013DBC  0EFD               	movlw	-3
 28141  013DBE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28142                           
 28143                           ;stkvar	_b @ sp[(-13)+-4]
 28144  013DC4  0EF1               	movlw	241
 28145  013DC6  24E1               	addwf	fsr1l,w,c
 28146  013DC8  6ED9               	movwf	fsr2l,c
 28147  013DCA  0EFF               	movlw	255
 28148  013DCC  20E2               	addwfc	fsr1h,w,c
 28149  013DCE  6EDA               	movwf	fsr2h,c
 28150  013DD0  AEDF               	btfss	indf2,7,c
 28151  013DD2  D002               	goto	l8352
 28152                           
 28153                           ;stkvar	_bexp @ sp[(-13)+10]
 28154  013DD4  0EFD               	movlw	-3
 28155  013DD6  80E3               	bsf	plusw1,0,c
 28156  013DD8                     l8352:
 28157                           
 28158                           ;stkvar	_bexp @ sp[(-13)+10]
 28159  013DD8  0EFD               	movlw	-3
 28160  013DDA  50E3               	movf	plusw1,w,c
 28161  013DDC  B4D8               	btfsc	status,2,c
 28162  013DDE  D01F               	goto	l8360
 28163                           
 28164                           ;stkvar	_bexp @ sp[(-13)+10]
 28165  013DE0  0EFD               	movlw	-3
 28166  013DE2  28E3               	incf	plusw1,w,c
 28167  013DE4  A4D8               	btfss	status,2,c
 28168  013DE6  D018               	goto	l8358
 28169  013DE8  0E00               	movlw	0
 28170  013DEA  6E09               	movwf	(btemp+8)^0,c
 28171  013DEC  0E00               	movlw	0
 28172  013DEE  6E0A               	movwf	(btemp+9)^0,c
 28173  013DF0  0E00               	movlw	0
 28174  013DF2  6E0B               	movwf	(btemp+10)^0,c
 28175  013DF4  0E00               	movlw	0
 28176  013DF6  6E0C               	movwf	(btemp+11)^0,c
 28177                           
 28178                           ;stkvar	_b @ sp[(-13)+-4]
 28179  013DF8  0EEF               	movlw	-17
 28180  013DFA  0060  F027  FFE3   	movff	btemp+8,plusw1
 28181  013E00  0EF0               	movlw	-16
 28182  013E02  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28183  013E08  0EF1               	movlw	-15
 28184  013E0A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28185  013E10  0EF2               	movlw	-14
 28186  013E12  0060  F033  FFE3   	movff	btemp+11,plusw1
 28187  013E18                     l8358:
 28188                           
 28189                           ;stkvar	_b @ sp[(-13)+-4]
 28190  013E18  0EF1               	movlw	-15
 28191  013E1A  8EE3               	bsf	plusw1,7,c
 28192  013E1C  D018               	goto	l8362
 28193  013E1E                     l8360:
 28194  013E1E  0E00               	movlw	0
 28195  013E20  6E09               	movwf	(btemp+8)^0,c
 28196  013E22  0E00               	movlw	0
 28197  013E24  6E0A               	movwf	(btemp+9)^0,c
 28198  013E26  0E00               	movlw	0
 28199  013E28  6E0B               	movwf	(btemp+10)^0,c
 28200  013E2A  0E00               	movlw	0
 28201  013E2C  6E0C               	movwf	(btemp+11)^0,c
 28202                           
 28203                           ;stkvar	_b @ sp[(-13)+-4]
 28204  013E2E  0EEF               	movlw	-17
 28205  013E30  0060  F027  FFE3   	movff	btemp+8,plusw1
 28206  013E36  0EF0               	movlw	-16
 28207  013E38  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28208  013E3E  0EF1               	movlw	-15
 28209  013E40  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28210  013E46  0EF2               	movlw	-14
 28211  013E48  0060  F033  FFE3   	movff	btemp+11,plusw1
 28212  013E4E                     l8362:
 28213                           
 28214                           ;stkvar	_a @ sp[(-13)+-8]
 28215  013E4E  0EEE               	movlw	238
 28216  013E50  24E1               	addwf	fsr1l,w,c
 28217  013E52  6ED9               	movwf	fsr2l,c
 28218  013E54  0EFF               	movlw	255
 28219  013E56  20E2               	addwfc	fsr1h,w,c
 28220  013E58  6EDA               	movwf	fsr2h,c
 28221  013E5A  50DF               	movf	indf2,w,c
 28222  013E5C  6E0C               	movwf	(btemp+11)^0,c
 28223  013E5E  0E80               	movlw	128
 28224  013E60  160C               	andwf	(btemp+11)^0,f,c
 28225                           
 28226                           ;stkvar	_sign @ sp[(-13)+12]
 28227  013E62  50E1               	movf	fsr1l,w,c
 28228  013E64  0FFF               	addlw	-1
 28229  013E66  6ED9               	movwf	fsr2l,c
 28230  013E68  50E2               	movf	fsr1h,w,c
 28231  013E6A  6EDA               	movwf	fsr2h,c
 28232  013E6C  0EFF               	movlw	255
 28233  013E6E  22DA               	addwfc	fsr2h,f,c
 28234  013E70  500C               	movf	(btemp+11)^0,w,c
 28235  013E72  1ADF               	xorwf	indf2,f,c
 28236                           
 28237                           ;stkvar	_a @ sp[(-13)+-8]
 28238  013E74  0EEE               	movlw	238
 28239  013E76  24E1               	addwf	fsr1l,w,c
 28240  013E78  6ED9               	movwf	fsr2l,c
 28241  013E7A  0EFF               	movlw	255
 28242  013E7C  20E2               	addwfc	fsr1h,w,c
 28243  013E7E  6EDA               	movwf	fsr2h,c
 28244  013E80  50DF               	movf	indf2,w,c
 28245  013E82  6E0C               	movwf	(btemp+11)^0,c
 28246  013E84  90D8               	bcf	status,0,c
 28247  013E86  340C               	rlcf	(btemp+11)^0,w,c
 28248  013E88  6E0B               	movwf	(btemp+10)^0,c
 28249                           
 28250                           ;stkvar	_aexp @ sp[(-13)+11]
 28251  013E8A  0EFE               	movlw	-2
 28252  013E8C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28253                           
 28254                           ;stkvar	_a @ sp[(-13)+-8]
 28255  013E92  0EED               	movlw	237
 28256  013E94  24E1               	addwf	fsr1l,w,c
 28257  013E96  6ED9               	movwf	fsr2l,c
 28258  013E98  0EFF               	movlw	255
 28259  013E9A  20E2               	addwfc	fsr1h,w,c
 28260  013E9C  6EDA               	movwf	fsr2h,c
 28261  013E9E  AEDF               	btfss	indf2,7,c
 28262  013EA0  D002               	goto	l8370
 28263                           
 28264                           ;stkvar	_aexp @ sp[(-13)+11]
 28265  013EA2  0EFE               	movlw	-2
 28266  013EA4  80E3               	bsf	plusw1,0,c
 28267  013EA6                     l8370:
 28268                           
 28269                           ;stkvar	_aexp @ sp[(-13)+11]
 28270  013EA6  0EFE               	movlw	-2
 28271  013EA8  50E3               	movf	plusw1,w,c
 28272  013EAA  B4D8               	btfsc	status,2,c
 28273  013EAC  D01F               	goto	l8378
 28274                           
 28275                           ;stkvar	_aexp @ sp[(-13)+11]
 28276  013EAE  0EFE               	movlw	-2
 28277  013EB0  28E3               	incf	plusw1,w,c
 28278  013EB2  A4D8               	btfss	status,2,c
 28279  013EB4  D018               	goto	l8376
 28280  013EB6  0E00               	movlw	0
 28281  013EB8  6E09               	movwf	(btemp+8)^0,c
 28282  013EBA  0E00               	movlw	0
 28283  013EBC  6E0A               	movwf	(btemp+9)^0,c
 28284  013EBE  0E00               	movlw	0
 28285  013EC0  6E0B               	movwf	(btemp+10)^0,c
 28286  013EC2  0E00               	movlw	0
 28287  013EC4  6E0C               	movwf	(btemp+11)^0,c
 28288                           
 28289                           ;stkvar	_a @ sp[(-13)+-8]
 28290  013EC6  0EEB               	movlw	-21
 28291  013EC8  0060  F027  FFE3   	movff	btemp+8,plusw1
 28292  013ECE  0EEC               	movlw	-20
 28293  013ED0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28294  013ED6  0EED               	movlw	-19
 28295  013ED8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28296  013EDE  0EEE               	movlw	-18
 28297  013EE0  0060  F033  FFE3   	movff	btemp+11,plusw1
 28298  013EE6                     l8376:
 28299                           
 28300                           ;stkvar	_a @ sp[(-13)+-8]
 28301  013EE6  0EED               	movlw	-19
 28302  013EE8  8EE3               	bsf	plusw1,7,c
 28303  013EEA  D018               	goto	l8380
 28304  013EEC                     l8378:
 28305  013EEC  0E00               	movlw	0
 28306  013EEE  6E09               	movwf	(btemp+8)^0,c
 28307  013EF0  0E00               	movlw	0
 28308  013EF2  6E0A               	movwf	(btemp+9)^0,c
 28309  013EF4  0E00               	movlw	0
 28310  013EF6  6E0B               	movwf	(btemp+10)^0,c
 28311  013EF8  0E00               	movlw	0
 28312  013EFA  6E0C               	movwf	(btemp+11)^0,c
 28313                           
 28314                           ;stkvar	_a @ sp[(-13)+-8]
 28315  013EFC  0EEB               	movlw	-21
 28316  013EFE  0060  F027  FFE3   	movff	btemp+8,plusw1
 28317  013F04  0EEC               	movlw	-20
 28318  013F06  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28319  013F0C  0EED               	movlw	-19
 28320  013F0E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28321  013F14  0EEE               	movlw	-18
 28322  013F16  0060  F033  FFE3   	movff	btemp+11,plusw1
 28323  013F1C                     l8380:
 28324                           
 28325                           ;stkvar	_aexp @ sp[(-13)+11]
 28326  013F1C  0EFE               	movlw	-2
 28327  013F1E  50E3               	movf	plusw1,w,c
 28328  013F20  B4D8               	btfsc	status,2,c
 28329  013F22  D004               	goto	u6820
 28330                           
 28331                           ;stkvar	_bexp @ sp[(-13)+10]
 28332  013F24  0EFD               	movlw	-3
 28333  013F26  50E3               	movf	plusw1,w,c
 28334  013F28  A4D8               	btfss	status,2,c
 28335  013F2A  D009               	goto	l8388
 28336  013F2C                     u6820:
 28337  013F2C  0E00               	movlw	0
 28338  013F2E  6E01               	movwf	btemp^0,c
 28339  013F30  0E00               	movlw	0
 28340  013F32  6E02               	movwf	(btemp+1)^0,c
 28341  013F34  0E00               	movlw	0
 28342  013F36  6E03               	movwf	(btemp+2)^0,c
 28343  013F38  0E00               	movlw	0
 28344  013F3A  6E04               	movwf	(btemp+3)^0,c
 28345  013F3C  D332               	goto	l3013
 28346  013F3E                     l8388:
 28347                           
 28348                           ;stkvar	_b @ sp[(-13)+-4]
 28349  013F3E  0EEF               	movlw	-17
 28350  013F40  006F FF8C  F00C    	movff	plusw1,btemp+11
 28351                           
 28352                           ;stkvar	_a @ sp[(-13)+-8]
 28353  013F46  0EED               	movlw	237
 28354  013F48  24E1               	addwf	fsr1l,w,c
 28355  013F4A  6ED9               	movwf	fsr2l,c
 28356  013F4C  0EFF               	movlw	255
 28357  013F4E  20E2               	addwfc	fsr1h,w,c
 28358  013F50  6EDA               	movwf	fsr2h,c
 28359  013F52  50DF               	movf	indf2,w,c
 28360  013F54  020C               	mulwf	(btemp+11)^0,c
 28361                           
 28362                           ;stkvar	_temp @ sp[(-13)+8]
 28363  013F56  0EFB               	movlw	-5
 28364  013F58  006F FFCF FFE3     	movff	prodl,plusw1
 28365  013F5E  0EFC               	movlw	-4
 28366  013F60  006F FFD3 FFE3     	movff	prodh,plusw1
 28367                           
 28368                           ;stkvar	_temp @ sp[(-13)+8]
 28369  013F66  0EFB               	movlw	-5
 28370  013F68  006F FF8C  F00C    	movff	plusw1,btemp+11
 28371  013F6E  0060  F030  F005   	movff	btemp+11,btemp+4
 28372  013F74  6A06               	clrf	(btemp+5)^0,c
 28373  013F76  6A07               	clrf	(btemp+6)^0,c
 28374  013F78  6A08               	clrf	(btemp+7)^0,c
 28375                           
 28376                           ;stkvar	_grs @ sp[(-13)+4]
 28377  013F7A  0EF7               	movlw	-9
 28378  013F7C  0060  F017  FFE3   	movff	btemp+4,plusw1
 28379  013F82  0EF8               	movlw	-8
 28380  013F84  0060  F01B  FFE3   	movff	btemp+5,plusw1
 28381  013F8A  0EF9               	movlw	-7
 28382  013F8C  0060  F01F  FFE3   	movff	btemp+6,plusw1
 28383  013F92  0EFA               	movlw	-6
 28384  013F94  0060  F023  FFE3   	movff	btemp+7,plusw1
 28385                           
 28386                           ;stkvar	_temp @ sp[(-13)+8]
 28387  013F9A  0EFC               	movlw	252
 28388  013F9C  24E1               	addwf	fsr1l,w,c
 28389  013F9E  6ED9               	movwf	fsr2l,c
 28390  013FA0  0EFF               	movlw	255
 28391  013FA2  20E2               	addwfc	fsr1h,w,c
 28392  013FA4  6EDA               	movwf	fsr2h,c
 28393  013FA6  50DF               	movf	indf2,w,c
 28394  013FA8  6E0C               	movwf	(btemp+11)^0,c
 28395  013FAA  0060  F030  F005   	movff	btemp+11,btemp+4
 28396  013FB0  6A06               	clrf	(btemp+5)^0,c
 28397  013FB2  6A07               	clrf	(btemp+6)^0,c
 28398  013FB4  6A08               	clrf	(btemp+7)^0,c
 28399                           
 28400                           ;stkvar	_prod @ sp[(-13)+0]
 28401  013FB6  0EF3               	movlw	-13
 28402  013FB8  0060  F017  FFE3   	movff	btemp+4,plusw1
 28403  013FBE  0EF4               	movlw	-12
 28404  013FC0  0060  F01B  FFE3   	movff	btemp+5,plusw1
 28405  013FC6  0EF5               	movlw	-11
 28406  013FC8  0060  F01F  FFE3   	movff	btemp+6,plusw1
 28407  013FCE  0EF6               	movlw	-10
 28408  013FD0  0060  F023  FFE3   	movff	btemp+7,plusw1
 28409                           
 28410                           ;stkvar	_b @ sp[(-13)+-4]
 28411  013FD6  0EF0               	movlw	240
 28412  013FD8  24E1               	addwf	fsr1l,w,c
 28413  013FDA  6ED9               	movwf	fsr2l,c
 28414  013FDC  0EFF               	movlw	255
 28415  013FDE  20E2               	addwfc	fsr1h,w,c
 28416  013FE0  6EDA               	movwf	fsr2h,c
 28417  013FE2  50DF               	movf	indf2,w,c
 28418  013FE4  6E0C               	movwf	(btemp+11)^0,c
 28419                           
 28420                           ;stkvar	_a @ sp[(-13)+-8]
 28421  013FE6  0EEC               	movlw	236
 28422  013FE8  24E1               	addwf	fsr1l,w,c
 28423  013FEA  6ED9               	movwf	fsr2l,c
 28424  013FEC  0EFF               	movlw	255
 28425  013FEE  20E2               	addwfc	fsr1h,w,c
 28426  013FF0  6EDA               	movwf	fsr2h,c
 28427  013FF2  50DF               	movf	indf2,w,c
 28428  013FF4  020C               	mulwf	(btemp+11)^0,c
 28429                           
 28430                           ;stkvar	_temp @ sp[(-13)+8]
 28431  013FF6  0EFB               	movlw	-5
 28432  013FF8  006F FFCF FFE3     	movff	prodl,plusw1
 28433  013FFE  0EFC               	movlw	-4
 28434  014000  006F FFD3 FFE3     	movff	prodh,plusw1
 28435                           
 28436                           ;stkvar	_grs @ sp[(-13)+4]
 28437  014006  50E1               	movf	fsr1l,w,c
 28438  014008  0FF7               	addlw	-9
 28439  01400A  6ED9               	movwf	fsr2l,c
 28440  01400C  50E2               	movf	fsr1h,w,c
 28441  01400E  6EDA               	movwf	fsr2h,c
 28442  014010  0EFF               	movlw	255
 28443  014012  22DA               	addwfc	fsr2h,f,c
 28444                           
 28445                           ;stkvar	_temp @ sp[(-13)+8]
 28446  014014  0EFB               	movlw	-5
 28447  014016  50E3               	movf	plusw1,w,c
 28448  014018  26DE               	addwf	postinc2,f,c
 28449  01401A  0E00               	movlw	0
 28450  01401C  22DE               	addwfc	postinc2,f,c
 28451  01401E  22DE               	addwfc	postinc2,f,c
 28452  014020  22DE               	addwfc	postinc2,f,c
 28453                           
 28454                           ;stkvar	_prod @ sp[(-13)+0]
 28455  014022  50E1               	movf	fsr1l,w,c
 28456  014024  0FF3               	addlw	-13
 28457  014026  6ED9               	movwf	fsr2l,c
 28458  014028  50E2               	movf	fsr1h,w,c
 28459  01402A  6EDA               	movwf	fsr2h,c
 28460  01402C  0EFF               	movlw	255
 28461  01402E  22DA               	addwfc	fsr2h,f,c
 28462                           
 28463                           ;stkvar	_temp @ sp[(-13)+8]
 28464  014030  0EFC               	movlw	252
 28465  014032  24E1               	addwf	fsr1l,w,c
 28466  014034  6EE9               	movwf	fsr0l,c
 28467  014036  0EFF               	movlw	255
 28468  014038  20E2               	addwfc	fsr1h,w,c
 28469  01403A  6EEA               	movwf	fsr0h,c
 28470  01403C  50EF               	movf	indf0,w,c
 28471  01403E  26DE               	addwf	postinc2,f,c
 28472  014040  0E00               	movlw	0
 28473  014042  22DE               	addwfc	postinc2,f,c
 28474  014044  22DE               	addwfc	postinc2,f,c
 28475  014046  22DE               	addwfc	postinc2,f,c
 28476                           
 28477                           ;stkvar	_b @ sp[(-13)+-4]
 28478  014048  0EF1               	movlw	241
 28479  01404A  24E1               	addwf	fsr1l,w,c
 28480  01404C  6ED9               	movwf	fsr2l,c
 28481  01404E  0EFF               	movlw	255
 28482  014050  20E2               	addwfc	fsr1h,w,c
 28483  014052  6EDA               	movwf	fsr2h,c
 28484  014054  50DF               	movf	indf2,w,c
 28485  014056  6E0C               	movwf	(btemp+11)^0,c
 28486                           
 28487                           ;stkvar	_a @ sp[(-13)+-8]
 28488  014058  0EEB               	movlw	-21
 28489  01405A  50E3               	movf	plusw1,w,c
 28490  01405C  020C               	mulwf	(btemp+11)^0,c
 28491                           
 28492                           ;stkvar	_temp @ sp[(-13)+8]
 28493  01405E  0EFB               	movlw	-5
 28494  014060  006F FFCF FFE3     	movff	prodl,plusw1
 28495  014066  0EFC               	movlw	-4
 28496  014068  006F FFD3 FFE3     	movff	prodh,plusw1
 28497                           
 28498                           ;stkvar	_grs @ sp[(-13)+4]
 28499  01406E  50E1               	movf	fsr1l,w,c
 28500  014070  0FF7               	addlw	-9
 28501  014072  6ED9               	movwf	fsr2l,c
 28502  014074  50E2               	movf	fsr1h,w,c
 28503  014076  6EDA               	movwf	fsr2h,c
 28504  014078  0EFF               	movlw	255
 28505  01407A  22DA               	addwfc	fsr2h,f,c
 28506                           
 28507                           ;stkvar	_temp @ sp[(-13)+8]
 28508  01407C  0EFB               	movlw	-5
 28509  01407E  50E3               	movf	plusw1,w,c
 28510  014080  26DE               	addwf	postinc2,f,c
 28511  014082  0E00               	movlw	0
 28512  014084  22DE               	addwfc	postinc2,f,c
 28513  014086  22DE               	addwfc	postinc2,f,c
 28514  014088  22DE               	addwfc	postinc2,f,c
 28515                           
 28516                           ;stkvar	_prod @ sp[(-13)+0]
 28517  01408A  50E1               	movf	fsr1l,w,c
 28518  01408C  0FF3               	addlw	-13
 28519  01408E  6ED9               	movwf	fsr2l,c
 28520  014090  50E2               	movf	fsr1h,w,c
 28521  014092  6EDA               	movwf	fsr2h,c
 28522  014094  0EFF               	movlw	255
 28523  014096  22DA               	addwfc	fsr2h,f,c
 28524                           
 28525                           ;stkvar	_temp @ sp[(-13)+8]
 28526  014098  0EFC               	movlw	252
 28527  01409A  24E1               	addwf	fsr1l,w,c
 28528  01409C  6EE9               	movwf	fsr0l,c
 28529  01409E  0EFF               	movlw	255
 28530  0140A0  20E2               	addwfc	fsr1h,w,c
 28531  0140A2  6EEA               	movwf	fsr0h,c
 28532  0140A4  50EF               	movf	indf0,w,c
 28533  0140A6  26DE               	addwf	postinc2,f,c
 28534  0140A8  0E00               	movlw	0
 28535  0140AA  22DE               	addwfc	postinc2,f,c
 28536  0140AC  22DE               	addwfc	postinc2,f,c
 28537  0140AE  22DE               	addwfc	postinc2,f,c
 28538                           
 28539                           ;stkvar	_grs @ sp[(-13)+4]
 28540  0140B0  50E1               	movf	fsr1l,w,c
 28541  0140B2  0FF7               	addlw	-9
 28542  0140B4  6ED9               	movwf	fsr2l,c
 28543  0140B6  50E2               	movf	fsr1h,w,c
 28544  0140B8  6EDA               	movwf	fsr2h,c
 28545  0140BA  0EFF               	movlw	255
 28546  0140BC  22DA               	addwfc	fsr2h,f,c
 28547  0140BE  0E08               	movlw	8
 28548  0140C0                     u6835:
 28549  0140C0  90D8               	bcf	status,0,c
 28550  0140C2  36DE               	rlcf	postinc2,f,c
 28551  0140C4  36DE               	rlcf	postinc2,f,c
 28552  0140C6  36DE               	rlcf	postinc2,f,c
 28553  0140C8  36DD               	rlcf	postdec2,f,c
 28554  0140CA  52DD               	movf	postdec2,f,c
 28555  0140CC  52DD               	movf	postdec2,f,c
 28556  0140CE  2EE8               	decfsz	wreg,f,c
 28557  0140D0  D7F7               	goto	u6835
 28558                           
 28559                           ;stkvar	_b @ sp[(-13)+-4]
 28560  0140D2  0EF0               	movlw	240
 28561  0140D4  24E1               	addwf	fsr1l,w,c
 28562  0140D6  6ED9               	movwf	fsr2l,c
 28563  0140D8  0EFF               	movlw	255
 28564  0140DA  20E2               	addwfc	fsr1h,w,c
 28565  0140DC  6EDA               	movwf	fsr2h,c
 28566  0140DE  50DF               	movf	indf2,w,c
 28567  0140E0  6E0C               	movwf	(btemp+11)^0,c
 28568                           
 28569                           ;stkvar	_a @ sp[(-13)+-8]
 28570  0140E2  0EEB               	movlw	-21
 28571  0140E4  50E3               	movf	plusw1,w,c
 28572  0140E6  020C               	mulwf	(btemp+11)^0,c
 28573                           
 28574                           ;stkvar	_temp @ sp[(-13)+8]
 28575  0140E8  0EFB               	movlw	-5
 28576  0140EA  006F FFCF FFE3     	movff	prodl,plusw1
 28577  0140F0  0EFC               	movlw	-4
 28578  0140F2  006F FFD3 FFE3     	movff	prodh,plusw1
 28579                           
 28580                           ;stkvar	_temp @ sp[(-13)+8]
 28581  0140F8  0EFB               	movlw	-5
 28582  0140FA  006F FF8C  F00B    	movff	plusw1,btemp+10
 28583  014100  0EFC               	movlw	-4
 28584  014102  006F FF8C  F00C    	movff	plusw1,btemp+11
 28585                           
 28586                           ;stkvar	_grs @ sp[(-13)+4]
 28587  014108  50E1               	movf	fsr1l,w,c
 28588  01410A  0FF7               	addlw	-9
 28589  01410C  6ED9               	movwf	fsr2l,c
 28590  01410E  50E2               	movf	fsr1h,w,c
 28591  014110  6EDA               	movwf	fsr2h,c
 28592  014112  0EFF               	movlw	255
 28593  014114  22DA               	addwfc	fsr2h,f,c
 28594  014116  500B               	movf	(btemp+10)^0,w,c
 28595  014118  26DE               	addwf	postinc2,f,c
 28596  01411A  500C               	movf	(btemp+11)^0,w,c
 28597  01411C  22DE               	addwfc	postinc2,f,c
 28598  01411E  0E00               	movlw	0
 28599  014120  22DE               	addwfc	postinc2,f,c
 28600  014122  22DE               	addwfc	postinc2,f,c
 28601                           
 28602                           ;stkvar	_b @ sp[(-13)+-4]
 28603  014124  0EEF               	movlw	-17
 28604  014126  006F FF8C  F00C    	movff	plusw1,btemp+11
 28605                           
 28606                           ;stkvar	_a @ sp[(-13)+-8]
 28607  01412C  0EEC               	movlw	236
 28608  01412E  24E1               	addwf	fsr1l,w,c
 28609  014130  6ED9               	movwf	fsr2l,c
 28610  014132  0EFF               	movlw	255
 28611  014134  20E2               	addwfc	fsr1h,w,c
 28612  014136  6EDA               	movwf	fsr2h,c
 28613  014138  50DF               	movf	indf2,w,c
 28614  01413A  020C               	mulwf	(btemp+11)^0,c
 28615                           
 28616                           ;stkvar	_temp @ sp[(-13)+8]
 28617  01413C  0EFB               	movlw	-5
 28618  01413E  006F FFCF FFE3     	movff	prodl,plusw1
 28619  014144  0EFC               	movlw	-4
 28620  014146  006F FFD3 FFE3     	movff	prodh,plusw1
 28621                           
 28622                           ;stkvar	_temp @ sp[(-13)+8]
 28623  01414C  0EFB               	movlw	-5
 28624  01414E  006F FF8C  F00B    	movff	plusw1,btemp+10
 28625  014154  0EFC               	movlw	-4
 28626  014156  006F FF8C  F00C    	movff	plusw1,btemp+11
 28627                           
 28628                           ;stkvar	_grs @ sp[(-13)+4]
 28629  01415C  50E1               	movf	fsr1l,w,c
 28630  01415E  0FF7               	addlw	-9
 28631  014160  6ED9               	movwf	fsr2l,c
 28632  014162  50E2               	movf	fsr1h,w,c
 28633  014164  6EDA               	movwf	fsr2h,c
 28634  014166  0EFF               	movlw	255
 28635  014168  22DA               	addwfc	fsr2h,f,c
 28636  01416A  500B               	movf	(btemp+10)^0,w,c
 28637  01416C  26DE               	addwf	postinc2,f,c
 28638  01416E  500C               	movf	(btemp+11)^0,w,c
 28639  014170  22DE               	addwfc	postinc2,f,c
 28640  014172  0E00               	movlw	0
 28641  014174  22DE               	addwfc	postinc2,f,c
 28642  014176  22DE               	addwfc	postinc2,f,c
 28643                           
 28644                           ;stkvar	_grs @ sp[(-13)+4]
 28645  014178  50E1               	movf	fsr1l,w,c
 28646  01417A  0FF7               	addlw	-9
 28647  01417C  6ED9               	movwf	fsr2l,c
 28648  01417E  50E2               	movf	fsr1h,w,c
 28649  014180  6EDA               	movwf	fsr2h,c
 28650  014182  0EFF               	movlw	255
 28651  014184  22DA               	addwfc	fsr2h,f,c
 28652  014186  0E08               	movlw	8
 28653  014188                     u6845:
 28654  014188  90D8               	bcf	status,0,c
 28655  01418A  36DE               	rlcf	postinc2,f,c
 28656  01418C  36DE               	rlcf	postinc2,f,c
 28657  01418E  36DE               	rlcf	postinc2,f,c
 28658  014190  36DD               	rlcf	postdec2,f,c
 28659  014192  52DD               	movf	postdec2,f,c
 28660  014194  52DD               	movf	postdec2,f,c
 28661  014196  2EE8               	decfsz	wreg,f,c
 28662  014198  D7F7               	goto	u6845
 28663                           
 28664                           ;stkvar	_b @ sp[(-13)+-4]
 28665  01419A  0EEF               	movlw	-17
 28666  01419C  006F FF8C  F00C    	movff	plusw1,btemp+11
 28667                           
 28668                           ;stkvar	_a @ sp[(-13)+-8]
 28669  0141A2  0EEB               	movlw	-21
 28670  0141A4  50E3               	movf	plusw1,w,c
 28671  0141A6  020C               	mulwf	(btemp+11)^0,c
 28672                           
 28673                           ;stkvar	_temp @ sp[(-13)+8]
 28674  0141A8  0EFB               	movlw	-5
 28675  0141AA  006F FFCF FFE3     	movff	prodl,plusw1
 28676  0141B0  0EFC               	movlw	-4
 28677  0141B2  006F FFD3 FFE3     	movff	prodh,plusw1
 28678                           
 28679                           ;stkvar	_temp @ sp[(-13)+8]
 28680  0141B8  0EFB               	movlw	-5
 28681  0141BA  006F FF8C  F00B    	movff	plusw1,btemp+10
 28682  0141C0  0EFC               	movlw	-4
 28683  0141C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 28684                           
 28685                           ;stkvar	_grs @ sp[(-13)+4]
 28686  0141C8  50E1               	movf	fsr1l,w,c
 28687  0141CA  0FF7               	addlw	-9
 28688  0141CC  6ED9               	movwf	fsr2l,c
 28689  0141CE  50E2               	movf	fsr1h,w,c
 28690  0141D0  6EDA               	movwf	fsr2h,c
 28691  0141D2  0EFF               	movlw	255
 28692  0141D4  22DA               	addwfc	fsr2h,f,c
 28693  0141D6  500B               	movf	(btemp+10)^0,w,c
 28694  0141D8  26DE               	addwf	postinc2,f,c
 28695  0141DA  500C               	movf	(btemp+11)^0,w,c
 28696  0141DC  22DE               	addwfc	postinc2,f,c
 28697  0141DE  0E00               	movlw	0
 28698  0141E0  22DE               	addwfc	postinc2,f,c
 28699  0141E2  22DE               	addwfc	postinc2,f,c
 28700                           
 28701                           ;stkvar	_b @ sp[(-13)+-4]
 28702  0141E4  0EF0               	movlw	240
 28703  0141E6  24E1               	addwf	fsr1l,w,c
 28704  0141E8  6ED9               	movwf	fsr2l,c
 28705  0141EA  0EFF               	movlw	255
 28706  0141EC  20E2               	addwfc	fsr1h,w,c
 28707  0141EE  6EDA               	movwf	fsr2h,c
 28708  0141F0  50DF               	movf	indf2,w,c
 28709  0141F2  6E0C               	movwf	(btemp+11)^0,c
 28710                           
 28711                           ;stkvar	_a @ sp[(-13)+-8]
 28712  0141F4  0EED               	movlw	237
 28713  0141F6  24E1               	addwf	fsr1l,w,c
 28714  0141F8  6ED9               	movwf	fsr2l,c
 28715  0141FA  0EFF               	movlw	255
 28716  0141FC  20E2               	addwfc	fsr1h,w,c
 28717  0141FE  6EDA               	movwf	fsr2h,c
 28718  014200  50DF               	movf	indf2,w,c
 28719  014202  020C               	mulwf	(btemp+11)^0,c
 28720                           
 28721                           ;stkvar	_temp @ sp[(-13)+8]
 28722  014204  0EFB               	movlw	-5
 28723  014206  006F FFCF FFE3     	movff	prodl,plusw1
 28724  01420C  0EFC               	movlw	-4
 28725  01420E  006F FFD3 FFE3     	movff	prodh,plusw1
 28726                           
 28727                           ;stkvar	_temp @ sp[(-13)+8]
 28728  014214  0EFB               	movlw	-5
 28729  014216  006F FF8C  F00B    	movff	plusw1,btemp+10
 28730  01421C  0EFC               	movlw	-4
 28731  01421E  006F FF8C  F00C    	movff	plusw1,btemp+11
 28732                           
 28733                           ;stkvar	_prod @ sp[(-13)+0]
 28734  014224  50E1               	movf	fsr1l,w,c
 28735  014226  0FF3               	addlw	-13
 28736  014228  6ED9               	movwf	fsr2l,c
 28737  01422A  50E2               	movf	fsr1h,w,c
 28738  01422C  6EDA               	movwf	fsr2h,c
 28739  01422E  0EFF               	movlw	255
 28740  014230  22DA               	addwfc	fsr2h,f,c
 28741  014232  500B               	movf	(btemp+10)^0,w,c
 28742  014234  26DE               	addwf	postinc2,f,c
 28743  014236  500C               	movf	(btemp+11)^0,w,c
 28744  014238  22DE               	addwfc	postinc2,f,c
 28745  01423A  0E00               	movlw	0
 28746  01423C  22DE               	addwfc	postinc2,f,c
 28747  01423E  22DE               	addwfc	postinc2,f,c
 28748                           
 28749                           ;stkvar	_b @ sp[(-13)+-4]
 28750  014240  0EF1               	movlw	241
 28751  014242  24E1               	addwf	fsr1l,w,c
 28752  014244  6ED9               	movwf	fsr2l,c
 28753  014246  0EFF               	movlw	255
 28754  014248  20E2               	addwfc	fsr1h,w,c
 28755  01424A  6EDA               	movwf	fsr2h,c
 28756  01424C  50DF               	movf	indf2,w,c
 28757  01424E  6E0C               	movwf	(btemp+11)^0,c
 28758                           
 28759                           ;stkvar	_a @ sp[(-13)+-8]
 28760  014250  0EEC               	movlw	236
 28761  014252  24E1               	addwf	fsr1l,w,c
 28762  014254  6ED9               	movwf	fsr2l,c
 28763  014256  0EFF               	movlw	255
 28764  014258  20E2               	addwfc	fsr1h,w,c
 28765  01425A  6EDA               	movwf	fsr2h,c
 28766  01425C  50DF               	movf	indf2,w,c
 28767  01425E  020C               	mulwf	(btemp+11)^0,c
 28768                           
 28769                           ;stkvar	_temp @ sp[(-13)+8]
 28770  014260  0EFB               	movlw	-5
 28771  014262  006F FFCF FFE3     	movff	prodl,plusw1
 28772  014268  0EFC               	movlw	-4
 28773  01426A  006F FFD3 FFE3     	movff	prodh,plusw1
 28774                           
 28775                           ;stkvar	_temp @ sp[(-13)+8]
 28776  014270  0EFB               	movlw	-5
 28777  014272  006F FF8C  F00B    	movff	plusw1,btemp+10
 28778  014278  0EFC               	movlw	-4
 28779  01427A  006F FF8C  F00C    	movff	plusw1,btemp+11
 28780                           
 28781                           ;stkvar	_prod @ sp[(-13)+0]
 28782  014280  50E1               	movf	fsr1l,w,c
 28783  014282  0FF3               	addlw	-13
 28784  014284  6ED9               	movwf	fsr2l,c
 28785  014286  50E2               	movf	fsr1h,w,c
 28786  014288  6EDA               	movwf	fsr2h,c
 28787  01428A  0EFF               	movlw	255
 28788  01428C  22DA               	addwfc	fsr2h,f,c
 28789  01428E  500B               	movf	(btemp+10)^0,w,c
 28790  014290  26DE               	addwf	postinc2,f,c
 28791  014292  500C               	movf	(btemp+11)^0,w,c
 28792  014294  22DE               	addwfc	postinc2,f,c
 28793  014296  0E00               	movlw	0
 28794  014298  22DE               	addwfc	postinc2,f,c
 28795  01429A  22DE               	addwfc	postinc2,f,c
 28796                           
 28797                           ;stkvar	_b @ sp[(-13)+-4]
 28798  01429C  0EF1               	movlw	241
 28799  01429E  24E1               	addwf	fsr1l,w,c
 28800  0142A0  6ED9               	movwf	fsr2l,c
 28801  0142A2  0EFF               	movlw	255
 28802  0142A4  20E2               	addwfc	fsr1h,w,c
 28803  0142A6  6EDA               	movwf	fsr2h,c
 28804  0142A8  50DF               	movf	indf2,w,c
 28805  0142AA  6E0C               	movwf	(btemp+11)^0,c
 28806                           
 28807                           ;stkvar	_a @ sp[(-13)+-8]
 28808  0142AC  0EED               	movlw	237
 28809  0142AE  24E1               	addwf	fsr1l,w,c
 28810  0142B0  6ED9               	movwf	fsr2l,c
 28811  0142B2  0EFF               	movlw	255
 28812  0142B4  20E2               	addwfc	fsr1h,w,c
 28813  0142B6  6EDA               	movwf	fsr2h,c
 28814  0142B8  50DF               	movf	indf2,w,c
 28815  0142BA  020C               	mulwf	(btemp+11)^0,c
 28816                           
 28817                           ;stkvar	_temp @ sp[(-13)+8]
 28818  0142BC  0EFB               	movlw	-5
 28819  0142BE  006F FFCF FFE3     	movff	prodl,plusw1
 28820  0142C4  0EFC               	movlw	-4
 28821  0142C6  006F FFD3 FFE3     	movff	prodh,plusw1
 28822                           
 28823                           ;stkvar	_temp @ sp[(-13)+8]
 28824  0142CC  0EFB               	movlw	-5
 28825  0142CE  006F FF8C  F00B    	movff	plusw1,btemp+10
 28826  0142D4  0EFC               	movlw	-4
 28827  0142D6  006F FF8C  F00C    	movff	plusw1,btemp+11
 28828  0142DC  500B               	movf	(btemp+10)^0,w,c
 28829  0142DE  6E05               	movwf	(btemp+4)^0,c
 28830  0142E0  500C               	movf	(btemp+11)^0,w,c
 28831  0142E2  6E06               	movwf	(btemp+5)^0,c
 28832  0142E4  6A07               	clrf	(btemp+6)^0,c
 28833  0142E6  6A08               	clrf	(btemp+7)^0,c
 28834  0142E8  0060  F01C  F008   	movff	btemp+6,btemp+7
 28835  0142EE  0060  F018  F007   	movff	btemp+5,btemp+6
 28836  0142F4  0060  F014  F006   	movff	btemp+4,btemp+5
 28837  0142FA  6A05               	clrf	(btemp+4)^0,c
 28838                           
 28839                           ;stkvar	_prod @ sp[(-13)+0]
 28840  0142FC  50E1               	movf	fsr1l,w,c
 28841  0142FE  0FF3               	addlw	-13
 28842  014300  6ED9               	movwf	fsr2l,c
 28843  014302  50E2               	movf	fsr1h,w,c
 28844  014304  6EDA               	movwf	fsr2h,c
 28845  014306  0EFF               	movlw	255
 28846  014308  22DA               	addwfc	fsr2h,f,c
 28847  01430A  5005               	movf	(btemp+4)^0,w,c
 28848  01430C  26DE               	addwf	postinc2,f,c
 28849  01430E  5006               	movf	(btemp+5)^0,w,c
 28850  014310  22DE               	addwfc	postinc2,f,c
 28851  014312  5007               	movf	(btemp+6)^0,w,c
 28852  014314  22DE               	addwfc	postinc2,f,c
 28853  014316  5008               	movf	(btemp+7)^0,w,c
 28854  014318  22DE               	addwfc	postinc2,f,c
 28855                           
 28856                           ;stkvar	_prod @ sp[(-13)+0]
 28857  01431A  50E1               	movf	fsr1l,w,c
 28858  01431C  0FF3               	addlw	-13
 28859  01431E  6ED9               	movwf	fsr2l,c
 28860  014320  50E2               	movf	fsr1h,w,c
 28861  014322  6EDA               	movwf	fsr2h,c
 28862  014324  0EFF               	movlw	255
 28863  014326  22DA               	addwfc	fsr2h,f,c
 28864                           
 28865                           ;stkvar	_grs @ sp[(-13)+4]
 28866  014328  0EFA               	movlw	250
 28867  01432A  24E1               	addwf	fsr1l,w,c
 28868  01432C  6EE9               	movwf	fsr0l,c
 28869  01432E  0EFF               	movlw	255
 28870  014330  20E2               	addwfc	fsr1h,w,c
 28871  014332  6EEA               	movwf	fsr0h,c
 28872  014334  50EF               	movf	indf0,w,c
 28873  014336  26DE               	addwf	postinc2,f,c
 28874  014338  0E00               	movlw	0
 28875  01433A  22DE               	addwfc	postinc2,f,c
 28876  01433C  22DE               	addwfc	postinc2,f,c
 28877  01433E  22DE               	addwfc	postinc2,f,c
 28878                           
 28879                           ;stkvar	_grs @ sp[(-13)+4]
 28880  014340  50E1               	movf	fsr1l,w,c
 28881  014342  0FF7               	addlw	-9
 28882  014344  6ED9               	movwf	fsr2l,c
 28883  014346  50E2               	movf	fsr1h,w,c
 28884  014348  6EDA               	movwf	fsr2h,c
 28885  01434A  0EFF               	movlw	255
 28886  01434C  22DA               	addwfc	fsr2h,f,c
 28887  01434E  0E08               	movlw	8
 28888  014350                     u6855:
 28889  014350  90D8               	bcf	status,0,c
 28890  014352  36DE               	rlcf	postinc2,f,c
 28891  014354  36DE               	rlcf	postinc2,f,c
 28892  014356  36DE               	rlcf	postinc2,f,c
 28893  014358  36DD               	rlcf	postdec2,f,c
 28894  01435A  52DD               	movf	postdec2,f,c
 28895  01435C  52DD               	movf	postdec2,f,c
 28896  01435E  2EE8               	decfsz	wreg,f,c
 28897  014360  D7F7               	goto	u6855
 28898  014362  0E82               	movlw	130
 28899  014364  6E0B               	movwf	(btemp+10)^0,c
 28900  014366  0EFF               	movlw	255
 28901  014368  6E0C               	movwf	(btemp+11)^0,c
 28902                           
 28903                           ;stkvar	_bexp @ sp[(-13)+10]
 28904  01436A  0EFD               	movlw	-3
 28905  01436C  50E3               	movf	plusw1,w,c
 28906  01436E  6E09               	movwf	(btemp+8)^0,c
 28907  014370  6A0A               	clrf	(btemp+9)^0,c
 28908                           
 28909                           ;stkvar	_aexp @ sp[(-13)+11]
 28910  014372  0EFE               	movlw	-2
 28911  014374  50E3               	movf	plusw1,w,c
 28912  014376  2609               	addwf	(btemp+8)^0,f,c
 28913  014378  0E00               	movlw	0
 28914  01437A  220A               	addwfc	(btemp+9)^0,f,c
 28915  01437C  500B               	movf	(btemp+10)^0,w,c
 28916  01437E  2609               	addwf	(btemp+8)^0,f,c
 28917  014380  500C               	movf	(btemp+11)^0,w,c
 28918  014382  220A               	addwfc	(btemp+9)^0,f,c
 28919                           
 28920                           ;stkvar	_temp @ sp[(-13)+8]
 28921  014384  0EFB               	movlw	-5
 28922  014386  0060  F027  FFE3   	movff	btemp+8,plusw1
 28923  01438C  0EFC               	movlw	-4
 28924  01438E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28925  014394  D021               	goto	l8450
 28926  014396                     l8440:
 28927                           
 28928                           ;stkvar	_prod @ sp[(-13)+0]
 28929  014396  90D8               	bcf	status,0,c
 28930  014398  0EF3               	movlw	-13
 28931  01439A  36E3               	rlcf	plusw1,f,c
 28932  01439C  0EF4               	movlw	-12
 28933  01439E  36E3               	rlcf	plusw1,f,c
 28934  0143A0  0EF5               	movlw	-11
 28935  0143A2  36E3               	rlcf	plusw1,f,c
 28936  0143A4  0EF6               	movlw	-10
 28937  0143A6  36E3               	rlcf	plusw1,f,c
 28938                           
 28939                           ;stkvar	_grs @ sp[(-13)+4]
 28940  0143A8  0EFA               	movlw	-6
 28941  0143AA  AEE3               	btfss	plusw1,7,c
 28942  0143AC  D002               	goto	l8446
 28943                           
 28944                           ;stkvar	_prod @ sp[(-13)+0]
 28945  0143AE  0EF3               	movlw	-13
 28946  0143B0  80E3               	bsf	plusw1,0,c
 28947  0143B2                     l8446:
 28948                           
 28949                           ;stkvar	_grs @ sp[(-13)+4]
 28950  0143B2  90D8               	bcf	status,0,c
 28951  0143B4  0EF7               	movlw	-9
 28952  0143B6  36E3               	rlcf	plusw1,f,c
 28953  0143B8  0EF8               	movlw	-8
 28954  0143BA  36E3               	rlcf	plusw1,f,c
 28955  0143BC  0EF9               	movlw	-7
 28956  0143BE  36E3               	rlcf	plusw1,f,c
 28957  0143C0  0EFA               	movlw	-6
 28958  0143C2  36E3               	rlcf	plusw1,f,c
 28959                           
 28960                           ;stkvar	_temp @ sp[(-13)+8]
 28961  0143C4  50E1               	movf	fsr1l,w,c
 28962  0143C6  0FFB               	addlw	-5
 28963  0143C8  6ED9               	movwf	fsr2l,c
 28964  0143CA  50E2               	movf	fsr1h,w,c
 28965  0143CC  6EDA               	movwf	fsr2h,c
 28966  0143CE  0EFF               	movlw	255
 28967  0143D0  22DA               	addwfc	fsr2h,f,c
 28968  0143D2  06DE               	decf	postinc2,f,c
 28969  0143D4  0E00               	movlw	0
 28970  0143D6  5ADD               	subwfb	postdec2,f,c
 28971  0143D8                     l8450:
 28972                           
 28973                           ;stkvar	_prod @ sp[(-13)+0]
 28974  0143D8  0EF5               	movlw	-11
 28975  0143DA  AEE3               	btfss	plusw1,7,c
 28976  0143DC  D7DC               	goto	l8440
 28977                           
 28978                           ;stkvar	_aexp @ sp[(-13)+11]
 28979  0143DE  0EFE               	movlw	-2
 28980  0143E0  6AE3               	clrf	plusw1,c
 28981                           
 28982                           ;stkvar	_grs @ sp[(-13)+4]
 28983  0143E2  0EFA               	movlw	-6
 28984  0143E4  AEE3               	btfss	plusw1,7,c
 28985  0143E6  D020               	goto	l8464
 28986                           
 28987                           ;stkvar	_grs @ sp[(-13)+4]
 28988  0143E8  50E1               	movf	fsr1l,w,c
 28989  0143EA  0FF7               	addlw	-9
 28990  0143EC  6ED9               	movwf	fsr2l,c
 28991  0143EE  50E2               	movf	fsr1h,w,c
 28992  0143F0  6EDA               	movwf	fsr2h,c
 28993  0143F2  0EFF               	movlw	255
 28994  0143F4  22DA               	addwfc	fsr2h,f,c
 28995  0143F6  0EFF               	movlw	255
 28996  0143F8  14DE               	andwf	postinc2,w,c
 28997  0143FA  6E09               	movwf	(btemp+8)^0,c
 28998  0143FC  0EFF               	movlw	255
 28999  0143FE  14DE               	andwf	postinc2,w,c
 29000  014400  6E0A               	movwf	(btemp+9)^0,c
 29001  014402  0EFF               	movlw	255
 29002  014404  14DE               	andwf	postinc2,w,c
 29003  014406  6E0B               	movwf	(btemp+10)^0,c
 29004  014408  0E7F               	movlw	127
 29005  01440A  14DE               	andwf	postinc2,w,c
 29006  01440C  6E0C               	movwf	(btemp+11)^0,c
 29007  01440E  5009               	movf	(btemp+8)^0,w,c
 29008  014410  100A               	iorwf	(btemp+9)^0,w,c
 29009  014412  100B               	iorwf	(btemp+10)^0,w,c
 29010  014414  100C               	iorwf	(btemp+11)^0,w,c
 29011  014416  B4D8               	btfsc	status,2,c
 29012  014418  D004               	goto	l8460
 29013  01441A                     u6890:
 29014                           
 29015                           ;stkvar	_aexp @ sp[(-13)+11]
 29016  01441A  0EFE               	movlw	-2
 29017  01441C  6AE3               	clrf	plusw1,c
 29018  01441E  2AE3               	incf	plusw1,f,c
 29019  014420  D003               	goto	l8464
 29020  014422                     l8460:
 29021                           
 29022                           ;stkvar	_prod @ sp[(-13)+0]
 29023  014422  0EF3               	movlw	-13
 29024  014424  B0E3               	btfsc	plusw1,0,c
 29025  014426  D7F9               	goto	u6890
 29026  014428                     l8464:
 29027                           
 29028                           ;stkvar	_aexp @ sp[(-13)+11]
 29029  014428  0EFE               	movlw	-2
 29030  01442A  50E3               	movf	plusw1,w,c
 29031  01442C  B4D8               	btfsc	status,2,c
 29032  01442E  D036               	goto	l8474
 29033                           
 29034                           ;stkvar	_prod @ sp[(-13)+0]
 29035  014430  50E1               	movf	fsr1l,w,c
 29036  014432  0FF3               	addlw	-13
 29037  014434  6ED9               	movwf	fsr2l,c
 29038  014436  50E2               	movf	fsr1h,w,c
 29039  014438  6EDA               	movwf	fsr2h,c
 29040  01443A  0EFF               	movlw	255
 29041  01443C  22DA               	addwfc	fsr2h,f,c
 29042  01443E  2ADE               	incf	postinc2,f,c
 29043  014440  0E00               	movlw	0
 29044  014442  22DE               	addwfc	postinc2,f,c
 29045  014444  22DE               	addwfc	postinc2,f,c
 29046  014446  22DE               	addwfc	postinc2,f,c
 29047                           
 29048                           ;stkvar	_prod @ sp[(-13)+0]
 29049  014448  0EF6               	movlw	-10
 29050  01444A  A0E3               	btfss	plusw1,0,c
 29051  01444C  D027               	goto	l8474
 29052  01444E  0E01               	movlw	1
 29053  014450  6E0C               	movwf	(btemp+11)^0,c
 29054                           
 29055                           ;stkvar	_prod @ sp[(-13)+0]
 29056  014452  50E1               	movf	fsr1l,w,c
 29057  014454  0FF3               	addlw	-13
 29058  014456  6ED9               	movwf	fsr2l,c
 29059  014458  50E2               	movf	fsr1h,w,c
 29060  01445A  6EDA               	movwf	fsr2h,c
 29061  01445C  0EFF               	movlw	255
 29062  01445E  22DA               	addwfc	fsr2h,f,c
 29063  014460  280C               	incf	(btemp+11)^0,w,c
 29064  014462  52DE               	movf	postinc2,f,c
 29065  014464  D008               	goto	u6930
 29066  014466                     u6935:
 29067  014466  52DE               	movf	postinc2,f,c
 29068  014468  90D8               	bcf	status,0,c
 29069  01446A  BEDC               	btfsc	preinc2,7,c
 29070  01446C  80D8               	bsf	status,0,c
 29071  01446E  32DD               	rrcf	postdec2,f,c
 29072  014470  32DD               	rrcf	postdec2,f,c
 29073  014472  32DD               	rrcf	postdec2,f,c
 29074  014474  32DE               	rrcf	postinc2,f,c
 29075  014476                     u6930:
 29076  014476  2EE8               	decfsz	wreg,f,c
 29077  014478  D7F6               	goto	u6935
 29078                           
 29079                           ;stkvar	_temp @ sp[(-13)+8]
 29080  01447A  0EFB               	movlw	-5
 29081  01447C  50E3               	movf	plusw1,w,c
 29082  01447E  0F01               	addlw	1
 29083  014480  6E01               	movwf	btemp^0,c
 29084  014482  0EFB               	movlw	-5
 29085  014484  0060  F007  FFE3   	movff	btemp,plusw1
 29086  01448A  6A01               	clrf	btemp^0,c
 29087  01448C  0EFC               	movlw	-4
 29088  01448E  50E3               	movf	plusw1,w,c
 29089  014490  2001               	addwfc	btemp^0,w,c
 29090  014492  6E01               	movwf	btemp^0,c
 29091  014494  0EFC               	movlw	-4
 29092  014496  0060  F007  FFE3   	movff	btemp,plusw1
 29093  01449C                     l8474:
 29094                           
 29095                           ;stkvar	_temp @ sp[(-13)+8]
 29096  01449C  0EFC               	movlw	-4
 29097  01449E  BEE3               	btfsc	plusw1,7,c
 29098  0144A0  D020               	goto	l8478
 29099  0144A2  0EFC               	movlw	-4
 29100  0144A4  50E3               	movf	plusw1,w,c
 29101  0144A6  E104               	bnz	u6940
 29102  0144A8  0EFB               	movlw	-5
 29103  0144AA  28E3               	incf	plusw1,w,c
 29104  0144AC  A0D8               	btfss	status,0,c
 29105  0144AE  D019               	goto	l8478
 29106  0144B0                     u6940:
 29107  0144B0  0E00               	movlw	0
 29108  0144B2  6E09               	movwf	(btemp+8)^0,c
 29109  0144B4  0E00               	movlw	0
 29110  0144B6  6E0A               	movwf	(btemp+9)^0,c
 29111  0144B8  0E80               	movlw	128
 29112  0144BA  6E0B               	movwf	(btemp+10)^0,c
 29113  0144BC  0E7F               	movlw	127
 29114  0144BE  6E0C               	movwf	(btemp+11)^0,c
 29115                           
 29116                           ;stkvar	_prod @ sp[(-13)+0]
 29117  0144C0  0EF3               	movlw	-13
 29118  0144C2  0060  F027  FFE3   	movff	btemp+8,plusw1
 29119  0144C8  0EF4               	movlw	-12
 29120  0144CA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29121  0144D0  0EF5               	movlw	-11
 29122  0144D2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29123  0144D8  0EF6               	movlw	-10
 29124  0144DA  0060  F033  FFE3   	movff	btemp+11,plusw1
 29125  0144E0  D044               	goto	l8494
 29126  0144E2                     l8478:
 29127                           
 29128                           ;stkvar	_temp @ sp[(-13)+8]
 29129  0144E2  0EFC               	movlw	-4
 29130  0144E4  BEE3               	btfsc	plusw1,7,c
 29131  0144E6  D007               	goto	u6950
 29132  0144E8  0EFC               	movlw	-4
 29133  0144EA  50E3               	movf	plusw1,w,c
 29134  0144EC  E10F               	bnz	l8484
 29135  0144EE  0EFB               	movlw	-5
 29136  0144F0  04E3               	decf	plusw1,w,c
 29137  0144F2  B0D8               	btfsc	status,0,c
 29138  0144F4  D00B               	goto	l8484
 29139  0144F6                     u6950:
 29140                           
 29141                           ;stkvar	_prod @ sp[(-13)+0]
 29142  0144F6  0EF3               	movlw	-13
 29143  0144F8  6AE3               	clrf	plusw1,c
 29144  0144FA  0EF4               	movlw	-12
 29145  0144FC  6AE3               	clrf	plusw1,c
 29146  0144FE  0EF5               	movlw	-11
 29147  014500  6AE3               	clrf	plusw1,c
 29148  014502  0EF6               	movlw	-10
 29149  014504  6AE3               	clrf	plusw1,c
 29150                           
 29151                           ;stkvar	_sign @ sp[(-13)+12]
 29152  014506  0EFF               	movlw	-1
 29153  014508  6AE3               	clrf	plusw1,c
 29154  01450A  D02F               	goto	l8494
 29155  01450C                     l8484:
 29156                           
 29157                           ;stkvar	_temp @ sp[(-13)+8]
 29158                           ;stkvar	_bexp @ sp[(-13)+10]
 29159  01450C  0EFB               	movlw	-5
 29160  01450E  006F FF8C  F001    	movff	plusw1,btemp
 29161  014514  0EFD               	movlw	-3
 29162  014516  0060  F007  FFE3   	movff	btemp,plusw1
 29163                           
 29164                           ;stkvar	_prod @ sp[(-13)+0]
 29165  01451C  50E1               	movf	fsr1l,w,c
 29166  01451E  0FF3               	addlw	-13
 29167  014520  6ED9               	movwf	fsr2l,c
 29168  014522  50E2               	movf	fsr1h,w,c
 29169  014524  6EDA               	movwf	fsr2h,c
 29170  014526  0EFF               	movlw	255
 29171  014528  22DA               	addwfc	fsr2h,f,c
 29172  01452A  0EFF               	movlw	255
 29173  01452C  16DE               	andwf	postinc2,f,c
 29174  01452E  0EFF               	movlw	255
 29175  014530  16DE               	andwf	postinc2,f,c
 29176  014532  0E7F               	movlw	127
 29177  014534  16DE               	andwf	postinc2,f,c
 29178  014536  0E00               	movlw	0
 29179  014538  16DE               	andwf	postinc2,f,c
 29180                           
 29181                           ;stkvar	_bexp @ sp[(-13)+10]
 29182  01453A  0EFD               	movlw	-3
 29183  01453C  A0E3               	btfss	plusw1,0,c
 29184  01453E  D008               	goto	l8492
 29185                           
 29186                           ;stkvar	_prod @ sp[(-13)+0]
 29187  014540  0EF5               	movlw	245
 29188  014542  24E1               	addwf	fsr1l,w,c
 29189  014544  6ED9               	movwf	fsr2l,c
 29190  014546  0EFF               	movlw	255
 29191  014548  20E2               	addwfc	fsr1h,w,c
 29192  01454A  6EDA               	movwf	fsr2h,c
 29193  01454C  0E00               	movlw	0
 29194  01454E  8EDB               	bsf	plusw2,7,c
 29195  014550                     l8492:
 29196                           
 29197                           ;stkvar	_prod @ sp[(-13)+0]
 29198  014550  0EF6               	movlw	246
 29199  014552  24E1               	addwf	fsr1l,w,c
 29200  014554  6ED9               	movwf	fsr2l,c
 29201  014556  0EFF               	movlw	255
 29202  014558  20E2               	addwfc	fsr1h,w,c
 29203  01455A  6EDA               	movwf	fsr2h,c
 29204                           
 29205                           ;stkvar	_bexp @ sp[(-13)+10]
 29206  01455C  0EFD               	movlw	-3
 29207  01455E  006F FF8C  F00C    	movff	plusw1,btemp+11
 29208  014564  90D8               	bcf	status,0,c
 29209  014566  300C               	rrcf	(btemp+11)^0,w,c
 29210  014568  6EDF               	movwf	indf2,c
 29211  01456A                     l8494:
 29212                           
 29213                           ;stkvar	_sign @ sp[(-13)+12]
 29214  01456A  0EFF               	movlw	-1
 29215  01456C  006F FF8C  F00C    	movff	plusw1,btemp+11
 29216                           
 29217                           ;stkvar	_prod @ sp[(-13)+0]
 29218  014572  0EF6               	movlw	246
 29219  014574  24E1               	addwf	fsr1l,w,c
 29220  014576  6ED9               	movwf	fsr2l,c
 29221  014578  0EFF               	movlw	255
 29222  01457A  20E2               	addwfc	fsr1h,w,c
 29223  01457C  6EDA               	movwf	fsr2h,c
 29224  01457E  500C               	movf	(btemp+11)^0,w,c
 29225  014580  12DF               	iorwf	indf2,f,c
 29226                           
 29227                           ;stkvar	_prod @ sp[(-13)+0]
 29228  014582  0EF3               	movlw	-13
 29229  014584  006F FF8C  F001    	movff	plusw1,btemp
 29230  01458A  0EF4               	movlw	-12
 29231  01458C  006F FF8C  F002    	movff	plusw1,btemp+1
 29232  014592  0EF5               	movlw	-11
 29233  014594  006F FF8C  F003    	movff	plusw1,btemp+2
 29234  01459A  0EF6               	movlw	-10
 29235  01459C  006F FF8C  F004    	movff	plusw1,btemp+3
 29236  0145A2                     l3013:
 29237                           
 29238                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 29239  0145A2  0EEB               	movlw	235
 29240  0145A4  26E1               	addwf	fsr1l,f,c
 29241  0145A6  0EFF               	movlw	255
 29242  0145A8  22E2               	addwfc	fsr1h,f,c
 29243  0145AA  0012               	return		;funcret
 29244  0145AC                     __end_of___flmul:
 29245                           	opt callstack 0
 29246                           
 29247 ;; *************** function _SYSTEM_Initialize *****************
 29248 ;; Defined at:
 29249 ;;		line 50 in file "mcc_generated_files/mcc.c"
 29250 ;; Parameters:    Size  Location     Type
 29251 ;;		None
 29252 ;; Auto vars:     Size  Location     Type
 29253 ;;		None
 29254 ;; Return value:  Size  Location     Type
 29255 ;;                  1  [STACK] void 
 29256 ;; Registers used:
 29257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 29258 ;; Tracked objects:
 29259 ;;		On entry : 0/0
 29260 ;;		On exit  : 3F/3C
 29261 ;;		Unchanged: 0/0
 29262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29267 ;;Total ram usage:        0 bytes
 29268 ;; Hardware stack levels used:    1
 29269 ;; Hardware stack levels required when called:   17
 29270 ;; This function calls:
 29271 ;;		_ADCC_Initialize
 29272 ;;		_CLKREF_Initialize
 29273 ;;		_DMA1_Initialize
 29274 ;;		_DMA2_Initialize
 29275 ;;		_EXT_INT_Initialize
 29276 ;;		_FVR_Initialize
 29277 ;;		_INTERRUPT_Initialize
 29278 ;;		_OSCILLATOR_Initialize
 29279 ;;		_PIN_MANAGER_Initialize
 29280 ;;		_PMD_Initialize
 29281 ;;		_PWM8_Initialize
 29282 ;;		_SPI1_Initialize
 29283 ;;		_TMR2_Initialize
 29284 ;;		_TMR3_Initialize
 29285 ;;		_TMR5_Initialize
 29286 ;;		_TMR6_Initialize
 29287 ;;		_UART1_Initialize
 29288 ;;		_UART2_Initialize
 29289 ;; This function is called by:
 29290 ;;		_main
 29291 ;; This function uses a reentrant model
 29292 ;;
 29293                           
 29294                           	psect	text109
 29295  01B42E                     __ptext109:
 29296                           	opt callstack 0
 29297  01B42E                     _SYSTEM_Initialize:
 29298                           	opt callstack 13
 29299                           
 29300                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 29301                           
 29302                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29303                           ;incstack = 0
 29304  01B42E  ECFB  F0D7         	call	_INTERRUPT_Initialize	;wreg free
 29305                           
 29306                           ; BSR set to: 57
 29307                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 29308  01B432  EC40  F0E0         	call	_PMD_Initialize	;wreg free
 29309                           
 29310                           ; BSR set to: 57
 29311                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 29312  01B436  EC86  F0D5         	call	_PIN_MANAGER_Initialize	;wreg free
 29313                           
 29314                           ; BSR set to: 58
 29315                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 29316  01B43A  EC35  F0E0         	call	_OSCILLATOR_Initialize	;wreg free
 29317                           
 29318                           ; BSR set to: 57
 29319                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 29320  01B43E  ECCB  F0E0         	call	_FVR_Initialize	;wreg free
 29321                           
 29322                           ; BSR set to: 62
 29323                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 29324  01B442  EC91  F0D7         	call	_ADCC_Initialize	;wreg free
 29325                           
 29326                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 29327  01B446  EC13  F0E0         	call	_TMR2_Initialize	;wreg free
 29328                           
 29329                           ; BSR set to: 57
 29330                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 29331  01B44A  EC2A  F0E0         	call	_PWM8_Initialize	;wreg free
 29332                           
 29333                           ; BSR set to: 63
 29334                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 29335  01B44E  ECBF  F0DC         	call	_EXT_INT_Initialize	;wreg free
 29336                           
 29337                           ; BSR set to: 57
 29338                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 29339  01B452  EC92  F0DD         	call	_TMR6_Initialize	;wreg free
 29340                           
 29341                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 29342  01B456  ECA8  F0DA         	call	_TMR3_Initialize	;wreg free
 29343                           
 29344                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 29345  01B45A  EC84  F0DA         	call	_TMR5_Initialize	;wreg free
 29346                           
 29347                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 29348  01B45E  EC60  F0DA         	call	_UART1_Initialize	;wreg free
 29349                           
 29350                           ; BSR set to: 57
 29351                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 29352  01B462  ECC2  F0D8         	call	_UART2_Initialize	;wreg free
 29353                           
 29354                           ; BSR set to: 57
 29355                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 29356  01B466  EC1F  F0E0         	call	_SPI1_Initialize	;wreg free
 29357                           
 29358                           ; BSR set to: 61
 29359                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 29360  01B46A  EC4C  F0D9         	call	_DMA2_Initialize	;wreg free
 29361                           
 29362                           ; BSR set to: 59
 29363                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 29364  01B46E  EC5C  F0D7         	call	_DMA1_Initialize	;wreg free
 29365                           
 29366                           ; BSR set to: 59
 29367                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 29368  01B472  EC9F  F0E0         	call	_CLKREF_Initialize	;wreg free
 29369                           
 29370                           ; BSR set to: 60
 29371                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 29372  01B476  0012               	return		;funcret
 29373  01B478                     __end_of_SYSTEM_Initialize:
 29374                           	opt callstack 0
 29375                           
 29376 ;; *************** function _UART2_Initialize *****************
 29377 ;; Defined at:
 29378 ;;		line 78 in file "mcc_generated_files/uart2.c"
 29379 ;; Parameters:    Size  Location     Type
 29380 ;;		None
 29381 ;; Auto vars:     Size  Location     Type
 29382 ;;		None
 29383 ;; Return value:  Size  Location     Type
 29384 ;;                  1  [STACK] void 
 29385 ;; Registers used:
 29386 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29387 ;; Tracked objects:
 29388 ;;		On entry : 3F/39
 29389 ;;		On exit  : 3F/39
 29390 ;;		Unchanged: 0/0
 29391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29396 ;;Total ram usage:        0 bytes
 29397 ;; Hardware stack levels used:    1
 29398 ;; Hardware stack levels required when called:   16
 29399 ;; This function calls:
 29400 ;;		_UART2_SetRxInterruptHandler
 29401 ;;		_UART2_SetTxInterruptHandler
 29402 ;; This function is called by:
 29403 ;;		_SYSTEM_Initialize
 29404 ;; This function uses a reentrant model
 29405 ;;
 29406                           
 29407                           	psect	text110
 29408  01B184                     __ptext110:
 29409                           	opt callstack 0
 29410  01B184                     _UART2_Initialize:
 29411                           	opt callstack 13
 29412                           
 29413                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 29414                           
 29415                           ; BSR set to: 60
 29416                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29417                           ;incstack = 0
 29418  01B184  0139               	movlb	57	; () banked
 29419  01B186  9596               	bcf	150,2,b	;volatile
 29420                           
 29421                           ; BSR set to: 57
 29422                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 29423  01B188  0E08               	movlw	low _UART2_Receive_ISR
 29424  01B18A  6EE6               	movwf	postinc1,c
 29425  01B18C  0EBF               	movlw	high _UART2_Receive_ISR
 29426  01B18E  6EE6               	movwf	postinc1,c
 29427  01B190  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 29428  01B192  6EE6               	movwf	postinc1,c
 29429  01B194  ECE3  F0DD         	call	_UART2_SetRxInterruptHandler	;wreg free
 29430                           
 29431                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 29432  01B198  0139               	movlb	57	; () banked
 29433  01B19A  9796               	bcf	150,3,b	;volatile
 29434                           
 29435                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 29436  01B19C  0EF8               	movlw	low _UART2_Transmit_ISR
 29437  01B19E  6EE6               	movwf	postinc1,c
 29438  01B1A0  0EBA               	movlw	high _UART2_Transmit_ISR
 29439  01B1A2  6EE6               	movwf	postinc1,c
 29440  01B1A4  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 29441  01B1A6  6EE6               	movwf	postinc1,c
 29442  01B1A8  ECCF  F0DD         	call	_UART2_SetTxInterruptHandler	;wreg free
 29443                           
 29444                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 29445  01B1AC  013D               	movlb	61	; () banked
 29446  01B1AE  6BD4               	clrf	212,b	;volatile
 29447                           
 29448                           ; BSR set to: 61
 29449                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 29450  01B1B0  6BD6               	clrf	214,b	;volatile
 29451                           
 29452                           ; BSR set to: 61
 29453                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 29454  01B1B2  6BD8               	clrf	216,b	;volatile
 29455                           
 29456                           ; BSR set to: 61
 29457                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 29458  01B1B4  0EB0               	movlw	176
 29459  01B1B6  6FDA               	movwf	218,b	;volatile
 29460                           
 29461                           ; BSR set to: 61
 29462                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 29463  01B1B8  0E80               	movlw	128
 29464  01B1BA  6FDB               	movwf	219,b	;volatile
 29465                           
 29466                           ; BSR set to: 61
 29467                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 29468  01B1BC  6BDC               	clrf	220,b	;volatile
 29469                           
 29470                           ; BSR set to: 61
 29471                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 29472  01B1BE  0E82               	movlw	130
 29473  01B1C0  6FDD               	movwf	221,b	;volatile
 29474                           
 29475                           ; BSR set to: 61
 29476                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 29477  01B1C2  0E06               	movlw	6
 29478  01B1C4  6FDE               	movwf	222,b	;volatile
 29479                           
 29480                           ; BSR set to: 61
 29481                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 29482  01B1C6  6BDF               	clrf	223,b	;volatile
 29483                           
 29484                           ; BSR set to: 61
 29485                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 29486  01B1C8  6BE0               	clrf	224,b	;volatile
 29487                           
 29488                           ; BSR set to: 61
 29489                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 29490  01B1CA  6BE1               	clrf	225,b	;volatile
 29491                           
 29492                           ; BSR set to: 61
 29493                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 29494  01B1CC  6BE2               	clrf	226,b	;volatile
 29495                           
 29496                           ; BSR set to: 61
 29497                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 29498  01B1CE  0100               	movlb	0	; () banked
 29499  01B1D0  6BCD               	clrf	_uart2TxHead& (0+255),b	;volatile
 29500                           
 29501                           ; BSR set to: 0
 29502                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 29503  01B1D2  6A45               	clrf	_uart2TxTail^0,c	;volatile
 29504                           
 29505                           ; BSR set to: 0
 29506                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 29507  01B1D4  0E40               	movlw	64
 29508  01B1D6  6E44               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 29509                           
 29510                           ; BSR set to: 0
 29511                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 29512  01B1D8  6A43               	clrf	_uart2RxHead^0,c	;volatile
 29513                           
 29514                           ; BSR set to: 0
 29515                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 29516  01B1DA  6BCC               	clrf	_uart2RxTail& (0+255),b	;volatile
 29517                           
 29518                           ; BSR set to: 0
 29519                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 29520  01B1DC  6BCB               	clrf	_uart2RxCount& (0+255),b	;volatile
 29521                           
 29522                           ; BSR set to: 0
 29523                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 29524  01B1DE  0139               	movlb	57	; () banked
 29525  01B1E0  8596               	bsf	150,2,b	;volatile
 29526                           
 29527                           ; BSR set to: 57
 29528                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 29529  01B1E2  0012               	return		;funcret
 29530  01B1E4                     __end_of_UART2_Initialize:
 29531                           	opt callstack 0
 29532                           
 29533 ;; *************** function _UART2_SetTxInterruptHandler *****************
 29534 ;; Defined at:
 29535 ;;		line 252 in file "mcc_generated_files/uart2.c"
 29536 ;; Parameters:    Size  Location     Type
 29537 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29538 ;;		 -> UART2_Transmit_ISR(1), 
 29539 ;; Auto vars:     Size  Location     Type
 29540 ;;		None
 29541 ;; Return value:  Size  Location     Type
 29542 ;;                  1  [STACK] void 
 29543 ;; Registers used:
 29544 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29545 ;; Tracked objects:
 29546 ;;		On entry : 3F/39
 29547 ;;		On exit  : 0/0
 29548 ;;		Unchanged: 0/0
 29549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29554 ;;Total ram usage:        0 bytes
 29555 ;; Hardware stack levels used:    1
 29556 ;; Hardware stack levels required when called:   15
 29557 ;; This function calls:
 29558 ;;		Nothing
 29559 ;; This function is called by:
 29560 ;;		_UART2_Initialize
 29561 ;; This function uses a reentrant model
 29562 ;;
 29563                           
 29564                           	psect	text111
 29565  01BB9E                     __ptext111:
 29566                           	opt callstack 0
 29567  01BB9E                     _UART2_SetTxInterruptHandler:
 29568                           	opt callstack 13
 29569                           
 29570                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 29571                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29572                           
 29573                           ; BSR set to: 57
 29574                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29575                           ;incstack = 0
 29576  01BB9E  50E1               	movf	fsr1l,w,c
 29577  01BBA0  0FFD               	addlw	-3
 29578  01BBA2  6ED9               	movwf	fsr2l,c
 29579  01BBA4  50E2               	movf	fsr1h,w,c
 29580  01BBA6  6EDA               	movwf	fsr2h,c
 29581  01BBA8  0EFF               	movlw	255
 29582  01BBAA  22DA               	addwfc	fsr2h,f,c
 29583  01BBAC  006F FF78  F0B4    	movff	postinc2,_UART2_TxInterruptHandler
 29584  01BBB2  006F FF78  F0B5    	movff	postinc2,_UART2_TxInterruptHandler+1
 29585  01BBB8  006F FF74  F0B6    	movff	postdec2,_UART2_TxInterruptHandler+2
 29586                           
 29587                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29588  01BBBE  52E5               	movf	postdec1,f,c
 29589  01BBC0  52E5               	movf	postdec1,f,c
 29590  01BBC2  52E5               	movf	postdec1,f,c
 29591  01BBC4  0012               	return		;funcret
 29592  01BBC6                     __end_of_UART2_SetTxInterruptHandler:
 29593                           	opt callstack 0
 29594                           
 29595 ;; *************** function _UART2_SetRxInterruptHandler *****************
 29596 ;; Defined at:
 29597 ;;		line 248 in file "mcc_generated_files/uart2.c"
 29598 ;; Parameters:    Size  Location     Type
 29599 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29600 ;;		 -> UART2_Receive_ISR(1), 
 29601 ;; Auto vars:     Size  Location     Type
 29602 ;;		None
 29603 ;; Return value:  Size  Location     Type
 29604 ;;                  1  [STACK] void 
 29605 ;; Registers used:
 29606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29607 ;; Tracked objects:
 29608 ;;		On entry : 3F/39
 29609 ;;		On exit  : 0/0
 29610 ;;		Unchanged: 0/0
 29611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29616 ;;Total ram usage:        0 bytes
 29617 ;; Hardware stack levels used:    1
 29618 ;; Hardware stack levels required when called:   15
 29619 ;; This function calls:
 29620 ;;		Nothing
 29621 ;; This function is called by:
 29622 ;;		_UART2_Initialize
 29623 ;; This function uses a reentrant model
 29624 ;;
 29625                           
 29626                           	psect	text112
 29627  01BBC6                     __ptext112:
 29628                           	opt callstack 0
 29629  01BBC6                     _UART2_SetRxInterruptHandler:
 29630                           	opt callstack 13
 29631                           
 29632                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 29633                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29634                           
 29635                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29636                           ;incstack = 0
 29637  01BBC6  50E1               	movf	fsr1l,w,c
 29638  01BBC8  0FFD               	addlw	-3
 29639  01BBCA  6ED9               	movwf	fsr2l,c
 29640  01BBCC  50E2               	movf	fsr1h,w,c
 29641  01BBCE  6EDA               	movwf	fsr2h,c
 29642  01BBD0  0EFF               	movlw	255
 29643  01BBD2  22DA               	addwfc	fsr2h,f,c
 29644  01BBD4  006F FF78  F0B7    	movff	postinc2,_UART2_RxInterruptHandler
 29645  01BBDA  006F FF78  F0B8    	movff	postinc2,_UART2_RxInterruptHandler+1
 29646  01BBE0  006F FF74  F0B9    	movff	postdec2,_UART2_RxInterruptHandler+2
 29647                           
 29648                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29649  01BBE6  52E5               	movf	postdec1,f,c
 29650  01BBE8  52E5               	movf	postdec1,f,c
 29651  01BBEA  52E5               	movf	postdec1,f,c
 29652  01BBEC  0012               	return		;funcret
 29653  01BBEE                     __end_of_UART2_SetRxInterruptHandler:
 29654                           	opt callstack 0
 29655                           
 29656 ;; *************** function _UART1_Initialize *****************
 29657 ;; Defined at:
 29658 ;;		line 75 in file "mcc_generated_files/uart1.c"
 29659 ;; Parameters:    Size  Location     Type
 29660 ;;		None
 29661 ;; Auto vars:     Size  Location     Type
 29662 ;;		None
 29663 ;; Return value:  Size  Location     Type
 29664 ;;                  1  [STACK] void 
 29665 ;; Registers used:
 29666 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29667 ;; Tracked objects:
 29668 ;;		On entry : 0/39
 29669 ;;		On exit  : 3F/39
 29670 ;;		Unchanged: 0/0
 29671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29676 ;;Total ram usage:        0 bytes
 29677 ;; Hardware stack levels used:    1
 29678 ;; Hardware stack levels required when called:   16
 29679 ;; This function calls:
 29680 ;;		_UART1_SetRxInterruptHandler
 29681 ;; This function is called by:
 29682 ;;		_SYSTEM_Initialize
 29683 ;; This function uses a reentrant model
 29684 ;;
 29685                           
 29686                           	psect	text113
 29687  01B4C0                     __ptext113:
 29688                           	opt callstack 0
 29689  01B4C0                     _UART1_Initialize:
 29690                           	opt callstack 13
 29691                           
 29692                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 29693                           
 29694                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29695                           ;incstack = 0
 29696  01B4C0  0139               	movlb	57	; () banked
 29697  01B4C2  9793               	bcf	147,3,b	;volatile
 29698                           
 29699                           ; BSR set to: 57
 29700                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 29701  01B4C4  0EA0               	movlw	low _UART1_Receive_ISR
 29702  01B4C6  6EE6               	movwf	postinc1,c
 29703  01B4C8  0EBF               	movlw	high _UART1_Receive_ISR
 29704  01B4CA  6EE6               	movwf	postinc1,c
 29705  01B4CC  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 29706  01B4CE  6EE6               	movwf	postinc1,c
 29707  01B4D0  ECF7  F0DD         	call	_UART1_SetRxInterruptHandler	;wreg free
 29708                           
 29709                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 29710  01B4D4  013D               	movlb	61	; () banked
 29711  01B4D6  6BEC               	clrf	236,b	;volatile
 29712                           
 29713                           ; BSR set to: 61
 29714                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 29715  01B4D8  6BED               	clrf	237,b	;volatile
 29716                           
 29717                           ; BSR set to: 61
 29718                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 29719  01B4DA  6BEE               	clrf	238,b	;volatile
 29720                           
 29721                           ; BSR set to: 61
 29722                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 29723  01B4DC  6BEF               	clrf	239,b	;volatile
 29724                           
 29725                           ; BSR set to: 61
 29726                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 29727  01B4DE  6BF0               	clrf	240,b	;volatile
 29728                           
 29729                           ; BSR set to: 61
 29730                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 29731  01B4E0  6BF1               	clrf	241,b	;volatile
 29732                           
 29733                           ; BSR set to: 61
 29734                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 29735  01B4E2  0EB0               	movlw	176
 29736  01B4E4  6FF2               	movwf	242,b	;volatile
 29737                           
 29738                           ; BSR set to: 61
 29739                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 29740  01B4E6  0E80               	movlw	128
 29741  01B4E8  6FF3               	movwf	243,b	;volatile
 29742                           
 29743                           ; BSR set to: 61
 29744                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 29745  01B4EA  6BF4               	clrf	244,b	;volatile
 29746                           
 29747                           ; BSR set to: 61
 29748                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 29749  01B4EC  0E8A               	movlw	138
 29750  01B4EE  6FF5               	movwf	245,b	;volatile
 29751                           
 29752                           ; BSR set to: 61
 29753                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 29754  01B4F0  6BF6               	clrf	246,b	;volatile
 29755                           
 29756                           ; BSR set to: 61
 29757                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 29758  01B4F2  6BF7               	clrf	247,b	;volatile
 29759                           
 29760                           ; BSR set to: 61
 29761                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 29762  01B4F4  6BF8               	clrf	248,b	;volatile
 29763                           
 29764                           ; BSR set to: 61
 29765                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 29766  01B4F6  6BF9               	clrf	249,b	;volatile
 29767                           
 29768                           ; BSR set to: 61
 29769                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 29770  01B4F8  6BFA               	clrf	250,b	;volatile
 29771                           
 29772                           ; BSR set to: 61
 29773                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 29774  01B4FA  6A47               	clrf	_uart1RxHead^0,c	;volatile
 29775                           
 29776                           ; BSR set to: 61
 29777                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 29778  01B4FC  6A46               	clrf	_uart1RxTail^0,c	;volatile
 29779                           
 29780                           ; BSR set to: 61
 29781                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 29782  01B4FE  0100               	movlb	0	; () banked
 29783  01B500  6BCE               	clrf	_uart1RxCount& (0+255),b	;volatile
 29784                           
 29785                           ; BSR set to: 0
 29786                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 29787  01B502  0139               	movlb	57	; () banked
 29788  01B504  8793               	bsf	147,3,b	;volatile
 29789                           
 29790                           ; BSR set to: 57
 29791                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 29792  01B506  0012               	return		;funcret
 29793  01B508                     __end_of_UART1_Initialize:
 29794                           	opt callstack 0
 29795                           
 29796 ;; *************** function _UART1_SetRxInterruptHandler *****************
 29797 ;; Defined at:
 29798 ;;		line 207 in file "mcc_generated_files/uart1.c"
 29799 ;; Parameters:    Size  Location     Type
 29800 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29801 ;;		 -> UART1_Receive_ISR(1), 
 29802 ;; Auto vars:     Size  Location     Type
 29803 ;;		None
 29804 ;; Return value:  Size  Location     Type
 29805 ;;                  1  [STACK] void 
 29806 ;; Registers used:
 29807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29808 ;; Tracked objects:
 29809 ;;		On entry : 3F/39
 29810 ;;		On exit  : 0/0
 29811 ;;		Unchanged: 0/0
 29812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29817 ;;Total ram usage:        0 bytes
 29818 ;; Hardware stack levels used:    1
 29819 ;; Hardware stack levels required when called:   15
 29820 ;; This function calls:
 29821 ;;		Nothing
 29822 ;; This function is called by:
 29823 ;;		_UART1_Initialize
 29824 ;; This function uses a reentrant model
 29825 ;;
 29826                           
 29827                           	psect	text114
 29828  01BBEE                     __ptext114:
 29829                           	opt callstack 0
 29830  01BBEE                     _UART1_SetRxInterruptHandler:
 29831                           	opt callstack 13
 29832                           
 29833                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 29834                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29835                           
 29836                           ; BSR set to: 57
 29837                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29838                           ;incstack = 0
 29839  01BBEE  50E1               	movf	fsr1l,w,c
 29840  01BBF0  0FFD               	addlw	-3
 29841  01BBF2  6ED9               	movwf	fsr2l,c
 29842  01BBF4  50E2               	movf	fsr1h,w,c
 29843  01BBF6  6EDA               	movwf	fsr2h,c
 29844  01BBF8  0EFF               	movlw	255
 29845  01BBFA  22DA               	addwfc	fsr2h,f,c
 29846  01BBFC  006F FF78  F0B1    	movff	postinc2,_UART1_RxInterruptHandler
 29847  01BC02  006F FF78  F0B2    	movff	postinc2,_UART1_RxInterruptHandler+1
 29848  01BC08  006F FF74  F0B3    	movff	postdec2,_UART1_RxInterruptHandler+2
 29849                           
 29850                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29851  01BC0E  52E5               	movf	postdec1,f,c
 29852  01BC10  52E5               	movf	postdec1,f,c
 29853  01BC12  52E5               	movf	postdec1,f,c
 29854  01BC14  0012               	return		;funcret
 29855  01BC16                     __end_of_UART1_SetRxInterruptHandler:
 29856                           	opt callstack 0
 29857                           
 29858 ;; *************** function _TMR6_Initialize *****************
 29859 ;; Defined at:
 29860 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 29861 ;; Parameters:    Size  Location     Type
 29862 ;;		None
 29863 ;; Auto vars:     Size  Location     Type
 29864 ;;		None
 29865 ;; Return value:  Size  Location     Type
 29866 ;;                  1  [STACK] void 
 29867 ;; Registers used:
 29868 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29869 ;; Tracked objects:
 29870 ;;		On entry : 3F/39
 29871 ;;		On exit  : 0/0
 29872 ;;		Unchanged: 0/0
 29873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29878 ;;Total ram usage:        0 bytes
 29879 ;; Hardware stack levels used:    1
 29880 ;; Hardware stack levels required when called:   16
 29881 ;; This function calls:
 29882 ;;		_TMR6_SetInterruptHandler
 29883 ;; This function is called by:
 29884 ;;		_SYSTEM_Initialize
 29885 ;; This function uses a reentrant model
 29886 ;;
 29887                           
 29888                           	psect	text115
 29889  01BB24                     __ptext115:
 29890                           	opt callstack 0
 29891  01BB24                     _TMR6_Initialize:
 29892                           	opt callstack 13
 29893                           
 29894                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 29895                           
 29896                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29897                           ;incstack = 0
 29898  01BB24  0E01               	movlw	1
 29899  01BB26  6E96               	movwf	150,c	;volatile
 29900                           
 29901                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 29902  01BB28  6A95               	clrf	149,c	;volatile
 29903                           
 29904                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 29905  01BB2A  6A97               	clrf	151,c	;volatile
 29906                           
 29907                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 29908  01BB2C  0E7C               	movlw	124
 29909  01BB2E  6E93               	movwf	147,c	;volatile
 29910                           
 29911                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 29912  01BB30  6A92               	clrf	146,c	;volatile
 29913                           
 29914                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 29915  01BB32  0139               	movlb	57	; () banked
 29916  01BB34  91A9               	bcf	169,0,b	;volatile
 29917                           
 29918                           ; BSR set to: 57
 29919                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 29920  01BB36  8199               	bsf	153,0,b	;volatile
 29921                           
 29922                           ; BSR set to: 57
 29923                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 29924  01BB38  0E96               	movlw	low _TMR6_DefaultInterruptHandler
 29925  01BB3A  6EE6               	movwf	postinc1,c
 29926  01BB3C  0EB3               	movlw	high _TMR6_DefaultInterruptHandler
 29927  01BB3E  6EE6               	movwf	postinc1,c
 29928  01BB40  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 29929  01BB42  6EE6               	movwf	postinc1,c
 29930  01BB44  EC0B  F0DE         	call	_TMR6_SetInterruptHandler	;wreg free
 29931                           
 29932                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 29933  01BB48  0EE0               	movlw	224
 29934  01BB4A  6E94               	movwf	148,c	;volatile
 29935                           
 29936                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29937  01BB4C  0012               	return		;funcret
 29938  01BB4E                     __end_of_TMR6_Initialize:
 29939                           	opt callstack 0
 29940                           
 29941 ;; *************** function _TMR6_SetInterruptHandler *****************
 29942 ;; Defined at:
 29943 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 29944 ;; Parameters:    Size  Location     Type
 29945 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29946 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 29947 ;; Auto vars:     Size  Location     Type
 29948 ;;		None
 29949 ;; Return value:  Size  Location     Type
 29950 ;;                  1  [STACK] void 
 29951 ;; Registers used:
 29952 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29953 ;; Tracked objects:
 29954 ;;		On entry : 3F/39
 29955 ;;		On exit  : 0/0
 29956 ;;		Unchanged: 0/0
 29957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29962 ;;Total ram usage:        0 bytes
 29963 ;; Hardware stack levels used:    1
 29964 ;; Hardware stack levels required when called:   15
 29965 ;; This function calls:
 29966 ;;		Nothing
 29967 ;; This function is called by:
 29968 ;;		_TMR6_Initialize
 29969 ;; This function uses a reentrant model
 29970 ;;
 29971                           
 29972                           	psect	text116
 29973  01BC16                     __ptext116:
 29974                           	opt callstack 0
 29975  01BC16                     _TMR6_SetInterruptHandler:
 29976                           	opt callstack 13
 29977                           
 29978                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 29979                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29980                           
 29981                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29982                           ;incstack = 0
 29983  01BC16  50E1               	movf	fsr1l,w,c
 29984  01BC18  0FFD               	addlw	-3
 29985  01BC1A  6ED9               	movwf	fsr2l,c
 29986  01BC1C  50E2               	movf	fsr1h,w,c
 29987  01BC1E  6EDA               	movwf	fsr2h,c
 29988  01BC20  0EFF               	movlw	255
 29989  01BC22  22DA               	addwfc	fsr2h,f,c
 29990  01BC24  006F FF78  F0A8    	movff	postinc2,_TMR6_InterruptHandler
 29991  01BC2A  006F FF78  F0A9    	movff	postinc2,_TMR6_InterruptHandler+1
 29992  01BC30  006F FF74  F0AA    	movff	postdec2,_TMR6_InterruptHandler+2
 29993                           
 29994                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29995  01BC36  52E5               	movf	postdec1,f,c
 29996  01BC38  52E5               	movf	postdec1,f,c
 29997  01BC3A  52E5               	movf	postdec1,f,c
 29998  01BC3C  0012               	return		;funcret
 29999  01BC3E                     __end_of_TMR6_SetInterruptHandler:
 30000                           	opt callstack 0
 30001                           
 30002 ;; *************** function _TMR5_Initialize *****************
 30003 ;; Defined at:
 30004 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 30005 ;; Parameters:    Size  Location     Type
 30006 ;;		None
 30007 ;; Auto vars:     Size  Location     Type
 30008 ;;		None
 30009 ;; Return value:  Size  Location     Type
 30010 ;;                  1  [STACK] void 
 30011 ;; Registers used:
 30012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 30013 ;; Tracked objects:
 30014 ;;		On entry : 0/39
 30015 ;;		On exit  : 0/0
 30016 ;;		Unchanged: 0/0
 30017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30022 ;;Total ram usage:        0 bytes
 30023 ;; Hardware stack levels used:    1
 30024 ;; Hardware stack levels required when called:   16
 30025 ;; This function calls:
 30026 ;;		_TMR5_SetInterruptHandler
 30027 ;; This function is called by:
 30028 ;;		_SYSTEM_Initialize
 30029 ;; This function uses a reentrant model
 30030 ;;
 30031                           
 30032                           	psect	text117
 30033  01B508                     __ptext117:
 30034                           	opt callstack 0
 30035  01B508                     _TMR5_Initialize:
 30036                           	opt callstack 13
 30037                           
 30038                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 30039                           
 30040                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30041                           ;incstack = 0
 30042  01B508  6A9B               	clrf	155,c	;volatile
 30043                           
 30044                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 30045  01B50A  6A9C               	clrf	156,c	;volatile
 30046                           
 30047                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 30048  01B50C  0E01               	movlw	1
 30049  01B50E  6E9D               	movwf	157,c	;volatile
 30050                           
 30051                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 30052  01B510  0E63               	movlw	99
 30053  01B512  6E99               	movwf	153,c	;volatile
 30054                           
 30055                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 30056  01B514  0EC0               	movlw	192
 30057  01B516  6E98               	movwf	152,c	;volatile
 30058                           
 30059                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 30060  01B518  5098               	movf	152,w,c	;volatile
 30061  01B51A  006F FE64  F001    	movff	16281,btemp	;volatile
 30062  01B520  6A02               	clrf	(btemp+1)^0,c
 30063  01B522  0060  F004  F002   	movff	btemp,btemp+1
 30064  01B528  6A01               	clrf	btemp^0,c
 30065  01B52A  1001               	iorwf	btemp^0,w,c
 30066  01B52C  0100               	movlb	0	; () banked
 30067  01B52E  6FC8               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 30068  01B530  5002               	movf	(btemp+1)^0,w,c
 30069  01B532  6FC9               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 30070                           
 30071                           ; BSR set to: 0
 30072                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 30073  01B534  0139               	movlb	57	; () banked
 30074  01B536  9DA8               	bcf	168,6,b	;volatile
 30075                           
 30076                           ; BSR set to: 57
 30077                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 30078  01B538  8D98               	bsf	152,6,b	;volatile
 30079                           
 30080                           ; BSR set to: 57
 30081                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 30082  01B53A  0EDC               	movlw	low _TMR5_DefaultInterruptHandler
 30083  01B53C  6EE6               	movwf	postinc1,c
 30084  01B53E  0EB8               	movlw	high _TMR5_DefaultInterruptHandler
 30085  01B540  6EE6               	movwf	postinc1,c
 30086  01B542  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 30087  01B544  6EE6               	movwf	postinc1,c
 30088  01B546  EC1F  F0DE         	call	_TMR5_SetInterruptHandler	;wreg free
 30089                           
 30090                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 30091  01B54A  0E31               	movlw	49
 30092  01B54C  6E9A               	movwf	154,c	;volatile
 30093                           
 30094                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30095  01B54E  0012               	return		;funcret
 30096  01B550                     __end_of_TMR5_Initialize:
 30097                           	opt callstack 0
 30098                           
 30099 ;; *************** function _TMR5_SetInterruptHandler *****************
 30100 ;; Defined at:
 30101 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 30102 ;; Parameters:    Size  Location     Type
 30103 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30104 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 30105 ;; Auto vars:     Size  Location     Type
 30106 ;;		None
 30107 ;; Return value:  Size  Location     Type
 30108 ;;                  1  [STACK] void 
 30109 ;; Registers used:
 30110 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30111 ;; Tracked objects:
 30112 ;;		On entry : 3F/39
 30113 ;;		On exit  : 0/0
 30114 ;;		Unchanged: 0/0
 30115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30120 ;;Total ram usage:        0 bytes
 30121 ;; Hardware stack levels used:    1
 30122 ;; Hardware stack levels required when called:   15
 30123 ;; This function calls:
 30124 ;;		Nothing
 30125 ;; This function is called by:
 30126 ;;		_TMR5_Initialize
 30127 ;; This function uses a reentrant model
 30128 ;;
 30129                           
 30130                           	psect	text118
 30131  01BC3E                     __ptext118:
 30132                           	opt callstack 0
 30133  01BC3E                     _TMR5_SetInterruptHandler:
 30134                           	opt callstack 13
 30135                           
 30136                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 30137                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30138                           
 30139                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30140                           ;incstack = 0
 30141  01BC3E  50E1               	movf	fsr1l,w,c
 30142  01BC40  0FFD               	addlw	-3
 30143  01BC42  6ED9               	movwf	fsr2l,c
 30144  01BC44  50E2               	movf	fsr1h,w,c
 30145  01BC46  6EDA               	movwf	fsr2h,c
 30146  01BC48  0EFF               	movlw	255
 30147  01BC4A  22DA               	addwfc	fsr2h,f,c
 30148  01BC4C  006F FF78  F0A5    	movff	postinc2,_TMR5_InterruptHandler
 30149  01BC52  006F FF78  F0A6    	movff	postinc2,_TMR5_InterruptHandler+1
 30150  01BC58  006F FF74  F0A7    	movff	postdec2,_TMR5_InterruptHandler+2
 30151                           
 30152                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30153  01BC5E  52E5               	movf	postdec1,f,c
 30154  01BC60  52E5               	movf	postdec1,f,c
 30155  01BC62  52E5               	movf	postdec1,f,c
 30156  01BC64  0012               	return		;funcret
 30157  01BC66                     __end_of_TMR5_SetInterruptHandler:
 30158                           	opt callstack 0
 30159                           
 30160 ;; *************** function _TMR3_Initialize *****************
 30161 ;; Defined at:
 30162 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 30163 ;; Parameters:    Size  Location     Type
 30164 ;;		None
 30165 ;; Auto vars:     Size  Location     Type
 30166 ;;		None
 30167 ;; Return value:  Size  Location     Type
 30168 ;;                  1  [STACK] void 
 30169 ;; Registers used:
 30170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 30171 ;; Tracked objects:
 30172 ;;		On entry : 0/39
 30173 ;;		On exit  : 0/0
 30174 ;;		Unchanged: 0/0
 30175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30180 ;;Total ram usage:        0 bytes
 30181 ;; Hardware stack levels used:    1
 30182 ;; Hardware stack levels required when called:   16
 30183 ;; This function calls:
 30184 ;;		_TMR3_SetInterruptHandler
 30185 ;; This function is called by:
 30186 ;;		_SYSTEM_Initialize
 30187 ;; This function uses a reentrant model
 30188 ;;
 30189                           
 30190                           	psect	text119
 30191  01B550                     __ptext119:
 30192                           	opt callstack 0
 30193  01B550                     _TMR3_Initialize:
 30194                           	opt callstack 13
 30195                           
 30196                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 30197                           
 30198                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30199                           ;incstack = 0
 30200  01B550  6AA7               	clrf	167,c	;volatile
 30201                           
 30202                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 30203  01B552  6AA8               	clrf	168,c	;volatile
 30204                           
 30205                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 30206  01B554  0E01               	movlw	1
 30207  01B556  6EA9               	movwf	169,c	;volatile
 30208                           
 30209                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 30210  01B558  0E3C               	movlw	60
 30211  01B55A  6EA5               	movwf	165,c	;volatile
 30212                           
 30213                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 30214  01B55C  0EB0               	movlw	176
 30215  01B55E  6EA4               	movwf	164,c	;volatile
 30216                           
 30217                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 30218  01B560  50A4               	movf	164,w,c	;volatile
 30219  01B562  006F FE94  F001    	movff	16293,btemp	;volatile
 30220  01B568  6A02               	clrf	(btemp+1)^0,c
 30221  01B56A  0060  F004  F002   	movff	btemp,btemp+1
 30222  01B570  6A01               	clrf	btemp^0,c
 30223  01B572  1001               	iorwf	btemp^0,w,c
 30224  01B574  0100               	movlb	0	; () banked
 30225  01B576  6FC4               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 30226  01B578  5002               	movf	(btemp+1)^0,w,c
 30227  01B57A  6FC5               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 30228                           
 30229                           ; BSR set to: 0
 30230                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 30231  01B57C  0139               	movlb	57	; () banked
 30232  01B57E  9DA6               	bcf	166,6,b	;volatile
 30233                           
 30234                           ; BSR set to: 57
 30235                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 30236  01B580  8D96               	bsf	150,6,b	;volatile
 30237                           
 30238                           ; BSR set to: 57
 30239                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 30240  01B582  0EC0               	movlw	low _TMR3_DefaultInterruptHandler
 30241  01B584  6EE6               	movwf	postinc1,c
 30242  01B586  0EC1               	movlw	high _TMR3_DefaultInterruptHandler
 30243  01B588  6EE6               	movwf	postinc1,c
 30244  01B58A  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 30245  01B58C  6EE6               	movwf	postinc1,c
 30246  01B58E  EC33  F0DE         	call	_TMR3_SetInterruptHandler	;wreg free
 30247                           
 30248                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 30249  01B592  0E31               	movlw	49
 30250  01B594  6EA6               	movwf	166,c	;volatile
 30251                           
 30252                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30253  01B596  0012               	return		;funcret
 30254  01B598                     __end_of_TMR3_Initialize:
 30255                           	opt callstack 0
 30256                           
 30257 ;; *************** function _TMR3_SetInterruptHandler *****************
 30258 ;; Defined at:
 30259 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 30260 ;; Parameters:    Size  Location     Type
 30261 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30262 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 30263 ;; Auto vars:     Size  Location     Type
 30264 ;;		None
 30265 ;; Return value:  Size  Location     Type
 30266 ;;                  1  [STACK] void 
 30267 ;; Registers used:
 30268 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30269 ;; Tracked objects:
 30270 ;;		On entry : 0/1
 30271 ;;		On exit  : 0/0
 30272 ;;		Unchanged: 0/0
 30273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30278 ;;Total ram usage:        0 bytes
 30279 ;; Hardware stack levels used:    1
 30280 ;; Hardware stack levels required when called:   15
 30281 ;; This function calls:
 30282 ;;		Nothing
 30283 ;; This function is called by:
 30284 ;;		_TMR3_Initialize
 30285 ;;		_init_bsoc
 30286 ;; This function uses a reentrant model
 30287 ;;
 30288                           
 30289                           	psect	text120
 30290  01BC66                     __ptext120:
 30291                           	opt callstack 0
 30292  01BC66                     _TMR3_SetInterruptHandler:
 30293                           	opt callstack 14
 30294                           
 30295                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 30296                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30297                           
 30298                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30299                           ;incstack = 0
 30300  01BC66  50E1               	movf	fsr1l,w,c
 30301  01BC68  0FFD               	addlw	-3
 30302  01BC6A  6ED9               	movwf	fsr2l,c
 30303  01BC6C  50E2               	movf	fsr1h,w,c
 30304  01BC6E  6EDA               	movwf	fsr2h,c
 30305  01BC70  0EFF               	movlw	255
 30306  01BC72  22DA               	addwfc	fsr2h,f,c
 30307  01BC74  006F FF78  F0A2    	movff	postinc2,_TMR3_InterruptHandler
 30308  01BC7A  006F FF78  F0A3    	movff	postinc2,_TMR3_InterruptHandler+1
 30309  01BC80  006F FF74  F0A4    	movff	postdec2,_TMR3_InterruptHandler+2
 30310                           
 30311                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30312  01BC86  52E5               	movf	postdec1,f,c
 30313  01BC88  52E5               	movf	postdec1,f,c
 30314  01BC8A  52E5               	movf	postdec1,f,c
 30315  01BC8C  0012               	return		;funcret
 30316  01BC8E                     __end_of_TMR3_SetInterruptHandler:
 30317                           	opt callstack 0
 30318                           
 30319 ;; *************** function _TMR2_Initialize *****************
 30320 ;; Defined at:
 30321 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 30322 ;; Parameters:    Size  Location     Type
 30323 ;;		None
 30324 ;; Auto vars:     Size  Location     Type
 30325 ;;		None
 30326 ;; Return value:  Size  Location     Type
 30327 ;;                  1  [STACK] void 
 30328 ;; Registers used:
 30329 ;;		wreg, status,2
 30330 ;; Tracked objects:
 30331 ;;		On entry : 0/3E
 30332 ;;		On exit  : 3F/39
 30333 ;;		Unchanged: 0/0
 30334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30339 ;;Total ram usage:        0 bytes
 30340 ;; Hardware stack levels used:    1
 30341 ;; Hardware stack levels required when called:   15
 30342 ;; This function calls:
 30343 ;;		Nothing
 30344 ;; This function is called by:
 30345 ;;		_SYSTEM_Initialize
 30346 ;; This function uses a reentrant model
 30347 ;;
 30348                           
 30349                           	psect	text121
 30350  01C026                     __ptext121:
 30351                           	opt callstack 0
 30352  01C026                     _TMR2_Initialize:
 30353                           	opt callstack 14
 30354                           
 30355                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 30356                           
 30357                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30358                           ;incstack = 0
 30359  01C026  0E01               	movlw	1
 30360  01C028  6EAE               	movwf	174,c	;volatile
 30361                           
 30362                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 30363  01C02A  6AAD               	clrf	173,c	;volatile
 30364                           
 30365                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 30366  01C02C  6AAF               	clrf	175,c	;volatile
 30367                           
 30368                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 30369  01C02E  0E63               	movlw	99
 30370  01C030  6EAB               	movwf	171,c	;volatile
 30371                           
 30372                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 30373  01C032  6AAA               	clrf	170,c	;volatile
 30374                           
 30375                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 30376  01C034  0139               	movlb	57	; () banked
 30377  01C036  95A4               	bcf	164,2,b	;volatile
 30378                           
 30379                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 30380  01C038  0EC0               	movlw	192
 30381  01C03A  6EAC               	movwf	172,c	;volatile
 30382                           
 30383                           ; BSR set to: 57
 30384                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30385  01C03C  0012               	return		;funcret
 30386  01C03E                     __end_of_TMR2_Initialize:
 30387                           	opt callstack 0
 30388                           
 30389 ;; *************** function _SPI1_Initialize *****************
 30390 ;; Defined at:
 30391 ;;		line 64 in file "mcc_generated_files/spi1.c"
 30392 ;; Parameters:    Size  Location     Type
 30393 ;;		None
 30394 ;; Auto vars:     Size  Location     Type
 30395 ;;		None
 30396 ;; Return value:  Size  Location     Type
 30397 ;;                  1  [STACK] void 
 30398 ;; Registers used:
 30399 ;;		wreg, status,2
 30400 ;; Tracked objects:
 30401 ;;		On entry : 3F/39
 30402 ;;		On exit  : 3F/3D
 30403 ;;		Unchanged: 0/0
 30404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30409 ;;Total ram usage:        0 bytes
 30410 ;; Hardware stack levels used:    1
 30411 ;; Hardware stack levels required when called:   15
 30412 ;; This function calls:
 30413 ;;		Nothing
 30414 ;; This function is called by:
 30415 ;;		_SYSTEM_Initialize
 30416 ;; This function uses a reentrant model
 30417 ;;
 30418                           
 30419                           	psect	text122
 30420  01C03E                     __ptext122:
 30421                           	opt callstack 0
 30422  01C03E                     _SPI1_Initialize:
 30423                           	opt callstack 14
 30424                           
 30425                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 30426                           
 30427                           ; BSR set to: 57
 30428                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30429                           ;incstack = 0
 30430  01C03E  0E40               	movlw	64
 30431  01C040  013D               	movlb	61	; () banked
 30432  01C042  6F15               	movwf	21,b	;volatile
 30433                           
 30434                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 30435  01C044  0E03               	movlw	3
 30436  01C046  6F16               	movwf	22,b	;volatile
 30437                           
 30438                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 30439  01C048  0E4F               	movlw	79
 30440  01C04A  6F19               	movwf	25,b	;volatile
 30441                           
 30442                           ; BSR set to: 61
 30443                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 30444  01C04C  6B1C               	clrf	28,b	;volatile
 30445                           
 30446                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 30447  01C04E  0E83               	movlw	131
 30448  01C050  6F14               	movwf	20,b	;volatile
 30449                           
 30450                           ; BSR set to: 61
 30451                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30452  01C052  0012               	return		;funcret
 30453  01C054                     __end_of_SPI1_Initialize:
 30454                           	opt callstack 0
 30455                           
 30456 ;; *************** function _PWM8_Initialize *****************
 30457 ;; Defined at:
 30458 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 30459 ;; Parameters:    Size  Location     Type
 30460 ;;		None
 30461 ;; Auto vars:     Size  Location     Type
 30462 ;;		None
 30463 ;; Return value:  Size  Location     Type
 30464 ;;                  1  [STACK] void 
 30465 ;; Registers used:
 30466 ;;		wreg, status,2
 30467 ;; Tracked objects:
 30468 ;;		On entry : 3F/39
 30469 ;;		On exit  : 3F/3F
 30470 ;;		Unchanged: 0/0
 30471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30476 ;;Total ram usage:        0 bytes
 30477 ;; Hardware stack levels used:    1
 30478 ;; Hardware stack levels required when called:   15
 30479 ;; This function calls:
 30480 ;;		Nothing
 30481 ;; This function is called by:
 30482 ;;		_SYSTEM_Initialize
 30483 ;; This function uses a reentrant model
 30484 ;;
 30485                           
 30486                           	psect	text123
 30487  01C054                     __ptext123:
 30488                           	opt callstack 0
 30489  01C054                     _PWM8_Initialize:
 30490                           	opt callstack 14
 30491                           
 30492                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 30493                           
 30494                           ; BSR set to: 61
 30495                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30496                           ;incstack = 0
 30497  01C054  0E80               	movlw	128
 30498  01C056  6E62               	movwf	98,c	;volatile
 30499                           
 30500                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 30501  01C058  6A61               	clrf	97,c	;volatile
 30502                           
 30503                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 30504  01C05A  0E40               	movlw	64
 30505  01C05C  6E60               	movwf	96,c	;volatile
 30506                           
 30507                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 30508  01C05E  013F               	movlb	63	; () banked
 30509  01C060  515F               	movf	95,w,b	;volatile
 30510  01C062  0B3F               	andlw	-193
 30511  01C064  0940               	iorlw	64
 30512  01C066  6F5F               	movwf	95,b	;volatile
 30513                           
 30514                           ; BSR set to: 63
 30515                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30516  01C068  0012               	return		;funcret
 30517  01C06A                     __end_of_PWM8_Initialize:
 30518                           	opt callstack 0
 30519                           
 30520 ;; *************** function _PMD_Initialize *****************
 30521 ;; Defined at:
 30522 ;;		line 90 in file "mcc_generated_files/mcc.c"
 30523 ;; Parameters:    Size  Location     Type
 30524 ;;		None
 30525 ;; Auto vars:     Size  Location     Type
 30526 ;;		None
 30527 ;; Return value:  Size  Location     Type
 30528 ;;                  1  [STACK] void 
 30529 ;; Registers used:
 30530 ;;		None
 30531 ;; Tracked objects:
 30532 ;;		On entry : 3F/39
 30533 ;;		On exit  : 3F/39
 30534 ;;		Unchanged: 0/0
 30535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30540 ;;Total ram usage:        0 bytes
 30541 ;; Hardware stack levels used:    1
 30542 ;; Hardware stack levels required when called:   15
 30543 ;; This function calls:
 30544 ;;		Nothing
 30545 ;; This function is called by:
 30546 ;;		_SYSTEM_Initialize
 30547 ;; This function uses a reentrant model
 30548 ;;
 30549                           
 30550                           	psect	text124
 30551  01C080                     __ptext124:
 30552                           	opt callstack 0
 30553  01C080                     _PMD_Initialize:
 30554                           	opt callstack 14
 30555                           
 30556                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 30557                           
 30558                           ; BSR set to: 63
 30559                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30560                           ;incstack = 0
 30561  01C080  0139               	movlb	57	; () banked
 30562  01C082  6BC0               	clrf	192,b	;volatile
 30563                           
 30564                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 30565  01C084  6BC1               	clrf	193,b	;volatile
 30566                           
 30567                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 30568  01C086  6BC2               	clrf	194,b	;volatile
 30569                           
 30570                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 30571  01C088  6BC3               	clrf	195,b	;volatile
 30572                           
 30573                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 30574  01C08A  6BC4               	clrf	196,b	;volatile
 30575                           
 30576                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 30577  01C08C  6BC5               	clrf	197,b	;volatile
 30578                           
 30579                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 30580  01C08E  6BC6               	clrf	198,b	;volatile
 30581                           
 30582                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 30583  01C090  6BC7               	clrf	199,b	;volatile
 30584                           
 30585                           ; BSR set to: 57
 30586                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 30587  01C092  0012               	return		;funcret
 30588  01C094                     __end_of_PMD_Initialize:
 30589                           	opt callstack 0
 30590                           
 30591 ;; *************** function _PIN_MANAGER_Initialize *****************
 30592 ;; Defined at:
 30593 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 30594 ;; Parameters:    Size  Location     Type
 30595 ;;		None
 30596 ;; Auto vars:     Size  Location     Type
 30597 ;;		None
 30598 ;; Return value:  Size  Location     Type
 30599 ;;                  1  [STACK] void 
 30600 ;; Registers used:
 30601 ;;		wreg, status,2
 30602 ;; Tracked objects:
 30603 ;;		On entry : 3F/39
 30604 ;;		On exit  : 3F/3A
 30605 ;;		Unchanged: 0/0
 30606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30611 ;;Total ram usage:        0 bytes
 30612 ;; Hardware stack levels used:    1
 30613 ;; Hardware stack levels required when called:   15
 30614 ;; This function calls:
 30615 ;;		Nothing
 30616 ;; This function is called by:
 30617 ;;		_SYSTEM_Initialize
 30618 ;; This function uses a reentrant model
 30619 ;;
 30620                           
 30621                           	psect	text125
 30622  01AB0C                     __ptext125:
 30623                           	opt callstack 0
 30624  01AB0C                     _PIN_MANAGER_Initialize:
 30625                           	opt callstack 14
 30626                           
 30627                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 30628                           
 30629                           ; BSR set to: 57
 30630                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30631                           ;incstack = 0
 30632  01AB0C  0E07               	movlw	7
 30633  01AB0E  6EBE               	movwf	190,c	;volatile
 30634                           
 30635                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 30636  01AB10  6ABD               	clrf	189,c	;volatile
 30637                           
 30638                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 30639  01AB12  6ABA               	clrf	186,c	;volatile
 30640                           
 30641                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 30642  01AB14  0E23               	movlw	35
 30643  01AB16  6EBF               	movwf	191,c	;volatile
 30644                           
 30645                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 30646  01AB18  6ABB               	clrf	187,c	;volatile
 30647                           
 30648                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 30649  01AB1A  0E07               	movlw	7
 30650  01AB1C  6EBC               	movwf	188,c	;volatile
 30651                           
 30652                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 30653  01AB1E  6AC6               	clrf	198,c	;volatile
 30654                           
 30655                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 30656  01AB20  0E0C               	movlw	12
 30657  01AB22  6EC7               	movwf	199,c	;volatile
 30658                           
 30659                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 30660  01AB24  68C2               	setf	194,c	;volatile
 30661                           
 30662                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 30663  01AB26  0EBF               	movlw	191
 30664  01AB28  6EC3               	movwf	195,c	;volatile
 30665                           
 30666                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 30667  01AB2A  0E90               	movlw	144
 30668  01AB2C  6EC4               	movwf	196,c	;volatile
 30669                           
 30670                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 30671  01AB2E  0E0C               	movlw	12
 30672  01AB30  6EC5               	movwf	197,c	;volatile
 30673                           
 30674                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 30675  01AB32  013A               	movlb	58	; () banked
 30676  01AB34  6B70               	clrf	112,b	;volatile
 30677                           
 30678                           ; BSR set to: 58
 30679                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 30680  01AB36  6B60               	clrf	96,b	;volatile
 30681                           
 30682                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 30683  01AB38  0E3C               	movlw	60
 30684  01AB3A  6F50               	movwf	80,b	;volatile
 30685                           
 30686                           ; BSR set to: 58
 30687                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 30688  01AB3C  6B80               	clrf	128,b	;volatile
 30689                           
 30690                           ; BSR set to: 58
 30691                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 30692  01AB3E  6B90               	clrf	144,b	;volatile
 30693                           
 30694                           ; BSR set to: 58
 30695                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 30696  01AB40  6940               	setf	64,b	;volatile
 30697                           
 30698                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 30699  01AB42  0E0C               	movlw	12
 30700  01AB44  6F71               	movwf	113,b	;volatile
 30701                           
 30702                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 30703  01AB46  0E0C               	movlw	12
 30704  01AB48  6F91               	movwf	145,b	;volatile
 30705                           
 30706                           ; BSR set to: 58
 30707                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 30708  01AB4A  6B81               	clrf	129,b	;volatile
 30709                           
 30710                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 30711  01AB4C  0E83               	movlw	131
 30712  01AB4E  6F51               	movwf	81,b	;volatile
 30713                           
 30714                           ; BSR set to: 58
 30715                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 30716  01AB50  6B41               	clrf	65,b	;volatile
 30717                           
 30718                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 30719  01AB52  0E97               	movlw	151
 30720  01AB54  6F61               	movwf	97,b	;volatile
 30721                           
 30722                           ; BSR set to: 58
 30723                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 30724  01AB56  6B82               	clrf	130,b	;volatile
 30725                           
 30726                           ; BSR set to: 58
 30727                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 30728  01AB58  6B92               	clrf	146,b	;volatile
 30729                           
 30730                           ; BSR set to: 58
 30731                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 30732  01AB5A  6B42               	clrf	66,b	;volatile
 30733                           
 30734                           ; BSR set to: 58
 30735                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 30736  01AB5C  6B52               	clrf	82,b	;volatile
 30737                           
 30738                           ; BSR set to: 58
 30739                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 30740  01AB5E  6B62               	clrf	98,b	;volatile
 30741                           
 30742                           ; BSR set to: 58
 30743                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 30744  01AB60  6B72               	clrf	114,b	;volatile
 30745                           
 30746                           ; BSR set to: 58
 30747                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 30748  01AB62  6943               	setf	67,b	;volatile
 30749                           
 30750                           ; BSR set to: 58
 30751                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 30752  01AB64  6953               	setf	83,b	;volatile
 30753                           
 30754                           ; BSR set to: 58
 30755                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 30756  01AB66  6963               	setf	99,b	;volatile
 30757                           
 30758                           ; BSR set to: 58
 30759                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 30760  01AB68  6973               	setf	115,b	;volatile
 30761                           
 30762                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 30763  01AB6A  0E07               	movlw	7
 30764  01AB6C  6F83               	movwf	131,b	;volatile
 30765                           
 30766                           ; BSR set to: 58
 30767                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 30768  01AB6E  6993               	setf	147,b	;volatile
 30769                           
 30770                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 30771  01AB70  0E0F               	movlw	15
 30772  01AB72  6FE8               	movwf	232,b	;volatile
 30773                           
 30774                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 30775  01AB74  0E13               	movlw	19
 30776  01AB76  6FDE               	movwf	222,b	;volatile
 30777                           
 30778                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 30779  01AB78  0E16               	movlw	22
 30780  01AB7A  6F0E               	movwf	14,b	;volatile
 30781                           
 30782                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 30783  01AB7C  0E1E               	movlw	30
 30784  01AB7E  6F13               	movwf	19,b	;volatile
 30785                           
 30786                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 30787  01AB80  0E08               	movlw	8
 30788  01AB82  6FC0               	movwf	192,b	;volatile
 30789                           
 30790                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 30791  01AB84  0E10               	movlw	16
 30792  01AB86  6F19               	movwf	25,b	;volatile
 30793                           
 30794                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 30795  01AB88  0E09               	movlw	9
 30796  01AB8A  6FC1               	movwf	193,b	;volatile
 30797                           
 30798                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 30799  01AB8C  0E1F               	movlw	31
 30800  01AB8E  6F15               	movwf	21,b	;volatile
 30801                           
 30802                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 30803  01AB90  0E13               	movlw	19
 30804  01AB92  6F16               	movwf	22,b	;volatile
 30805                           
 30806                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 30807  01AB94  0E17               	movlw	23
 30808  01AB96  6FE5               	movwf	229,b	;volatile
 30809                           
 30810                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 30811  01AB98  0E14               	movlw	20
 30812  01AB9A  6FDF               	movwf	223,b	;volatile
 30813                           
 30814                           ; BSR set to: 58
 30815                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 30816  01AB9C  0012               	return		;funcret
 30817  01AB9E                     __end_of_PIN_MANAGER_Initialize:
 30818                           	opt callstack 0
 30819                           
 30820 ;; *************** function _OSCILLATOR_Initialize *****************
 30821 ;; Defined at:
 30822 ;;		line 72 in file "mcc_generated_files/mcc.c"
 30823 ;; Parameters:    Size  Location     Type
 30824 ;;		None
 30825 ;; Auto vars:     Size  Location     Type
 30826 ;;		None
 30827 ;; Return value:  Size  Location     Type
 30828 ;;                  1  [STACK] void 
 30829 ;; Registers used:
 30830 ;;		wreg, status,2
 30831 ;; Tracked objects:
 30832 ;;		On entry : 3F/3A
 30833 ;;		On exit  : 3F/39
 30834 ;;		Unchanged: 0/0
 30835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30840 ;;Total ram usage:        0 bytes
 30841 ;; Hardware stack levels used:    1
 30842 ;; Hardware stack levels required when called:   15
 30843 ;; This function calls:
 30844 ;;		Nothing
 30845 ;; This function is called by:
 30846 ;;		_SYSTEM_Initialize
 30847 ;; This function uses a reentrant model
 30848 ;;
 30849                           
 30850                           	psect	text126
 30851  01C06A                     __ptext126:
 30852                           	opt callstack 0
 30853  01C06A                     _OSCILLATOR_Initialize:
 30854                           	opt callstack 14
 30855                           
 30856                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 30857                           
 30858                           ; BSR set to: 58
 30859                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30860                           ;incstack = 0
 30861  01C06A  0E20               	movlw	32
 30862  01C06C  0139               	movlb	57	; () banked
 30863  01C06E  6FD9               	movwf	217,b	;volatile
 30864                           
 30865                           ; BSR set to: 57
 30866                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 30867  01C070  6BDB               	clrf	219,b	;volatile
 30868                           
 30869                           ; BSR set to: 57
 30870                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 30871  01C072  6BDD               	clrf	221,b	;volatile
 30872                           
 30873                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 30874  01C074  0E02               	movlw	2
 30875  01C076  6FDF               	movwf	223,b	;volatile
 30876                           
 30877                           ; BSR set to: 57
 30878                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 30879  01C078  6BDE               	clrf	222,b	;volatile
 30880  01C07A                     l169:
 30881                           
 30882                           ; BSR set to: 57
 30883                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 30884  01C07A  B1DC               	btfsc	220,0,b	;volatile
 30885  01C07C  0012               	return	
 30886  01C07E  D7FD               	goto	l169
 30887  01C080                     __end_of_OSCILLATOR_Initialize:
 30888                           	opt callstack 0
 30889                           
 30890 ;; *************** function _INTERRUPT_Initialize *****************
 30891 ;; Defined at:
 30892 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 30893 ;; Parameters:    Size  Location     Type
 30894 ;;		None
 30895 ;; Auto vars:     Size  Location     Type
 30896 ;;  state           1  [STACK] _Bool 
 30897 ;; Return value:  Size  Location     Type
 30898 ;;                  1  [STACK] void 
 30899 ;; Registers used:
 30900 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 30901 ;; Tracked objects:
 30902 ;;		On entry : 0/0
 30903 ;;		On exit  : 3F/39
 30904 ;;		Unchanged: 0/0
 30905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30910 ;;Total ram usage:        0 bytes
 30911 ;; Hardware stack levels used:    1
 30912 ;; Hardware stack levels required when called:   15
 30913 ;; This function calls:
 30914 ;;		Nothing
 30915 ;; This function is called by:
 30916 ;;		_SYSTEM_Initialize
 30917 ;; This function uses a reentrant model
 30918 ;;
 30919                           
 30920                           	psect	text127
 30921  01AFF6                     __ptext127:
 30922                           	opt callstack 0
 30923  01AFF6                     _INTERRUPT_Initialize:
 30924                           	opt callstack 0
 30925                           
 30926                           ; BSR set to: 57
 30927                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30928  01AFF6  52E6               	movf	postinc1,f,c
 30929                           
 30930                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 30931                           
 30932                           ;incstack = 0
 30933  01AFF8  8AD2               	bsf	210,5,c	;volatile
 30934                           
 30935                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 30936  01AFFA  AED2               	btfss	16338,7,c	;volatile
 30937  01AFFC  D003               	goto	u9410
 30938  01AFFE  6A0C               	clrf	(btemp+11)^0,c
 30939  01B000  2A0C               	incf	(btemp+11)^0,f,c
 30940  01B002  D001               	goto	u9428
 30941  01B004                     u9410:
 30942  01B004  6A0C               	clrf	(btemp+11)^0,c
 30943  01B006                     u9428:
 30944                           
 30945                           ;stkvar	_state @ sp[(-1)+0]
 30946  01B006  0EFF               	movlw	-1
 30947  01B008  0060  F033  FFE3   	movff	btemp+11,plusw1
 30948                           
 30949                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 30950  01B00E  9ED2               	bcf	16338,7,c	;volatile
 30951                           
 30952                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 30953  01B010  0E55               	movlw	85
 30954  01B012  6ED4               	movwf	212,c	;volatile
 30955                           
 30956                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 30957  01B014  0EAA               	movlw	170
 30958  01B016  6ED4               	movwf	212,c	;volatile
 30959                           
 30960                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 30961  01B018  90D4               	bcf	212,0,c	;volatile
 30962                           
 30963                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 30964  01B01A  0138               	movlb	56	; () banked
 30965  01B01C  6B9F               	clrf	159,b	;volatile
 30966                           
 30967                           ; BSR set to: 56
 30968                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 30969  01B01E  6B9E               	clrf	158,b	;volatile
 30970                           
 30971                           ; BSR set to: 56
 30972                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 30973  01B020  0E08               	movlw	8
 30974  01B022  6F9D               	movwf	157,b	;volatile
 30975                           
 30976                           ; BSR set to: 56
 30977                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 30978  01B024  0E55               	movlw	85
 30979  01B026  6ED4               	movwf	212,c	;volatile
 30980                           
 30981                           ; BSR set to: 56
 30982                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 30983  01B028  0EAA               	movlw	170
 30984  01B02A  6ED4               	movwf	212,c	;volatile
 30985                           
 30986                           ; BSR set to: 56
 30987                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 30988  01B02C  80D4               	bsf	212,0,c	;volatile
 30989                           
 30990                           ; BSR set to: 56
 30991                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 30992                           ;stkvar	_state @ sp[(-1)+0]
 30993  01B02E  0EFF               	movlw	-1
 30994  01B030  B0E3               	btfsc	plusw1,0,c
 30995  01B032  D002               	bra	u9435
 30996  01B034  9ED2               	bcf	16338,7,c	;volatile
 30997  01B036  D001               	bra	u9436
 30998  01B038                     u9435:
 30999  01B038  8ED2               	bsf	16338,7,c	;volatile
 31000  01B03A                     u9436:
 31001                           
 31002                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 31003  01B03A  0139               	movlb	57	; () banked
 31004  01B03C  8782               	bsf	130,3,b	;volatile
 31005                           
 31006                           ; BSR set to: 57
 31007                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 31008  01B03E  8382               	bsf	130,1,b	;volatile
 31009                           
 31010                           ; BSR set to: 57
 31011                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 31012  01B040  8182               	bsf	130,0,b	;volatile
 31013                           
 31014                           ; BSR set to: 57
 31015                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 31016  01B042  8582               	bsf	130,2,b	;volatile
 31017                           
 31018                           ; BSR set to: 57
 31019                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 31020  01B044  8786               	bsf	134,3,b	;volatile
 31021                           
 31022                           ; BSR set to: 57
 31023                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 31024  01B046  8586               	bsf	134,2,b	;volatile
 31025                           
 31026                           ; BSR set to: 57
 31027                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 31028  01B048  8783               	bsf	131,3,b	;volatile
 31029                           
 31030                           ; BSR set to: 57
 31031                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 31032  01B04A  8181               	bsf	129,0,b	;volatile
 31033                           
 31034                           ; BSR set to: 57
 31035                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 31036  01B04C  9185               	bcf	133,0,b	;volatile
 31037                           
 31038                           ; BSR set to: 57
 31039                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 31040  01B04E  8189               	bsf	137,0,b	;volatile
 31041                           
 31042                           ; BSR set to: 57
 31043                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 31044  01B050  9D88               	bcf	136,6,b	;volatile
 31045                           
 31046                           ; BSR set to: 57
 31047                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 31048  01B052  9D86               	bcf	134,6,b	;volatile
 31049                           
 31050                           ; BSR set to: 57
 31051                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 31052  01B054  8581               	bsf	129,2,b	;volatile
 31053                           
 31054                           ; BSR set to: 57
 31055                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 31056  01B056  8781               	bsf	129,3,b	;volatile
 31057                           
 31058                           ; BSR set to: 57
 31059                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 31060  01B058  52E5               	movf	postdec1,f,c
 31061  01B05A  0012               	return		;funcret
 31062  01B05C                     __end_of_INTERRUPT_Initialize:
 31063                           	opt callstack 0
 31064                           
 31065 ;; *************** function _FVR_Initialize *****************
 31066 ;; Defined at:
 31067 ;;		line 58 in file "mcc_generated_files/fvr.c"
 31068 ;; Parameters:    Size  Location     Type
 31069 ;;		None
 31070 ;; Auto vars:     Size  Location     Type
 31071 ;;		None
 31072 ;; Return value:  Size  Location     Type
 31073 ;;                  1  [STACK] void 
 31074 ;; Registers used:
 31075 ;;		wreg, status,2
 31076 ;; Tracked objects:
 31077 ;;		On entry : 3F/39
 31078 ;;		On exit  : 3F/3E
 31079 ;;		Unchanged: 0/0
 31080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31085 ;;Total ram usage:        0 bytes
 31086 ;; Hardware stack levels used:    1
 31087 ;; Hardware stack levels required when called:   15
 31088 ;; This function calls:
 31089 ;;		Nothing
 31090 ;; This function is called by:
 31091 ;;		_SYSTEM_Initialize
 31092 ;; This function uses a reentrant model
 31093 ;;
 31094                           
 31095                           	psect	text128
 31096  01C196                     __ptext128:
 31097                           	opt callstack 0
 31098  01C196                     _FVR_Initialize:
 31099                           	opt callstack 14
 31100                           
 31101                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 31102                           
 31103                           ; BSR set to: 57
 31104                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31105                           ;incstack = 0
 31106  01C196  0EAF               	movlw	175
 31107  01C198  013E               	movlb	62	; () banked
 31108  01C19A  6FC1               	movwf	193,b	;volatile
 31109                           
 31110                           ; BSR set to: 62
 31111                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 31112  01C19C  0012               	return		;funcret
 31113  01C19E                     __end_of_FVR_Initialize:
 31114                           	opt callstack 0
 31115                           
 31116 ;; *************** function _EXT_INT_Initialize *****************
 31117 ;; Defined at:
 31118 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 31119 ;; Parameters:    Size  Location     Type
 31120 ;;		None
 31121 ;; Auto vars:     Size  Location     Type
 31122 ;;		None
 31123 ;; Return value:  Size  Location     Type
 31124 ;;                  1  [STACK] void 
 31125 ;; Registers used:
 31126 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31127 ;; Tracked objects:
 31128 ;;		On entry : 3F/3F
 31129 ;;		On exit  : 3F/39
 31130 ;;		Unchanged: 0/0
 31131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31136 ;;Total ram usage:        0 bytes
 31137 ;; Hardware stack levels used:    1
 31138 ;; Hardware stack levels required when called:   16
 31139 ;; This function calls:
 31140 ;;		_INT0_SetInterruptHandler
 31141 ;;		_INT1_SetInterruptHandler
 31142 ;; This function is called by:
 31143 ;;		_SYSTEM_Initialize
 31144 ;; This function uses a reentrant model
 31145 ;;
 31146                           
 31147                           	psect	text129
 31148  01B97E                     __ptext129:
 31149                           	opt callstack 0
 31150  01B97E                     _EXT_INT_Initialize:
 31151                           	opt callstack 13
 31152                           
 31153                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 31154                           
 31155                           ; BSR set to: 62
 31156                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31157                           ;incstack = 0
 31158  01B97E  0139               	movlb	57	; () banked
 31159  01B980  91A1               	bcf	161,0,b	;volatile
 31160                           
 31161                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 31162  01B982  90D2               	bcf	210,0,c	;volatile
 31163                           
 31164                           ; BSR set to: 57
 31165                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 31166  01B984  0EC2               	movlw	low _INT0_DefaultInterruptHandler
 31167  01B986  6EE6               	movwf	postinc1,c
 31168  01B988  0EC1               	movlw	high _INT0_DefaultInterruptHandler
 31169  01B98A  6EE6               	movwf	postinc1,c
 31170  01B98C  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 31171  01B98E  6EE6               	movwf	postinc1,c
 31172  01B990  EC5B  F0DE         	call	_INT0_SetInterruptHandler	;wreg free
 31173                           
 31174                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 31175  01B994  0139               	movlb	57	; () banked
 31176  01B996  8191               	bsf	145,0,b	;volatile
 31177                           
 31178                           ; BSR set to: 57
 31179                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 31180  01B998  91A5               	bcf	165,0,b	;volatile
 31181                           
 31182                           ; BSR set to: 57
 31183                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 31184  01B99A  92D2               	bcf	210,1,c	;volatile
 31185                           
 31186                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 31187  01B99C  0EBE               	movlw	low _INT1_DefaultInterruptHandler
 31188  01B99E  6EE6               	movwf	postinc1,c
 31189  01B9A0  0EC1               	movlw	high _INT1_DefaultInterruptHandler
 31190  01B9A2  6EE6               	movwf	postinc1,c
 31191  01B9A4  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 31192  01B9A6  6EE6               	movwf	postinc1,c
 31193  01B9A8  EC47  F0DE         	call	_INT1_SetInterruptHandler	;wreg free
 31194                           
 31195                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 31196  01B9AC  0139               	movlb	57	; () banked
 31197  01B9AE  8195               	bsf	149,0,b	;volatile
 31198                           
 31199                           ; BSR set to: 57
 31200                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 31201  01B9B0  0012               	return		;funcret
 31202  01B9B2                     __end_of_EXT_INT_Initialize:
 31203                           	opt callstack 0
 31204                           
 31205 ;; *************** function _INT1_SetInterruptHandler *****************
 31206 ;; Defined at:
 31207 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 31208 ;; Parameters:    Size  Location     Type
 31209 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31210 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 31211 ;; Auto vars:     Size  Location     Type
 31212 ;;		None
 31213 ;; Return value:  Size  Location     Type
 31214 ;;                  1  [STACK] void 
 31215 ;; Registers used:
 31216 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31217 ;; Tracked objects:
 31218 ;;		On entry : 3F/39
 31219 ;;		On exit  : 0/0
 31220 ;;		Unchanged: 0/0
 31221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31226 ;;Total ram usage:        0 bytes
 31227 ;; Hardware stack levels used:    1
 31228 ;; Hardware stack levels required when called:   15
 31229 ;; This function calls:
 31230 ;;		Nothing
 31231 ;; This function is called by:
 31232 ;;		_EXT_INT_Initialize
 31233 ;;		_start_switch_handler
 31234 ;; This function uses a reentrant model
 31235 ;;
 31236                           
 31237                           	psect	text130
 31238  01BC8E                     __ptext130:
 31239                           	opt callstack 0
 31240  01BC8E                     _INT1_SetInterruptHandler:
 31241                           	opt callstack 14
 31242                           
 31243                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 31244                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31245                           
 31246                           ; BSR set to: 57
 31247                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31248                           ;incstack = 0
 31249  01BC8E  50E1               	movf	fsr1l,w,c
 31250  01BC90  0FFD               	addlw	-3
 31251  01BC92  6ED9               	movwf	fsr2l,c
 31252  01BC94  50E2               	movf	fsr1h,w,c
 31253  01BC96  6EDA               	movwf	fsr2h,c
 31254  01BC98  0EFF               	movlw	255
 31255  01BC9A  22DA               	addwfc	fsr2h,f,c
 31256  01BC9C  006F FF78  F0BA    	movff	postinc2,_INT1_InterruptHandler
 31257  01BCA2  006F FF78  F0BB    	movff	postinc2,_INT1_InterruptHandler+1
 31258  01BCA8  006F FF74  F0BC    	movff	postdec2,_INT1_InterruptHandler+2
 31259                           
 31260                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 31261  01BCAE  52E5               	movf	postdec1,f,c
 31262  01BCB0  52E5               	movf	postdec1,f,c
 31263  01BCB2  52E5               	movf	postdec1,f,c
 31264  01BCB4  0012               	return		;funcret
 31265  01BCB6                     __end_of_INT1_SetInterruptHandler:
 31266                           	opt callstack 0
 31267                           
 31268 ;; *************** function _INT0_SetInterruptHandler *****************
 31269 ;; Defined at:
 31270 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 31271 ;; Parameters:    Size  Location     Type
 31272 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31273 ;;		 -> INT0_DefaultInterruptHandler(1), 
 31274 ;; Auto vars:     Size  Location     Type
 31275 ;;		None
 31276 ;; Return value:  Size  Location     Type
 31277 ;;                  1  [STACK] void 
 31278 ;; Registers used:
 31279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31280 ;; Tracked objects:
 31281 ;;		On entry : 3F/39
 31282 ;;		On exit  : 0/0
 31283 ;;		Unchanged: 0/0
 31284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31289 ;;Total ram usage:        0 bytes
 31290 ;; Hardware stack levels used:    1
 31291 ;; Hardware stack levels required when called:   15
 31292 ;; This function calls:
 31293 ;;		Nothing
 31294 ;; This function is called by:
 31295 ;;		_EXT_INT_Initialize
 31296 ;; This function uses a reentrant model
 31297 ;;
 31298                           
 31299                           	psect	text131
 31300  01BCB6                     __ptext131:
 31301                           	opt callstack 0
 31302  01BCB6                     _INT0_SetInterruptHandler:
 31303                           	opt callstack 13
 31304                           
 31305                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 31306                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31307                           
 31308                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31309                           ;incstack = 0
 31310  01BCB6  50E1               	movf	fsr1l,w,c
 31311  01BCB8  0FFD               	addlw	-3
 31312  01BCBA  6ED9               	movwf	fsr2l,c
 31313  01BCBC  50E2               	movf	fsr1h,w,c
 31314  01BCBE  6EDA               	movwf	fsr2h,c
 31315  01BCC0  0EFF               	movlw	255
 31316  01BCC2  22DA               	addwfc	fsr2h,f,c
 31317  01BCC4  006F FF78  F0BD    	movff	postinc2,_INT0_InterruptHandler
 31318  01BCCA  006F FF78  F0BE    	movff	postinc2,_INT0_InterruptHandler+1
 31319  01BCD0  006F FF74  F0BF    	movff	postdec2,_INT0_InterruptHandler+2
 31320                           
 31321                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 31322  01BCD6  52E5               	movf	postdec1,f,c
 31323  01BCD8  52E5               	movf	postdec1,f,c
 31324  01BCDA  52E5               	movf	postdec1,f,c
 31325  01BCDC  0012               	return		;funcret
 31326  01BCDE                     __end_of_INT0_SetInterruptHandler:
 31327                           	opt callstack 0
 31328                           
 31329 ;; *************** function _DMA2_Initialize *****************
 31330 ;; Defined at:
 31331 ;;		line 61 in file "mcc_generated_files/dma2.c"
 31332 ;; Parameters:    Size  Location     Type
 31333 ;;		None
 31334 ;; Auto vars:     Size  Location     Type
 31335 ;;		None
 31336 ;; Return value:  Size  Location     Type
 31337 ;;                  1  [STACK] void 
 31338 ;; Registers used:
 31339 ;;		wreg, status,2
 31340 ;; Tracked objects:
 31341 ;;		On entry : 3F/3D
 31342 ;;		On exit  : 3F/3B
 31343 ;;		Unchanged: 0/0
 31344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31349 ;;Total ram usage:        0 bytes
 31350 ;; Hardware stack levels used:    1
 31351 ;; Hardware stack levels required when called:   15
 31352 ;; This function calls:
 31353 ;;		Nothing
 31354 ;; This function is called by:
 31355 ;;		_SYSTEM_Initialize
 31356 ;; This function uses a reentrant model
 31357 ;;
 31358                           
 31359                           	psect	text132
 31360  01B298                     __ptext132:
 31361                           	opt callstack 0
 31362  01B298                     _DMA2_Initialize:
 31363                           	opt callstack 14
 31364                           
 31365                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 31366                           
 31367                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31368                           ;incstack = 0
 31369  01B298  0E00               	movlw	0
 31370  01B29A  013B               	movlb	59	; () banked
 31371  01B29C  6FD9               	movwf	217,b	;volatile
 31372  01B29E  0E10               	movlw	16
 31373  01B2A0  6FDA               	movwf	218,b	;volatile
 31374  01B2A2  0E00               	movlw	0
 31375  01B2A4  6FDB               	movwf	219,b	;volatile
 31376                           
 31377                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 31378  01B2A6  0E3F               	movlw	63
 31379  01B2A8  6FD1               	movwf	209,b	;volatile
 31380  01B2AA  0EBB               	movlw	187
 31381  01B2AC  6FD0               	movwf	208,b	;volatile
 31382                           
 31383                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 31384  01B2AE  0E03               	movlw	3
 31385  01B2B0  6FDD               	movwf	221,b	;volatile
 31386                           
 31387                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 31388  01B2B2  0E00               	movlw	0
 31389  01B2B4  6FD8               	movwf	216,b	;volatile
 31390  01B2B6  0E01               	movlw	1
 31391  01B2B8  6FD7               	movwf	215,b	;volatile
 31392                           
 31393                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 31394  01B2BA  0E00               	movlw	0
 31395  01B2BC  6FCF               	movwf	207,b	;volatile
 31396  01B2BE  0E01               	movlw	1
 31397  01B2C0  6FCE               	movwf	206,b	;volatile
 31398                           
 31399                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 31400  01B2C2  0E1C               	movlw	28
 31401  01B2C4  6FDF               	movwf	223,b	;volatile
 31402                           
 31403                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 31404  01B2C6  0E3D               	movlw	61
 31405  01B2C8  6FDE               	movwf	222,b	;volatile
 31406                           
 31407                           ; BSR set to: 59
 31408                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 31409  01B2CA  0139               	movlb	57	; () banked
 31410  01B2CC  97A5               	bcf	165,3,b	;volatile
 31411                           
 31412                           ; BSR set to: 57
 31413                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 31414  01B2CE  95A5               	bcf	165,2,b	;volatile
 31415                           
 31416                           ; BSR set to: 57
 31417                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 31418  01B2D0  9BA5               	bcf	165,5,b	;volatile
 31419                           
 31420                           ; BSR set to: 57
 31421                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 31422  01B2D2  99A5               	bcf	165,4,b	;volatile
 31423                           
 31424                           ; BSR set to: 57
 31425                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 31426  01B2D4  9795               	bcf	149,3,b	;volatile
 31427                           
 31428                           ; BSR set to: 57
 31429                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 31430  01B2D6  9595               	bcf	149,2,b	;volatile
 31431                           
 31432                           ; BSR set to: 57
 31433                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 31434  01B2D8  9B95               	bcf	149,5,b	;volatile
 31435                           
 31436                           ; BSR set to: 57
 31437                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 31438  01B2DA  9995               	bcf	149,4,b	;volatile
 31439  01B2DC  9ED2               	bcf	16338,7,c	;# 
 31440  01B2DE  0139               	banksel	14831	;# 
 31441  01B2E0  0E55               	movlw	85	;# 
 31442  01B2E2  6FEF               	movwf	14831,b	;# 
 31443  01B2E4  0EAA               	movlw	170	;# 
 31444  01B2E6  6FEF               	movwf	14831,b	;# 
 31445  01B2E8  81EF               	bsf	14831,0,b	;# 
 31446  01B2EA  8ED2               	bsf	16338,7,c	;# 
 31447                           
 31448                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 31449  01B2EC  013B               	movlb	59	; () banked
 31450  01B2EE  6BDC               	clrf	220,b	;volatile
 31451                           
 31452                           ; BSR set to: 59
 31453                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31454  01B2F0  0012               	return		;funcret
 31455  01B2F2                     __end_of_DMA2_Initialize:
 31456                           	opt callstack 0
 31457                           
 31458 ;; *************** function _DMA1_Initialize *****************
 31459 ;; Defined at:
 31460 ;;		line 86 in file "mcc_generated_files/dma1.c"
 31461 ;; Parameters:    Size  Location     Type
 31462 ;;		None
 31463 ;; Auto vars:     Size  Location     Type
 31464 ;;		None
 31465 ;; Return value:  Size  Location     Type
 31466 ;;                  1  [STACK] void 
 31467 ;; Registers used:
 31468 ;;		wreg, status,2
 31469 ;; Tracked objects:
 31470 ;;		On entry : 3F/3B
 31471 ;;		On exit  : 3F/3B
 31472 ;;		Unchanged: 0/0
 31473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31478 ;;Total ram usage:        0 bytes
 31479 ;; Hardware stack levels used:    1
 31480 ;; Hardware stack levels required when called:   15
 31481 ;; This function calls:
 31482 ;;		Nothing
 31483 ;; This function is called by:
 31484 ;;		_SYSTEM_Initialize
 31485 ;; This function uses a reentrant model
 31486 ;;
 31487                           
 31488                           	psect	text133
 31489  01AEB8                     __ptext133:
 31490                           	opt callstack 0
 31491  01AEB8                     _DMA1_Initialize:
 31492                           	opt callstack 14
 31493                           
 31494                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 31495                           
 31496                           ; BSR set to: 59
 31497                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31498                           ;incstack = 0
 31499  01AEB8  0E00               	movlw	0
 31500  01AEBA  013B               	movlb	59	; () banked
 31501  01AEBC  6FF9               	movwf	249,b	;volatile
 31502  01AEBE  0E10               	movlw	16
 31503  01AEC0  6FFA               	movwf	250,b	;volatile
 31504  01AEC2  0E00               	movlw	0
 31505  01AEC4  6FFB               	movwf	251,b	;volatile
 31506                           
 31507                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 31508  01AEC6  0E3D               	movlw	61
 31509  01AEC8  6FF1               	movwf	241,b	;volatile
 31510  01AECA  0E11               	movlw	17
 31511  01AECC  6FF0               	movwf	240,b	;volatile
 31512                           
 31513                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 31514  01AECE  0E03               	movlw	3
 31515  01AED0  6FFD               	movwf	253,b	;volatile
 31516                           
 31517                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 31518  01AED2  0E00               	movlw	0
 31519  01AED4  6FF8               	movwf	248,b	;volatile
 31520  01AED6  0E01               	movlw	1
 31521  01AED8  6FF7               	movwf	247,b	;volatile
 31522                           
 31523                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 31524  01AEDA  0E00               	movlw	0
 31525  01AEDC  6FEF               	movwf	239,b	;volatile
 31526  01AEDE  0E01               	movlw	1
 31527  01AEE0  6FEE               	movwf	238,b	;volatile
 31528                           
 31529                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 31530  01AEE2  0E15               	movlw	21
 31531  01AEE4  6FFF               	movwf	255,b	;volatile
 31532                           
 31533                           ; BSR set to: 59
 31534                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 31535  01AEE6  6BFE               	clrf	254,b	;volatile
 31536                           
 31537                           ; BSR set to: 59
 31538                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 31539  01AEE8  0139               	movlb	57	; () banked
 31540  01AEEA  93A2               	bcf	162,1,b	;volatile
 31541                           
 31542                           ; BSR set to: 57
 31543                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 31544  01AEEC  91A2               	bcf	162,0,b	;volatile
 31545                           
 31546                           ; BSR set to: 57
 31547                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 31548  01AEEE  97A2               	bcf	162,3,b	;volatile
 31549                           
 31550                           ; BSR set to: 57
 31551                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 31552  01AEF0  95A2               	bcf	162,2,b	;volatile
 31553                           
 31554                           ; BSR set to: 57
 31555                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 31556  01AEF2  8392               	bsf	146,1,b	;volatile
 31557                           
 31558                           ; BSR set to: 57
 31559                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 31560  01AEF4  8192               	bsf	146,0,b	;volatile
 31561                           
 31562                           ; BSR set to: 57
 31563                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 31564  01AEF6  8792               	bsf	146,3,b	;volatile
 31565                           
 31566                           ; BSR set to: 57
 31567                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 31568  01AEF8  8592               	bsf	146,2,b	;volatile
 31569                           
 31570                           ; BSR set to: 57
 31571                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 31572  01AEFA  6BF1               	clrf	241,b	;volatile
 31573                           
 31574                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 31575  01AEFC  0E01               	movlw	1
 31576  01AEFE  6FF2               	movwf	242,b	;volatile
 31577                           
 31578                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 31579  01AF00  0E04               	movlw	4
 31580  01AF02  6FF3               	movwf	243,b	;volatile
 31581                           
 31582                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 31583  01AF04  0E02               	movlw	2
 31584  01AF06  6FF4               	movwf	244,b	;volatile
 31585                           
 31586                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 31587  01AF08  0E03               	movlw	3
 31588  01AF0A  6FF7               	movwf	247,b	;volatile
 31589  01AF0C  9ED2               	bcf	16338,7,c	;# 
 31590  01AF0E  0139               	banksel	14831	;# 
 31591  01AF10  0E55               	movlw	85	;# 
 31592  01AF12  6FEF               	movwf	14831,b	;# 
 31593  01AF14  0EAA               	movlw	170	;# 
 31594  01AF16  6FEF               	movwf	14831,b	;# 
 31595  01AF18  81EF               	bsf	14831,0,b	;# 
 31596  01AF1A  8ED2               	bsf	16338,7,c	;# 
 31597                           
 31598                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 31599  01AF1C  013B               	movlb	59	; () banked
 31600  01AF1E  6BFC               	clrf	252,b	;volatile
 31601                           
 31602                           ; BSR set to: 59
 31603                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31604  01AF20  0012               	return		;funcret
 31605  01AF22                     __end_of_DMA1_Initialize:
 31606                           	opt callstack 0
 31607                           
 31608 ;; *************** function _CLKREF_Initialize *****************
 31609 ;; Defined at:
 31610 ;;		line 58 in file "mcc_generated_files/clkref.c"
 31611 ;; Parameters:    Size  Location     Type
 31612 ;;		None
 31613 ;; Auto vars:     Size  Location     Type
 31614 ;;		None
 31615 ;; Return value:  Size  Location     Type
 31616 ;;                  1  [STACK] void 
 31617 ;; Registers used:
 31618 ;;		wreg, status,2
 31619 ;; Tracked objects:
 31620 ;;		On entry : 3F/3B
 31621 ;;		On exit  : 3F/3C
 31622 ;;		Unchanged: 0/0
 31623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31628 ;;Total ram usage:        0 bytes
 31629 ;; Hardware stack levels used:    1
 31630 ;; Hardware stack levels required when called:   15
 31631 ;; This function calls:
 31632 ;;		Nothing
 31633 ;; This function is called by:
 31634 ;;		_SYSTEM_Initialize
 31635 ;; This function uses a reentrant model
 31636 ;;
 31637                           
 31638                           	psect	text134
 31639  01C13E                     __ptext134:
 31640                           	opt callstack 0
 31641  01C13E                     _CLKREF_Initialize:
 31642                           	opt callstack 14
 31643                           
 31644                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 31645                           
 31646                           ; BSR set to: 59
 31647                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31648                           ;incstack = 0
 31649  01C13E  013C               	movlb	60	; () banked
 31650  01C140  6BE6               	clrf	230,b	;volatile
 31651                           
 31652                           ; BSR set to: 60
 31653                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 31654  01C142  0E94               	movlw	148
 31655  01C144  6FE5               	movwf	229,b	;volatile
 31656                           
 31657                           ; BSR set to: 60
 31658                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 31659  01C146  0012               	return		;funcret
 31660  01C148                     __end_of_CLKREF_Initialize:
 31661                           	opt callstack 0
 31662                           
 31663 ;; *************** function _ADCC_Initialize *****************
 31664 ;; Defined at:
 31665 ;;		line 65 in file "mcc_generated_files/adcc.c"
 31666 ;; Parameters:    Size  Location     Type
 31667 ;;		None
 31668 ;; Auto vars:     Size  Location     Type
 31669 ;;		None
 31670 ;; Return value:  Size  Location     Type
 31671 ;;                  1  [STACK] void 
 31672 ;; Registers used:
 31673 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 31674 ;; Tracked objects:
 31675 ;;		On entry : 3F/3E
 31676 ;;		On exit  : 0/0
 31677 ;;		Unchanged: 0/0
 31678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31683 ;;Total ram usage:        0 bytes
 31684 ;; Hardware stack levels used:    1
 31685 ;; Hardware stack levels required when called:   16
 31686 ;; This function calls:
 31687 ;;		_ADCC_SetADIInterruptHandler
 31688 ;;		_ADCC_SetADTIInterruptHandler
 31689 ;; This function is called by:
 31690 ;;		_SYSTEM_Initialize
 31691 ;; This function uses a reentrant model
 31692 ;;
 31693                           
 31694                           	psect	text135
 31695  01AF22                     __ptext135:
 31696                           	opt callstack 0
 31697  01AF22                     _ADCC_Initialize:
 31698                           	opt callstack 13
 31699                           
 31700                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 31701                           
 31702                           ; BSR set to: 60
 31703                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31704                           ;incstack = 0
 31705  01AF22  013E               	movlb	62	; () banked
 31706  01AF24  6BDE               	clrf	222,b	;volatile
 31707                           
 31708                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 31709  01AF26  6BDF               	clrf	223,b	;volatile
 31710                           
 31711                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 31712  01AF28  6BE0               	clrf	224,b	;volatile
 31713                           
 31714                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 31715  01AF2A  6BE1               	clrf	225,b	;volatile
 31716                           
 31717                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 31718  01AF2C  6BE4               	clrf	228,b	;volatile
 31719                           
 31720                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 31721  01AF2E  6BE5               	clrf	229,b	;volatile
 31722                           
 31723                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 31724  01AF30  6BEA               	clrf	234,b	;volatile
 31725                           
 31726                           ; BSR set to: 62
 31727                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 31728  01AF32  0E40               	movlw	64
 31729  01AF34  6FEC               	movwf	236,b	;volatile
 31730                           
 31731                           ; BSR set to: 62
 31732                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 31733  01AF36  6BF1               	clrf	241,b	;volatile
 31734                           
 31735                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 31736  01AF38  0E20               	movlw	32
 31737  01AF3A  6FF3               	movwf	243,b	;volatile
 31738                           
 31739                           ; BSR set to: 62
 31740                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 31741  01AF3C  6BF4               	clrf	244,b	;volatile
 31742                           
 31743                           ; BSR set to: 62
 31744                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 31745  01AF3E  6BF5               	clrf	245,b	;volatile
 31746                           
 31747                           ; BSR set to: 62
 31748                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 31749  01AF40  6BF6               	clrf	246,b	;volatile
 31750                           
 31751                           ; BSR set to: 62
 31752                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 31753  01AF42  6BF7               	clrf	247,b	;volatile
 31754                           
 31755                           ; BSR set to: 62
 31756                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 31757  01AF44  6BF9               	clrf	249,b	;volatile
 31758                           
 31759                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 31760  01AF46  0E5B               	movlw	91
 31761  01AF48  6FFA               	movwf	250,b	;volatile
 31762                           
 31763                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 31764  01AF4A  0E27               	movlw	39
 31765  01AF4C  6FFB               	movwf	251,b	;volatile
 31766                           
 31767                           ; BSR set to: 62
 31768                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 31769  01AF4E  6BFC               	clrf	252,b	;volatile
 31770                           
 31771                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 31772  01AF50  0E02               	movlw	2
 31773  01AF52  6FFD               	movwf	253,b	;volatile
 31774                           
 31775                           ; BSR set to: 62
 31776                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 31777  01AF54  6BFE               	clrf	254,b	;volatile
 31778                           
 31779                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 31780  01AF56  0E07               	movlw	7
 31781  01AF58  6FFF               	movwf	255,b	;volatile
 31782                           
 31783                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 31784  01AF5A  0E84               	movlw	132
 31785  01AF5C  6FF8               	movwf	248,b	;volatile
 31786                           
 31787                           ; BSR set to: 62
 31788                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 31789  01AF5E  0139               	movlb	57	; () banked
 31790  01AF60  95A1               	bcf	161,2,b	;volatile
 31791                           
 31792                           ; BSR set to: 57
 31793                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 31794  01AF62  8591               	bsf	145,2,b	;volatile
 31795                           
 31796                           ; BSR set to: 57
 31797                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 31798  01AF64  0EC4               	movlw	low _ADCC_DefaultInterruptHandler
 31799  01AF66  6EE6               	movwf	postinc1,c
 31800  01AF68  0EC1               	movlw	high _ADCC_DefaultInterruptHandler
 31801  01AF6A  6EE6               	movwf	postinc1,c
 31802  01AF6C  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31803  01AF6E  6EE6               	movwf	postinc1,c
 31804  01AF70  EC83  F0DE         	call	_ADCC_SetADIInterruptHandler	;wreg free
 31805                           
 31806                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 31807  01AF74  0139               	movlb	57	; () banked
 31808  01AF76  97A1               	bcf	161,3,b	;volatile
 31809                           
 31810                           ; BSR set to: 57
 31811                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 31812  01AF78  8791               	bsf	145,3,b	;volatile
 31813                           
 31814                           ; BSR set to: 57
 31815                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 31816  01AF7A  0EC4               	movlw	low _ADCC_DefaultInterruptHandler
 31817  01AF7C  6EE6               	movwf	postinc1,c
 31818  01AF7E  0EC1               	movlw	high _ADCC_DefaultInterruptHandler
 31819  01AF80  6EE6               	movwf	postinc1,c
 31820  01AF82  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31821  01AF84  6EE6               	movwf	postinc1,c
 31822  01AF86  EC6F  F0DE         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 31823                           
 31824                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31825  01AF8A  0012               	return		;funcret
 31826  01AF8C                     __end_of_ADCC_Initialize:
 31827                           	opt callstack 0
 31828                           
 31829 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 31830 ;; Defined at:
 31831 ;;		line 336 in file "mcc_generated_files/adcc.c"
 31832 ;; Parameters:    Size  Location     Type
 31833 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31834 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 31835 ;; Auto vars:     Size  Location     Type
 31836 ;;		None
 31837 ;; Return value:  Size  Location     Type
 31838 ;;                  1  [STACK] void 
 31839 ;; Registers used:
 31840 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31841 ;; Tracked objects:
 31842 ;;		On entry : 0/1
 31843 ;;		On exit  : 0/0
 31844 ;;		Unchanged: 0/0
 31845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31850 ;;Total ram usage:        0 bytes
 31851 ;; Hardware stack levels used:    1
 31852 ;; Hardware stack levels required when called:   15
 31853 ;; This function calls:
 31854 ;;		Nothing
 31855 ;; This function is called by:
 31856 ;;		_ADCC_Initialize
 31857 ;;		_start_adc_scan
 31858 ;; This function uses a reentrant model
 31859 ;;
 31860                           
 31861                           	psect	text136
 31862  01BCDE                     __ptext136:
 31863                           	opt callstack 0
 31864  01BCDE                     _ADCC_SetADTIInterruptHandler:
 31865                           	opt callstack 14
 31866                           
 31867                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 31868                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31869                           
 31870                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31871                           ;incstack = 0
 31872  01BCDE  50E1               	movf	fsr1l,w,c
 31873  01BCE0  0FFD               	addlw	-3
 31874  01BCE2  6ED9               	movwf	fsr2l,c
 31875  01BCE4  50E2               	movf	fsr1h,w,c
 31876  01BCE6  6EDA               	movwf	fsr2h,c
 31877  01BCE8  0EFF               	movlw	255
 31878  01BCEA  22DA               	addwfc	fsr2h,f,c
 31879  01BCEC  006F FF78  F0AB    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 31880  01BCF2  006F FF78  F0AC    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 31881  01BCF8  006F FF74  F0AD    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 31882                           
 31883                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 31884  01BCFE  52E5               	movf	postdec1,f,c
 31885  01BD00  52E5               	movf	postdec1,f,c
 31886  01BD02  52E5               	movf	postdec1,f,c
 31887  01BD04  0012               	return		;funcret
 31888  01BD06                     __end_of_ADCC_SetADTIInterruptHandler:
 31889                           	opt callstack 0
 31890                           
 31891 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 31892 ;; Defined at:
 31893 ;;		line 323 in file "mcc_generated_files/adcc.c"
 31894 ;; Parameters:    Size  Location     Type
 31895 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31896 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 31897 ;; Auto vars:     Size  Location     Type
 31898 ;;		None
 31899 ;; Return value:  Size  Location     Type
 31900 ;;                  1  [STACK] void 
 31901 ;; Registers used:
 31902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31903 ;; Tracked objects:
 31904 ;;		On entry : 7/1
 31905 ;;		On exit  : 0/0
 31906 ;;		Unchanged: 0/0
 31907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31912 ;;Total ram usage:        0 bytes
 31913 ;; Hardware stack levels used:    1
 31914 ;; Hardware stack levels required when called:   15
 31915 ;; This function calls:
 31916 ;;		Nothing
 31917 ;; This function is called by:
 31918 ;;		_ADCC_Initialize
 31919 ;;		_start_adc_scan
 31920 ;; This function uses a reentrant model
 31921 ;;
 31922                           
 31923                           	psect	text137
 31924  01BD06                     __ptext137:
 31925                           	opt callstack 0
 31926  01BD06                     _ADCC_SetADIInterruptHandler:
 31927                           	opt callstack 14
 31928                           
 31929                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 31930                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31931                           
 31932                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31933                           ;incstack = 0
 31934  01BD06  50E1               	movf	fsr1l,w,c
 31935  01BD08  0FFD               	addlw	-3
 31936  01BD0A  6ED9               	movwf	fsr2l,c
 31937  01BD0C  50E2               	movf	fsr1h,w,c
 31938  01BD0E  6EDA               	movwf	fsr2h,c
 31939  01BD10  0EFF               	movlw	255
 31940  01BD12  22DA               	addwfc	fsr2h,f,c
 31941  01BD14  006F FF78  F0AE    	movff	postinc2,_ADCC_ADI_InterruptHandler
 31942  01BD1A  006F FF78  F0AF    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 31943  01BD20  006F FF74  F0B0    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 31944                           
 31945                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 31946  01BD26  52E5               	movf	postdec1,f,c
 31947  01BD28  52E5               	movf	postdec1,f,c
 31948  01BD2A  52E5               	movf	postdec1,f,c
 31949  01BD2C  0012               	return		;funcret
 31950  01BD2E                     __end_of_ADCC_SetADIInterruptHandler:
 31951                           	opt callstack 0
 31952                           
 31953 ;; *************** function _INT1_ISR *****************
 31954 ;; Defined at:
 31955 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 31956 ;; Parameters:    Size  Location     Type
 31957 ;;		None
 31958 ;; Auto vars:     Size  Location     Type
 31959 ;;		None
 31960 ;; Return value:  Size  Location     Type
 31961 ;;                  1    wreg      void 
 31962 ;; Registers used:
 31963 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31964 ;; Tracked objects:
 31965 ;;		On entry : 0/0
 31966 ;;		On exit  : 0/0
 31967 ;;		Unchanged: 0/0
 31968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31971 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31972 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31973 ;;Total ram usage:        4 bytes
 31974 ;; Hardware stack levels used:    1
 31975 ;; Hardware stack levels required when called:    5
 31976 ;; This function calls:
 31977 ;;		_INT1_CallBack
 31978 ;; This function is called by:
 31979 ;;		Interrupt level 1
 31980 ;; This function uses a non-reentrant model
 31981 ;;
 31982                           
 31983                           	psect	text138
 31984  01B82C                     __ptext138:
 31985                           	opt callstack 0
 31986  01B82C                     _INT1_ISR:
 31987                           	opt callstack 11
 31988                           
 31989                           ;incstack = 0
 31990  01B82C  006F FF60  F027    	movff	status,??_INT1_ISR
 31991  01B832  0060  F004  F028   	movff	btemp,??_INT1_ISR+1
 31992  01B838  0060  F02C  F029   	movff	btemp+10,??_INT1_ISR+2
 31993  01B83E  0060  F030  F02A   	movff	btemp+11,??_INT1_ISR+3
 31994  01B844  EE16  F0AF         	lfsr	1,___intlo_sp
 31995                           
 31996                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 31997  01B848  0139               	movlb	57	; () banked
 31998  01B84A  91A5               	bcf	165,0,b	;volatile
 31999                           
 32000                           ; BSR set to: 57
 32001                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 32002  01B84C  ECF8  F0DE         	call	_INT1_CallBack	;wreg free
 32003  01B850  0060  F0A8  F00C   	movff	??_INT1_ISR+3,btemp+11
 32004  01B856  0060  F0A4  F00B   	movff	??_INT1_ISR+2,btemp+10
 32005  01B85C  0060  F0A0  F001   	movff	??_INT1_ISR+1,btemp
 32006  01B862  0060  F09F  FFD8   	movff	??_INT1_ISR,status
 32007  01B868  0011               	retfie		f
 32008  01B86A                     __end_of_INT1_ISR:
 32009                           	opt callstack 0
 32010                           
 32011 ;; *************** function _INT1_CallBack *****************
 32012 ;; Defined at:
 32013 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 32014 ;; Parameters:    Size  Location     Type
 32015 ;;		None
 32016 ;; Auto vars:     Size  Location     Type
 32017 ;;		None
 32018 ;; Return value:  Size  Location     Type
 32019 ;;                  1  [STACK] void 
 32020 ;; Registers used:
 32021 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 32022 ;; Tracked objects:
 32023 ;;		On entry : 3F/39
 32024 ;;		On exit  : 0/0
 32025 ;;		Unchanged: 0/0
 32026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32031 ;;Total ram usage:        0 bytes
 32032 ;; Hardware stack levels used:    1
 32033 ;; Hardware stack levels required when called:    4
 32034 ;; This function calls:
 32035 ;;		Absolute function
 32036 ;;		_INT1_DefaultInterruptHandler
 32037 ;;		_switch_handler
 32038 ;; This function is called by:
 32039 ;;		_INT1_ISR
 32040 ;; This function uses a reentrant model
 32041 ;;
 32042                           
 32043                           	psect	text139
 32044  01BDF0                     __ptext139:
 32045                           	opt callstack 0
 32046  01BDF0                     _INT1_CallBack:
 32047                           	opt callstack 11
 32048                           
 32049                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 32050                           
 32051                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32052                           ;incstack = 0
 32053  01BDF0  0100               	movlb	0	; () banked
 32054  01BDF2  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 32055  01BDF4  11BB               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 32056  01BDF6  11BC               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 32057  01BDF8  B4D8               	btfsc	status,2,c
 32058  01BDFA  0012               	return	
 32059                           
 32060                           ; BSR set to: 0
 32061                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 32062  01BDFC  D801               	call	u995_28
 32063  01BDFE  0012               	return	
 32064  01BE00                     u995_28:
 32065  01BE00  0005               	push	
 32066  01BE02  6EFA               	movwf	pclath,c
 32067  01BE04  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 32068  01BE06  6EFD               	movwf	tosl,c
 32069  01BE08  51BB               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 32070  01BE0A  6EFE               	movwf	tosh,c
 32071  01BE0C  51BC               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 32072  01BE0E  6EFF               	movwf	tosu,c
 32073  01BE10  50FA               	movf	pclath,w,c
 32074  01BE12  0012               	return		;indir
 32075  01BE14                     __end_of_INT1_CallBack:
 32076                           	opt callstack 0
 32077                           
 32078 ;; *************** function _INT1_DefaultInterruptHandler *****************
 32079 ;; Defined at:
 32080 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 32081 ;; Parameters:    Size  Location     Type
 32082 ;;		None
 32083 ;; Auto vars:     Size  Location     Type
 32084 ;;		None
 32085 ;; Return value:  Size  Location     Type
 32086 ;;                  1  [STACK] void 
 32087 ;; Registers used:
 32088 ;;		None
 32089 ;; Tracked objects:
 32090 ;;		On entry : 3F/0
 32091 ;;		On exit  : 0/0
 32092 ;;		Unchanged: 0/0
 32093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32098 ;;Total ram usage:        0 bytes
 32099 ;; Hardware stack levels used:    1
 32100 ;; Hardware stack levels required when called:    3
 32101 ;; This function calls:
 32102 ;;		Nothing
 32103 ;; This function is called by:
 32104 ;;		_EXT_INT_Initialize
 32105 ;;		_INT1_CallBack
 32106 ;; This function uses a reentrant model
 32107 ;;
 32108                           
 32109                           	psect	text140
 32110  01C1BE                     __ptext140:
 32111                           	opt callstack 0
 32112  01C1BE                     _INT1_DefaultInterruptHandler:
 32113                           	opt callstack 11
 32114                           
 32115                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32116                           
 32117                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32118                           ;incstack = 0
 32119  01C1BE  0012               	return		;funcret
 32120  01C1C0                     __end_of_INT1_DefaultInterruptHandler:
 32121                           	opt callstack 0
 32122                           
 32123 ;; *************** function _switch_handler *****************
 32124 ;; Defined at:
 32125 ;;		line 58 in file "dio.c"
 32126 ;; Parameters:    Size  Location     Type
 32127 ;;		None
 32128 ;; Auto vars:     Size  Location     Type
 32129 ;;  i               1  [STACK] unsigned char 
 32130 ;;  sw_value        1  [STACK] unsigned char 
 32131 ;; Return value:  Size  Location     Type
 32132 ;;                  1  [STACK] void 
 32133 ;; Registers used:
 32134 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 32135 ;; Tracked objects:
 32136 ;;		On entry : 3F/0
 32137 ;;		On exit  : 0/0
 32138 ;;		Unchanged: 0/0
 32139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32144 ;;Total ram usage:        0 bytes
 32145 ;; Hardware stack levels used:    1
 32146 ;; Hardware stack levels required when called:    3
 32147 ;; This function calls:
 32148 ;;		Nothing
 32149 ;; This function is called by:
 32150 ;;		_start_switch_handler
 32151 ;;		_INT1_CallBack
 32152 ;; This function uses a reentrant model
 32153 ;;
 32154                           
 32155                           	psect	text141
 32156  01953C                     __ptext141:
 32157                           	opt callstack 0
 32158  01953C                     _switch_handler:
 32159                           	opt callstack 0
 32160                           
 32161                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32162  01953C  52E6               	movf	postinc1,f,c
 32163  01953E  52E6               	movf	postinc1,f,c
 32164                           
 32165                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 32166                           ;stkvar	_i @ sp[(-2)+0]
 32167                           
 32168                           ;incstack = 0
 32169  019540  0EFE               	movlw	-2
 32170  019542  6AE3               	clrf	plusw1,c
 32171  019544  9ABF               	bcf	191,5,c	;volatile
 32172                           
 32173                           ;dio.c: 72:  __nop();
 32174  019546  F000               	nop	
 32175                           
 32176                           ;dio.c: 73:  __nop();
 32177  019548  F000               	nop	
 32178                           
 32179                           ;dio.c: 74:  __nop();
 32180  01954A  F000               	nop	
 32181                           
 32182                           ;dio.c: 75:  __nop();
 32183  01954C  F000               	nop	
 32184                           
 32185                           ;dio.c: 76:  __nop();
 32186  01954E  F000               	nop	
 32187                           
 32188                           ;dio.c: 77:  __nop();
 32189  019550  F000               	nop	
 32190  019552  D013               	goto	l10544
 32191  019554                     l10532:
 32192                           
 32193                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 32194  019554  A6CF               	btfss	207,3,c	;volatile
 32195  019556  D00B               	goto	u964_20
 32196  019558  D007               	goto	u964_21
 32197  01955A                     u963_28:
 32198                           
 32199                           ;stkvar	_sw_value @ sp[(-2)+1]
 32200  01955A  0EFF               	movlw	-1
 32201  01955C  0060  F033  FFE3   	movff	btemp+11,plusw1
 32202                           
 32203                           ;dio.c: 83:    break;
 32204  019562  D021               	goto	l10546
 32205  019564                     l10534:
 32206                           
 32207                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 32208  019564  A4CF               	btfss	207,2,c	;volatile
 32209  019566  D003               	goto	u964_20
 32210  019568                     u964_21:
 32211  019568  6A0C               	clrf	(btemp+11)^0,c
 32212  01956A  2A0C               	incf	(btemp+11)^0,f,c
 32213  01956C  D7F6               	goto	u963_28
 32214  01956E                     u964_20:
 32215  01956E  6A0C               	clrf	(btemp+11)^0,c
 32216  019570  D7F4               	goto	u963_28
 32217  019572                     l10536:
 32218                           
 32219                           ;dio.c: 88:    sw_value = 1;
 32220                           ;stkvar	_sw_value @ sp[(-2)+1]
 32221  019572  0EFF               	movlw	-1
 32222  019574  6AE3               	clrf	plusw1,c
 32223  019576  2AE3               	incf	plusw1,f,c
 32224                           
 32225                           ;dio.c: 89:    break;
 32226  019578  D016               	goto	l10546
 32227  01957A                     l10544:
 32228                           
 32229                           ;stkvar	_i @ sp[(-2)+0]
 32230  01957A  0EFE               	movlw	-2
 32231  01957C  50E3               	movf	plusw1,w,c
 32232  01957E  6E0B               	movwf	(btemp+10)^0,c
 32233  019580  6A0C               	clrf	(btemp+11)^0,c
 32234                           
 32235                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32236                           ; Switch size 1, requested type "simple"
 32237                           ; Number of cases is 1, Range of values is 0 to 0
 32238                           ; switch strategies available:
 32239                           ; Name         Instructions Cycles
 32240                           ; simple_byte            4     3 (average)
 32241                           ;	Chosen strategy is simple_byte
 32242  019582  500C               	movf	(btemp+11)^0,w,c
 32243  019584  0A00               	xorlw	0	; case 0
 32244  019586  A4D8               	btfss	status,2,c
 32245  019588  D7F4               	goto	l10536
 32246                           
 32247                           ; Switch size 1, requested type "simple"
 32248                           ; Number of cases is 4, Range of values is 0 to 3
 32249                           ; switch strategies available:
 32250                           ; Name         Instructions Cycles
 32251                           ; simple_byte           13     7 (average)
 32252                           ;	Chosen strategy is simple_byte
 32253  01958A  500B               	movf	(btemp+10)^0,w,c
 32254  01958C  0A00               	xorlw	0	; case 0
 32255  01958E  B4D8               	btfsc	status,2,c
 32256  019590  D7F0               	goto	l10536
 32257  019592  0A01               	xorlw	1	; case 1
 32258  019594  B4D8               	btfsc	status,2,c
 32259  019596  D7ED               	goto	l10536
 32260  019598  0A03               	xorlw	3	; case 2
 32261  01959A  B4D8               	btfsc	status,2,c
 32262  01959C  D7E3               	goto	l10534
 32263  01959E  0A01               	xorlw	1	; case 3
 32264  0195A0  B4D8               	btfsc	status,2,c
 32265  0195A2  D7D8               	goto	l10532
 32266  0195A4  D7E6               	goto	l10536
 32267  0195A6                     l10546:
 32268                           
 32269                           ;dio.c: 99:   if (sw_value) {
 32270                           ;stkvar	_sw_value @ sp[(-2)+1]
 32271  0195A6  0EFF               	movlw	-1
 32272  0195A8  50E3               	movf	plusw1,w,c
 32273  0195AA  B4D8               	btfsc	status,2,c
 32274  0195AC  D018               	goto	l10552
 32275                           
 32276                           ;dio.c: 100:    if (S.button[i].sw == SW_ON) {
 32277                           ;stkvar	_i @ sp[(-2)+0]
 32278  0195AE  0EFE               	movlw	-2
 32279  0195B0  50E3               	movf	plusw1,w,c
 32280  0195B2  0D05               	mullw	5
 32281  0195B4  0E54               	movlw	low _S
 32282  0195B6  24F3               	addwf	243,w,c
 32283  0195B8  6ED9               	movwf	fsr2l,c
 32284  0195BA  0E02               	movlw	high _S
 32285  0195BC  20F4               	addwfc	prodh,w,c
 32286  0195BE  6EDA               	movwf	fsr2h,c
 32287  0195C0  04DE               	decf	postinc2,w,c
 32288  0195C2  A4D8               	btfss	status,2,c
 32289  0195C4  D049               	goto	l10560
 32290                           
 32291                           ;dio.c: 101:     S.button[i].sw = SW_OFF;
 32292                           ;stkvar	_i @ sp[(-2)+0]
 32293  0195C6  0EFE               	movlw	-2
 32294  0195C8  50E3               	movf	plusw1,w,c
 32295  0195CA  0D05               	mullw	5
 32296  0195CC  0E54               	movlw	low _S
 32297  0195CE  24F3               	addwf	243,w,c
 32298  0195D0  6ED9               	movwf	fsr2l,c
 32299  0195D2  0E02               	movlw	high _S
 32300  0195D4  20F4               	addwfc	prodh,w,c
 32301  0195D6  6EDA               	movwf	fsr2h,c
 32302  0195D8  0E00               	movlw	0
 32303  0195DA  6EDF               	movwf	indf2,c
 32304  0195DC  D03D               	goto	l10560
 32305  0195DE                     l10552:
 32306                           
 32307                           ;dio.c: 104:    if (S.button[i].sw == SW_OFF) {
 32308                           ;stkvar	_i @ sp[(-2)+0]
 32309  0195DE  0EFE               	movlw	-2
 32310  0195E0  50E3               	movf	plusw1,w,c
 32311  0195E2  0D05               	mullw	5
 32312  0195E4  0E54               	movlw	low _S
 32313  0195E6  24F3               	addwf	243,w,c
 32314  0195E8  6ED9               	movwf	fsr2l,c
 32315  0195EA  0E02               	movlw	high _S
 32316  0195EC  20F4               	addwfc	prodh,w,c
 32317  0195EE  6EDA               	movwf	fsr2h,c
 32318  0195F0  50DF               	movf	indf2,w,c
 32319  0195F2  A4D8               	btfss	status,2,c
 32320  0195F4  D031               	goto	l10560
 32321                           
 32322                           ;dio.c: 105:     S.button[i].sw = SW_ON;
 32323                           ;stkvar	_i @ sp[(-2)+0]
 32324  0195F6  0EFE               	movlw	-2
 32325  0195F8  50E3               	movf	plusw1,w,c
 32326  0195FA  0D05               	mullw	5
 32327  0195FC  0E54               	movlw	low _S
 32328  0195FE  24F3               	addwf	243,w,c
 32329  019600  6ED9               	movwf	fsr2l,c
 32330  019602  0E02               	movlw	high _S
 32331  019604  20F4               	addwfc	prodh,w,c
 32332  019606  6EDA               	movwf	fsr2h,c
 32333  019608  0E01               	movlw	1
 32334  01960A  6EDF               	movwf	indf2,c
 32335                           
 32336                           ;dio.c: 106:     S.button[i].count = V.timerint_count;
 32337  01960C  EE20  F1EB         	lfsr	2,_V+187	;volatile
 32338                           
 32339                           ;stkvar	_i @ sp[(-2)+0]
 32340  019610  0EFE               	movlw	-2
 32341  019612  50E3               	movf	plusw1,w,c
 32342  019614  0D05               	mullw	5
 32343  019616  0E55               	movlw	low (_S+1)
 32344  019618  24F3               	addwf	243,w,c
 32345  01961A  6EE9               	movwf	fsr0l,c
 32346  01961C  0E02               	movlw	high (_S+1)
 32347  01961E  20F4               	addwfc	prodh,w,c
 32348  019620  6EEA               	movwf	fsr0h,c
 32349  019622  006F FF7B FFEE     	movff	postinc2,postinc0
 32350  019628  006F FF7B FFEE     	movff	postinc2,postinc0
 32351  01962E  006F FF7B FFEE     	movff	postinc2,postinc0
 32352  019634  006F FF7B FFEE     	movff	postinc2,postinc0
 32353                           
 32354                           ;dio.c: 107:     S.sw_bitmap |= 1 << i;
 32355                           ;stkvar	_i @ sp[(-2)+0]
 32356  01963A  0EFE               	movlw	-2
 32357  01963C  006F FF8C  F00C    	movff	plusw1,btemp+11
 32358  019642  0E01               	movlw	1
 32359  019644  6E0B               	movwf	(btemp+10)^0,c
 32360  019646  2A0C               	incf	(btemp+11)^0,f,c
 32361  019648  D002               	goto	u968_24
 32362  01964A                     u968_25:
 32363  01964A  90D8               	bcf	status,0,c
 32364  01964C  360B               	rlcf	(btemp+10)^0,f,c
 32365  01964E                     u968_24:
 32366  01964E  2E0C               	decfsz	(btemp+11)^0,f,c
 32367  019650  D7FC               	goto	u968_25
 32368  019652  500B               	movf	(btemp+10)^0,w,c
 32369  019654  0102               	movlb	2	; () banked
 32370  019656  137C               	iorwf	(_S+40)& (0+255),f,b	;volatile
 32371  019658                     l10560:
 32372                           
 32373                           ;dio.c: 110:  } while (++i < 4);
 32374                           ;stkvar	_i @ sp[(-2)+0]
 32375  019658  0EFE               	movlw	-2
 32376  01965A  2AE3               	incf	plusw1,f,c
 32377  01965C  0EFE               	movlw	-2
 32378  01965E  006F FF8C  F001    	movff	plusw1,btemp
 32379  019664  0E03               	movlw	3
 32380  019666  6401               	cpfsgt	btemp^0,c
 32381  019668  D788               	goto	l10544
 32382                           
 32383                           ;dio.c: 119:  do { LATFbits.LATF5 = 1; } while(0);
 32384  01966A  8ABF               	bsf	191,5,c	;volatile
 32385                           
 32386                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 32387  01966C  52E5               	movf	postdec1,f,c
 32388  01966E  52E5               	movf	postdec1,f,c
 32389  019670  0012               	return		;funcret
 32390  019672                     __end_of_switch_handler:
 32391                           	opt callstack 0
 32392                           
 32393 ;; *************** function _TMR5_ISR *****************
 32394 ;; Defined at:
 32395 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 32396 ;; Parameters:    Size  Location     Type
 32397 ;;		None
 32398 ;; Auto vars:     Size  Location     Type
 32399 ;;		None
 32400 ;; Return value:  Size  Location     Type
 32401 ;;                  1    wreg      void 
 32402 ;; Registers used:
 32403 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 32404 ;; Tracked objects:
 32405 ;;		On entry : 0/0
 32406 ;;		On exit  : 3F/0
 32407 ;;		Unchanged: 0/0
 32408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32411 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32412 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32413 ;;Total ram usage:       15 bytes
 32414 ;; Hardware stack levels used:    1
 32415 ;; Hardware stack levels required when called:    9
 32416 ;; This function calls:
 32417 ;;		_TMR5_CallBack
 32418 ;;		_TMR5_WriteTimer
 32419 ;; This function is called by:
 32420 ;;		Interrupt level 1
 32421 ;; This function uses a non-reentrant model
 32422 ;;
 32423                           
 32424                           	psect	text142
 32425  01A1E8                     __ptext142:
 32426                           	opt callstack 0
 32427  01A1E8                     _TMR5_ISR:
 32428                           	opt callstack 7
 32429                           
 32430                           ;incstack = 0
 32431  01A1E8  006F FF60  F02D    	movff	status,??_TMR5_ISR+2
 32432  01A1EE  0060  F004  F02E   	movff	btemp,??_TMR5_ISR+3
 32433  01A1F4  0060  F008  F02F   	movff	btemp+1,??_TMR5_ISR+4
 32434  01A1FA  0060  F00C  F030   	movff	btemp+2,??_TMR5_ISR+5
 32435  01A200  0060  F010  F031   	movff	btemp+3,??_TMR5_ISR+6
 32436  01A206  0060  F014  F032   	movff	btemp+4,??_TMR5_ISR+7
 32437  01A20C  0060  F018  F033   	movff	btemp+5,??_TMR5_ISR+8
 32438  01A212  0060  F01C  F034   	movff	btemp+6,??_TMR5_ISR+9
 32439  01A218  0060  F020  F035   	movff	btemp+7,??_TMR5_ISR+10
 32440  01A21E  0060  F024  F036   	movff	btemp+8,??_TMR5_ISR+11
 32441  01A224  0060  F028  F037   	movff	btemp+9,??_TMR5_ISR+12
 32442  01A22A  0060  F02C  F038   	movff	btemp+10,??_TMR5_ISR+13
 32443  01A230  0060  F030  F039   	movff	btemp+11,??_TMR5_ISR+14
 32444  01A236  EE16  F0AF         	lfsr	1,___intlo_sp
 32445                           
 32446                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 32447  01A23A  0139               	movlb	57	; () banked
 32448  01A23C  9DA8               	bcf	168,6,b	;volatile
 32449                           
 32450                           ; BSR set to: 57
 32451                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 32452  01A23E  0060  F323  FFE6   	movff	_timer5ReloadVal,postinc1
 32453  01A244  0060  F327  FFE6   	movff	_timer5ReloadVal+1,postinc1
 32454  01A24A  ECD5  F0DB         	call	_TMR5_WriteTimer	;wreg free
 32455                           
 32456                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 32457  01A24E  0101               	movlb	1	; () banked
 32458  01A250  51DA               	movf	(_V+170)& (0+255),w,b	;volatile
 32459  01A252  6E2B               	movwf	??_TMR5_ISR^0,c
 32460  01A254  6A2C               	clrf	(??_TMR5_ISR+1)^0,c
 32461  01A256  0E05               	movlw	5
 32462  01A258  262B               	addwf	??_TMR5_ISR^0,f,c
 32463  01A25A  0E00               	movlw	0
 32464  01A25C  222C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 32465  01A25E  0100               	movlb	0	; () banked
 32466  01A260  4BC6               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 32467  01A262  2BC7               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 32468  01A264  502B               	movf	??_TMR5_ISR^0,w,c
 32469  01A266  5DC6               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 32470  01A268  502C               	movf	(??_TMR5_ISR+1)^0,w,c
 32471  01A26A  59C7               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 32472  01A26C  A0D8               	btfss	status,0,c
 32473  01A26E  D005               	goto	i1l1019
 32474                           
 32475                           ; BSR set to: 0
 32476                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 32477  01A270  EC0A  F0DF         	call	_TMR5_CallBack	;wreg free
 32478                           
 32479                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 32480  01A274  0100               	movlb	0	; () banked
 32481  01A276  6BC6               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 32482  01A278  6BC7               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 32483  01A27A                     i1l1019:
 32484                           
 32485                           ; BSR set to: 0
 32486  01A27A  0060  F0E4  F00C   	movff	??_TMR5_ISR+14,btemp+11
 32487  01A280  0060  F0E0  F00B   	movff	??_TMR5_ISR+13,btemp+10
 32488  01A286  0060  F0DC  F00A   	movff	??_TMR5_ISR+12,btemp+9
 32489  01A28C  0060  F0D8  F009   	movff	??_TMR5_ISR+11,btemp+8
 32490  01A292  0060  F0D4  F008   	movff	??_TMR5_ISR+10,btemp+7
 32491  01A298  0060  F0D0  F007   	movff	??_TMR5_ISR+9,btemp+6
 32492  01A29E  0060  F0CC  F006   	movff	??_TMR5_ISR+8,btemp+5
 32493  01A2A4  0060  F0C8  F005   	movff	??_TMR5_ISR+7,btemp+4
 32494  01A2AA  0060  F0C4  F004   	movff	??_TMR5_ISR+6,btemp+3
 32495  01A2B0  0060  F0C0  F003   	movff	??_TMR5_ISR+5,btemp+2
 32496  01A2B6  0060  F0BC  F002   	movff	??_TMR5_ISR+4,btemp+1
 32497  01A2BC  0060  F0B8  F001   	movff	??_TMR5_ISR+3,btemp
 32498  01A2C2  0060  F0B7  FFD8   	movff	??_TMR5_ISR+2,status
 32499  01A2C8  0011               	retfie		f
 32500  01A2CA                     __end_of_TMR5_ISR:
 32501                           	opt callstack 0
 32502                           
 32503 ;; *************** function _TMR5_WriteTimer *****************
 32504 ;; Defined at:
 32505 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 32506 ;; Parameters:    Size  Location     Type
 32507 ;;  timerVal        2  [STACK] unsigned short 
 32508 ;; Auto vars:     Size  Location     Type
 32509 ;;		None
 32510 ;; Return value:  Size  Location     Type
 32511 ;;                  1  [STACK] void 
 32512 ;; Registers used:
 32513 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 32514 ;; Tracked objects:
 32515 ;;		On entry : 3F/39
 32516 ;;		On exit  : 0/0
 32517 ;;		Unchanged: 0/0
 32518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32523 ;;Total ram usage:        0 bytes
 32524 ;; Hardware stack levels used:    1
 32525 ;; Hardware stack levels required when called:    3
 32526 ;; This function calls:
 32527 ;;		Nothing
 32528 ;; This function is called by:
 32529 ;;		_TMR5_ISR
 32530 ;; This function uses a reentrant model
 32531 ;;
 32532                           
 32533                           	psect	text143
 32534  01B7AA                     __ptext143:
 32535                           	opt callstack 0
 32536  01B7AA                     _TMR5_WriteTimer:
 32537                           	opt callstack 12
 32538                           
 32539                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 32540                           
 32541                           ; BSR set to: 0
 32542                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32543                           ;incstack = 0
 32544  01B7AA  A49A               	btfss	154,2,c	;volatile
 32545  01B7AC  D00F               	goto	l10764
 32546                           
 32547                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 32548  01B7AE  909A               	bcf	154,0,c	;volatile
 32549                           
 32550                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 32551                           ;stkvar	_timerVal @ sp[(0)+-2]
 32552  01B7B0  0EFF               	movlw	255
 32553  01B7B2  24E1               	addwf	fsr1l,w,c
 32554  01B7B4  6ED9               	movwf	fsr2l,c
 32555  01B7B6  0EFF               	movlw	255
 32556  01B7B8  20E2               	addwfc	fsr1h,w,c
 32557  01B7BA  6EDA               	movwf	fsr2h,c
 32558  01B7BC  50DF               	movf	indf2,w,c
 32559  01B7BE  6E99               	movwf	153,c	;volatile
 32560                           
 32561                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 32562                           ;stkvar	_timerVal @ sp[(0)+-2]
 32563  01B7C0  0EFE               	movlw	-2
 32564  01B7C2  006F FF8F FF98     	movff	plusw1,16280	;volatile
 32565                           
 32566                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 32567  01B7C8  809A               	bsf	154,0,c	;volatile
 32568                           
 32569                           ;mcc_generated_files/tmr5.c: 144:  } else {
 32570  01B7CA  D00C               	goto	l1002
 32571  01B7CC                     l10764:
 32572                           
 32573                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 32574                           ;stkvar	_timerVal @ sp[(0)+-2]
 32575  01B7CC  0EFF               	movlw	255
 32576  01B7CE  24E1               	addwf	fsr1l,w,c
 32577  01B7D0  6ED9               	movwf	fsr2l,c
 32578  01B7D2  0EFF               	movlw	255
 32579  01B7D4  20E2               	addwfc	fsr1h,w,c
 32580  01B7D6  6EDA               	movwf	fsr2h,c
 32581  01B7D8  50DF               	movf	indf2,w,c
 32582  01B7DA  6E99               	movwf	153,c	;volatile
 32583                           
 32584                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 32585                           ;stkvar	_timerVal @ sp[(0)+-2]
 32586  01B7DC  0EFE               	movlw	-2
 32587  01B7DE  006F FF8F FF98     	movff	plusw1,16280	;volatile
 32588  01B7E4                     l1002:
 32589                           
 32590                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 32591  01B7E4  52E5               	movf	postdec1,f,c
 32592  01B7E6  52E5               	movf	postdec1,f,c
 32593  01B7E8  0012               	return		;funcret
 32594  01B7EA                     __end_of_TMR5_WriteTimer:
 32595                           	opt callstack 0
 32596                           
 32597 ;; *************** function _TMR5_CallBack *****************
 32598 ;; Defined at:
 32599 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 32600 ;; Parameters:    Size  Location     Type
 32601 ;;		None
 32602 ;; Auto vars:     Size  Location     Type
 32603 ;;		None
 32604 ;; Return value:  Size  Location     Type
 32605 ;;                  1  [STACK] void 
 32606 ;; Registers used:
 32607 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 32608 ;; Tracked objects:
 32609 ;;		On entry : 3F/0
 32610 ;;		On exit  : 0/0
 32611 ;;		Unchanged: 0/0
 32612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32617 ;;Total ram usage:        0 bytes
 32618 ;; Hardware stack levels used:    1
 32619 ;; Hardware stack levels required when called:    8
 32620 ;; This function calls:
 32621 ;;		Absolute function
 32622 ;;		_TMR5_DefaultInterruptHandler
 32623 ;; This function is called by:
 32624 ;;		_TMR5_ISR
 32625 ;; This function uses a reentrant model
 32626 ;;
 32627                           
 32628                           	psect	text144
 32629  01BE14                     __ptext144:
 32630                           	opt callstack 0
 32631  01BE14                     _TMR5_CallBack:
 32632                           	opt callstack 7
 32633                           
 32634                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 32635                           
 32636                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32637                           ;incstack = 0
 32638  01BE14  0100               	movlb	0	; () banked
 32639  01BE16  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 32640  01BE18  11A6               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 32641  01BE1A  11A7               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 32642  01BE1C  B4D8               	btfsc	status,2,c
 32643  01BE1E  0012               	return	
 32644                           
 32645                           ; BSR set to: 0
 32646                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 32647  01BE20  D801               	call	u1004_28
 32648  01BE22  0012               	return	
 32649  01BE24                     u1004_28:
 32650  01BE24  0005               	push	
 32651  01BE26  6EFA               	movwf	pclath,c
 32652  01BE28  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 32653  01BE2A  6EFD               	movwf	tosl,c
 32654  01BE2C  51A6               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 32655  01BE2E  6EFE               	movwf	tosh,c
 32656  01BE30  51A7               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 32657  01BE32  6EFF               	movwf	tosu,c
 32658  01BE34  50FA               	movf	pclath,w,c
 32659  01BE36  0012               	return		;indir
 32660  01BE38                     __end_of_TMR5_CallBack:
 32661                           	opt callstack 0
 32662                           
 32663 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 32664 ;; Defined at:
 32665 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 32666 ;; Parameters:    Size  Location     Type
 32667 ;;		None
 32668 ;; Auto vars:     Size  Location     Type
 32669 ;;		None
 32670 ;; Return value:  Size  Location     Type
 32671 ;;                  1  [STACK] void 
 32672 ;; Registers used:
 32673 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 32674 ;; Tracked objects:
 32675 ;;		On entry : 3F/0
 32676 ;;		On exit  : 0/0
 32677 ;;		Unchanged: 0/0
 32678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32683 ;;Total ram usage:        0 bytes
 32684 ;; Hardware stack levels used:    1
 32685 ;; Hardware stack levels required when called:    7
 32686 ;; This function calls:
 32687 ;;		_check_day_time
 32688 ;; This function is called by:
 32689 ;;		_TMR5_Initialize
 32690 ;;		_TMR5_CallBack
 32691 ;; This function uses a reentrant model
 32692 ;;
 32693                           
 32694                           	psect	text145
 32695  01B8DC                     __ptext145:
 32696                           	opt callstack 0
 32697  01B8DC                     _TMR5_DefaultInterruptHandler:
 32698                           	opt callstack 7
 32699                           
 32700                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 32701                           
 32702                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32703                           ;incstack = 0
 32704  01B8DC  A0BE               	btfss	190,0,c	;volatile
 32705  01B8DE  D002               	goto	u947_20
 32706  01B8E0  0E01               	movlw	1
 32707  01B8E2  D001               	goto	u947_26
 32708  01B8E4                     u947_20:
 32709  01B8E4  0E00               	movlw	0
 32710  01B8E6                     u947_26:
 32711  01B8E6  0AFF               	xorlw	255
 32712  01B8E8  6E0C               	movwf	(btemp+11)^0,c
 32713  01B8EA  50BE               	movf	190,w,c	;volatile
 32714  01B8EC  180C               	xorwf	(btemp+11)^0,w,c
 32715  01B8EE  0BFE               	andlw	-2
 32716  01B8F0  180C               	xorwf	(btemp+11)^0,w,c
 32717  01B8F2  6EBE               	movwf	190,c	;volatile
 32718                           
 32719                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 32720  01B8F4  0E01               	movlw	1
 32721  01B8F6  0101               	movlb	1	; () banked
 32722  01B8F8  27EB               	addwf	(_V+187)& (0+255),f,b	;volatile
 32723  01B8FA  0E00               	movlw	0
 32724  01B8FC  23EC               	addwfc	(_V+188)& (0+255),f,b	;volatile
 32725  01B8FE  23ED               	addwfc	(_V+189)& (0+255),f,b	;volatile
 32726  01B900  23EE               	addwfc	(_V+190)& (0+255),f,b	;volatile
 32727                           
 32728                           ; BSR set to: 1
 32729                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 32730  01B902  0E01               	movlw	1
 32731  01B904  27B1               	addwf	(_V+129)& (0+255),f,b	;volatile
 32732  01B906  0E00               	movlw	0
 32733  01B908  23B2               	addwfc	(_V+130)& (0+255),f,b	;volatile
 32734  01B90A  23B3               	addwfc	(_V+131)& (0+255),f,b	;volatile
 32735  01B90C  23B4               	addwfc	(_V+132)& (0+255),f,b	;volatile
 32736                           
 32737                           ; BSR set to: 1
 32738                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 32739  01B90E  EC1D  F0C4         	call	_check_day_time	;wreg free
 32740                           
 32741                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32742  01B912  0012               	return		;funcret
 32743  01B914                     __end_of_TMR5_DefaultInterruptHandler:
 32744                           	opt callstack 0
 32745                           
 32746 ;; *************** function _check_day_time *****************
 32747 ;; Defined at:
 32748 ;;		line 165 in file "mbmc.c"
 32749 ;; Parameters:    Size  Location     Type
 32750 ;;		None
 32751 ;; Auto vars:     Size  Location     Type
 32752 ;;  light           4  [STACK] float 
 32753 ;; Return value:  Size  Location     Type
 32754 ;;                  1  [STACK] _Bool 
 32755 ;; Registers used:
 32756 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 32757 ;; Tracked objects:
 32758 ;;		On entry : 3F/1
 32759 ;;		On exit  : 0/0
 32760 ;;		Unchanged: 0/0
 32761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32766 ;;Total ram usage:        0 bytes
 32767 ;; Hardware stack levels used:    1
 32768 ;; Hardware stack levels required when called:    6
 32769 ;; This function calls:
 32770 ;;		___flge
 32771 ;;		_conv_raw_result
 32772 ;;		_get_ac_charger_relay
 32773 ;;		_set_ac_charger_relay
 32774 ;; This function is called by:
 32775 ;;		_TMR5_DefaultInterruptHandler
 32776 ;; This function uses a reentrant model
 32777 ;;
 32778                           
 32779                           	psect	text146
 32780  01883A                     __ptext146:
 32781                           	opt callstack 0
 32782  01883A                     _check_day_time:
 32783                           	opt callstack 0
 32784                           
 32785                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32786  01883A  52E6               	movf	postinc1,f,c
 32787  01883C  52E6               	movf	postinc1,f,c
 32788  01883E  52E6               	movf	postinc1,f,c
 32789  018840  52E6               	movf	postinc1,f,c
 32790                           
 32791                           ;mbmc.c: 167:  static uint8_t day_delay = 0;;mbmc.c: 168:  float light;;mbmc.c: 170:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 32792                           
 32793                           ;incstack = 0
 32794  018842  0E00               	movlw	0
 32795  018844  6EE6               	movwf	postinc1,c
 32796  018846  0E0D               	movlw	13
 32797  018848  6EE6               	movwf	postinc1,c
 32798  01884A  EC71  F0A9         	call	_conv_raw_result	;wreg free
 32799                           
 32800                           ;stkvar	_light @ sp[(-4)+0]
 32801  01884E  0EFC               	movlw	-4
 32802  018850  0060  F007  FFE3   	movff	btemp,plusw1
 32803  018856  0EFD               	movlw	-3
 32804  018858  0060  F00B  FFE3   	movff	btemp+1,plusw1
 32805  01885E  0EFE               	movlw	-2
 32806  018860  0060  F00F  FFE3   	movff	btemp+2,plusw1
 32807  018866  0EFF               	movlw	-1
 32808  018868  0060  F013  FFE3   	movff	btemp+3,plusw1
 32809                           
 32810                           ;mbmc.c: 172:  if (!day_delay++ && V.system_stable) {
 32811  01886E  2A42               	incf	check_day_time@day_delay^0,f,c
 32812  018870  0442               	decf	check_day_time@day_delay^0,w,c
 32813  018872  A4D8               	btfss	status,2,c
 32814  018874  D0A9               	goto	l1896
 32815  018876  0101               	movlb	1	; () banked
 32816  018878  51DE               	movf	(_V+174)& (0+255),w,b	;volatile
 32817  01887A  B4D8               	btfsc	status,2,c
 32818  01887C  D0A5               	goto	l1896
 32819                           
 32820                           ; BSR set to: 1
 32821                           ;mbmc.c: 173:   if (C.soc > 15) {
 32822  01887E  EE21  F3B5         	lfsr	2,_C+182	;volatile
 32823  018882  0E01               	movlw	1
 32824  018884  50DB               	movf	plusw2,w,c
 32825  018886  E104               	bnz	u926_20
 32826  018888  0E10               	movlw	16
 32827  01888A  5CDE               	subwf	postinc2,w,c
 32828  01888C  A0D8               	btfss	status,0,c
 32829  01888E  D073               	goto	l9848
 32830  018890                     u926_20:
 32831                           
 32832                           ; BSR set to: 1
 32833                           ;mbmc.c: 174:    if (!C.day) {
 32834  018890  EE22  F021         	lfsr	2,_C+290	;volatile
 32835  018894  50DF               	movf	indf2,w,c
 32836  018896  A4D8               	btfss	status,2,c
 32837  018898  D035               	goto	l9836
 32838                           
 32839                           ; BSR set to: 1
 32840                           ;mbmc.c: 175:     if (light > 22.0) {
 32841                           ;stkvar	_light @ sp[(-4)+0]
 32842  01889A  0EFC               	movlw	-4
 32843  01889C  006F FF8F FFE6     	movff	plusw1,postinc1
 32844  0188A2  006F FF8F FFE6     	movff	plusw1,postinc1
 32845  0188A8  006F FF8F FFE6     	movff	plusw1,postinc1
 32846  0188AE  006F FF8F FFE6     	movff	plusw1,postinc1
 32847  0188B4  0E00               	movlw	0
 32848  0188B6  6EE6               	movwf	postinc1,c
 32849  0188B8  0E00               	movlw	0
 32850  0188BA  6EE6               	movwf	postinc1,c
 32851  0188BC  0EB0               	movlw	176
 32852  0188BE  6EE6               	movwf	postinc1,c
 32853  0188C0  0E41               	movlw	65
 32854  0188C2  6EE6               	movwf	postinc1,c
 32855  0188C4  ECF4  F0C7         	call	___flge	;wreg free
 32856  0188C8  B001               	btfsc	btemp& (0+255),0,c
 32857  0188CA  D07E               	goto	l1896
 32858                           
 32859                           ;mbmc.c: 176:      C.day = 1;
 32860  0188CC  0E01               	movlw	1
 32861  0188CE  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 32862                           
 32863                           ;mbmc.c: 177:      C.day_start = V.ticks;
 32864  0188D4  EE20  F1B1         	lfsr	2,_V+129	;volatile
 32865  0188D8  006F FF78  F822    	movff	postinc2,_C+291	;volatile
 32866  0188DE  006F FF78  F823    	movff	postinc2,_C+292	;volatile
 32867  0188E4  006F FF78  F824    	movff	postinc2,_C+293	;volatile
 32868  0188EA  006F FF74  F825    	movff	postdec2,_C+294	;volatile
 32869                           
 32870                           ;mbmc.c: 178:      if (get_ac_charger_relay()) {
 32871  0188F0  EC88  F0E0         	call	_get_ac_charger_relay	;wreg free
 32872  0188F4  5001               	movf	btemp^0,w,c
 32873  0188F6  B4D8               	btfsc	status,2,c
 32874  0188F8  D06B               	goto	l1892
 32875                           
 32876                           ;mbmc.c: 179:       set_ac_charger_relay(0);
 32877  0188FA  0E00               	movlw	0
 32878  0188FC  6EE6               	movwf	postinc1,c
 32879  0188FE  EC6B  F0E0         	call	_set_ac_charger_relay	;wreg free
 32880  018902  D066               	goto	l1892
 32881  018904                     l9836:
 32882                           
 32883                           ; BSR set to: 1
 32884                           ;mbmc.c: 184:     if (light < 12.0) {
 32885  018904  0E00               	movlw	0
 32886  018906  6EE6               	movwf	postinc1,c
 32887  018908  0E00               	movlw	0
 32888  01890A  6EE6               	movwf	postinc1,c
 32889  01890C  0E40               	movlw	64
 32890  01890E  6EE6               	movwf	postinc1,c
 32891  018910  0E41               	movlw	65
 32892  018912  6EE6               	movwf	postinc1,c
 32893                           
 32894                           ;stkvar	_light @ sp[(-8)+0]
 32895  018914  0EF8               	movlw	-8
 32896  018916  006F FF8F FFE6     	movff	plusw1,postinc1
 32897  01891C  006F FF8F FFE6     	movff	plusw1,postinc1
 32898  018922  006F FF8F FFE6     	movff	plusw1,postinc1
 32899  018928  006F FF8F FFE6     	movff	plusw1,postinc1
 32900  01892E  ECF4  F0C7         	call	___flge	;wreg free
 32901  018932  B001               	btfsc	btemp& (0+255),0,c
 32902  018934  D049               	goto	l1896
 32903                           
 32904                           ;mbmc.c: 185:      C.day = 0;
 32905  018936  0E00               	movlw	0
 32906  018938  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 32907                           
 32908                           ;mbmc.c: 186:      C.day_end = V.ticks;
 32909  01893E  EE20  F1B1         	lfsr	2,_V+129	;volatile
 32910  018942  006F FF78  F826    	movff	postinc2,_C+295	;volatile
 32911  018948  006F FF78  F827    	movff	postinc2,_C+296	;volatile
 32912  01894E  006F FF78  F828    	movff	postinc2,_C+297	;volatile
 32913  018954  006F FF74  F829    	movff	postdec2,_C+298	;volatile
 32914                           
 32915                           ;mbmc.c: 190:      if ((C.soc < 40)) {
 32916  01895A  EE21  F3B5         	lfsr	2,_C+182	;volatile
 32917  01895E  0E01               	movlw	1
 32918  018960  50DB               	movf	plusw2,w,c
 32919  018962  E136               	bnz	l1892
 32920  018964  0E28               	movlw	40
 32921  018966  5CDE               	subwf	postinc2,w,c
 32922  018968  B0D8               	btfsc	status,0,c
 32923  01896A  D032               	goto	l1892
 32924                           
 32925                           ;mbmc.c: 191:       set_ac_charger_relay(1);
 32926  01896C  0E01               	movlw	1
 32927  01896E  6EE6               	movwf	postinc1,c
 32928  018970  EC6B  F0E0         	call	_set_ac_charger_relay	;wreg free
 32929  018974  D02D               	goto	l1892
 32930  018976                     l9848:
 32931                           
 32932                           ; BSR set to: 1
 32933                           ;mbmc.c: 197:    if (C.p_pv < C.p_inverter) {
 32934  018976  EE21  F377         	lfsr	2,_C+120	;volatile
 32935  01897A  006F FF7B FFE6     	movff	postinc2,postinc1
 32936  018980  006F FF7B FFE6     	movff	postinc2,postinc1
 32937  018986  006F FF7B FFE6     	movff	postinc2,postinc1
 32938  01898C  006F FF7B FFE6     	movff	postinc2,postinc1
 32939  018992  EE21  F37B         	lfsr	2,_C+124	;volatile
 32940  018996  006F FF7B FFE6     	movff	postinc2,postinc1
 32941  01899C  006F FF7B FFE6     	movff	postinc2,postinc1
 32942  0189A2  006F FF7B FFE6     	movff	postinc2,postinc1
 32943  0189A8  006F FF7B FFE6     	movff	postinc2,postinc1
 32944  0189AE  ECF4  F0C7         	call	___flge	;wreg free
 32945  0189B2  B001               	btfsc	btemp& (0+255),0,c
 32946  0189B4  D009               	goto	l1896
 32947                           
 32948                           ;mbmc.c: 198:     if (!get_ac_charger_relay()) {
 32949  0189B6  EC88  F0E0         	call	_get_ac_charger_relay	;wreg free
 32950  0189BA  5001               	movf	btemp^0,w,c
 32951  0189BC  A4D8               	btfss	status,2,c
 32952  0189BE  D004               	goto	l1896
 32953                           
 32954                           ;mbmc.c: 199:      set_ac_charger_relay(1);
 32955  0189C0  0E01               	movlw	1
 32956  0189C2  6EE6               	movwf	postinc1,c
 32957  0189C4  EC6B  F0E0         	call	_set_ac_charger_relay	;wreg free
 32958  0189C8                     l1896:
 32959                           
 32960                           ;mbmc.c: 204:  if (day_delay >= 240)
 32961  0189C8  0EEF               	movlw	239
 32962  0189CA  6442               	cpfsgt	check_day_time@day_delay^0,c
 32963  0189CC  D001               	goto	l1892
 32964                           
 32965                           ;mbmc.c: 205:   day_delay = 0;
 32966  0189CE  6A42               	clrf	check_day_time@day_delay^0,c
 32967  0189D0                     l1892:
 32968                           
 32969                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 32970  0189D0  52E5               	movf	postdec1,f,c
 32971  0189D2  52E5               	movf	postdec1,f,c
 32972  0189D4  52E5               	movf	postdec1,f,c
 32973  0189D6  52E5               	movf	postdec1,f,c
 32974  0189D8  0012               	return		;funcret
 32975  0189DA                     __end_of_check_day_time:
 32976                           	opt callstack 0
 32977                           
 32978 ;; *************** function _set_ac_charger_relay *****************
 32979 ;; Defined at:
 32980 ;;		line 135 in file "mbmc.c"
 32981 ;; Parameters:    Size  Location     Type
 32982 ;;  mode            1  [STACK] const _Bool 
 32983 ;; Auto vars:     Size  Location     Type
 32984 ;;		None
 32985 ;; Return value:  Size  Location     Type
 32986 ;;                  1  [STACK] void 
 32987 ;; Registers used:
 32988 ;;		wreg, fsr1l, fsr1h
 32989 ;; Tracked objects:
 32990 ;;		On entry : 0/1
 32991 ;;		On exit  : 0/0
 32992 ;;		Unchanged: 0/0
 32993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32998 ;;Total ram usage:        0 bytes
 32999 ;; Hardware stack levels used:    1
 33000 ;; Hardware stack levels required when called:    3
 33001 ;; This function calls:
 33002 ;;		Nothing
 33003 ;; This function is called by:
 33004 ;;		_check_day_time
 33005 ;; This function uses a reentrant model
 33006 ;;
 33007                           
 33008                           	psect	text147
 33009  01C0D6                     __ptext147:
 33010                           	opt callstack 0
 33011  01C0D6                     _set_ac_charger_relay:
 33012                           	opt callstack 9
 33013                           
 33014                           ;mbmc.c: 135: void set_ac_charger_relay(const _Bool mode);mbmc.c: 136: {;mbmc.c: 137:  L
      +                          ATDbits.LATD6 = mode;
 33015                           ;stkvar	_mode @ sp[(0)+-1]
 33016                           
 33017                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33018                           ;incstack = 0
 33019  01C0D6  0EFF               	movlw	-1
 33020  01C0D8  B0E3               	btfsc	plusw1,0,c
 33021  01C0DA  D002               	bra	u921_25
 33022  01C0DC  9CBD               	bcf	189,6,c	;volatile
 33023  01C0DE  D001               	bra	u921_26
 33024  01C0E0                     u921_25:
 33025  01C0E0  8CBD               	bsf	189,6,c	;volatile
 33026  01C0E2                     u921_26:
 33027                           
 33028                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 33029  01C0E2  52E5               	movf	postdec1,f,c
 33030  01C0E4  0012               	return		;funcret
 33031  01C0E6                     __end_of_set_ac_charger_relay:
 33032                           	opt callstack 0
 33033                           
 33034 ;; *************** function _get_ac_charger_relay *****************
 33035 ;; Defined at:
 33036 ;;		line 140 in file "mbmc.c"
 33037 ;; Parameters:    Size  Location     Type
 33038 ;;		None
 33039 ;; Auto vars:     Size  Location     Type
 33040 ;;		None
 33041 ;; Return value:  Size  Location     Type
 33042 ;;                  1  [STACK] _Bool 
 33043 ;; Registers used:
 33044 ;;		btemp
 33045 ;; Tracked objects:
 33046 ;;		On entry : 0/1
 33047 ;;		On exit  : 0/0
 33048 ;;		Unchanged: 0/0
 33049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33054 ;;Total ram usage:        0 bytes
 33055 ;; Hardware stack levels used:    1
 33056 ;; Hardware stack levels required when called:    3
 33057 ;; This function calls:
 33058 ;;		Nothing
 33059 ;; This function is called by:
 33060 ;;		_check_day_time
 33061 ;;		_calc_bsoc
 33062 ;; This function uses a reentrant model
 33063 ;;
 33064                           
 33065                           	psect	text148
 33066  01C110                     __ptext148:
 33067                           	opt callstack 0
 33068  01C110                     _get_ac_charger_relay:
 33069                           	opt callstack 10
 33070                           
 33071                           ;mbmc.c: 142:  return LATDbits.LATD6;
 33072                           
 33073                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33074                           ;incstack = 0
 33075  01C110  ACBD               	btfss	189,6,c	;volatile
 33076  01C112  D003               	goto	u940_20
 33077  01C114  6A01               	clrf	btemp^0,c
 33078  01C116  2A01               	incf	btemp^0,f,c
 33079  01C118  0012               	return	
 33080  01C11A                     u940_20:
 33081  01C11A  6A01               	clrf	btemp^0,c
 33082                           
 33083                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 33084  01C11C  0012               	return		;funcret
 33085  01C11E                     __end_of_get_ac_charger_relay:
 33086                           	opt callstack 0
 33087                           
 33088 ;; *************** function _TMR3_ISR *****************
 33089 ;; Defined at:
 33090 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 33091 ;; Parameters:    Size  Location     Type
 33092 ;;		None
 33093 ;; Auto vars:     Size  Location     Type
 33094 ;;		None
 33095 ;; Return value:  Size  Location     Type
 33096 ;;                  1    wreg      void 
 33097 ;; Registers used:
 33098 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 33099 ;; Tracked objects:
 33100 ;;		On entry : 0/0
 33101 ;;		On exit  : 3F/0
 33102 ;;		Unchanged: 0/0
 33103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33106 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33107 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33108 ;;Total ram usage:       25 bytes
 33109 ;; Hardware stack levels used:    1
 33110 ;; Hardware stack levels required when called:   14
 33111 ;; This function calls:
 33112 ;;		_TMR3_CallBack
 33113 ;;		_TMR3_WriteTimer
 33114 ;; This function is called by:
 33115 ;;		Interrupt level 1
 33116 ;; This function uses a non-reentrant model
 33117 ;;
 33118                           
 33119                           	psect	text149
 33120  01914C                     __ptext149:
 33121                           	opt callstack 0
 33122  01914C                     _TMR3_ISR:
 33123                           	opt callstack 2
 33124                           
 33125                           ;incstack = 0
 33126  01914C  006F FF60  F0D7    	movff	status,??_TMR3_ISR
 33127  019152  006F FFD8  F0D8    	movff	tblptrl,??_TMR3_ISR+1
 33128  019158  006F FFDC  F0D9    	movff	tblptrh,??_TMR3_ISR+2
 33129  01915E  006F FFE0  F0DA    	movff	tblptru,??_TMR3_ISR+3
 33130  019164  006F FFD4  F0DB    	movff	tablat,??_TMR3_ISR+4
 33131  01916A  0060  F004  F0DC   	movff	btemp,??_TMR3_ISR+5
 33132  019170  0060  F008  F0DD   	movff	btemp+1,??_TMR3_ISR+6
 33133  019176  0060  F00C  F0DE   	movff	btemp+2,??_TMR3_ISR+7
 33134  01917C  0060  F010  F0DF   	movff	btemp+3,??_TMR3_ISR+8
 33135  019182  0060  F014  F0E0   	movff	btemp+4,??_TMR3_ISR+9
 33136  019188  0060  F018  F0E1   	movff	btemp+5,??_TMR3_ISR+10
 33137  01918E  0060  F01C  F0E2   	movff	btemp+6,??_TMR3_ISR+11
 33138  019194  0060  F020  F0E3   	movff	btemp+7,??_TMR3_ISR+12
 33139  01919A  0060  F024  F0E4   	movff	btemp+8,??_TMR3_ISR+13
 33140  0191A0  0060  F028  F0E5   	movff	btemp+9,??_TMR3_ISR+14
 33141  0191A6  0060  F02C  F0E6   	movff	btemp+10,??_TMR3_ISR+15
 33142  0191AC  0060  F030  F0E7   	movff	btemp+11,??_TMR3_ISR+16
 33143  0191B2  0060  F044  F0E8   	movff	btemp+16,??_TMR3_ISR+17
 33144  0191B8  0060  F048  F0E9   	movff	btemp+17,??_TMR3_ISR+18
 33145  0191BE  0060  F04C  F0EA   	movff	btemp+18,??_TMR3_ISR+19
 33146  0191C4  0060  F050  F0EB   	movff	btemp+19,??_TMR3_ISR+20
 33147  0191CA  0060  F054  F0EC   	movff	btemp+20,??_TMR3_ISR+21
 33148  0191D0  0060  F058  F0ED   	movff	btemp+21,??_TMR3_ISR+22
 33149  0191D6  0060  F05C  F0EE   	movff	btemp+22,??_TMR3_ISR+23
 33150  0191DC  0060  F060  F0EF   	movff	btemp+23,??_TMR3_ISR+24
 33151  0191E2  EE16  F0AF         	lfsr	1,___intlo_sp
 33152                           
 33153                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 33154  0191E6  0139               	movlb	57	; () banked
 33155  0191E8  9DA6               	bcf	166,6,b	;volatile
 33156                           
 33157                           ; BSR set to: 57
 33158                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 33159  0191EA  0060  F313  FFE6   	movff	_timer3ReloadVal,postinc1
 33160  0191F0  0060  F317  FFE6   	movff	_timer3ReloadVal+1,postinc1
 33161  0191F6  ECF5  F0DB         	call	_TMR3_WriteTimer	;wreg free
 33162                           
 33163                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 33164  0191FA  0100               	movlb	0	; () banked
 33165  0191FC  4BC2               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 33166  0191FE  2BC3               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 33167  019200  51C3               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 33168  019202  E104               	bnz	i1u1252_20
 33169  019204  0E28               	movlw	40
 33170  019206  5DC2               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 33171  019208  A0D8               	btfss	status,0,c
 33172  01920A  D005               	goto	i1l1207
 33173  01920C                     i1u1252_20:
 33174                           
 33175                           ; BSR set to: 0
 33176                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 33177  01920C  EC1C  F0DF         	call	_TMR3_CallBack	;wreg free
 33178                           
 33179                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 33180  019210  0100               	movlb	0	; () banked
 33181  019212  6BC2               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 33182  019214  6BC3               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 33183  019216                     i1l1207:
 33184                           
 33185                           ; BSR set to: 0
 33186  019216  0060  F3BC  F018   	movff	??_TMR3_ISR+24,btemp+23
 33187  01921C  0060  F3B8  F017   	movff	??_TMR3_ISR+23,btemp+22
 33188  019222  0060  F3B4  F016   	movff	??_TMR3_ISR+22,btemp+21
 33189  019228  0060  F3B0  F015   	movff	??_TMR3_ISR+21,btemp+20
 33190  01922E  0060  F3AC  F014   	movff	??_TMR3_ISR+20,btemp+19
 33191  019234  0060  F3A8  F013   	movff	??_TMR3_ISR+19,btemp+18
 33192  01923A  0060  F3A4  F012   	movff	??_TMR3_ISR+18,btemp+17
 33193  019240  0060  F3A0  F011   	movff	??_TMR3_ISR+17,btemp+16
 33194  019246  0060  F39C  F00C   	movff	??_TMR3_ISR+16,btemp+11
 33195  01924C  0060  F398  F00B   	movff	??_TMR3_ISR+15,btemp+10
 33196  019252  0060  F394  F00A   	movff	??_TMR3_ISR+14,btemp+9
 33197  019258  0060  F390  F009   	movff	??_TMR3_ISR+13,btemp+8
 33198  01925E  0060  F38C  F008   	movff	??_TMR3_ISR+12,btemp+7
 33199  019264  0060  F388  F007   	movff	??_TMR3_ISR+11,btemp+6
 33200  01926A  0060  F384  F006   	movff	??_TMR3_ISR+10,btemp+5
 33201  019270  0060  F380  F005   	movff	??_TMR3_ISR+9,btemp+4
 33202  019276  0060  F37C  F004   	movff	??_TMR3_ISR+8,btemp+3
 33203  01927C  0060  F378  F003   	movff	??_TMR3_ISR+7,btemp+2
 33204  019282  0060  F374  F002   	movff	??_TMR3_ISR+6,btemp+1
 33205  019288  0060  F370  F001   	movff	??_TMR3_ISR+5,btemp
 33206  01928E  0060  F36F  FFF5   	movff	??_TMR3_ISR+4,tablat
 33207  019294  0060  F36B  FFF8   	movff	??_TMR3_ISR+3,tblptru
 33208  01929A  0060  F367  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 33209  0192A0  0060  F363  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 33210  0192A6  0060  F35F  FFD8   	movff	??_TMR3_ISR,status
 33211  0192AC  0011               	retfie		f
 33212  0192AE                     __end_of_TMR3_ISR:
 33213                           	opt callstack 0
 33214                           
 33215 ;; *************** function _TMR3_WriteTimer *****************
 33216 ;; Defined at:
 33217 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 33218 ;; Parameters:    Size  Location     Type
 33219 ;;  timerVal        2  [STACK] unsigned short 
 33220 ;; Auto vars:     Size  Location     Type
 33221 ;;		None
 33222 ;; Return value:  Size  Location     Type
 33223 ;;                  1  [STACK] void 
 33224 ;; Registers used:
 33225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 33226 ;; Tracked objects:
 33227 ;;		On entry : 3F/39
 33228 ;;		On exit  : 0/0
 33229 ;;		Unchanged: 0/0
 33230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33235 ;;Total ram usage:        0 bytes
 33236 ;; Hardware stack levels used:    1
 33237 ;; Hardware stack levels required when called:    3
 33238 ;; This function calls:
 33239 ;;		Nothing
 33240 ;; This function is called by:
 33241 ;;		_TMR3_ISR
 33242 ;; This function uses a reentrant model
 33243 ;;
 33244                           
 33245                           	psect	text150
 33246  01B7EA                     __ptext150:
 33247                           	opt callstack 0
 33248  01B7EA                     _TMR3_WriteTimer:
 33249                           	opt callstack 12
 33250                           
 33251                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 33252                           
 33253                           ; BSR set to: 0
 33254                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33255                           ;incstack = 0
 33256  01B7EA  A4A6               	btfss	166,2,c	;volatile
 33257  01B7EC  D00F               	goto	l10782
 33258                           
 33259                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 33260  01B7EE  90A6               	bcf	166,0,c	;volatile
 33261                           
 33262                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 33263                           ;stkvar	_timerVal @ sp[(0)+-2]
 33264  01B7F0  0EFF               	movlw	255
 33265  01B7F2  24E1               	addwf	fsr1l,w,c
 33266  01B7F4  6ED9               	movwf	fsr2l,c
 33267  01B7F6  0EFF               	movlw	255
 33268  01B7F8  20E2               	addwfc	fsr1h,w,c
 33269  01B7FA  6EDA               	movwf	fsr2h,c
 33270  01B7FC  50DF               	movf	indf2,w,c
 33271  01B7FE  6EA5               	movwf	165,c	;volatile
 33272                           
 33273                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 33274                           ;stkvar	_timerVal @ sp[(0)+-2]
 33275  01B800  0EFE               	movlw	-2
 33276  01B802  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 33277                           
 33278                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 33279  01B808  80A6               	bsf	166,0,c	;volatile
 33280                           
 33281                           ;mcc_generated_files/tmr3.c: 141:     }
 33282  01B80A  D00C               	goto	l1190
 33283  01B80C                     l10782:
 33284                           
 33285                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 33286                           ;stkvar	_timerVal @ sp[(0)+-2]
 33287  01B80C  0EFF               	movlw	255
 33288  01B80E  24E1               	addwf	fsr1l,w,c
 33289  01B810  6ED9               	movwf	fsr2l,c
 33290  01B812  0EFF               	movlw	255
 33291  01B814  20E2               	addwfc	fsr1h,w,c
 33292  01B816  6EDA               	movwf	fsr2h,c
 33293  01B818  50DF               	movf	indf2,w,c
 33294  01B81A  6EA5               	movwf	165,c	;volatile
 33295                           
 33296                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 33297                           ;stkvar	_timerVal @ sp[(0)+-2]
 33298  01B81C  0EFE               	movlw	-2
 33299  01B81E  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 33300  01B824                     l1190:
 33301                           
 33302                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 33303  01B824  52E5               	movf	postdec1,f,c
 33304  01B826  52E5               	movf	postdec1,f,c
 33305  01B828  0012               	return		;funcret
 33306  01B82A                     __end_of_TMR3_WriteTimer:
 33307                           	opt callstack 0
 33308                           
 33309 ;; *************** function _TMR3_CallBack *****************
 33310 ;; Defined at:
 33311 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 33312 ;; Parameters:    Size  Location     Type
 33313 ;;		None
 33314 ;; Auto vars:     Size  Location     Type
 33315 ;;		None
 33316 ;; Return value:  Size  Location     Type
 33317 ;;                  1  [STACK] void 
 33318 ;; Registers used:
 33319 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 33320 ;; Tracked objects:
 33321 ;;		On entry : 3F/0
 33322 ;;		On exit  : 0/0
 33323 ;;		Unchanged: 0/0
 33324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33329 ;;Total ram usage:        0 bytes
 33330 ;; Hardware stack levels used:    1
 33331 ;; Hardware stack levels required when called:   13
 33332 ;; This function calls:
 33333 ;;		Absolute function
 33334 ;;		_TMR3_DefaultInterruptHandler
 33335 ;;		_calc_bsoc
 33336 ;; This function is called by:
 33337 ;;		_TMR3_ISR
 33338 ;; This function uses a reentrant model
 33339 ;;
 33340                           
 33341                           	psect	text151
 33342  01BE38                     __ptext151:
 33343                           	opt callstack 0
 33344  01BE38                     _TMR3_CallBack:
 33345                           	opt callstack 2
 33346                           
 33347                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 33348                           
 33349                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33350                           ;incstack = 0
 33351  01BE38  0100               	movlb	0	; () banked
 33352  01BE3A  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 33353  01BE3C  11A3               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 33354  01BE3E  11A4               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 33355  01BE40  B4D8               	btfsc	status,2,c
 33356  01BE42  0012               	return	
 33357                           
 33358                           ; BSR set to: 0
 33359                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 33360  01BE44  D801               	call	u1243_28
 33361  01BE46  0012               	return	
 33362  01BE48                     u1243_28:
 33363  01BE48  0005               	push	
 33364  01BE4A  6EFA               	movwf	pclath,c
 33365  01BE4C  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 33366  01BE4E  6EFD               	movwf	tosl,c
 33367  01BE50  51A3               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 33368  01BE52  6EFE               	movwf	tosh,c
 33369  01BE54  51A4               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 33370  01BE56  6EFF               	movwf	tosu,c
 33371  01BE58  50FA               	movf	pclath,w,c
 33372  01BE5A  0012               	return		;indir
 33373  01BE5C                     __end_of_TMR3_CallBack:
 33374                           	opt callstack 0
 33375                           
 33376 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 33377 ;; Defined at:
 33378 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 33379 ;; Parameters:    Size  Location     Type
 33380 ;;		None
 33381 ;; Auto vars:     Size  Location     Type
 33382 ;;		None
 33383 ;; Return value:  Size  Location     Type
 33384 ;;                  1  [STACK] void 
 33385 ;; Registers used:
 33386 ;;		None
 33387 ;; Tracked objects:
 33388 ;;		On entry : 3F/0
 33389 ;;		On exit  : 0/0
 33390 ;;		Unchanged: 0/0
 33391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33396 ;;Total ram usage:        0 bytes
 33397 ;; Hardware stack levels used:    1
 33398 ;; Hardware stack levels required when called:    3
 33399 ;; This function calls:
 33400 ;;		Nothing
 33401 ;; This function is called by:
 33402 ;;		_TMR3_Initialize
 33403 ;;		_TMR3_CallBack
 33404 ;; This function uses a reentrant model
 33405 ;;
 33406                           
 33407                           	psect	text152
 33408  01C1C0                     __ptext152:
 33409                           	opt callstack 0
 33410  01C1C0                     _TMR3_DefaultInterruptHandler:
 33411                           	opt callstack 11
 33412                           
 33413                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33414                           
 33415                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33416                           ;incstack = 0
 33417  01C1C0  0012               	return		;funcret
 33418  01C1C2                     __end_of_TMR3_DefaultInterruptHandler:
 33419                           	opt callstack 0
 33420                           
 33421 ;; *************** function _calc_bsoc *****************
 33422 ;; Defined at:
 33423 ;;		line 39 in file "bsoc.c"
 33424 ;; Parameters:    Size  Location     Type
 33425 ;;		None
 33426 ;; Auto vars:     Size  Location     Type
 33427 ;;  adj             4  [STACK] float 
 33428 ;;  log_ptr         2  [STACK] PTR unsigned char 
 33429 ;;		 -> port_data(512), 
 33430 ;; Return value:  Size  Location     Type
 33431 ;;                  1  [STACK] void 
 33432 ;; Registers used:
 33433 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 33434 ;; Tracked objects:
 33435 ;;		On entry : 3F/0
 33436 ;;		On exit  : 5/1
 33437 ;;		Unchanged: 0/0
 33438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33443 ;;Total ram usage:        0 bytes
 33444 ;; Hardware stack levels used:    1
 33445 ;; Hardware stack levels required when called:   12
 33446 ;; This function calls:
 33447 ;;		_StartTimer
 33448 ;;		___asfladd
 33449 ;;		___fldiv
 33450 ;;		___flge
 33451 ;;		___flmul
 33452 ;;		___flneg
 33453 ;;		___fltol
 33454 ;;		_fabsf
 33455 ;;		_get_ac_charger_relay
 33456 ;;		_port_data_dma_ptr
 33457 ;;		_send_port_data_dma
 33458 ;;		_sprintf
 33459 ;;		_strlen
 33460 ;; This function is called by:
 33461 ;;		_init_bsoc
 33462 ;;		_TMR3_CallBack
 33463 ;; This function uses a reentrant model
 33464 ;;
 33465                           
 33466                           	psect	text153
 33467  01334C                     __ptext153:
 33468                           	opt callstack 0
 33469  01334C                     _calc_bsoc:
 33470                           	opt callstack 0
 33471                           
 33472                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33473  01334C  0E06               	movlw	6
 33474  01334E  26E1               	addwf	fsr1l,f,c
 33475  013350  0E00               	movlw	0
 33476  013352  22E2               	addwfc	fsr1h,f,c
 33477                           
 33478                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 33479                           
 33480                           ;incstack = 0
 33481  013354  0E00               	movlw	0
 33482  013356  6E09               	movwf	(btemp+8)^0,c
 33483  013358  0E00               	movlw	0
 33484  01335A  6E0A               	movwf	(btemp+9)^0,c
 33485  01335C  0E80               	movlw	128
 33486  01335E  6E0B               	movwf	(btemp+10)^0,c
 33487  013360  0E3F               	movlw	63
 33488  013362  6E0C               	movwf	(btemp+11)^0,c
 33489                           
 33490                           ;stkvar	_adj @ sp[(-6)+0]
 33491  013364  0EFA               	movlw	-6
 33492  013366  0060  F027  FFE3   	movff	btemp+8,plusw1
 33493  01336C  0EFB               	movlw	-5
 33494  01336E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 33495  013374  0EFC               	movlw	-4
 33496  013376  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33497  01337C  0EFD               	movlw	-3
 33498  01337E  0060  F033  FFE3   	movff	btemp+11,plusw1
 33499  013384  82BE               	bsf	190,1,c	;volatile
 33500                           
 33501                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 33502  013386  0E00               	movlw	0
 33503  013388  6EE6               	movwf	postinc1,c
 33504  01338A  0E00               	movlw	0
 33505  01338C  6EE6               	movwf	postinc1,c
 33506  01338E  0E61               	movlw	97
 33507  013390  6EE6               	movwf	postinc1,c
 33508  013392  0E45               	movlw	69
 33509  013394  6EE6               	movwf	postinc1,c
 33510  013396  EE21  F343         	lfsr	2,_C+68	;volatile
 33511  01339A  006F FF7B FFE6     	movff	postinc2,postinc1
 33512  0133A0  006F FF7B FFE6     	movff	postinc2,postinc1
 33513  0133A6  006F FF7B FFE6     	movff	postinc2,postinc1
 33514  0133AC  006F FF7B FFE6     	movff	postinc2,postinc1
 33515  0133B2  ECB4  F0A6         	call	___fldiv	;wreg free
 33516  0133B6  0060  F007  FFE6   	movff	btemp,postinc1
 33517  0133BC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33518  0133C2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33519  0133C8  0060  F013  FFE6   	movff	btemp+3,postinc1
 33520  0133CE  0E8F               	movlw	low (_C+144)
 33521  0133D0  6EE6               	movwf	postinc1,c
 33522  0133D2  0E07               	movlw	high (_C+144)
 33523  0133D4  6EE6               	movwf	postinc1,c
 33524  0133D6  EC20  F0D7         	call	___asfladd	;wreg free
 33525                           
 33526                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 33527  0133DA  EE21  F38F         	lfsr	2,_C+144	;volatile
 33528  0133DE  006F FF7B FFE6     	movff	postinc2,postinc1
 33529  0133E4  006F FF7B FFE6     	movff	postinc2,postinc1
 33530  0133EA  006F FF7B FFE6     	movff	postinc2,postinc1
 33531  0133F0  006F FF7B FFE6     	movff	postinc2,postinc1
 33532  0133F6  EE21  F38B         	lfsr	2,_C+140	;volatile
 33533  0133FA  006F FF7B FFE6     	movff	postinc2,postinc1
 33534  013400  006F FF7B FFE6     	movff	postinc2,postinc1
 33535  013406  006F FF7B FFE6     	movff	postinc2,postinc1
 33536  01340C  006F FF7B FFE6     	movff	postinc2,postinc1
 33537  013412  ECF4  F0C7         	call	___flge	;wreg free
 33538  013416  B001               	btfsc	btemp& (0+255),0,c
 33539  013418  D00E               	goto	l12818
 33540                           
 33541                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 33542  01341A  EE21  F38B         	lfsr	2,_C+140	;volatile
 33543  01341E  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
 33544  013424  006F FF78  F790    	movff	postinc2,_C+145	;volatile
 33545  01342A  006F FF78  F791    	movff	postinc2,_C+146	;volatile
 33546  013430  006F FF74  F792    	movff	postdec2,_C+147	;volatile
 33547  013436                     l12818:
 33548                           
 33549                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 33550  013436  0ECD               	movlw	205
 33551  013438  6EE6               	movwf	postinc1,c
 33552  01343A  0ECC               	movlw	204
 33553  01343C  6EE6               	movwf	postinc1,c
 33554  01343E  0ECC               	movlw	204
 33555  013440  6EE6               	movwf	postinc1,c
 33556  013442  0E3D               	movlw	61
 33557  013444  6EE6               	movwf	postinc1,c
 33558  013446  EE21  F38F         	lfsr	2,_C+144	;volatile
 33559  01344A  006F FF7B FFE6     	movff	postinc2,postinc1
 33560  013450  006F FF7B FFE6     	movff	postinc2,postinc1
 33561  013456  006F FF7B FFE6     	movff	postinc2,postinc1
 33562  01345C  006F FF7B FFE6     	movff	postinc2,postinc1
 33563  013462  ECF4  F0C7         	call	___flge	;wreg free
 33564  013466  B001               	btfsc	btemp& (0+255),0,c
 33565  013468  D010               	goto	l12822
 33566                           
 33567                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 33568  01346A  0ECD               	movlw	205
 33569  01346C  006F FFA0  F78F    	movff	wreg,_C+144	;volatile
 33570  013472  0ECC               	movlw	204
 33571  013474  006F FFA0  F790    	movff	wreg,_C+145	;volatile
 33572  01347A  0ECC               	movlw	204
 33573  01347C  006F FFA0  F791    	movff	wreg,_C+146	;volatile
 33574  013482  0E3D               	movlw	61
 33575  013484  006F FFA0  F792    	movff	wreg,_C+147	;volatile
 33576  01348A                     l12822:
 33577                           
 33578                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 33579  01348A  EE21  F343         	lfsr	2,_C+68	;volatile
 33580  01348E  006F FF7B FFE6     	movff	postinc2,postinc1
 33581  013494  006F FF7B FFE6     	movff	postinc2,postinc1
 33582  01349A  006F FF7B FFE6     	movff	postinc2,postinc1
 33583  0134A0  006F FF7B FFE6     	movff	postinc2,postinc1
 33584  0134A6  0E0A               	movlw	10
 33585  0134A8  6EE6               	movwf	postinc1,c
 33586  0134AA  0ED7               	movlw	215
 33587  0134AC  6EE6               	movwf	postinc1,c
 33588  0134AE  0E23               	movlw	35
 33589  0134B0  6EE6               	movwf	postinc1,c
 33590  0134B2  0E3C               	movlw	60
 33591  0134B4  6EE6               	movwf	postinc1,c
 33592  0134B6  ECF4  F0C7         	call	___flge	;wreg free
 33593  0134BA  B001               	btfsc	btemp& (0+255),0,c
 33594  0134BC  D01C               	goto	l12826
 33595                           
 33596                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 33597  0134BE  0061  FEF4  F009   	movff	_C+190,btemp+8	;volatile
 33598  0134C4  0061  FEF8  F00A   	movff	_C+191,btemp+9	;volatile
 33599  0134CA  0061  FEFC  F00B   	movff	_C+192,btemp+10	;volatile
 33600  0134D0  0061  FF00  F00C   	movff	_C+193,btemp+11	;volatile
 33601                           
 33602                           ;stkvar	_adj @ sp[(-6)+0]
 33603  0134D6  0EFA               	movlw	-6
 33604  0134D8  0060  F027  FFE3   	movff	btemp+8,plusw1
 33605  0134DE  0EFB               	movlw	-5
 33606  0134E0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 33607  0134E6  0EFC               	movlw	-4
 33608  0134E8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33609  0134EE  0EFD               	movlw	-3
 33610  0134F0  0060  F033  FFE3   	movff	btemp+11,plusw1
 33611  0134F6                     l12826:
 33612                           
 33613                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 33614  0134F6  0E0A               	movlw	10
 33615  0134F8  6EE6               	movwf	postinc1,c
 33616  0134FA  0ED7               	movlw	215
 33617  0134FC  6EE6               	movwf	postinc1,c
 33618  0134FE  0E23               	movlw	35
 33619  013500  6EE6               	movwf	postinc1,c
 33620  013502  0E3C               	movlw	60
 33621  013504  6EE6               	movwf	postinc1,c
 33622  013506  EE21  F343         	lfsr	2,_C+68	;volatile
 33623  01350A  006F FF7B FFE6     	movff	postinc2,postinc1
 33624  013510  006F FF7B FFE6     	movff	postinc2,postinc1
 33625  013516  006F FF7B FFE6     	movff	postinc2,postinc1
 33626  01351C  006F FF7B FFE6     	movff	postinc2,postinc1
 33627  013522  ECF4  F0C7         	call	___flge	;wreg free
 33628  013526  B001               	btfsc	btemp& (0+255),0,c
 33629  013528  D01C               	goto	l12830
 33630                           
 33631                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 33632  01352A  0061  FEE4  F009   	movff	_C+186,btemp+8	;volatile
 33633  013530  0061  FEE8  F00A   	movff	_C+187,btemp+9	;volatile
 33634  013536  0061  FEEC  F00B   	movff	_C+188,btemp+10	;volatile
 33635  01353C  0061  FEF0  F00C   	movff	_C+189,btemp+11	;volatile
 33636                           
 33637                           ;stkvar	_adj @ sp[(-6)+0]
 33638  013542  0EFA               	movlw	-6
 33639  013544  0060  F027  FFE3   	movff	btemp+8,plusw1
 33640  01354A  0EFB               	movlw	-5
 33641  01354C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 33642  013552  0EFC               	movlw	-4
 33643  013554  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33644  01355A  0EFD               	movlw	-3
 33645  01355C  0060  F033  FFE3   	movff	btemp+11,plusw1
 33646  013562                     l12830:
 33647                           
 33648                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 33649  013562  0E00               	movlw	0
 33650  013564  6EE6               	movwf	postinc1,c
 33651  013566  0E00               	movlw	0
 33652  013568  6EE6               	movwf	postinc1,c
 33653  01356A  0E61               	movlw	97
 33654  01356C  6EE6               	movwf	postinc1,c
 33655  01356E  0E45               	movlw	69
 33656  013570  6EE6               	movwf	postinc1,c
 33657                           
 33658                           ;stkvar	_adj @ sp[(-10)+0]
 33659  013572  0EF6               	movlw	-10
 33660  013574  006F FF8F FFE6     	movff	plusw1,postinc1
 33661  01357A  006F FF8F FFE6     	movff	plusw1,postinc1
 33662  013580  006F FF8F FFE6     	movff	plusw1,postinc1
 33663  013586  006F FF8F FFE6     	movff	plusw1,postinc1
 33664  01358C  EE21  F343         	lfsr	2,_C+68	;volatile
 33665  013590  006F FF7B FFE6     	movff	postinc2,postinc1
 33666  013596  006F FF7B FFE6     	movff	postinc2,postinc1
 33667  01359C  006F FF7B FFE6     	movff	postinc2,postinc1
 33668  0135A2  006F FF7B FFE6     	movff	postinc2,postinc1
 33669  0135A8  ECC1  F09E         	call	___flmul	;wreg free
 33670  0135AC  0060  F007  FFE6   	movff	btemp,postinc1
 33671  0135B2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33672  0135B8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33673  0135BE  0060  F013  FFE6   	movff	btemp+3,postinc1
 33674  0135C4  ECB4  F0A6         	call	___fldiv	;wreg free
 33675  0135C8  0060  F007  FFE6   	movff	btemp,postinc1
 33676  0135CE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33677  0135D4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33678  0135DA  0060  F013  FFE6   	movff	btemp+3,postinc1
 33679  0135E0  0E8F               	movlw	low (_C+144)
 33680  0135E2  6EE6               	movwf	postinc1,c
 33681  0135E4  0E07               	movlw	high (_C+144)
 33682  0135E6  6EE6               	movwf	postinc1,c
 33683  0135E8  EC20  F0D7         	call	___asfladd	;wreg free
 33684                           
 33685                           ;bsoc.c: 59:  C.dynamic_ah_adj=C.dynamic_ah;
 33686  0135EC  EE21  F38F         	lfsr	2,_C+144	;volatile
 33687  0135F0  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 33688  0135F6  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 33689  0135FC  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 33690  013602  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 33691                           
 33692                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 33693  013608  EE21  F39B         	lfsr	2,_C+156	;volatile
 33694  01360C  006F FF7B FFE6     	movff	postinc2,postinc1
 33695  013612  006F FF7B FFE6     	movff	postinc2,postinc1
 33696  013618  006F FF7B FFE6     	movff	postinc2,postinc1
 33697  01361E  006F FF7B FFE6     	movff	postinc2,postinc1
 33698  013624  EE21  F38B         	lfsr	2,_C+140	;volatile
 33699  013628  006F FF7B FFE6     	movff	postinc2,postinc1
 33700  01362E  006F FF7B FFE6     	movff	postinc2,postinc1
 33701  013634  006F FF7B FFE6     	movff	postinc2,postinc1
 33702  01363A  006F FF7B FFE6     	movff	postinc2,postinc1
 33703  013640  ECF4  F0C7         	call	___flge	;wreg free
 33704  013644  B001               	btfsc	btemp& (0+255),0,c
 33705  013646  D00E               	goto	l12838
 33706                           
 33707                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 33708  013648  EE21  F38B         	lfsr	2,_C+140	;volatile
 33709  01364C  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 33710  013652  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 33711  013658  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 33712  01365E  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 33713  013664                     l12838:
 33714                           
 33715                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 33716  013664  0ECD               	movlw	205
 33717  013666  6EE6               	movwf	postinc1,c
 33718  013668  0ECC               	movlw	204
 33719  01366A  6EE6               	movwf	postinc1,c
 33720  01366C  0ECC               	movlw	204
 33721  01366E  6EE6               	movwf	postinc1,c
 33722  013670  0E3D               	movlw	61
 33723  013672  6EE6               	movwf	postinc1,c
 33724  013674  EE21  F39B         	lfsr	2,_C+156	;volatile
 33725  013678  006F FF7B FFE6     	movff	postinc2,postinc1
 33726  01367E  006F FF7B FFE6     	movff	postinc2,postinc1
 33727  013684  006F FF7B FFE6     	movff	postinc2,postinc1
 33728  01368A  006F FF7B FFE6     	movff	postinc2,postinc1
 33729  013690  ECF4  F0C7         	call	___flge	;wreg free
 33730  013694  B001               	btfsc	btemp& (0+255),0,c
 33731  013696  D010               	goto	l12842
 33732                           
 33733                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 33734  013698  0ECD               	movlw	205
 33735  01369A  006F FFA0  F79B    	movff	wreg,_C+156	;volatile
 33736  0136A0  0ECC               	movlw	204
 33737  0136A2  006F FFA0  F79C    	movff	wreg,_C+157	;volatile
 33738  0136A8  0ECC               	movlw	204
 33739  0136AA  006F FFA0  F79D    	movff	wreg,_C+158	;volatile
 33740  0136B0  0E3D               	movlw	61
 33741  0136B2  006F FFA0  F79E    	movff	wreg,_C+159	;volatile
 33742  0136B8                     l12842:
 33743                           
 33744                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 33745  0136B8  0E00               	movlw	0
 33746  0136BA  6EE6               	movwf	postinc1,c
 33747  0136BC  0E00               	movlw	0
 33748  0136BE  6EE6               	movwf	postinc1,c
 33749  0136C0  0E61               	movlw	97
 33750  0136C2  6EE6               	movwf	postinc1,c
 33751  0136C4  0E45               	movlw	69
 33752  0136C6  6EE6               	movwf	postinc1,c
 33753  0136C8  EE21  F347         	lfsr	2,_C+72	;volatile
 33754  0136CC  006F FF7B FFE6     	movff	postinc2,postinc1
 33755  0136D2  006F FF7B FFE6     	movff	postinc2,postinc1
 33756  0136D8  006F FF7B FFE6     	movff	postinc2,postinc1
 33757  0136DE  006F FF7B FFE6     	movff	postinc2,postinc1
 33758  0136E4  ECB4  F0A6         	call	___fldiv	;wreg free
 33759  0136E8  0060  F007  FFE6   	movff	btemp,postinc1
 33760  0136EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33761  0136F4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33762  0136FA  0060  F013  FFE6   	movff	btemp+3,postinc1
 33763  013700  0E93               	movlw	low (_C+148)
 33764  013702  6EE6               	movwf	postinc1,c
 33765  013704  0E07               	movlw	high (_C+148)
 33766  013706  6EE6               	movwf	postinc1,c
 33767  013708  EC20  F0D7         	call	___asfladd	;wreg free
 33768                           
 33769                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 33770  01370C  0E00               	movlw	0
 33771  01370E  6EE6               	movwf	postinc1,c
 33772  013710  0E00               	movlw	0
 33773  013712  6EE6               	movwf	postinc1,c
 33774  013714  0E61               	movlw	97
 33775  013716  6EE6               	movwf	postinc1,c
 33776  013718  0E45               	movlw	69
 33777  01371A  6EE6               	movwf	postinc1,c
 33778  01371C  EE21  F37B         	lfsr	2,_C+124	;volatile
 33779  013720  006F FF7B FFE6     	movff	postinc2,postinc1
 33780  013726  006F FF7B FFE6     	movff	postinc2,postinc1
 33781  01372C  006F FF7B FFE6     	movff	postinc2,postinc1
 33782  013732  006F FF7B FFE6     	movff	postinc2,postinc1
 33783  013738  ECB4  F0A6         	call	___fldiv	;wreg free
 33784  01373C  0060  F007  FFE6   	movff	btemp,postinc1
 33785  013742  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33786  013748  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33787  01374E  0060  F013  FFE6   	movff	btemp+3,postinc1
 33788  013754  0EA7               	movlw	low (_C+168)
 33789  013756  6EE6               	movwf	postinc1,c
 33790  013758  0E07               	movlw	high (_C+168)
 33791  01375A  6EE6               	movwf	postinc1,c
 33792  01375C  EC20  F0D7         	call	___asfladd	;wreg free
 33793                           
 33794                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 33795  013760  0E00               	movlw	0
 33796  013762  6EE6               	movwf	postinc1,c
 33797  013764  0E00               	movlw	0
 33798  013766  6EE6               	movwf	postinc1,c
 33799  013768  0E61               	movlw	97
 33800  01376A  6EE6               	movwf	postinc1,c
 33801  01376C  0E45               	movlw	69
 33802  01376E  6EE6               	movwf	postinc1,c
 33803  013770  EE21  F377         	lfsr	2,_C+120	;volatile
 33804  013774  006F FF7B FFE6     	movff	postinc2,postinc1
 33805  01377A  006F FF7B FFE6     	movff	postinc2,postinc1
 33806  013780  006F FF7B FFE6     	movff	postinc2,postinc1
 33807  013786  006F FF7B FFE6     	movff	postinc2,postinc1
 33808  01378C  ECB4  F0A6         	call	___fldiv	;wreg free
 33809  013790  0060  F007  FFE6   	movff	btemp,postinc1
 33810  013796  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33811  01379C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33812  0137A2  0060  F013  FFE6   	movff	btemp+3,postinc1
 33813  0137A8  0EAB               	movlw	low (_C+172)
 33814  0137AA  6EE6               	movwf	postinc1,c
 33815  0137AC  0E07               	movlw	high (_C+172)
 33816  0137AE  6EE6               	movwf	postinc1,c
 33817  0137B0  EC20  F0D7         	call	___asfladd	;wreg free
 33818                           
 33819                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 33820  0137B4  0E00               	movlw	0
 33821  0137B6  6EE6               	movwf	postinc1,c
 33822  0137B8  0E00               	movlw	0
 33823  0137BA  6EE6               	movwf	postinc1,c
 33824  0137BC  0E61               	movlw	97
 33825  0137BE  6EE6               	movwf	postinc1,c
 33826  0137C0  0E45               	movlw	69
 33827  0137C2  6EE6               	movwf	postinc1,c
 33828  0137C4  EE21  F373         	lfsr	2,_C+116	;volatile
 33829  0137C8  006F FF7B FFE6     	movff	postinc2,postinc1
 33830  0137CE  006F FF7B FFE6     	movff	postinc2,postinc1
 33831  0137D4  006F FF7B FFE6     	movff	postinc2,postinc1
 33832  0137DA  006F FF7B FFE6     	movff	postinc2,postinc1
 33833  0137E0  ECB4  F0A6         	call	___fldiv	;wreg free
 33834  0137E4  0060  F007  FFE6   	movff	btemp,postinc1
 33835  0137EA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33836  0137F0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33837  0137F6  0060  F013  FFE6   	movff	btemp+3,postinc1
 33838  0137FC  0EAF               	movlw	low (_C+176)
 33839  0137FE  6EE6               	movwf	postinc1,c
 33840  013800  0E07               	movlw	high (_C+176)
 33841  013802  6EE6               	movwf	postinc1,c
 33842  013804  EC20  F0D7         	call	___asfladd	;wreg free
 33843                           
 33844                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 33845  013808  EE21  F37F         	lfsr	2,_C+128	;volatile
 33846  01380C  006F FF7B FFE6     	movff	postinc2,postinc1
 33847  013812  006F FF7B FFE6     	movff	postinc2,postinc1
 33848  013818  006F FF7B FFE6     	movff	postinc2,postinc1
 33849  01381E  006F FF7B FFE6     	movff	postinc2,postinc1
 33850  013824  0E00               	movlw	0
 33851  013826  6EE6               	movwf	postinc1,c
 33852  013828  0E00               	movlw	0
 33853  01382A  6EE6               	movwf	postinc1,c
 33854  01382C  0E00               	movlw	0
 33855  01382E  6EE6               	movwf	postinc1,c
 33856  013830  0E00               	movlw	0
 33857  013832  6EE6               	movwf	postinc1,c
 33858  013834  ECF4  F0C7         	call	___flge	;wreg free
 33859  013838  B001               	btfsc	btemp& (0+255),0,c
 33860  01383A  D02A               	goto	l12848
 33861                           
 33862                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 33863  01383C  0E00               	movlw	0
 33864  01383E  6EE6               	movwf	postinc1,c
 33865  013840  0E00               	movlw	0
 33866  013842  6EE6               	movwf	postinc1,c
 33867  013844  0E61               	movlw	97
 33868  013846  6EE6               	movwf	postinc1,c
 33869  013848  0E45               	movlw	69
 33870  01384A  6EE6               	movwf	postinc1,c
 33871  01384C  EE21  F37F         	lfsr	2,_C+128	;volatile
 33872  013850  006F FF7B FFE6     	movff	postinc2,postinc1
 33873  013856  006F FF7B FFE6     	movff	postinc2,postinc1
 33874  01385C  006F FF7B FFE6     	movff	postinc2,postinc1
 33875  013862  006F FF7B FFE6     	movff	postinc2,postinc1
 33876  013868  ECB4  F0A6         	call	___fldiv	;wreg free
 33877  01386C  0060  F007  FFE6   	movff	btemp,postinc1
 33878  013872  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33879  013878  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33880  01387E  0060  F013  FFE6   	movff	btemp+3,postinc1
 33881  013884  0E9F               	movlw	low (_C+160)
 33882  013886  6EE6               	movwf	postinc1,c
 33883  013888  0E07               	movlw	high (_C+160)
 33884  01388A  6EE6               	movwf	postinc1,c
 33885  01388C  EC20  F0D7         	call	___asfladd	;wreg free
 33886  013890                     l12848:
 33887                           
 33888                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 33889  013890  EE21  F37F         	lfsr	2,_C+128	;volatile
 33890  013894  0E03               	movlw	3
 33891  013896  AEDB               	btfss	plusw2,7,c
 33892  013898  D038               	goto	l12852
 33893                           
 33894                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 33895  01389A  0E00               	movlw	0
 33896  01389C  6EE6               	movwf	postinc1,c
 33897  01389E  0E00               	movlw	0
 33898  0138A0  6EE6               	movwf	postinc1,c
 33899  0138A2  0E61               	movlw	97
 33900  0138A4  6EE6               	movwf	postinc1,c
 33901  0138A6  0E45               	movlw	69
 33902  0138A8  6EE6               	movwf	postinc1,c
 33903  0138AA  EE21  F37F         	lfsr	2,_C+128	;volatile
 33904  0138AE  006F FF7B FFE6     	movff	postinc2,postinc1
 33905  0138B4  006F FF7B FFE6     	movff	postinc2,postinc1
 33906  0138BA  006F FF7B FFE6     	movff	postinc2,postinc1
 33907  0138C0  006F FF7B FFE6     	movff	postinc2,postinc1
 33908  0138C6  ECB4  F0A6         	call	___fldiv	;wreg free
 33909  0138CA  0060  F007  FFE6   	movff	btemp,postinc1
 33910  0138D0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33911  0138D6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33912  0138DC  0060  F013  FFE6   	movff	btemp+3,postinc1
 33913  0138E2  ECF7  F0D2         	call	_fabsf	;wreg free
 33914  0138E6  0060  F007  FFE6   	movff	btemp,postinc1
 33915  0138EC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33916  0138F2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33917  0138F8  0060  F013  FFE6   	movff	btemp+3,postinc1
 33918  0138FE  0EA3               	movlw	low (_C+164)
 33919  013900  6EE6               	movwf	postinc1,c
 33920  013902  0E07               	movlw	high (_C+164)
 33921  013904  6EE6               	movwf	postinc1,c
 33922  013906  EC20  F0D7         	call	___asfladd	;wreg free
 33923  01390A                     l12852:
 33924                           
 33925                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 33926  01390A  0E00               	movlw	0
 33927  01390C  6EE6               	movwf	postinc1,c
 33928  01390E  0E00               	movlw	0
 33929  013910  6EE6               	movwf	postinc1,c
 33930  013912  0EC8               	movlw	200
 33931  013914  6EE6               	movwf	postinc1,c
 33932  013916  0E42               	movlw	66
 33933  013918  6EE6               	movwf	postinc1,c
 33934  01391A  EE21  F38B         	lfsr	2,_C+140	;volatile
 33935  01391E  006F FF7B FFE6     	movff	postinc2,postinc1
 33936  013924  006F FF7B FFE6     	movff	postinc2,postinc1
 33937  01392A  006F FF7B FFE6     	movff	postinc2,postinc1
 33938  013930  006F FF7B FFE6     	movff	postinc2,postinc1
 33939  013936  EE21  F39B         	lfsr	2,_C+156	;volatile
 33940  01393A  006F FF7B FFE6     	movff	postinc2,postinc1
 33941  013940  006F FF7B FFE6     	movff	postinc2,postinc1
 33942  013946  006F FF7B FFE6     	movff	postinc2,postinc1
 33943  01394C  006F FF7B FFE6     	movff	postinc2,postinc1
 33944  013952  ECB4  F0A6         	call	___fldiv	;wreg free
 33945  013956  0060  F007  FFE6   	movff	btemp,postinc1
 33946  01395C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33947  013962  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33948  013968  0060  F013  FFE6   	movff	btemp+3,postinc1
 33949  01396E  ECC1  F09E         	call	___flmul	;wreg free
 33950  013972  0060  F007  FFE6   	movff	btemp,postinc1
 33951  013978  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33952  01397E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33953  013984  0060  F013  FFE6   	movff	btemp+3,postinc1
 33954  01398A  EC3B  F0C7         	call	___fltol	;wreg free
 33955  01398E  0060  F004  F00B   	movff	btemp,btemp+10
 33956  013994  0060  F008  F00C   	movff	btemp+1,btemp+11
 33957  01399A  0E01               	movlw	1
 33958  01399C  260B               	addwf	(btemp+10)^0,f,c
 33959  01399E  0E00               	movlw	0
 33960  0139A0  220C               	addwfc	(btemp+11)^0,f,c
 33961  0139A2  0060  F02C  F7B5   	movff	btemp+10,_C+182	;volatile
 33962  0139A8  0060  F030  F7B6   	movff	btemp+11,_C+183	;volatile
 33963                           
 33964                           ;bsoc.c: 76:  if (C.soc > 100)
 33965  0139AE  EE21  F3B5         	lfsr	2,_C+182	;volatile
 33966  0139B2  0E01               	movlw	1
 33967  0139B4  50DB               	movf	plusw2,w,c
 33968  0139B6  E104               	bnz	u1236_20
 33969  0139B8  0E65               	movlw	101
 33970  0139BA  5CDE               	subwf	postinc2,w,c
 33971  0139BC  A0D8               	btfss	status,0,c
 33972  0139BE  D008               	goto	l12858
 33973  0139C0                     u1236_20:
 33974                           
 33975                           ;bsoc.c: 77:   C.soc = 100;
 33976  0139C0  0E64               	movlw	100
 33977  0139C2  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
 33978  0139C8  0E00               	movlw	0
 33979  0139CA  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
 33980  0139D0                     l12858:
 33981                           
 33982                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 33983  0139D0  EE21  F343         	lfsr	2,_C+68	;volatile
 33984  0139D4  0E03               	movlw	3
 33985  0139D6  AEDB               	btfss	plusw2,7,c
 33986  0139D8  D047               	goto	l2033
 33987                           
 33988                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 33989  0139DA  EE21  F343         	lfsr	2,_C+68	;volatile
 33990  0139DE  006F FF7B FFE6     	movff	postinc2,postinc1
 33991  0139E4  006F FF7B FFE6     	movff	postinc2,postinc1
 33992  0139EA  006F FF7B FFE6     	movff	postinc2,postinc1
 33993  0139F0  006F FF7B FFE6     	movff	postinc2,postinc1
 33994  0139F6  EE21  F39B         	lfsr	2,_C+156	;volatile
 33995  0139FA  006F FF7B FFE6     	movff	postinc2,postinc1
 33996  013A00  006F FF7B FFE6     	movff	postinc2,postinc1
 33997  013A06  006F FF7B FFE6     	movff	postinc2,postinc1
 33998  013A0C  006F FF7B FFE6     	movff	postinc2,postinc1
 33999  013A12  ECB4  F0A6         	call	___fldiv	;wreg free
 34000  013A16  0060  F007  FFE6   	movff	btemp,postinc1
 34001  013A1C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34002  013A22  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34003  013A28  0060  F013  FFE6   	movff	btemp+3,postinc1
 34004  013A2E  EC3C  F0DA         	call	___flneg	;wreg free
 34005  013A32  0060  F007  FFE6   	movff	btemp,postinc1
 34006  013A38  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34007  013A3E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34008  013A44  0060  F013  FFE6   	movff	btemp+3,postinc1
 34009  013A4A  EC3B  F0C7         	call	___fltol	;wreg free
 34010  013A4E  0060  F004  F00B   	movff	btemp,btemp+10
 34011  013A54  0060  F008  F00C   	movff	btemp+1,btemp+11
 34012  013A5A  0060  F02C  F7B3   	movff	btemp+10,_C+180	;volatile
 34013  013A60  0060  F030  F7B4   	movff	btemp+11,_C+181	;volatile
 34014                           
 34015                           ;bsoc.c: 81:  } else {
 34016  013A66  D008               	goto	l12862
 34017  013A68                     l2033:
 34018                           
 34019                           ;bsoc.c: 82:   C.runtime = 120;
 34020  013A68  0E78               	movlw	120
 34021  013A6A  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 34022  013A70  0E00               	movlw	0
 34023  013A72  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 34024  013A78                     l12862:
 34025                           
 34026                           ;bsoc.c: 84:  if (C.runtime > 120)
 34027  013A78  EE21  F3B3         	lfsr	2,_C+180	;volatile
 34028  013A7C  0E01               	movlw	1
 34029  013A7E  50DB               	movf	plusw2,w,c
 34030  013A80  E104               	bnz	u1238_20
 34031  013A82  0E79               	movlw	121
 34032  013A84  5CDE               	subwf	postinc2,w,c
 34033  013A86  A0D8               	btfss	status,0,c
 34034  013A88  D008               	goto	l12866
 34035  013A8A                     u1238_20:
 34036                           
 34037                           ;bsoc.c: 85:   C.runtime = 120;
 34038  013A8A  0E78               	movlw	120
 34039  013A8C  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 34040  013A92  0E00               	movlw	0
 34041  013A94  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 34042  013A9A                     l12866:
 34043                           
 34044                           ;bsoc.c: 87:  V.lowint_count++;
 34045  013A9A  0E01               	movlw	1
 34046  013A9C  0101               	movlb	1	; () banked
 34047  013A9E  27E3               	addwf	(_V+179)& (0+255),f,b	;volatile
 34048  013AA0  0E00               	movlw	0
 34049  013AA2  23E4               	addwfc	(_V+180)& (0+255),f,b	;volatile
 34050  013AA4  23E5               	addwfc	(_V+181)& (0+255),f,b	;volatile
 34051  013AA6  23E6               	addwfc	(_V+182)& (0+255),f,b	;volatile
 34052                           
 34053                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 34054  013AA8  2A41               	incf	calc_bsoc@log_update_wait^0,f,c
 34055  013AAA  0441               	decf	calc_bsoc@log_update_wait^0,w,c
 34056  013AAC  A4D8               	btfss	status,2,c
 34057  013AAE  D15B               	goto	l12878
 34058                           
 34059                           ; BSR set to: 1
 34060  013AB0  51DE               	movf	(_V+174)& (0+255),w,b	;volatile
 34061  013AB2  B4D8               	btfsc	status,2,c
 34062  013AB4  D158               	goto	l12878
 34063                           
 34064                           ; BSR set to: 1
 34065                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 34066  013AB6  ECA4  F0E0         	call	_port_data_dma_ptr	;wreg free
 34067                           
 34068                           ;stkvar	_log_ptr @ sp[(-6)+4]
 34069  013ABA  0EFF               	movlw	-1
 34070  013ABC  0060  F00B  FFE3   	movff	btemp+1,plusw1
 34071  013AC2  0EFE               	movlw	-2
 34072  013AC4  0060  F007  FFE3   	movff	btemp,plusw1
 34073                           
 34074                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 34075  013ACA  EE21  F3B9         	lfsr	2,_C+186	;volatile
 34076  013ACE  006F FF7B FFE6     	movff	postinc2,postinc1
 34077  013AD4  006F FF7B FFE6     	movff	postinc2,postinc1
 34078  013ADA  006F FF7B FFE6     	movff	postinc2,postinc1
 34079  013AE0  006F FF7B FFE6     	movff	postinc2,postinc1
 34080  013AE6  EE21  F3BD         	lfsr	2,_C+190	;volatile
 34081  013AEA  006F FF7B FFE6     	movff	postinc2,postinc1
 34082  013AF0  006F FF7B FFE6     	movff	postinc2,postinc1
 34083  013AF6  006F FF7B FFE6     	movff	postinc2,postinc1
 34084  013AFC  006F FF7B FFE6     	movff	postinc2,postinc1
 34085  013B02  EE21  F39B         	lfsr	2,_C+156	;volatile
 34086  013B06  006F FF7B FFE6     	movff	postinc2,postinc1
 34087  013B0C  006F FF7B FFE6     	movff	postinc2,postinc1
 34088  013B12  006F FF7B FFE6     	movff	postinc2,postinc1
 34089  013B18  006F FF7B FFE6     	movff	postinc2,postinc1
 34090  013B1E  EE22  F026         	lfsr	2,_C+295	;volatile
 34091  013B22  006F FF7B FFE6     	movff	postinc2,postinc1
 34092  013B28  006F FF7B FFE6     	movff	postinc2,postinc1
 34093  013B2E  006F FF7B FFE6     	movff	postinc2,postinc1
 34094  013B34  006F FF7B FFE6     	movff	postinc2,postinc1
 34095  013B3A  EE22  F022         	lfsr	2,_C+291	;volatile
 34096  013B3E  006F FF7B FFE6     	movff	postinc2,postinc1
 34097  013B44  006F FF7B FFE6     	movff	postinc2,postinc1
 34098  013B4A  006F FF7B FFE6     	movff	postinc2,postinc1
 34099  013B50  006F FF7B FFE6     	movff	postinc2,postinc1
 34100  013B56  EE22  F021         	lfsr	2,_C+290	;volatile
 34101  013B5A  50DF               	movf	indf2,w,c
 34102  013B5C  6EE6               	movwf	postinc1,c
 34103  013B5E  0E00               	movlw	0
 34104  013B60  6EE6               	movwf	postinc1,c
 34105  013B62  EC88  F0E0         	call	_get_ac_charger_relay	;wreg free
 34106  013B66  5001               	movf	btemp^0,w,c
 34107  013B68  6EE6               	movwf	postinc1,c
 34108  013B6A  0E00               	movlw	0
 34109  013B6C  6EE6               	movwf	postinc1,c
 34110  013B6E  EE21  F367         	lfsr	2,_C+104	;volatile
 34111  013B72  006F FF7B FFE6     	movff	postinc2,postinc1
 34112  013B78  006F FF7B FFE6     	movff	postinc2,postinc1
 34113  013B7E  006F FF7B FFE6     	movff	postinc2,postinc1
 34114  013B84  006F FF7B FFE6     	movff	postinc2,postinc1
 34115  013B8A  EE21  F387         	lfsr	2,_C+136	;volatile
 34116  013B8E  006F FF7B FFE6     	movff	postinc2,postinc1
 34117  013B94  006F FF7B FFE6     	movff	postinc2,postinc1
 34118  013B9A  006F FF7B FFE6     	movff	postinc2,postinc1
 34119  013BA0  006F FF7B FFE6     	movff	postinc2,postinc1
 34120  013BA6  EE21  F3B3         	lfsr	2,_C+180	;volatile
 34121  013BAA  006F FF78  F00B    	movff	postinc2,btemp+10
 34122  013BB0  006F FF74  F00C    	movff	postdec2,btemp+11
 34123  013BB6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 34124  013BBC  0060  F033  FFE6   	movff	btemp+11,postinc1
 34125  013BC2  EE21  F3B5         	lfsr	2,_C+182	;volatile
 34126  013BC6  006F FF78  F00B    	movff	postinc2,btemp+10
 34127  013BCC  006F FF74  F00C    	movff	postdec2,btemp+11
 34128  013BD2  0060  F02F  FFE6   	movff	btemp+10,postinc1
 34129  013BD8  0060  F033  FFE6   	movff	btemp+11,postinc1
 34130  013BDE  EE21  F393         	lfsr	2,_C+148	;volatile
 34131  013BE2  006F FF7B FFE6     	movff	postinc2,postinc1
 34132  013BE8  006F FF7B FFE6     	movff	postinc2,postinc1
 34133  013BEE  006F FF7B FFE6     	movff	postinc2,postinc1
 34134  013BF4  006F FF7B FFE6     	movff	postinc2,postinc1
 34135  013BFA  EE21  F38F         	lfsr	2,_C+144	;volatile
 34136  013BFE  006F FF7B FFE6     	movff	postinc2,postinc1
 34137  013C04  006F FF7B FFE6     	movff	postinc2,postinc1
 34138  013C0A  006F FF7B FFE6     	movff	postinc2,postinc1
 34139  013C10  006F FF7B FFE6     	movff	postinc2,postinc1
 34140  013C16  EE21  F377         	lfsr	2,_C+120	;volatile
 34141  013C1A  006F FF7B FFE6     	movff	postinc2,postinc1
 34142  013C20  006F FF7B FFE6     	movff	postinc2,postinc1
 34143  013C26  006F FF7B FFE6     	movff	postinc2,postinc1
 34144  013C2C  006F FF7B FFE6     	movff	postinc2,postinc1
 34145  013C32  EE21  F373         	lfsr	2,_C+116	;volatile
 34146  013C36  006F FF7B FFE6     	movff	postinc2,postinc1
 34147  013C3C  006F FF7B FFE6     	movff	postinc2,postinc1
 34148  013C42  006F FF7B FFE6     	movff	postinc2,postinc1
 34149  013C48  006F FF7B FFE6     	movff	postinc2,postinc1
 34150  013C4E  EE21  F37B         	lfsr	2,_C+124	;volatile
 34151  013C52  006F FF7B FFE6     	movff	postinc2,postinc1
 34152  013C58  006F FF7B FFE6     	movff	postinc2,postinc1
 34153  013C5E  006F FF7B FFE6     	movff	postinc2,postinc1
 34154  013C64  006F FF7B FFE6     	movff	postinc2,postinc1
 34155  013C6A  EE21  F37F         	lfsr	2,_C+128	;volatile
 34156  013C6E  006F FF7B FFE6     	movff	postinc2,postinc1
 34157  013C74  006F FF7B FFE6     	movff	postinc2,postinc1
 34158  013C7A  006F FF7B FFE6     	movff	postinc2,postinc1
 34159  013C80  006F FF7B FFE6     	movff	postinc2,postinc1
 34160  013C86  EE21  F363         	lfsr	2,_C+100	;volatile
 34161  013C8A  006F FF7B FFE6     	movff	postinc2,postinc1
 34162  013C90  006F FF7B FFE6     	movff	postinc2,postinc1
 34163  013C96  006F FF7B FFE6     	movff	postinc2,postinc1
 34164  013C9C  006F FF7B FFE6     	movff	postinc2,postinc1
 34165  013CA2  EE21  F34B         	lfsr	2,_C+76	;volatile
 34166  013CA6  006F FF7B FFE6     	movff	postinc2,postinc1
 34167  013CAC  006F FF7B FFE6     	movff	postinc2,postinc1
 34168  013CB2  006F FF7B FFE6     	movff	postinc2,postinc1
 34169  013CB8  006F FF7B FFE6     	movff	postinc2,postinc1
 34170  013CBE  EE21  F34F         	lfsr	2,_C+80	;volatile
 34171  013CC2  006F FF7B FFE6     	movff	postinc2,postinc1
 34172  013CC8  006F FF7B FFE6     	movff	postinc2,postinc1
 34173  013CCE  006F FF7B FFE6     	movff	postinc2,postinc1
 34174  013CD4  006F FF7B FFE6     	movff	postinc2,postinc1
 34175  013CDA  EE21  F353         	lfsr	2,_C+84	;volatile
 34176  013CDE  006F FF7B FFE6     	movff	postinc2,postinc1
 34177  013CE4  006F FF7B FFE6     	movff	postinc2,postinc1
 34178  013CEA  006F FF7B FFE6     	movff	postinc2,postinc1
 34179  013CF0  006F FF7B FFE6     	movff	postinc2,postinc1
 34180  013CF6  0060  F6C7  FFE6   	movff	_V+129,postinc1
 34181  013CFC  0060  F6CB  FFE6   	movff	_V+130,postinc1
 34182  013D02  0060  F6CF  FFE6   	movff	_V+131,postinc1
 34183  013D08  0060  F6D3  FFE6   	movff	_V+132,postinc1
 34184  013D0E  0E31               	movlw	49
 34185  013D10  6EE6               	movwf	postinc1,c
 34186  013D12  0E00               	movlw	0
 34187  013D14  6EE6               	movwf	postinc1,c
 34188  013D16  0ED7               	movlw	low STR_64
 34189  013D18  6EE6               	movwf	postinc1,c
 34190  013D1A  0EFB               	movlw	high STR_64
 34191  013D1C  6EE6               	movwf	postinc1,c
 34192                           
 34193                           ;stkvar	_log_ptr @ sp[(-90)+4]
 34194  013D1E  0EAA               	movlw	-86
 34195  013D20  006F FF8F FFE6     	movff	plusw1,postinc1
 34196  013D26  006F FF8F FFE6     	movff	plusw1,postinc1
 34197  013D2C  0E56               	movlw	86
 34198  013D2E  6EE6               	movwf	postinc1,c
 34199  013D30  EC8D  F0CE         	call	_sprintf	;wreg free
 34200                           
 34201                           ; BSR set to: 0
 34202                           ;bsoc.c: 97:   StartTimer(TMR_DISPLAY, 125);
 34203  013D34  0E7D               	movlw	125
 34204  013D36  6EE6               	movwf	postinc1,c
 34205  013D38  0E00               	movlw	0
 34206  013D3A  6EE6               	movwf	postinc1,c
 34207  013D3C  0E0A               	movlw	10
 34208  013D3E  6EE6               	movwf	postinc1,c
 34209  013D40  EC95  F0DB         	call	_StartTimer	;wreg free
 34210                           
 34211                           ;bsoc.c: 98:   send_port_data_dma(strlen((char*) log_ptr));
 34212                           ;stkvar	_log_ptr @ sp[(-6)+4]
 34213  013D44  0EFE               	movlw	-2
 34214  013D46  006F FF8F FFE6     	movff	plusw1,postinc1
 34215  013D4C  006F FF8F FFE6     	movff	plusw1,postinc1
 34216  013D52  ECA0  F0D4         	call	_strlen	;wreg free
 34217  013D56  0060  F007  FFE6   	movff	btemp,postinc1
 34218  013D5C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34219  013D62  ECA2  F0D9         	call	_send_port_data_dma	;wreg free
 34220  013D66                     l12878:
 34221                           
 34222                           ;bsoc.c: 100:  if (log_update_wait >= 10)
 34223  013D66  0E09               	movlw	9
 34224  013D68  6441               	cpfsgt	calc_bsoc@log_update_wait^0,c
 34225  013D6A  D001               	goto	l2037
 34226                           
 34227                           ;bsoc.c: 101:   log_update_wait = 0;
 34228  013D6C  6A41               	clrf	calc_bsoc@log_update_wait^0,c
 34229  013D6E                     l2037:
 34230                           
 34231                           ;bsoc.c: 103:  C.update = 0;
 34232  013D6E  0E00               	movlw	0
 34233  013D70  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 34234                           
 34235                           ;bsoc.c: 105:  do { LATEbits.LATE1 = 0; } while(0);
 34236  013D76  92BE               	bcf	190,1,c	;volatile
 34237                           
 34238                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 34239  013D78  0EFA               	movlw	250
 34240  013D7A  26E1               	addwf	fsr1l,f,c
 34241  013D7C  0EFF               	movlw	255
 34242  013D7E  22E2               	addwfc	fsr1h,f,c
 34243  013D80  0012               	return		;funcret
 34244  013D82                     __end_of_calc_bsoc:
 34245                           	opt callstack 0
 34246                           
 34247 ;; *************** function _send_port_data_dma *****************
 34248 ;; Defined at:
 34249 ;;		line 398 in file "eadog.c"
 34250 ;; Parameters:    Size  Location     Type
 34251 ;;  dsize           2  [STACK] unsigned short 
 34252 ;; Auto vars:     Size  Location     Type
 34253 ;;		None
 34254 ;; Return value:  Size  Location     Type
 34255 ;;                  1  [STACK] void 
 34256 ;; Registers used:
 34257 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 34258 ;; Tracked objects:
 34259 ;;		On entry : 0/0
 34260 ;;		On exit  : 3F/3B
 34261 ;;		Unchanged: 0/0
 34262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34267 ;;Total ram usage:        0 bytes
 34268 ;; Hardware stack levels used:    1
 34269 ;; Hardware stack levels required when called:    3
 34270 ;; This function calls:
 34271 ;;		Nothing
 34272 ;; This function is called by:
 34273 ;;		_calc_bsoc
 34274 ;; This function uses a reentrant model
 34275 ;;
 34276                           
 34277                           	psect	text154
 34278  01B344                     __ptext154:
 34279                           	opt callstack 0
 34280  01B344                     _send_port_data_dma:
 34281                           	opt callstack 10
 34282                           
 34283                           ;eadog.c: 398: void send_port_data_dma(uint16_t dsize);eadog.c: 399: {;eadog.c: 400:  if
      +                           (dsize > 512)
 34284                           ;stkvar	_dsize @ sp[(0)+-2]
 34285                           
 34286                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34287                           ;incstack = 0
 34288  01B344  0EFE               	movlw	-2
 34289  01B346  04E3               	decf	plusw1,w,c
 34290  01B348  0EFF               	movlw	-1
 34291  01B34A  006F FF8C  F001    	movff	plusw1,btemp
 34292  01B350  0E02               	movlw	2
 34293  01B352  5A01               	subwfb	btemp^0,f,c
 34294  01B354  A0D8               	btfss	status,0,c
 34295  01B356  D00C               	goto	l9958
 34296                           
 34297                           ;eadog.c: 401:   dsize = 512;
 34298  01B358  0E00               	movlw	0
 34299  01B35A  6E0B               	movwf	(btemp+10)^0,c
 34300  01B35C  0E02               	movlw	2
 34301  01B35E  6E0C               	movwf	(btemp+11)^0,c
 34302                           
 34303                           ;stkvar	_dsize @ sp[(0)+-2]
 34304  01B360  0EFE               	movlw	-2
 34305  01B362  0060  F02F  FFE3   	movff	btemp+10,plusw1
 34306  01B368  0EFF               	movlw	-1
 34307  01B36A  0060  F033  FFE3   	movff	btemp+11,plusw1
 34308  01B370                     l9958:
 34309                           
 34310                           ;eadog.c: 403:  DMA2CON0bits.EN = 0;
 34311  01B370  013B               	movlb	59	; () banked
 34312  01B372  9FDC               	bcf	220,7,b	;volatile
 34313                           
 34314                           ; BSR set to: 59
 34315                           ;eadog.c: 404:  DMA2SSZ = dsize;
 34316                           ;stkvar	_dsize @ sp[(0)+-2]
 34317  01B374  0EFE               	movlw	-2
 34318  01B376  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 34319  01B37C  0EFF               	movlw	-1
 34320  01B37E  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 34321                           
 34322                           ; BSR set to: 59
 34323                           ;eadog.c: 405:  DMA2DSZ = 1;
 34324  01B384  0E00               	movlw	0
 34325  01B386  6FCF               	movwf	207,b	;volatile
 34326  01B388  0E01               	movlw	1
 34327  01B38A  6FCE               	movwf	206,b	;volatile
 34328                           
 34329                           ; BSR set to: 59
 34330                           ;eadog.c: 406:  DMA2CON0bits.EN = 1;
 34331  01B38C  8FDC               	bsf	220,7,b	;volatile
 34332                           
 34333                           ; BSR set to: 59
 34334                           ;eadog.c: 407:  DMA2CON0bits.DMA2SIRQEN = 1;
 34335  01B38E  8DDC               	bsf	220,6,b	;volatile
 34336                           
 34337                           ; BSR set to: 59
 34338                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 34339  01B390  52E5               	movf	postdec1,f,c
 34340  01B392  52E5               	movf	postdec1,f,c
 34341  01B394  0012               	return		;funcret
 34342  01B396                     __end_of_send_port_data_dma:
 34343                           	opt callstack 0
 34344                           
 34345 ;; *************** function _port_data_dma_ptr *****************
 34346 ;; Defined at:
 34347 ;;		line 413 in file "eadog.c"
 34348 ;; Parameters:    Size  Location     Type
 34349 ;;		None
 34350 ;; Auto vars:     Size  Location     Type
 34351 ;;		None
 34352 ;; Return value:  Size  Location     Type
 34353 ;;                  2  [STACK] PTR unsigned char 
 34354 ;; Registers used:
 34355 ;;		wreg, status,2, status,0, btemp, btemp+1
 34356 ;; Tracked objects:
 34357 ;;		On entry : 3F/1
 34358 ;;		On exit  : 0/0
 34359 ;;		Unchanged: 0/0
 34360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34365 ;;Total ram usage:        0 bytes
 34366 ;; Hardware stack levels used:    1
 34367 ;; Hardware stack levels required when called:    3
 34368 ;; This function calls:
 34369 ;;		Nothing
 34370 ;; This function is called by:
 34371 ;;		_calc_bsoc
 34372 ;; This function uses a reentrant model
 34373 ;;
 34374                           
 34375                           	psect	text155
 34376  01C148                     __ptext155:
 34377                           	opt callstack 0
 34378  01C148                     _port_data_dma_ptr:
 34379                           	opt callstack 10
 34380                           
 34381                           ;eadog.c: 415:  return port_data;
 34382                           
 34383                           ; BSR set to: 59
 34384                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34385                           ;incstack = 0
 34386  01C148  0EFF               	movlw	low _port_data
 34387  01C14A  6E01               	movwf	btemp^0,c
 34388  01C14C  0E04               	movlw	high _port_data
 34389  01C14E  6E02               	movwf	(btemp+1)^0,c
 34390                           
 34391                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34392  01C150  0012               	return		;funcret
 34393  01C152                     __end_of_port_data_dma_ptr:
 34394                           	opt callstack 0
 34395                           
 34396 ;; *************** function ___asfladd *****************
 34397 ;; Defined at:
 34398 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 34399 ;; Parameters:    Size  Location     Type
 34400 ;;  f1p             2  [STACK] PTR 
 34401 ;;		 -> C(299), 
 34402 ;;  f2              4  [STACK] PTR 
 34403 ;; Auto vars:     Size  Location     Type
 34404 ;;		None
 34405 ;; Return value:  Size  Location     Type
 34406 ;;                  4  [STACK] PTR 
 34407 ;; Registers used:
 34408 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 34409 ;; Tracked objects:
 34410 ;;		On entry : 0/0
 34411 ;;		On exit  : 0/0
 34412 ;;		Unchanged: 0/0
 34413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34418 ;;Total ram usage:        0 bytes
 34419 ;; Hardware stack levels used:    1
 34420 ;; Hardware stack levels required when called:    4
 34421 ;; This function calls:
 34422 ;;		___fladd
 34423 ;; This function is called by:
 34424 ;;		_calc_bsoc
 34425 ;; This function uses a reentrant model
 34426 ;;
 34427                           
 34428                           	psect	text156
 34429  01AE40                     __ptext156:
 34430                           	opt callstack 0
 34431  01AE40                     ___asfladd:
 34432                           	opt callstack 9
 34433                           
 34434                           ;	Return value of ___asfladd is never used
 34435                           ;stkvar	_f2 @ sp[(0)+-6]
 34436                           
 34437                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34438                           ;incstack = 0
 34439  01AE40  0EFA               	movlw	-6
 34440  01AE42  006F FF8F FFE6     	movff	plusw1,postinc1
 34441  01AE48  006F FF8F FFE6     	movff	plusw1,postinc1
 34442  01AE4E  006F FF8F FFE6     	movff	plusw1,postinc1
 34443  01AE54  006F FF8F FFE6     	movff	plusw1,postinc1
 34444                           
 34445                           ;stkvar	_f1p @ sp[(-4)+-2]
 34446  01AE5A  0EFA               	movlw	-6
 34447  01AE5C  006F FF8F FFD9     	movff	plusw1,fsr2l
 34448  01AE62  0EFB               	movlw	-5
 34449  01AE64  006F FF8F FFDA     	movff	plusw1,fsr2h
 34450  01AE6A  006F FF7B FFE6     	movff	postinc2,postinc1
 34451  01AE70  006F FF7B FFE6     	movff	postinc2,postinc1
 34452  01AE76  006F FF7B FFE6     	movff	postinc2,postinc1
 34453  01AE7C  006F FF7B FFE6     	movff	postinc2,postinc1
 34454  01AE82  ECD6  F0A2         	call	___fladd	;wreg free
 34455                           
 34456                           ;stkvar	_f1p @ sp[(0)+-2]
 34457  01AE86  0EFE               	movlw	-2
 34458  01AE88  006F FF8F FFD9     	movff	plusw1,fsr2l
 34459  01AE8E  0EFF               	movlw	-1
 34460  01AE90  006F FF8F FFDA     	movff	plusw1,fsr2h
 34461  01AE96  0060  F007  FFDE   	movff	btemp,postinc2
 34462  01AE9C  0060  F00B  FFDE   	movff	btemp+1,postinc2
 34463  01AEA2  0060  F00F  FFDE   	movff	btemp+2,postinc2
 34464  01AEA8  0060  F013  FFDE   	movff	btemp+3,postinc2
 34465                           
 34466                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 34467  01AEAE  0EFA               	movlw	250
 34468  01AEB0  26E1               	addwf	fsr1l,f,c
 34469  01AEB2  0EFF               	movlw	255
 34470  01AEB4  22E2               	addwfc	fsr1h,f,c
 34471  01AEB6  0012               	return		;funcret
 34472  01AEB8                     __end_of___asfladd:
 34473                           	opt callstack 0
 34474                           
 34475 ;; *************** function _INT0_ISR *****************
 34476 ;; Defined at:
 34477 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 34478 ;; Parameters:    Size  Location     Type
 34479 ;;		None
 34480 ;; Auto vars:     Size  Location     Type
 34481 ;;		None
 34482 ;; Return value:  Size  Location     Type
 34483 ;;                  1    wreg      void 
 34484 ;; Registers used:
 34485 ;;		wreg, status,2, status,0, pclath, tosl
 34486 ;; Tracked objects:
 34487 ;;		On entry : 0/0
 34488 ;;		On exit  : 0/0
 34489 ;;		Unchanged: 0/0
 34490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34495 ;;Total ram usage:        0 bytes
 34496 ;; Hardware stack levels used:    1
 34497 ;; Hardware stack levels required when called:    2
 34498 ;; This function calls:
 34499 ;;		_INT0_CallBack
 34500 ;; This function is called by:
 34501 ;;		Interrupt level 2
 34502 ;; This function uses a non-reentrant model
 34503 ;;
 34504                           
 34505                           	psect	text157
 34506  01C120                     __ptext157:
 34507                           	opt callstack 0
 34508  01C120                     _INT0_ISR:
 34509                           	opt callstack 2
 34510                           
 34511                           ;incstack = 0
 34512  01C120  EE14  F15E         	lfsr	1,___inthi_sp
 34513                           
 34514                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 34515  01C124  0139               	movlb	57	; () banked
 34516  01C126  91A1               	bcf	161,0,b	;volatile
 34517                           
 34518                           ; BSR set to: 57
 34519                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 34520  01C128  EC2E  F0DF         	call	_INT0_CallBack	;wreg free
 34521  01C12C  0011               	retfie		f
 34522  01C12E                     __end_of_INT0_ISR:
 34523                           	opt callstack 0
 34524                           
 34525 ;; *************** function _INT0_CallBack *****************
 34526 ;; Defined at:
 34527 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 34528 ;; Parameters:    Size  Location     Type
 34529 ;;		None
 34530 ;; Auto vars:     Size  Location     Type
 34531 ;;		None
 34532 ;; Return value:  Size  Location     Type
 34533 ;;                  1  [STACK] void 
 34534 ;; Registers used:
 34535 ;;		wreg, status,2, status,0, pclath, tosl
 34536 ;; Tracked objects:
 34537 ;;		On entry : 3F/39
 34538 ;;		On exit  : 0/0
 34539 ;;		Unchanged: 0/0
 34540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34545 ;;Total ram usage:        0 bytes
 34546 ;; Hardware stack levels used:    1
 34547 ;; Hardware stack levels required when called:    1
 34548 ;; This function calls:
 34549 ;;		Absolute function
 34550 ;;		_INT0_DefaultInterruptHandler
 34551 ;; This function is called by:
 34552 ;;		_INT0_ISR
 34553 ;; This function uses a reentrant model
 34554 ;;
 34555                           
 34556                           	psect	text158
 34557  01BE5C                     __ptext158:
 34558                           	opt callstack 0
 34559  01BE5C                     _INT0_CallBack:
 34560                           	opt callstack 2
 34561                           
 34562                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 34563                           
 34564                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34565                           ;incstack = 0
 34566  01BE5C  0100               	movlb	0	; () banked
 34567  01BE5E  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 34568  01BE60  11BE               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 34569  01BE62  11BF               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 34570  01BE64  B4D8               	btfsc	status,2,c
 34571  01BE66  0012               	return	
 34572                           
 34573                           ; BSR set to: 0
 34574                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 34575  01BE68  D801               	call	u993_48
 34576  01BE6A  0012               	return	
 34577  01BE6C                     u993_48:
 34578  01BE6C  0005               	push	
 34579  01BE6E  6EFA               	movwf	pclath,c
 34580  01BE70  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 34581  01BE72  6EFD               	movwf	tosl,c
 34582  01BE74  51BE               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 34583  01BE76  6EFE               	movwf	tosh,c
 34584  01BE78  51BF               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 34585  01BE7A  6EFF               	movwf	tosu,c
 34586  01BE7C  50FA               	movf	pclath,w,c
 34587  01BE7E  0012               	return		;indir
 34588  01BE80                     __end_of_INT0_CallBack:
 34589                           	opt callstack 0
 34590                           
 34591 ;; *************** function _INT0_DefaultInterruptHandler *****************
 34592 ;; Defined at:
 34593 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 34594 ;; Parameters:    Size  Location     Type
 34595 ;;		None
 34596 ;; Auto vars:     Size  Location     Type
 34597 ;;		None
 34598 ;; Return value:  Size  Location     Type
 34599 ;;                  1  [STACK] void 
 34600 ;; Registers used:
 34601 ;;		None
 34602 ;; Tracked objects:
 34603 ;;		On entry : 3F/0
 34604 ;;		On exit  : 0/0
 34605 ;;		Unchanged: 0/0
 34606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34611 ;;Total ram usage:        0 bytes
 34612 ;; Hardware stack levels used:    1
 34613 ;; This function calls:
 34614 ;;		Nothing
 34615 ;; This function is called by:
 34616 ;;		_EXT_INT_Initialize
 34617 ;;		_INT0_CallBack
 34618 ;; This function uses a reentrant model
 34619 ;;
 34620                           
 34621                           	psect	text159
 34622  01C1C2                     __ptext159:
 34623                           	opt callstack 0
 34624  01C1C2                     _INT0_DefaultInterruptHandler:
 34625                           	opt callstack 2
 34626                           
 34627                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34628                           
 34629                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34630                           ;incstack = 0
 34631  01C1C2  0012               	return		;funcret
 34632  01C1C4                     __end_of_INT0_DefaultInterruptHandler:
 34633                           	opt callstack 0
 34634                           
 34635 ;; *************** function _Default_ISR *****************
 34636 ;; Defined at:
 34637 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 34638 ;; Parameters:    Size  Location     Type
 34639 ;;		None
 34640 ;; Auto vars:     Size  Location     Type
 34641 ;;		None
 34642 ;; Return value:  Size  Location     Type
 34643 ;;                  1    wreg      void 
 34644 ;; Registers used:
 34645 ;;		None
 34646 ;; Tracked objects:
 34647 ;;		On entry : 0/0
 34648 ;;		On exit  : 0/0
 34649 ;;		Unchanged: 0/0
 34650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34655 ;;Total ram usage:        0 bytes
 34656 ;; Hardware stack levels used:    1
 34657 ;; This function calls:
 34658 ;;		Nothing
 34659 ;; This function is called by:
 34660 ;;		Interrupt level 2
 34661 ;; This function uses a non-reentrant model
 34662 ;;
 34663                           
 34664                           	psect	text160
 34665  01C1B8                     __ptext160:
 34666                           	opt callstack 0
 34667  01C1B8                     _Default_ISR:
 34668                           	opt callstack 4
 34669                           
 34670                           ;incstack = 0
 34671  01C1B8  EE14  F15E         	lfsr	1,___inthi_sp
 34672  01C1BC  0011               	retfie		f
 34673  01C1BE                     __end_of_Default_ISR:
 34674                           	opt callstack 0
 34675                           
 34676 ;; *************** function _ADCC_ISR *****************
 34677 ;; Defined at:
 34678 ;;		line 314 in file "mcc_generated_files/adcc.c"
 34679 ;; Parameters:    Size  Location     Type
 34680 ;;		None
 34681 ;; Auto vars:     Size  Location     Type
 34682 ;;		None
 34683 ;; Return value:  Size  Location     Type
 34684 ;;                  1    wreg      void 
 34685 ;; Registers used:
 34686 ;;		wreg, status,2, status,0, pclath, tosl
 34687 ;; Tracked objects:
 34688 ;;		On entry : 0/0
 34689 ;;		On exit  : 0/0
 34690 ;;		Unchanged: 0/0
 34691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34696 ;;Total ram usage:        0 bytes
 34697 ;; Hardware stack levels used:    1
 34698 ;; Hardware stack levels required when called:    1
 34699 ;; This function calls:
 34700 ;;		Absolute function
 34701 ;;		_ADCC_DefaultInterruptHandler
 34702 ;;		_adc_int_handler
 34703 ;; This function is called by:
 34704 ;;		Interrupt level 2
 34705 ;; This function uses a non-reentrant model
 34706 ;;
 34707                           
 34708                           	psect	text161
 34709  01BACC                     __ptext161:
 34710                           	opt callstack 0
 34711  01BACC                     _ADCC_ISR:
 34712                           	opt callstack 3
 34713                           
 34714                           ;incstack = 0
 34715  01BACC  EE14  F15E         	lfsr	1,___inthi_sp
 34716                           
 34717                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 34718  01BAD0  0139               	movlb	57	; () banked
 34719  01BAD2  95A1               	bcf	161,2,b	;volatile
 34720                           
 34721                           ; BSR set to: 57
 34722                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 34723  01BAD4  0100               	movlb	0	; () banked
 34724  01BAD6  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 34725  01BAD8  11AF               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 34726  01BADA  11B0               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 34727  01BADC  B4D8               	btfsc	status,2,c
 34728  01BADE  0011               	retfie		f
 34729                           
 34730                           ; BSR set to: 0
 34731                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 34732  01BAE0  D801               	call	i2u1036_48
 34733  01BAE2  0011               	retfie		f
 34734  01BAE4                     i2u1036_48:
 34735  01BAE4  0005               	push	
 34736  01BAE6  6EFA               	movwf	pclath,c
 34737  01BAE8  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 34738  01BAEA  6EFD               	movwf	tosl,c
 34739  01BAEC  51AF               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 34740  01BAEE  6EFE               	movwf	tosh,c
 34741  01BAF0  51B0               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 34742  01BAF2  6EFF               	movwf	tosu,c
 34743  01BAF4  50FA               	movf	pclath,w,c
 34744  01BAF6  0012               	return		;indir
 34745  01BAF8                     __end_of_ADCC_ISR:
 34746                           	opt callstack 0
 34747                           
 34748 ;; *************** function _adc_int_t_handler *****************
 34749 ;; Defined at:
 34750 ;;		line 146 in file "daq.c"
 34751 ;; Parameters:    Size  Location     Type
 34752 ;;		None
 34753 ;; Auto vars:     Size  Location     Type
 34754 ;;		None
 34755 ;; Return value:  Size  Location     Type
 34756 ;;                  1  [STACK] void 
 34757 ;; Registers used:
 34758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 34759 ;; Tracked objects:
 34760 ;;		On entry : 3F/0
 34761 ;;		On exit  : 0/0
 34762 ;;		Unchanged: 0/0
 34763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34768 ;;Total ram usage:        0 bytes
 34769 ;; Hardware stack levels used:    1
 34770 ;; Hardware stack levels required when called:    1
 34771 ;; This function calls:
 34772 ;;		_ADCC_DischargeSampleCapacitor
 34773 ;;		_ADCC_StartConversion
 34774 ;; This function is called by:
 34775 ;;		_start_adc_scan
 34776 ;;		_ADCC_ThresholdISR
 34777 ;; This function uses a reentrant model
 34778 ;;
 34779                           
 34780                           	psect	text162
 34781  01ADBE                     __ptext162:
 34782                           	opt callstack 0
 34783  01ADBE                     _adc_int_t_handler:
 34784                           	opt callstack 2
 34785                           
 34786                           ;daq.c: 151:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 34787                           
 34788                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34789                           ;incstack = 0
 34790  01ADBE  013E               	movlb	62	; () banked
 34791  01ADC0  51E6               	movf	230,w,b	;volatile
 34792  01ADC2  006F FB9C  F001    	movff	16103,btemp	;volatile
 34793  01ADC8  6A02               	clrf	(btemp+1)^0,c
 34794  01ADCA  0060  F004  F002   	movff	btemp,btemp+1
 34795  01ADD0  6A01               	clrf	btemp^0,c
 34796  01ADD2  2601               	addwf	btemp^0,f,c
 34797  01ADD4  0E00               	movlw	0
 34798  01ADD6  2202               	addwfc	(btemp+1)^0,f,c
 34799  01ADD8  0101               	movlb	1	; () banked
 34800  01ADDA  512C               	movf	(_R+44)& (0+255),w,b	;volatile
 34801  01ADDC  0D02               	mullw	2
 34802  01ADDE  0E00               	movlw	low _R
 34803  01ADE0  24F3               	addwf	243,w,c
 34804  01ADE2  6ED9               	movwf	fsr2l,c
 34805  01ADE4  0E01               	movlw	high _R
 34806  01ADE6  20F4               	addwfc	prodh,w,c
 34807  01ADE8  6EDA               	movwf	fsr2h,c
 34808  01ADEA  0060  F007  FFDE   	movff	btemp,postinc2
 34809  01ADF0  0060  F00B  FFDD   	movff	btemp+1,postdec2
 34810  01ADF6                     l11152:
 34811                           
 34812                           ;daq.c: 153:   if (++R.scan_index > 0XD) {
 34813  01ADF6  0101               	movlb	1	; () banked
 34814  01ADF8  2B2C               	incf	(_R+44)& (0+255),f,b	;volatile
 34815  01ADFA  0E0D               	movlw	13
 34816  01ADFC  652C               	cpfsgt	(_R+44)& (0+255),b	;volatile
 34817  01ADFE  D003               	goto	l11158
 34818                           
 34819                           ; BSR set to: 1
 34820                           ;daq.c: 154:    R.done = 1;
 34821  01AE00  0E01               	movlw	1
 34822  01AE02  6F2F               	movwf	(_R+47)& (0+255),b	;volatile
 34823  01AE04  0012               	return	
 34824  01AE06                     l11158:
 34825                           
 34826                           ; BSR set to: 1
 34827                           ;daq.c: 160:  } while (!((R.scan_select >> R.scan_index) &0x1));
 34828  01AE06  0060  F4B0  F00C   	movff	_R+44,btemp+11	;volatile
 34829  01AE0C  EE20  F12D         	lfsr	2,_R+45	;volatile
 34830  01AE10  006F FF78  F009    	movff	postinc2,btemp+8
 34831  01AE16  006F FF74  F00A    	movff	postdec2,btemp+9
 34832  01AE1C  2A0C               	incf	(btemp+11)^0,f,c
 34833  01AE1E  D003               	goto	u1033_44
 34834  01AE20                     u1033_45:
 34835  01AE20  90D8               	bcf	status,0,c
 34836  01AE22  320A               	rrcf	(btemp+9)^0,f,c
 34837  01AE24  3209               	rrcf	(btemp+8)^0,f,c
 34838  01AE26                     u1033_44:
 34839  01AE26  2E0C               	decfsz	(btemp+11)^0,f,c
 34840  01AE28  D7FB               	goto	u1033_45
 34841  01AE2A  A009               	btfss	(btemp+8)^0,0,c
 34842  01AE2C  D7E4               	goto	l11152
 34843                           
 34844                           ;daq.c: 161:  ADCC_DischargeSampleCapacitor();
 34845  01AE2E  ECBB  F0E0         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 34846                           
 34847                           ; BSR set to: 62
 34848                           ;daq.c: 162:  ADCC_StartConversion(R.scan_index & 0xf);
 34849  01AE32  0101               	movlb	1	; () banked
 34850  01AE34  512C               	movf	(_R+44)& (0+255),w,b	;volatile
 34851  01AE36  0B0F               	andlw	15
 34852  01AE38  6EE6               	movwf	postinc1,c
 34853  01AE3A  EC4A  F0E0         	call	_ADCC_StartConversion	;wreg free
 34854                           
 34855                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34856  01AE3E  0012               	return		;funcret
 34857  01AE40                     __end_of_adc_int_t_handler:
 34858                           	opt callstack 0
 34859                           
 34860 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 34861 ;; Defined at:
 34862 ;;		line 339 in file "mcc_generated_files/adcc.c"
 34863 ;; Parameters:    Size  Location     Type
 34864 ;;		None
 34865 ;; Auto vars:     Size  Location     Type
 34866 ;;		None
 34867 ;; Return value:  Size  Location     Type
 34868 ;;                  1  [STACK] void 
 34869 ;; Registers used:
 34870 ;;		None
 34871 ;; Tracked objects:
 34872 ;;		On entry : 3F/0
 34873 ;;		On exit  : 0/0
 34874 ;;		Unchanged: 0/0
 34875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34880 ;;Total ram usage:        0 bytes
 34881 ;; Hardware stack levels used:    1
 34882 ;; This function calls:
 34883 ;;		Nothing
 34884 ;; This function is called by:
 34885 ;;		_ADCC_Initialize
 34886 ;;		_ADCC_ISR
 34887 ;;		_ADCC_ThresholdISR
 34888 ;; This function uses a reentrant model
 34889 ;;
 34890                           
 34891                           	psect	text163
 34892  01C1C4                     __ptext163:
 34893                           	opt callstack 0
 34894  01C1C4                     _ADCC_DefaultInterruptHandler:
 34895                           	opt callstack 3
 34896                           
 34897                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34898                           
 34899                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34900                           ;incstack = 0
 34901  01C1C4  0012               	return		;funcret
 34902  01C1C6                     __end_of_ADCC_DefaultInterruptHandler:
 34903                           	opt callstack 0
 34904                           
 34905 ;; *************** function _adc_int_handler *****************
 34906 ;; Defined at:
 34907 ;;		line 136 in file "daq.c"
 34908 ;; Parameters:    Size  Location     Type
 34909 ;;		None
 34910 ;; Auto vars:     Size  Location     Type
 34911 ;;		None
 34912 ;; Return value:  Size  Location     Type
 34913 ;;                  1  [STACK] void 
 34914 ;; Registers used:
 34915 ;;		None
 34916 ;; Tracked objects:
 34917 ;;		On entry : 3F/0
 34918 ;;		On exit  : 0/0
 34919 ;;		Unchanged: 0/0
 34920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34925 ;;Total ram usage:        0 bytes
 34926 ;; Hardware stack levels used:    1
 34927 ;; This function calls:
 34928 ;;		Nothing
 34929 ;; This function is called by:
 34930 ;;		_start_adc_scan
 34931 ;;		_ADCC_ISR
 34932 ;; This function uses a reentrant model
 34933 ;;
 34934                           
 34935                           	psect	text164
 34936  01C1C6                     __ptext164:
 34937                           	opt callstack 0
 34938  01C1C6                     _adc_int_handler:
 34939                           	opt callstack 3
 34940                           
 34941                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34942                           
 34943                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34944                           ;incstack = 0
 34945  01C1C6  0012               	return		;funcret
 34946  01C1C8                     __end_of_adc_int_handler:
 34947                           	opt callstack 0
 34948                           
 34949 ;; *************** function _ADCC_ThresholdISR *****************
 34950 ;; Defined at:
 34951 ;;		line 327 in file "mcc_generated_files/adcc.c"
 34952 ;; Parameters:    Size  Location     Type
 34953 ;;		None
 34954 ;; Auto vars:     Size  Location     Type
 34955 ;;		None
 34956 ;; Return value:  Size  Location     Type
 34957 ;;                  1    wreg      void 
 34958 ;; Registers used:
 34959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 34960 ;; Tracked objects:
 34961 ;;		On entry : 0/0
 34962 ;;		On exit  : 0/0
 34963 ;;		Unchanged: 0/0
 34964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34967 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34968 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34969 ;;Total ram usage:        5 bytes
 34970 ;; Hardware stack levels used:    1
 34971 ;; Hardware stack levels required when called:    2
 34972 ;; This function calls:
 34973 ;;		Absolute function
 34974 ;;		_ADCC_DefaultInterruptHandler
 34975 ;;		_adc_int_t_handler
 34976 ;; This function is called by:
 34977 ;;		Interrupt level 2
 34978 ;; This function uses a non-reentrant model
 34979 ;;
 34980                           
 34981                           	psect	text165
 34982  01AF8C                     __ptext165:
 34983                           	opt callstack 0
 34984  01AF8C                     _ADCC_ThresholdISR:
 34985                           	opt callstack 2
 34986                           
 34987                           ;incstack = 0
 34988  01AF8C  0060  F004  F021   	movff	btemp,??_ADCC_ThresholdISR
 34989  01AF92  0060  F008  F022   	movff	btemp+1,??_ADCC_ThresholdISR+1
 34990  01AF98  0060  F024  F023   	movff	btemp+8,??_ADCC_ThresholdISR+2
 34991  01AF9E  0060  F028  F024   	movff	btemp+9,??_ADCC_ThresholdISR+3
 34992  01AFA4  0060  F030  F025   	movff	btemp+11,??_ADCC_ThresholdISR+4
 34993  01AFAA  EE14  F15E         	lfsr	1,___inthi_sp
 34994                           
 34995                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 34996  01AFAE  0139               	movlb	57	; () banked
 34997  01AFB0  97A1               	bcf	161,3,b	;volatile
 34998                           
 34999                           ; BSR set to: 57
 35000                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 35001  01AFB2  0100               	movlb	0	; () banked
 35002  01AFB4  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 35003  01AFB6  11AC               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 35004  01AFB8  11AD               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 35005  01AFBA  B4D8               	btfsc	status,2,c
 35006  01AFBC  D00C               	goto	i2u1038_49
 35007                           
 35008                           ; BSR set to: 0
 35009                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 35010  01AFBE  D801               	call	i2u1038_48
 35011  01AFC0  D00A               	goto	i2u1038_49
 35012  01AFC2                     i2u1038_48:
 35013  01AFC2  0005               	push	
 35014  01AFC4  6EFA               	movwf	pclath,c
 35015  01AFC6  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 35016  01AFC8  6EFD               	movwf	tosl,c
 35017  01AFCA  51AC               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 35018  01AFCC  6EFE               	movwf	tosh,c
 35019  01AFCE  51AD               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 35020  01AFD0  6EFF               	movwf	tosu,c
 35021  01AFD2  50FA               	movf	pclath,w,c
 35022  01AFD4  0012               	return		;indir
 35023  01AFD6                     i2u1038_49:
 35024  01AFD6  0060  F094  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 35025  01AFDC  0060  F090  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 35026  01AFE2  0060  F08C  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 35027  01AFE8  0060  F088  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 35028  01AFEE  0060  F084  F001   	movff	??_ADCC_ThresholdISR,btemp
 35029  01AFF4  0011               	retfie		f
 35030  01AFF6                     __end_of_ADCC_ThresholdISR:
 35031                           	opt callstack 0
 35032                           
 35033 ;; *************** function _UART1_rx_vect_isr *****************
 35034 ;; Defined at:
 35035 ;;		line 181 in file "mcc_generated_files/uart1.c"
 35036 ;; Parameters:    Size  Location     Type
 35037 ;;		None
 35038 ;; Auto vars:     Size  Location     Type
 35039 ;;		None
 35040 ;; Return value:  Size  Location     Type
 35041 ;;                  1    wreg      void 
 35042 ;; Registers used:
 35043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 35044 ;; Tracked objects:
 35045 ;;		On entry : 0/0
 35046 ;;		On exit  : 0/0
 35047 ;;		Unchanged: 0/0
 35048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35053 ;;Total ram usage:        0 bytes
 35054 ;; Hardware stack levels used:    1
 35055 ;; Hardware stack levels required when called:    1
 35056 ;; This function calls:
 35057 ;;		Absolute function
 35058 ;;		_UART1_Receive_ISR
 35059 ;; This function is called by:
 35060 ;;		Interrupt level 2
 35061 ;; This function uses a non-reentrant model
 35062 ;;
 35063                           
 35064                           	psect	text166
 35065  01BD30                     __ptext166:
 35066                           	opt callstack 0
 35067  01BD30                     _UART1_rx_vect_isr:
 35068                           	opt callstack 3
 35069                           
 35070                           ;incstack = 0
 35071  01BD30  EE14  F15E         	lfsr	1,___inthi_sp
 35072                           
 35073                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 35074  01BD34  0100               	movlb	0	; () banked
 35075  01BD36  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 35076  01BD38  11B2               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 35077  01BD3A  11B3               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 35078  01BD3C  B4D8               	btfsc	status,2,c
 35079  01BD3E  0011               	retfie		f
 35080                           
 35081                           ; BSR set to: 0
 35082                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 35083  01BD40  D801               	call	i2u1040_48
 35084  01BD42  0011               	retfie		f
 35085  01BD44                     i2u1040_48:
 35086  01BD44  0005               	push	
 35087  01BD46  6EFA               	movwf	pclath,c
 35088  01BD48  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 35089  01BD4A  6EFD               	movwf	tosl,c
 35090  01BD4C  51B2               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 35091  01BD4E  6EFE               	movwf	tosh,c
 35092  01BD50  51B3               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 35093  01BD52  6EFF               	movwf	tosu,c
 35094  01BD54  50FA               	movf	pclath,w,c
 35095  01BD56  0012               	return		;indir
 35096  01BD58                     __end_of_UART1_rx_vect_isr:
 35097                           	opt callstack 0
 35098                           
 35099 ;; *************** function _UART1_Receive_ISR *****************
 35100 ;; Defined at:
 35101 ;;		line 192 in file "mcc_generated_files/uart1.c"
 35102 ;; Parameters:    Size  Location     Type
 35103 ;;		None
 35104 ;; Auto vars:     Size  Location     Type
 35105 ;;		None
 35106 ;; Return value:  Size  Location     Type
 35107 ;;                  1  [STACK] void 
 35108 ;; Registers used:
 35109 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35110 ;; Tracked objects:
 35111 ;;		On entry : 3F/0
 35112 ;;		On exit  : 3F/0
 35113 ;;		Unchanged: 0/0
 35114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35119 ;;Total ram usage:        0 bytes
 35120 ;; Hardware stack levels used:    1
 35121 ;; This function calls:
 35122 ;;		Nothing
 35123 ;; This function is called by:
 35124 ;;		_UART1_Initialize
 35125 ;;		_UART1_rx_vect_isr
 35126 ;; This function uses a reentrant model
 35127 ;;
 35128                           
 35129                           	psect	text167
 35130  01BFA0                     __ptext167:
 35131                           	opt callstack 0
 35132  01BFA0                     _UART1_Receive_ISR:
 35133                           	opt callstack 3
 35134                           
 35135                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 35136                           
 35137                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35138                           ;incstack = 0
 35139  01BFA0  5047               	movf	_uart1RxHead^0,w,c
 35140  01BFA2  0F6C               	addlw	low _uart1RxBuffer
 35141  01BFA4  6ED9               	movwf	fsr2l,c
 35142  01BFA6  6ADA               	clrf	fsr2h,c
 35143  01BFA8  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 35144  01BFAE  2A47               	incf	_uart1RxHead^0,f,c	;volatile
 35145                           
 35146                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 35147  01BFB0  0E07               	movlw	7
 35148  01BFB2  6447               	cpfsgt	_uart1RxHead^0,c
 35149  01BFB4  D001               	goto	l10726
 35150                           
 35151                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 35152  01BFB6  6A47               	clrf	_uart1RxHead^0,c	;volatile
 35153  01BFB8                     l10726:
 35154                           
 35155                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 35156  01BFB8  0100               	movlb	0	; () banked
 35157  01BFBA  2BCE               	incf	_uart1RxCount& (0+255),f,b	;volatile
 35158                           
 35159                           ; BSR set to: 0
 35160                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35161  01BFBC  0012               	return		;funcret
 35162  01BFBE                     __end_of_UART1_Receive_ISR:
 35163                           	opt callstack 0
 35164                           
 35165 ;; *************** function _UART2_tx_vect_isr *****************
 35166 ;; Defined at:
 35167 ;;		line 195 in file "mcc_generated_files/uart2.c"
 35168 ;; Parameters:    Size  Location     Type
 35169 ;;		None
 35170 ;; Auto vars:     Size  Location     Type
 35171 ;;		None
 35172 ;; Return value:  Size  Location     Type
 35173 ;;                  1    wreg      void 
 35174 ;; Registers used:
 35175 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 35176 ;; Tracked objects:
 35177 ;;		On entry : 0/0
 35178 ;;		On exit  : 0/0
 35179 ;;		Unchanged: 0/0
 35180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35185 ;;Total ram usage:        0 bytes
 35186 ;; Hardware stack levels used:    1
 35187 ;; Hardware stack levels required when called:    1
 35188 ;; This function calls:
 35189 ;;		Absolute function
 35190 ;;		_UART2_Transmit_ISR
 35191 ;; This function is called by:
 35192 ;;		Interrupt level 2
 35193 ;; This function uses a non-reentrant model
 35194 ;;
 35195                           
 35196                           	psect	text168
 35197  01BD58                     __ptext168:
 35198                           	opt callstack 0
 35199  01BD58                     _UART2_tx_vect_isr:
 35200                           	opt callstack 3
 35201                           
 35202                           ; BSR set to: 0
 35203                           ;incstack = 0
 35204  01BD58  EE14  F15E         	lfsr	1,___inthi_sp
 35205                           
 35206                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 35207  01BD5C  0100               	movlb	0	; () banked
 35208  01BD5E  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 35209  01BD60  11B5               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 35210  01BD62  11B6               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 35211  01BD64  B4D8               	btfsc	status,2,c
 35212  01BD66  0011               	retfie		f
 35213                           
 35214                           ; BSR set to: 0
 35215                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 35216  01BD68  D801               	call	i2u1042_48
 35217  01BD6A  0011               	retfie		f
 35218  01BD6C                     i2u1042_48:
 35219  01BD6C  0005               	push	
 35220  01BD6E  6EFA               	movwf	pclath,c
 35221  01BD70  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 35222  01BD72  6EFD               	movwf	tosl,c
 35223  01BD74  51B5               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 35224  01BD76  6EFE               	movwf	tosh,c
 35225  01BD78  51B6               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 35226  01BD7A  6EFF               	movwf	tosu,c
 35227  01BD7C  50FA               	movf	pclath,w,c
 35228  01BD7E  0012               	return		;indir
 35229  01BD80                     __end_of_UART2_tx_vect_isr:
 35230                           	opt callstack 0
 35231                           
 35232 ;; *************** function _UART2_Transmit_ISR *****************
 35233 ;; Defined at:
 35234 ;;		line 213 in file "mcc_generated_files/uart2.c"
 35235 ;; Parameters:    Size  Location     Type
 35236 ;;		None
 35237 ;; Auto vars:     Size  Location     Type
 35238 ;;		None
 35239 ;; Return value:  Size  Location     Type
 35240 ;;                  1  [STACK] void 
 35241 ;; Registers used:
 35242 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35243 ;; Tracked objects:
 35244 ;;		On entry : 3F/0
 35245 ;;		On exit  : 3B/39
 35246 ;;		Unchanged: 0/0
 35247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35252 ;;Total ram usage:        0 bytes
 35253 ;; Hardware stack levels used:    1
 35254 ;; This function calls:
 35255 ;;		Nothing
 35256 ;; This function is called by:
 35257 ;;		_UART2_Initialize
 35258 ;;		_UART2_tx_vect_isr
 35259 ;; This function uses a reentrant model
 35260 ;;
 35261                           
 35262                           	psect	text169
 35263  01BAF8                     __ptext169:
 35264                           	opt callstack 0
 35265  01BAF8                     _UART2_Transmit_ISR:
 35266                           	opt callstack 3
 35267                           
 35268                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 35269                           
 35270                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35271                           ;incstack = 0
 35272  01BAF8  0E40               	movlw	64
 35273  01BAFA  6044               	cpfslt	_uart2TxBufferRemaining^0,c
 35274  01BAFC  D010               	goto	l673
 35275                           
 35276                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 35277  01BAFE  0E00               	movlw	low _uart2TxBuffer
 35278  01BB00  2445               	addwf	_uart2TxTail^0,w,c	;volatile
 35279  01BB02  6ED9               	movwf	fsr2l,c
 35280  01BB04  6ADA               	clrf	fsr2h,c
 35281  01BB06  0E03               	movlw	high _uart2TxBuffer
 35282  01BB08  22DA               	addwfc	fsr2h,f,c
 35283  01BB0A  50DF               	movf	indf2,w,c
 35284  01BB0C  013D               	movlb	61	; () banked
 35285  01BB0E  6FD2               	movwf	210,b	;volatile
 35286                           
 35287                           ; BSR set to: 61
 35288  01BB10  2A45               	incf	_uart2TxTail^0,f,c	;volatile
 35289                           
 35290                           ; BSR set to: 61
 35291                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 35292  01BB12  0E3F               	movlw	63
 35293  01BB14  6445               	cpfsgt	_uart2TxTail^0,c
 35294  01BB16  D001               	goto	l10738
 35295                           
 35296                           ; BSR set to: 61
 35297                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 35298  01BB18  6A45               	clrf	_uart2TxTail^0,c	;volatile
 35299  01BB1A                     l10738:
 35300                           
 35301                           ; BSR set to: 61
 35302                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 35303  01BB1A  2A44               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 35304                           
 35305                           ;mcc_generated_files/uart2.c: 224:     }
 35306  01BB1C  0012               	return	
 35307  01BB1E                     l673:
 35308                           
 35309                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 35310  01BB1E  0139               	movlb	57	; () banked
 35311  01BB20  9796               	bcf	150,3,b	;volatile
 35312                           
 35313                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 35314  01BB22  0012               	return		;funcret
 35315  01BB24                     __end_of_UART2_Transmit_ISR:
 35316                           	opt callstack 0
 35317                           
 35318 ;; *************** function _UART2_rx_vect_isr *****************
 35319 ;; Defined at:
 35320 ;;		line 203 in file "mcc_generated_files/uart2.c"
 35321 ;; Parameters:    Size  Location     Type
 35322 ;;		None
 35323 ;; Auto vars:     Size  Location     Type
 35324 ;;		None
 35325 ;; Return value:  Size  Location     Type
 35326 ;;                  1    wreg      void 
 35327 ;; Registers used:
 35328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 35329 ;; Tracked objects:
 35330 ;;		On entry : 0/0
 35331 ;;		On exit  : 0/0
 35332 ;;		Unchanged: 0/0
 35333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35338 ;;Total ram usage:        0 bytes
 35339 ;; Hardware stack levels used:    1
 35340 ;; Hardware stack levels required when called:    1
 35341 ;; This function calls:
 35342 ;;		Absolute function
 35343 ;;		_UART2_Receive_ISR
 35344 ;; This function is called by:
 35345 ;;		Interrupt level 2
 35346 ;; This function uses a non-reentrant model
 35347 ;;
 35348                           
 35349                           	psect	text170
 35350  01BD80                     __ptext170:
 35351                           	opt callstack 0
 35352  01BD80                     _UART2_rx_vect_isr:
 35353                           	opt callstack 3
 35354                           
 35355                           ;incstack = 0
 35356  01BD80  EE14  F15E         	lfsr	1,___inthi_sp
 35357                           
 35358                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 35359  01BD84  0100               	movlb	0	; () banked
 35360  01BD86  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 35361  01BD88  11B8               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 35362  01BD8A  11B9               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 35363  01BD8C  B4D8               	btfsc	status,2,c
 35364  01BD8E  0011               	retfie		f
 35365                           
 35366                           ; BSR set to: 0
 35367                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 35368  01BD90  D801               	call	i2u1044_48
 35369  01BD92  0011               	retfie		f
 35370  01BD94                     i2u1044_48:
 35371  01BD94  0005               	push	
 35372  01BD96  6EFA               	movwf	pclath,c
 35373  01BD98  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 35374  01BD9A  6EFD               	movwf	tosl,c
 35375  01BD9C  51B8               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 35376  01BD9E  6EFE               	movwf	tosh,c
 35377  01BDA0  51B9               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 35378  01BDA2  6EFF               	movwf	tosu,c
 35379  01BDA4  50FA               	movf	pclath,w,c
 35380  01BDA6  0012               	return		;indir
 35381  01BDA8                     __end_of_UART2_rx_vect_isr:
 35382                           	opt callstack 0
 35383                           
 35384 ;; *************** function _UART2_Receive_ISR *****************
 35385 ;; Defined at:
 35386 ;;		line 233 in file "mcc_generated_files/uart2.c"
 35387 ;; Parameters:    Size  Location     Type
 35388 ;;		None
 35389 ;; Auto vars:     Size  Location     Type
 35390 ;;		None
 35391 ;; Return value:  Size  Location     Type
 35392 ;;                  1  [STACK] void 
 35393 ;; Registers used:
 35394 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35395 ;; Tracked objects:
 35396 ;;		On entry : 3F/0
 35397 ;;		On exit  : 3F/0
 35398 ;;		Unchanged: 0/0
 35399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35404 ;;Total ram usage:        0 bytes
 35405 ;; Hardware stack levels used:    1
 35406 ;; This function calls:
 35407 ;;		Nothing
 35408 ;; This function is called by:
 35409 ;;		_UART2_Initialize
 35410 ;;		_UART2_rx_vect_isr
 35411 ;; This function uses a reentrant model
 35412 ;;
 35413                           
 35414                           	psect	text171
 35415  01BF08                     __ptext171:
 35416                           	opt callstack 0
 35417  01BF08                     _UART2_Receive_ISR:
 35418                           	opt callstack 3
 35419                           
 35420                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 35421                           
 35422                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35423                           ;incstack = 0
 35424  01BF08  0E00               	movlw	low _uart2RxBuffer
 35425  01BF0A  2443               	addwf	_uart2RxHead^0,w,c	;volatile
 35426  01BF0C  6ED9               	movwf	fsr2l,c
 35427  01BF0E  6ADA               	clrf	fsr2h,c
 35428  01BF10  0E04               	movlw	high _uart2RxBuffer
 35429  01BF12  22DA               	addwfc	fsr2h,f,c
 35430  01BF14  006F F743 FFDF     	movff	15824,indf2	;volatile
 35431  01BF1A  2A43               	incf	_uart2RxHead^0,f,c	;volatile
 35432                           
 35433                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 35434  01BF1C  2843               	incf	_uart2RxHead^0,w,c
 35435  01BF1E  B4D8               	btfsc	status,2,c
 35436                           
 35437                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 35438  01BF20  6A43               	clrf	_uart2RxHead^0,c	;volatile
 35439                           
 35440                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 35441  01BF22  0100               	movlb	0	; () banked
 35442  01BF24  2BCB               	incf	_uart2RxCount& (0+255),f,b	;volatile
 35443                           
 35444                           ; BSR set to: 0
 35445                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35446  01BF26  0012               	return		;funcret
 35447  01BF28                     __end_of_UART2_Receive_ISR:
 35448                           	opt callstack 0
 35449                           
 35450 ;; *************** function _TMR6_ISR *****************
 35451 ;; Defined at:
 35452 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 35453 ;; Parameters:    Size  Location     Type
 35454 ;;		None
 35455 ;; Auto vars:     Size  Location     Type
 35456 ;;		None
 35457 ;; Return value:  Size  Location     Type
 35458 ;;                  1    wreg      void 
 35459 ;; Registers used:
 35460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 35461 ;; Tracked objects:
 35462 ;;		On entry : 0/0
 35463 ;;		On exit  : 0/0
 35464 ;;		Unchanged: 0/0
 35465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35468 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35469 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35470 ;;Total ram usage:        1 bytes
 35471 ;; Hardware stack levels used:    1
 35472 ;; Hardware stack levels required when called:    2
 35473 ;; This function calls:
 35474 ;;		_TMR6_CallBack
 35475 ;; This function is called by:
 35476 ;;		Interrupt level 2
 35477 ;; This function uses a non-reentrant model
 35478 ;;
 35479                           
 35480                           	psect	text172
 35481  01BFF4                     __ptext172:
 35482                           	opt callstack 0
 35483  01BFF4                     _TMR6_ISR:
 35484                           	opt callstack 2
 35485                           
 35486                           ; BSR set to: 0
 35487                           ;incstack = 0
 35488  01BFF4  0060  F004  F026   	movff	btemp,??_TMR6_ISR
 35489  01BFFA  EE14  F15E         	lfsr	1,___inthi_sp
 35490                           
 35491                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 35492  01BFFE  0139               	movlb	57	; () banked
 35493  01C000  91A9               	bcf	169,0,b	;volatile
 35494                           
 35495                           ; BSR set to: 57
 35496                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 35497  01C002  EC40  F0DF         	call	_TMR6_CallBack	;wreg free
 35498  01C006  0060  F098  F001   	movff	??_TMR6_ISR,btemp
 35499  01C00C  0011               	retfie		f
 35500  01C00E                     __end_of_TMR6_ISR:
 35501                           	opt callstack 0
 35502                           
 35503 ;; *************** function _TMR6_CallBack *****************
 35504 ;; Defined at:
 35505 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 35506 ;; Parameters:    Size  Location     Type
 35507 ;;		None
 35508 ;; Auto vars:     Size  Location     Type
 35509 ;;		None
 35510 ;; Return value:  Size  Location     Type
 35511 ;;                  1  [STACK] void 
 35512 ;; Registers used:
 35513 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 35514 ;; Tracked objects:
 35515 ;;		On entry : 3F/39
 35516 ;;		On exit  : 0/0
 35517 ;;		Unchanged: 0/0
 35518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35523 ;;Total ram usage:        0 bytes
 35524 ;; Hardware stack levels used:    1
 35525 ;; Hardware stack levels required when called:    1
 35526 ;; This function calls:
 35527 ;;		Absolute function
 35528 ;;		_TMR6_DefaultInterruptHandler
 35529 ;; This function is called by:
 35530 ;;		_TMR6_ISR
 35531 ;; This function uses a reentrant model
 35532 ;;
 35533                           
 35534                           	psect	text173
 35535  01BE80                     __ptext173:
 35536                           	opt callstack 0
 35537  01BE80                     _TMR6_CallBack:
 35538                           	opt callstack 2
 35539                           
 35540                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 35541                           
 35542                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35543                           ;incstack = 0
 35544  01BE80  0100               	movlb	0	; () banked
 35545  01BE82  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 35546  01BE84  11A9               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 35547  01BE86  11AA               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 35548  01BE88  B4D8               	btfsc	status,2,c
 35549  01BE8A  0012               	return	
 35550                           
 35551                           ; BSR set to: 0
 35552                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 35553  01BE8C  D801               	call	u1001_48
 35554  01BE8E  0012               	return	
 35555  01BE90                     u1001_48:
 35556  01BE90  0005               	push	
 35557  01BE92  6EFA               	movwf	pclath,c
 35558  01BE94  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 35559  01BE96  6EFD               	movwf	tosl,c
 35560  01BE98  51A9               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 35561  01BE9A  6EFE               	movwf	tosh,c
 35562  01BE9C  51AA               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 35563  01BE9E  6EFF               	movwf	tosu,c
 35564  01BEA0  50FA               	movf	pclath,w,c
 35565  01BEA2  0012               	return		;indir
 35566  01BEA4                     __end_of_TMR6_CallBack:
 35567                           	opt callstack 0
 35568                           
 35569 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 35570 ;; Defined at:
 35571 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 35572 ;; Parameters:    Size  Location     Type
 35573 ;;		None
 35574 ;; Auto vars:     Size  Location     Type
 35575 ;;  i               1  [STACK] unsigned char 
 35576 ;; Return value:  Size  Location     Type
 35577 ;;                  1  [STACK] void 
 35578 ;; Registers used:
 35579 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 35580 ;; Tracked objects:
 35581 ;;		On entry : 3F/0
 35582 ;;		On exit  : 0/0
 35583 ;;		Unchanged: 0/0
 35584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35589 ;;Total ram usage:        0 bytes
 35590 ;; Hardware stack levels used:    1
 35591 ;; This function calls:
 35592 ;;		Nothing
 35593 ;; This function is called by:
 35594 ;;		_TMR6_Initialize
 35595 ;;		_TMR6_CallBack
 35596 ;; This function uses a reentrant model
 35597 ;;
 35598                           
 35599                           	psect	text174
 35600  01B396                     __ptext174:
 35601                           	opt callstack 0
 35602  01B396                     _TMR6_DefaultInterruptHandler:
 35603                           	opt callstack 0
 35604                           
 35605                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35606  01B396  52E6               	movf	postinc1,f,c
 35607                           
 35608                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 35609                           ;stkvar	_i @ sp[(-1)+0]
 35610                           
 35611                           ;incstack = 0
 35612  01B398  0EFF               	movlw	-1
 35613  01B39A  6AE3               	clrf	plusw1,c
 35614  01B39C                     l10348:
 35615                           
 35616                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 35617                           ;stkvar	_i @ sp[(-1)+0]
 35618  01B39C  0EFF               	movlw	-1
 35619  01B39E  50E3               	movf	plusw1,w,c
 35620  01B3A0  0D02               	mullw	2
 35621  01B3A2  0E7D               	movlw	low _tickCount
 35622  01B3A4  24F3               	addwf	243,w,c
 35623  01B3A6  6ED9               	movwf	fsr2l,c
 35624  01B3A8  0E02               	movlw	high _tickCount
 35625  01B3AA  20F4               	addwfc	prodh,w,c
 35626  01B3AC  6EDA               	movwf	fsr2h,c
 35627  01B3AE  50DE               	movf	postinc2,w,c
 35628  01B3B0  10DE               	iorwf	postinc2,w,c
 35629  01B3B2  B4D8               	btfsc	status,2,c
 35630  01B3B4  D00C               	goto	l10352
 35631                           
 35632                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 35633                           ;stkvar	_i @ sp[(-1)+0]
 35634  01B3B6  0EFF               	movlw	-1
 35635  01B3B8  50E3               	movf	plusw1,w,c
 35636  01B3BA  0D02               	mullw	2
 35637  01B3BC  0E7D               	movlw	low _tickCount
 35638  01B3BE  24F3               	addwf	243,w,c
 35639  01B3C0  6ED9               	movwf	fsr2l,c
 35640  01B3C2  0E02               	movlw	high _tickCount
 35641  01B3C4  20F4               	addwfc	prodh,w,c
 35642  01B3C6  6EDA               	movwf	fsr2h,c
 35643  01B3C8  06DE               	decf	postinc2,f,c
 35644  01B3CA  0E00               	movlw	0
 35645  01B3CC  5ADD               	subwfb	postdec2,f,c
 35646  01B3CE                     l10352:
 35647                           
 35648                           ;mcc_generated_files/tmr6.c: 207:  }
 35649                           ;stkvar	_i @ sp[(-1)+0]
 35650  01B3CE  0EFF               	movlw	-1
 35651  01B3D0  2AE3               	incf	plusw1,f,c
 35652                           
 35653                           ;stkvar	_i @ sp[(-1)+0]
 35654  01B3D2  0EFF               	movlw	-1
 35655  01B3D4  006F FF8C  F001    	movff	plusw1,btemp
 35656  01B3DA  0E0C               	movlw	12
 35657  01B3DC  6401               	cpfsgt	btemp^0,c
 35658  01B3DE  D7DE               	goto	l10348
 35659                           
 35660                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 35661  01B3E0  52E5               	movf	postdec1,f,c
 35662  01B3E2  0012               	return		;funcret
 35663  01B3E4                     __end_of_TMR6_DefaultInterruptHandler:
 35664                           	opt callstack 0
 35665                           
 35666 ;; *************** function _DMA1_DMASCNT_ISR *****************
 35667 ;; Defined at:
 35668 ;;		line 126 in file "mcc_generated_files/dma1.c"
 35669 ;; Parameters:    Size  Location     Type
 35670 ;;		None
 35671 ;; Auto vars:     Size  Location     Type
 35672 ;;		None
 35673 ;; Return value:  Size  Location     Type
 35674 ;;                  1    wreg      void 
 35675 ;; Registers used:
 35676 ;;		None
 35677 ;; Tracked objects:
 35678 ;;		On entry : 0/0
 35679 ;;		On exit  : 3F/0
 35680 ;;		Unchanged: 0/0
 35681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35686 ;;Total ram usage:        0 bytes
 35687 ;; Hardware stack levels used:    1
 35688 ;; This function calls:
 35689 ;;		Nothing
 35690 ;; This function is called by:
 35691 ;;		Interrupt level 2
 35692 ;; This function uses a non-reentrant model
 35693 ;;
 35694                           
 35695                           	psect	text175
 35696  01C130                     __ptext175:
 35697                           	opt callstack 0
 35698  01C130                     _DMA1_DMASCNT_ISR:
 35699                           	opt callstack 4
 35700                           
 35701                           ;incstack = 0
 35702  01C130  EE14  F15E         	lfsr	1,___inthi_sp
 35703                           
 35704                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 35705  01C134  0139               	movlb	57	; () banked
 35706  01C136  91A2               	bcf	162,0,b	;volatile
 35707                           
 35708                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 35709  01C138  0100               	movlb	0	; () banked
 35710  01C13A  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 35711                           
 35712                           ; BSR set to: 0
 35713  01C13C  0011               	retfie		f
 35714  01C13E                     __end_of_DMA1_DMASCNT_ISR:
 35715                           	opt callstack 0
 35716                           
 35717 ;; *************** function _DMA1_DMADCNT_ISR *****************
 35718 ;; Defined at:
 35719 ;;		line 133 in file "mcc_generated_files/dma1.c"
 35720 ;; Parameters:    Size  Location     Type
 35721 ;;		None
 35722 ;; Auto vars:     Size  Location     Type
 35723 ;;		None
 35724 ;; Return value:  Size  Location     Type
 35725 ;;                  1    wreg      void 
 35726 ;; Registers used:
 35727 ;;		None
 35728 ;; Tracked objects:
 35729 ;;		On entry : 0/0
 35730 ;;		On exit  : 3F/39
 35731 ;;		Unchanged: 0/0
 35732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35737 ;;Total ram usage:        0 bytes
 35738 ;; Hardware stack levels used:    1
 35739 ;; This function calls:
 35740 ;;		Nothing
 35741 ;; This function is called by:
 35742 ;;		Interrupt level 2
 35743 ;; This function uses a non-reentrant model
 35744 ;;
 35745                           
 35746                           	psect	text176
 35747  01C154                     __ptext176:
 35748                           	opt callstack 0
 35749  01C154                     _DMA1_DMADCNT_ISR:
 35750                           	opt callstack 4
 35751                           
 35752                           ; BSR set to: 0
 35753                           ;incstack = 0
 35754  01C154  EE14  F15E         	lfsr	1,___inthi_sp
 35755                           
 35756                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 35757  01C158  0139               	movlb	57	; () banked
 35758  01C15A  93A2               	bcf	162,1,b	;volatile
 35759                           
 35760                           ; BSR set to: 57
 35761  01C15C  0011               	retfie		f
 35762  01C15E                     __end_of_DMA1_DMADCNT_ISR:
 35763                           	opt callstack 0
 35764                           
 35765 ;; *************** function _DMA1_DMAA_ISR *****************
 35766 ;; Defined at:
 35767 ;;		line 143 in file "mcc_generated_files/dma1.c"
 35768 ;; Parameters:    Size  Location     Type
 35769 ;;		None
 35770 ;; Auto vars:     Size  Location     Type
 35771 ;;		None
 35772 ;; Return value:  Size  Location     Type
 35773 ;;                  1    wreg      void 
 35774 ;; Registers used:
 35775 ;;		None
 35776 ;; Tracked objects:
 35777 ;;		On entry : 0/0
 35778 ;;		On exit  : 3F/39
 35779 ;;		Unchanged: 0/0
 35780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35785 ;;Total ram usage:        0 bytes
 35786 ;; Hardware stack levels used:    1
 35787 ;; This function calls:
 35788 ;;		Nothing
 35789 ;; This function is called by:
 35790 ;;		Interrupt level 2
 35791 ;; This function uses a non-reentrant model
 35792 ;;
 35793                           
 35794                           	psect	text177
 35795  01C160                     __ptext177:
 35796                           	opt callstack 0
 35797  01C160                     _DMA1_DMAA_ISR:
 35798                           	opt callstack 4
 35799                           
 35800                           ; BSR set to: 57
 35801                           ;incstack = 0
 35802  01C160  EE14  F15E         	lfsr	1,___inthi_sp
 35803                           
 35804                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 35805  01C164  0139               	movlb	57	; () banked
 35806  01C166  97A2               	bcf	162,3,b	;volatile
 35807                           
 35808                           ; BSR set to: 57
 35809  01C168  0011               	retfie		f
 35810  01C16A                     __end_of_DMA1_DMAA_ISR:
 35811                           	opt callstack 0
 35812                           
 35813 ;; *************** function _DMA1_DMAOR_ISR *****************
 35814 ;; Defined at:
 35815 ;;		line 154 in file "mcc_generated_files/dma1.c"
 35816 ;; Parameters:    Size  Location     Type
 35817 ;;		None
 35818 ;; Auto vars:     Size  Location     Type
 35819 ;;		None
 35820 ;; Return value:  Size  Location     Type
 35821 ;;                  1    wreg      void 
 35822 ;; Registers used:
 35823 ;;		None
 35824 ;; Tracked objects:
 35825 ;;		On entry : 0/0
 35826 ;;		On exit  : 3F/39
 35827 ;;		Unchanged: 0/0
 35828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35833 ;;Total ram usage:        0 bytes
 35834 ;; Hardware stack levels used:    1
 35835 ;; This function calls:
 35836 ;;		Nothing
 35837 ;; This function is called by:
 35838 ;;		Interrupt level 2
 35839 ;; This function uses a non-reentrant model
 35840 ;;
 35841                           
 35842                           	psect	text178
 35843  01C16C                     __ptext178:
 35844                           	opt callstack 0
 35845  01C16C                     _DMA1_DMAOR_ISR:
 35846                           	opt callstack 4
 35847                           
 35848                           ; BSR set to: 57
 35849                           ;incstack = 0
 35850  01C16C  EE14  F15E         	lfsr	1,___inthi_sp
 35851                           
 35852                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 35853  01C170  0139               	movlb	57	; () banked
 35854  01C172  95A2               	bcf	162,2,b	;volatile
 35855                           
 35856                           ; BSR set to: 57
 35857  01C174  0011               	retfie		f
 35858  01C176                     __end_of_DMA1_DMAOR_ISR:
 35859                           	opt callstack 0
 35860                           
 35861                           ;
 35862                           ; Interrupt Vector Table @ 0x8
 35863                           ;
 35864                           
 35865                           	psect	ivt0x8
 35866  000008                     __pivt0x8:
 35867                           	opt callstack 0
 35868  000008                     ivt0x8_base:
 35869                           	opt callstack 0
 35870                           
 35871                           ; Vector 0 : SWINT
 35872  000008  706E               	dw	_Default_ISR shr (0+2)
 35873                           
 35874                           ; Vector 1 : HLVD
 35875  00000A  706E               	dw	_Default_ISR shr (0+2)
 35876                           
 35877                           ; Vector 2 : OSF
 35878  00000C  706E               	dw	_Default_ISR shr (0+2)
 35879                           
 35880                           ; Vector 3 : CSW
 35881  00000E  706E               	dw	_Default_ISR shr (0+2)
 35882                           
 35883                           ; Vector 4 : NVM
 35884  000010  706E               	dw	_Default_ISR shr (0+2)
 35885                           
 35886                           ; Vector 5 : SCAN
 35887  000012  706E               	dw	_Default_ISR shr (0+2)
 35888                           
 35889                           ; Vector 6 : CRC
 35890  000014  706E               	dw	_Default_ISR shr (0+2)
 35891                           
 35892                           ; Vector 7 : IOC
 35893  000016  706E               	dw	_Default_ISR shr (0+2)
 35894                           
 35895                           ; Vector 8 : INT0
 35896  000018  7048               	dw	_INT0_ISR shr (0+2)
 35897                           
 35898                           ; Vector 9 : ZCD
 35899  00001A  706E               	dw	_Default_ISR shr (0+2)
 35900                           
 35901                           ; Vector 10 : AD
 35902  00001C  6EB3               	dw	_ADCC_ISR shr (0+2)
 35903                           
 35904                           ; Vector 11 : ADT
 35905  00001E  6BE3               	dw	_ADCC_ThresholdISR shr (0+2)
 35906                           
 35907                           ; Vector 12 : CMP1
 35908  000020  706E               	dw	_Default_ISR shr (0+2)
 35909                           
 35910                           ; Vector 13 : SMT1
 35911  000022  706E               	dw	_Default_ISR shr (0+2)
 35912                           
 35913                           ; Vector 14 : SMT1PRA
 35914  000024  706E               	dw	_Default_ISR shr (0+2)
 35915                           
 35916                           ; Vector 15 : SMT1PRW
 35917  000026  706E               	dw	_Default_ISR shr (0+2)
 35918                           
 35919                           ; Vector 16 : DMA1SCNT
 35920  000028  704C               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 35921                           
 35922                           ; Vector 17 : DMA1DCNT
 35923  00002A  7055               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 35924                           
 35925                           ; Vector 18 : DMA1OR
 35926  00002C  705B               	dw	_DMA1_DMAOR_ISR shr (0+2)
 35927                           
 35928                           ; Vector 19 : DMA1A
 35929  00002E  7058               	dw	_DMA1_DMAA_ISR shr (0+2)
 35930                           
 35931                           ; Vector 20 : SPI1RX
 35932  000030  706E               	dw	_Default_ISR shr (0+2)
 35933                           
 35934                           ; Vector 21 : SPI1TX
 35935  000032  706E               	dw	_Default_ISR shr (0+2)
 35936                           
 35937                           ; Vector 22 : SPI1
 35938  000034  706E               	dw	_Default_ISR shr (0+2)
 35939                           
 35940                           ; Vector 23 : I2C1RX
 35941  000036  706E               	dw	_Default_ISR shr (0+2)
 35942                           
 35943                           ; Vector 24 : I2C1TX
 35944  000038  706E               	dw	_Default_ISR shr (0+2)
 35945                           
 35946                           ; Vector 25 : I2C1
 35947  00003A  706E               	dw	_Default_ISR shr (0+2)
 35948                           
 35949                           ; Vector 26 : I2C1E
 35950  00003C  706E               	dw	_Default_ISR shr (0+2)
 35951                           
 35952                           ; Vector 27 : U1RX
 35953  00003E  6F4C               	dw	_UART1_rx_vect_isr shr (0+2)
 35954                           
 35955                           ; Vector 28 : U1TX
 35956  000040  706E               	dw	_Default_ISR shr (0+2)
 35957                           
 35958                           ; Vector 29 : U1E
 35959  000042  706E               	dw	_Default_ISR shr (0+2)
 35960                           
 35961                           ; Vector 30 : U1
 35962  000044  706E               	dw	_Default_ISR shr (0+2)
 35963                           
 35964                           ; Vector 31 : TMR0
 35965  000046  706E               	dw	_Default_ISR shr (0+2)
 35966                           
 35967                           ; Vector 32 : TMR1
 35968  000048  706E               	dw	_Default_ISR shr (0+2)
 35969                           
 35970                           ; Vector 33 : TMR1G
 35971  00004A  706E               	dw	_Default_ISR shr (0+2)
 35972                           
 35973                           ; Vector 34 : TMR2
 35974  00004C  706E               	dw	_Default_ISR shr (0+2)
 35975                           
 35976                           ; Vector 35 : CCP1
 35977  00004E  706E               	dw	_Default_ISR shr (0+2)
 35978                           
 35979                           ; Vector 36 : Undefined
 35980  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 35981                           
 35982                           ; Vector 37 : NCO1
 35983  000052  706E               	dw	_Default_ISR shr (0+2)
 35984                           
 35985                           ; Vector 38 : CWG1
 35986  000054  706E               	dw	_Default_ISR shr (0+2)
 35987                           
 35988                           ; Vector 39 : CLC1
 35989  000056  706E               	dw	_Default_ISR shr (0+2)
 35990                           
 35991                           ; Vector 40 : INT1
 35992  000058  6E0B               	dw	_INT1_ISR shr (0+2)
 35993                           
 35994                           ; Vector 41 : CMP2
 35995  00005A  706E               	dw	_Default_ISR shr (0+2)
 35996                           
 35997                           ; Vector 42 : DMA2SCNT
 35998  00005C  706E               	dw	_Default_ISR shr (0+2)
 35999                           
 36000                           ; Vector 43 : DMA2DCNT
 36001  00005E  706E               	dw	_Default_ISR shr (0+2)
 36002                           
 36003                           ; Vector 44 : DMA2OR
 36004  000060  706E               	dw	_Default_ISR shr (0+2)
 36005                           
 36006                           ; Vector 45 : DMA2A
 36007  000062  706E               	dw	_Default_ISR shr (0+2)
 36008                           
 36009                           ; Vector 46 : I2C2RX
 36010  000064  706E               	dw	_Default_ISR shr (0+2)
 36011                           
 36012                           ; Vector 47 : I2C2TX
 36013  000066  706E               	dw	_Default_ISR shr (0+2)
 36014                           
 36015                           ; Vector 48 : I2C2
 36016  000068  706E               	dw	_Default_ISR shr (0+2)
 36017                           
 36018                           ; Vector 49 : I2C2E
 36019  00006A  706E               	dw	_Default_ISR shr (0+2)
 36020                           
 36021                           ; Vector 50 : U2RX
 36022  00006C  6F60               	dw	_UART2_rx_vect_isr shr (0+2)
 36023                           
 36024                           ; Vector 51 : U2TX
 36025  00006E  6F56               	dw	_UART2_tx_vect_isr shr (0+2)
 36026                           
 36027                           ; Vector 52 : U2E
 36028  000070  706E               	dw	_Default_ISR shr (0+2)
 36029                           
 36030                           ; Vector 53 : U2
 36031  000072  706E               	dw	_Default_ISR shr (0+2)
 36032                           
 36033                           ; Vector 54 : TMR3
 36034  000074  6453               	dw	_TMR3_ISR shr (0+2)
 36035                           
 36036                           ; Vector 55 : TMR3G
 36037  000076  706E               	dw	_Default_ISR shr (0+2)
 36038                           
 36039                           ; Vector 56 : TMR4
 36040  000078  706E               	dw	_Default_ISR shr (0+2)
 36041                           
 36042                           ; Vector 57 : CCP2
 36043  00007A  706E               	dw	_Default_ISR shr (0+2)
 36044                           
 36045                           ; Vector 58 : Undefined
 36046  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 36047                           
 36048                           ; Vector 59 : CWG2
 36049  00007E  706E               	dw	_Default_ISR shr (0+2)
 36050                           
 36051                           ; Vector 60 : CLC2
 36052  000080  706E               	dw	_Default_ISR shr (0+2)
 36053                           
 36054                           ; Vector 61 : INT2
 36055  000082  706E               	dw	_Default_ISR shr (0+2)
 36056                           
 36057                           ; Vector 62 : Undefined
 36058  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 36059                           
 36060                           ; Vector 63 : Undefined
 36061  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 36062                           
 36063                           ; Vector 64 : Undefined
 36064  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 36065                           
 36066                           ; Vector 65 : Undefined
 36067  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 36068                           
 36069                           ; Vector 66 : Undefined
 36070  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 36071                           
 36072                           ; Vector 67 : Undefined
 36073  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 36074                           
 36075                           ; Vector 68 : Undefined
 36076  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 36077                           
 36078                           ; Vector 69 : Undefined
 36079  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 36080                           
 36081                           ; Vector 70 : TMR5
 36082  000094  687A               	dw	_TMR5_ISR shr (0+2)
 36083                           
 36084                           ; Vector 71 : TMR5G
 36085  000096  706E               	dw	_Default_ISR shr (0+2)
 36086                           
 36087                           ; Vector 72 : TMR6
 36088  000098  6FFD               	dw	_TMR6_ISR shr (0+2)
 36089                           
 36090                           ; Vector 73 : CCP3
 36091  00009A  706E               	dw	_Default_ISR shr (0+2)
 36092                           
 36093                           ; Vector 74 : CWG3
 36094  00009C  706E               	dw	_Default_ISR shr (0+2)
 36095                           
 36096                           ; Vector 75 : CLC3
 36097  00009E  706E               	dw	_Default_ISR shr (0+2)
 36098                           
 36099                           ; Vector 76 : Undefined
 36100  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 36101                           
 36102                           ; Vector 77 : Undefined
 36103  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 36104                           
 36105                           ; Vector 78 : Undefined
 36106  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 36107                           
 36108                           ; Vector 79 : Undefined
 36109  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 36110                           
 36111                           ; Vector 80 : CCP4
 36112  0000A8  706E               	dw	_Default_ISR shr (0+2)
 36113                           
 36114                           ; Vector 81 : CLC4
 36115  0000AA  706E               	dw	_Default_ISR shr (0+2)
 36116  0000AC                     ivt0x8_undefint:
 36117                           	opt callstack 0
 36118  0000AC  00FF               	reset	
 36119                           
 36120                           	psect	text179
 36121  000000                     __ptext179:
 36122                           	opt callstack 0
 36123                           
 36124                           	psect	rparam
 36125  0000                     
 36126                           	psect	temp
 36127  000001                     btemp:
 36128                           	opt callstack 0
 36129  000001                     	ds	32
 36130  0000                     wtemp0	set	btemp
 36131  0000                     wtemp1	set	btemp+2
 36132  0000                     wtemp2	set	btemp+4
 36133  0000                     wtemp3	set	btemp+6
 36134  0000                     wtemp4	set	btemp+8
 36135  0000                     wtemp5	set	btemp+10
 36136  0000                     wtemp8	set	btemp+1
 36137  0000                     ttemp0	set	btemp
 36138  0000                     ttemp1	set	btemp+3
 36139  0000                     ttemp2	set	btemp+6
 36140  0000                     ttemp3	set	btemp+9
 36141  0000                     ttemp5	set	btemp+1
 36142  0000                     ttemp6	set	btemp+4
 36143  0000                     ttemp7	set	btemp+8
 36144  0000                     ltemp0	set	btemp
 36145  0000                     ltemp1	set	btemp+4
 36146  0000                     ltemp2	set	btemp+8
 36147  0000                     lltemp0	set	btemp
 36148  0000                     lltemp1	set	btemp+8
 36149  0000                     lltemp2	set	btemp+16
 36150  0000                     lltemp3	set	btemp+24
 36151                           tosu	equ	0x3FFF
 36152                           tosh	equ	0x3FFE
 36153                           tosl	equ	0x3FFD
 36154                           stkptr	equ	0x3FFC
 36155                           pclatu	equ	0x3FFB
 36156                           pclath	equ	0x3FFA
 36157                           pcl	equ	0x3FF9
 36158                           tblptru	equ	0x3FF8
 36159                           tblptrh	equ	0x3FF7
 36160                           tblptrl	equ	0x3FF6
 36161                           tablat	equ	0x3FF5
 36162                           prodh	equ	0x3FF4
 36163                           prodl	equ	0x3FF3
 36164                           indf0	equ	0x3FEF
 36165                           postinc0	equ	0x3FEE
 36166                           postdec0	equ	0x3FED
 36167                           preinc0	equ	0x3FEC
 36168                           plusw0	equ	0x3FEB
 36169                           fsr0h	equ	0x3FEA
 36170                           fsr0l	equ	0x3FE9
 36171                           wreg	equ	0x3FE8
 36172                           indf1	equ	0x3FE7
 36173                           postinc1	equ	0x3FE6
 36174                           postdec1	equ	0x3FE5
 36175                           preinc1	equ	0x3FE4
 36176                           plusw1	equ	0x3FE3
 36177                           fsr1h	equ	0x3FE2
 36178                           fsr1l	equ	0x3FE1
 36179                           bsr	equ	0x3FE0
 36180                           indf2	equ	0x3FDF
 36181                           postinc2	equ	0x3FDE
 36182                           postdec2	equ	0x3FDD
 36183                           preinc2	equ	0x3FDC
 36184                           plusw2	equ	0x3FDB
 36185                           fsr2h	equ	0x3FDA
 36186                           fsr2l	equ	0x3FD9
 36187                           status	equ	0x3FD8


Data Sizes:
    Strings     1064
    Constant    492
    Data        1064
    BSS         1299
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      39
    BANK0           160     25     158
    BANK1           256      0     239
    BANK2           256      0     231
    BANK3           256      0     198
    BANK4           256      0     255
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_101(CODE[1]), STR_63(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_98(CODE[3]), STR_94(CODE[3]), STR_89(CODE[3]), STR_84(CODE[3]), 
		 -> STR_79(CODE[3]), STR_75(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_98(CODE[3]), STR_94(CODE[3]), STR_89(CODE[3]), STR_84(CODE[3]), 
		 -> STR_79(CODE[3]), STR_75(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 121
		 -> ct(STACK[3]), STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), 
		 -> STR_48(CODE[19]), STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[23]), 
		 -> STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), 
		 -> STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 121
		 -> ct(STACK[3]), STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), 
		 -> STR_48(CODE[19]), STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[23]), 
		 -> STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), 
		 -> STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_46(CODE[9]), STR_45(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_46(CODE[9]), STR_45(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_70(CODE[4]), STR_69(CODE[4]), STR_66(CODE[4]), STR_65(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_70(CODE[4]), STR_69(CODE[4]), STR_66(CODE[4]), STR_65(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_44(CODE[3]), STR_43(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), 
		 -> STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[23]), 
		 -> STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), 
		 -> STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S6155_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    f1p	PTR  size(2) Largest target is 299
		 -> C(BIGRAM[299]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_46(CODE[9]), STR_45(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_46(CODE[9]), STR_45(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_46(CODE[9]), 
		 -> STR_45(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[5]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4592tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_46(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_45(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1995spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1995spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  478424
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0   10948
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         9     5      4     687
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1   10561
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31221
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   12957
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  248792
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0  124143
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (18) _sprintf                                            96    10     86   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   94094
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   93830
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31190
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1   31115
                             _printf
                     _ringBufS_flush
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    9380
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    7144
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (17) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR5_ISR                                           15    15      0    7483
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR5_CallBack                                       0     0      0    7393
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultInterruptHandler                        0     0      0    7393
                     _check_day_time
 ---------------------------------------------------------------------------------
 (18) _check_day_time                                      4     4      0    7393
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
 ---------------------------------------------------------------------------------
 (19) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    7144
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR3_ISR                                           25    25      0   35586
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR3_CallBack                                       0     0      0   35496
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (17) _calc_bsoc                                           6     6      0   35496
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _sprintf                                            96    10     86   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (18) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (18) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (17) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (28) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (28) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 27
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fladd
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
       ___fltol
       ___xxtofl
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
       _wdtdelay
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fladd
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     50D      69       15.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      FF      13       99.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E7       9       90.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      EF       7       93.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      27       1       61.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     460      58        0.0%
DATA                 0      0     96D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Jan 15 03:28:45 2020

                     _SPI1_Exchange8bit BF28                __end_of_set_display_info BFA0  
                                     _C 06FF                                       _D 082A  
                                     _H 00F7                                       _P 009E  
                                     _R 0100                                       _S 0254  
                                     _T FABB                                       _V 0130  
      __end_of_TMR5_SetInterruptHandler BC66            __end_of_start_switch_handler BF08  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FBC3                  __end_of_FVR_Initialize C19E  
                        _check_day_time 883A                             __CFG_LVP$ON 000000  
                                   l169 C07A                                     l807 BF36  
                                   l673 BB1E                                     _GIE 01FE97  
                                   _abs B598                                     _pad 9AF6  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize C026  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack BE5C  
                     _update_adc_result B86A                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 011A                           _INT1_CallBack BDF0  
                          __CFG_ZCD$OFF 000000                                    l1002 B7E4  
                                  l2033 3A68                                    l1340 18FE  
                                  l1324 12A2                                    l2037 3D6E  
                                  l3013 45A2                                    l1190 B824  
                                  l1350 19A0                                    l1342 1904  
                                  l2223 066A                                    l2312 6106  
                                  l1360 1BA6                                    l1361 1DD0  
                                  l2138 9B52                                    l3115 7BB8  
                                  l1603 B92C                         _timer3ReloadVal 00C4  
                                  l3053 8674                                    l2158 58D4  
                                  l2238 0B1A                                    l1366 2360  
                                  l2079 740C                                    l2194 123A  
                                  l2362 3342                                    l1459 B248  
                                  l3084 B5D8                                    l3076 8B66  
                                  l2276 74FA                                    l1662 B8C0  
                                  l1719 BF9C                                    l1671 831A  
                                  l1832 8830                                    l1584 A7EA  
                                  l3184 98BA                                    l1672 8476  
                                  l2297 682C                                    l3451 825E  
                                  l1588 AB04                                    l1781 57F0  
                                  l2654 A52C                    _ADCC_StartConversion C094  
                                  l1679 9D16                                    l2665 9140  
                                  l2658 906C                                    l3466 ADB4  
                                  l1892 89D0                                    l2932 4D5E  
                                  l2692 8FDE                                    l1958 AC2A  
                                  l3479 AD30                                    l1967 9F22  
                                  l1879 A114                                    l1896 89C8  
                                  l2944 4BEE                                    l8002 B5C8  
                                  l8020 8B08                                    l8100 AD20  
                                  l8016 8B04                                    l2977 52D8  
                                  l8202 4DFE                                    l8122 7784  
                                  l8026 8B5E                                    l8140 789C  
                                  l8116 7730                                    l8044 ADA4  
                                  l8302 519E                                    l8222 4EDC  
                                  l8206 4E14                                    l8240 4F9A  
                                  l8216 4E9C                                    l8208 4E44  
                                  l8128 77CA                                    l8160 7E66  
                                  l8072 66B8                                    l8322 5254  
                                  l8306 51A4                                    l8234 4F60  
                                  l8226 4EF2                                    l8082 67BE  
                                  l8074 6708                                    l8058 659A  
                                  l8316 5218                                    l8228 4F22  
                                  l8334 52AC                                    l8078 6750  
                                  l8440 4396                                    l8360 3E1E  
                                  l8352 3DD8                                    l7800 494A  
                                  l8336 52BC                                    l8328 5284  
                                  l8248 4FB4                                    l8176 7F9A  
                                  l8168 7EEE                                    l8520 92E8  
                                  l8450 43D8                                    l8370 3EA6  
                                  l8362 3E4E                                    l7810 4986  
                                  l7730 4688                                    l8610 902A  
                                  l8282 5112                                    l8274 50E0  
                                  l8266 507A                                    l8258 5044  
                                  l9330 7A2A                                    l9314 7968  
                                  l8514 92D2                                    l8602 A52A  
                                  l8460 4422                                    l8380 3F1C  
                                  l7804 496A                                    l7724 4642  
                                  l8620 9108                                    l8292 5154  
                                  l8268 508C                                    l8276 50E4  
                                  l8196 4DBE                                    l9340 7B0C  
                                  l9332 7A42                                    l9324 79FE  
                                  l9316 798A                                    l8540 93AE  
                                  l8446 43B2                                    l8358 3E18  
                                  l7806 497C                                    l7814 49B6  
                                  l7742 46F2                                    l7718 4602  
                                  l9350 7BA8                                    l9334 7A66  
                                  l8526 9308                                    l8710 9436  
                                  l8464 4428                                    l8376 3EE6  
                                  l7920 4D0E                                    l7904 4CBA  
                                  l7832 4A52                                    l7760 479A  
                                  l7752 4748                                    l7736 46C0  
                                  l7728 4658                                    l8616 90BA  
                                  l8288 512E                                    l9336 7AA4  
                                  l8560 99FE                                    l8474 449C  
                                  l8378 3EEC                                    l7914 4CE6  
                                  l7834 4A64                                    l7842 4AA0  
                                  l7754 4778                                    l7690 A966  
                                  l8492 4550                                    l8484 450C  
                                  l8388 3F3E                                    l7748 4732  
                                  l8628 913E                                    l7692 A988  
                                  l8548 93E2                                    l8564 9A10  
                                  l8636 B496                                    l8494 456A  
                                  l8478 44E2                                    l7926 4D3E  
                                  l7918 4CFE                                    l7854 4B78  
                                  l7838 4A6E                                    l7790 48D8  
                                  l8734 B334                                    l8670 8F76  
                                  l8662 8F4A                                    l8646 8EC8  
                                  l9366 80D0                                    l8718 94E2  
                                  l7872 4C10                                    l7864 4BD2  
                                  l7856 4B9E                                    l9632 8530  
                                  l9624 84C4                                    l9704 55A6  
                                  l8568 9A28                                    l8672 8F8C  
                                  l8664 8F66                                    l9368 813C  
                                  l7874 4C22                                    l9634 853E  
                                  l9722 57BE                                    l9730 57D0  
                                  l8586 9ADC                                    l8578 9AA8  
                                  l8594 A4B4                                    l7892 4C5C  
                                  l9644 85A0                                    l9636 8554  
                                  l9716 5722                                    l9708 5642  
                                  l7878 4C2E                                    l9646 85BE  
                                  l9638 8572                                    l8598 A4F6  
                                  l8686 8D44                                    l7888 4C56  
                                  l9656 85F2                                    l9648 85D4  
                                  l9666 8654                                    l9682 5314  
                                  l8698 8E16                                    l9836 8904  
                                  l9692 5466                                    l9676 52E4  
                                  l9748 BB96                                    l9924 BAB2  
                                  STR_1 FF1E                                    l9848 8976  
                                  l9696 5574                                    STR_2 FF09  
                                  STR_3 FFD2                                    l9866 B936  
                                  STR_4 FECA                                    STR_5 FEA0  
                                  STR_6 FEA0                                    STR_7 FEA0  
                                  l9958 B370                                    STR_8 FEB5  
                                  STR_9 FC84                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u6110 6532                                    u5400 A9B6  
                                  u7000 9334                                    u6040 8B56  
                                  u6120 657E                                    u6050 8B58  
                                  u6210 B65C                                    _T6PR 003F93  
                                  u6035 8B38                                    u6115 6528  
                                  u7020 93CE                                    u6220 B65E  
                                  _PMD0 0039C0                                    _PMD1 0039C1  
                                  u6310 7780                                    u5430 BA36  
                                  u6230 ACDE                                    _PMD2 0039C2  
                                  u5407 A9A8                                    _PMD3 0039C3  
                                  u5600 49CE                                    u7200 8EA8  
                                  u6160 665E                                    u5440 BA38  
                                  u6080 AD62                                    u6240 ACE0  
                                  _PMD4 0039C4                                    u6321 778A  
                                  u6145 65B8                                    _PMD5 0039C5  
                                  u6330 77C4                                    u6410 7E60  
                                  u7130 A526                                    u7210 8EBC  
                                  u6146 65BE                                    u6090 AD64  
                                  _PMD6 0039C6                                    u6147 65CC  
                                  _PMD7 0039C7                                    u5700 4BC0  
                                  u5540 48FE                                    u6260 BA66  
                                  u6340 77F6                                    u7220 8EF6  
                                  u6180 6736                                    u7205 8E9E  
                                  u6165 6654                                    u7301 8D04  
                                  u5550 491E                                    u6270 BA68  
                                  u6430 7EB6                                    u7070 9A54  
                                  u7310 8D3E                                    u5551 4918  
                                  u5800 4CAA                                    u6360 78D4  
                                  u6440 7EE8                                    u7320 8D70  
                                  u7225 8EEC                                    u6185 672C  
                                  u7410 B310                                    u6290 772A  
                                  u6450 7F1A                                    u7090 9AC8  
                                  u5740 4C34                                    u5660 4A96  
                                  u7420 B330                                    u6380 7926  
                                  u7340 8E4E                                    u5805 4C9A  
                                  u5830 4CCA                                    u5590 49AE  
                                  u6710 51F2                                    u6630 510C  
                                  u9030 85E8                                    u6470 7FD2  
                                  u7190 B492                                    u7270 8F94  
                                  u5760 4C4E                                    u5568 4920  
                                  u6720 522C                                    u7360 9430  
                                  u5665 4A86                                    u6730 5268  
                                  u9114 5350                                    u6490 8024  
                                  u7290 8FBE                                    u7370 9462  
                                  u5595 499E                                    u6715 51E2  
                                  u9115 534A                                    u6820 3F2C  
                                  u6670 5196                                    u9134 558E  
                                  u7390 951A                                    u5870 BA06  
                                  u9135 5588                                    u8520 79FA  
                                  u5880 BA08                                    u9410 B004  
                                  u6930 4476                                    u9154 565C  
                                  u9074 52FE                                    u6835 40C0  
                                  u9155 5656                                    u9075 52F8  
                                  u6940 44B0                                    u9180 5686  
                                  u8540 7B52                                    u5980 B5AC  
                                  u6845 4188                                    u6950 44F6  
                                  u9174 567E                                    u9094 532E  
                                  u8550 7B54                                    u5990 8A88  
                                  u8630 8204                                    u6935 4466  
                                  u6855 4350                                    u9175 5678  
                                  u9095 5328                                    u8640 8232  
                                  u6890 441A                                    u9530 8694  
                                  u9435 B038                                    u9355 B698  
                                  u5995 8A7E                                    u8635 81FE  
                                  u9436 B03A                                    u9428 B006  
                                  u9620 BED2                                    u8637 81F0  
                                  u8590 816A                                    u9710 ABD0  
                                  u8647 8224                                    u9626 BED4  
                                  _PLLR 01CEE0                                    u9740 AC16  
                                  u8597 815C                                    u9485 C0C0  
                                  u9486 C0C2                                    u9495 C0B0  
                                  u9496 C0B2                                    u9728 ABD2  
                                  u9758 AC18                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR BAF8  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0297  
                                  _cp_h FBD3                                    _cp_l FBCF  
                                  _atoi 794E                                    _ctoa AC2E  
                                  _main 1244                                    _dtoa 57F6  
                                  _nanf B122                                    _seed 00CF  
                                  _prec 003C                                    _nout 00C0  
                                  _spin FB4B                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 7410                                    btemp 0001  
                                  _utoa 67E8                                    _xtoa 60C2  
                __end_of_check_adc_scan C186                           ___fpclassifyf 89DA  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 00C8  
             __end_of_SPI1_Exchange8bit BF46               __size_of_clear_hid_pflags 0024  
                       _TMR3_Initialize B550             __size_of_set_load_relay_one 0010  
           __size_of_set_load_relay_two 0010                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr BD30                            ___param_bank 000000  
                __end_of_check_day_time 89DA                      ?_UART1_rx_vect_isr 0021  
                      __end_of_INT0_ISR C12E                        __end_of_INT1_ISR B86A  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma A7F2  
         __end_of_OSCILLATOR_Initialize C080                                   l11002 A57A  
                                 l12002 00AC                                   l10420 86E2  
                                 l10412 86B6                                   l12100 0594  
                                 l11052 9E30                                   l11046 60B4  
                                 l12110 0602                                   l12014 00F0  
                                 l12022 0146                                   l10352 B3CE  
                                 l11152 ADF6                                   l10424 86F6  
                                 l12032 01EA                                   l12040 0258  
                                 l10504 B88A                                   l11064 9E8C  
                                 l12130 06F0                                   l12050 02FC  
                                 l12034 0216                                   l11074 9EFC  
                                 l10348 B39C                                   l10532 9554  
                                 l11092 B7A2                                   l12204 0D24  
                                 l12212 0D90                                   l12220 0EA2  
                                 l12108 05F6                                   l12036 022C  
                                 l13100 146E                                   l11158 AE06  
                                 l10534 9564                                   l10462 B8D6  
                                 l12126 06B8                                   l12070 0406  
                                 l10560 9658                                   l10552 95DE  
                                 l10536 9572                                   l10544 957A  
                                 l12232 0F3A                                   l12160 0A48  
                                 l12136 077A                                   l12072 0470  
                                 l12320 7530                                   l12304 747C  
                                 l13200 19B2                                   l10546 95A6  
                                 l12170 0B34                                   l12146 0926  
                                 l12066 0396                                   l12058 032A  
                                 l12402 6130                                   l13050 12BC  
                                 l13042 1284                                   l12092 057C  
                                 l12076 04D2                                   l12324 756C  
                                 l10572 ABE4                                   l13212 1AB2  
                                 l13044 128C                                   l10726 BFB8  
                                 l12246 0FD6                                   l12094 058E  
                                 l12342 768E                                   l12334 7626  
                                 l10662 9900                                   l12248 0FF0  
                                 l12184 0C32                                   l12168 0B12  
                                 l12088 0554                                   l12328 759C  
                                 l12432 62C2                                   l12416 61CC  
                                 l12408 616C                                   l12440 6348  
                                 l12520 2654                                   l10920 716A  
                                 l13224 1FF2                                   l13240 2214  
                                 l13048 12AA                                   l10738 BB1A  
                                 l12258 1092                                   l12338 7652  
                                 l12602 2D36                                   l10922 716E  
                                 l10666 99A4                                   l13170 1936  
                                 l13146 16D6                                   l10764 B7CC  
                                 l12284 119A                                   l12268 10E2  
                                 l12196 0CBA                                   l12364 6878  
                                 l12356 681C                                   l12612 2DE4  
                                 l12516 2604                                   l10932 71AA  
                                 l13228 2054                                   PRLOCK 0039EF  
                                 l10782 B80C                                   l11814 97D0  
                                 l11830 AA30                                   l12374 6A6E  
                                 l12622 2F06                                   l12518 263E  
                                 l10918 715A                                   l13254 2266  
                                 l13238 21E8                                   l13190 1990  
                                 l13182 196A                                   l13158 17B0  
                                 l12456 6432                                   l12632 2FBC  
                                 l12536 27B8                                   l10944 71FC  
                                 l10928 719E                                   l13168 1908  
                                 l10882 8CD0                                   l11826 A9F2  
                                 l12570 2AEA                                   l12554 293C  
                                 l12546 2850                                   l12714 A6C8  
                                 l10938 71D4                                   l10890 A130  
                                 l13282 2310                                   l13274 22DA  
                                 l13258 228A                                   l11916 AC4C  
                                 l12396 60F6                                   l12660 3270  
                                 l12716 A70A                                   l11852 6FAA  
                                 l12740 A7FE                                   l10964 727C  
                                 l10956 7256                                   l10948 7208  
                                 l13276 22F2                                   l13268 22C8  
                                 l12830 3562                                   l12822 348A  
                                 l11918 AC78                                   l11950 590E  
                                 l11942 58C4                                   l12670 32CE  
                                 l12646 3138                                   l12582 2BD6  
                                 l12558 2990                                   l12494 2482  
                                 l11846 6EEC                                   l12742 A808  
                                 l12750 A81E                                   l13286 2336  
                                 l12496 24BC                                   l12744 A816  
                                 l12752 A84A                                   l10896 A1D6  
                                 l13296 238C                                   l12842 36B8  
                                 l12826 34F6                                   l12818 3436  
                                 l11882 9B4A                                   l11954 592C  
                                 l12666 32CA                                   l12578 2BA2  
                                 l12498 24D2                                   l11866 70C2  
                                 l11858 7014                                   l12738 A7F6  
                                 l10986 73D4                                   l12852 390A  
                                 l11892 9BE2                                   l11884 9B5C  
                                 l11964 5B3E                                   l12676 32EE  
                                 l10988 73FC                                   l12862 3A78  
                                 l12838 3664                                   l11878 9B22  
                                 l12694 A8F2                                   l12774 9C2E  
                                 l10998 A53C                                   l12848 3890  
                                 l11888 9B98                                   l11984 5BF0  
                                 l12866 3A9A                                   l12858 39D0  
                                 l11898 A3E6                                   l11988 5C2C  
                                 l12980 82EA                                   l12878 3D66  
                                 l12994 8412                         __end_of___aodiv 794E  
                          _Volts_to_SOC 98C4                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 4D68  
                                 _ADCLK 003EFF                         __end_of___aomod 8048  
                                 _ADPCH 003EF1                         __end_of___fldiv 52E2  
                                 _ADREF 003EFD                         __end_of___awdiv 93FC  
                       __end_of___flneg B4C0                                   STR_10 FD56  
                                 STR_11 FE32                                   STR_12 FEDF  
                                 STR_21 FF83                                   STR_13 FEF4  
                                 STR_14 FF48                                   STR_30 FE5E  
                                 STR_22 FE1C                                   STR_15 FF33  
                                 STR_23 FE06                                   STR_31 FD6C  
                                 STR_40 FE8A                                   STR_24 FDF0  
                                 STR_32 FD82                                   STR_16 FD40  
                                 STR_41 FE8A                                   STR_25 FDDA  
                                 STR_33 FD98                                   STR_17 FC50  
                         __CFG_WDTE$OFF 000000                                   STR_50 FFBF  
                                 STR_42 FE8A                                   STR_26 FDC4  
                                 STR_34 FCE4                                   STR_18 FC6A  
                                 STR_43 FFFC                                   STR_51 FFA4  
                                 STR_19 FF94                                   STR_27 FDAE  
                                 STR_35 FD29                                   STR_52 FFA4  
                                 STR_44 FFF9                                   STR_28 FE74  
                                 STR_36 FCCD                         __end_of___awmod 9AF6  
                                 STR_53 FFA4                                   STR_45 FFB3  
                                 STR_29 FE48                                   STR_37 FCB6  
                                 STR_70 FFE3                                   STR_46 FFC9  
                                 STR_38 FCFB                                   STR_54 FC9E  
                                 STR_63 FC4F                                   STR_47 FF5D  
                                 STR_39 FD12                                   STR_48 FF5D  
                                 STR_56 FF70                                   STR_64 FBD7  
                                 _ADRPT 003EEC                                   STR_73 FFEA  
                                 STR_65 FFD7                                   STR_49 FFBF  
                                 STR_82 FFED                                   STR_66 FFDF  
                                 STR_75 FFEA                                   STR_84 FFED  
                                 STR_92 FFF6                                   STR_77 FFF0  
                                 STR_69 FFDB                                   STR_94 FFF6  
                                 STR_79 FFF0                                   STR_87 FFF3  
                                 STR_96 FFE7                         __end_of___flmul 45AC  
                                 STR_89 FFF3                                   STR_98 FFE7  
                       __end_of___flsub B624                         __end_of___fltol 8FE8  
                                 u11000 5BAC                                   u11010 5BB0  
                                 u11100 0194                                   u11030 5BC6  
                                 u11110 0196                                   u12010 269C  
                                 u11220 0562                                   u11140 02A6  
                                 u12100 2A18                                   u12020 269E  
                                 u11150 02A8                                   u11070 00DA  
                                 u12030 26C4                                   u12200 3010  
                                 u11250 05C6                                   u12130 2C90  
                       __end_of___lodiv 8E76                                   u12220 31C0  
                                 u12140 2C92                                   u10710 97C4  
                                 u11190 050E                                   u11520 10B8  
                                 u11360 0A18                                   u12080 28A4  
                                 u12240 A8D2                                   u10730 9840  
                                 u11290 0648                                   _U1P1H 003DED  
                                 u10900 5828                                   u11540 116E  
                                 u11460 0EE4                                   u11620 7592  
                                 u12500 8462                                   _U1P2H 003DEF  
                                 u11550 1170                                   u11630 75D8  
                                 u12510 8464                                   _U1P1L 003DEC  
                                 _U1P3H 003DF1                                   u11711 6AB0  
                                 _T3CLK 003FA9                                   u10920 5898  
                                 u10840 A460                                   u11720 6AC6  
                                 u11800 6218                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   u11721 6AC4  
                                 u11730 6ADA                                   u11810 621A  
                                 _U1P3L 003DF0                                   u10940 58AA  
                                 u11660 76B4                                   u11740 6ADE  
                                 u11900 63BE                                   u12700 2282  
                                 u11637 75CA                                   u11910 63C2  
                                 u11830 6278                                   u10790 7136  
                                 _U2P1L 003DD4                                   u10847 A452  
                                 u10960 58FA                                   u11680 6802  
                                 u11840 627A                                   u11760 60DC  
                                 u12560 1588                                   _T3CON 003FA6  
                                 _U2P2L 003DD6                                   u10970 5B52  
                                 u10890 5826                                   u12706 2284  
                                 _U2P3L 003DD8                                   u11860 6344  
                                 u12580 17DE                                   u10981 5B82  
                                 u10990 5B98                                   u11870 6364  
                                 u11790 61C4                                   u10991 5B96  
                                 _T5CLK 003F9D                                   u11960 251A  
                                 u12680 2256                         __end_of___lomod 953C  
                                 u11881 6394                                   u11865 6326  
                                 u11890 63AA                                   u11970 251C  
                                 u12690 2270                                   u11891 63A8  
                                 u11980 2542                                   _T2HLT 003FAD  
                                 u12686 2258                                   u12696 2272  
                                 _T5CON 003F9A                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 00AB                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 0026                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR3H 003FA5  
                                 _TMR5H 003F99                                   _TMR3L 003FA4  
                                 _TMR5L 003F98               __end_of_update_adc_result B8A4  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR C1B8                 __size_of_clear_adc_scan 0006  
     __size_of_TMR3_SetInterruptHandler 0028       __size_of_TMR6_SetInterruptHandler 0028  
                         __CFG_WRTB$OFF 000000                        __end_of_TMR3_ISR 92AE  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR A2CA                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR C00E                            _DMA1CON1bits 003BFD  
            __size_of_send_lcd_data_dma 004A                                   _fabsf A5EE  
                                 _flags 003E                __size_of_calc_model_data 044C  
                          _DMA2CON0bits 003BDC                            _DMA2CON1bits 003BDD  
          __end_of_get_ac_charger_relay C11E                                   _fputc 97A0  
            __size_of_send_lcd_cmd_long 0040                         __end_of_isalpha B668  
                                 _fputs A9E2                         __end_of_isdigit BA72  
                       __end_of_ivln2_h FBCF                      __CFG_MCLRE$EXTMCLR 000000  
                                 _srand B94A                                   _width 003A  
                                 _putch BFDA            __end_of_set_ac_charger_relay C0E6  
                       __end_of_islower BA12                         __end_of_isspace B344  
              _INT1_SetInterruptHandler BC8E                         __end_of_isupper BA42  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0001                                   ltemp1 0005  
                                 ltemp2 0009                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0001                                   ttemp1 0004  
                                 ttemp2 0007                                   ttemp3 000A  
                                 ttemp5 0002                                   ttemp6 0005  
                                 ttemp7 0009                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler BC16             _UART1_SetRxInterruptHandler BBEE  
                                 wtemp0 0001                                   wtemp1 0003  
                                 wtemp2 0005                                   wtemp3 0007  
                                 wtemp4 0009                                   wtemp5 000B  
                                 wtemp8 0002                         __end_of_sprintf 9E24  
                       __end_of_tolower ADBE                         __end_of_strncmp 8268  
                       __end_of_toupper AD3A               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr BD58                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize B508                   __end_of_ringBufS_init BB76  
                       __initialization A2CA                       _UART2_rx_vect_isr BD80  
                          __end_of_cp_h FBD7                            __end_of_cp_l FBD3  
                          __end_of_atoi 7BC2                            __end_of_ctoa ACB6  
                          __end_of_main 23A0                            __end_of_dtoa 5C76  
                          __end_of_nanf B184                            __end_of_spin FBC3  
                          __end_of_stoa 76CE                            __end_of_utoa 6B28  
                          __end_of_xtoa 647C                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0021                 __end_of_TMR2_Initialize C03E  
                 __end_of_send_lcd_data BDCC                __size_of_DMA2_Initialize 005A  
            __end_of_check_enter_button B7AA                _TMR5_SetInterruptHandler BC3E  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
                 _TMR3_InterruptHandler 00A2                       _port_data_dma_ptr C148  
                    esr_check@esr_state 0040                     ??_UART2_rx_vect_isr 0026  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize BB24  
                       _PWM8_Initialize C054                        _UART1_Initialize B4C0  
                     _UART2_tx_vect_isr BD58                      _UART2_Transmit_ISR BAF8  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan B05C  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue B668  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0021                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                i1l1019 A27A                                  _RB6PPS 003A0E  
                                i1l1207 9216                    _start_switch_handler BEE8  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize B598                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright C102  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u921_25 C0E0                                  u921_26 C0E2  
                                u940_20 C11A                                  u926_20 8890  
                                u947_20 B8E4                                  u947_26 B8E6  
                                u964_20 956E                                  u963_28 955A  
                                u964_21 9568                    __size_of_hid_display 0102  
                                u968_24 964E                                  u968_25 964A  
                                u993_48 BE6C                                  u995_28 BE00  
                      __end_of___xxtofl 867E   __end_of_ADCC_DischargeSampleCapacitor C17E  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor C176  
              __end_of_send_lcd_cmd_dma BF64                         _TMR3_WriteTimer B7EA  
                   ??_UART2_tx_vect_isr 0026               __end_of_UART2_rx_vect_isr BDA8  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize C13E  
                      _UART2_Initialize B184                                  _WaitMs B914  
                       _conv_raw_result 52E2                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 8FE8  
                                ___fleq A472                       _ADCC_ThresholdISR AF8C  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush AA7A  
                                _efgtoa 0000                                  _floorf 647C  
                    ?_ADCC_ThresholdISR 0021                                  _memset 6E54  
                  __size_of_help_button 0038                                  clear_0 A33C  
                                clear_1 A350                                  clear_2 A362  
                                clear_3 A36E                                  clear_4 A37A  
                                clear_5 A386               __end_of_port_data_dma_ptr C152  
                                _printf B0C0                      _eaDogM_WriteString A89A  
                                _strcpy A39E                               ?_ADCC_ISR 0021  
                                _strlen A940                      __size_of_TimerDone 0028  
                          __pdataBIGRAM 04FF                         _ADCC_Initialize AF22  
                        _PMD_Initialize C080              __size_of_update_adc_result 003A  
             __end_of_UART2_tx_vect_isr BD80                                  lltemp0 0001  
                                lltemp1 0009                                  lltemp2 0011  
                                lltemp3 0019                     ??_ADCC_ThresholdISR 0021  
                __end_of_start_adc_scan B0C0                            __mediumconst F9EA  
                                preinc2 003FDC                  __size_of_init_port_dma 0030  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay B298  
                      __end_of_spinners A1E6                        __end_of_vfprintf A748  
                            _StartTimer B72A                      __size_of___asfladd 0078  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize B550  
                     _SYSTEM_Initialize B42E                              __accesstop 0060  
               __end_of__initialization A398                               ?_INT0_ISR 0021  
                             ?_INT1_ISR 0021                    __end_of_display_help C196  
                  __end_of_display_info C18E               __end_of_CLKREF_Initialize C148  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0028  
                       _TMR5_WriteTimer B7AA                   _set_temp_display_help C0C6  
                      _clear_hid_pflags BDCC                   __end_of_TMR3_CallBack BE5C  
             __end_of_ADCC_ThresholdISR AFF6                      __size_of_calc_bsoc 0A36  
                __end_of_ringBufS_flush AB0C                          __pcstackCOMRAM 0021  
                            ___inthi_sp 115E                              ___intlo_sp 18AF  
                          __pidataBANK0 C0E6                            __pidataBANK1 9F26  
           __size_of_send_port_data_dma 0052                           __end_of_fabsf A69C  
                             ?_TMR3_ISR 0021                               ?_TMR5_ISR 0021  
                             ?_TMR6_ISR 0021                          ivt0x8_undefint 00AC  
                         __end_of_fputc 98C4                           __end_of_fputs AA7A  
                  _get_ac_charger_relay C110                           __end_of_srand B97E  
                 __end_of_TMR5_CallBack BE38                           __end_of_putch BFF4  
                  _set_ac_charger_relay C0D6                 __end_of_PWM8_Initialize C06A  
               __end_of_TMR6_Initialize BB4E                       _adc_int_t_handler ADBE  
                __end_of_PMD_Initialize C094                              __end_of_bp FBCB  
                            ??_ADCC_ISR 0021                   __end_of_TMR6_CallBack BEA4  
           __size_of_EXT_INT_Initialize 0034                calc_bsoc@log_update_wait 0041  
                __size_of_calc_ror_data 0186                           _DMA1_DMAA_ISR C160  
                 TMR3_ISR@CountCallBack 00C2                          _clear_adc_scan C19E  
                    __size_of_hid_input 0090                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 00B7               __end_of_SYSTEM_Initialize B478  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
               __end_of_TMR3_WriteTimer B82A                              __pbssBANK0 0060  
                            __pbssBANK2 0200                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              _check_help 8268  
               __end_of_conv_raw_result 57F6                      __size_of_esr_check 02D0  
                 _INT0_InterruptHandler 00BD                              ??_INT0_ISR 0021  
                            ??_INT1_ISR 0027                       __end_of_TimerDone BB9E  
                      _DMA1_DMADCNT_ISR C154                      __size_of_init_bsoc 0246  
            __size_of_UART2_rx_vect_isr 0028                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01BC                           _init_port_dma B9B2  
                 __end_of_wait_lcd_done BFDA        __end_of_TMR3_SetInterruptHandler BC8E  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler BC3E  
                            ??_TMR3_ISR 00D7                 __end_of_ADCC_Initialize AF8C  
                            ??_TMR5_ISR 002B               __end_of_adc_int_t_handler AE40  
                            ??_TMR6_ISR 0026                       __end_of___asfladd AEB8  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
  __end_of_ADCC_SetADTIInterruptHandler BD06   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler BCDE                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7              __size_of_port_data_dma_ptr 000A  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR BFA0                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan C1A4  
                               u1001_48 BE90                                 u1004_28 BE24  
                               u1033_44 AE26                                 u1033_45 AE20  
                        ?_DMA1_DMAA_ISR 0021                        _DMA1_DMASCNT_ISR C130  
                               _U1ERRIE 003DFA                      __size_of_set_vterm 001E  
                               _U1ERRIR 003DF9                                 u1236_20 39C0  
                               u1243_28 BE48                                 _U2ERRIE 003DE2  
                               u1238_20 3A8A                                 _U2ERRIR 003DE1  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0021  
            __size_of_UART2_tx_vect_isr 0028                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0FAC                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                       __end_of_calc_bsoc 3D82  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch BAA0  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer B7EA  
               __size_of_switch_handler 0136                      __size_of_stop_bsoc 0006  
            __end_of_set_load_relay_one C0C6              __end_of_set_load_relay_two C0B6  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
                         _calc_ror_data 8B70                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim C00E                                 __Lparam 0000  
              __end_of_UART1_Initialize B508                       __end_of_hid_input AC2E  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 76CE  
                               ___fladd 45AC                                 ___aomod 7E08  
                               ___fldiv 4D68                                 ___awdiv 92AE  
                               ___flneg B478                                 ___awmod 99DE  
                               ___flmul 3D82                                 ___flsub B5DE  
                               ___fltol 8E76                                 ___lodiv 8CF6  
                               ___lomod 93FC               __end_of_UART1_Receive_ISR BFBE  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display A100                                 __pcinit A2CA  
              __end_of_mode_lamp_bright C110                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand C0F4  
                               __ramtop 2000                                 __ptext0 1244  
                               __ptext1 B1E4                                 __ptext2 BEE8  
                               __ptext3 B94A                                 __ptext4 A100  
                               __ptext5 B9B2                                 __ptext6 A016  
                               __ptext7 BDA8                                 __ptext8 B6AA  
                               __ptext9 B6EA                       __end_of_esr_check 7410  
                     _UART2_Receive_ISR BF08                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize C06A  
                          __size_of_abs 0046                                 us650999 8036  
                               us740999 952C                            __size_of_pad 0114  
                     __end_of_init_bsoc 7E08                                 _isalpha B624  
                               us639999 7938                                 us735999 8E60  
                               _isdigit BA42                                 _ivln2_h FBCB  
                             _T3CONbits 003FA6                                 _mode_sw 00CA  
                     __end_of_lp_filter 883A                                 _islower B9E2  
                               _isspace B2F2                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                __end_of_UART2_Initialize B1E4  
                               _isupper BA12              __size_of_SYSTEM_Initialize 004A  
                               _sprintf 9D1A                                 _tolower AD3A  
                 __size_of_display_help 0008                                 _utctime 0096  
                 __size_of_display_info 0008                                 _strncmp 8048  
                               _toupper ACB6                    end_of_initialization A398  
             __size_of_convert_adc_data 00B8                      _check_enter_button B76A  
                             i1u1252_20 920C     __end_of_UART2_SetRxInterruptHandler BBEE  
           _UART2_SetRxInterruptHandler BBC6                               i2u1040_48 BD44  
                             i2u1042_48 BD6C                               i2u1044_48 BD94  
                             i2u1036_48 BAE4                               i2u1038_48 AFC2  
                             i2u1038_49 AFD6                 check_day_time@day_delay 0042  
                     __end_of_set_vterm BF82                       __end_of_vfpfcnvrt 334C  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 0082  
                   __size_of_StartTimer 0040                       __end_of_start_lcd C1B0  
             __end_of_UART2_Receive_ISR BF28                          wdtdelay@dcount 009A  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 0027  
                 _INT1_InterruptHandler 00BA                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc C1B6                _TMR3_SetInterruptHandler BC66  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler BC16  
                          _display_help C18E                   _TMR5_InterruptHandler 00A5  
                          _display_info C186    __size_of_UART2_SetTxInterruptHandler 0028  
              __end_of_clear_hid_pflags BDF0                       __size_of_ADCC_ISR 002C  
   __end_of_ADCC_SetADIInterruptHandler BD2E             _ADCC_SetADIInterruptHandler BD06  
                            _update_lcd 9C0A                         _calc_model_data 5C76  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                            _static_soc B1E4                         _DMA1_Initialize AEB8  
                            _start_bsoc BEC6                  __size_of_send_lcd_data 0024  
                       _SPI1_Initialize C03E                   __end_of_get_vterm_ptr BAA0  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs B94A            __end_of_INTERRUPT_Initialize B05C  
                            _vterm_dump 9672                          __end_of___flge 914A  
                        __end_of___fleq A536    __end_of_INT0_DefaultInterruptHandler C1C4  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler C1C2  
            __size_of_UART1_Receive_ISR 001E                         _DMA2_Initialize B298  
                         __pidataBIGRAM 6B28                          __end_of_efgtoa 1244  
                     __size_of_TMR3_ISR 0162                       __size_of_TMR5_ISR 00E2  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 67E8             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 007A                          __end_of_memset 7140  
                        __end_of_printf B122                __end_of_DMA1_DMADCNT_ISR C15E  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack BE80  
                        __end_of_strcpy A472                          __end_of_strlen A9E2  
                   start_initialization A2CA    __end_of_TMR5_DefaultInterruptHandler B914  
 __size_of_TMR5_DefaultInterruptHandler 0038            _TMR5_DefaultInterruptHandler B8DC  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs B5DE  
                 __end_of_INT1_CallBack BE14               __size_of_set_display_info 001E  
                           __end_of_pad 9C0A                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd B72A                          _switch_handler 953C  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 006C                   __end_of___fpclassifyf 8B70  
                         _uart2RxBuffer 0400                __end_of_DMA1_DMASCNT_ISR C13E  
                         _uart2TxBuffer 0300                          _DMA1_DMAOR_ISR C16C  
                   __end_of_hid_display 9F26              __end_of_send_port_data_dma B396  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone BB76  
                         _ringBufS_init BB4E                             __pdataBANK0 00F0  
                           __pdataBANK1 0100              __size_of_UART2_Receive_ISR 0020  
                   __size_of_get_switch 002C              __end_of_EXT_INT_Initialize B9B2  
               __end_of_calc_model_data 60C2                           _send_lcd_data BDA8  
                   __end_of_help_button B8DC         __end_of_eaDogM_WriteStringAtPos A89A  
                   __end_of_BVSOC_TABLE FABB                               ___asfladd AE40  
                  calc_model_data@bcror 008E                             __pbssBIGRAM 082A  
               __end_of_DMA1_Initialize AF22                    calc_model_data@bvror 0092  
                           __pbssCOMRAM 003A        __end_of_INT0_SetInterruptHandler BCDE  
                         __pcstackBANK0 00D7                __size_of_TMR2_Initialize 0018  
                __size_of_TMR3_CallBack 0024                  __end_of_switch_handler 9672  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize C054  
              _UART1_RxInterruptHandler 00B1                _UART2_TxInterruptHandler 00B4  
                             __end_of_T FB4B                        _convert_adc_data A536  
                             _calc_bsoc 334C               __size_of_ringBufS_put_dma 00AA  
                          _init_display A016                  __end_of_DMA1_DMAOR_ISR C176  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00A8  
                    calc_ror_data@bcror 0086                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize B2F2                      calc_ror_data@bvror 008A  
                _PIN_MANAGER_Initialize AB0C                __size_of_TMR3_Initialize 0048  
                  __end_of_wait_lcd_set C1AA                           __pmediumconst F9EA  
                             __ptext100 4D68                               __ptext101 8FE8  
                             __ptext110 B184                               __ptext102 5C76  
                             __ptext111 BB9E                               __ptext103 C1B0  
                             __ptext120 BC66                               __ptext112 BBC6  
                             __ptext104 BEC6                               __ptext121 C026  
                             __ptext113 B4C0                               __ptext105 867E  
                             __ptext130 BC8E                               __ptext122 C03E  
                             __ptext114 BBEE                               __ptext106 B5DE  
                             __ptext131 BCB6                               __ptext123 C054  
                             __ptext115 BB24                               __ptext107 45AC  
                             __ptext140 C1BE                               __ptext132 B298  
                             __ptext124 C080                               __ptext116 BC16  
                             __ptext108 3D82                               __ptext141 953C  
                             __ptext133 AEB8                               __ptext125 AB0C  
                             __ptext117 B508                               __ptext109 B42E  
                             __ptext150 B7EA                               __ptext142 A1E8  
                             __ptext134 C13E                               __ptext126 C06A  
                             __ptext118 BC3E                               __ptext151 BE38  
                             __ptext143 B7AA                               __ptext135 AF22  
                             __ptext127 AFF6                               __ptext119 B550  
                             __ptext160 C1B8                               __ptext152 C1C0  
                             __ptext144 BE14                               __ptext136 BCDE  
                             __ptext128 C196                               __ptext161 BACC  
                             __ptext153 334C                               __ptext145 B8DC  
                             __ptext137 BD06                               __ptext129 B97E  
                             __ptext170 BD80                               __ptext162 ADBE  
                             __ptext154 B344                               __ptext146 883A  
                             __ptext138 B82C                               __ptext171 BF08  
                             __ptext163 C1C4                               __ptext155 C148  
                             __ptext147 C0D6                               __ptext139 BDF0  
                             __ptext172 BFF4                               __ptext164 C1C6  
                             __ptext156 AE40                               __ptext148 C110  
                             __ptext173 BE80                               __ptext165 AF8C  
                             __ptext157 C120                               __ptext149 914C  
                             __ptext174 B396                               __ptext166 BD30  
                             __ptext158 BE5C                               __ptext175 C130  
                             __ptext167 BFA0                               __ptext159 C1C2  
                             __ptext176 C154                               __ptext168 BD58  
                             __ptext177 C160                               __ptext169 BAF8  
                             __ptext178 C16C                               __ptext179 0000  
                             _hid_input AB9E                      __end_of_StartTimer B76A  
                    _set_load_relay_one C0B6                      _set_load_relay_two C0A6  
                     __size_of_wdtdelay 005A                       __size_of_spinners 00E6  
                     __size_of_vfprintf 00AC                                _ADCC_ISR BACC  
                __CFG_BBSIZE$BBSIZE_512 000000                               fabsf@F463 007E  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
                             _esr_check 7140                 __size_of_get_raw_result 0022  
                        __size_of_fabsf 00AE                               _init_bsoc 7BC2  
                __size_of_wait_lcd_done 001C                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
                             _lp_filter 867E                             _hid_display 9E24  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize AFF6                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0021  
                              _INT0_ISR C120                                _INT1_ISR B82C  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE                                _LATFbits 003FBF  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 027D                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                            _SPI1CON0bits 003D14  
                             _ring_buf1 0383                               _ring_buf2 0340  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack BE38  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
              __size_of_TMR5_Initialize 0048                               _set_vterm BF64  
                   __size_of_update_lcd 0110                             _help_button B8A4  
                              _TMR3_ISR 914C                             _BVSOC_TABLE F9EB  
                              _TMR5_ISR A1E8                                _TMR6_ISR BFF4  
                             _port_data 04FF                     __size_of_static_soc 005A  
                             _vfpfcnvrt 23A0                            _SPI1INTFbits 003D1A  
                   __size_of_start_bsoc 0022                           _TMR5_CallBack BE14  
                            _ADCON0bits 003EF8                      __end_of_check_help 847A  
                             _start_lcd C1AA                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 001E                           _TMR6_CallBack BE80  
                 __size_of_send_lcd_cmd 0040       __size_of_TMR5_SetInterruptHandler 0028  
                             _stop_bsoc C1B0                        _set_display_info BF82  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 A2DE  
                             copy_data1 A304                               copy_data2 A326  
              _INT0_SetInterruptHandler BCB6                     __size_of_vterm_dump 012E  
   __end_of_UART2_SetTxInterruptHandler BBC6             _UART2_SetTxInterruptHandler BB9E  
                          _uart1RxCount 00CE                            _uart2RxCount 00CB  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 00A8  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_conv_raw_result 0514  
                         _wait_lcd_done BFBE                            _send_lcd_cmd B6EA  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
         __size_of_get_ac_charger_relay 000E                        __size_of___aomod 0240  
                       _adc_int_handler C1C6                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                      __size_of___lodiv 0180                        __size_of___lomod 0140  
         __size_of_set_ac_charger_relay 0010                      __end_of_get_switch BACC  
               __size_of_check_day_time 01A0                   __end_of_DMA1_DMAA_ISR C16A  
                    ___fpclassifyf@F463 0082    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0200                                ___xxtofl 847A  
                     ?_DMA1_DMADCNT_ISR 0021             __size_of_check_enter_button 0040  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand C102  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 0027  
                              __ptext10 BF28                                __ptext11 BB4E  
                              __ptext20 C094                                __ptext12 7BC2  
                              __ptext21 C176                                __ptext13 98C4  
                              __ptext30 9672                                __ptext22 C19E  
                              __ptext14 9E24                                __ptext31 9D1A  
                              __ptext23 C17E                                __ptext15 AB9E  
                              __ptext40 A89A                                __ptext32 BA72  
                              __ptext24 C0A6                                __ptext16 BAA0  
                              __ptext41 C1A4                                __ptext33 B914  
                              __ptext25 C0B6                                __ptext17 7140  
                              __ptext50 B9E2                                __ptext42 C1AA  
                              __ptext34 9C0A                                __ptext26 C0F4  
                              __ptext18 B86A                                __ptext51 B624  
                              __ptext43 AA7A                                __ptext35 A7F2  
                              __ptext27 A536                                __ptext19 B05C  
                              __ptext60 A39E                                __ptext52 67E8  
                              __ptext44 6E54                                __ptext36 BF46  
                              __ptext28 BDCC                                __ptext61 647C  
                              __ptext53 93FC                                __ptext45 B0C0  
                              __ptext37 BFBE                                __ptext29 8268  
                              __ptext70 7E08                                __ptext62 89DA  
                              __ptext54 8CF6                                __ptext46 A69C  
                              __ptext38 B23E                                __ptext71 76CE  
                              __ptext63 8E76                                __ptext55 8048  
                              __ptext47 23A0                                __ptext39 B3E4  
                              __ptext80 B2F2                                __ptext72 AC2E  
                              __ptext64 B478                                __ptext56 7410  
                              __ptext48 60C2                                __ptext81 BA42  
                              __ptext73 9AF6                                __ptext65 A472  
                              __ptext57 0000                                __ptext49 ACB6  
                              __ptext90 B72A                                __ptext82 BF64  
                              __ptext74 A940                                __ptext66 99DE  
                              __ptext58 AD3A                                __ptext91 C186  
                              __ptext83 C0C6                                __ptext75 A9E2  
                              __ptext67 92AE                                __ptext59 BA12  
                              __ptext92 C18E                                __ptext84 BF82  
                              __ptext76 97A0                                __ptext68 57F6  
                              __ptext93 B76A                                __ptext85 C00E  
                              __ptext77 BFDA                                __ptext69 B598  
                              __ptext94 8B70                                __ptext86 C102  
                              __ptext78 A748                                __ptext95 A5EE  
                              __ptext87 B668                                __ptext79 794E  
                              __ptext96 52E2                                __ptext88 B8A4  
                              __ptext97 B122                                __ptext89 BB76  
                              __ptext98 BEA4                                __ptext99 847A  
                      __size_of_isupper 0030                        __size_of_sprintf 010A  
                      __size_of_tolower 0084                                us1157999 7422  
                              us1088999 5810                                us1169999 684E  
                              us1178999 6142                        __size_of_strncmp 0220  
                      __size_of_toupper 0084                        _ringBufS_put_dma A748  
                  __end_of_Volts_to_SOC 99DE                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 115C  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_utoa 0340                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0021  
                 __end_of_init_port_dma B9E2                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 00AE  
                             stoa@F1166 00F0                      ??_DMA1_DMASCNT_ISR 0027  
          __end_of_ADCC_StartConversion C0A6                                _spi_link 0060  
                              _wdtdelay B23E              __end_of_UART2_Transmit_ISR BB24  
                              _spinners A100                                _vfprintf A69C  
              __end_of_convert_adc_data A5EE              __end_of_PWM8_LoadDutyValue B6AA  
  __end_of_TMR3_DefaultInterruptHandler C1C2   __size_of_TMR3_DefaultInterruptHandler 0002  
          _TMR3_DefaultInterruptHandler C1C0    __end_of_INT1_DefaultInterruptHandler C1C0  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler C1BE  
                    _send_port_data_dma B344                           ??_Default_ISR 0021  
                           _uart1RxHead 0047                  __size_of_get_vterm_ptr 002E  
                           _uart2RxHead 0043                             _uart1RxTail 0046  
                        _get_raw_result BEA4                             _uart2TxHead 00CD  
                           _uart2RxTail 00CC                               spinners@s 0074  
                           _uart2TxTail 0045                            _wait_lcd_set C1A4  
                    _EXT_INT_Initialize B97E    __end_of_TMR6_DefaultInterruptHandler B3E4  
 __size_of_TMR6_DefaultInterruptHandler 004E            _TMR6_DefaultInterruptHandler B396  
                     _send_lcd_data_dma B3E4    __end_of_ADCC_DefaultInterruptHandler C1C6  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler C1C4  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long B6AA          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help C0D6                   __end_of_calc_ror_data 8CF6  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString A940  
                 __end_of_mode_lamp_dim C026                 __end_of_adc_int_handler C1C8  
                __size_of_INT0_CallBack 0024                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0024  
                    __end_of_update_lcd 9D1A                  _uart2TxBufferRemaining 0044  
                    __end_of_static_soc B23E                      __end_of_start_bsoc BEE8  
                        _FVR_Initialize C196                  __end_of_get_raw_result BEC6  
                      _send_lcd_cmd_dma BF46                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 00C6        __end_of_INT1_SetInterruptHandler BCB6  
             __size_of_UART1_Initialize 0048               __end_of_send_lcd_data_dma B42E  
                      ??_DMA1_DMAOR_ISR 0027               __end_of_send_lcd_cmd_long B6EA  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR C1BE  
        __end_of_PIN_MANAGER_Initialize AB9E               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 97A0                 _eaDogM_WriteStringAtPos A7F2  
                         _get_vterm_ptr BA72                          _check_adc_scan C17E  
             __size_of_UART2_Initialize 0060  
