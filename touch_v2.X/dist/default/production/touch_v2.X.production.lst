

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Dec 14 16:56:56 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1,inline
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1,inline
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=4,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1
   165                           	psect	text140,global,reloc=4,class=CODE,delta=1
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1
   169                           	psect	text144,global,reloc=4,class=CODE,delta=1
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1
   173                           	psect	text148,global,reloc=2,class=CODE,delta=1
   174                           	psect	text149,global,reloc=2,class=CODE,delta=1
   175                           	psect	text150,global,reloc=2,class=CODE,delta=1
   176                           	psect	text151,global,reloc=4,class=CODE,delta=1
   177                           	psect	text152,global,reloc=2,class=CODE,delta=1
   178                           	psect	text153,global,reloc=2,class=CODE,delta=1
   179                           	psect	text154,global,reloc=4,class=CODE,delta=1
   180                           	psect	text155,global,reloc=4,class=CODE,delta=1
   181                           	psect	text156,global,reloc=2,class=CODE,delta=1
   182                           	psect	text157,global,reloc=2,class=CODE,delta=1
   183                           	psect	text158,global,reloc=2,class=CODE,delta=1
   184                           	psect	text159,global,reloc=4,class=CODE,delta=1
   185                           	psect	text160,global,reloc=4,class=CODE,delta=1
   186                           	psect	text161,global,reloc=2,class=CODE,delta=1
   187                           	psect	text162,global,reloc=4,class=CODE,delta=1
   188                           	psect	text163,global,reloc=2,class=CODE,delta=1
   189                           	psect	text164,global,reloc=4,class=CODE,delta=1
   190                           	psect	text165,global,reloc=2,class=CODE,delta=1
   191                           	psect	text166,global,reloc=4,class=CODE,delta=1
   192                           	psect	text167,global,reloc=2,class=CODE,delta=1
   193                           	psect	text168,global,reloc=2,class=CODE,delta=1
   194                           	psect	text169,global,reloc=4,class=CODE,delta=1
   195                           	psect	text170,global,reloc=4,class=CODE,delta=1
   196                           	psect	text171,global,reloc=4,class=CODE,delta=1
   197                           	psect	text172,global,reloc=4,class=CODE,delta=1
   198                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   199                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   200                           	psect	text173,global,reloc=4,class=CODE,delta=1
   201                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   202                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   203  0000                     
   204                           ; Version 2.10
   205                           ; Generated 31/07/2019 GMT
   206                           ; 
   207                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   208                           ; All rights reserved.
   209                           ; 
   210                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   211                           ; 
   212                           ; Redistribution and use in source and binary forms, with or without modification, are
   213                           ; permitted provided that the following conditions are met:
   214                           ; 
   215                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   216                           ;        conditions and the following disclaimer.
   217                           ; 
   218                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   219                           ;        of conditions and the following disclaimer in the documentation and/or other
   220                           ;        materials provided with the distribution.
   221                           ; 
   222                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   223                           ;        software without specific prior written permission.
   224                           ; 
   225                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   226                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   227                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   228                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   229                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   230                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   231                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   232                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   233                           ; 
   234                           ; 
   235                           ; Code-generator required, PIC18F57K42 Definitions
   236                           ; 
   237                           ; SFR Addresses
   238  0000                     
   239 ;;_esr_temp	offset	0
   240 ;;_i_esr	offset	4
   241 ;;_k	offset	6
   242 ;;_j	offset	7
   243 ;;_i	offset	8
   244 ;;_inp_index	offset	9
   245 ;;_mode	offset	10
   246 ;;_i_ror	offset	11
   247 ;;_s	offset=-2 (param)
   248 ;;_c	offset	0
   249 ;;_shape	offset=-1 (param)
   250 ;;_reset	offset=-2 (param)
   251 ;;_cmd	offset=-1 (param)
   252 ;;_cmd	offset=-1 (param)
   253 ;;_data	offset=-1 (param)
   254 ;;__this	offset=-2 (param)
   255 ;;_cvoltage	offset=-4 (param)
   256 ;;_h	offset=-1 (param)
   257 ;;_h	offset=-1 (param)
   258 ;;_i	offset=-1 (param)
   259 ;;_esr_value	offset	0
   260 ;;_fsm	offset=-1 (param)
   261 ;;_channel	offset=-1 (param)
   262 ;;_mode	offset=-1 (param)
   263 ;;_mode	offset=-1 (param)
   264 ;;_cmd	offset=-1 (param)
   265 ;;_i	offset	0
   266 ;;_h	offset=-1 (param)
   267 ;;_flipper	offset=-1 (param)
   268 ;;_f	offset	0
   269 ;;_ap	offset	6
   270 ;;_s	offset=-3 (param)
   271 ;;_fmt	offset=-5 (param)
   272 ;;_line	offset=-1 (param)
   273 ;;_vterm	offset=-2 (param)
   274 ;;_numMilliseconds	offset=-2 (param)
   275 ;;_vterm	offset=-1 (param)
   276 ;;_r	offset=-1 (param)
   277 ;;_c	offset=-2 (param)
   278 ;;_strPtr	offset=-4 (param)
   279 ;;_strPtr	offset=-1 (param)
   280 ;;_delay	offset=-4 (param)
   281 ;;_strPtr	offset=-2 (param)
   282 ;;__this	offset=-2 (param)
   283 ;;_clearBuffer	offset=-3 (param)
   284 ;;_s	offset	0
   285 ;;_k	offset	2
   286 ;;_dest	offset=-2 (param)
   287 ;;_c	offset=-4 (param)
   288 ;;_n	offset=-6 (param)
   289 ;;_ap	offset	0
   290 ;;_fmt	offset=-3 (param)
   291 ;;_cfmt	offset	0
   292 ;;_fp	offset=-2 (param)
   293 ;;_fmt	offset=-4 (param)
   294 ;;_ap	offset=-6 (param)
   295 ;;_vfpfcnvrt$5386	offset	0
   296 ;;_vfpfcnvrt$5397	offset	2
   297 ;;_vfpfcnvrt$5385	offset	4
   298 ;;_llu	offset	6
   299 ;;_ll	offset	14
   300 ;;_f	offset	22
   301 ;;_ct	offset	26
   302 ;;_cp	offset	29
   303 ;;_c	offset	31
   304 ;;_fp	offset=-2 (param)
   305 ;;_fmt	offset=-4 (param)
   306 ;;_ap	offset=-6 (param)
   307 ;;_xtoa$5371	offset	0
   308 ;;_xtoa$5370	offset	2
   309 ;;_n	offset	4
   310 ;;_c	offset	12
   311 ;;_i	offset	14
   312 ;;_w	offset	16
   313 ;;_p	offset	18
   314 ;;_fp	offset=-2 (param)
   315 ;;_d	offset=-10 (param)
   316 ;;_x	offset=-11 (param)
   317 ;;_toupper$6177	offset	0
   318 ;;_c	offset=-2 (param)
   319 ;;_c	offset=-2 (param)
   320 ;;_c	offset=-2 (param)
   321 ;;_n	offset	0
   322 ;;_i	offset	8
   323 ;;_w	offset	10
   324 ;;_p	offset	12
   325 ;;_fp	offset=-2 (param)
   326 ;;_d	offset=-10 (param)
   327 ;;_counter	offset	0
   328 ;;_dividend	offset=-8 (param)
   329 ;;_divisor	offset=-16 (param)
   330 ;;_quotient	offset	0
   331 ;;_counter	offset	8
   332 ;;_dividend	offset=-8 (param)
   333 ;;_divisor	offset=-16 (param)
   334 ;;_r	offset	0
   335 ;;_l	offset	2
   336 ;;__l	offset=-2 (param)
   337 ;;__r	offset=-4 (param)
   338 ;;_n	offset=-6 (param)
   339 ;;_nuls	offset	0
   340 ;;_l	offset	7
   341 ;;_p	offset	9
   342 ;;_cp	offset	11
   343 ;;_w	offset	13
   344 ;;_i	offset	15
   345 ;;_fp	offset=-2 (param)
   346 ;;_s	offset=-4 (param)
   347 ;;_efgtoa$5343	offset	0
   348 ;;_efgtoa$5342	offset	2
   349 ;;_efgtoa$5341	offset	4
   350 ;;_efgtoa$5337	offset	6
   351 ;;_efgtoa$5333	offset	8
   352 ;;_efgtoa$5332	offset	10
   353 ;;_u	offset	12
   354 ;;_g	offset	16
   355 ;;_l	offset	20
   356 ;;_h	offset	24
   357 ;;_ou	offset	28
   358 ;;_n	offset	32
   359 ;;_e	offset	34
   360 ;;_i	offset	36
   361 ;;_w	offset	38
   362 ;;_p	offset	40
   363 ;;_sign	offset	42
   364 ;;_d	offset	44
   365 ;;_ne	offset	46
   366 ;;_m	offset	48
   367 ;;_pp	offset	50
   368 ;;_t	offset	52
   369 ;;_mode	offset	54
   370 ;;_nmode	offset	55
   371 ;;_fp	offset=-2 (param)
   372 ;;_f	offset=-6 (param)
   373 ;;_c	offset=-7 (param)
   374 ;;_tolower$6162	offset	0
   375 ;;_c	offset=-2 (param)
   376 ;;_c	offset=-2 (param)
   377 ;;_d	offset	0
   378 ;;_s	offset	2
   379 ;;_dest	offset=-2 (param)
   380 ;;_src	offset=-4 (param)
   381 ;;_u	offset	0
   382 ;;_m	offset	4
   383 ;;_e	offset	8
   384 ;;_x	offset=-4 (param)
   385 ;;_u	offset	0
   386 ;;_e	offset	4
   387 ;;_x	offset=-4 (param)
   388 ;;_exp1	offset	0
   389 ;;_sign1	offset	1
   390 ;;_f1	offset=-4 (param)
   391 ;;_f1	offset=-4 (param)
   392 ;;_ff1	offset=-4 (param)
   393 ;;_ff2	offset=-8 (param)
   394 ;;_sign	offset	0
   395 ;;_counter	offset	1
   396 ;;_dividend	offset=-2 (param)
   397 ;;_divisor	offset=-4 (param)
   398 ;;_quotient	offset	0
   399 ;;_sign	offset	2
   400 ;;_counter	offset	3
   401 ;;_dividend	offset=-2 (param)
   402 ;;_divisor	offset=-4 (param)
   403 ;;_dtoa$5309	offset	0
   404 ;;_n	offset	2
   405 ;;_i	offset	10
   406 ;;_s	offset	12
   407 ;;_w	offset	14
   408 ;;_p	offset	16
   409 ;;_fp	offset=-2 (param)
   410 ;;_d	offset=-10 (param)
   411 ;;_a	offset=-2 (param)
   412 ;;_sign	offset	0
   413 ;;_counter	offset	1
   414 ;;_dividend	offset=-8 (param)
   415 ;;_divisor	offset=-16 (param)
   416 ;;_quotient	offset	0
   417 ;;_sign	offset	8
   418 ;;_counter	offset	9
   419 ;;_dividend	offset=-8 (param)
   420 ;;_divisor	offset=-16 (param)
   421 ;;_w	offset	0
   422 ;;_fp	offset=-2 (param)
   423 ;;_c	offset=-3 (param)
   424 ;;_w	offset	0
   425 ;;_i	offset	2
   426 ;;_fp	offset=-2 (param)
   427 ;;_buf	offset=-4 (param)
   428 ;;_p	offset=-6 (param)
   429 ;;_a	offset	0
   430 ;;_s	offset=-2 (param)
   431 ;;_i	offset	0
   432 ;;_c	offset	2
   433 ;;_s	offset=-2 (param)
   434 ;;_fp	offset=-4 (param)
   435 ;;_c	offset=-2 (param)
   436 ;;_fp	offset=-4 (param)
   437 ;;_c	offset=-1 (param)
   438 ;;__this	offset=-2 (param)
   439 ;;_c	offset=-3 (param)
   440 ;;_atoi$5893	offset	0
   441 ;;_atoi$5891	offset	2
   442 ;;_atoi$5892	offset	4
   443 ;;_n	offset	5
   444 ;;_neg	offset	7
   445 ;;_s	offset=-2 (param)
   446 ;;_isspace$5942	offset	0
   447 ;;_c	offset=-2 (param)
   448 ;;_c	offset=-2 (param)
   449 ;;_vterm	offset=-1 (param)
   450 ;;_new_response_info	offset=-1 (param)
   451 ;;_new_response_info	offset=-1 (param)
   452 ;;_level	offset=-2 (param)
   453 ;;_dutyValue	offset=-2 (param)
   454 ;;_timer	offset=-1 (param)
   455 ;;_timer	offset=-1 (param)
   456 ;;_count	offset=-3 (param)
   457 ;;_h	offset=-1 (param)
   458 ;;_u	offset	0
   459 ;;_x	offset=-4 (param)
   460 ;;_chan	offset=-1 (param)
   461 ;;_to_what	offset=-2 (param)
   462 ;;_u	offset	0
   463 ;;_s	offset=-2 (param)
   464 ;;_index	offset=-1 (param)
   465 ;;_arg	offset	0
   466 ;;_exp	offset	4
   467 ;;_sign	offset=-1 (param)
   468 ;;_val	offset=-5 (param)
   469 ;;_grs	offset	0
   470 ;;_rem	offset	4
   471 ;;_new_exp	offset	8
   472 ;;_aexp	offset	10
   473 ;;_bexp	offset	11
   474 ;;_sign	offset	12
   475 ;;_b	offset=-4 (param)
   476 ;;_a	offset=-8 (param)
   477 ;;_ff1	offset=-4 (param)
   478 ;;_ff2	offset=-8 (param)
   479 ;;_lp_speed	offset	0
   480 ;;_new	offset=-4 (param)
   481 ;;_bn	offset=-5 (param)
   482 ;;_slow	offset=-6 (param)
   483 ;;_b	offset=-4 (param)
   484 ;;_a	offset=-8 (param)
   485 ;;_grs	offset	0
   486 ;;_bexp	offset	1
   487 ;;_aexp	offset	2
   488 ;;_signs	offset	3
   489 ;;_b	offset=-4 (param)
   490 ;;_a	offset=-8 (param)
   491 ;;_prod	offset	0
   492 ;;_grs	offset	4
   493 ;;_temp	offset	8
   494 ;;_bexp	offset	10
   495 ;;_aexp	offset	11
   496 ;;_sign	offset	12
   497 ;;_b	offset=-4 (param)
   498 ;;_a	offset=-8 (param)
   499 ;;_InterruptHandler	offset=-3 (param)
   500 ;;_InterruptHandler	offset=-3 (param)
   501 ;;_InterruptHandler	offset=-3 (param)
   502 ;;_InterruptHandler	offset=-3 (param)
   503 ;;_InterruptHandler	offset=-3 (param)
   504 ;;_InterruptHandler	offset=-3 (param)
   505 ;;_state	offset	0
   506 ;;_InterruptHandler	offset=-3 (param)
   507 ;;_InterruptHandler	offset=-3 (param)
   508 ;;_InterruptHandler	offset=-3 (param)
   509 ;;_InterruptHandler	offset=-3 (param)
   510 ;;_i	offset	0
   511 ;;_sw_value	offset	1
   512 ;;_timerVal	offset=-2 (param)
   513 ;;_timerVal	offset=-2 (param)
   514 ;;_log_ptr	offset	0
   515 ;;_f	offset	0
   516 ;;_ap	offset	6
   517 ;;_s	offset=-3 (param)
   518 ;;_fmt	offset=-5 (param)
   519 ;;_cfmt	offset	0
   520 ;;_fp	offset=-2 (param)
   521 ;;_fmt	offset=-4 (param)
   522 ;;_ap	offset=-6 (param)
   523 ;;_vfpfcnvrt$5386	offset	0
   524 ;;_vfpfcnvrt$5397	offset	2
   525 ;;_vfpfcnvrt$5385	offset	4
   526 ;;_llu	offset	6
   527 ;;_ll	offset	14
   528 ;;_f	offset	22
   529 ;;_ct	offset	26
   530 ;;_cp	offset	29
   531 ;;_c	offset	31
   532 ;;_fp	offset=-2 (param)
   533 ;;_fmt	offset=-4 (param)
   534 ;;_ap	offset=-6 (param)
   535 ;;_xtoa$5371	offset	0
   536 ;;_xtoa$5370	offset	2
   537 ;;_n	offset	4
   538 ;;_c	offset	12
   539 ;;_i	offset	14
   540 ;;_w	offset	16
   541 ;;_p	offset	18
   542 ;;_fp	offset=-2 (param)
   543 ;;_d	offset=-10 (param)
   544 ;;_x	offset=-11 (param)
   545 ;;_toupper$6177	offset	0
   546 ;;_c	offset=-2 (param)
   547 ;;_c	offset=-2 (param)
   548 ;;_c	offset=-2 (param)
   549 ;;_n	offset	0
   550 ;;_i	offset	8
   551 ;;_w	offset	10
   552 ;;_p	offset	12
   553 ;;_fp	offset=-2 (param)
   554 ;;_d	offset=-10 (param)
   555 ;;_counter	offset	0
   556 ;;_dividend	offset=-8 (param)
   557 ;;_divisor	offset=-16 (param)
   558 ;;_quotient	offset	0
   559 ;;_counter	offset	8
   560 ;;_dividend	offset=-8 (param)
   561 ;;_divisor	offset=-16 (param)
   562 ;;_r	offset	0
   563 ;;_l	offset	2
   564 ;;__l	offset=-2 (param)
   565 ;;__r	offset=-4 (param)
   566 ;;_n	offset=-6 (param)
   567 ;;_nuls	offset	0
   568 ;;_l	offset	7
   569 ;;_p	offset	9
   570 ;;_cp	offset	11
   571 ;;_w	offset	13
   572 ;;_i	offset	15
   573 ;;_fp	offset=-2 (param)
   574 ;;_s	offset=-4 (param)
   575 ;;_efgtoa$5343	offset	0
   576 ;;_efgtoa$5342	offset	2
   577 ;;_efgtoa$5341	offset	4
   578 ;;_efgtoa$5337	offset	6
   579 ;;_efgtoa$5333	offset	8
   580 ;;_efgtoa$5332	offset	10
   581 ;;_u	offset	12
   582 ;;_g	offset	16
   583 ;;_l	offset	20
   584 ;;_h	offset	24
   585 ;;_ou	offset	28
   586 ;;_n	offset	32
   587 ;;_e	offset	34
   588 ;;_i	offset	36
   589 ;;_w	offset	38
   590 ;;_p	offset	40
   591 ;;_sign	offset	42
   592 ;;_d	offset	44
   593 ;;_ne	offset	46
   594 ;;_m	offset	48
   595 ;;_pp	offset	50
   596 ;;_t	offset	52
   597 ;;_mode	offset	54
   598 ;;_nmode	offset	55
   599 ;;_fp	offset=-2 (param)
   600 ;;_f	offset=-6 (param)
   601 ;;_c	offset=-7 (param)
   602 ;;_tolower$6162	offset	0
   603 ;;_c	offset=-2 (param)
   604 ;;_c	offset=-2 (param)
   605 ;;_d	offset	0
   606 ;;_s	offset	2
   607 ;;_dest	offset=-2 (param)
   608 ;;_src	offset=-4 (param)
   609 ;;_u	offset	0
   610 ;;_m	offset	4
   611 ;;_e	offset	8
   612 ;;_x	offset=-4 (param)
   613 ;;_u	offset	0
   614 ;;_e	offset	4
   615 ;;_x	offset=-4 (param)
   616 ;;_exp1	offset	0
   617 ;;_sign1	offset	1
   618 ;;_f1	offset=-4 (param)
   619 ;;_b	offset=-4 (param)
   620 ;;_a	offset=-8 (param)
   621 ;;_grs	offset	0
   622 ;;_bexp	offset	1
   623 ;;_aexp	offset	2
   624 ;;_signs	offset	3
   625 ;;_b	offset=-4 (param)
   626 ;;_a	offset=-8 (param)
   627 ;;_f1	offset=-4 (param)
   628 ;;_prod	offset	0
   629 ;;_grs	offset	4
   630 ;;_temp	offset	8
   631 ;;_bexp	offset	10
   632 ;;_aexp	offset	11
   633 ;;_sign	offset	12
   634 ;;_b	offset=-4 (param)
   635 ;;_a	offset=-8 (param)
   636 ;;_ff1	offset=-4 (param)
   637 ;;_ff2	offset=-8 (param)
   638 ;;_ff1	offset=-4 (param)
   639 ;;_ff2	offset=-8 (param)
   640 ;;_grs	offset	0
   641 ;;_rem	offset	4
   642 ;;_new_exp	offset	8
   643 ;;_aexp	offset	10
   644 ;;_bexp	offset	11
   645 ;;_sign	offset	12
   646 ;;_b	offset=-4 (param)
   647 ;;_a	offset=-8 (param)
   648 ;;_sign	offset	0
   649 ;;_counter	offset	1
   650 ;;_dividend	offset=-2 (param)
   651 ;;_divisor	offset=-4 (param)
   652 ;;_quotient	offset	0
   653 ;;_sign	offset	2
   654 ;;_counter	offset	3
   655 ;;_dividend	offset=-2 (param)
   656 ;;_divisor	offset=-4 (param)
   657 ;;_dtoa$5309	offset	0
   658 ;;_n	offset	2
   659 ;;_i	offset	10
   660 ;;_s	offset	12
   661 ;;_w	offset	14
   662 ;;_p	offset	16
   663 ;;_fp	offset=-2 (param)
   664 ;;_d	offset=-10 (param)
   665 ;;_a	offset=-2 (param)
   666 ;;_sign	offset	0
   667 ;;_counter	offset	1
   668 ;;_dividend	offset=-8 (param)
   669 ;;_divisor	offset=-16 (param)
   670 ;;_quotient	offset	0
   671 ;;_sign	offset	8
   672 ;;_counter	offset	9
   673 ;;_dividend	offset=-8 (param)
   674 ;;_divisor	offset=-16 (param)
   675 ;;_w	offset	0
   676 ;;_fp	offset=-2 (param)
   677 ;;_c	offset=-3 (param)
   678 ;;_w	offset	0
   679 ;;_i	offset	2
   680 ;;_fp	offset=-2 (param)
   681 ;;_buf	offset=-4 (param)
   682 ;;_p	offset=-6 (param)
   683 ;;_a	offset	0
   684 ;;_s	offset=-2 (param)
   685 ;;_i	offset	0
   686 ;;_c	offset	2
   687 ;;_s	offset=-2 (param)
   688 ;;_fp	offset=-4 (param)
   689 ;;_c	offset=-2 (param)
   690 ;;_fp	offset=-4 (param)
   691 ;;_c	offset=-1 (param)
   692 ;;__this	offset=-2 (param)
   693 ;;_c	offset=-3 (param)
   694 ;;_atoi$5893	offset	0
   695 ;;_atoi$5891	offset	2
   696 ;;_atoi$5892	offset	4
   697 ;;_n	offset	5
   698 ;;_neg	offset	7
   699 ;;_s	offset=-2 (param)
   700 ;;_isspace$5942	offset	0
   701 ;;_c	offset=-2 (param)
   702 ;;_c	offset=-2 (param)
   703 ;;_dsize	offset=-2 (param)
   704 ;;_timer	offset=-1 (param)
   705 ;;_count	offset=-3 (param)
   706 ;;_channel	offset=-1 (param)
   707 ;;_i	offset	0
   708                           
   709                           	psect	idataBIGRAM
   710  017BDC                     __pidataBIGRAM:
   711                           	opt callstack 0
   712                           
   713                           ;initializer for _port_data
   714  017BDC  FF                 	db	255
   715  017BDD  00                 	db	0
   716  017BDE  FF                 	db	255
   717  017BDF  00                 	db	0
   718  017BE0  FF                 	db	255
   719  017BE1  00                 	db	0
   720  017BE2  FF                 	db	255
   721  017BE3  00                 	db	0
   722  017BE4  FF                 	db	255
   723  017BE5  00                 	db	0
   724  017BE6  FF                 	db	255
   725  017BE7  00                 	db	0
   726  017BE8  FF                 	db	255
   727  017BE9  00                 	db	0
   728  017BEA  FF                 	db	255
   729  017BEB  00                 	db	0
   730  017BEC  00                 	db	0
   731  017BED  00                 	db	0
   732  017BEE  00                 	db	0
   733  017BEF  00                 	db	0
   734  017BF0  00                 	db	0
   735  017BF1  00                 	db	0
   736  017BF2  00                 	db	0
   737  017BF3  00                 	db	0
   738  017BF4  00                 	db	0
   739  017BF5  00                 	db	0
   740  017BF6  00                 	db	0
   741  017BF7  00                 	db	0
   742  017BF8  00                 	db	0
   743  017BF9  00                 	db	0
   744  017BFA  00                 	db	0
   745  017BFB  00                 	db	0
   746  017BFC  00                 	db	0
   747  017BFD  00                 	db	0
   748  017BFE  00                 	db	0
   749  017BFF  00                 	db	0
   750  017C00  00                 	db	0
   751  017C01  00                 	db	0
   752  017C02  00                 	db	0
   753  017C03  00                 	db	0
   754  017C04  00                 	db	0
   755  017C05  00                 	db	0
   756  017C06  00                 	db	0
   757  017C07  00                 	db	0
   758  017C08  00                 	db	0
   759  017C09  00                 	db	0
   760  017C0A  00                 	db	0
   761  017C0B  00                 	db	0
   762  017C0C  00                 	db	0
   763  017C0D  00                 	db	0
   764  017C0E  00                 	db	0
   765  017C0F  00                 	db	0
   766  017C10  00                 	db	0
   767  017C11  00                 	db	0
   768  017C12  00                 	db	0
   769  017C13  00                 	db	0
   770  017C14  00                 	db	0
   771  017C15  00                 	db	0
   772  017C16  00                 	db	0
   773  017C17  00                 	db	0
   774  017C18  00                 	db	0
   775  017C19  00                 	db	0
   776  017C1A  00                 	db	0
   777  017C1B  00                 	db	0
   778  017C1C  00                 	db	0
   779  017C1D  00                 	db	0
   780  017C1E  00                 	db	0
   781  017C1F  00                 	db	0
   782  017C20  00                 	db	0
   783  017C21  00                 	db	0
   784  017C22  00                 	db	0
   785  017C23  00                 	db	0
   786  017C24  00                 	db	0
   787  017C25  00                 	db	0
   788  017C26  00                 	db	0
   789  017C27  00                 	db	0
   790  017C28  00                 	db	0
   791  017C29  00                 	db	0
   792  017C2A  00                 	db	0
   793  017C2B  00                 	db	0
   794  017C2C  00                 	db	0
   795  017C2D  00                 	db	0
   796  017C2E  00                 	db	0
   797  017C2F  00                 	db	0
   798  017C30  00                 	db	0
   799  017C31  00                 	db	0
   800  017C32  00                 	db	0
   801  017C33  00                 	db	0
   802  017C34  00                 	db	0
   803  017C35  00                 	db	0
   804  017C36  00                 	db	0
   805  017C37  00                 	db	0
   806  017C38  00                 	db	0
   807  017C39  00                 	db	0
   808  017C3A  00                 	db	0
   809  017C3B  00                 	db	0
   810  017C3C  00                 	db	0
   811  017C3D  00                 	db	0
   812  017C3E  00                 	db	0
   813  017C3F  00                 	db	0
   814  017C40  00                 	db	0
   815  017C41  00                 	db	0
   816  017C42  00                 	db	0
   817  017C43  00                 	db	0
   818  017C44  00                 	db	0
   819  017C45  00                 	db	0
   820  017C46  00                 	db	0
   821  017C47  00                 	db	0
   822  017C48  00                 	db	0
   823  017C49  00                 	db	0
   824  017C4A  00                 	db	0
   825  017C4B  00                 	db	0
   826  017C4C  00                 	db	0
   827  017C4D  00                 	db	0
   828  017C4E  00                 	db	0
   829  017C4F  00                 	db	0
   830  017C50  00                 	db	0
   831  017C51  00                 	db	0
   832  017C52  00                 	db	0
   833  017C53  00                 	db	0
   834  017C54  00                 	db	0
   835  017C55  00                 	db	0
   836  017C56  00                 	db	0
   837  017C57  00                 	db	0
   838  017C58  00                 	db	0
   839  017C59  00                 	db	0
   840  017C5A  00                 	db	0
   841  017C5B  00                 	db	0
   842  017C5C  00                 	db	0
   843  017C5D  00                 	db	0
   844  017C5E  00                 	db	0
   845  017C5F  00                 	db	0
   846  017C60  00                 	db	0
   847  017C61  00                 	db	0
   848  017C62  00                 	db	0
   849  017C63  00                 	db	0
   850  017C64  00                 	db	0
   851  017C65  00                 	db	0
   852  017C66  00                 	db	0
   853  017C67  00                 	db	0
   854  017C68  00                 	db	0
   855  017C69  00                 	db	0
   856  017C6A  00                 	db	0
   857  017C6B  00                 	db	0
   858  017C6C  00                 	db	0
   859  017C6D  00                 	db	0
   860  017C6E  00                 	db	0
   861  017C6F  00                 	db	0
   862  017C70  00                 	db	0
   863  017C71  00                 	db	0
   864  017C72  00                 	db	0
   865  017C73  00                 	db	0
   866  017C74  00                 	db	0
   867  017C75  00                 	db	0
   868  017C76  00                 	db	0
   869  017C77  00                 	db	0
   870  017C78  00                 	db	0
   871  017C79  00                 	db	0
   872  017C7A  00                 	db	0
   873  017C7B  00                 	db	0
   874  017C7C  00                 	db	0
   875  017C7D  00                 	db	0
   876  017C7E  00                 	db	0
   877  017C7F  00                 	db	0
   878  017C80  00                 	db	0
   879  017C81  00                 	db	0
   880  017C82  00                 	db	0
   881  017C83  00                 	db	0
   882  017C84  00                 	db	0
   883  017C85  00                 	db	0
   884  017C86  00                 	db	0
   885  017C87  00                 	db	0
   886  017C88  00                 	db	0
   887  017C89  00                 	db	0
   888  017C8A  00                 	db	0
   889  017C8B  00                 	db	0
   890  017C8C  00                 	db	0
   891  017C8D  00                 	db	0
   892  017C8E  00                 	db	0
   893  017C8F  00                 	db	0
   894  017C90  00                 	db	0
   895  017C91  00                 	db	0
   896  017C92  00                 	db	0
   897  017C93  00                 	db	0
   898  017C94  00                 	db	0
   899  017C95  00                 	db	0
   900  017C96  00                 	db	0
   901  017C97  00                 	db	0
   902  017C98  00                 	db	0
   903  017C99  00                 	db	0
   904  017C9A  00                 	db	0
   905  017C9B  00                 	db	0
   906  017C9C  00                 	db	0
   907  017C9D  00                 	db	0
   908  017C9E  00                 	db	0
   909  017C9F  00                 	db	0
   910  017CA0  00                 	db	0
   911  017CA1  00                 	db	0
   912  017CA2  00                 	db	0
   913  017CA3  00                 	db	0
   914  017CA4  00                 	db	0
   915  017CA5  00                 	db	0
   916  017CA6  00                 	db	0
   917  017CA7  00                 	db	0
   918  017CA8  00                 	db	0
   919  017CA9  00                 	db	0
   920  017CAA  00                 	db	0
   921  017CAB  00                 	db	0
   922  017CAC  00                 	db	0
   923  017CAD  00                 	db	0
   924  017CAE  00                 	db	0
   925  017CAF  00                 	db	0
   926  017CB0  00                 	db	0
   927  017CB1  00                 	db	0
   928  017CB2  00                 	db	0
   929  017CB3  00                 	db	0
   930  017CB4  00                 	db	0
   931  017CB5  00                 	db	0
   932  017CB6  00                 	db	0
   933  017CB7  00                 	db	0
   934  017CB8  00                 	db	0
   935  017CB9  00                 	db	0
   936  017CBA  00                 	db	0
   937  017CBB  00                 	db	0
   938  017CBC  00                 	db	0
   939  017CBD  00                 	db	0
   940  017CBE  00                 	db	0
   941  017CBF  00                 	db	0
   942  017CC0  00                 	db	0
   943  017CC1  00                 	db	0
   944  017CC2  00                 	db	0
   945  017CC3  00                 	db	0
   946  017CC4  00                 	db	0
   947  017CC5  00                 	db	0
   948  017CC6  00                 	db	0
   949  017CC7  00                 	db	0
   950  017CC8  00                 	db	0
   951  017CC9  00                 	db	0
   952  017CCA  00                 	db	0
   953  017CCB  00                 	db	0
   954  017CCC  00                 	db	0
   955  017CCD  00                 	db	0
   956  017CCE  00                 	db	0
   957  017CCF  00                 	db	0
   958  017CD0  00                 	db	0
   959  017CD1  00                 	db	0
   960  017CD2  00                 	db	0
   961  017CD3  00                 	db	0
   962  017CD4  00                 	db	0
   963  017CD5  00                 	db	0
   964  017CD6  00                 	db	0
   965  017CD7  00                 	db	0
   966  017CD8  00                 	db	0
   967  017CD9  00                 	db	0
   968  017CDA  00                 	db	0
   969  017CDB  00                 	db	0
   970  017CDC  00                 	db	0
   971  017CDD  00                 	db	0
   972  017CDE  00                 	db	0
   973  017CDF  00                 	db	0
   974  017CE0  00                 	db	0
   975  017CE1  00                 	db	0
   976  017CE2  00                 	db	0
   977  017CE3  00                 	db	0
   978  017CE4  00                 	db	0
   979  017CE5  00                 	db	0
   980  017CE6  00                 	db	0
   981  017CE7  00                 	db	0
   982  017CE8  00                 	db	0
   983  017CE9  00                 	db	0
   984  017CEA  00                 	db	0
   985  017CEB  00                 	db	0
   986  017CEC  00                 	db	0
   987  017CED  00                 	db	0
   988  017CEE  00                 	db	0
   989  017CEF  00                 	db	0
   990  017CF0  00                 	db	0
   991  017CF1  00                 	db	0
   992  017CF2  00                 	db	0
   993  017CF3  00                 	db	0
   994  017CF4  00                 	db	0
   995  017CF5  00                 	db	0
   996  017CF6  00                 	db	0
   997  017CF7  00                 	db	0
   998  017CF8  00                 	db	0
   999  017CF9  00                 	db	0
  1000  017CFA  00                 	db	0
  1001  017CFB  00                 	db	0
  1002  017CFC  00                 	db	0
  1003  017CFD  00                 	db	0
  1004  017CFE  00                 	db	0
  1005  017CFF  00                 	db	0
  1006  017D00  00                 	db	0
  1007  017D01  00                 	db	0
  1008  017D02  00                 	db	0
  1009  017D03  00                 	db	0
  1010  017D04  00                 	db	0
  1011  017D05  00                 	db	0
  1012  017D06  00                 	db	0
  1013  017D07  00                 	db	0
  1014  017D08  00                 	db	0
  1015  017D09  00                 	db	0
  1016  017D0A  00                 	db	0
  1017  017D0B  00                 	db	0
  1018  017D0C  00                 	db	0
  1019  017D0D  00                 	db	0
  1020  017D0E  00                 	db	0
  1021  017D0F  00                 	db	0
  1022  017D10  00                 	db	0
  1023  017D11  00                 	db	0
  1024  017D12  00                 	db	0
  1025  017D13  00                 	db	0
  1026  017D14  00                 	db	0
  1027  017D15  00                 	db	0
  1028  017D16  00                 	db	0
  1029  017D17  00                 	db	0
  1030  017D18  00                 	db	0
  1031  017D19  00                 	db	0
  1032  017D1A  00                 	db	0
  1033  017D1B  00                 	db	0
  1034  017D1C  00                 	db	0
  1035  017D1D  00                 	db	0
  1036  017D1E  00                 	db	0
  1037  017D1F  00                 	db	0
  1038  017D20  00                 	db	0
  1039  017D21  00                 	db	0
  1040  017D22  00                 	db	0
  1041  017D23  00                 	db	0
  1042  017D24  00                 	db	0
  1043  017D25  00                 	db	0
  1044  017D26  00                 	db	0
  1045  017D27  00                 	db	0
  1046  017D28  00                 	db	0
  1047  017D29  00                 	db	0
  1048  017D2A  00                 	db	0
  1049  017D2B  00                 	db	0
  1050  017D2C  00                 	db	0
  1051  017D2D  00                 	db	0
  1052  017D2E  00                 	db	0
  1053  017D2F  00                 	db	0
  1054  017D30  00                 	db	0
  1055  017D31  00                 	db	0
  1056  017D32  00                 	db	0
  1057  017D33  00                 	db	0
  1058  017D34  00                 	db	0
  1059  017D35  00                 	db	0
  1060  017D36  00                 	db	0
  1061  017D37  00                 	db	0
  1062  017D38  00                 	db	0
  1063  017D39  00                 	db	0
  1064  017D3A  00                 	db	0
  1065  017D3B  00                 	db	0
  1066  017D3C  00                 	db	0
  1067  017D3D  00                 	db	0
  1068  017D3E  00                 	db	0
  1069  017D3F  00                 	db	0
  1070  017D40  00                 	db	0
  1071  017D41  00                 	db	0
  1072  017D42  00                 	db	0
  1073  017D43  00                 	db	0
  1074  017D44  00                 	db	0
  1075  017D45  00                 	db	0
  1076  017D46  00                 	db	0
  1077  017D47  00                 	db	0
  1078  017D48  00                 	db	0
  1079  017D49  00                 	db	0
  1080  017D4A  00                 	db	0
  1081  017D4B  00                 	db	0
  1082  017D4C  00                 	db	0
  1083  017D4D  00                 	db	0
  1084  017D4E  00                 	db	0
  1085  017D4F  00                 	db	0
  1086  017D50  00                 	db	0
  1087  017D51  00                 	db	0
  1088  017D52  00                 	db	0
  1089  017D53  00                 	db	0
  1090  017D54  00                 	db	0
  1091  017D55  00                 	db	0
  1092  017D56  00                 	db	0
  1093  017D57  00                 	db	0
  1094  017D58  00                 	db	0
  1095  017D59  00                 	db	0
  1096  017D5A  00                 	db	0
  1097  017D5B  00                 	db	0
  1098  017D5C  00                 	db	0
  1099  017D5D  00                 	db	0
  1100  017D5E  00                 	db	0
  1101  017D5F  00                 	db	0
  1102  017D60  00                 	db	0
  1103  017D61  00                 	db	0
  1104  017D62  00                 	db	0
  1105  017D63  00                 	db	0
  1106  017D64  00                 	db	0
  1107  017D65  00                 	db	0
  1108  017D66  00                 	db	0
  1109  017D67  00                 	db	0
  1110  017D68  00                 	db	0
  1111  017D69  00                 	db	0
  1112  017D6A  00                 	db	0
  1113  017D6B  00                 	db	0
  1114  017D6C  00                 	db	0
  1115  017D6D  00                 	db	0
  1116  017D6E  00                 	db	0
  1117  017D6F  00                 	db	0
  1118  017D70  00                 	db	0
  1119  017D71  00                 	db	0
  1120  017D72  00                 	db	0
  1121  017D73  00                 	db	0
  1122  017D74  00                 	db	0
  1123  017D75  00                 	db	0
  1124  017D76  00                 	db	0
  1125  017D77  00                 	db	0
  1126  017D78  00                 	db	0
  1127  017D79  00                 	db	0
  1128  017D7A  00                 	db	0
  1129  017D7B  00                 	db	0
  1130  017D7C  00                 	db	0
  1131  017D7D  00                 	db	0
  1132  017D7E  00                 	db	0
  1133  017D7F  00                 	db	0
  1134  017D80  00                 	db	0
  1135  017D81  00                 	db	0
  1136  017D82  00                 	db	0
  1137  017D83  00                 	db	0
  1138  017D84  00                 	db	0
  1139  017D85  00                 	db	0
  1140  017D86  00                 	db	0
  1141  017D87  00                 	db	0
  1142  017D88  00                 	db	0
  1143  017D89  00                 	db	0
  1144  017D8A  00                 	db	0
  1145  017D8B  00                 	db	0
  1146  017D8C  00                 	db	0
  1147  017D8D  00                 	db	0
  1148  017D8E  00                 	db	0
  1149  017D8F  00                 	db	0
  1150  017D90  00                 	db	0
  1151  017D91  00                 	db	0
  1152  017D92  00                 	db	0
  1153  017D93  00                 	db	0
  1154  017D94  00                 	db	0
  1155  017D95  00                 	db	0
  1156  017D96  00                 	db	0
  1157  017D97  00                 	db	0
  1158  017D98  00                 	db	0
  1159  017D99  00                 	db	0
  1160  017D9A  00                 	db	0
  1161  017D9B  00                 	db	0
  1162  017D9C  00                 	db	0
  1163  017D9D  00                 	db	0
  1164  017D9E  00                 	db	0
  1165  017D9F  00                 	db	0
  1166  017DA0  00                 	db	0
  1167  017DA1  00                 	db	0
  1168  017DA2  00                 	db	0
  1169  017DA3  00                 	db	0
  1170  017DA4  00                 	db	0
  1171  017DA5  00                 	db	0
  1172  017DA6  00                 	db	0
  1173  017DA7  00                 	db	0
  1174  017DA8  00                 	db	0
  1175  017DA9  00                 	db	0
  1176  017DAA  00                 	db	0
  1177  017DAB  00                 	db	0
  1178  017DAC  00                 	db	0
  1179  017DAD  00                 	db	0
  1180  017DAE  00                 	db	0
  1181  017DAF  00                 	db	0
  1182  017DB0  00                 	db	0
  1183  017DB1  00                 	db	0
  1184  017DB2  00                 	db	0
  1185  017DB3  00                 	db	0
  1186  017DB4  00                 	db	0
  1187  017DB5  00                 	db	0
  1188  017DB6  00                 	db	0
  1189  017DB7  00                 	db	0
  1190  017DB8  00                 	db	0
  1191  017DB9  00                 	db	0
  1192  017DBA  00                 	db	0
  1193  017DBB  00                 	db	0
  1194  017DBC  00                 	db	0
  1195  017DBD  00                 	db	0
  1196  017DBE  00                 	db	0
  1197  017DBF  00                 	db	0
  1198  017DC0  00                 	db	0
  1199  017DC1  00                 	db	0
  1200  017DC2  00                 	db	0
  1201  017DC3  00                 	db	0
  1202  017DC4  00                 	db	0
  1203  017DC5  00                 	db	0
  1204  017DC6  00                 	db	0
  1205  017DC7  00                 	db	0
  1206  017DC8  00                 	db	0
  1207  017DC9  00                 	db	0
  1208  017DCA  00                 	db	0
  1209  017DCB  00                 	db	0
  1210  017DCC  00                 	db	0
  1211  017DCD  00                 	db	0
  1212  017DCE  00                 	db	0
  1213  017DCF  00                 	db	0
  1214  017DD0  00                 	db	0
  1215  017DD1  00                 	db	0
  1216  017DD2  00                 	db	0
  1217  017DD3  00                 	db	0
  1218  017DD4  00                 	db	0
  1219  017DD5  00                 	db	0
  1220  017DD6  00                 	db	0
  1221  017DD7  00                 	db	0
  1222  017DD8  00                 	db	0
  1223  017DD9  00                 	db	0
  1224  017DDA  00                 	db	0
  1225  017DDB  00                 	db	0
  1226                           
  1227                           	psect	idataBANK0
  1228  01ADF0                     __pidataBANK0:
  1229                           	opt callstack 0
  1230                           
  1231                           ;initializer for _R
  1232  01ADF0  0000               	dw	0
  1233  01ADF2  0000               	dw	0
  1234  01ADF4  0000               	dw	0
  1235  01ADF6  0000               	dw	0
  1236  01ADF8  0000               	dw	0
  1237  01ADFA  0000               	dw	0
  1238  01ADFC  0000               	dw	0
  1239  01ADFE  0000               	dw	0
  1240  01AE00  0000               	dw	0
  1241  01AE02  0000               	dw	0
  1242  01AE04  0000               	dw	0
  1243  01AE06  0000               	dw	0
  1244  01AE08  0000               	dw	0
  1245  01AE0A  0000               	dw	0
  1246  01AE0C  0000               	dw	0
  1247  01AE0E  0000               	dw	0
  1248  01AE10  0F67               	dw	3943
  1249  01AE12  0F8F               	dw	3983
  1250  01AE14  00                 	db	0
  1251  01AE15  0000               	dw	0
  1252  01AE17  00                 	db	0
  1253                           
  1254                           ;initializer for stoa@F1166
  1255  01AE18  28                 	db	40
  1256  01AE19  6E                 	db	110
  1257  01AE1A  75                 	db	117
  1258  01AE1B  6C                 	db	108
  1259  01AE1C  6C                 	db	108
  1260  01AE1D  29                 	db	41
  1261  01AE1E  00                 	db	0
  1262                           
  1263                           ;initializer for _H
  1264  01AE1F  00                 	db	0
  1265  01AE20  00                 	db	0
  1266  01AE21  01                 	db	1
  1267  01AE22  00                 	db	0
  1268  01AE23  01                 	db	1
  1269  01AE24  00                 	db	0
  1270  01AE25  00                 	db	0
  1271                           
  1272                           	psect	idataBANK1
  1273  01963C                     __pidataBANK1:
  1274                           	opt callstack 0
  1275                           
  1276                           ;initializer for _C
  1277  01963C  0000               	dw	0
  1278  01963E  0000               	dw	0
  1279  019640  0000               	dw	0
  1280  019642  0000               	dw	0
  1281  019644  0000               	dw	0
  1282  019646  0000               	dw	0
  1283  019648  0000               	dw	0
  1284  01964A  0000               	dw	0
  1285  01964C  0000               	dw	0
  1286  01964E  0000               	dw	0
  1287  019650  0000               	dw	0
  1288  019652  0000               	dw	0
  1289  019654  0000               	dw	0
  1290  019656  0000               	dw	0
  1291  019658  0000               	dw	0
  1292  01965A  0000               	dw	0
  1293  01965C  0000               	dw	0
  1294  01965E  0000               	dw	0
  1295  019660  0000               	dw	0
  1296  019662  0000               	dw	0
  1297  019664  0000               	dw	0
  1298  019666  0000               	dw	0
  1299  019668  0000               	dw	0
  1300  01966A  0000               	dw	0
  1301  01966C  0000               	dw	0
  1302  01966E  0000               	dw	0
  1303  019670  0000               	dw	0
  1304  019672  0000               	dw	0
  1305  019674  0000               	dw	0
  1306  019676  0000               	dw	0
  1307  019678  0000               	dw	0
  1308  01967A  0000               	dw	0
  1309  01967C  0000               	dw	0
  1310  01967E  0000               	dw	0
  1311  019680  0000               	dw	0
  1312  019682  0000               	dw	0
  1313  019684  0000               	dw	0
  1314  019686  0000               	dw	0
  1315  019688  0000               	dw	0
  1316  01968A  0000               	dw	0
  1317  01968C  0000               	dw	0
  1318  01968E  0000               	dw	0
  1319  019690  0000               	dw	0
  1320  019692  0000               	dw	0
  1321  019694  0000               	dw	0
  1322  019696  0000               	dw	0
  1323  019698  0000               	dw	0
  1324  01969A  0000               	dw	0
  1325  01969C  0000               	dw	0
  1326  01969E  0000               	dw	0
  1327  0196A0  0000               	dw	0
  1328  0196A2  0000               	dw	0
  1329  0196A4  0000               	dw	0
  1330  0196A6  0000               	dw	0
  1331  0196A8  0000               	dw	0
  1332  0196AA  0000               	dw	0
  1333  0196AC  0000               	dw	0
  1334  0196AE  0000               	dw	0
  1335  0196B0  0000               	dw	0
  1336  0196B2  0000               	dw	0
  1337  0196B4  0000               	dw	0
  1338  0196B6  0000               	dw	0
  1339  0196B8  0000               	dw	0
  1340  0196BA  0000               	dw	0
  1341  0196BC  0000               	dw	0
  1342  0196BE  0000               	dw	0
  1343  0196C0  0000               	dw	0
  1344  0196C2  0000               	dw	0
  1345  0196C4  0000               	dw	0
  1346  0196C6  42FA               	dw	17146
  1347  0196C8  00                 	db	0
  1348  0196C9  00                 	db	0
  1349  0196CA  00                 	db	0
  1350  0196CB  00                 	db	0
  1351  0196CC  00                 	db	0
  1352  0196CD  00                 	db	0
  1353  0196CE  00                 	db	0
  1354  0196CF  00                 	db	0
  1355  0196D0  00                 	db	0
  1356  0196D1  00                 	db	0
  1357  0196D2  00                 	db	0
  1358  0196D3  00                 	db	0
  1359  0196D4  00                 	db	0
  1360  0196D5  00                 	db	0
  1361  0196D6  00                 	db	0
  1362  0196D7  00                 	db	0
  1363  0196D8  00                 	db	0
  1364  0196D9  00                 	db	0
  1365  0196DA  00                 	db	0
  1366  0196DB  00                 	db	0
  1367  0196DC  00                 	db	0
  1368  0196DD  00                 	db	0
  1369  0196DE  00                 	db	0
  1370  0196DF  00                 	db	0
  1371  0196E0  00                 	db	0
  1372  0196E1  00                 	db	0
  1373  0196E2  00                 	db	0
  1374  0196E3  00                 	db	0
  1375  0196E4  00                 	db	0
  1376  0196E5  00                 	db	0
  1377  0196E6  00                 	db	0
  1378  0196E7  00                 	db	0
  1379  0196E8  00                 	db	0
  1380  0196E9  00                 	db	0
  1381  0196EA  00                 	db	0
  1382  0196EB  00                 	db	0
  1383  0196EC  00                 	db	0
  1384  0196ED  00                 	db	0
  1385  0196EE  00                 	db	0
  1386  0196EF  00                 	db	0
  1387  0196F0  00                 	db	0
  1388  0196F1  00                 	db	0
  1389  0196F2  00                 	db	0
  1390  0196F3  00                 	db	0
  1391  0196F4  00                 	db	0
  1392  0196F5  00                 	db	0
  1393  0196F6  00                 	db	0
  1394  0196F7  00                 	db	0
  1395  0196F8  00                 	db	0
  1396  0196F9  00                 	db	0
  1397  0196FA  00                 	db	0
  1398  0196FB  00                 	db	0
  1399  0196FC  00                 	db	0
  1400  0196FD  00                 	db	0
  1401  0196FE  00                 	db	0
  1402  0196FF  00                 	db	0
  1403  019700  00                 	db	0
  1404  019701  00                 	db	0
  1405  019702  00                 	db	0
  1406  019703  00                 	db	0
  1407  019704  00                 	db	0
  1408  019705  00                 	db	0
  1409  019706  00                 	db	0
  1410  019707  00                 	db	0
  1411  019708  00                 	db	0
  1412  019709  00                 	db	0
  1413  01970A  00                 	db	0
  1414  01970B  00                 	db	0
  1415  01970C  00                 	db	0
  1416  01970D  00                 	db	0
  1417  01970E  00                 	db	0
  1418  01970F  00                 	db	0
  1419  019710  00                 	db	0
  1420  019711  00                 	db	0
  1421  019712  00                 	db	0
  1422  019713  00                 	db	0
  1423  019714  00                 	db	0
  1424  019715  00                 	db	0
  1425  019716  00                 	db	0
  1426  019717  00                 	db	0
  1427  019718  00                 	db	0
  1428  019719  00                 	db	0
  1429  01971A  00                 	db	0
  1430  01971B  00                 	db	0
  1431  01971C  00                 	db	0
  1432  01971D  00                 	db	0
  1433  01971E  00                 	db	0
  1434  01971F  00                 	db	0
  1435  019720  00                 	db	0
  1436  019721  00                 	db	0
  1437  019722  00                 	db	0
  1438  019723  00                 	db	0
  1439  019724  00                 	db	0
  1440  019725  00                 	db	0
  1441  019726  00                 	db	0
  1442  019727  00                 	db	0
  1443  019728  00                 	db	0
  1444  019729  00                 	db	0
  1445  01972A  00                 	db	0
  1446  01972B  00                 	db	0
  1447  01972C  00                 	db	0
  1448  01972D  00                 	db	0
  1449  01972E  00                 	db	0
  1450  01972F  00                 	db	0
  1451  019730  00                 	db	0
  1452  019731  00                 	db	0
  1453  019732  00                 	db	0
  1454                           
  1455                           	psect	idataBANK2
  1456  019A9C                     __pidataBANK2:
  1457                           	opt callstack 0
  1458                           
  1459                           ;initializer for _V
  1460  019A9C  00                 	db	0
  1461  019A9D  00                 	db	0
  1462  019A9E  00                 	db	0
  1463  019A9F  00                 	db	0
  1464  019AA0  00                 	db	0
  1465  019AA1  00                 	db	0
  1466  019AA2  00                 	db	0
  1467  019AA3  00                 	db	0
  1468  019AA4  00                 	db	0
  1469  019AA5  00                 	db	0
  1470  019AA6  00                 	db	0
  1471  019AA7  00                 	db	0
  1472  019AA8  00                 	db	0
  1473  019AA9  00                 	db	0
  1474  019AAA  00                 	db	0
  1475  019AAB  00                 	db	0
  1476  019AAC  00                 	db	0
  1477  019AAD  00                 	db	0
  1478  019AAE  00                 	db	0
  1479  019AAF  00                 	db	0
  1480  019AB0  00                 	db	0
  1481  019AB1  00                 	db	0
  1482  019AB2  00                 	db	0
  1483  019AB3  00                 	db	0
  1484  019AB4  00                 	db	0
  1485  019AB5  00                 	db	0
  1486  019AB6  00                 	db	0
  1487  019AB7  00                 	db	0
  1488  019AB8  00                 	db	0
  1489  019AB9  00                 	db	0
  1490  019ABA  00                 	db	0
  1491  019ABB  00                 	db	0
  1492  019ABC  00                 	db	0
  1493  019ABD  00                 	db	0
  1494  019ABE  00                 	db	0
  1495  019ABF  00                 	db	0
  1496  019AC0  00                 	db	0
  1497  019AC1  00                 	db	0
  1498  019AC2  00                 	db	0
  1499  019AC3  00                 	db	0
  1500  019AC4  00                 	db	0
  1501  019AC5  00                 	db	0
  1502  019AC6  00                 	db	0
  1503  019AC7  00                 	db	0
  1504  019AC8  00                 	db	0
  1505  019AC9  00                 	db	0
  1506  019ACA  00                 	db	0
  1507  019ACB  00                 	db	0
  1508  019ACC  00                 	db	0
  1509  019ACD  00                 	db	0
  1510  019ACE  00                 	db	0
  1511  019ACF  00                 	db	0
  1512  019AD0  00                 	db	0
  1513  019AD1  00                 	db	0
  1514  019AD2  00                 	db	0
  1515  019AD3  00                 	db	0
  1516  019AD4  00                 	db	0
  1517  019AD5  00                 	db	0
  1518  019AD6  00                 	db	0
  1519  019AD7  00                 	db	0
  1520  019AD8  00                 	db	0
  1521  019AD9  00                 	db	0
  1522  019ADA  00                 	db	0
  1523  019ADB  00                 	db	0
  1524  019ADC  00                 	db	0
  1525  019ADD  00                 	db	0
  1526  019ADE  00                 	db	0
  1527  019ADF  00                 	db	0
  1528  019AE0  00                 	db	0
  1529  019AE1  00                 	db	0
  1530  019AE2  00                 	db	0
  1531  019AE3  00                 	db	0
  1532  019AE4  00                 	db	0
  1533  019AE5  00                 	db	0
  1534  019AE6  00                 	db	0
  1535  019AE7  00                 	db	0
  1536  019AE8  00                 	db	0
  1537  019AE9  00                 	db	0
  1538  019AEA  00                 	db	0
  1539  019AEB  00                 	db	0
  1540  019AEC  00                 	db	0
  1541  019AED  00                 	db	0
  1542  019AEE  00                 	db	0
  1543  019AEF  00                 	db	0
  1544  019AF0  00                 	db	0
  1545  019AF1  00                 	db	0
  1546  019AF2  00                 	db	0
  1547  019AF3  00                 	db	0
  1548  019AF4  00                 	db	0
  1549  019AF5  00                 	db	0
  1550  019AF6  00                 	db	0
  1551  019AF7  00                 	db	0
  1552  019AF8  00                 	db	0
  1553  019AF9  00                 	db	0
  1554  019AFA  00                 	db	0
  1555  019AFB  00                 	db	0
  1556  019AFC  00                 	db	0
  1557  019AFD  00                 	db	0
  1558  019AFE  00                 	db	0
  1559  019AFF  00                 	db	0
  1560  019B00  00                 	db	0
  1561  019B01  00                 	db	0
  1562  019B02  00                 	db	0
  1563  019B03  00                 	db	0
  1564  019B04  00                 	db	0
  1565  019B05  00                 	db	0
  1566  019B06  00                 	db	0
  1567  019B07  00                 	db	0
  1568  019B08  00                 	db	0
  1569  019B09  00                 	db	0
  1570  019B0A  00                 	db	0
  1571  019B0B  00                 	db	0
  1572  019B0C  00                 	db	0
  1573  019B0D  00                 	db	0
  1574  019B0E  00                 	db	0
  1575  019B0F  00                 	db	0
  1576  019B10  00                 	db	0
  1577  019B11  00                 	db	0
  1578  019B12  00                 	db	0
  1579  019B13  00                 	db	0
  1580  019B14  00                 	db	0
  1581  019B15  00                 	db	0
  1582  019B16  00                 	db	0
  1583  019B17  00                 	db	0
  1584  019B18  00                 	db	0
  1585  019B19  00                 	db	0
  1586  019B1A  00                 	db	0
  1587  019B1B  00                 	db	0
  1588  019B1C  00                 	db	0
  1589  019B1D  0000               	dw	0
  1590  019B1F  0000               	dw	0
  1591  019B21  0000               	dw	0
  1592  019B23  0000               	dw	0
  1593  019B25  00                 	db	0
  1594  019B26  00                 	db	0
  1595  019B27  00                 	db	0
  1596  019B28  00                 	db	0
  1597  019B29  00                 	db	0
  1598  019B2A  00                 	db	0
  1599  019B2B  0000               	dw	0
  1600  019B2D  0000               	dw	0
  1601  019B2F  0000               	dw	0
  1602  019B31  0000               	dw	0
  1603  019B33  0000               	dw	0
  1604  019B35  0000               	dw	0
  1605  019B37  00                 	db	0
  1606  019B38  00                 	db	0
  1607  019B39  00                 	db	0
  1608  019B3A  00                 	db	0
  1609  019B3B  00                 	db	0
  1610  019B3C  00                 	db	0
  1611  019B3D  00                 	db	0
  1612  019B3E  00                 	db	0
  1613  019B3F  00                 	db	0
  1614  019B40  00                 	db	0
  1615  019B41  00                 	db	0
  1616  019B42  0000               	dw	0
  1617  019B44  0000               	dw	0
  1618  019B46  2D                 	db	45
  1619  019B47  00                 	db	0
  1620  019B48  00                 	db	0
  1621  019B49  0000               	dw	0
  1622  019B4B  0000               	dw	0
  1623  019B4D  0000               	dw	0
  1624  019B4F  0000               	dw	0
  1625  019B51  0000               	dw	0
  1626  019B53  0000               	dw	0
  1627  019B55  0000               	dw	0
  1628  019B57  0000               	dw	0
  1629                           
  1630                           	psect	mediumconst
  1631  00FA7A                     __pmediumconst:
  1632                           	opt callstack 0
  1633  00FA7A  00                 	db	0
  1634  00FA7B                     _BVSOC_TABLE:
  1635                           	opt callstack 0
  1636  00FA7B  59D8               	dw	23000
  1637  00FA7D  0000               	dw	0
  1638  00FA7F  0005               	dw	5
  1639  00FA81  0000               	dw	0
  1640  00FA83  5B68               	dw	23400
  1641  00FA85  0000               	dw	0
  1642  00FA87  000A               	dw	10
  1643  00FA89  0000               	dw	0
  1644  00FA8B  5C30               	dw	23600
  1645  00FA8D  0000               	dw	0
  1646  00FA8F  0014               	dw	20
  1647  00FA91  0000               	dw	0
  1648  00FA93  5E38               	dw	24120
  1649  00FA95  0000               	dw	0
  1650  00FA97  0019               	dw	25
  1651  00FA99  0000               	dw	0
  1652  00FA9B  5E88               	dw	24200
  1653  00FA9D  0000               	dw	0
  1654  00FA9F  001E               	dw	30
  1655  00FAA1  0000               	dw	0
  1656  00FAA3  5F78               	dw	24440
  1657  00FAA5  0000               	dw	0
  1658  00FAA7  0028               	dw	40
  1659  00FAA9  0000               	dw	0
  1660  00FAAB  5FDC               	dw	24540
  1661  00FAAD  0000               	dw	0
  1662  00FAAF  002D               	dw	45
  1663  00FAB1  0000               	dw	0
  1664  00FAB3  6018               	dw	24600
  1665  00FAB5  0000               	dw	0
  1666  00FAB7  0032               	dw	50
  1667  00FAB9  0000               	dw	0
  1668  00FABB  6046               	dw	24646
  1669  00FABD  0000               	dw	0
  1670  00FABF  0035               	dw	53
  1671  00FAC1  0000               	dw	0
  1672  00FAC3  607C               	dw	24700
  1673  00FAC5  0000               	dw	0
  1674  00FAC7  0037               	dw	55
  1675  00FAC9  0000               	dw	0
  1676  00FACB  60AE               	dw	24750
  1677  00FACD  0000               	dw	0
  1678  00FACF  0039               	dw	57
  1679  00FAD1  0000               	dw	0
  1680  00FAD3  60E0               	dw	24800
  1681  00FAD5  0000               	dw	0
  1682  00FAD7  003C               	dw	60
  1683  00FAD9  0000               	dw	0
  1684  00FADB  6112               	dw	24850
  1685  00FADD  0000               	dw	0
  1686  00FADF  003F               	dw	63
  1687  00FAE1  0000               	dw	0
  1688  00FAE3  615D               	dw	24925
  1689  00FAE5  0000               	dw	0
  1690  00FAE7  0043               	dw	67
  1691  00FAE9  0000               	dw	0
  1692  00FAEB  61A8               	dw	25000
  1693  00FAED  0000               	dw	0
  1694  00FAEF  0046               	dw	70
  1695  00FAF1  0000               	dw	0
  1696  00FAF3  61BC               	dw	25020
  1697  00FAF5  0000               	dw	0
  1698  00FAF7  0048               	dw	72
  1699  00FAF9  0000               	dw	0
  1700  00FAFB  61D0               	dw	25040
  1701  00FAFD  0000               	dw	0
  1702  00FAFF  004B               	dw	75
  1703  00FB01  0000               	dw	0
  1704  00FB03  61DA               	dw	25050
  1705  00FB05  0000               	dw	0
  1706  00FB07  0050               	dw	80
  1707  00FB09  0000               	dw	0
  1708  00FB0B  61E4               	dw	25060
  1709  00FB0D  0000               	dw	0
  1710  00FB0F  0055               	dw	85
  1711  00FB11  0000               	dw	0
  1712  00FB13  61F8               	dw	25080
  1713  00FB15  0000               	dw	0
  1714  00FB17  005A               	dw	90
  1715  00FB19  0000               	dw	0
  1716  00FB1B  6208               	dw	25096
  1717  00FB1D  0000               	dw	0
  1718  00FB1F  005C               	dw	92
  1719  00FB21  0000               	dw	0
  1720  00FB23  6222               	dw	25122
  1721  00FB25  0000               	dw	0
  1722  00FB27  005D               	dw	93
  1723  00FB29  0000               	dw	0
  1724  00FB2B  6234               	dw	25140
  1725  00FB2D  0000               	dw	0
  1726  00FB2F  005F               	dw	95
  1727  00FB31  0000               	dw	0
  1728  00FB33  6248               	dw	25160
  1729  00FB35  0000               	dw	0
  1730  00FB37  0061               	dw	97
  1731  00FB39  0000               	dw	0
  1732  00FB3B  625C               	dw	25180
  1733  00FB3D  0000               	dw	0
  1734  00FB3F  0064               	dw	100
  1735  00FB41  0000               	dw	0
  1736  00FB43  6784               	dw	26500
  1737  00FB45  0000               	dw	0
  1738  00FB47  0062               	dw	98
  1739  00FB49  0000               	dw	0
  1740  00FB4B                     __end_of_BVSOC_TABLE:
  1741                           	opt callstack 0
  1742  00FB4B                     _T:
  1743                           	opt callstack 0
  1744  00FB4B  63                 	db	99
  1745  00FB4C  6F                 	db	111
  1746  00FB4D  6D                 	db	109
  1747  00FB4E  6D                 	db	109
  1748  00FB4F  61                 	db	97
  1749  00FB50  6E                 	db	110
  1750  00FB51  64                 	db	100
  1751  00FB52  73                 	db	115
  1752  00FB53  20                 	db	32
  1753  00FB54  31                 	db	49
  1754  00FB55  00                 	db	0
  1755  00FB56  00                 	db	0
  1756  00FB57  00                 	db	0
  1757  00FB58  00                 	db	0
  1758  00FB59  00                 	db	0
  1759  00FB5A  00                 	db	0
  1760  00FB5B  00                 	db	0
  1761  00FB5C  00                 	db	0
  1762  00FB5D  64                 	db	100
  1763  00FB5E  69                 	db	105
  1764  00FB5F  73                 	db	115
  1765  00FB60  70                 	db	112
  1766  00FB61  6C                 	db	108
  1767  00FB62  61                 	db	97
  1768  00FB63  79                 	db	121
  1769  00FB64  73                 	db	115
  1770  00FB65  20                 	db	32
  1771  00FB66  31                 	db	49
  1772  00FB67  00                 	db	0
  1773  00FB68  00                 	db	0
  1774  00FB69  00                 	db	0
  1775  00FB6A  00                 	db	0
  1776  00FB6B  00                 	db	0
  1777  00FB6C  00                 	db	0
  1778  00FB6D  00                 	db	0
  1779  00FB6E  00                 	db	0
  1780  00FB6F  63                 	db	99
  1781  00FB70  6F                 	db	111
  1782  00FB71  6D                 	db	109
  1783  00FB72  6D                 	db	109
  1784  00FB73  61                 	db	97
  1785  00FB74  6E                 	db	110
  1786  00FB75  64                 	db	100
  1787  00FB76  73                 	db	115
  1788  00FB77  20                 	db	32
  1789  00FB78  32                 	db	50
  1790  00FB79  00                 	db	0
  1791  00FB7A  00                 	db	0
  1792  00FB7B  00                 	db	0
  1793  00FB7C  00                 	db	0
  1794  00FB7D  00                 	db	0
  1795  00FB7E  00                 	db	0
  1796  00FB7F  00                 	db	0
  1797  00FB80  00                 	db	0
  1798  00FB81  64                 	db	100
  1799  00FB82  69                 	db	105
  1800  00FB83  73                 	db	115
  1801  00FB84  70                 	db	112
  1802  00FB85  6C                 	db	108
  1803  00FB86  61                 	db	97
  1804  00FB87  79                 	db	121
  1805  00FB88  73                 	db	115
  1806  00FB89  20                 	db	32
  1807  00FB8A  32                 	db	50
  1808  00FB8B  00                 	db	0
  1809  00FB8C  00                 	db	0
  1810  00FB8D  00                 	db	0
  1811  00FB8E  00                 	db	0
  1812  00FB8F  00                 	db	0
  1813  00FB90  00                 	db	0
  1814  00FB91  00                 	db	0
  1815  00FB92  00                 	db	0
  1816  00FB93  63                 	db	99
  1817  00FB94  6F                 	db	111
  1818  00FB95  6D                 	db	109
  1819  00FB96  6D                 	db	109
  1820  00FB97  61                 	db	97
  1821  00FB98  6E                 	db	110
  1822  00FB99  64                 	db	100
  1823  00FB9A  73                 	db	115
  1824  00FB9B  20                 	db	32
  1825  00FB9C  33                 	db	51
  1826  00FB9D  00                 	db	0
  1827  00FB9E  00                 	db	0
  1828  00FB9F  00                 	db	0
  1829  00FBA0  00                 	db	0
  1830  00FBA1  00                 	db	0
  1831  00FBA2  00                 	db	0
  1832  00FBA3  00                 	db	0
  1833  00FBA4  00                 	db	0
  1834  00FBA5  64                 	db	100
  1835  00FBA6  69                 	db	105
  1836  00FBA7  73                 	db	115
  1837  00FBA8  70                 	db	112
  1838  00FBA9  6C                 	db	108
  1839  00FBAA  61                 	db	97
  1840  00FBAB  79                 	db	121
  1841  00FBAC  73                 	db	115
  1842  00FBAD  20                 	db	32
  1843  00FBAE  33                 	db	51
  1844  00FBAF  00                 	db	0
  1845  00FBB0  00                 	db	0
  1846  00FBB1  00                 	db	0
  1847  00FBB2  00                 	db	0
  1848  00FBB3  00                 	db	0
  1849  00FBB4  00                 	db	0
  1850  00FBB5  00                 	db	0
  1851  00FBB6  00                 	db	0
  1852  00FBB7  63                 	db	99
  1853  00FBB8  6F                 	db	111
  1854  00FBB9  6D                 	db	109
  1855  00FBBA  6D                 	db	109
  1856  00FBBB  61                 	db	97
  1857  00FBBC  6E                 	db	110
  1858  00FBBD  64                 	db	100
  1859  00FBBE  73                 	db	115
  1860  00FBBF  20                 	db	32
  1861  00FBC0  34                 	db	52
  1862  00FBC1  00                 	db	0
  1863  00FBC2  00                 	db	0
  1864  00FBC3  00                 	db	0
  1865  00FBC4  00                 	db	0
  1866  00FBC5  00                 	db	0
  1867  00FBC6  00                 	db	0
  1868  00FBC7  00                 	db	0
  1869  00FBC8  00                 	db	0
  1870  00FBC9  64                 	db	100
  1871  00FBCA  69                 	db	105
  1872  00FBCB  73                 	db	115
  1873  00FBCC  70                 	db	112
  1874  00FBCD  6C                 	db	108
  1875  00FBCE  61                 	db	97
  1876  00FBCF  79                 	db	121
  1877  00FBD0  73                 	db	115
  1878  00FBD1  20                 	db	32
  1879  00FBD2  34                 	db	52
  1880  00FBD3  00                 	db	0
  1881  00FBD4  00                 	db	0
  1882  00FBD5  00                 	db	0
  1883  00FBD6  00                 	db	0
  1884  00FBD7  00                 	db	0
  1885  00FBD8  00                 	db	0
  1886  00FBD9  00                 	db	0
  1887  00FBDA  00                 	db	0
  1888  00FBDB                     __end_of_T:
  1889                           	opt callstack 0
  1890  00FBDB                     _spin:
  1891                           	opt callstack 0
  1892  00FBDB  7C                 	db	124
  1893  00FBDC  7C                 	db	124
  1894  00FBDD  2F                 	db	47
  1895  00FBDE  2F                 	db	47
  1896  00FBDF  2D                 	db	45
  1897  00FBE0  2D                 	db	45
  1898  00FBE1  00                 	db	0
  1899  00FBE2  00                 	db	0
  1900  00FBE3  00                 	db	0
  1901  00FBE4  00                 	db	0
  1902  00FBE5  00                 	db	0
  1903  00FBE6  00                 	db	0
  1904  00FBE7  00                 	db	0
  1905  00FBE8  00                 	db	0
  1906  00FBE9  00                 	db	0
  1907  00FBEA  00                 	db	0
  1908  00FBEB  00                 	db	0
  1909  00FBEC  00                 	db	0
  1910  00FBED  00                 	db	0
  1911  00FBEE  00                 	db	0
  1912  00FBEF  7C                 	db	124
  1913  00FBF0  7C                 	db	124
  1914  00FBF1  2F                 	db	47
  1915  00FBF2  2F                 	db	47
  1916  00FBF3  2D                 	db	45
  1917  00FBF4  2D                 	db	45
  1918  00FBF5  5C                 	db	92
  1919  00FBF6  5C                 	db	92
  1920  00FBF7  00                 	db	0
  1921  00FBF8  00                 	db	0
  1922  00FBF9  00                 	db	0
  1923  00FBFA  00                 	db	0
  1924  00FBFB  00                 	db	0
  1925  00FBFC  00                 	db	0
  1926  00FBFD  00                 	db	0
  1927  00FBFE  00                 	db	0
  1928  00FBFF  00                 	db	0
  1929  00FC00  00                 	db	0
  1930  00FC01  00                 	db	0
  1931  00FC02  00                 	db	0
  1932  00FC03  4F                 	db	79
  1933  00FC04  4F                 	db	79
  1934  00FC05  4F                 	db	79
  1935  00FC06  4F                 	db	79
  1936  00FC07  4F                 	db	79
  1937  00FC08  4F                 	db	79
  1938  00FC09  2D                 	db	45
  1939  00FC0A  2D                 	db	45
  1940  00FC0B  5F                 	db	95
  1941  00FC0C  5F                 	db	95
  1942  00FC0D  2D                 	db	45
  1943  00FC0E  00                 	db	0
  1944  00FC0F  00                 	db	0
  1945  00FC10  00                 	db	0
  1946  00FC11  00                 	db	0
  1947  00FC12  00                 	db	0
  1948  00FC13  00                 	db	0
  1949  00FC14  00                 	db	0
  1950  00FC15  00                 	db	0
  1951  00FC16  00                 	db	0
  1952  00FC17  76                 	db	118
  1953  00FC18  76                 	db	118
  1954  00FC19  3C                 	db	60
  1955  00FC1A  3C                 	db	60
  1956  00FC1B  5E                 	db	94
  1957  00FC1C  5E                 	db	94
  1958  00FC1D  3E                 	db	62
  1959  00FC1E  3E                 	db	62
  1960  00FC1F  00                 	db	0
  1961  00FC20  00                 	db	0
  1962  00FC21  00                 	db	0
  1963  00FC22  00                 	db	0
  1964  00FC23  00                 	db	0
  1965  00FC24  00                 	db	0
  1966  00FC25  00                 	db	0
  1967  00FC26  00                 	db	0
  1968  00FC27  00                 	db	0
  1969  00FC28  00                 	db	0
  1970  00FC29  00                 	db	0
  1971  00FC2A  00                 	db	0
  1972  00FC2B  2E                 	db	46
  1973  00FC2C  2E                 	db	46
  1974  00FC2D  2A                 	db	42
  1975  00FC2E  2A                 	db	42
  1976  00FC2F  78                 	db	120
  1977  00FC30  23                 	db	35
  1978  00FC31  78                 	db	120
  1979  00FC32  23                 	db	35
  1980  00FC33  58                 	db	88
  1981  00FC34  58                 	db	88
  1982  00FC35  7C                 	db	124
  1983  00FC36  7C                 	db	124
  1984  00FC37  2D                 	db	45
  1985  00FC38  2D                 	db	45
  1986  00FC39  00                 	db	0
  1987  00FC3A  00                 	db	0
  1988  00FC3B  00                 	db	0
  1989  00FC3C  00                 	db	0
  1990  00FC3D  00                 	db	0
  1991  00FC3E  00                 	db	0
  1992  00FC3F  2E                 	db	46
  1993  00FC40  2E                 	db	46
  1994  00FC41  6F                 	db	111
  1995  00FC42  6F                 	db	111
  1996  00FC43  4F                 	db	79
  1997  00FC44  4F                 	db	79
  1998  00FC45  6F                 	db	111
  1999  00FC46  6F                 	db	111
  2000  00FC47  00                 	db	0
  2001  00FC48  00                 	db	0
  2002  00FC49  00                 	db	0
  2003  00FC4A  00                 	db	0
  2004  00FC4B  00                 	db	0
  2005  00FC4C  00                 	db	0
  2006  00FC4D  00                 	db	0
  2007  00FC4E  00                 	db	0
  2008  00FC4F  00                 	db	0
  2009  00FC50  00                 	db	0
  2010  00FC51  00                 	db	0
  2011  00FC52  00                 	db	0
  2012  00FC53                     __end_of_spin:
  2013                           	opt callstack 0
  2014  00FC53  0000               	dw	0
  2015  00FC55  3F80               	dw	16256
  2016  00FC57  0000               	dw	0
  2017  00FC59  3FC0               	dw	16320
  2018  00FC5B                     __end_of_bp:
  2019                           	opt callstack 0
  2020  00FC5B  AA00               	dw	43520
  2021  00FC5D  3FB8               	dw	16312
  2022  00FC5F                     __end_of_ivln2_h:
  2023                           	opt callstack 0
  2024  00FC5F  23C6               	dw	9158
  2025  00FC61  B8F6               	dw	47350
  2026  00FC63                     __end_of_cp_l:
  2027                           	opt callstack 0
  2028  00FC63  4000               	dw	16384
  2029  00FC65  3F76               	dw	16246
  2030  00FC67                     __end_of_cp_h:
  2031                           	opt callstack 0
  2032  0000                     _IVTADL	set	14493
  2033  0000                     _IVTADH	set	14494
  2034  0000                     _IVTADU	set	14495
  2035  0000                     _PIR6bits	set	14758
  2036  0000                     _PIR4bits	set	14756
  2037  0000                     _PIE8bits	set	14744
  2038  0000                     _PIR8bits	set	14760
  2039  0000                     _SCANPR	set	14839
  2040  0000                     _DMA2PR	set	14836
  2041  0000                     _DMA1PR	set	14835
  2042  0000                     _MAINPR	set	14834
  2043  0000                     _ISRPR	set	14833
  2044  0000                     _PIE2bits	set	14738
  2045  0000                     _PIR2bits	set	14754
  2046  0000                     _PIE9bits	set	14745
  2047  0000                     _PIR9bits	set	14761
  2048  0000                     _PIE6bits	set	14742
  2049  0000                     _PIE3bits	set	14739
  2050  0000                     _PMD7	set	14791
  2051  0000                     _PMD6	set	14790
  2052  0000                     _PMD5	set	14789
  2053  0000                     _PMD4	set	14788
  2054  0000                     _PMD3	set	14787
  2055  0000                     _PMD2	set	14786
  2056  0000                     _PMD1	set	14785
  2057  0000                     _PMD0	set	14784
  2058  0000                     _OSCTUNE	set	14814
  2059  0000                     _OSCFRQ	set	14815
  2060  0000                     _OSCEN	set	14813
  2061  0000                     _OSCCON3	set	14811
  2062  0000                     _OSCCON1	set	14809
  2063  0000                     _IPR8bits	set	14728
  2064  0000                     _IPR9bits	set	14729
  2065  0000                     _IPR5bits	set	14725
  2066  0000                     _IPR1bits	set	14721
  2067  0000                     _IPR3bits	set	14723
  2068  0000                     _IPR6bits	set	14726
  2069  0000                     _IPR2bits	set	14722
  2070  0000                     _PIE5bits	set	14741
  2071  0000                     _PIE1bits	set	14737
  2072  0000                     _PIR5bits	set	14757
  2073  0000                     _PIR1bits	set	14753
  2074  0000                     _PLLR	set	118496
  2075  0000                     _SPI1SDIPPS	set	15071
  2076  0000                     _U1RXPPS	set	15077
  2077  0000                     _RC6PPS	set	14870
  2078  0000                     _RC5PPS	set	14869
  2079  0000                     _INT1PPS	set	15041
  2080  0000                     _RD1PPS	set	14873
  2081  0000                     _INT0PPS	set	15040
  2082  0000                     _RC3PPS	set	14867
  2083  0000                     _RB6PPS	set	14862
  2084  0000                     _SPI1SCKPPS	set	15070
  2085  0000                     _U2RXPPS	set	15080
  2086  0000                     _SLRCONF	set	14995
  2087  0000                     _SLRCONE	set	14979
  2088  0000                     _SLRCOND	set	14963
  2089  0000                     _SLRCONC	set	14947
  2090  0000                     _SLRCONB	set	14931
  2091  0000                     _SLRCONA	set	14915
  2092  0000                     _ODCOND	set	14962
  2093  0000                     _ODCONC	set	14946
  2094  0000                     _ODCONB	set	14930
  2095  0000                     _ODCONA	set	14914
  2096  0000                     _ODCONF	set	14994
  2097  0000                     _ODCONE	set	14978
  2098  0000                     _WPUC	set	14945
  2099  0000                     _WPUA	set	14913
  2100  0000                     _WPUB	set	14929
  2101  0000                     _WPUE	set	14977
  2102  0000                     _WPUF	set	14993
  2103  0000                     _WPUD	set	14961
  2104  0000                     _ANSELA	set	14912
  2105  0000                     _ANSELF	set	14992
  2106  0000                     _ANSELE	set	14976
  2107  0000                     _ANSELB	set	14928
  2108  0000                     _ANSELC	set	14944
  2109  0000                     _ANSELD	set	14960
  2110  0000                     _DMA2SSA	set	15321
  2111  0000                     _DMA1SSA	set	15353
  2112  0000                     _DMA2DSZ	set	15310
  2113  0000                     _DMA2SSZ	set	15319
  2114  0000                     _DMA2DSA	set	15312
  2115  0000                     _DMA1DSZ	set	15342
  2116  0000                     _DMA1SSZ	set	15351
  2117  0000                     _DMA1DSA	set	15344
  2118  0000                     _DMA2CON0bits	set	15324
  2119  0000                     _DMA2CON1bits	set	15325
  2120  0000                     _DMA1CON0bits	set	15356
  2121  0000                     _DMA1CON1bits	set	15357
  2122  0000                     _DMA2CON0	set	15324
  2123  0000                     _DMA2AIRQ	set	15326
  2124  0000                     _DMA2SIRQ	set	15327
  2125  0000                     _DMA2CON1	set	15325
  2126  0000                     _DMA1CON0	set	15356
  2127  0000                     _DMA1AIRQ	set	15358
  2128  0000                     _DMA1SIRQ	set	15359
  2129  0000                     _DMA1CON1	set	15357
  2130  0000                     _CLKRCON	set	15589
  2131  0000                     _CLKRCLK	set	15590
  2132  0000                     _SPI1INTFbits	set	15642
  2133  0000                     _SPI1RXB	set	15632
  2134  0000                     _SPI1TXB	set	15633
  2135  0000                     _SPI1TCNTL	set	15634
  2136  0000                     _SPI1CON0	set	15636
  2137  0000                     _SPI1CLK	set	15644
  2138  0000                     _SPI1BAUD	set	15641
  2139  0000                     _SPI1CON2	set	15638
  2140  0000                     _SPI1CON1	set	15637
  2141  0000                     _U2RXB	set	15824
  2142  0000                     _U2TXB	set	15826
  2143  0000                     _U2ERRIE	set	15842
  2144  0000                     _U2ERRIR	set	15841
  2145  0000                     _U2UIR	set	15840
  2146  0000                     _U2FIFO	set	15839
  2147  0000                     _U2BRGH	set	15838
  2148  0000                     _U2BRGL	set	15837
  2149  0000                     _U2CON2	set	15836
  2150  0000                     _U2CON1	set	15835
  2151  0000                     _U2CON0	set	15834
  2152  0000                     _U2P3L	set	15832
  2153  0000                     _U2P2L	set	15830
  2154  0000                     _U2P1L	set	15828
  2155  0000                     _U1RXB	set	15848
  2156  0000                     _U1ERRIE	set	15866
  2157  0000                     _U1ERRIR	set	15865
  2158  0000                     _U1UIR	set	15864
  2159  0000                     _U1FIFO	set	15863
  2160  0000                     _U1BRGH	set	15862
  2161  0000                     _U1BRGL	set	15861
  2162  0000                     _U1CON2	set	15860
  2163  0000                     _U1CON1	set	15859
  2164  0000                     _U1CON0	set	15858
  2165  0000                     _U1P3H	set	15857
  2166  0000                     _U1P3L	set	15856
  2167  0000                     _U1P2H	set	15855
  2168  0000                     _U1P2L	set	15854
  2169  0000                     _U1P1H	set	15853
  2170  0000                     _U1P1L	set	15852
  2171  0000                     _FVRCON	set	16065
  2172  0000                     _ADFLTRL	set	16102
  2173  0000                     _ADFLTRH	set	16103
  2174  0000                     _ADCON0bits	set	16120
  2175  0000                     _ADCON0	set	16120
  2176  0000                     _ADCLK	set	16127
  2177  0000                     _ADACT	set	16126
  2178  0000                     _ADREF	set	16125
  2179  0000                     _ADSTAT	set	16124
  2180  0000                     _ADCON3	set	16123
  2181  0000                     _ADCON2	set	16122
  2182  0000                     _ADCON1	set	16121
  2183  0000                     _ADPREH	set	16119
  2184  0000                     _ADPREL	set	16118
  2185  0000                     _ADCAP	set	16117
  2186  0000                     _ADACQH	set	16116
  2187  0000                     _ADACQL	set	16115
  2188  0000                     _ADPCH	set	16113
  2189  0000                     _ADRPT	set	16108
  2190  0000                     _ADACCU	set	16106
  2191  0000                     _ADSTPTH	set	16101
  2192  0000                     _ADSTPTL	set	16100
  2193  0000                     _ADUTHH	set	16097
  2194  0000                     _ADUTHL	set	16096
  2195  0000                     _ADLTHH	set	16095
  2196  0000                     _ADLTHL	set	16094
  2197  0000                     _CCPTMRS1bits	set	16223
  2198  0000                     _PORTFbits	set	16335
  2199  0000                     _LATCbits	set	16316
  2200  0000                     _LATDbits	set	16317
  2201  0000                     _PORTBbits	set	16331
  2202  0000                     _T3CONbits	set	16294
  2203  0000                     _T3CON	set	16294
  2204  0000                     _TMR3L	set	16292
  2205  0000                     _TMR3H	set	16293
  2206  0000                     _T3CLK	set	16297
  2207  0000                     _T3GATE	set	16296
  2208  0000                     _T3GCON	set	16295
  2209  0000                     _T2CON	set	16300
  2210  0000                     _T2TMR	set	16298
  2211  0000                     _T2PR	set	16299
  2212  0000                     _T2RST	set	16303
  2213  0000                     _T2HLT	set	16301
  2214  0000                     _T2CLKCON	set	16302
  2215  0000                     _PWM8DCL	set	16224
  2216  0000                     _PWM8DCH	set	16225
  2217  0000                     _PWM8CON	set	16226
  2218  0000                     _LATEbits	set	16318
  2219  0000                     _T5CONbits	set	16282
  2220  0000                     _T5CON	set	16282
  2221  0000                     _TMR5L	set	16280
  2222  0000                     _TMR5H	set	16281
  2223  0000                     _T5CLK	set	16285
  2224  0000                     _T5GATE	set	16284
  2225  0000                     _T5GCON	set	16283
  2226  0000                     _T6CON	set	16276
  2227  0000                     _T6TMR	set	16274
  2228  0000                     _T6PR	set	16275
  2229  0000                     _T6RST	set	16279
  2230  0000                     _T6HLT	set	16277
  2231  0000                     _T6CLKCON	set	16278
  2232  0000                     _TRISD	set	16325
  2233  0000                     _TRISC	set	16324
  2234  0000                     _TRISB	set	16323
  2235  0000                     _TRISA	set	16322
  2236  0000                     _TRISF	set	16327
  2237  0000                     _TRISE	set	16326
  2238  0000                     _LATC	set	16316
  2239  0000                     _LATB	set	16315
  2240  0000                     _LATF	set	16319
  2241  0000                     _LATA	set	16314
  2242  0000                     _LATD	set	16317
  2243  0000                     _LATE	set	16318
  2244  0000                     _IVTLOCKbits	set	16340
  2245  0000                     _IVTLOCK	set	16340
  2246  0000                     _INTCON0bits	set	16338
  2247  0000                     _GIE	set	130711
  2248  00FC67                     STR_65:
  2249                           
  2250                           ; BSR set to: 57
  2251  00FC67  20                 	db	32
  2252  00FC68  25                 	db	37
  2253  00FC69  6C                 	db	108	;'l'
  2254  00FC6A  75                 	db	117	;'u'
  2255  00FC6B  2C                 	db	44
  2256  00FC6C  25                 	db	37
  2257  00FC6D  34                 	db	52	;'4'
  2258  00FC6E  2E                 	db	46
  2259  00FC6F  34                 	db	52	;'4'
  2260  00FC70  66                 	db	102	;'f'
  2261  00FC71  2C                 	db	44
  2262  00FC72  25                 	db	37
  2263  00FC73  34                 	db	52	;'4'
  2264  00FC74  2E                 	db	46
  2265  00FC75  34                 	db	52	;'4'
  2266  00FC76  66                 	db	102	;'f'
  2267  00FC77  2C                 	db	44
  2268  00FC78  25                 	db	37
  2269  00FC79  34                 	db	52	;'4'
  2270  00FC7A  2E                 	db	46
  2271  00FC7B  34                 	db	52	;'4'
  2272  00FC7C  66                 	db	102	;'f'
  2273  00FC7D  2C                 	db	44
  2274  00FC7E  25                 	db	37
  2275  00FC7F  34                 	db	52	;'4'
  2276  00FC80  2E                 	db	46
  2277  00FC81  34                 	db	52	;'4'
  2278  00FC82  66                 	db	102	;'f'
  2279  00FC83  2C                 	db	44
  2280  00FC84  25                 	db	37
  2281  00FC85  34                 	db	52	;'4'
  2282  00FC86  2E                 	db	46
  2283  00FC87  33                 	db	51	;'3'
  2284  00FC88  66                 	db	102	;'f'
  2285  00FC89  2C                 	db	44
  2286  00FC8A  25                 	db	37
  2287  00FC8B  34                 	db	52	;'4'
  2288  00FC8C  2E                 	db	46
  2289  00FC8D  33                 	db	51	;'3'
  2290  00FC8E  66                 	db	102	;'f'
  2291  00FC8F  2C                 	db	44
  2292  00FC90  25                 	db	37
  2293  00FC91  34                 	db	52	;'4'
  2294  00FC92  2E                 	db	46
  2295  00FC93  33                 	db	51	;'3'
  2296  00FC94  66                 	db	102	;'f'
  2297  00FC95  2C                 	db	44
  2298  00FC96  25                 	db	37
  2299  00FC97  34                 	db	52	;'4'
  2300  00FC98  2E                 	db	46
  2301  00FC99  33                 	db	51	;'3'
  2302  00FC9A  66                 	db	102	;'f'
  2303  00FC9B  2C                 	db	44
  2304  00FC9C  25                 	db	37
  2305  00FC9D  34                 	db	52	;'4'
  2306  00FC9E  2E                 	db	46
  2307  00FC9F  33                 	db	51	;'3'
  2308  00FCA0  66                 	db	102	;'f'
  2309  00FCA1  2C                 	db	44
  2310  00FCA2  25                 	db	37
  2311  00FCA3  34                 	db	52	;'4'
  2312  00FCA4  2E                 	db	46
  2313  00FCA5  33                 	db	51	;'3'
  2314  00FCA6  66                 	db	102	;'f'
  2315  00FCA7  2C                 	db	44
  2316  00FCA8  25                 	db	37
  2317  00FCA9  34                 	db	52	;'4'
  2318  00FCAA  2E                 	db	46
  2319  00FCAB  33                 	db	51	;'3'
  2320  00FCAC  64                 	db	100	;'d'
  2321  00FCAD  2C                 	db	44
  2322  00FCAE  25                 	db	37
  2323  00FCAF  34                 	db	52	;'4'
  2324  00FCB0  2E                 	db	46
  2325  00FCB1  33                 	db	51	;'3'
  2326  00FCB2  64                 	db	100	;'d'
  2327  00FCB3  2C                 	db	44
  2328  00FCB4  25                 	db	37
  2329  00FCB5  32                 	db	50	;'2'
  2330  00FCB6  2E                 	db	46
  2331  00FCB7  36                 	db	54	;'6'
  2332  00FCB8  66                 	db	102	;'f'
  2333  00FCB9  0D                 	db	13
  2334  00FCBA  0A                 	db	10
  2335  00FCBB  00                 	db	0
  2336  00FCBC                     STR_17:
  2337                           
  2338                           ; BSR set to: 57
  2339  00FCBC  52                 	db	82	;'R'
  2340  00FCBD  31                 	db	49	;'1'
  2341  00FCBE  20                 	db	32
  2342  00FCBF  25                 	db	37
  2343  00FCC0  32                 	db	50	;'2'
  2344  00FCC1  2E                 	db	46
  2345  00FCC2  33                 	db	51	;'3'
  2346  00FCC3  66                 	db	102	;'f'
  2347  00FCC4  20                 	db	32
  2348  00FCC5  25                 	db	37
  2349  00FCC6  33                 	db	51	;'3'
  2350  00FCC7  2E                 	db	46
  2351  00FCC8  34                 	db	52	;'4'
  2352  00FCC9  66                 	db	102	;'f'
  2353  00FCCA  20                 	db	32
  2354  00FCCB  20                 	db	32
  2355  00FCCC  20                 	db	32
  2356  00FCCD  20                 	db	32
  2357  00FCCE  20                 	db	32
  2358  00FCCF  20                 	db	32
  2359  00FCD0  20                 	db	32
  2360  00FCD1  20                 	db	32
  2361  00FCD2  20                 	db	32
  2362  00FCD3  20                 	db	32
  2363  00FCD4  20                 	db	32
  2364  00FCD5  00                 	db	0
  2365  00FCD6                     STR_18:
  2366                           
  2367                           ; BSR set to: 57
  2368  00FCD6  52                 	db	82	;'R'
  2369  00FCD7  32                 	db	50	;'2'
  2370  00FCD8  20                 	db	32
  2371  00FCD9  25                 	db	37
  2372  00FCDA  32                 	db	50	;'2'
  2373  00FCDB  2E                 	db	46
  2374  00FCDC  33                 	db	51	;'3'
  2375  00FCDD  66                 	db	102	;'f'
  2376  00FCDE  20                 	db	32
  2377  00FCDF  25                 	db	37
  2378  00FCE0  33                 	db	51	;'3'
  2379  00FCE1  2E                 	db	46
  2380  00FCE2  34                 	db	52	;'4'
  2381  00FCE3  66                 	db	102	;'f'
  2382  00FCE4  20                 	db	32
  2383  00FCE5  20                 	db	32
  2384  00FCE6  20                 	db	32
  2385  00FCE7  20                 	db	32
  2386  00FCE8  20                 	db	32
  2387  00FCE9  20                 	db	32
  2388  00FCEA  20                 	db	32
  2389  00FCEB  20                 	db	32
  2390  00FCEC  20                 	db	32
  2391  00FCED  20                 	db	32
  2392  00FCEE  20                 	db	32
  2393  00FCEF  00                 	db	0
  2394  00FCF0                     
  2395                           ; BSR set to: 57
  2396  00FCF0  20                 	db	32
  2397  00FCF1  4D                 	db	77	;'M'
  2398  00FCF2  65                 	db	101	;'e'
  2399  00FCF3  73                 	db	115	;'s'
  2400  00FCF4  67                 	db	103	;'g'
  2401  00FCF5  20                 	db	32
  2402  00FCF6  25                 	db	37
  2403  00FCF7  64                 	db	100	;'d'
  2404  00FCF8  20                 	db	32
  2405  00FCF9  53                 	db	83	;'S'
  2406  00FCFA  74                 	db	116	;'t'
  2407  00FCFB  61                 	db	97	;'a'
  2408  00FCFC  63                 	db	99	;'c'
  2409  00FCFD  6B                 	db	107	;'k'
  2410  00FCFE  20                 	db	32
  2411  00FCFF  25                 	db	37
  2412  00FD00  64                 	db	100	;'d'
  2413  00FD01  20                 	db	32
  2414  00FD02  20                 	db	32
  2415  00FD03  20                 	db	32
  2416  00FD04  20                 	db	32
  2417  00FD05  20                 	db	32
  2418  00FD06  20                 	db	32
  2419  00FD07  00                 	db	0
  2420  00FD08                     STR_9:
  2421                           
  2422                           ; BSR set to: 57
  2423  00FD08  53                 	db	83	;'S'
  2424  00FD09  20                 	db	32
  2425  00FD0A  53                 	db	83	;'S'
  2426  00FD0B  25                 	db	37
  2427  00FD0C  63                 	db	99	;'c'
  2428  00FD0D  43                 	db	67	;'C'
  2429  00FD0E  20                 	db	32
  2430  00FD0F  25                 	db	37
  2431  00FD10  64                 	db	100	;'d'
  2432  00FD11  20                 	db	32
  2433  00FD12  25                 	db	37
  2434  00FD13  32                 	db	50	;'2'
  2435  00FD14  2E                 	db	46
  2436  00FD15  34                 	db	52	;'4'
  2437  00FD16  66                 	db	102	;'f'
  2438  00FD17  20                 	db	32
  2439  00FD18  20                 	db	32
  2440  00FD19  20                 	db	32
  2441  00FD1A  20                 	db	32
  2442  00FD1B  20                 	db	32
  2443  00FD1C  20                 	db	32
  2444  00FD1D  20                 	db	32
  2445  00FD1E  00                 	db	0
  2446  00FD1F                     STR_16:
  2447                           
  2448                           ; BSR set to: 57
  2449  00FD1F  45                 	db	69	;'E'
  2450  00FD20  53                 	db	83	;'S'
  2451  00FD21  52                 	db	82	;'R'
  2452  00FD22  20                 	db	32
  2453  00FD23  20                 	db	32
  2454  00FD24  25                 	db	37
  2455  00FD25  32                 	db	50	;'2'
  2456  00FD26  2E                 	db	46
  2457  00FD27  36                 	db	54	;'6'
  2458  00FD28  66                 	db	102	;'f'
  2459  00FD29  20                 	db	32
  2460  00FD2A  20                 	db	32
  2461  00FD2B  20                 	db	32
  2462  00FD2C  20                 	db	32
  2463  00FD2D  20                 	db	32
  2464  00FD2E  20                 	db	32
  2465  00FD2F  20                 	db	32
  2466  00FD30  20                 	db	32
  2467  00FD31  20                 	db	32
  2468  00FD32  20                 	db	32
  2469  00FD33  20                 	db	32
  2470  00FD34  00                 	db	0
  2471  00FD35                     STR_10:
  2472                           
  2473                           ; BSR set to: 57
  2474  00FD35  53                 	db	83	;'S'
  2475  00FD36  74                 	db	116	;'t'
  2476  00FD37  61                 	db	97	;'a'
  2477  00FD38  74                 	db	116	;'t'
  2478  00FD39  69                 	db	105	;'i'
  2479  00FD3A  63                 	db	99	;'c'
  2480  00FD3B  20                 	db	32
  2481  00FD3C  53                 	db	83	;'S'
  2482  00FD3D  4F                 	db	79	;'O'
  2483  00FD3E  43                 	db	67	;'C'
  2484  00FD3F  20                 	db	32
  2485  00FD40  25                 	db	37
  2486  00FD41  64                 	db	100	;'d'
  2487  00FD42  20                 	db	32
  2488  00FD43  20                 	db	32
  2489  00FD44  20                 	db	32
  2490  00FD45  20                 	db	32
  2491  00FD46  20                 	db	32
  2492  00FD47  20                 	db	32
  2493  00FD48  20                 	db	32
  2494  00FD49  20                 	db	32
  2495  00FD4A  00                 	db	0
  2496  00FD4B                     STR_11:
  2497                           
  2498                           ; BSR set to: 57
  2499  00FD4B  42                 	db	66	;'B'
  2500  00FD4C  61                 	db	97	;'a'
  2501  00FD4D  74                 	db	116	;'t'
  2502  00FD4E  74                 	db	116	;'t'
  2503  00FD4F  65                 	db	101	;'e'
  2504  00FD50  72                 	db	114	;'r'
  2505  00FD51  79                 	db	121	;'y'
  2506  00FD52  20                 	db	32
  2507  00FD53  41                 	db	65	;'A'
  2508  00FD54  68                 	db	104	;'h'
  2509  00FD55  20                 	db	32
  2510  00FD56  25                 	db	37
  2511  00FD57  33                 	db	51	;'3'
  2512  00FD58  2E                 	db	46
  2513  00FD59  32                 	db	50	;'2'
  2514  00FD5A  66                 	db	102	;'f'
  2515  00FD5B  20                 	db	32
  2516  00FD5C  20                 	db	32
  2517  00FD5D  20                 	db	32
  2518  00FD5E  20                 	db	32
  2519  00FD5F  20                 	db	32
  2520  00FD60  00                 	db	0
  2521  00FD61                     STR_15:
  2522                           
  2523                           ; BSR set to: 57
  2524  00FD61  43                 	db	67	;'C'
  2525  00FD62  68                 	db	104	;'h'
  2526  00FD63  65                 	db	101	;'e'
  2527  00FD64  63                 	db	99	;'c'
  2528  00FD65  6B                 	db	107	;'k'
  2529  00FD66  69                 	db	105	;'i'
  2530  00FD67  6E                 	db	110	;'n'
  2531  00FD68  67                 	db	103	;'g'
  2532  00FD69  20                 	db	32
  2533  00FD6A  25                 	db	37
  2534  00FD6B  32                 	db	50	;'2'
  2535  00FD6C  2E                 	db	46
  2536  00FD6D  31                 	db	49	;'1'
  2537  00FD6E  66                 	db	102	;'f'
  2538  00FD6F  20                 	db	32
  2539  00FD70  25                 	db	37
  2540  00FD71  63                 	db	99	;'c'
  2541  00FD72  20                 	db	32
  2542  00FD73  20                 	db	32
  2543  00FD74  20                 	db	32
  2544  00FD75  20                 	db	32
  2545  00FD76  00                 	db	0
  2546  00FD77                     STR_37:
  2547                           
  2548                           ; BSR set to: 57
  2549  00FD77  45                 	db	69	;'E'
  2550  00FD78  53                 	db	83	;'S'
  2551  00FD79  52                 	db	82	;'R'
  2552  00FD7A  20                 	db	32
  2553  00FD7B  20                 	db	32
  2554  00FD7C  25                 	db	37
  2555  00FD7D  32                 	db	50	;'2'
  2556  00FD7E  2E                 	db	46
  2557  00FD7F  36                 	db	54	;'6'
  2558  00FD80  66                 	db	102	;'f'
  2559  00FD81  20                 	db	32
  2560  00FD82  20                 	db	32
  2561  00FD83  20                 	db	32
  2562  00FD84  20                 	db	32
  2563  00FD85  20                 	db	32
  2564  00FD86  20                 	db	32
  2565  00FD87  20                 	db	32
  2566  00FD88  20                 	db	32
  2567  00FD89  20                 	db	32
  2568  00FD8A  00                 	db	0
  2569  00FD8B                     STR_36:
  2570                           
  2571                           ; BSR set to: 57
  2572  00FD8B  53                 	db	83	;'S'
  2573  00FD8C  25                 	db	37
  2574  00FD8D  63                 	db	99	;'c'
  2575  00FD8E  43                 	db	67	;'C'
  2576  00FD8F  20                 	db	32
  2577  00FD90  25                 	db	37
  2578  00FD91  64                 	db	100	;'d'
  2579  00FD92  20                 	db	32
  2580  00FD93  52                 	db	82	;'R'
  2581  00FD94  55                 	db	85	;'U'
  2582  00FD95  4E                 	db	78	;'N'
  2583  00FD96  20                 	db	32
  2584  00FD97  25                 	db	37
  2585  00FD98  64                 	db	100	;'d'
  2586  00FD99  20                 	db	32
  2587  00FD9A  20                 	db	32
  2588  00FD9B  20                 	db	32
  2589  00FD9C  20                 	db	32
  2590  00FD9D  20                 	db	32
  2591  00FD9E  00                 	db	0
  2592  00FD9F                     STR_34:
  2593                           
  2594                           ; BSR set to: 57
  2595  00FD9F  42                 	db	66	;'B'
  2596  00FDA0  41                 	db	65	;'A'
  2597  00FDA1  54                 	db	84	;'T'
  2598  00FDA2  54                 	db	84	;'T'
  2599  00FDA3  20                 	db	32
  2600  00FDA4  50                 	db	80	;'P'
  2601  00FDA5  57                 	db	87	;'W'
  2602  00FDA6  52                 	db	82	;'R'
  2603  00FDA7  20                 	db	32
  2604  00FDA8  25                 	db	37
  2605  00FDA9  33                 	db	51	;'3'
  2606  00FDAA  2E                 	db	46
  2607  00FDAB  32                 	db	50	;'2'
  2608  00FDAC  66                 	db	102	;'f'
  2609  00FDAD  20                 	db	32
  2610  00FDAE  20                 	db	32
  2611  00FDAF  20                 	db	32
  2612  00FDB0  20                 	db	32
  2613  00FDB1  20                 	db	32
  2614  00FDB2  00                 	db	0
  2615  00FDB3                     STR_38:
  2616                           
  2617                           ; BSR set to: 57
  2618  00FDB3  52                 	db	82	;'R'
  2619  00FDB4  31                 	db	49	;'1'
  2620  00FDB5  20                 	db	32
  2621  00FDB6  25                 	db	37
  2622  00FDB7  32                 	db	50	;'2'
  2623  00FDB8  2E                 	db	46
  2624  00FDB9  33                 	db	51	;'3'
  2625  00FDBA  66                 	db	102	;'f'
  2626  00FDBB  20                 	db	32
  2627  00FDBC  25                 	db	37
  2628  00FDBD  33                 	db	51	;'3'
  2629  00FDBE  2E                 	db	46
  2630  00FDBF  34                 	db	52	;'4'
  2631  00FDC0  66                 	db	102	;'f'
  2632  00FDC1  20                 	db	32
  2633  00FDC2  20                 	db	32
  2634  00FDC3  20                 	db	32
  2635  00FDC4  20                 	db	32
  2636  00FDC5  20                 	db	32
  2637  00FDC6  00                 	db	0
  2638  00FDC7                     STR_39:
  2639                           
  2640                           ; BSR set to: 57
  2641  00FDC7  52                 	db	82	;'R'
  2642  00FDC8  32                 	db	50	;'2'
  2643  00FDC9  20                 	db	32
  2644  00FDCA  25                 	db	37
  2645  00FDCB  32                 	db	50	;'2'
  2646  00FDCC  2E                 	db	46
  2647  00FDCD  33                 	db	51	;'3'
  2648  00FDCE  66                 	db	102	;'f'
  2649  00FDCF  20                 	db	32
  2650  00FDD0  25                 	db	37
  2651  00FDD1  33                 	db	51	;'3'
  2652  00FDD2  2E                 	db	46
  2653  00FDD3  34                 	db	52	;'4'
  2654  00FDD4  66                 	db	102	;'f'
  2655  00FDD5  20                 	db	32
  2656  00FDD6  20                 	db	32
  2657  00FDD7  20                 	db	32
  2658  00FDD8  20                 	db	32
  2659  00FDD9  20                 	db	32
  2660  00FDDA  00                 	db	0
  2661  00FDDB                     STR_35:
  2662                           
  2663                           ; BSR set to: 57
  2664  00FDDB  42                 	db	66	;'B'
  2665  00FDDC  41                 	db	65	;'A'
  2666  00FDDD  48                 	db	72	;'H'
  2667  00FDDE  20                 	db	32
  2668  00FDDF  25                 	db	37
  2669  00FDE0  33                 	db	51	;'3'
  2670  00FDE1  2E                 	db	46
  2671  00FDE2  32                 	db	50	;'2'
  2672  00FDE3  66                 	db	102	;'f'
  2673  00FDE4  20                 	db	32
  2674  00FDE5  50                 	db	80	;'P'
  2675  00FDE6  25                 	db	37
  2676  00FDE7  33                 	db	51	;'3'
  2677  00FDE8  2E                 	db	46
  2678  00FDE9  32                 	db	50	;'2'
  2679  00FDEA  66                 	db	102	;'f'
  2680  00FDEB  20                 	db	32
  2681  00FDEC  20                 	db	32
  2682  00FDED  20                 	db	32
  2683  00FDEE  00                 	db	0
  2684  00FDEF                     STR_58:
  2685                           
  2686                           ; BSR set to: 57
  2687  00FDEF  20                 	db	32
  2688  00FDF0  20                 	db	32
  2689  00FDF1  20                 	db	32
  2690  00FDF2  20                 	db	32
  2691  00FDF3  20                 	db	32
  2692  00FDF4  20                 	db	32
  2693  00FDF5  20                 	db	32
  2694  00FDF6  20                 	db	32
  2695  00FDF7  20                 	db	32
  2696  00FDF8  20                 	db	32
  2697  00FDF9  20                 	db	32
  2698  00FDFA  20                 	db	32
  2699  00FDFB  20                 	db	32
  2700  00FDFC  20                 	db	32
  2701  00FDFD  20                 	db	32
  2702  00FDFE  20                 	db	32
  2703  00FDFF  20                 	db	32
  2704  00FE00  20                 	db	32
  2705  00FE01  00                 	db	0
  2706  00FE02                     STR_48:
  2707                           
  2708                           ; BSR set to: 57
  2709  00FE02  48                 	db	72	;'H'
  2710  00FE03  45                 	db	69	;'E'
  2711  00FE04  4C                 	db	76	;'L'
  2712  00FE05  50                 	db	80	;'P'
  2713  00FE06  20                 	db	32
  2714  00FE07  25                 	db	37
  2715  00FE08  73                 	db	115	;'s'
  2716  00FE09  20                 	db	32
  2717  00FE0A  20                 	db	32
  2718  00FE0B  20                 	db	32
  2719  00FE0C  20                 	db	32
  2720  00FE0D  20                 	db	32
  2721  00FE0E  20                 	db	32
  2722  00FE0F  20                 	db	32
  2723  00FE10  20                 	db	32
  2724  00FE11  20                 	db	32
  2725  00FE12  20                 	db	32
  2726  00FE13  20                 	db	32
  2727  00FE14  00                 	db	0
  2728  00FE15                     
  2729                           ; BSR set to: 57
  2730  00FE15  44                 	db	68	;'D'
  2731  00FE16  49                 	db	73	;'I'
  2732  00FE17  53                 	db	83	;'S'
  2733  00FE18  50                 	db	80	;'P'
  2734  00FE19  4C                 	db	76	;'L'
  2735  00FE1A  41                 	db	65	;'A'
  2736  00FE1B  59                 	db	89	;'Y'
  2737  00FE1C  20                 	db	32
  2738  00FE1D  25                 	db	37
  2739  00FE1E  73                 	db	115	;'s'
  2740  00FE1F  20                 	db	32
  2741  00FE20  20                 	db	32
  2742  00FE21  20                 	db	32
  2743  00FE22  20                 	db	32
  2744  00FE23  20                 	db	32
  2745  00FE24  20                 	db	32
  2746  00FE25  20                 	db	32
  2747  00FE26  20                 	db	32
  2748  00FE27  00                 	db	0
  2749  00FE28                     STR_31:
  2750                           
  2751                           ; BSR set to: 57
  2752  00FE28  42                 	db	66	;'B'
  2753  00FE29  41                 	db	65	;'A'
  2754  00FE2A  54                 	db	84	;'T'
  2755  00FE2B  20                 	db	32
  2756  00FE2C  49                 	db	73	;'I'
  2757  00FE2D  57                 	db	87	;'W'
  2758  00FE2E  48                 	db	72	;'H'
  2759  00FE2F  20                 	db	32
  2760  00FE30  25                 	db	37
  2761  00FE31  34                 	db	52	;'4'
  2762  00FE32  2E                 	db	46
  2763  00FE33  31                 	db	49	;'1'
  2764  00FE34  66                 	db	102	;'f'
  2765  00FE35  20                 	db	32
  2766  00FE36  20                 	db	32
  2767  00FE37  20                 	db	32
  2768  00FE38  20                 	db	32
  2769  00FE39  20                 	db	32
  2770  00FE3A  00                 	db	0
  2771  00FE3B                     STR_32:
  2772                           
  2773                           ; BSR set to: 57
  2774  00FE3B  42                 	db	66	;'B'
  2775  00FE3C  41                 	db	65	;'A'
  2776  00FE3D  54                 	db	84	;'T'
  2777  00FE3E  20                 	db	32
  2778  00FE3F  4F                 	db	79	;'O'
  2779  00FE40  57                 	db	87	;'W'
  2780  00FE41  48                 	db	72	;'H'
  2781  00FE42  20                 	db	32
  2782  00FE43  25                 	db	37
  2783  00FE44  34                 	db	52	;'4'
  2784  00FE45  2E                 	db	46
  2785  00FE46  31                 	db	49	;'1'
  2786  00FE47  66                 	db	102	;'f'
  2787  00FE48  20                 	db	32
  2788  00FE49  20                 	db	32
  2789  00FE4A  20                 	db	32
  2790  00FE4B  20                 	db	32
  2791  00FE4C  20                 	db	32
  2792  00FE4D  00                 	db	0
  2793  00FE4E                     STR_33:
  2794                           
  2795                           ; BSR set to: 57
  2796  00FE4E  42                 	db	66	;'B'
  2797  00FE4F  41                 	db	65	;'A'
  2798  00FE50  54                 	db	84	;'T'
  2799  00FE51  20                 	db	32
  2800  00FE52  54                 	db	84	;'T'
  2801  00FE53  57                 	db	87	;'W'
  2802  00FE54  48                 	db	72	;'H'
  2803  00FE55  20                 	db	32
  2804  00FE56  25                 	db	37
  2805  00FE57  34                 	db	52	;'4'
  2806  00FE58  2E                 	db	46
  2807  00FE59  31                 	db	49	;'1'
  2808  00FE5A  66                 	db	102	;'f'
  2809  00FE5B  20                 	db	32
  2810  00FE5C  20                 	db	32
  2811  00FE5D  20                 	db	32
  2812  00FE5E  20                 	db	32
  2813  00FE5F  20                 	db	32
  2814  00FE60  00                 	db	0
  2815  00FE61                     STR_25:
  2816                           
  2817                           ; BSR set to: 57
  2818  00FE61  50                 	db	80	;'P'
  2819  00FE62  56                 	db	86	;'V'
  2820  00FE63  20                 	db	32
  2821  00FE64  20                 	db	32
  2822  00FE65  20                 	db	32
  2823  00FE66  57                 	db	87	;'W'
  2824  00FE67  48                 	db	72	;'H'
  2825  00FE68  20                 	db	32
  2826  00FE69  25                 	db	37
  2827  00FE6A  33                 	db	51	;'3'
  2828  00FE6B  2E                 	db	46
  2829  00FE6C  32                 	db	50	;'2'
  2830  00FE6D  66                 	db	102	;'f'
  2831  00FE6E  20                 	db	32
  2832  00FE6F  20                 	db	32
  2833  00FE70  20                 	db	32
  2834  00FE71  20                 	db	32
  2835  00FE72  20                 	db	32
  2836  00FE73  00                 	db	0
  2837  00FE74                     STR_27:
  2838                           
  2839                           ; BSR set to: 57
  2840  00FE74  49                 	db	73	;'I'
  2841  00FE75  4E                 	db	78	;'N'
  2842  00FE76  56                 	db	86	;'V'
  2843  00FE77  20                 	db	32
  2844  00FE78  20                 	db	32
  2845  00FE79  57                 	db	87	;'W'
  2846  00FE7A  48                 	db	72	;'H'
  2847  00FE7B  20                 	db	32
  2848  00FE7C  25                 	db	37
  2849  00FE7D  33                 	db	51	;'3'
  2850  00FE7E  2E                 	db	46
  2851  00FE7F  32                 	db	50	;'2'
  2852  00FE80  66                 	db	102	;'f'
  2853  00FE81  20                 	db	32
  2854  00FE82  20                 	db	32
  2855  00FE83  20                 	db	32
  2856  00FE84  20                 	db	32
  2857  00FE85  20                 	db	32
  2858  00FE86  00                 	db	0
  2859  00FE87                     STR_26:
  2860                           
  2861                           ; BSR set to: 57
  2862  00FE87  4C                 	db	76	;'L'
  2863  00FE88  4F                 	db	79	;'O'
  2864  00FE89  41                 	db	65	;'A'
  2865  00FE8A  44                 	db	68	;'D'
  2866  00FE8B  20                 	db	32
  2867  00FE8C  57                 	db	87	;'W'
  2868  00FE8D  48                 	db	72	;'H'
  2869  00FE8E  20                 	db	32
  2870  00FE8F  25                 	db	37
  2871  00FE90  33                 	db	51	;'3'
  2872  00FE91  2E                 	db	46
  2873  00FE92  32                 	db	50	;'2'
  2874  00FE93  66                 	db	102	;'f'
  2875  00FE94  20                 	db	32
  2876  00FE95  20                 	db	32
  2877  00FE96  20                 	db	32
  2878  00FE97  20                 	db	32
  2879  00FE98  20                 	db	32
  2880  00FE99  00                 	db	0
  2881  00FE9A                     STR_22:
  2882                           
  2883                           ; BSR set to: 57
  2884  00FE9A  50                 	db	80	;'P'
  2885  00FE9B  56                 	db	86	;'V'
  2886  00FE9C  20                 	db	32
  2887  00FE9D  20                 	db	32
  2888  00FE9E  20                 	db	32
  2889  00FE9F  50                 	db	80	;'P'
  2890  00FEA0  57                 	db	87	;'W'
  2891  00FEA1  52                 	db	82	;'R'
  2892  00FEA2  20                 	db	32
  2893  00FEA3  25                 	db	37
  2894  00FEA4  33                 	db	51	;'3'
  2895  00FEA5  2E                 	db	46
  2896  00FEA6  32                 	db	50	;'2'
  2897  00FEA7  66                 	db	102	;'f'
  2898  00FEA8  20                 	db	32
  2899  00FEA9  20                 	db	32
  2900  00FEAA  20                 	db	32
  2901  00FEAB  20                 	db	32
  2902  00FEAC  00                 	db	0
  2903  00FEAD                     STR_24:
  2904                           
  2905                           ; BSR set to: 57
  2906  00FEAD  49                 	db	73	;'I'
  2907  00FEAE  4E                 	db	78	;'N'
  2908  00FEAF  56                 	db	86	;'V'
  2909  00FEB0  20                 	db	32
  2910  00FEB1  20                 	db	32
  2911  00FEB2  50                 	db	80	;'P'
  2912  00FEB3  57                 	db	87	;'W'
  2913  00FEB4  52                 	db	82	;'R'
  2914  00FEB5  20                 	db	32
  2915  00FEB6  25                 	db	37
  2916  00FEB7  33                 	db	51	;'3'
  2917  00FEB8  2E                 	db	46
  2918  00FEB9  32                 	db	50	;'2'
  2919  00FEBA  66                 	db	102	;'f'
  2920  00FEBB  20                 	db	32
  2921  00FEBC  20                 	db	32
  2922  00FEBD  20                 	db	32
  2923  00FEBE  20                 	db	32
  2924  00FEBF  00                 	db	0
  2925  00FEC0                     STR_23:
  2926                           
  2927                           ; BSR set to: 57
  2928  00FEC0  4C                 	db	76	;'L'
  2929  00FEC1  4F                 	db	79	;'O'
  2930  00FEC2  41                 	db	65	;'A'
  2931  00FEC3  44                 	db	68	;'D'
  2932  00FEC4  20                 	db	32
  2933  00FEC5  50                 	db	80	;'P'
  2934  00FEC6  57                 	db	87	;'W'
  2935  00FEC7  52                 	db	82	;'R'
  2936  00FEC8  20                 	db	32
  2937  00FEC9  25                 	db	37
  2938  00FECA  33                 	db	51	;'3'
  2939  00FECB  2E                 	db	46
  2940  00FECC  32                 	db	50	;'2'
  2941  00FECD  66                 	db	102	;'f'
  2942  00FECE  20                 	db	32
  2943  00FECF  20                 	db	32
  2944  00FED0  20                 	db	32
  2945  00FED1  20                 	db	32
  2946  00FED2  00                 	db	0
  2947  00FED3                     STR_29:
  2948                           
  2949                           ; BSR set to: 57
  2950  00FED3  42                 	db	66	;'B'
  2951  00FED4  56                 	db	86	;'V'
  2952  00FED5  20                 	db	32
  2953  00FED6  25                 	db	37
  2954  00FED7  32                 	db	50	;'2'
  2955  00FED8  2E                 	db	46
  2956  00FED9  32                 	db	50	;'2'
  2957  00FEDA  66                 	db	102	;'f'
  2958  00FEDB  20                 	db	32
  2959  00FEDC  42                 	db	66	;'B'
  2960  00FEDD  41                 	db	65	;'A'
  2961  00FEDE  20                 	db	32
  2962  00FEDF  25                 	db	37
  2963  00FEE0  32                 	db	50	;'2'
  2964  00FEE1  2E                 	db	46
  2965  00FEE2  32                 	db	50	;'2'
  2966  00FEE3  66                 	db	102	;'f'
  2967  00FEE4  20                 	db	32
  2968  00FEE5  00                 	db	0
  2969  00FEE6                     STR_30:
  2970                           
  2971                           ; BSR set to: 57
  2972  00FEE6  43                 	db	67	;'C'
  2973  00FEE7  56                 	db	86	;'V'
  2974  00FEE8  20                 	db	32
  2975  00FEE9  25                 	db	37
  2976  00FEEA  32                 	db	50	;'2'
  2977  00FEEB  2E                 	db	46
  2978  00FEEC  32                 	db	50	;'2'
  2979  00FEED  66                 	db	102	;'f'
  2980  00FEEE  20                 	db	32
  2981  00FEEF  4C                 	db	76	;'L'
  2982  00FEF0  41                 	db	65	;'A'
  2983  00FEF1  20                 	db	32
  2984  00FEF2  25                 	db	37
  2985  00FEF3  32                 	db	50	;'2'
  2986  00FEF4  2E                 	db	46
  2987  00FEF5  32                 	db	50	;'2'
  2988  00FEF6  66                 	db	102	;'f'
  2989  00FEF7  20                 	db	32
  2990  00FEF8  00                 	db	0
  2991  00FEF9                     STR_28:
  2992                           
  2993                           ; BSR set to: 57
  2994  00FEF9  50                 	db	80	;'P'
  2995  00FEFA  56                 	db	86	;'V'
  2996  00FEFB  20                 	db	32
  2997  00FEFC  25                 	db	37
  2998  00FEFD  32                 	db	50	;'2'
  2999  00FEFE  2E                 	db	46
  3000  00FEFF  32                 	db	50	;'2'
  3001  00FF00  66                 	db	102	;'f'
  3002  00FF01  20                 	db	32
  3003  00FF02  50                 	db	80	;'P'
  3004  00FF03  41                 	db	65	;'A'
  3005  00FF04  20                 	db	32
  3006  00FF05  25                 	db	37
  3007  00FF06  32                 	db	50	;'2'
  3008  00FF07  2E                 	db	46
  3009  00FF08  32                 	db	50	;'2'
  3010  00FF09  66                 	db	102	;'f'
  3011  00FF0A  20                 	db	32
  3012  00FF0B  00                 	db	0
  3013  00FF0C                     STR_8:
  3014                           
  3015                           ; BSR set to: 57
  3016  00FF0C  42                 	db	66	;'B'
  3017  00FF0D  56                 	db	86	;'V'
  3018  00FF0E  20                 	db	32
  3019  00FF0F  25                 	db	37
  3020  00FF10  32                 	db	50	;'2'
  3021  00FF11  2E                 	db	46
  3022  00FF12  34                 	db	52	;'4'
  3023  00FF13  66                 	db	102	;'f'
  3024  00FF14  20                 	db	32
  3025  00FF15  20                 	db	32
  3026  00FF16  20                 	db	32
  3027  00FF17  20                 	db	32
  3028  00FF18  20                 	db	32
  3029  00FF19  20                 	db	32
  3030  00FF1A  20                 	db	32
  3031  00FF1B  20                 	db	32
  3032  00FF1C  20                 	db	32
  3033  00FF1D  00                 	db	0
  3034  00FF1E                     STR_4:
  3035                           
  3036                           ; BSR set to: 57
  3037  00FF1E  20                 	db	32
  3038  00FF1F  4E                 	db	78	;'N'
  3039  00FF20  53                 	db	83	;'S'
  3040  00FF21  41                 	db	65	;'A'
  3041  00FF22  53                 	db	83	;'S'
  3042  00FF23  50                 	db	80	;'P'
  3043  00FF24  4F                 	db	79	;'O'
  3044  00FF25  4F                 	db	79	;'O'
  3045  00FF26  4B                 	db	75	;'K'
  3046  00FF27  20                 	db	32
  3047  00FF28  20                 	db	32
  3048  00FF29  20                 	db	32
  3049  00FF2A  20                 	db	32
  3050  00FF2B  20                 	db	32
  3051  00FF2C  20                 	db	32
  3052  00FF2D  20                 	db	32
  3053  00FF2E  00                 	db	0
  3054  00FF2F                     STR_12:
  3055                           
  3056                           ; BSR set to: 57
  3057  00FF2F  42                 	db	66	;'B'
  3058  00FF30  61                 	db	97	;'a'
  3059  00FF31  74                 	db	116	;'t'
  3060  00FF32  74                 	db	116	;'t'
  3061  00FF33  65                 	db	101	;'e'
  3062  00FF34  72                 	db	114	;'r'
  3063  00FF35  79                 	db	121	;'y'
  3064  00FF36  20                 	db	32
  3065  00FF37  45                 	db	69	;'E'
  3066  00FF38  53                 	db	83	;'S'
  3067  00FF39  52                 	db	82	;'R'
  3068  00FF3A  20                 	db	32
  3069  00FF3B  20                 	db	32
  3070  00FF3C  20                 	db	32
  3071  00FF3D  20                 	db	32
  3072  00FF3E  20                 	db	32
  3073  00FF3F  00                 	db	0
  3074  00FF40                     STR_13:
  3075                           
  3076                           ; BSR set to: 57
  3077  00FF40  43                 	db	67	;'C'
  3078  00FF41  61                 	db	97	;'a'
  3079  00FF42  6C                 	db	108	;'l'
  3080  00FF43  63                 	db	99	;'c'
  3081  00FF44  75                 	db	117	;'u'
  3082  00FF45  6C                 	db	108	;'l'
  3083  00FF46  61                 	db	97	;'a'
  3084  00FF47  74                 	db	116	;'t'
  3085  00FF48  69                 	db	105	;'i'
  3086  00FF49  6F                 	db	111	;'o'
  3087  00FF4A  6E                 	db	110	;'n'
  3088  00FF4B  20                 	db	32
  3089  00FF4C  20                 	db	32
  3090  00FF4D  20                 	db	32
  3091  00FF4E  20                 	db	32
  3092  00FF4F  20                 	db	32
  3093  00FF50  00                 	db	0
  3094  00FF51                     STR_1:
  3095                           
  3096                           ; BSR set to: 57
  3097  00FF51  20                 	db	32
  3098  00FF52  4D                 	db	77	;'M'
  3099  00FF53  42                 	db	66	;'B'
  3100  00FF54  4D                 	db	77	;'M'
  3101  00FF55  43                 	db	67	;'C'
  3102  00FF56  20                 	db	32
  3103  00FF57  53                 	db	83	;'S'
  3104  00FF58  4F                 	db	79	;'O'
  3105  00FF59  4C                 	db	76	;'L'
  3106  00FF5A  41                 	db	65	;'A'
  3107  00FF5B  52                 	db	82	;'R'
  3108  00FF5C  4D                 	db	77	;'M'
  3109  00FF5D  4F                 	db	79	;'O'
  3110  00FF5E  4E                 	db	78	;'N'
  3111  00FF5F  20                 	db	32
  3112  00FF60  20                 	db	32
  3113  00FF61  00                 	db	0
  3114  00FF62                     STR_21:
  3115                           
  3116                           ; BSR set to: 57
  3117  00FF62  25                 	db	37
  3118  00FF63  64                 	db	100	;'d'
  3119  00FF64  20                 	db	32
  3120  00FF65  25                 	db	37
  3121  00FF66  32                 	db	50	;'2'
  3122  00FF67  2E                 	db	46
  3123  00FF68  34                 	db	52	;'4'
  3124  00FF69  66                 	db	102	;'f'
  3125  00FF6A  2C                 	db	44
  3126  00FF6B  20                 	db	32
  3127  00FF6C  25                 	db	37
  3128  00FF6D  64                 	db	100	;'d'
  3129  00FF6E  20                 	db	32
  3130  00FF6F  20                 	db	32
  3131  00FF70  20                 	db	32
  3132  00FF71  23                 	db	35
  3133  00FF72  00                 	db	0
  3134  00FF73                     STR_14:
  3135                           
  3136                           ; BSR set to: 57
  3137  00FF73  43                 	db	67	;'C'
  3138  00FF74  68                 	db	104	;'h'
  3139  00FF75  65                 	db	101	;'e'
  3140  00FF76  63                 	db	99	;'c'
  3141  00FF77  6B                 	db	107	;'k'
  3142  00FF78  20                 	db	32
  3143  00FF79  33                 	db	51	;'3'
  3144  00FF7A  30                 	db	48	;'0'
  3145  00FF7B  20                 	db	32
  3146  00FF7C  73                 	db	115	;'s'
  3147  00FF7D  65                 	db	101	;'e'
  3148  00FF7E  63                 	db	99	;'c'
  3149  00FF7F  6F                 	db	111	;'o'
  3150  00FF80  6E                 	db	110	;'n'
  3151  00FF81  64                 	db	100	;'d'
  3152  00FF82  73                 	db	115	;'s'
  3153  00FF83  00                 	db	0
  3154  00FF84                     STR_19:
  3155                           
  3156                           ; BSR set to: 57
  3157  00FF84  25                 	db	37
  3158  00FF85  64                 	db	100	;'d'
  3159  00FF86  20                 	db	32
  3160  00FF87  25                 	db	37
  3161  00FF88  32                 	db	50	;'2'
  3162  00FF89  2E                 	db	46
  3163  00FF8A  34                 	db	52	;'4'
  3164  00FF8B  66                 	db	102	;'f'
  3165  00FF8C  20                 	db	32
  3166  00FF8D  20                 	db	32
  3167  00FF8E  20                 	db	32
  3168  00FF8F  25                 	db	37
  3169  00FF90  64                 	db	100	;'d'
  3170  00FF91  20                 	db	32
  3171  00FF92  20                 	db	32
  3172  00FF93  00                 	db	0
  3173  00FF94                     STR_52:
  3174                           
  3175                           ; BSR set to: 57
  3176  00FF94  76                 	db	118	;'v'
  3177  00FF95  74                 	db	116	;'t'
  3178  00FF96  65                 	db	101	;'e'
  3179  00FF97  72                 	db	114	;'r'
  3180  00FF98  6D                 	db	109	;'m'
  3181  00FF99  20                 	db	32
  3182  00FF9A  25                 	db	37
  3183  00FF9B  78                 	db	120	;'x'
  3184  00FF9C  3A                 	db	58	;':'
  3185  00FF9D  25                 	db	37
  3186  00FF9E  78                 	db	120	;'x'
  3187  00FF9F  20                 	db	32
  3188  00FFA0  20                 	db	32
  3189  00FFA1  20                 	db	32
  3190  00FFA2  00                 	db	0
  3191  00FFA3                     STR_2:
  3192                           
  3193                           ; BSR set to: 57
  3194  00FFA3  20                 	db	32
  3195  00FFA4  56                 	db	86	;'V'
  3196  00FFA5  65                 	db	101	;'e'
  3197  00FFA6  72                 	db	114	;'r'
  3198  00FFA7  73                 	db	115	;'s'
  3199  00FFA8  69                 	db	105	;'i'
  3200  00FFA9  6F                 	db	111	;'o'
  3201  00FFAA  6E                 	db	110	;'n'
  3202  00FFAB  20                 	db	32
  3203  00FFAC  25                 	db	37
  3204  00FFAD  73                 	db	115	;'s'
  3205  00FFAE  20                 	db	32
  3206  00FFAF  20                 	db	32
  3207  00FFB0  20                 	db	32
  3208  00FFB1  00                 	db	0
  3209  00FFB2                     STR_46:
  3210                           
  3211                           ; BSR set to: 57
  3212  00FFB2  44                 	db	68	;'D'
  3213  00FFB3  65                 	db	101	;'e'
  3214  00FFB4  63                 	db	99	;'c'
  3215  00FFB5  20                 	db	32
  3216  00FFB6  31                 	db	49	;'1'
  3217  00FFB7  34                 	db	52	;'4'
  3218  00FFB8  20                 	db	32
  3219  00FFB9  32                 	db	50	;'2'
  3220  00FFBA  30                 	db	48	;'0'
  3221  00FFBB  31                 	db	49	;'1'
  3222  00FFBC  39                 	db	57	;'9'
  3223  00FFBD  00                 	db	0
  3224  00FFBE                     STR_50:
  3225                           
  3226                           ; BSR set to: 57
  3227  00FFBE  25                 	db	37
  3228  00FFBF  73                 	db	115	;'s'
  3229  00FFC0  20                 	db	32
  3230  00FFC1  20                 	db	32
  3231  00FFC2  20                 	db	32
  3232  00FFC3  20                 	db	32
  3233  00FFC4  20                 	db	32
  3234  00FFC5  20                 	db	32
  3235  00FFC6  20                 	db	32
  3236  00FFC7  00                 	db	0
  3237  00FFC8                     STR_47:
  3238                           
  3239                           ; BSR set to: 57
  3240  00FFC8  30                 	db	48	;'0'
  3241  00FFC9  38                 	db	56	;'8'
  3242  00FFCA  3A                 	db	58	;':'
  3243  00FFCB  33                 	db	51	;'3'
  3244  00FFCC  32                 	db	50	;'2'
  3245  00FFCD  3A                 	db	58	;':'
  3246  00FFCE  34                 	db	52	;'4'
  3247  00FFCF  35                 	db	53	;'5'
  3248  00FFD0  00                 	db	0
  3249  00FFD1                     STR_3:
  3250                           
  3251                           ; BSR set to: 57
  3252  00FFD1  31                 	db	49	;'1'
  3253  00FFD2  2E                 	db	46
  3254  00FFD3  30                 	db	48	;'0'
  3255  00FFD4  30                 	db	48	;'0'
  3256  00FFD5  34                 	db	52	;'4'
  3257  00FFD6  00                 	db	0
  3258  00FFD7                     STR_66:
  3259                           
  3260                           ; BSR set to: 57
  3261  00FFD7  49                 	db	73	;'I'
  3262  00FFD8  4E                 	db	78	;'N'
  3263  00FFD9  46                 	db	70	;'F'
  3264  00FFDA  00                 	db	0
  3265  00FFDB                     STR_70:
  3266                           
  3267                           ; BSR set to: 57
  3268  00FFDB  4E                 	db	78	;'N'
  3269  00FFDC  41                 	db	65	;'A'
  3270  00FFDD  4E                 	db	78	;'N'
  3271  00FFDE  00                 	db	0
  3272  00FFDF                     STR_67:
  3273                           
  3274                           ; BSR set to: 57
  3275  00FFDF  69                 	db	105	;'i'
  3276  00FFE0  6E                 	db	110	;'n'
  3277  00FFE1  66                 	db	102	;'f'
  3278  00FFE2  00                 	db	0
  3279  00FFE3                     STR_71:
  3280                           
  3281                           ; BSR set to: 57
  3282  00FFE3  6E                 	db	110	;'n'
  3283  00FFE4  61                 	db	97	;'a'
  3284  00FFE5  6E                 	db	110	;'n'
  3285  00FFE6  00                 	db	0
  3286  00FFE7                     STR_97:
  3287                           
  3288                           ; BSR set to: 57
  3289  00FFE7  6C                 	db	108	;'l'
  3290  00FFE8  58                 	db	88	;'X'
  3291  00FFE9  00                 	db	0
  3292  00FFEA                     STR_74:
  3293                           
  3294                           ; BSR set to: 57
  3295  00FFEA  6C                 	db	108	;'l'
  3296  00FFEB  64                 	db	100	;'d'
  3297  00FFEC  00                 	db	0
  3298  00FFED                     STR_83:
  3299                           
  3300                           ; BSR set to: 57
  3301  00FFED  6C                 	db	108	;'l'
  3302  00FFEE  66                 	db	102	;'f'
  3303  00FFEF  00                 	db	0
  3304  00FFF0                     STR_78:
  3305                           
  3306                           ; BSR set to: 57
  3307  00FFF0  6C                 	db	108	;'l'
  3308  00FFF1  69                 	db	105	;'i'
  3309  00FFF2  00                 	db	0
  3310  00FFF3                     STR_88:
  3311                           
  3312                           ; BSR set to: 57
  3313  00FFF3  6C                 	db	108	;'l'
  3314  00FFF4  75                 	db	117	;'u'
  3315  00FFF5  00                 	db	0
  3316  00FFF6                     STR_93:
  3317                           
  3318                           ; BSR set to: 57
  3319  00FFF6  6C                 	db	108	;'l'
  3320  00FFF7  78                 	db	120	;'x'
  3321  00FFF8  00                 	db	0
  3322  00FFF9                     STR_44:
  3323                           
  3324                           ; BSR set to: 57
  3325  00FFF9  25                 	db	37
  3326  00FFFA  63                 	db	99	;'c'
  3327  00FFFB  00                 	db	0
  3328  00FFFC                     STR_43:
  3329                           
  3330                           ; BSR set to: 57
  3331  00FFFC  25                 	db	37
  3332  00FFFD  73                 	db	115	;'s'
  3333  00FFFE  00                 	db	0
  3334  0000                     
  3335                           ; #config settings
  3336  00FFFF  00                 	db	0	; dummy byte at the end
  3337  0000                     
  3338                           	psect	cinit
  3339  019322                     __pcinit:
  3340                           	opt callstack 0
  3341  019322                     start_initialization:
  3342                           	opt callstack 0
  3343  019322                     __initialization:
  3344                           	opt callstack 0
  3345                           
  3346                           ; Initialize objects allocated to BIGRAM (512 bytes)
  3347                           ; load TBLPTR registers with __pidataBIGRAM
  3348  019322  0EDC               	movlw	low __pidataBIGRAM
  3349  019324  6EF6               	movwf	tblptrl,c
  3350  019326  0E7B               	movlw	high __pidataBIGRAM
  3351  019328  6EF7               	movwf	tblptrh,c
  3352  01932A  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3353  01932C  6EF8               	movwf	tblptru,c
  3354  01932E  EE01  F1FF         	lfsr	0,__pdataBIGRAM
  3355  019332  EE20 F200          	lfsr	2,512
  3356  019336                     copy_data0:
  3357  019336  0009               	tblrd		*+
  3358  019338  006F FFD7 FFEE     	movff	tablat,postinc0
  3359  01933E  50DD               	movf	postdec2,w,c
  3360  019340  50D9               	movf	fsr2l,w,c
  3361  019342  E1F9               	bnz	copy_data0
  3362  019344  50DA               	movf	fsr2h,w,c
  3363  019346  E1F7               	bnz	copy_data0
  3364                           
  3365                           ; Initialize objects allocated to BANK2 (189 bytes)
  3366                           ; load TBLPTR registers with __pidataBANK2
  3367  019348  0E9C               	movlw	low __pidataBANK2
  3368  01934A  6EF6               	movwf	tblptrl,c
  3369  01934C  0E9A               	movlw	high __pidataBANK2
  3370  01934E  6EF7               	movwf	tblptrh,c
  3371  019350  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  3372  019352  6EF8               	movwf	tblptru,c
  3373  019354  EE00  F200         	lfsr	0,__pdataBANK2
  3374  019358  EE20 F0BD          	lfsr	2,189
  3375  01935C                     copy_data1:
  3376  01935C  0009               	tblrd		*+
  3377  01935E  006F FFD7 FFEE     	movff	tablat,postinc0
  3378  019364  50DD               	movf	postdec2,w,c
  3379  019366  50D9               	movf	fsr2l,w,c
  3380  019368  E1F9               	bnz	copy_data1
  3381                           
  3382                           ; Initialize objects allocated to BANK1 (247 bytes)
  3383                           ; load TBLPTR registers with __pidataBANK1
  3384  01936A  0E3C               	movlw	low __pidataBANK1
  3385  01936C  6EF6               	movwf	tblptrl,c
  3386  01936E  0E96               	movlw	high __pidataBANK1
  3387  019370  6EF7               	movwf	tblptrh,c
  3388  019372  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3389  019374  6EF8               	movwf	tblptru,c
  3390  019376  EE00  F100         	lfsr	0,__pdataBANK1
  3391  01937A  EE20 F0F7          	lfsr	2,247
  3392  01937E                     copy_data2:
  3393  01937E  0009               	tblrd		*+
  3394  019380  006F FFD7 FFEE     	movff	tablat,postinc0
  3395  019386  50DD               	movf	postdec2,w,c
  3396  019388  50D9               	movf	fsr2l,w,c
  3397  01938A  E1F9               	bnz	copy_data2
  3398                           
  3399                           ; Initialize objects allocated to BANK0 (54 bytes)
  3400                           ; load TBLPTR registers with __pidataBANK0
  3401  01938C  0EF0               	movlw	low __pidataBANK0
  3402  01938E  6EF6               	movwf	tblptrl,c
  3403  019390  0EAD               	movlw	high __pidataBANK0
  3404  019392  6EF7               	movwf	tblptrh,c
  3405  019394  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3406  019396  6EF8               	movwf	tblptru,c
  3407  019398  EE00  F0C4         	lfsr	0,__pdataBANK0
  3408  01939C  EE20 F036          	lfsr	2,54
  3409  0193A0                     copy_data3:
  3410  0193A0  0009               	tblrd		*+
  3411  0193A2  006F FFD7 FFEE     	movff	tablat,postinc0
  3412  0193A8  50DD               	movf	postdec2,w,c
  3413  0193AA  50D9               	movf	fsr2l,w,c
  3414  0193AC  E1F9               	bnz	copy_data3
  3415                           
  3416                           ; Clear objects allocated to BIGRAM (290 bytes)
  3417  0193AE  EE01  F3FF         	lfsr	0,__pbssBIGRAM
  3418  0193B2  EE20 F122          	lfsr	2,290
  3419  0193B6                     clear_0:
  3420  0193B6  6AEE               	clrf	postinc0,c
  3421  0193B8  50DD               	movf	postdec2,w,c
  3422  0193BA  50D9               	movf	fsr2l,w,c
  3423  0193BC  E1FC               	bnz	clear_0
  3424  0193BE  50DA               	movf	fsr2h,w,c
  3425  0193C0  E1FA               	bnz	clear_0
  3426                           
  3427                           ; Clear objects allocated to BANK5 (255 bytes)
  3428  0193C2  EE01  F100         	lfsr	0,__pbssBANK5
  3429  0193C6  EE20 F0FF          	lfsr	2,255
  3430  0193CA                     clear_1:
  3431  0193CA  6AEE               	clrf	postinc0,c
  3432  0193CC  50DD               	movf	postdec2,w,c
  3433  0193CE  50D9               	movf	fsr2l,w,c
  3434  0193D0  E1FC               	bnz	clear_1
  3435  0193D2  50DA               	movf	fsr2h,w,c
  3436  0193D4  E1FA               	bnz	clear_1
  3437                           
  3438                           ; Clear objects allocated to BANK4 (134 bytes)
  3439  0193D6  EE01  F000         	lfsr	0,__pbssBANK4
  3440  0193DA  0E86               	movlw	134
  3441  0193DC                     clear_2:
  3442  0193DC  6AEE               	clrf	postinc0,c
  3443  0193DE  06E8               	decf	wreg,f,c
  3444  0193E0  E1FD               	bnz	clear_2
  3445                           
  3446                           ; Clear objects allocated to BANK3 (228 bytes)
  3447  0193E2  EE00  F300         	lfsr	0,__pbssBANK3
  3448  0193E6  0EE4               	movlw	228
  3449  0193E8                     clear_3:
  3450  0193E8  6AEE               	clrf	postinc0,c
  3451  0193EA  06E8               	decf	wreg,f,c
  3452  0193EC  E1FD               	bnz	clear_3
  3453                           
  3454                           ; Clear objects allocated to BANK2 (67 bytes)
  3455  0193EE  EE00  F2BD         	lfsr	0,__pbssBANK2
  3456  0193F2  0E43               	movlw	67
  3457  0193F4                     clear_4:
  3458  0193F4  6AEE               	clrf	postinc0,c
  3459  0193F6  06E8               	decf	wreg,f,c
  3460  0193F8  E1FD               	bnz	clear_4
  3461                           
  3462                           ; Clear objects allocated to BANK1 (8 bytes)
  3463  0193FA  EE00  F1F7         	lfsr	0,__pbssBANK1
  3464  0193FE  0E08               	movlw	8
  3465  019400                     clear_5:
  3466  019400  6AEE               	clrf	postinc0,c
  3467  019402  06E8               	decf	wreg,f,c
  3468  019404  E1FD               	bnz	clear_5
  3469                           
  3470                           ; Clear objects allocated to BANK0 (100 bytes)
  3471  019406  EE00  F060         	lfsr	0,__pbssBANK0
  3472  01940A  0E64               	movlw	100
  3473  01940C                     clear_6:
  3474  01940C  6AEE               	clrf	postinc0,c
  3475  01940E  06E8               	decf	wreg,f,c
  3476  019410  E1FD               	bnz	clear_6
  3477                           
  3478                           ; Clear objects allocated to COMRAM (24 bytes)
  3479  019412  EE00  F021         	lfsr	0,__pbssCOMRAM
  3480  019416  0E18               	movlw	24
  3481  019418                     clear_7:
  3482  019418  6AEE               	clrf	postinc0,c
  3483  01941A  06E8               	decf	wreg,f,c
  3484  01941C  E1FD               	bnz	clear_7
  3485                           
  3486                           ;
  3487                           ; Setup IVTBASE
  3488                           ;
  3489  01941E  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3490  019420  6ED5               	movwf	213,c
  3491  019422  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3492  019424  6ED6               	movwf	214,c
  3493  019426  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3494  019428  6ED7               	movwf	215,c
  3495  01942A                     end_of_initialization:
  3496                           	opt callstack 0
  3497  01942A                     __end_of__initialization:
  3498                           	opt callstack 0
  3499  01942A  0100               	movlb	0
  3500  01942C  EF22  F089         	goto	_main	;jump to C main() function
  3501                           
  3502                           	psect	bssCOMRAM
  3503  000021                     __pbssCOMRAM:
  3504                           	opt callstack 0
  3505  000021                     _width:
  3506                           	opt callstack 0
  3507  000021                     	ds	2
  3508  000023                     _prec:
  3509                           	opt callstack 0
  3510  000023                     	ds	2
  3511  000025                     _flags:
  3512                           	opt callstack 0
  3513  000025                     	ds	2
  3514  000027                     _timer3ReloadVal:
  3515                           	opt callstack 0
  3516  000027                     	ds	2
  3517  000029                     TMR5_ISR@CountCallBack:
  3518                           	opt callstack 0
  3519  000029                     	ds	2
  3520  00002B                     _timer5ReloadVal:
  3521                           	opt callstack 0
  3522  00002B                     	ds	2
  3523  00002D                     esr_check@esr_state:
  3524                           	opt callstack 0
  3525  00002D                     	ds	1
  3526  00002E                     Volts_to_SOC@slot:
  3527                           	opt callstack 0
  3528  00002E                     	ds	1
  3529  00002F                     _mode_sw:
  3530                           	opt callstack 0
  3531  00002F                     	ds	1
  3532  000030                     _uart2RxCount:
  3533                           	opt callstack 0
  3534  000030                     	ds	1
  3535  000031                     _uart2RxTail:
  3536                           	opt callstack 0
  3537  000031                     	ds	1
  3538  000032                     _uart2RxHead:
  3539                           	opt callstack 0
  3540  000032                     	ds	1
  3541  000033                     _uart2TxBufferRemaining:
  3542                           	opt callstack 0
  3543  000033                     	ds	1
  3544  000034                     _uart2TxTail:
  3545                           	opt callstack 0
  3546  000034                     	ds	1
  3547  000035                     _uart2TxHead:
  3548                           	opt callstack 0
  3549  000035                     	ds	1
  3550  000036                     _uart1RxCount:
  3551                           	opt callstack 0
  3552  000036                     	ds	1
  3553  000037                     _uart1RxTail:
  3554                           	opt callstack 0
  3555  000037                     	ds	1
  3556  000038                     _uart1RxHead:
  3557                           	opt callstack 0
  3558  000038                     	ds	1
  3559                           
  3560                           	psect	bssBANK0
  3561  000060                     __pbssBANK0:
  3562                           	opt callstack 0
  3563  000060                     _spi_link:
  3564                           	opt callstack 0
  3565  000060                     	ds	12
  3566  00006C                     _uart1RxBuffer:
  3567                           	opt callstack 0
  3568  00006C                     	ds	8
  3569  000074                     spinners@s:
  3570                           	opt callstack 0
  3571  000074                     	ds	6
  3572  00007A                     floorf@F524:
  3573                           	opt callstack 0
  3574  00007A                     	ds	4
  3575  00007E                     fabsf@F463:
  3576                           	opt callstack 0
  3577  00007E                     	ds	4
  3578  000082                     ___fpclassifyf@F463:
  3579                           	opt callstack 0
  3580  000082                     	ds	4
  3581  000086                     calc_ror_data@bcror:
  3582                           	opt callstack 0
  3583  000086                     	ds	4
  3584  00008A                     calc_ror_data@bvror:
  3585                           	opt callstack 0
  3586  00008A                     	ds	4
  3587  00008E                     calc_model_data@bcror:
  3588                           	opt callstack 0
  3589  00008E                     	ds	4
  3590  000092                     calc_model_data@bvror:
  3591                           	opt callstack 0
  3592  000092                     	ds	4
  3593  000096                     _utctime:
  3594                           	opt callstack 0
  3595  000096                     	ds	4
  3596  00009A                     wdtdelay@dcount:
  3597                           	opt callstack 0
  3598  00009A                     	ds	4
  3599  00009E                     _P:
  3600                           	opt callstack 0
  3601  00009E                     	ds	4
  3602  0000A2                     _TMR3_InterruptHandler:
  3603                           	opt callstack 0
  3604  0000A2                     	ds	3
  3605  0000A5                     _TMR5_InterruptHandler:
  3606                           	opt callstack 0
  3607  0000A5                     	ds	3
  3608  0000A8                     _TMR6_InterruptHandler:
  3609                           	opt callstack 0
  3610  0000A8                     	ds	3
  3611  0000AB                     _ADCC_ADTI_InterruptHandler:
  3612                           	opt callstack 0
  3613  0000AB                     	ds	3
  3614  0000AE                     _ADCC_ADI_InterruptHandler:
  3615                           	opt callstack 0
  3616  0000AE                     	ds	3
  3617  0000B1                     _UART1_RxInterruptHandler:
  3618                           	opt callstack 0
  3619  0000B1                     	ds	3
  3620  0000B4                     _UART2_TxInterruptHandler:
  3621                           	opt callstack 0
  3622  0000B4                     	ds	3
  3623  0000B7                     _UART2_RxInterruptHandler:
  3624                           	opt callstack 0
  3625  0000B7                     	ds	3
  3626  0000BA                     _INT1_InterruptHandler:
  3627                           	opt callstack 0
  3628  0000BA                     	ds	3
  3629  0000BD                     _INT0_InterruptHandler:
  3630                           	opt callstack 0
  3631  0000BD                     	ds	3
  3632  0000C0                     _nout:
  3633                           	opt callstack 0
  3634  0000C0                     	ds	2
  3635  0000C2                     TMR3_ISR@CountCallBack:
  3636                           	opt callstack 0
  3637  0000C2                     	ds	2
  3638                           
  3639                           	psect	dataBANK0
  3640  0000C4                     __pdataBANK0:
  3641                           	opt callstack 0
  3642  0000C4                     _R:
  3643                           	opt callstack 0
  3644  0000C4                     	ds	40
  3645  0000EC                     stoa@F1166:
  3646                           	opt callstack 0
  3647  0000EC                     	ds	7
  3648  0000F3                     _H:
  3649                           	opt callstack 0
  3650  0000F3                     	ds	7
  3651                           
  3652                           	psect	bssBANK1
  3653  0001F7                     __pbssBANK1:
  3654                           	opt callstack 0
  3655  0001F7                     _seed:
  3656                           	opt callstack 0
  3657  0001F7                     	ds	8
  3658                           
  3659                           	psect	dataBANK1
  3660  000100                     __pdataBANK1:
  3661                           	opt callstack 0
  3662  000100                     _C:
  3663                           	opt callstack 0
  3664  000100                     	ds	247
  3665                           
  3666                           	psect	bssBANK2
  3667  0002BD                     __pbssBANK2:
  3668                           	opt callstack 0
  3669  0002BD                     _S:
  3670                           	opt callstack 0
  3671  0002BD                     	ds	41
  3672  0002E6                     _tickCount:
  3673                           	opt callstack 0
  3674  0002E6                     	ds	26
  3675                           
  3676                           	psect	dataBANK2
  3677  000200                     __pdataBANK2:
  3678                           	opt callstack 0
  3679  000200                     _V:
  3680                           	opt callstack 0
  3681  000200                     	ds	189
  3682                           
  3683                           	psect	bssBANK3
  3684  000300                     __pbssBANK3:
  3685                           	opt callstack 0
  3686  000300                     lp_filter@smooth:
  3687                           	opt callstack 0
  3688  000300                     	ds	84
  3689  000354                     _uart2TxBuffer:
  3690                           	opt callstack 0
  3691  000354                     	ds	64
  3692  000394                     _dbuf:
  3693                           	opt callstack 0
  3694  000394                     	ds	80
  3695                           
  3696                           	psect	bssBANK4
  3697  000400                     __pbssBANK4:
  3698                           	opt callstack 0
  3699  000400                     _ring_buf2:
  3700                           	opt callstack 0
  3701  000400                     	ds	67
  3702  000443                     _ring_buf1:
  3703                           	opt callstack 0
  3704  000443                     	ds	67
  3705                           
  3706                           	psect	bssBANK5
  3707  000500                     __pbssBANK5:
  3708                           	opt callstack 0
  3709  000500                     _uart2RxBuffer:
  3710                           	opt callstack 0
  3711  000500                     	ds	255
  3712                           
  3713                           	psect	bssBIGRAM
  3714  0007FF                     __pbssBIGRAM:
  3715                           	opt callstack 0
  3716  0007FF                     _D:
  3717                           	opt callstack 0
  3718  0007FF                     	ds	290
  3719                           
  3720                           	psect	dataBIGRAM
  3721  0005FF                     __pdataBIGRAM:
  3722                           	opt callstack 0
  3723  0005FF                     _port_data:
  3724                           	opt callstack 0
  3725  0005FF                     	ds	512
  3726                           
  3727                           	psect	cstackBANK3
  3728  0003E4                     __pcstackBANK3:
  3729                           	opt callstack 0
  3730  0003E4                     ??_TMR3_ISR:
  3731                           
  3732                           ; 1 bytes @ 0x0
  3733  0003E4                     	ds	25
  3734                           
  3735                           	psect	cstackCOMRAM
  3736  000039                     __pcstackCOMRAM:
  3737                           	opt callstack 0
  3738  000039                     ??_ADCC_ThresholdISR:
  3739  000039                     
  3740                           ; 1 bytes @ 0x0
  3741  000039                     	ds	5
  3742  00003E                     ??_TMR6_ISR:
  3743                           
  3744                           ; 1 bytes @ 0x5
  3745  00003E                     	ds	1
  3746  00003F                     ??_INT1_ISR:
  3747  00003F                     
  3748                           ; 1 bytes @ 0x6
  3749  00003F                     	ds	4
  3750  000043                     ??_TMR5_ISR:
  3751                           
  3752                           ; 1 bytes @ 0xA
  3753  000043                     	ds	4
  3754                           
  3755 ;;
  3756 ;;Main: autosize = 12, tempsize = 0, incstack = 0, save=0
  3757 ;;
  3758 ;; *************** function _main *****************
  3759 ;; Defined at:
  3760 ;;		line 175 in file "main.c"
  3761 ;; Parameters:    Size  Location     Type
  3762 ;;		None
  3763 ;; Auto vars:     Size  Location     Type
  3764 ;;  esr_temp        4  [STACK] float 
  3765 ;;  i_esr           2  [STACK] unsigned short 
  3766 ;;  k               1  [STACK] unsigned char 
  3767 ;;  j               1  [STACK] unsigned char 
  3768 ;;  i               1  [STACK] unsigned char 
  3769 ;;  inp_index       1  [STACK] unsigned char 
  3770 ;;  mode            1  [STACK] enum E17013
  3771 ;;  i_ror           1  [STACK] unsigned char 
  3772 ;; Return value:  Size  Location     Type
  3773 ;;                  1  [STACK] void 
  3774 ;; Registers used:
  3775 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3776 ;; Tracked objects:
  3777 ;;		On entry : 0/0
  3778 ;;		On exit  : 0/0
  3779 ;;		Unchanged: 0/0
  3780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3785 ;;Total ram usage:        0 bytes
  3786 ;; Hardware stack levels required when called:   28
  3787 ;; This function calls:
  3788 ;;		_SYSTEM_Initialize
  3789 ;;		_StartTimer
  3790 ;;		_TimerDone
  3791 ;;		_WaitMs
  3792 ;;		___fladd
  3793 ;;		___flge
  3794 ;;		_calc_model_data
  3795 ;;		_calc_ror_data
  3796 ;;		_check_adc_scan
  3797 ;;		_check_enter_button
  3798 ;;		_check_help
  3799 ;;		_clear_adc_scan
  3800 ;;		_clear_hid_pflags
  3801 ;;		_conv_raw_result
  3802 ;;		_convert_adc_data
  3803 ;;		_eaDogM_WriteCommand
  3804 ;;		_esr_check
  3805 ;;		_get_raw_result
  3806 ;;		_get_switch
  3807 ;;		_get_vterm_ptr
  3808 ;;		_hid_display
  3809 ;;		_init_bsoc
  3810 ;;		_init_display
  3811 ;;		_init_port_dma
  3812 ;;		_lp_filter
  3813 ;;		_mode_lamp_dim
  3814 ;;		_set_display_info
  3815 ;;		_set_load_relay_one
  3816 ;;		_set_load_relay_two
  3817 ;;		_set_vterm
  3818 ;;		_spinners
  3819 ;;		_sprintf
  3820 ;;		_srand
  3821 ;;		_start_adc_scan
  3822 ;;		_start_switch_handler
  3823 ;;		_static_soc
  3824 ;;		_update_lcd
  3825 ;; This function is called by:
  3826 ;;		Startup code after reset
  3827 ;; This function uses a reentrant model
  3828 ;;
  3829                           
  3830                           	psect	text0
  3831  011244                     __ptext0:
  3832                           	opt callstack 0
  3833  011244                     _main:
  3834                           	opt callstack 0
  3835                           
  3836                           ; autosize = 12, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3837  011244  0E0C               	movlw	12
  3838  011246  26E1               	addwf	fsr1l,f,c
  3839  011248  0E00               	movlw	0
  3840  01124A  22E2               	addwfc	fsr1h,f,c
  3841                           
  3842                           ;main.c: 177:  UI_STATES mode;;main.c: 178:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  3843                           ;stkvar	_inp_index @ sp[(-12)+9]
  3844                           
  3845                           ;incstack = 0
  3846  01124C  0EFD               	movlw	-3
  3847  01124E  6AE3               	clrf	plusw1,c
  3848                           
  3849                           ;stkvar	_i @ sp[(-12)+8]
  3850  011250  0EFC               	movlw	-4
  3851  011252  6AE3               	clrf	plusw1,c
  3852                           
  3853                           ;stkvar	_j @ sp[(-12)+7]
  3854  011254  0EFB               	movlw	-5
  3855  011256  6AE3               	clrf	plusw1,c
  3856  011258  2AE3               	incf	plusw1,f,c
  3857                           
  3858                           ;stkvar	_k @ sp[(-12)+6]
  3859  01125A  0EFA               	movlw	-6
  3860  01125C  6AE3               	clrf	plusw1,c
  3861  01125E  82E3               	bsf	plusw1,1,c
  3862                           
  3863                           ;main.c: 181:  SYSTEM_Initialize();
  3864  011260  ECE5  F0D4         	call	_SYSTEM_Initialize	;wreg free
  3865                           
  3866                           ; BSR set to: 60
  3867                           ;main.c: 184:  (INTCON0bits.GIEH = 1);
  3868  011264  8ED2               	bsf	210,7,c	;volatile
  3869                           
  3870                           ; BSR set to: 60
  3871                           ;main.c: 187:  (INTCON0bits.GIEL = 1);
  3872  011266  8CD2               	bsf	210,6,c	;volatile
  3873                           
  3874                           ; BSR set to: 60
  3875                           ;main.c: 189:  V.ui_state = UI_STATE_INIT;
  3876  011268  0102               	movlb	2	; () banked
  3877  01126A  6B00               	clrf	_V& (0+255),b	;volatile
  3878                           
  3879                           ; BSR set to: 2
  3880                           ;main.c: 194:  WaitMs(300);
  3881  01126C  0E2C               	movlw	44
  3882  01126E  6EE6               	movwf	postinc1,c
  3883  011270  0E01               	movlw	1
  3884  011272  6EE6               	movwf	postinc1,c
  3885  011274  EC13  F0D7         	call	_WaitMs	;wreg free
  3886                           
  3887                           ;main.c: 195:  if (PORTBbits.RB0) {
  3888  011278  A0CB               	btfss	203,0,c	;volatile
  3889  01127A  D004               	goto	l12566
  3890                           
  3891                           ;main.c: 196:   mode = UI_STATE_HOST;
  3892                           ;stkvar	_mode @ sp[(-12)+10]
  3893  01127C  0EFE               	movlw	-2
  3894  01127E  6AE3               	clrf	plusw1,c
  3895  011280  2AE3               	incf	plusw1,f,c
  3896                           
  3897                           ;main.c: 197:  } else {
  3898  011282  D004               	goto	l12568
  3899  011284                     l12566:
  3900                           
  3901                           ;main.c: 198:   mode = UI_STATE_LOG;
  3902                           ;stkvar	_mode @ sp[(-12)+10]
  3903  011284  0EFE               	movlw	-2
  3904  011286  6AE3               	clrf	plusw1,c
  3905  011288  80E3               	bsf	plusw1,0,c
  3906  01128A  82E3               	bsf	plusw1,1,c	;indir
  3907  01128C                     l12568:
  3908                           
  3909                           ;main.c: 201:  if (mode == UI_STATE_HOST) {
  3910                           ;stkvar	_mode @ sp[(-12)+10]
  3911  01128C  0EFE               	movlw	-2
  3912  01128E  04E3               	decf	plusw1,w,c
  3913  011290  A4D8               	btfss	status,2,c
  3914  011292  D007               	goto	l1320
  3915                           
  3916                           ;main.c: 202:   do { LATDbits.LATD0 = 1; } while(0);
  3917  011294  80BD               	bsf	189,0,c	;volatile
  3918                           
  3919                           ;main.c: 203:   V.mode_pwm = 70;
  3920  011296  0E00               	movlw	0
  3921  011298  0102               	movlb	2	; () banked
  3922  01129A  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  3923  01129C  0E46               	movlw	70
  3924  01129E  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  3925                           
  3926                           ;main.c: 204:  } else {
  3927  0112A0  D004               	goto	l12572
  3928  0112A2                     l1320:
  3929  0112A2  90BD               	bcf	189,0,c	;volatile
  3930                           
  3931                           ;main.c: 206:   V.mode_pwm = 0;
  3932  0112A4  0102               	movlb	2	; () banked
  3933  0112A6  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  3934  0112A8  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  3935  0112AA                     l12572:
  3936                           
  3937                           ; BSR set to: 2
  3938                           ;main.c: 208:  mode_lamp_dim(V.mode_pwm);
  3939  0112AA  0060  FA57  FFE6   	movff	_V+149,postinc1
  3940  0112B0  0060  FA5B  FFE6   	movff	_V+150,postinc1
  3941  0112B6  ECDB  F0DA         	call	_mode_lamp_dim	;wreg free
  3942  0112BA  D2EF               	goto	l12688
  3943  0112BC                     l12574:
  3944                           
  3945                           ; BSR set to: 2
  3946                           ;main.c: 216:    init_port_dma();
  3947  0112BC  EC97  F0D7         	call	_init_port_dma	;wreg free
  3948                           
  3949                           ; BSR set to: 59
  3950                           ;main.c: 218:    init_display();
  3951  0112C0  EC9A  F0CB         	call	_init_display	;wreg free
  3952                           
  3953                           ; BSR set to: 61
  3954                           ;main.c: 219:    eaDogM_WriteCommand(0b00001100);
  3955  0112C4  0E0C               	movlw	12
  3956  0112C6  6EE6               	movwf	postinc1,c
  3957  0112C8  EC3F  F0DB         	call	_eaDogM_WriteCommand	;wreg free
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;main.c: 223:    set_load_relay_one(1);
  3961  0112CC  0E01               	movlw	1
  3962  0112CE  6EE6               	movwf	postinc1,c
  3963  0112D0  EC2F  F0DB         	call	_set_load_relay_one	;wreg free
  3964                           
  3965                           ;main.c: 224:    set_load_relay_two(1);
  3966  0112D4  0E01               	movlw	1
  3967  0112D6  6EE6               	movwf	postinc1,c
  3968  0112D8  EC27  F0DB         	call	_set_load_relay_two	;wreg free
  3969                           
  3970                           ;main.c: 226:    V.ui_state = mode;
  3971                           ;stkvar	_mode @ sp[(-12)+10]
  3972  0112DC  0EFE               	movlw	-2
  3973  0112DE  006F FF8C  F200    	movff	plusw1,_V	;volatile
  3974                           
  3975                           ;main.c: 227:    srand(1957);
  3976  0112E4  0EA5               	movlw	165
  3977  0112E6  6EE6               	movwf	postinc1,c
  3978  0112E8  0E07               	movlw	7
  3979  0112EA  6EE6               	movwf	postinc1,c
  3980  0112EC  EC49  F0D7         	call	_srand	;wreg free
  3981                           
  3982                           ; BSR set to: 1
  3983                           ;main.c: 228:    set_vterm(0);
  3984  0112F0  0E00               	movlw	0
  3985  0112F2  6EE6               	movwf	postinc1,c
  3986  0112F4  EC68  F0DA         	call	_set_vterm	;wreg free
  3987                           
  3988                           ;main.c: 229:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  3989  0112F8  0E51               	movlw	low STR_1
  3990  0112FA  6EE6               	movwf	postinc1,c
  3991  0112FC  0EFF               	movlw	high STR_1
  3992  0112FE  6EE6               	movwf	postinc1,c
  3993  011300  0E00               	movlw	0
  3994  011302  6EE6               	movwf	postinc1,c
  3995  011304  0E00               	movlw	0
  3996  011306  6EE6               	movwf	postinc1,c
  3997  011308  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  3998  01130C  0060  F007  FFE6   	movff	btemp,postinc1
  3999  011312  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4000  011318  0E04               	movlw	4
  4001  01131A  6EE6               	movwf	postinc1,c
  4002  01131C  EC18  F0CA         	call	_sprintf	;wreg free
  4003                           
  4004                           ; BSR set to: 0
  4005                           ;main.c: 230:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "1.004");
  4006  011320  0ED1               	movlw	low STR_3
  4007  011322  6EE6               	movwf	postinc1,c
  4008  011324  0EFF               	movlw	high STR_3
  4009  011326  6EE6               	movwf	postinc1,c
  4010  011328  0EA3               	movlw	low STR_2
  4011  01132A  6EE6               	movwf	postinc1,c
  4012  01132C  0EFF               	movlw	high STR_2
  4013  01132E  6EE6               	movwf	postinc1,c
  4014  011330  0E00               	movlw	0
  4015  011332  6EE6               	movwf	postinc1,c
  4016  011334  0E01               	movlw	1
  4017  011336  6EE6               	movwf	postinc1,c
  4018  011338  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  4019  01133C  0060  F007  FFE6   	movff	btemp,postinc1
  4020  011342  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4021  011348  0E06               	movlw	6
  4022  01134A  6EE6               	movwf	postinc1,c
  4023  01134C  EC18  F0CA         	call	_sprintf	;wreg free
  4024                           
  4025                           ; BSR set to: 0
  4026                           ;main.c: 231:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  4027  011350  0E1E               	movlw	low STR_4
  4028  011352  6EE6               	movwf	postinc1,c
  4029  011354  0EFF               	movlw	high STR_4
  4030  011356  6EE6               	movwf	postinc1,c
  4031  011358  0E00               	movlw	0
  4032  01135A  6EE6               	movwf	postinc1,c
  4033  01135C  0E02               	movlw	2
  4034  01135E  6EE6               	movwf	postinc1,c
  4035  011360  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  4036  011364  0060  F007  FFE6   	movff	btemp,postinc1
  4037  01136A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4038  011370  0E04               	movlw	4
  4039  011372  6EE6               	movwf	postinc1,c
  4040  011374  EC18  F0CA         	call	_sprintf	;wreg free
  4041                           
  4042                           ; BSR set to: 0
  4043                           ;main.c: 232:    sprintf(get_vterm_ptr(0, 2), "                ");
  4044  011378  0EF1               	movlw	low (STR_58+2)
  4045  01137A  6EE6               	movwf	postinc1,c
  4046  01137C  0EFD               	movlw	high (STR_58+2)
  4047  01137E  6EE6               	movwf	postinc1,c
  4048  011380  0E02               	movlw	2
  4049  011382  6EE6               	movwf	postinc1,c
  4050  011384  0E00               	movlw	0
  4051  011386  6EE6               	movwf	postinc1,c
  4052  011388  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  4053  01138C  0060  F007  FFE6   	movff	btemp,postinc1
  4054  011392  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4055  011398  0E04               	movlw	4
  4056  01139A  6EE6               	movwf	postinc1,c
  4057  01139C  EC18  F0CA         	call	_sprintf	;wreg free
  4058                           
  4059                           ; BSR set to: 0
  4060                           ;main.c: 233:    sprintf(get_vterm_ptr(1, 2), "                ");
  4061  0113A0  0EF1               	movlw	low (STR_58+2)
  4062  0113A2  6EE6               	movwf	postinc1,c
  4063  0113A4  0EFD               	movlw	high (STR_58+2)
  4064  0113A6  6EE6               	movwf	postinc1,c
  4065  0113A8  0E02               	movlw	2
  4066  0113AA  6EE6               	movwf	postinc1,c
  4067  0113AC  0E01               	movlw	1
  4068  0113AE  6EE6               	movwf	postinc1,c
  4069  0113B0  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  4070  0113B4  0060  F007  FFE6   	movff	btemp,postinc1
  4071  0113BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4072  0113C0  0E04               	movlw	4
  4073  0113C2  6EE6               	movwf	postinc1,c
  4074  0113C4  EC18  F0CA         	call	_sprintf	;wreg free
  4075                           
  4076                           ; BSR set to: 0
  4077                           ;main.c: 234:    sprintf(get_vterm_ptr(2, 2), "                ");
  4078  0113C8  0EF1               	movlw	low (STR_58+2)
  4079  0113CA  6EE6               	movwf	postinc1,c
  4080  0113CC  0EFD               	movlw	high (STR_58+2)
  4081  0113CE  6EE6               	movwf	postinc1,c
  4082  0113D0  0E02               	movlw	2
  4083  0113D2  6EE6               	movwf	postinc1,c
  4084  0113D4  0E02               	movlw	2
  4085  0113D6  6EE6               	movwf	postinc1,c
  4086  0113D8  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  4087  0113DC  0060  F007  FFE6   	movff	btemp,postinc1
  4088  0113E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4089  0113E8  0E04               	movlw	4
  4090  0113EA  6EE6               	movwf	postinc1,c
  4091  0113EC  EC18  F0CA         	call	_sprintf	;wreg free
  4092                           
  4093                           ; BSR set to: 0
  4094                           ;main.c: 235:    update_lcd(0);
  4095  0113F0  0E00               	movlw	0
  4096  0113F2  6EE6               	movwf	postinc1,c
  4097  0113F4  EC09  F0C9         	call	_update_lcd	;wreg free
  4098                           
  4099                           ;main.c: 236:    WaitMs(1000);
  4100  0113F8  0EE8               	movlw	232
  4101  0113FA  6EE6               	movwf	postinc1,c
  4102  0113FC  0E03               	movlw	3
  4103  0113FE  6EE6               	movwf	postinc1,c
  4104  011400  EC13  F0D7         	call	_WaitMs	;wreg free
  4105                           
  4106                           ;main.c: 237:    StartTimer(TMR_DISPLAY, 250);
  4107  011404  0EFA               	movlw	250
  4108  011406  6EE6               	movwf	postinc1,c
  4109  011408  0E00               	movlw	0
  4110  01140A  6EE6               	movwf	postinc1,c
  4111  01140C  0E0A               	movlw	10
  4112  01140E  6EE6               	movwf	postinc1,c
  4113  011410  EC20  F0D6         	call	_StartTimer	;wreg free
  4114                           
  4115                           ;main.c: 238:    StartTimer(TMR_ADC, 200);
  4116  011414  0EC8               	movlw	200
  4117  011416  6EE6               	movwf	postinc1,c
  4118  011418  0E00               	movlw	0
  4119  01141A  6EE6               	movwf	postinc1,c
  4120  01141C  0E01               	movlw	1
  4121  01141E  6EE6               	movwf	postinc1,c
  4122  011420  EC20  F0D6         	call	_StartTimer	;wreg free
  4123                           
  4124                           ;main.c: 239:    StartTimer(TMR_INFO, 3000);
  4125  011424  0EB8               	movlw	184
  4126  011426  6EE6               	movwf	postinc1,c
  4127  011428  0E0B               	movlw	11
  4128  01142A  6EE6               	movwf	postinc1,c
  4129  01142C  0E07               	movlw	7
  4130  01142E  6EE6               	movwf	postinc1,c
  4131  011430  EC20  F0D6         	call	_StartTimer	;wreg free
  4132                           
  4133                           ;main.c: 240:    StartTimer(TMR_FLIPPER, 1500);
  4134  011434  0EDC               	movlw	220
  4135  011436  6EE6               	movwf	postinc1,c
  4136  011438  0E05               	movlw	5
  4137  01143A  6EE6               	movwf	postinc1,c
  4138  01143C  0E0B               	movlw	11
  4139  01143E  6EE6               	movwf	postinc1,c
  4140  011440  EC20  F0D6         	call	_StartTimer	;wreg free
  4141                           
  4142                           ;main.c: 241:    StartTimer(TMR_HELPDIS, 3000);
  4143  011444  0EB8               	movlw	184
  4144  011446  6EE6               	movwf	postinc1,c
  4145  011448  0E0B               	movlw	11
  4146  01144A  6EE6               	movwf	postinc1,c
  4147  01144C  0E09               	movlw	9
  4148  01144E  6EE6               	movwf	postinc1,c
  4149  011450  EC20  F0D6         	call	_StartTimer	;wreg free
  4150                           
  4151                           ;main.c: 243:    start_adc_scan();
  4152  011454  ECF8  F0D2         	call	_start_adc_scan	;wreg free
  4153                           
  4154                           ;main.c: 244:    start_switch_handler();
  4155  011458  EC49  F0DA         	call	_start_switch_handler	;wreg free
  4156                           
  4157                           ; BSR set to: 57
  4158                           ;main.c: 245:    WaitMs(1000);
  4159  01145C  0EE8               	movlw	232
  4160  01145E  6EE6               	movwf	postinc1,c
  4161  011460  0E03               	movlw	3
  4162  011462  6EE6               	movwf	postinc1,c
  4163  011464  EC13  F0D7         	call	_WaitMs	;wreg free
  4164                           
  4165                           ;main.c: 250:    i_ror = 1;
  4166                           ;stkvar	_i_ror @ sp[(-12)+11]
  4167  011468  0EFF               	movlw	-1
  4168  01146A  6AE3               	clrf	plusw1,c
  4169  01146C  2AE3               	incf	plusw1,f,c
  4170  01146E                     l12624:
  4171                           
  4172                           ;main.c: 252:     calc_ror_data();
  4173  01146E  EC57  F0C1         	call	_calc_ror_data	;wreg free
  4174                           
  4175                           ;main.c: 253:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f         ", conv_raw_result(V_BA
      +                          T, CONV));
  4176  011472  0E00               	movlw	0
  4177  011474  6EE6               	movwf	postinc1,c
  4178  011476  0E04               	movlw	4
  4179  011478  6EE6               	movwf	postinc1,c
  4180  01147A  EC28  F0A7         	call	_conv_raw_result	;wreg free
  4181  01147E  0060  F007  FFE6   	movff	btemp,postinc1
  4182  011484  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4183  01148A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4184  011490  0060  F013  FFE6   	movff	btemp+3,postinc1
  4185  011496  0E0C               	movlw	low STR_8
  4186  011498  6EE6               	movwf	postinc1,c
  4187  01149A  0EFF               	movlw	high STR_8
  4188  01149C  6EE6               	movwf	postinc1,c
  4189  01149E  0E00               	movlw	0
  4190  0114A0  6EE6               	movwf	postinc1,c
  4191  0114A2  0E01               	movlw	1
  4192  0114A4  6EE6               	movwf	postinc1,c
  4193  0114A6  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  4194  0114AA  0060  F007  FFE6   	movff	btemp,postinc1
  4195  0114B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4196  0114B6  0E08               	movlw	8
  4197  0114B8  6EE6               	movwf	postinc1,c
  4198  0114BA  EC18  F0CA         	call	_sprintf	;wreg free
  4199                           
  4200                           ; BSR set to: 0
  4201                           ;main.c: 254:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f       ", spinners(5, 0),
      +                           i_ror, C.bv_ror);
  4202  0114BE  0060  F5A3  FFE6   	movff	_C+104,postinc1
  4203  0114C4  0060  F5A7  FFE6   	movff	_C+105,postinc1
  4204  0114CA  0060  F5AB  FFE6   	movff	_C+106,postinc1
  4205  0114D0  0060  F5AF  FFE6   	movff	_C+107,postinc1
  4206                           
  4207                           ;stkvar	_i_ror @ sp[(-16)+11]
  4208  0114D6  0EFB               	movlw	-5
  4209  0114D8  50E3               	movf	plusw1,w,c
  4210  0114DA  6EE6               	movwf	postinc1,c
  4211  0114DC  0E00               	movlw	0
  4212  0114DE  6EE6               	movwf	postinc1,c
  4213  0114E0  0E00               	movlw	0
  4214  0114E2  6EE6               	movwf	postinc1,c
  4215  0114E4  0E05               	movlw	5
  4216  0114E6  6EE6               	movwf	postinc1,c
  4217  0114E8  EC0F  F0CC         	call	_spinners	;wreg free
  4218  0114EC  5001               	movf	btemp^0,w,c
  4219  0114EE  6EE6               	movwf	postinc1,c
  4220  0114F0  0E00               	movlw	0
  4221  0114F2  6EE6               	movwf	postinc1,c
  4222  0114F4  0E08               	movlw	low STR_9
  4223  0114F6  6EE6               	movwf	postinc1,c
  4224  0114F8  0EFD               	movlw	high STR_9
  4225  0114FA  6EE6               	movwf	postinc1,c
  4226  0114FC  0E00               	movlw	0
  4227  0114FE  6EE6               	movwf	postinc1,c
  4228  011500  0E02               	movlw	2
  4229  011502  6EE6               	movwf	postinc1,c
  4230  011504  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  4231  011508  0060  F007  FFE6   	movff	btemp,postinc1
  4232  01150E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4233  011514  0E0C               	movlw	12
  4234  011516  6EE6               	movwf	postinc1,c
  4235  011518  EC18  F0CA         	call	_sprintf	;wreg free
  4236                           
  4237                           ; BSR set to: 0
  4238                           ;main.c: 255:     update_lcd(0);
  4239  01151C  0E00               	movlw	0
  4240  01151E  6EE6               	movwf	postinc1,c
  4241  011520  EC09  F0C9         	call	_update_lcd	;wreg free
  4242                           
  4243                           ;main.c: 256:     WaitMs(2000);
  4244  011524  0ED0               	movlw	208
  4245  011526  6EE6               	movwf	postinc1,c
  4246  011528  0E07               	movlw	7
  4247  01152A  6EE6               	movwf	postinc1,c
  4248  01152C  EC13  F0D7         	call	_WaitMs	;wreg free
  4249                           
  4250                           ;main.c: 257:     clear_adc_scan();
  4251  011530  EC8D  F0DB         	call	_clear_adc_scan	;wreg free
  4252                           
  4253                           ; BSR set to: 0
  4254                           ;main.c: 258:     start_adc_scan();
  4255  011534  ECF8  F0D2         	call	_start_adc_scan	;wreg free
  4256                           
  4257                           ;main.c: 259:     WaitMs(500);
  4258  011538  0EF4               	movlw	244
  4259  01153A  6EE6               	movwf	postinc1,c
  4260  01153C  0E01               	movlw	1
  4261  01153E  6EE6               	movwf	postinc1,c
  4262  011540  EC13  F0D7         	call	_WaitMs	;wreg free
  4263                           
  4264                           ;main.c: 260:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4265                           ;stkvar	_i_ror @ sp[(-12)+11]
  4266  011544  0EFF               	movlw	-1
  4267  011546  006F FF8C  F00C    	movff	plusw1,btemp+11
  4268  01154C  2A0C               	incf	(btemp+11)^0,f,c
  4269  01154E  0060  F033  FFE3   	movff	btemp+11,plusw1
  4270  011554  060C               	decf	(btemp+11)^0,f,c
  4271  011556  0E1E               	movlw	30
  4272  011558  600C               	cpfslt	(btemp+11)^0,c
  4273  01155A  D018               	goto	u12090
  4274  01155C  0060  F5A3  FFE6   	movff	_C+104,postinc1
  4275  011562  0060  F5A7  FFE6   	movff	_C+105,postinc1
  4276  011568  0060  F5AB  FFE6   	movff	_C+106,postinc1
  4277  01156E  0060  F5AF  FFE6   	movff	_C+107,postinc1
  4278  011574  0E42               	movlw	66
  4279  011576  6EE6               	movwf	postinc1,c
  4280  011578  0E60               	movlw	96
  4281  01157A  6EE6               	movwf	postinc1,c
  4282  01157C  0E65               	movlw	101
  4283  01157E  6EE6               	movwf	postinc1,c
  4284  011580  0E3C               	movlw	60
  4285  011582  6EE6               	movwf	postinc1,c
  4286  011584  EC82  F0C3         	call	___flge	;wreg free
  4287  011588  A001               	btfss	btemp& (0+255),0,c
  4288  01158A  D771               	goto	l12624
  4289  01158C                     u12090:
  4290                           
  4291                           ;main.c: 262:    static_soc();
  4292  01158C  ECBA  F0D9         	call	_static_soc	;wreg free
  4293                           
  4294                           ; BSR set to: 1
  4295                           ;main.c: 263:    init_bsoc();
  4296  011590  ECCA  F0C2         	call	_init_bsoc	;wreg free
  4297                           
  4298                           ;main.c: 264:    set_load_relay_one(0);
  4299  011594  0E00               	movlw	0
  4300  011596  6EE6               	movwf	postinc1,c
  4301  011598  EC2F  F0DB         	call	_set_load_relay_one	;wreg free
  4302                           
  4303                           ;main.c: 265:    set_load_relay_two(0);
  4304  01159C  0E00               	movlw	0
  4305  01159E  6EE6               	movwf	postinc1,c
  4306  0115A0  EC27  F0DB         	call	_set_load_relay_two	;wreg free
  4307                           
  4308                           ;main.c: 266:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4309  0115A4  0060  F6BB  FFE6   	movff	_C+174,postinc1
  4310  0115AA  0060  F6BF  FFE6   	movff	_C+175,postinc1
  4311  0115B0  0E35               	movlw	low STR_10
  4312  0115B2  6EE6               	movwf	postinc1,c
  4313  0115B4  0EFD               	movlw	high STR_10
  4314  0115B6  6EE6               	movwf	postinc1,c
  4315  0115B8  0E00               	movlw	0
  4316  0115BA  6EE6               	movwf	postinc1,c
  4317  0115BC  0E00               	movlw	0
  4318  0115BE  6EE6               	movwf	postinc1,c
  4319  0115C0  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  4320  0115C4  0060  F007  FFE6   	movff	btemp,postinc1
  4321  0115CA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4322  0115D0  0E06               	movlw	6
  4323  0115D2  6EE6               	movwf	postinc1,c
  4324  0115D4  EC18  F0CA         	call	_sprintf	;wreg free
  4325                           
  4326                           ; BSR set to: 0
  4327                           ;main.c: 267:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4328  0115D8  0060  F633  FFE6   	movff	_C+140,postinc1
  4329  0115DE  0060  F637  FFE6   	movff	_C+141,postinc1
  4330  0115E4  0060  F63B  FFE6   	movff	_C+142,postinc1
  4331  0115EA  0060  F63F  FFE6   	movff	_C+143,postinc1
  4332  0115F0  0E4B               	movlw	low STR_11
  4333  0115F2  6EE6               	movwf	postinc1,c
  4334  0115F4  0EFD               	movlw	high STR_11
  4335  0115F6  6EE6               	movwf	postinc1,c
  4336  0115F8  0E00               	movlw	0
  4337  0115FA  6EE6               	movwf	postinc1,c
  4338  0115FC  0E01               	movlw	1
  4339  0115FE  6EE6               	movwf	postinc1,c
  4340  011600  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  4341  011604  0060  F007  FFE6   	movff	btemp,postinc1
  4342  01160A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4343  011610  0E08               	movlw	8
  4344  011612  6EE6               	movwf	postinc1,c
  4345  011614  EC18  F0CA         	call	_sprintf	;wreg free
  4346                           
  4347                           ; BSR set to: 0
  4348                           ;main.c: 268:    update_lcd(0);
  4349  011618  0E00               	movlw	0
  4350  01161A  6EE6               	movwf	postinc1,c
  4351  01161C  EC09  F0C9         	call	_update_lcd	;wreg free
  4352                           
  4353                           ;main.c: 269:    WaitMs(2000);
  4354  011620  0ED0               	movlw	208
  4355  011622  6EE6               	movwf	postinc1,c
  4356  011624  0E07               	movlw	7
  4357  011626  6EE6               	movwf	postinc1,c
  4358  011628  EC13  F0D7         	call	_WaitMs	;wreg free
  4359                           
  4360                           ;main.c: 270:    sprintf(get_vterm_ptr(0, 0), "Battery ESR     ");
  4361  01162C  0E2F               	movlw	low STR_12
  4362  01162E  6EE6               	movwf	postinc1,c
  4363  011630  0EFF               	movlw	high STR_12
  4364  011632  6EE6               	movwf	postinc1,c
  4365  011634  0E00               	movlw	0
  4366  011636  6EE6               	movwf	postinc1,c
  4367  011638  0E00               	movlw	0
  4368  01163A  6EE6               	movwf	postinc1,c
  4369  01163C  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  4370  011640  0060  F007  FFE6   	movff	btemp,postinc1
  4371  011646  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4372  01164C  0E04               	movlw	4
  4373  01164E  6EE6               	movwf	postinc1,c
  4374  011650  EC18  F0CA         	call	_sprintf	;wreg free
  4375                           
  4376                           ; BSR set to: 0
  4377                           ;main.c: 271:    sprintf(get_vterm_ptr(1, 0), "Calculation     ");
  4378  011654  0E40               	movlw	low STR_13
  4379  011656  6EE6               	movwf	postinc1,c
  4380  011658  0EFF               	movlw	high STR_13
  4381  01165A  6EE6               	movwf	postinc1,c
  4382  01165C  0E00               	movlw	0
  4383  01165E  6EE6               	movwf	postinc1,c
  4384  011660  0E01               	movlw	1
  4385  011662  6EE6               	movwf	postinc1,c
  4386  011664  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  4387  011668  0060  F007  FFE6   	movff	btemp,postinc1
  4388  01166E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4389  011674  0E04               	movlw	4
  4390  011676  6EE6               	movwf	postinc1,c
  4391  011678  EC18  F0CA         	call	_sprintf	;wreg free
  4392                           
  4393                           ; BSR set to: 0
  4394                           ;main.c: 272:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds");
  4395  01167C  0E73               	movlw	low STR_14
  4396  01167E  6EE6               	movwf	postinc1,c
  4397  011680  0EFF               	movlw	high STR_14
  4398  011682  6EE6               	movwf	postinc1,c
  4399  011684  0E00               	movlw	0
  4400  011686  6EE6               	movwf	postinc1,c
  4401  011688  0E02               	movlw	2
  4402  01168A  6EE6               	movwf	postinc1,c
  4403  01168C  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  4404  011690  0060  F007  FFE6   	movff	btemp,postinc1
  4405  011696  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4406  01169C  0E04               	movlw	4
  4407  01169E  6EE6               	movwf	postinc1,c
  4408  0116A0  EC18  F0CA         	call	_sprintf	;wreg free
  4409                           
  4410                           ; BSR set to: 0
  4411                           ;main.c: 273:    update_lcd(0);
  4412  0116A4  0E00               	movlw	0
  4413  0116A6  6EE6               	movwf	postinc1,c
  4414  0116A8  EC09  F0C9         	call	_update_lcd	;wreg free
  4415                           
  4416                           ;main.c: 274:    uint16_t i_esr = 1;
  4417  0116AC  0E01               	movlw	1
  4418  0116AE  6E0B               	movwf	(btemp+10)^0,c
  4419  0116B0  0E00               	movlw	0
  4420  0116B2  6E0C               	movwf	(btemp+11)^0,c
  4421                           
  4422                           ;stkvar	_i_esr @ sp[(-12)+4]
  4423  0116B4  0EF8               	movlw	-8
  4424  0116B6  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4425  0116BC  0EF9               	movlw	-7
  4426  0116BE  0060  F033  FFE3   	movff	btemp+11,plusw1
  4427                           
  4428                           ;main.c: 275:    float esr_temp;;main.c: 276:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  4429  0116C4  D04B               	goto	l12680
  4430  0116C6                     l12670:
  4431                           
  4432                           ;main.c: 277:     WaitMs(100);
  4433  0116C6  0E64               	movlw	100
  4434  0116C8  6EE6               	movwf	postinc1,c
  4435  0116CA  0E00               	movlw	0
  4436  0116CC  6EE6               	movwf	postinc1,c
  4437  0116CE  EC13  F0D7         	call	_WaitMs	;wreg free
  4438                           
  4439                           ;main.c: 278:     sprintf(get_vterm_ptr(2, 0), "Checking %2.1f %c    ", esr_temp, spinne
      +                          rs(0, 0));
  4440  0116D2  0E00               	movlw	0
  4441  0116D4  6EE6               	movwf	postinc1,c
  4442  0116D6  0E00               	movlw	0
  4443  0116D8  6EE6               	movwf	postinc1,c
  4444  0116DA  EC0F  F0CC         	call	_spinners	;wreg free
  4445  0116DE  5001               	movf	btemp^0,w,c
  4446  0116E0  6EE6               	movwf	postinc1,c
  4447  0116E2  0E00               	movlw	0
  4448  0116E4  6EE6               	movwf	postinc1,c
  4449                           
  4450                           ;stkvar	_esr_temp @ sp[(-14)+0]
  4451  0116E6  0EF2               	movlw	-14
  4452  0116E8  006F FF8F FFE6     	movff	plusw1,postinc1
  4453  0116EE  006F FF8F FFE6     	movff	plusw1,postinc1
  4454  0116F4  006F FF8F FFE6     	movff	plusw1,postinc1
  4455  0116FA  006F FF8F FFE6     	movff	plusw1,postinc1
  4456  011700  0E61               	movlw	low STR_15
  4457  011702  6EE6               	movwf	postinc1,c
  4458  011704  0EFD               	movlw	high STR_15
  4459  011706  6EE6               	movwf	postinc1,c
  4460  011708  0E00               	movlw	0
  4461  01170A  6EE6               	movwf	postinc1,c
  4462  01170C  0E02               	movlw	2
  4463  01170E  6EE6               	movwf	postinc1,c
  4464  011710  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  4465  011714  0060  F007  FFE6   	movff	btemp,postinc1
  4466  01171A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4467  011720  0E0A               	movlw	10
  4468  011722  6EE6               	movwf	postinc1,c
  4469  011724  EC18  F0CA         	call	_sprintf	;wreg free
  4470                           
  4471                           ; BSR set to: 0
  4472                           ;main.c: 279:     update_lcd(0);
  4473  011728  0E00               	movlw	0
  4474  01172A  6EE6               	movwf	postinc1,c
  4475  01172C  EC09  F0C9         	call	_update_lcd	;wreg free
  4476                           
  4477                           ;main.c: 281:     if (i_esr++ > 512)
  4478                           ;stkvar	_i_esr @ sp[(-12)+4]
  4479  011730  50E1               	movf	fsr1l,w,c
  4480  011732  0FF8               	addlw	-8
  4481  011734  6ED9               	movwf	fsr2l,c
  4482  011736  50E2               	movf	fsr1h,w,c
  4483  011738  6EDA               	movwf	fsr2h,c
  4484  01173A  0EFF               	movlw	255
  4485  01173C  22DA               	addwfc	fsr2h,f,c
  4486  01173E  006F FF7C  F00B    	movff	indf2,btemp+10
  4487  011744  0E01               	movlw	1
  4488  011746  26DE               	addwf	postinc2,f,c
  4489  011748  006F FF7C  F00C    	movff	indf2,btemp+11
  4490  01174E  0E00               	movlw	0
  4491  011750  22DD               	addwfc	postdec2,f,c
  4492  011752  040B               	decf	(btemp+10)^0,w,c
  4493  011754  0E02               	movlw	2
  4494  011756  580C               	subwfb	(btemp+11)^0,w,c
  4495  011758  B0D8               	btfsc	status,0,c
  4496  01175A  D017               	goto	u12110
  4497  01175C                     l12680:
  4498                           
  4499                           ;main.c: 276:    while ((esr_temp = esr_check(0)) < 0.0) {
  4500  01175C  0E00               	movlw	0
  4501  01175E  6EE6               	movwf	postinc1,c
  4502  011760  EC22  F0B1         	call	_esr_check	;wreg free
  4503                           
  4504                           ;stkvar	_esr_temp @ sp[(-12)+0]
  4505  011764  0EF4               	movlw	-12
  4506  011766  0060  F007  FFE3   	movff	btemp,plusw1
  4507  01176C  0EF5               	movlw	-11
  4508  01176E  0060  F00B  FFE3   	movff	btemp+1,plusw1
  4509  011774  0EF6               	movlw	-10
  4510  011776  0060  F00F  FFE3   	movff	btemp+2,plusw1
  4511  01177C  0EF7               	movlw	-9
  4512  01177E  0060  F013  FFE3   	movff	btemp+3,plusw1
  4513  011784  0EF7               	movlw	-9
  4514  011786  BEE3               	btfsc	plusw1,7,c
  4515  011788  D79E               	goto	l12670
  4516  01178A                     u12110:
  4517                           
  4518                           ;main.c: 284:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  4519  01178A  0060  F613  FFE6   	movff	_C+132,postinc1
  4520  011790  0060  F617  FFE6   	movff	_C+133,postinc1
  4521  011796  0060  F61B  FFE6   	movff	_C+134,postinc1
  4522  01179C  0060  F61F  FFE6   	movff	_C+135,postinc1
  4523  0117A2  0E1F               	movlw	low STR_16
  4524  0117A4  6EE6               	movwf	postinc1,c
  4525  0117A6  0EFD               	movlw	high STR_16
  4526  0117A8  6EE6               	movwf	postinc1,c
  4527  0117AA  0E00               	movlw	0
  4528  0117AC  6EE6               	movwf	postinc1,c
  4529  0117AE  0E00               	movlw	0
  4530  0117B0  6EE6               	movwf	postinc1,c
  4531  0117B2  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  4532  0117B6  0060  F007  FFE6   	movff	btemp,postinc1
  4533  0117BC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4534  0117C2  0E08               	movlw	8
  4535  0117C4  6EE6               	movwf	postinc1,c
  4536  0117C6  EC18  F0CA         	call	_sprintf	;wreg free
  4537                           
  4538                           ;main.c: 285:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  4539  0117CA  0060  F78F  FFE6   	movff	_C+227,postinc1
  4540  0117D0  0060  F793  FFE6   	movff	_C+228,postinc1
  4541  0117D6  0060  F797  FFE6   	movff	_C+229,postinc1
  4542  0117DC  0060  F79B  FFE6   	movff	_C+230,postinc1
  4543  0117E2  0060  F7BF  FFE6   	movff	_C+239,postinc1
  4544  0117E8  0060  F7C3  FFE6   	movff	_C+240,postinc1
  4545  0117EE  0060  F7C7  FFE6   	movff	_C+241,postinc1
  4546  0117F4  0060  F7CB  FFE6   	movff	_C+242,postinc1
  4547  0117FA  0EBC               	movlw	low STR_17
  4548  0117FC  6EE6               	movwf	postinc1,c
  4549  0117FE  0EFC               	movlw	high STR_17
  4550  011800  6EE6               	movwf	postinc1,c
  4551  011802  0E00               	movlw	0
  4552  011804  6EE6               	movwf	postinc1,c
  4553  011806  0E01               	movlw	1
  4554  011808  6EE6               	movwf	postinc1,c
  4555  01180A  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  4556  01180E  0060  F007  FFE6   	movff	btemp,postinc1
  4557  011814  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4558  01181A  0E0C               	movlw	12
  4559  01181C  6EE6               	movwf	postinc1,c
  4560  01181E  EC18  F0CA         	call	_sprintf	;wreg free
  4561                           
  4562                           ;main.c: 286:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  4563  011822  0060  F79F  FFE6   	movff	_C+231,postinc1
  4564  011828  0060  F7A3  FFE6   	movff	_C+232,postinc1
  4565  01182E  0060  F7A7  FFE6   	movff	_C+233,postinc1
  4566  011834  0060  F7AB  FFE6   	movff	_C+234,postinc1
  4567  01183A  0060  F7CF  FFE6   	movff	_C+243,postinc1
  4568  011840  0060  F7D3  FFE6   	movff	_C+244,postinc1
  4569  011846  0060  F7D7  FFE6   	movff	_C+245,postinc1
  4570  01184C  0060  F7DB  FFE6   	movff	_C+246,postinc1
  4571  011852  0ED6               	movlw	low STR_18
  4572  011854  6EE6               	movwf	postinc1,c
  4573  011856  0EFC               	movlw	high STR_18
  4574  011858  6EE6               	movwf	postinc1,c
  4575  01185A  0E00               	movlw	0
  4576  01185C  6EE6               	movwf	postinc1,c
  4577  01185E  0E02               	movlw	2
  4578  011860  6EE6               	movwf	postinc1,c
  4579  011862  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  4580  011866  0060  F007  FFE6   	movff	btemp,postinc1
  4581  01186C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4582  011872  0E0C               	movlw	12
  4583  011874  6EE6               	movwf	postinc1,c
  4584  011876  EC18  F0CA         	call	_sprintf	;wreg free
  4585                           
  4586                           ;main.c: 287:    update_lcd(0);
  4587  01187A  0E00               	movlw	0
  4588  01187C  6EE6               	movwf	postinc1,c
  4589  01187E  EC09  F0C9         	call	_update_lcd	;wreg free
  4590                           
  4591                           ;main.c: 288:    WaitMs(5000);
  4592  011882  0E88               	movlw	136
  4593  011884  6EE6               	movwf	postinc1,c
  4594  011886  0E13               	movlw	19
  4595  011888  6EE6               	movwf	postinc1,c
  4596  01188A  EC13  F0D7         	call	_WaitMs	;wreg free
  4597                           
  4598                           ;main.c: 289:    break;
  4599  01188E  D01C               	goto	l12690
  4600  011890                     l1336:
  4601                           
  4602                           ; BSR set to: 2
  4603                           ;main.c: 295:    P.SYSTEM_STABLE = 1;
  4604  011890  0100               	movlb	0	; () banked
  4605  011892  819F               	bsf	(_P+1)& (0+255),0,b	;volatile
  4606                           
  4607                           ;main.c: 296:    break;
  4608  011894  D019               	goto	l12690
  4609  011896                     l1338:
  4610                           
  4611                           ; BSR set to: 2
  4612                           ;main.c: 299:    V.ui_state = UI_STATE_INIT;
  4613  011896  6B00               	clrf	_V& (0+255),b	;volatile
  4614                           
  4615                           ;main.c: 300:    break;
  4616  011898  D017               	goto	l12690
  4617  01189A                     l12688:
  4618  01189A  0102               	movlb	2	; () banked
  4619  01189C  5100               	movf	_V& (0+255),w,b	;volatile
  4620  01189E  6E0B               	movwf	(btemp+10)^0,c
  4621  0118A0  6A0C               	clrf	(btemp+11)^0,c
  4622                           
  4623                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4624                           ; Switch size 1, requested type "simple"
  4625                           ; Number of cases is 1, Range of values is 0 to 0
  4626                           ; switch strategies available:
  4627                           ; Name         Instructions Cycles
  4628                           ; simple_byte            4     3 (average)
  4629                           ;	Chosen strategy is simple_byte
  4630  0118A2  500C               	movf	(btemp+11)^0,w,c
  4631  0118A4  0A00               	xorlw	0	; case 0
  4632  0118A6  A4D8               	btfss	status,2,c
  4633  0118A8  D7F6               	goto	l1338
  4634                           
  4635                           ; BSR set to: 2
  4636                           ; Switch size 1, requested type "simple"
  4637                           ; Number of cases is 5, Range of values is 0 to 5
  4638                           ; switch strategies available:
  4639                           ; Name         Instructions Cycles
  4640                           ; simple_byte           16     9 (average)
  4641                           ;	Chosen strategy is simple_byte
  4642  0118AA  500B               	movf	(btemp+10)^0,w,c
  4643  0118AC  0A00               	xorlw	0	; case 0
  4644  0118AE  B4D8               	btfsc	status,2,c
  4645  0118B0  D505               	goto	l12574
  4646  0118B2  0A01               	xorlw	1	; case 1
  4647  0118B4  B4D8               	btfsc	status,2,c
  4648  0118B6  D008               	goto	l12690
  4649  0118B8  0A02               	xorlw	2	; case 3
  4650  0118BA  B4D8               	btfsc	status,2,c
  4651  0118BC  D005               	goto	l12690
  4652  0118BE  0A07               	xorlw	7	; case 4
  4653  0118C0  B4D8               	btfsc	status,2,c
  4654  0118C2  D7E6               	goto	l1336
  4655  0118C4  0A01               	xorlw	1	; case 5
  4656  0118C6  D7E7               	goto	l1338
  4657  0118C8                     l12690:
  4658                           
  4659                           ;main.c: 303:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  4660  0118C8  0E01               	movlw	1
  4661  0118CA  6EE6               	movwf	postinc1,c
  4662  0118CC  ECA1  F0D8         	call	_TimerDone	;wreg free
  4663  0118D0  5001               	movf	btemp^0,w,c
  4664  0118D2  B4D8               	btfsc	status,2,c
  4665  0118D4  D013               	goto	l12702
  4666  0118D6  EC7D  F0DB         	call	_check_adc_scan	;wreg free
  4667  0118DA  5001               	movf	btemp^0,w,c
  4668  0118DC  B4D8               	btfsc	status,2,c
  4669  0118DE  D00E               	goto	l12702
  4670                           
  4671                           ;main.c: 307:    convert_adc_data();
  4672  0118E0  ECAD  F0CD         	call	_convert_adc_data	;wreg free
  4673                           
  4674                           ;main.c: 311:    clear_adc_scan();
  4675  0118E4  EC8D  F0DB         	call	_clear_adc_scan	;wreg free
  4676                           
  4677                           ; BSR set to: 0
  4678                           ;main.c: 312:    start_adc_scan();
  4679  0118E8  ECF8  F0D2         	call	_start_adc_scan	;wreg free
  4680                           
  4681                           ;main.c: 313:    StartTimer(TMR_ADC, 200);
  4682  0118EC  0EC8               	movlw	200
  4683  0118EE  6EE6               	movwf	postinc1,c
  4684  0118F0  0E00               	movlw	0
  4685  0118F2  6EE6               	movwf	postinc1,c
  4686  0118F4  0E01               	movlw	1
  4687  0118F6  6EE6               	movwf	postinc1,c
  4688  0118F8  EC20  F0D6         	call	_StartTimer	;wreg free
  4689  0118FC                     l12702:
  4690                           
  4691                           ;main.c: 320:   if (TimerDone(TMR_DISPLAY)) {
  4692                           
  4693                           ;main.c: 316:   if (V.ticks) {
  4694  0118FC  0E0A               	movlw	10
  4695  0118FE  6EE6               	movwf	postinc1,c
  4696  011900  ECA1  F0D8         	call	_TimerDone	;wreg free
  4697  011904  5001               	movf	btemp^0,w,c
  4698  011906  B4D8               	btfsc	status,2,c
  4699  011908  EF88  F090         	goto	l12752
  4700                           
  4701                           ;main.c: 321:    if (TimerDone(TMR_HELPDIS)) {
  4702  01190C  0E09               	movlw	9
  4703  01190E  6EE6               	movwf	postinc1,c
  4704  011910  ECA1  F0D8         	call	_TimerDone	;wreg free
  4705  011914  5001               	movf	btemp^0,w,c
  4706  011916  B4D8               	btfsc	status,2,c
  4707  011918  D004               	goto	l12710
  4708                           
  4709                           ;main.c: 322:     set_display_info(DIS_STR);
  4710  01191A  0E00               	movlw	0
  4711  01191C  6EE6               	movwf	postinc1,c
  4712  01191E  EC77  F0DA         	call	_set_display_info	;wreg free
  4713  011922                     l12710:
  4714                           
  4715                           ;main.c: 324:    calc_model_data();
  4716  011922  EC9B  F0AD         	call	_calc_model_data	;wreg free
  4717                           
  4718                           ; BSR set to: 1
  4719                           ;main.c: 331:     hid_display(&H);
  4720                           
  4721                           ;main.c: 326:    if (0) {
  4722  011926  0EF3               	movlw	_H& (0+255)
  4723  011928  6EE6               	movwf	postinc1,c
  4724  01192A  EC9D  F0CA         	call	_hid_display	;wreg free
  4725                           
  4726                           ;main.c: 332:     switch (H.hid_display) {
  4727  01192E  D3A4               	goto	l12736
  4728  011930                     l1346:
  4729                           
  4730                           ; BSR set to: 0
  4731                           ;main.c: 334:      V.calib = 0;
  4732  011930  0102               	movlb	2	; () banked
  4733  011932  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  4734                           
  4735                           ; BSR set to: 2
  4736                           ;main.c: 335:      sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  4737  011934  0060  F5E3  FFE6   	movff	_C+120,postinc1
  4738  01193A  0060  F5E7  FFE6   	movff	_C+121,postinc1
  4739  011940  0060  F5EB  FFE6   	movff	_C+122,postinc1
  4740  011946  0060  F5EF  FFE6   	movff	_C+123,postinc1
  4741  01194C  0E9A               	movlw	low STR_22
  4742  01194E  6EE6               	movwf	postinc1,c
  4743  011950  0EFE               	movlw	high STR_22
  4744  011952  6EE6               	movwf	postinc1,c
  4745  011954  0E00               	movlw	0
  4746  011956  6EE6               	movwf	postinc1,c
  4747  011958  0E00               	movlw	0
  4748  01195A  6EE6               	movwf	postinc1,c
  4749  01195C  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  4750  011960  0060  F007  FFE6   	movff	btemp,postinc1
  4751  011966  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4752  01196C  0E08               	movlw	8
  4753  01196E  6EE6               	movwf	postinc1,c
  4754  011970  EC18  F0CA         	call	_sprintf	;wreg free
  4755                           
  4756                           ;main.c: 336:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  4757  011974  0060  F5C3  FFE6   	movff	_C+112,postinc1
  4758  01197A  0060  F5C7  FFE6   	movff	_C+113,postinc1
  4759  011980  0060  F5CB  FFE6   	movff	_C+114,postinc1
  4760  011986  0060  F5CF  FFE6   	movff	_C+115,postinc1
  4761  01198C  0EC0               	movlw	low STR_23
  4762  01198E  6EE6               	movwf	postinc1,c
  4763  011990  0EFE               	movlw	high STR_23
  4764  011992  6EE6               	movwf	postinc1,c
  4765  011994  0E00               	movlw	0
  4766  011996  6EE6               	movwf	postinc1,c
  4767  011998  0E01               	movlw	1
  4768  01199A  6EE6               	movwf	postinc1,c
  4769  01199C  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  4770  0119A0  0060  F007  FFE6   	movff	btemp,postinc1
  4771  0119A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4772  0119AC  0E08               	movlw	8
  4773  0119AE  6EE6               	movwf	postinc1,c
  4774  0119B0  EC18  F0CA         	call	_sprintf	;wreg free
  4775                           
  4776                           ;main.c: 337:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  4777  0119B4  0060  F5D3  FFE6   	movff	_C+116,postinc1
  4778  0119BA  0060  F5D7  FFE6   	movff	_C+117,postinc1
  4779  0119C0  0060  F5DB  FFE6   	movff	_C+118,postinc1
  4780  0119C6  0060  F5DF  FFE6   	movff	_C+119,postinc1
  4781  0119CC  0EAD               	movlw	low STR_24
  4782  0119CE  6EE6               	movwf	postinc1,c
  4783  0119D0  0EFE               	movlw	high STR_24
  4784  0119D2  6EE6               	movwf	postinc1,c
  4785  0119D4  0E00               	movlw	0
  4786  0119D6  6EE6               	movwf	postinc1,c
  4787  0119D8  0E02               	movlw	2
  4788  0119DA  6EE6               	movwf	postinc1,c
  4789  0119DC  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  4790  0119E0  0060  F007  FFE6   	movff	btemp,postinc1
  4791  0119E6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4792  0119EC  0E08               	movlw	8
  4793  0119EE  6EE6               	movwf	postinc1,c
  4794  0119F0  EC18  F0CA         	call	_sprintf	;wreg free
  4795                           
  4796                           ;main.c: 339:      sprintf(get_vterm_ptr(0, 1), "PV   WH %3.2f     ", C.pvkw);
  4797  0119F4  0060  F683  FFE6   	movff	_C+160,postinc1
  4798  0119FA  0060  F687  FFE6   	movff	_C+161,postinc1
  4799  011A00  0060  F68B  FFE6   	movff	_C+162,postinc1
  4800  011A06  0060  F68F  FFE6   	movff	_C+163,postinc1
  4801  011A0C  0E61               	movlw	low STR_25
  4802  011A0E  6EE6               	movwf	postinc1,c
  4803  011A10  0EFE               	movlw	high STR_25
  4804  011A12  6EE6               	movwf	postinc1,c
  4805  011A14  0E01               	movlw	1
  4806  011A16  6EE6               	movwf	postinc1,c
  4807  011A18  0E00               	movlw	0
  4808  011A1A  6EE6               	movwf	postinc1,c
  4809  011A1C  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  4810  011A20  0060  F007  FFE6   	movff	btemp,postinc1
  4811  011A26  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4812  011A2C  0E08               	movlw	8
  4813  011A2E  6EE6               	movwf	postinc1,c
  4814  011A30  EC18  F0CA         	call	_sprintf	;wreg free
  4815                           
  4816                           ;main.c: 340:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f     ", C.loadkw);
  4817  011A34  0060  F6A3  FFE6   	movff	_C+168,postinc1
  4818  011A3A  0060  F6A7  FFE6   	movff	_C+169,postinc1
  4819  011A40  0060  F6AB  FFE6   	movff	_C+170,postinc1
  4820  011A46  0060  F6AF  FFE6   	movff	_C+171,postinc1
  4821  011A4C  0E87               	movlw	low STR_26
  4822  011A4E  6EE6               	movwf	postinc1,c
  4823  011A50  0EFE               	movlw	high STR_26
  4824  011A52  6EE6               	movwf	postinc1,c
  4825  011A54  0E01               	movlw	1
  4826  011A56  6EE6               	movwf	postinc1,c
  4827  011A58  0E01               	movlw	1
  4828  011A5A  6EE6               	movwf	postinc1,c
  4829  011A5C  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  4830  011A60  0060  F007  FFE6   	movff	btemp,postinc1
  4831  011A66  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4832  011A6C  0E08               	movlw	8
  4833  011A6E  6EE6               	movwf	postinc1,c
  4834  011A70  EC18  F0CA         	call	_sprintf	;wreg free
  4835                           
  4836                           ;main.c: 341:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f     ", C.invkw);
  4837  011A74  0060  F693  FFE6   	movff	_C+164,postinc1
  4838  011A7A  0060  F697  FFE6   	movff	_C+165,postinc1
  4839  011A80  0060  F69B  FFE6   	movff	_C+166,postinc1
  4840  011A86  0060  F69F  FFE6   	movff	_C+167,postinc1
  4841  011A8C  0E74               	movlw	low STR_27
  4842  011A8E  6EE6               	movwf	postinc1,c
  4843  011A90  0EFE               	movlw	high STR_27
  4844  011A92  6EE6               	movwf	postinc1,c
  4845  011A94  0E01               	movlw	1
  4846  011A96  6EE6               	movwf	postinc1,c
  4847  011A98  0E02               	movlw	2
  4848  011A9A  6EE6               	movwf	postinc1,c
  4849  011A9C  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  4850  011AA0  0060  F007  FFE6   	movff	btemp,postinc1
  4851  011AA6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4852  011AAC  0E08               	movlw	8
  4853  011AAE  6EE6               	movwf	postinc1,c
  4854  011AB0  EC18  F0CA         	call	_sprintf	;wreg free
  4855                           
  4856                           ;main.c: 342:      break;
  4857  011AB4  D2F6               	goto	l12738
  4858  011AB6                     l1348:
  4859                           
  4860                           ; BSR set to: 0
  4861                           ;main.c: 344:      V.calib = 0;
  4862  011AB6  0102               	movlb	2	; () banked
  4863  011AB8  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  4864                           
  4865                           ; BSR set to: 2
  4866                           ;main.c: 345:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  4867  011ABA  0060  F413  FFE6   	movff	_C+4,postinc1
  4868  011AC0  0060  F417  FFE6   	movff	_C+5,postinc1
  4869  011AC6  0060  F41B  FFE6   	movff	_C+6,postinc1
  4870  011ACC  0060  F41F  FFE6   	movff	_C+7,postinc1
  4871  011AD2  0060  F453  FFE6   	movff	_C+20,postinc1
  4872  011AD8  0060  F457  FFE6   	movff	_C+21,postinc1
  4873  011ADE  0060  F45B  FFE6   	movff	_C+22,postinc1
  4874  011AE4  0060  F45F  FFE6   	movff	_C+23,postinc1
  4875  011AEA  0EF9               	movlw	low STR_28
  4876  011AEC  6EE6               	movwf	postinc1,c
  4877  011AEE  0EFE               	movlw	high STR_28
  4878  011AF0  6EE6               	movwf	postinc1,c
  4879  011AF2  0E00               	movlw	0
  4880  011AF4  6EE6               	movwf	postinc1,c
  4881  011AF6  0E00               	movlw	0
  4882  011AF8  6EE6               	movwf	postinc1,c
  4883  011AFA  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  4884  011AFE  0060  F007  FFE6   	movff	btemp,postinc1
  4885  011B04  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4886  011B0A  0E0C               	movlw	12
  4887  011B0C  6EE6               	movwf	postinc1,c
  4888  011B0E  EC18  F0CA         	call	_sprintf	;wreg free
  4889                           
  4890                           ;main.c: 346:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  4891  011B12  0060  F403  FFE6   	movff	_C,postinc1
  4892  011B18  0060  F407  FFE6   	movff	_C+1,postinc1
  4893  011B1E  0060  F40B  FFE6   	movff	_C+2,postinc1
  4894  011B24  0060  F40F  FFE6   	movff	_C+3,postinc1
  4895  011B2A  0060  F443  FFE6   	movff	_C+16,postinc1
  4896  011B30  0060  F447  FFE6   	movff	_C+17,postinc1
  4897  011B36  0060  F44B  FFE6   	movff	_C+18,postinc1
  4898  011B3C  0060  F44F  FFE6   	movff	_C+19,postinc1
  4899  011B42  0ED3               	movlw	low STR_29
  4900  011B44  6EE6               	movwf	postinc1,c
  4901  011B46  0EFE               	movlw	high STR_29
  4902  011B48  6EE6               	movwf	postinc1,c
  4903  011B4A  0E00               	movlw	0
  4904  011B4C  6EE6               	movwf	postinc1,c
  4905  011B4E  0E01               	movlw	1
  4906  011B50  6EE6               	movwf	postinc1,c
  4907  011B52  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  4908  011B56  0060  F007  FFE6   	movff	btemp,postinc1
  4909  011B5C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4910  011B62  0E0C               	movlw	12
  4911  011B64  6EE6               	movwf	postinc1,c
  4912  011B66  EC18  F0CA         	call	_sprintf	;wreg free
  4913                           
  4914                           ;main.c: 347:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  4915  011B6A  0060  F503  FFE6   	movff	_C+64,postinc1
  4916  011B70  0060  F507  FFE6   	movff	_C+65,postinc1
  4917  011B76  0060  F50B  FFE6   	movff	_C+66,postinc1
  4918  011B7C  0060  F50F  FFE6   	movff	_C+67,postinc1
  4919  011B82  0060  F423  FFE6   	movff	_C+8,postinc1
  4920  011B88  0060  F427  FFE6   	movff	_C+9,postinc1
  4921  011B8E  0060  F42B  FFE6   	movff	_C+10,postinc1
  4922  011B94  0060  F42F  FFE6   	movff	_C+11,postinc1
  4923  011B9A  0EE6               	movlw	low STR_30
  4924  011B9C  6EE6               	movwf	postinc1,c
  4925  011B9E  0EFE               	movlw	high STR_30
  4926  011BA0  6EE6               	movwf	postinc1,c
  4927  011BA2  0E00               	movlw	0
  4928  011BA4  6EE6               	movwf	postinc1,c
  4929  011BA6  0E02               	movlw	2
  4930  011BA8  6EE6               	movwf	postinc1,c
  4931  011BAA  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  4932  011BAE  0060  F007  FFE6   	movff	btemp,postinc1
  4933  011BB4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4934  011BBA  0E0C               	movlw	12
  4935  011BBC  6EE6               	movwf	postinc1,c
  4936  011BBE  EC18  F0CA         	call	_sprintf	;wreg free
  4937                           
  4938                           ;main.c: 349:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f     ", C.bkwi);
  4939  011BC2  0060  F663  FFE6   	movff	_C+152,postinc1
  4940  011BC8  0060  F667  FFE6   	movff	_C+153,postinc1
  4941  011BCE  0060  F66B  FFE6   	movff	_C+154,postinc1
  4942  011BD4  0060  F66F  FFE6   	movff	_C+155,postinc1
  4943  011BDA  0E28               	movlw	low STR_31
  4944  011BDC  6EE6               	movwf	postinc1,c
  4945  011BDE  0EFE               	movlw	high STR_31
  4946  011BE0  6EE6               	movwf	postinc1,c
  4947  011BE2  0E01               	movlw	1
  4948  011BE4  6EE6               	movwf	postinc1,c
  4949  011BE6  0E00               	movlw	0
  4950  011BE8  6EE6               	movwf	postinc1,c
  4951  011BEA  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  4952  011BEE  0060  F007  FFE6   	movff	btemp,postinc1
  4953  011BF4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4954  011BFA  0E08               	movlw	8
  4955  011BFC  6EE6               	movwf	postinc1,c
  4956  011BFE  EC18  F0CA         	call	_sprintf	;wreg free
  4957                           
  4958                           ;main.c: 350:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f     ", C.bkwo);
  4959  011C02  0060  F673  FFE6   	movff	_C+156,postinc1
  4960  011C08  0060  F677  FFE6   	movff	_C+157,postinc1
  4961  011C0E  0060  F67B  FFE6   	movff	_C+158,postinc1
  4962  011C14  0060  F67F  FFE6   	movff	_C+159,postinc1
  4963  011C1A  0E3B               	movlw	low STR_32
  4964  011C1C  6EE6               	movwf	postinc1,c
  4965  011C1E  0EFE               	movlw	high STR_32
  4966  011C20  6EE6               	movwf	postinc1,c
  4967  011C22  0E01               	movlw	1
  4968  011C24  6EE6               	movwf	postinc1,c
  4969  011C26  0E01               	movlw	1
  4970  011C28  6EE6               	movwf	postinc1,c
  4971  011C2A  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  4972  011C2E  0060  F007  FFE6   	movff	btemp,postinc1
  4973  011C34  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4974  011C3A  0E08               	movlw	8
  4975  011C3C  6EE6               	movwf	postinc1,c
  4976  011C3E  EC18  F0CA         	call	_sprintf	;wreg free
  4977                           
  4978                           ;main.c: 351:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f     ", C.bkwi + C.bkwo);
  4979  011C42  0060  F673  FFE6   	movff	_C+156,postinc1
  4980  011C48  0060  F677  FFE6   	movff	_C+157,postinc1
  4981  011C4E  0060  F67B  FFE6   	movff	_C+158,postinc1
  4982  011C54  0060  F67F  FFE6   	movff	_C+159,postinc1
  4983  011C5A  0060  F663  FFE6   	movff	_C+152,postinc1
  4984  011C60  0060  F667  FFE6   	movff	_C+153,postinc1
  4985  011C66  0060  F66B  FFE6   	movff	_C+154,postinc1
  4986  011C6C  0060  F66F  FFE6   	movff	_C+155,postinc1
  4987  011C72  EC02  F09D         	call	___fladd	;wreg free
  4988  011C76  0060  F007  FFE6   	movff	btemp,postinc1
  4989  011C7C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4990  011C82  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4991  011C88  0060  F013  FFE6   	movff	btemp+3,postinc1
  4992  011C8E  0E4E               	movlw	low STR_33
  4993  011C90  6EE6               	movwf	postinc1,c
  4994  011C92  0EFE               	movlw	high STR_33
  4995  011C94  6EE6               	movwf	postinc1,c
  4996  011C96  0E01               	movlw	1
  4997  011C98  6EE6               	movwf	postinc1,c
  4998  011C9A  0E02               	movlw	2
  4999  011C9C  6EE6               	movwf	postinc1,c
  5000  011C9E  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  5001  011CA2  0060  F007  FFE6   	movff	btemp,postinc1
  5002  011CA8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5003  011CAE  0E08               	movlw	8
  5004  011CB0  6EE6               	movwf	postinc1,c
  5005  011CB2  EC18  F0CA         	call	_sprintf	;wreg free
  5006                           
  5007                           ;main.c: 352:      break;
  5008  011CB6  D1F5               	goto	l12738
  5009  011CB8                     l1349:
  5010                           
  5011                           ; BSR set to: 0
  5012                           ;main.c: 354:      V.calib = 0;
  5013  011CB8  0102               	movlb	2	; () banked
  5014  011CBA  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  5015                           
  5016                           ; BSR set to: 2
  5017                           ;main.c: 355:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f     ", C.p_bat);
  5018  011CBC  0060  F5F3  FFE6   	movff	_C+124,postinc1
  5019  011CC2  0060  F5F7  FFE6   	movff	_C+125,postinc1
  5020  011CC8  0060  F5FB  FFE6   	movff	_C+126,postinc1
  5021  011CCE  0060  F5FF  FFE6   	movff	_C+127,postinc1
  5022  011CD4  0E9F               	movlw	low STR_34
  5023  011CD6  6EE6               	movwf	postinc1,c
  5024  011CD8  0EFD               	movlw	high STR_34
  5025  011CDA  6EE6               	movwf	postinc1,c
  5026  011CDC  0E00               	movlw	0
  5027  011CDE  6EE6               	movwf	postinc1,c
  5028  011CE0  0E00               	movlw	0
  5029  011CE2  6EE6               	movwf	postinc1,c
  5030  011CE4  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  5031  011CE8  0060  F007  FFE6   	movff	btemp,postinc1
  5032  011CEE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5033  011CF4  0E08               	movlw	8
  5034  011CF6  6EE6               	movwf	postinc1,c
  5035  011CF8  EC18  F0CA         	call	_sprintf	;wreg free
  5036                           
  5037                           ;main.c: 356:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f   ", C.dynamic_ah, C.p
      +                          v_ah);
  5038  011CFC  0060  F643  FFE6   	movff	_C+144,postinc1
  5039  011D02  0060  F647  FFE6   	movff	_C+145,postinc1
  5040  011D08  0060  F64B  FFE6   	movff	_C+146,postinc1
  5041  011D0E  0060  F64F  FFE6   	movff	_C+147,postinc1
  5042  011D14  0060  F633  FFE6   	movff	_C+140,postinc1
  5043  011D1A  0060  F637  FFE6   	movff	_C+141,postinc1
  5044  011D20  0060  F63B  FFE6   	movff	_C+142,postinc1
  5045  011D26  0060  F63F  FFE6   	movff	_C+143,postinc1
  5046  011D2C  0EDB               	movlw	low STR_35
  5047  011D2E  6EE6               	movwf	postinc1,c
  5048  011D30  0EFD               	movlw	high STR_35
  5049  011D32  6EE6               	movwf	postinc1,c
  5050  011D34  0E00               	movlw	0
  5051  011D36  6EE6               	movwf	postinc1,c
  5052  011D38  0E01               	movlw	1
  5053  011D3A  6EE6               	movwf	postinc1,c
  5054  011D3C  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  5055  011D40  0060  F007  FFE6   	movff	btemp,postinc1
  5056  011D46  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5057  011D4C  0E0C               	movlw	12
  5058  011D4E  6EE6               	movwf	postinc1,c
  5059  011D50  EC18  F0CA         	call	_sprintf	;wreg free
  5060                           
  5061                           ;main.c: 357:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d     ", spinners(5, 0), C
      +                          .soc, C.runtime);
  5062  011D54  0060  F6B3  FFE6   	movff	_C+172,postinc1
  5063  011D5A  0060  F6B7  FFE6   	movff	_C+173,postinc1
  5064  011D60  0060  F6BB  FFE6   	movff	_C+174,postinc1
  5065  011D66  0060  F6BF  FFE6   	movff	_C+175,postinc1
  5066  011D6C  0E00               	movlw	0
  5067  011D6E  6EE6               	movwf	postinc1,c
  5068  011D70  0E05               	movlw	5
  5069  011D72  6EE6               	movwf	postinc1,c
  5070  011D74  EC0F  F0CC         	call	_spinners	;wreg free
  5071  011D78  5001               	movf	btemp^0,w,c
  5072  011D7A  6EE6               	movwf	postinc1,c
  5073  011D7C  0E00               	movlw	0
  5074  011D7E  6EE6               	movwf	postinc1,c
  5075  011D80  0E8B               	movlw	low STR_36
  5076  011D82  6EE6               	movwf	postinc1,c
  5077  011D84  0EFD               	movlw	high STR_36
  5078  011D86  6EE6               	movwf	postinc1,c
  5079  011D88  0E00               	movlw	0
  5080  011D8A  6EE6               	movwf	postinc1,c
  5081  011D8C  0E02               	movlw	2
  5082  011D8E  6EE6               	movwf	postinc1,c
  5083  011D90  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  5084  011D94  0060  F007  FFE6   	movff	btemp,postinc1
  5085  011D9A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5086  011DA0  0E0A               	movlw	10
  5087  011DA2  6EE6               	movwf	postinc1,c
  5088  011DA4  EC18  F0CA         	call	_sprintf	;wreg free
  5089                           
  5090                           ;main.c: 359:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f         ", C.esr);
  5091  011DA8  0060  F613  FFE6   	movff	_C+132,postinc1
  5092  011DAE  0060  F617  FFE6   	movff	_C+133,postinc1
  5093  011DB4  0060  F61B  FFE6   	movff	_C+134,postinc1
  5094  011DBA  0060  F61F  FFE6   	movff	_C+135,postinc1
  5095  011DC0  0E77               	movlw	low STR_37
  5096  011DC2  6EE6               	movwf	postinc1,c
  5097  011DC4  0EFD               	movlw	high STR_37
  5098  011DC6  6EE6               	movwf	postinc1,c
  5099  011DC8  0E01               	movlw	1
  5100  011DCA  6EE6               	movwf	postinc1,c
  5101  011DCC  0E00               	movlw	0
  5102  011DCE  6EE6               	movwf	postinc1,c
  5103  011DD0  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  5104  011DD4  0060  F007  FFE6   	movff	btemp,postinc1
  5105  011DDA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5106  011DE0  0E08               	movlw	8
  5107  011DE2  6EE6               	movwf	postinc1,c
  5108  011DE4  EC18  F0CA         	call	_sprintf	;wreg free
  5109                           
  5110                           ;main.c: 360:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f     ", C.bv_one_load, C.
      +                          load_i1);
  5111  011DE8  0060  F78F  FFE6   	movff	_C+227,postinc1
  5112  011DEE  0060  F793  FFE6   	movff	_C+228,postinc1
  5113  011DF4  0060  F797  FFE6   	movff	_C+229,postinc1
  5114  011DFA  0060  F79B  FFE6   	movff	_C+230,postinc1
  5115  011E00  0060  F7BF  FFE6   	movff	_C+239,postinc1
  5116  011E06  0060  F7C3  FFE6   	movff	_C+240,postinc1
  5117  011E0C  0060  F7C7  FFE6   	movff	_C+241,postinc1
  5118  011E12  0060  F7CB  FFE6   	movff	_C+242,postinc1
  5119  011E18  0EB3               	movlw	low STR_38
  5120  011E1A  6EE6               	movwf	postinc1,c
  5121  011E1C  0EFD               	movlw	high STR_38
  5122  011E1E  6EE6               	movwf	postinc1,c
  5123  011E20  0E01               	movlw	1
  5124  011E22  6EE6               	movwf	postinc1,c
  5125  011E24  0E01               	movlw	1
  5126  011E26  6EE6               	movwf	postinc1,c
  5127  011E28  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  5128  011E2C  0060  F007  FFE6   	movff	btemp,postinc1
  5129  011E32  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5130  011E38  0E0C               	movlw	12
  5131  011E3A  6EE6               	movwf	postinc1,c
  5132  011E3C  EC18  F0CA         	call	_sprintf	;wreg free
  5133                           
  5134                           ;main.c: 361:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f     ", C.bv_full_load, C
      +                          .load_i2);
  5135  011E40  0060  F79F  FFE6   	movff	_C+231,postinc1
  5136  011E46  0060  F7A3  FFE6   	movff	_C+232,postinc1
  5137  011E4C  0060  F7A7  FFE6   	movff	_C+233,postinc1
  5138  011E52  0060  F7AB  FFE6   	movff	_C+234,postinc1
  5139  011E58  0060  F7CF  FFE6   	movff	_C+243,postinc1
  5140  011E5E  0060  F7D3  FFE6   	movff	_C+244,postinc1
  5141  011E64  0060  F7D7  FFE6   	movff	_C+245,postinc1
  5142  011E6A  0060  F7DB  FFE6   	movff	_C+246,postinc1
  5143  011E70  0EC7               	movlw	low STR_39
  5144  011E72  6EE6               	movwf	postinc1,c
  5145  011E74  0EFD               	movlw	high STR_39
  5146  011E76  6EE6               	movwf	postinc1,c
  5147  011E78  0E01               	movlw	1
  5148  011E7A  6EE6               	movwf	postinc1,c
  5149  011E7C  0E02               	movlw	2
  5150  011E7E  6EE6               	movwf	postinc1,c
  5151  011E80  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  5152  011E84  0060  F007  FFE6   	movff	btemp,postinc1
  5153  011E8A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5154  011E90  0E0C               	movlw	12
  5155  011E92  6EE6               	movwf	postinc1,c
  5156  011E94  EC18  F0CA         	call	_sprintf	;wreg free
  5157                           
  5158                           ;main.c: 362:      break;
  5159  011E98  D104               	goto	l12738
  5160  011E9A                     l12722:
  5161                           
  5162                           ; BSR set to: 0
  5163                           ;main.c: 364:      if (!V.calib) {
  5164  011E9A  0102               	movlb	2	; () banked
  5165  011E9C  51AC               	movf	(_V+172)& (0+255),w,b	;volatile
  5166  011E9E  A4D8               	btfss	status,2,c
  5167  011EA0  D02D               	goto	l12726
  5168                           
  5169                           ; BSR set to: 2
  5170                           ;main.c: 365:       lp_filter(0.0, i, -1);
  5171  011EA2  0EFF               	movlw	255
  5172  011EA4  6EE6               	movwf	postinc1,c
  5173                           
  5174                           ;stkvar	_i @ sp[(-13)+8]
  5175  011EA6  0EFB               	movlw	-5
  5176  011EA8  50E3               	movf	plusw1,w,c
  5177  011EAA  6EE6               	movwf	postinc1,c
  5178  011EAC  0E00               	movlw	0
  5179  011EAE  6EE6               	movwf	postinc1,c
  5180  011EB0  0E00               	movlw	0
  5181  011EB2  6EE6               	movwf	postinc1,c
  5182  011EB4  0E00               	movlw	0
  5183  011EB6  6EE6               	movwf	postinc1,c
  5184  011EB8  0E00               	movlw	0
  5185  011EBA  6EE6               	movwf	postinc1,c
  5186  011EBC  ECEE  F0BE         	call	_lp_filter	;wreg free
  5187                           
  5188                           ;main.c: 366:       lp_filter(0.0, j, -1);
  5189  011EC0  0EFF               	movlw	255
  5190  011EC2  6EE6               	movwf	postinc1,c
  5191                           
  5192                           ;stkvar	_j @ sp[(-13)+7]
  5193  011EC4  0EFA               	movlw	-6
  5194  011EC6  50E3               	movf	plusw1,w,c
  5195  011EC8  6EE6               	movwf	postinc1,c
  5196  011ECA  0E00               	movlw	0
  5197  011ECC  6EE6               	movwf	postinc1,c
  5198  011ECE  0E00               	movlw	0
  5199  011ED0  6EE6               	movwf	postinc1,c
  5200  011ED2  0E00               	movlw	0
  5201  011ED4  6EE6               	movwf	postinc1,c
  5202  011ED6  0E00               	movlw	0
  5203  011ED8  6EE6               	movwf	postinc1,c
  5204  011EDA  ECEE  F0BE         	call	_lp_filter	;wreg free
  5205                           
  5206                           ;main.c: 367:       lp_filter(0.0, k, -1);
  5207  011EDE  0EFF               	movlw	255
  5208  011EE0  6EE6               	movwf	postinc1,c
  5209                           
  5210                           ;stkvar	_k @ sp[(-13)+6]
  5211  011EE2  0EF9               	movlw	-7
  5212  011EE4  50E3               	movf	plusw1,w,c
  5213  011EE6  6EE6               	movwf	postinc1,c
  5214  011EE8  0E00               	movlw	0
  5215  011EEA  6EE6               	movwf	postinc1,c
  5216  011EEC  0E00               	movlw	0
  5217  011EEE  6EE6               	movwf	postinc1,c
  5218  011EF0  0E00               	movlw	0
  5219  011EF2  6EE6               	movwf	postinc1,c
  5220  011EF4  0E00               	movlw	0
  5221  011EF6  6EE6               	movwf	postinc1,c
  5222  011EF8  ECEE  F0BE         	call	_lp_filter	;wreg free
  5223  011EFC                     l12726:
  5224                           
  5225                           ;main.c: 369:      V.calib = 1;
  5226  011EFC  0E01               	movlw	1
  5227  011EFE  0102               	movlb	2	; () banked
  5228  011F00  6FAC               	movwf	(_V+172)& (0+255),b	;volatile
  5229                           
  5230                           ; BSR set to: 2
  5231                           ;main.c: 370:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  5232  011F02  0E02               	movlw	2
  5233  011F04  6EE6               	movwf	postinc1,c
  5234  011F06  EC0E  F0D8         	call	_get_switch	;wreg free
  5235  011F0A  5001               	movf	btemp^0,w,c
  5236  011F0C  6EE6               	movwf	postinc1,c
  5237  011F0E  0E00               	movlw	0
  5238  011F10  6EE6               	movwf	postinc1,c
  5239                           
  5240                           ;stkvar	_i @ sp[(-14)+8]
  5241  011F12  0EFA               	movlw	-6
  5242  011F14  50E3               	movf	plusw1,w,c
  5243  011F16  0D04               	mullw	4
  5244  011F18  0E00               	movlw	low _C
  5245  011F1A  24F3               	addwf	243,w,c
  5246  011F1C  6ED9               	movwf	fsr2l,c
  5247  011F1E  0E01               	movlw	high _C
  5248  011F20  20F4               	addwfc	prodh,w,c
  5249  011F22  6EDA               	movwf	fsr2h,c
  5250  011F24  006F FF7B FFE6     	movff	postinc2,postinc1
  5251  011F2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5252  011F30  006F FF7B FFE6     	movff	postinc2,postinc1
  5253  011F36  006F FF7B FFE6     	movff	postinc2,postinc1
  5254                           
  5255                           ;stkvar	_i @ sp[(-18)+8]
  5256  011F3C  0EF6               	movlw	-10
  5257  011F3E  50E3               	movf	plusw1,w,c
  5258  011F40  6EE6               	movwf	postinc1,c
  5259  011F42  EC86  F0DA         	call	_get_raw_result	;wreg free
  5260  011F46  0060  F007  FFE6   	movff	btemp,postinc1
  5261  011F4C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5262  011F52  0E84               	movlw	low STR_19
  5263  011F54  6EE6               	movwf	postinc1,c
  5264  011F56  0EFF               	movlw	high STR_19
  5265  011F58  6EE6               	movwf	postinc1,c
  5266  011F5A  0E00               	movlw	0
  5267  011F5C  6EE6               	movwf	postinc1,c
  5268  011F5E  0E00               	movlw	0
  5269  011F60  6EE6               	movwf	postinc1,c
  5270  011F62  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  5271  011F66  0060  F007  FFE6   	movff	btemp,postinc1
  5272  011F6C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5273  011F72  0E0C               	movlw	12
  5274  011F74  6EE6               	movwf	postinc1,c
  5275  011F76  EC18  F0CA         	call	_sprintf	;wreg free
  5276                           
  5277                           ; BSR set to: 0
  5278                           ;main.c: 371:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  5279  011F7A  0E03               	movlw	3
  5280  011F7C  6EE6               	movwf	postinc1,c
  5281  011F7E  EC0E  F0D8         	call	_get_switch	;wreg free
  5282  011F82  5001               	movf	btemp^0,w,c
  5283  011F84  6EE6               	movwf	postinc1,c
  5284  011F86  0E00               	movlw	0
  5285  011F88  6EE6               	movwf	postinc1,c
  5286                           
  5287                           ;stkvar	_j @ sp[(-14)+7]
  5288  011F8A  0EF9               	movlw	-7
  5289  011F8C  50E3               	movf	plusw1,w,c
  5290  011F8E  0D04               	mullw	4
  5291  011F90  0E00               	movlw	low _C
  5292  011F92  24F3               	addwf	243,w,c
  5293  011F94  6ED9               	movwf	fsr2l,c
  5294  011F96  0E01               	movlw	high _C
  5295  011F98  20F4               	addwfc	prodh,w,c
  5296  011F9A  6EDA               	movwf	fsr2h,c
  5297  011F9C  006F FF7B FFE6     	movff	postinc2,postinc1
  5298  011FA2  006F FF7B FFE6     	movff	postinc2,postinc1
  5299  011FA8  006F FF7B FFE6     	movff	postinc2,postinc1
  5300  011FAE  006F FF7B FFE6     	movff	postinc2,postinc1
  5301                           
  5302                           ;stkvar	_j @ sp[(-18)+7]
  5303  011FB4  0EF5               	movlw	-11
  5304  011FB6  50E3               	movf	plusw1,w,c
  5305  011FB8  6EE6               	movwf	postinc1,c
  5306  011FBA  EC86  F0DA         	call	_get_raw_result	;wreg free
  5307  011FBE  0060  F007  FFE6   	movff	btemp,postinc1
  5308  011FC4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5309  011FCA  0E84               	movlw	low STR_19
  5310  011FCC  6EE6               	movwf	postinc1,c
  5311  011FCE  0EFF               	movlw	high STR_19
  5312  011FD0  6EE6               	movwf	postinc1,c
  5313  011FD2  0E00               	movlw	0
  5314  011FD4  6EE6               	movwf	postinc1,c
  5315  011FD6  0E01               	movlw	1
  5316  011FD8  6EE6               	movwf	postinc1,c
  5317  011FDA  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  5318  011FDE  0060  F007  FFE6   	movff	btemp,postinc1
  5319  011FE4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5320  011FEA  0E0C               	movlw	12
  5321  011FEC  6EE6               	movwf	postinc1,c
  5322  011FEE  EC18  F0CA         	call	_sprintf	;wreg free
  5323                           
  5324                           ; BSR set to: 0
  5325                           ;main.c: 372:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  5326                           ;stkvar	_inp_index @ sp[(-12)+9]
  5327  011FF2  0EFD               	movlw	-3
  5328  011FF4  50E3               	movf	plusw1,w,c
  5329  011FF6  6E0B               	movwf	(btemp+10)^0,c
  5330  011FF8  6A0C               	clrf	(btemp+11)^0,c
  5331  011FFA  0E01               	movlw	1
  5332  011FFC  260B               	addwf	(btemp+10)^0,f,c
  5333  011FFE  0E00               	movlw	0
  5334  012000  220C               	addwfc	(btemp+11)^0,f,c
  5335  012002  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5336  012008  0060  F033  FFE6   	movff	btemp+11,postinc1
  5337                           
  5338                           ;stkvar	_k @ sp[(-14)+6]
  5339  01200E  0EF8               	movlw	-8
  5340  012010  50E3               	movf	plusw1,w,c
  5341  012012  0D04               	mullw	4
  5342  012014  0E00               	movlw	low _C
  5343  012016  24F3               	addwf	243,w,c
  5344  012018  6ED9               	movwf	fsr2l,c
  5345  01201A  0E01               	movlw	high _C
  5346  01201C  20F4               	addwfc	prodh,w,c
  5347  01201E  6EDA               	movwf	fsr2h,c
  5348  012020  006F FF7B FFE6     	movff	postinc2,postinc1
  5349  012026  006F FF7B FFE6     	movff	postinc2,postinc1
  5350  01202C  006F FF7B FFE6     	movff	postinc2,postinc1
  5351  012032  006F FF7B FFE6     	movff	postinc2,postinc1
  5352                           
  5353                           ;stkvar	_k @ sp[(-18)+6]
  5354  012038  0EF4               	movlw	-12
  5355  01203A  50E3               	movf	plusw1,w,c
  5356  01203C  6EE6               	movwf	postinc1,c
  5357  01203E  EC86  F0DA         	call	_get_raw_result	;wreg free
  5358  012042  0060  F007  FFE6   	movff	btemp,postinc1
  5359  012048  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5360  01204E  0E62               	movlw	low STR_21
  5361  012050  6EE6               	movwf	postinc1,c
  5362  012052  0EFF               	movlw	high STR_21
  5363  012054  6EE6               	movwf	postinc1,c
  5364  012056  0E00               	movlw	0
  5365  012058  6EE6               	movwf	postinc1,c
  5366  01205A  0E02               	movlw	2
  5367  01205C  6EE6               	movwf	postinc1,c
  5368  01205E  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  5369  012062  0060  F007  FFE6   	movff	btemp,postinc1
  5370  012068  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5371  01206E  0E0C               	movlw	12
  5372  012070  6EE6               	movwf	postinc1,c
  5373  012072  EC18  F0CA         	call	_sprintf	;wreg free
  5374                           
  5375                           ;main.c: 373:      break;
  5376  012076  D015               	goto	l12738
  5377  012078                     l12736:
  5378  012078  0100               	movlb	0	; () banked
  5379  01207A  51F3               	movf	_H& (0+255),w,b
  5380  01207C  6E0B               	movwf	(btemp+10)^0,c
  5381  01207E  6A0C               	clrf	(btemp+11)^0,c
  5382                           
  5383                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5384                           ; Switch size 1, requested type "simple"
  5385                           ; Number of cases is 1, Range of values is 0 to 0
  5386                           ; switch strategies available:
  5387                           ; Name         Instructions Cycles
  5388                           ; simple_byte            4     3 (average)
  5389                           ;	Chosen strategy is simple_byte
  5390  012080  500C               	movf	(btemp+11)^0,w,c
  5391  012082  0A00               	xorlw	0	; case 0
  5392  012084  A4D8               	btfss	status,2,c
  5393  012086  D00D               	goto	l12738
  5394                           
  5395                           ; BSR set to: 0
  5396                           ; Switch size 1, requested type "simple"
  5397                           ; Number of cases is 4, Range of values is 0 to 3
  5398                           ; switch strategies available:
  5399                           ; Name         Instructions Cycles
  5400                           ; simple_byte           13     7 (average)
  5401                           ;	Chosen strategy is simple_byte
  5402  012088  500B               	movf	(btemp+10)^0,w,c
  5403  01208A  0A00               	xorlw	0	; case 0
  5404  01208C  B4D8               	btfsc	status,2,c
  5405  01208E  D513               	goto	l1348
  5406  012090  0A01               	xorlw	1	; case 1
  5407  012092  B4D8               	btfsc	status,2,c
  5408  012094  D44D               	goto	l1346
  5409  012096  0A03               	xorlw	3	; case 2
  5410  012098  B4D8               	btfsc	status,2,c
  5411  01209A  D60E               	goto	l1349
  5412  01209C  0A01               	xorlw	1	; case 3
  5413  01209E  B4D8               	btfsc	status,2,c
  5414  0120A0  D6FC               	goto	l12722
  5415  0120A2                     l12738:
  5416                           
  5417                           ; BSR set to: 0
  5418                           ;main.c: 377:     clear_hid_pflags(&H);
  5419  0120A2  0EF3               	movlw	_H& (0+255)
  5420  0120A4  6EE6               	movwf	postinc1,c
  5421  0120A6  ECCC  F0D9         	call	_clear_hid_pflags	;wreg free
  5422                           
  5423                           ;main.c: 379:    StartTimer(TMR_DISPLAY, 250);
  5424  0120AA  0EFA               	movlw	250
  5425  0120AC  6EE6               	movwf	postinc1,c
  5426  0120AE  0E00               	movlw	0
  5427  0120B0  6EE6               	movwf	postinc1,c
  5428  0120B2  0E0A               	movlw	10
  5429  0120B4  6EE6               	movwf	postinc1,c
  5430  0120B6  EC20  F0D6         	call	_StartTimer	;wreg free
  5431                           
  5432                           ;main.c: 380:    if (check_enter_button(&H) && (H.hid_display != HID_AUX)) {
  5433  0120BA  0EF3               	movlw	_H& (0+255)
  5434  0120BC  6EE6               	movwf	postinc1,c
  5435  0120BE  EC40  F0D6         	call	_check_enter_button	;wreg free
  5436  0120C2  5001               	movf	btemp^0,w,c
  5437  0120C4  B4D8               	btfsc	status,2,c
  5438  0120C6  D012               	goto	l12748
  5439  0120C8  0E03               	movlw	3
  5440  0120CA  0100               	movlb	0	; () banked
  5441  0120CC  19F3               	xorwf	_H& (0+255),w,b
  5442  0120CE  B4D8               	btfsc	status,2,c
  5443  0120D0  D00D               	goto	l12748
  5444                           
  5445                           ; BSR set to: 0
  5446                           ;main.c: 381:     V.screen = ~V.screen;
  5447  0120D2  0102               	movlb	2	; () banked
  5448  0120D4  A19C               	btfss	(_V+156)& (0+255),0,b	;volatile
  5449  0120D6  D002               	goto	u12190
  5450  0120D8  0E01               	movlw	1
  5451  0120DA  D001               	goto	u12196
  5452  0120DC                     u12190:
  5453  0120DC  0E00               	movlw	0
  5454  0120DE                     u12196:
  5455  0120DE  0AFF               	xorlw	255
  5456  0120E0  6E0C               	movwf	(btemp+11)^0,c
  5457  0120E2  519C               	movf	(_V+156)& (0+255),w,b	;volatile
  5458  0120E4  180C               	xorwf	(btemp+11)^0,w,c
  5459  0120E6  0BFE               	andlw	-2
  5460  0120E8  180C               	xorwf	(btemp+11)^0,w,c
  5461  0120EA  6F9C               	movwf	(_V+156)& (0+255),b	;volatile
  5462  0120EC                     l12748:
  5463                           
  5464                           ;main.c: 383:    set_vterm(V.screen);
  5465  0120EC  0102               	movlb	2	; () banked
  5466  0120EE  A19C               	btfss	(_V+156)& (0+255),0,b	;volatile
  5467  0120F0  D002               	goto	u12200
  5468  0120F2  0E01               	movlw	1
  5469  0120F4  D001               	goto	u12206
  5470  0120F6                     u12200:
  5471  0120F6  0E00               	movlw	0
  5472  0120F8                     u12206:
  5473  0120F8  6EE6               	movwf	postinc1,c
  5474  0120FA  EC68  F0DA         	call	_set_vterm	;wreg free
  5475                           
  5476                           ;main.c: 384:    update_lcd(V.screen);
  5477  0120FE  0102               	movlb	2	; () banked
  5478  012100  A19C               	btfss	(_V+156)& (0+255),0,b	;volatile
  5479  012102  D002               	goto	u12210
  5480  012104  0E01               	movlw	1
  5481  012106  D001               	goto	u12216
  5482  012108                     u12210:
  5483  012108  0E00               	movlw	0
  5484  01210A                     u12216:
  5485  01210A  6EE6               	movwf	postinc1,c
  5486  01210C  EC09  F0C9         	call	_update_lcd	;wreg free
  5487  012110                     l12752:
  5488                           
  5489                           ;main.c: 390:   check_help(V.flipper);
  5490  012110  0102               	movlb	2	; () banked
  5491  012112  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  5492  012114  6EE6               	movwf	postinc1,c
  5493  012116  ECE3  F0BB         	call	_check_help	;wreg free
  5494                           
  5495                           ;main.c: 392:   if (check_enter_button(&H)) {
  5496  01211A  0EF3               	movlw	_H& (0+255)
  5497  01211C  6EE6               	movwf	postinc1,c
  5498  01211E  EC40  F0D6         	call	_check_enter_button	;wreg free
  5499  012122  5001               	movf	btemp^0,w,c
  5500  012124  B4D8               	btfsc	status,2,c
  5501  012126  D062               	goto	l1354
  5502                           
  5503                           ;main.c: 393:    V.calib = 0;
  5504  012128  0102               	movlb	2	; () banked
  5505  01212A  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  5506                           
  5507                           ; BSR set to: 2
  5508                           ;main.c: 394:    inp_index += 3;
  5509                           ;stkvar	_inp_index @ sp[(-12)+9]
  5510  01212C  0EFD               	movlw	-3
  5511  01212E  006F FF8C  F001    	movff	plusw1,btemp
  5512  012134  0E03               	movlw	3
  5513  012136  2601               	addwf	btemp^0,f,c
  5514  012138  0EFD               	movlw	-3
  5515  01213A  0060  F007  FFE3   	movff	btemp,plusw1
  5516                           
  5517                           ;main.c: 395:    if (inp_index > 9)
  5518                           ;stkvar	_inp_index @ sp[(-12)+9]
  5519  012140  0EFD               	movlw	-3
  5520  012142  006F FF8C  F001    	movff	plusw1,btemp
  5521  012148  0E09               	movlw	9
  5522  01214A  6401               	cpfsgt	btemp^0,c
  5523  01214C  D03A               	goto	l12780
  5524                           
  5525                           ; BSR set to: 2
  5526                           ;main.c: 396:     inp_index = 0;
  5527                           ;stkvar	_inp_index @ sp[(-12)+9]
  5528  01214E  0EFD               	movlw	-3
  5529  012150  6AE3               	clrf	plusw1,c
  5530  012152  D037               	goto	l12780
  5531  012154                     l12762:
  5532                           
  5533                           ; BSR set to: 2
  5534                           ;main.c: 399:     i = C_BATT;
  5535                           ;stkvar	_i @ sp[(-12)+8]
  5536  012154  0EFC               	movlw	-4
  5537  012156  6AE3               	clrf	plusw1,c
  5538                           
  5539                           ; BSR set to: 2
  5540                           ;main.c: 400:     j = C_PV;
  5541                           ;stkvar	_j @ sp[(-12)+7]
  5542  012158  0EFB               	movlw	-5
  5543  01215A  6AE3               	clrf	plusw1,c
  5544  01215C  2AE3               	incf	plusw1,f,c
  5545                           
  5546                           ; BSR set to: 2
  5547                           ;main.c: 401:     k = V_CC;
  5548                           ;stkvar	_k @ sp[(-12)+6]
  5549  01215E  0EFA               	movlw	-6
  5550  012160  6AE3               	clrf	plusw1,c
  5551  012162  82E3               	bsf	plusw1,1,c
  5552                           
  5553                           ;main.c: 402:     break;
  5554  012164  D043               	goto	l1354
  5555  012166                     l12768:
  5556                           
  5557                           ; BSR set to: 2
  5558                           ;main.c: 404:     i = V_BAT;
  5559                           ;stkvar	_i @ sp[(-12)+8]
  5560  012166  0EFC               	movlw	-4
  5561  012168  6AE3               	clrf	plusw1,c
  5562  01216A  84E3               	bsf	plusw1,2,c
  5563                           
  5564                           ;main.c: 405:     j = V_PV;
  5565                           ;stkvar	_j @ sp[(-12)+7]
  5566  01216C  0EFB               	movlw	-5
  5567  01216E  6AE3               	clrf	plusw1,c
  5568  012170  80E3               	bsf	plusw1,0,c
  5569  012172  84E3               	bsf	plusw1,2,c	;indir
  5570                           
  5571                           ;main.c: 406:     k = V_CBUS;
  5572                           ;stkvar	_k @ sp[(-12)+6]
  5573  012174  0EFA               	movlw	-6
  5574  012176  6AE3               	clrf	plusw1,c
  5575  012178  82E3               	bsf	plusw1,1,c
  5576  01217A  84E3               	bsf	plusw1,2,c	;indir
  5577                           
  5578                           ;main.c: 407:     break;
  5579  01217C  D037               	goto	l1354
  5580  01217E                     l12770:
  5581                           
  5582                           ; BSR set to: 2
  5583                           ;main.c: 409:     i = V_BBAT;
  5584                           ;stkvar	_i @ sp[(-12)+8]
  5585  01217E  0EFC               	movlw	-4
  5586  012180  6AE3               	clrf	plusw1,c
  5587  012182  82E3               	bsf	plusw1,1,c
  5588  012184  86E3               	bsf	plusw1,3,c	;indir
  5589                           
  5590                           ; BSR set to: 2
  5591                           ;main.c: 410:     j = V_TEMP;
  5592  012186  0E0B               	movlw	11
  5593  012188  6E0C               	movwf	(btemp+11)^0,c
  5594                           
  5595                           ;stkvar	_j @ sp[(-12)+7]
  5596  01218A  0EFB               	movlw	-5
  5597  01218C  0060  F033  FFE3   	movff	btemp+11,plusw1
  5598                           
  5599                           ; BSR set to: 2
  5600                           ;main.c: 411:     k = V_INVERTER;
  5601                           ;stkvar	_k @ sp[(-12)+6]
  5602  012192  0EFA               	movlw	-6
  5603  012194  6AE3               	clrf	plusw1,c
  5604  012196  84E3               	bsf	plusw1,2,c
  5605  012198  86E3               	bsf	plusw1,3,c	;indir
  5606                           
  5607                           ;main.c: 412:     break;
  5608  01219A  D028               	goto	l1354
  5609  01219C                     l12776:
  5610                           
  5611                           ; BSR set to: 2
  5612                           ;main.c: 414:     i = channel_ANB5;
  5613  01219C  0E0D               	movlw	13
  5614  01219E  6E0C               	movwf	(btemp+11)^0,c
  5615                           
  5616                           ;stkvar	_i @ sp[(-12)+8]
  5617  0121A0  0EFC               	movlw	-4
  5618  0121A2  0060  F033  FFE3   	movff	btemp+11,plusw1
  5619                           
  5620                           ;main.c: 415:     j = channel_ANB5;
  5621  0121A8  0E0D               	movlw	13
  5622  0121AA  6E0C               	movwf	(btemp+11)^0,c
  5623                           
  5624                           ;stkvar	_j @ sp[(-12)+7]
  5625  0121AC  0EFB               	movlw	-5
  5626  0121AE  0060  F033  FFE3   	movff	btemp+11,plusw1
  5627                           
  5628                           ;main.c: 416:     k = channel_ANB5;
  5629  0121B4  0E0D               	movlw	13
  5630  0121B6  6E0C               	movwf	(btemp+11)^0,c
  5631                           
  5632                           ;stkvar	_k @ sp[(-12)+6]
  5633  0121B8  0EFA               	movlw	-6
  5634  0121BA  0060  F033  FFE3   	movff	btemp+11,plusw1
  5635                           
  5636                           ;main.c: 417:     break;
  5637  0121C0  D015               	goto	l1354
  5638  0121C2                     l12780:
  5639                           
  5640                           ; BSR set to: 2
  5641                           ;stkvar	_inp_index @ sp[(-12)+9]
  5642  0121C2  0EFD               	movlw	-3
  5643  0121C4  50E3               	movf	plusw1,w,c
  5644  0121C6  6E0B               	movwf	(btemp+10)^0,c
  5645  0121C8  6A0C               	clrf	(btemp+11)^0,c
  5646                           
  5647                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5648                           ; Switch size 1, requested type "simple"
  5649                           ; Number of cases is 1, Range of values is 0 to 0
  5650                           ; switch strategies available:
  5651                           ; Name         Instructions Cycles
  5652                           ; simple_byte            4     3 (average)
  5653                           ;	Chosen strategy is simple_byte
  5654  0121CA  500C               	movf	(btemp+11)^0,w,c
  5655  0121CC  0A00               	xorlw	0	; case 0
  5656  0121CE  A4D8               	btfss	status,2,c
  5657  0121D0  D00D               	goto	l1354
  5658                           
  5659                           ; BSR set to: 2
  5660                           ; Switch size 1, requested type "simple"
  5661                           ; Number of cases is 4, Range of values is 0 to 9
  5662                           ; switch strategies available:
  5663                           ; Name         Instructions Cycles
  5664                           ; simple_byte           13     7 (average)
  5665                           ;	Chosen strategy is simple_byte
  5666  0121D2  500B               	movf	(btemp+10)^0,w,c
  5667  0121D4  0A00               	xorlw	0	; case 0
  5668  0121D6  B4D8               	btfsc	status,2,c
  5669  0121D8  D7BD               	goto	l12762
  5670  0121DA  0A03               	xorlw	3	; case 3
  5671  0121DC  B4D8               	btfsc	status,2,c
  5672  0121DE  D7C3               	goto	l12768
  5673  0121E0  0A05               	xorlw	5	; case 6
  5674  0121E2  B4D8               	btfsc	status,2,c
  5675  0121E4  D7CC               	goto	l12770
  5676  0121E6  0A0F               	xorlw	15	; case 9
  5677  0121E8  B4D8               	btfsc	status,2,c
  5678  0121EA  D7D8               	goto	l12776
  5679  0121EC                     l1354:
  5680                           
  5681                           ;main.c: 426:   if (V.set_sequ) {
  5682  0121EC  0102               	movlb	2	; () banked
  5683  0121EE  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  5684  0121F0  EF4D  F08C         	goto	l12688
  5685                           
  5686                           ; BSR set to: 2
  5687                           ;main.c: 427:    if (TimerDone(TMR_INFO)) {
  5688  0121F4  0E07               	movlw	7
  5689  0121F6  6EE6               	movwf	postinc1,c
  5690  0121F8  ECA1  F0D8         	call	_TimerDone	;wreg free
  5691  0121FC  5001               	movf	btemp^0,w,c
  5692  0121FE  B4D8               	btfsc	status,2,c
  5693  012200  D00C               	goto	l12790
  5694                           
  5695                           ;main.c: 428:     V.set_sequ = 0;
  5696  012202  0102               	movlb	2	; () banked
  5697  012204  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  5698                           
  5699                           ; BSR set to: 2
  5700                           ;main.c: 429:     set_vterm(0);
  5701  012206  0E00               	movlw	0
  5702  012208  6EE6               	movwf	postinc1,c
  5703  01220A  EC68  F0DA         	call	_set_vterm	;wreg free
  5704                           
  5705                           ;main.c: 430:     update_lcd(0);
  5706  01220E  0E00               	movlw	0
  5707  012210  6EE6               	movwf	postinc1,c
  5708  012212  EC09  F0C9         	call	_update_lcd	;wreg free
  5709                           
  5710                           ;main.c: 431:    } else {
  5711  012216  EF4D  F08C         	goto	l12688
  5712  01221A                     l12790:
  5713                           
  5714                           ;main.c: 432:     set_vterm(2);
  5715  01221A  0E02               	movlw	2
  5716  01221C  6EE6               	movwf	postinc1,c
  5717  01221E  EC68  F0DA         	call	_set_vterm	;wreg free
  5718                           
  5719                           ;main.c: 433:     update_lcd(2);
  5720  012222  0E02               	movlw	2
  5721  012224  6EE6               	movwf	postinc1,c
  5722  012226  EC09  F0C9         	call	_update_lcd	;wreg free
  5723  01222A  EF4D  F08C         	goto	l12688
  5724  01222E                     __end_of_main:
  5725                           	opt callstack 0
  5726                           
  5727 ;; *************** function _static_soc *****************
  5728 ;; Defined at:
  5729 ;;		line 116 in file "mbmc.c"
  5730 ;; Parameters:    Size  Location     Type
  5731 ;;		None
  5732 ;; Auto vars:     Size  Location     Type
  5733 ;;		None
  5734 ;; Return value:  Size  Location     Type
  5735 ;;                  1  [STACK] void 
  5736 ;; Registers used:
  5737 ;;		wreg, status,2
  5738 ;; Tracked objects:
  5739 ;;		On entry : 0/0
  5740 ;;		On exit  : 3F/1
  5741 ;;		Unchanged: 0/0
  5742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5747 ;;Total ram usage:        0 bytes
  5748 ;; Hardware stack levels used:    1
  5749 ;; Hardware stack levels required when called:   15
  5750 ;; This function calls:
  5751 ;;		Nothing
  5752 ;; This function is called by:
  5753 ;;		_main
  5754 ;; This function uses a reentrant model
  5755 ;;
  5756                           
  5757                           	psect	text1
  5758  01B374                     __ptext1:
  5759                           	opt callstack 0
  5760  01B374                     _static_soc:
  5761                           	opt callstack 15
  5762                           
  5763                           ;mbmc.c: 118:  C.runtime = 120;
  5764                           
  5765                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5766                           ;incstack = 0
  5767  01B374  0E00               	movlw	0
  5768  01B376  0101               	movlb	1	; () banked
  5769  01B378  6FAD               	movwf	(_C+173)& (0+255),b	;volatile
  5770  01B37A  0E78               	movlw	120
  5771  01B37C  6FAC               	movwf	(_C+172)& (0+255),b	;volatile
  5772                           
  5773                           ;mbmc.c: 119:  C.soc = 100;
  5774  01B37E  0E00               	movlw	0
  5775  01B380  6FAF               	movwf	(_C+175)& (0+255),b	;volatile
  5776  01B382  0E64               	movlw	100
  5777  01B384  6FAE               	movwf	(_C+174)& (0+255),b	;volatile
  5778                           
  5779                           ; BSR set to: 1
  5780                           ;mbmc.c: 120:  C.dynamic_ah = C.bank_ah;
  5781  01B386  C188  F18C         	movff	_C+136,_C+140	;volatile
  5782  01B38A  C189  F18D         	movff	_C+137,_C+141	;volatile
  5783  01B38E  C18A  F18E         	movff	_C+138,_C+142	;volatile
  5784  01B392  C18B  F18F         	movff	_C+139,_C+143	;volatile
  5785                           
  5786                           ; BSR set to: 1
  5787                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5788  01B396  0012               	return		;funcret
  5789  01B398                     __end_of_static_soc:
  5790                           	opt callstack 0
  5791                           
  5792 ;; *************** function _start_switch_handler *****************
  5793 ;; Defined at:
  5794 ;;		line 119 in file "dio.c"
  5795 ;; Parameters:    Size  Location     Type
  5796 ;;		None
  5797 ;; Auto vars:     Size  Location     Type
  5798 ;;		None
  5799 ;; Return value:  Size  Location     Type
  5800 ;;                  1  [STACK] void 
  5801 ;; Registers used:
  5802 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  5803 ;; Tracked objects:
  5804 ;;		On entry : 1/0
  5805 ;;		On exit  : 3F/39
  5806 ;;		Unchanged: 0/0
  5807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5812 ;;Total ram usage:        0 bytes
  5813 ;; Hardware stack levels used:    1
  5814 ;; Hardware stack levels required when called:   16
  5815 ;; This function calls:
  5816 ;;		_INT1_SetInterruptHandler
  5817 ;; This function is called by:
  5818 ;;		_main
  5819 ;; This function uses a reentrant model
  5820 ;;
  5821                           
  5822                           	psect	text2
  5823  01B492                     __ptext2:
  5824                           	opt callstack 0
  5825  01B492                     _start_switch_handler:
  5826                           	opt callstack 14
  5827                           
  5828                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  5829                           
  5830                           ; BSR set to: 1
  5831                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5832                           ;incstack = 0
  5833  01B492  0139               	movlb	57	; () banked
  5834  01B494  9195               	bcf	149,0,b	;volatile
  5835                           
  5836                           ; BSR set to: 57
  5837                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  5838  01B496  0E58               	movlw	low _switch_handler
  5839  01B498  6EE6               	movwf	postinc1,c
  5840  01B49A  0E8C               	movlw	high _switch_handler
  5841  01B49C  6EE6               	movwf	postinc1,c
  5842  01B49E  0E01               	movlw	low (_switch_handler shr (0+16))
  5843  01B4A0  6EE6               	movwf	postinc1,c
  5844  01B4A2  EC2D  F0D9         	call	_INT1_SetInterruptHandler	;wreg free
  5845                           
  5846                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  5847  01B4A6  0E02               	movlw	2
  5848  01B4A8  0102               	movlb	2	; () banked
  5849  01B4AA  6FE0               	movwf	(_S+35)& (0+255),b	;volatile
  5850                           
  5851                           ; BSR set to: 2
  5852                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  5853  01B4AC  0139               	movlb	57	; () banked
  5854  01B4AE  8195               	bsf	149,0,b	;volatile
  5855                           
  5856                           ; BSR set to: 57
  5857                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  5858  01B4B0  0012               	return		;funcret
  5859  01B4B2                     __end_of_start_switch_handler:
  5860                           	opt callstack 0
  5861                           
  5862 ;; *************** function _srand *****************
  5863 ;; Defined at:
  5864 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  5865 ;; Parameters:    Size  Location     Type
  5866 ;;  s               2  [STACK] unsigned int 
  5867 ;; Auto vars:     Size  Location     Type
  5868 ;;		None
  5869 ;; Return value:  Size  Location     Type
  5870 ;;                  1  [STACK] void 
  5871 ;; Registers used:
  5872 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  5873 ;; Tracked objects:
  5874 ;;		On entry : 0/0
  5875 ;;		On exit  : 3F/1
  5876 ;;		Unchanged: 0/0
  5877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5882 ;;Total ram usage:        0 bytes
  5883 ;; Hardware stack levels used:    1
  5884 ;; Hardware stack levels required when called:   15
  5885 ;; This function calls:
  5886 ;;		Nothing
  5887 ;; This function is called by:
  5888 ;;		_main
  5889 ;; This function uses a reentrant model
  5890 ;;
  5891                           
  5892                           	psect	text3
  5893  01AE92                     __ptext3:
  5894                           	opt callstack 0
  5895  01AE92                     _srand:
  5896                           	opt callstack 15
  5897                           
  5898                           ;stkvar	_s @ sp[(0)+-2]
  5899                           
  5900                           ; BSR set to: 57
  5901                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5902                           ;incstack = 0
  5903  01AE92  0EFE               	movlw	-2
  5904  01AE94  50E3               	movf	plusw1,w,c
  5905  01AE96  0FFF               	addlw	255
  5906  01AE98  6E0B               	movwf	(btemp+10)^0,c
  5907  01AE9A  0EFF               	movlw	-1
  5908  01AE9C  006F FF8C  F00C    	movff	plusw1,btemp+11
  5909  01AEA2  0EFF               	movlw	255
  5910  01AEA4  220C               	addwfc	(btemp+11)^0,f,c
  5911  01AEA6  0060  F02C  F1F7   	movff	btemp+10,_seed
  5912  01AEAC  0060  F030  F1F8   	movff	btemp+11,_seed+1
  5913  01AEB2  0101               	movlb	1	; () banked
  5914  01AEB4  6BF9               	clrf	(_seed+2)& (0+255),b
  5915  01AEB6  6BFA               	clrf	(_seed+3)& (0+255),b
  5916  01AEB8  6BFB               	clrf	(_seed+4)& (0+255),b
  5917  01AEBA  6BFC               	clrf	(_seed+5)& (0+255),b
  5918  01AEBC  6BFD               	clrf	(_seed+6)& (0+255),b
  5919  01AEBE  6BFE               	clrf	(_seed+7)& (0+255),b
  5920                           
  5921                           ; BSR set to: 1
  5922                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  5923  01AEC0  52E5               	movf	postdec1,f,c
  5924  01AEC2  52E5               	movf	postdec1,f,c
  5925  01AEC4  0012               	return		;funcret
  5926  01AEC6                     __end_of_srand:
  5927                           	opt callstack 0
  5928                           
  5929 ;; *************** function _spinners *****************
  5930 ;; Defined at:
  5931 ;;		line 134 in file "mbmc.c"
  5932 ;; Parameters:    Size  Location     Type
  5933 ;;  shape           1  [STACK] unsigned char 
  5934 ;;  reset           1  [STACK] unsigned char 
  5935 ;; Auto vars:     Size  Location     Type
  5936 ;;  c               1  [STACK] unsigned char 
  5937 ;; Return value:  Size  Location     Type
  5938 ;;                  1  [STACK] unsigned char 
  5939 ;; Registers used:
  5940 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
  5941 ;; Tracked objects:
  5942 ;;		On entry : 0/0
  5943 ;;		On exit  : 0/0
  5944 ;;		Unchanged: 0/0
  5945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5950 ;;Total ram usage:        0 bytes
  5951 ;; Hardware stack levels used:    1
  5952 ;; Hardware stack levels required when called:   16
  5953 ;; This function calls:
  5954 ;;		_strlen
  5955 ;; This function is called by:
  5956 ;;		_main
  5957 ;; This function uses a reentrant model
  5958 ;;
  5959                           
  5960                           	psect	text4
  5961  01981E                     __ptext4:
  5962                           	opt callstack 0
  5963  01981E                     _spinners:
  5964                           	opt callstack 0
  5965                           
  5966                           ; BSR set to: 1
  5967                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5968  01981E  52E6               	movf	postinc1,f,c
  5969                           
  5970                           ;mbmc.c: 134: char spinners(uint8_t shape, uint8_t reset);mbmc.c: 135: {;mbmc.c: 136:  s
      +                          tatic uint8_t s[6];;mbmc.c: 137:  char c;;mbmc.c: 139:  if (shape > (6 - 1)) shape = 0;
  5971                           ;stkvar	_shape @ sp[(-1)+-1]
  5972                           
  5973                           ;incstack = 0
  5974  019820  0EFE               	movlw	-2
  5975  019822  006F FF8C  F001    	movff	plusw1,btemp
  5976  019828  0E05               	movlw	5
  5977  01982A  6401               	cpfsgt	btemp^0,c
  5978  01982C  D002               	goto	l1864
  5979                           
  5980                           ;stkvar	_shape @ sp[(-1)+-1]
  5981  01982E  0EFE               	movlw	-2
  5982  019830  6AE3               	clrf	plusw1,c
  5983  019832                     l1864:
  5984                           
  5985                           ;mbmc.c: 140:  if (reset) s[shape] = 0;
  5986                           ;stkvar	_reset @ sp[(-1)+-2]
  5987  019832  0EFD               	movlw	-3
  5988  019834  50E3               	movf	plusw1,w,c
  5989  019836  B4D8               	btfsc	status,2,c
  5990  019838  D00A               	goto	l10550
  5991                           
  5992                           ;stkvar	_shape @ sp[(-1)+-1]
  5993  01983A  0EFE               	movlw	-2
  5994  01983C  006F FF8C  F00C    	movff	plusw1,btemp+11
  5995  019842  500C               	movf	(btemp+11)^0,w,c
  5996  019844  0F74               	addlw	low spinners@s
  5997  019846  6ED9               	movwf	fsr2l,c
  5998  019848  6ADA               	clrf	fsr2h,c
  5999  01984A  0E00               	movlw	0
  6000  01984C  6EDF               	movwf	indf2,c
  6001  01984E                     l10550:
  6002                           
  6003                           ;mbmc.c: 141:  c = spin[shape][s[shape]];
  6004                           ;stkvar	_shape @ sp[(-1)+-1]
  6005  01984E  0EFE               	movlw	-2
  6006  019850  50E3               	movf	plusw1,w,c
  6007  019852  0D14               	mullw	20
  6008  019854  0EDB               	movlw	low _spin
  6009  019856  6E0B               	movwf	(btemp+10)^0,c
  6010  019858  0EFB               	movlw	high _spin
  6011  01985A  6E0C               	movwf	(btemp+11)^0,c
  6012  01985C  50F3               	movf	243,w,c
  6013  01985E  260B               	addwf	(btemp+10)^0,f,c
  6014  019860  50F4               	movf	244,w,c
  6015  019862  220C               	addwfc	(btemp+11)^0,f,c
  6016                           
  6017                           ;stkvar	_shape @ sp[(-1)+-1]
  6018  019864  0EFE               	movlw	-2
  6019  019866  006F FF8C  F00A    	movff	plusw1,btemp+9
  6020  01986C  500A               	movf	(btemp+9)^0,w,c
  6021  01986E  0F74               	addlw	low spinners@s
  6022  019870  6ED9               	movwf	fsr2l,c
  6023  019872  6ADA               	clrf	fsr2h,c
  6024  019874  50DF               	movf	indf2,w,c
  6025  019876  260B               	addwf	(btemp+10)^0,f,c
  6026  019878  0E00               	movlw	0
  6027  01987A  220C               	addwfc	(btemp+11)^0,f,c
  6028  01987C  0060  F02F  FFF6   	movff	btemp+10,tblptrl
  6029  019882  0060  F033  FFF7   	movff	btemp+11,tblptrh
  6030  019888                     	if	0	;tblptru may be non-zero
  6031  019888                     	endif
  6032  019888                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6033  019888  0E00               	movlw	low (__mediumconst shr (0+16))
  6034  01988A  6EF8               	movwf	tblptru,c
  6035  01988C                     	endif
  6036                           
  6037                           ;stkvar	_c @ sp[(-1)+0]
  6038  01988C  0008               	tblrd		*
  6039  01988E  0EFF               	movlw	-1
  6040  019890  006F FFD7 FFE3     	movff	tablat,plusw1
  6041                           
  6042                           ;mbmc.c: 142:  if (++s[shape] >= strlen(spin[shape])) s[shape] = 0;
  6043                           ;stkvar	_shape @ sp[(-1)+-1]
  6044  019896  0EFE               	movlw	-2
  6045  019898  50E3               	movf	plusw1,w,c
  6046  01989A  0D14               	mullw	20
  6047  01989C  0EDB               	movlw	low _spin
  6048  01989E  6E0B               	movwf	(btemp+10)^0,c
  6049  0198A0  0EFB               	movlw	high _spin
  6050  0198A2  6E0C               	movwf	(btemp+11)^0,c
  6051  0198A4  50F3               	movf	243,w,c
  6052  0198A6  260B               	addwf	(btemp+10)^0,f,c
  6053  0198A8  50F4               	movf	244,w,c
  6054  0198AA  220C               	addwfc	(btemp+11)^0,f,c
  6055  0198AC  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6056  0198B2  0060  F033  FFE6   	movff	btemp+11,postinc1
  6057  0198B8  EC5E  F0CF         	call	_strlen	;wreg free
  6058                           
  6059                           ;stkvar	_shape @ sp[(-1)+-1]
  6060  0198BC  0EFE               	movlw	-2
  6061  0198BE  006F FF8C  F00C    	movff	plusw1,btemp+11
  6062  0198C4  500C               	movf	(btemp+11)^0,w,c
  6063  0198C6  0F74               	addlw	low spinners@s
  6064  0198C8  6ED9               	movwf	fsr2l,c
  6065  0198CA  6ADA               	clrf	fsr2h,c
  6066  0198CC  2ADF               	incf	indf2,f,c
  6067  0198CE  50DF               	movf	indf2,w,c
  6068  0198D0  6E0B               	movwf	(btemp+10)^0,c
  6069  0198D2  6A0C               	clrf	(btemp+11)^0,c
  6070  0198D4  5001               	movf	btemp^0,w,c
  6071  0198D6  5C0B               	subwf	(btemp+10)^0,w,c
  6072  0198D8  5002               	movf	(btemp+1)^0,w,c
  6073  0198DA  580C               	subwfb	(btemp+11)^0,w,c
  6074  0198DC  A0D8               	btfss	status,0,c
  6075  0198DE  D00A               	goto	l10556
  6076                           
  6077                           ;stkvar	_shape @ sp[(-1)+-1]
  6078  0198E0  0EFE               	movlw	-2
  6079  0198E2  006F FF8C  F00C    	movff	plusw1,btemp+11
  6080  0198E8  500C               	movf	(btemp+11)^0,w,c
  6081  0198EA  0F74               	addlw	low spinners@s
  6082  0198EC  6ED9               	movwf	fsr2l,c
  6083  0198EE  6ADA               	clrf	fsr2h,c
  6084  0198F0  0E00               	movlw	0
  6085  0198F2  6EDF               	movwf	indf2,c
  6086  0198F4                     l10556:
  6087                           
  6088                           ;mbmc.c: 143:  return c;
  6089                           ;stkvar	_c @ sp[(-1)+0]
  6090  0198F4  0EFF               	movlw	-1
  6091  0198F6  006F FF8C  F001    	movff	plusw1,btemp
  6092                           
  6093                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  6094  0198FC  52E5               	movf	postdec1,f,c
  6095  0198FE  52E5               	movf	postdec1,f,c
  6096  019900  52E5               	movf	postdec1,f,c
  6097  019902  0012               	return		;funcret
  6098  019904                     __end_of_spinners:
  6099                           	opt callstack 0
  6100                           
  6101 ;; *************** function _init_port_dma *****************
  6102 ;; Defined at:
  6103 ;;		line 90 in file "eadog.c"
  6104 ;; Parameters:    Size  Location     Type
  6105 ;;		None
  6106 ;; Auto vars:     Size  Location     Type
  6107 ;;		None
  6108 ;; Return value:  Size  Location     Type
  6109 ;;                  1  [STACK] void 
  6110 ;; Registers used:
  6111 ;;		wreg, status,2
  6112 ;; Tracked objects:
  6113 ;;		On entry : 0/2
  6114 ;;		On exit  : 3F/3B
  6115 ;;		Unchanged: 0/0
  6116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6121 ;;Total ram usage:        0 bytes
  6122 ;; Hardware stack levels used:    1
  6123 ;; Hardware stack levels required when called:   15
  6124 ;; This function calls:
  6125 ;;		Nothing
  6126 ;; This function is called by:
  6127 ;;		_main
  6128 ;; This function uses a reentrant model
  6129 ;;
  6130                           
  6131                           	psect	text5
  6132  01AF2E                     __ptext5:
  6133                           	opt callstack 0
  6134  01AF2E                     _init_port_dma:
  6135                           	opt callstack 15
  6136                           
  6137                           ;eadog.c: 92:  DMA2CON1bits.DMODE = 0;
  6138                           
  6139                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6140                           ;incstack = 0
  6141  01AF2E  0E3F               	movlw	-193
  6142  01AF30  013B               	movlb	59	; () banked
  6143  01AF32  17DD               	andwf	221,f,b	;volatile
  6144                           
  6145                           ; BSR set to: 59
  6146                           ;eadog.c: 93:  DMA2CON1bits.DSTP = 0;
  6147  01AF34  9BDD               	bcf	221,5,b	;volatile
  6148                           
  6149                           ;eadog.c: 94:  DMA2CON1bits.SMODE = 1;
  6150  01AF36  51DD               	movf	221,w,b	;volatile
  6151  01AF38  0BF9               	andlw	-7
  6152  01AF3A  0902               	iorlw	2
  6153  01AF3C  6FDD               	movwf	221,b	;volatile
  6154                           
  6155                           ;eadog.c: 95:  DMA2CON1bits.SMR = 0;
  6156  01AF3E  0EE7               	movlw	-25
  6157  01AF40  17DD               	andwf	221,f,b	;volatile
  6158                           
  6159                           ; BSR set to: 59
  6160                           ;eadog.c: 96:  DMA2CON1bits.SSTP = 1;
  6161  01AF42  81DD               	bsf	221,0,b	;volatile
  6162                           
  6163                           ; BSR set to: 59
  6164                           ;eadog.c: 97:  DMA2CON0bits.SIRQEN = 0;
  6165  01AF44  9DDC               	bcf	220,6,b	;volatile
  6166                           
  6167                           ;eadog.c: 98:  DMA2DSA = 0x3DEA;
  6168  01AF46  0E3D               	movlw	61
  6169  01AF48  6FD1               	movwf	209,b	;volatile
  6170  01AF4A  0EEA               	movlw	234
  6171  01AF4C  6FD0               	movwf	208,b	;volatile
  6172                           
  6173                           ;eadog.c: 99:  DMA2SSA = (uint32_t) port_data;
  6174  01AF4E  0EFF               	movlw	low _port_data
  6175  01AF50  6FD9               	movwf	217,b	;volatile
  6176  01AF52  0E05               	movlw	high _port_data
  6177  01AF54  6FDA               	movwf	218,b	;volatile
  6178  01AF56  0E00               	movlw	low (_port_data shr (0+16))
  6179  01AF58  6FDB               	movwf	219,b	;volatile
  6180                           
  6181                           ; BSR set to: 59
  6182                           ;eadog.c: 100:  DMA2CON0bits.DGO = 0;
  6183  01AF5A  9BDC               	bcf	220,5,b	;volatile
  6184                           
  6185                           ; BSR set to: 59
  6186                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  6187  01AF5C  0012               	return		;funcret
  6188  01AF5E                     __end_of_init_port_dma:
  6189                           	opt callstack 0
  6190                           
  6191 ;; *************** function _init_display *****************
  6192 ;; Defined at:
  6193 ;;		line 38 in file "eadog.c"
  6194 ;; Parameters:    Size  Location     Type
  6195 ;;		None
  6196 ;; Auto vars:     Size  Location     Type
  6197 ;;		None
  6198 ;; Return value:  Size  Location     Type
  6199 ;;                  1  [STACK] void 
  6200 ;; Registers used:
  6201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6202 ;; Tracked objects:
  6203 ;;		On entry : 3F/3B
  6204 ;;		On exit  : 3F/3D
  6205 ;;		Unchanged: 0/0
  6206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6211 ;;Total ram usage:        0 bytes
  6212 ;; Hardware stack levels used:    1
  6213 ;; Hardware stack levels required when called:   17
  6214 ;; This function calls:
  6215 ;;		_ringBufS_init
  6216 ;;		_send_lcd_cmd
  6217 ;;		_send_lcd_cmd_long
  6218 ;;		_wdtdelay
  6219 ;; This function is called by:
  6220 ;;		_main
  6221 ;; This function uses a reentrant model
  6222 ;;
  6223                           
  6224                           	psect	text6
  6225  019734                     __ptext6:
  6226                           	opt callstack 0
  6227  019734                     _init_display:
  6228                           	opt callstack 13
  6229                           
  6230                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  6231                           
  6232                           ; BSR set to: 59
  6233                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6234                           ;incstack = 0
  6235  019734  0E43               	movlw	low _ring_buf1
  6236  019736  0100               	movlb	0	; () banked
  6237  019738  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  6238  01973A  0E04               	movlw	high _ring_buf1
  6239  01973C  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  6240                           
  6241                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  6242  01973E  0E00               	movlw	low _ring_buf2
  6243  019740  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  6244  019742  0E04               	movlw	high _ring_buf2
  6245  019744  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  6246                           
  6247                           ; BSR set to: 0
  6248                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  6249  019746  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  6250  01974C  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  6251  019752  EC8D  F0D8         	call	_ringBufS_init	;wreg free
  6252                           
  6253                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  6254  019756  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  6255  01975C  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  6256  019762  EC8D  F0D8         	call	_ringBufS_init	;wreg free
  6257                           
  6258                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  6259  019766  84BE               	bsf	190,2,c	;volatile
  6260  019768  84BC               	bsf	188,2,c	;volatile
  6261                           
  6262                           ;eadog.c: 59:  wdtdelay(350000);
  6263  01976A  0E30               	movlw	48
  6264  01976C  6EE6               	movwf	postinc1,c
  6265  01976E  0E57               	movlw	87
  6266  019770  6EE6               	movwf	postinc1,c
  6267  019772  0E05               	movlw	5
  6268  019774  6EE6               	movwf	postinc1,c
  6269  019776  0E00               	movlw	0
  6270  019778  6EE6               	movwf	postinc1,c
  6271  01977A  ECBB  F0D3         	call	_wdtdelay	;wreg free
  6272                           
  6273                           ; BSR set to: 0
  6274                           ;eadog.c: 60:  send_lcd_cmd(0x39);
  6275  01977E  0E39               	movlw	57
  6276  019780  6EE6               	movwf	postinc1,c
  6277  019782  EC79  F0D8         	call	_send_lcd_cmd	;wreg free
  6278                           
  6279                           ; BSR set to: 0
  6280                           ;eadog.c: 61:  send_lcd_cmd(0x1d);
  6281  019786  0E1D               	movlw	29
  6282  019788  6EE6               	movwf	postinc1,c
  6283  01978A  EC79  F0D8         	call	_send_lcd_cmd	;wreg free
  6284                           
  6285                           ; BSR set to: 0
  6286                           ;eadog.c: 62:  send_lcd_cmd(0x50);
  6287  01978E  0E50               	movlw	80
  6288  019790  6EE6               	movwf	postinc1,c
  6289  019792  EC79  F0D8         	call	_send_lcd_cmd	;wreg free
  6290                           
  6291                           ; BSR set to: 0
  6292                           ;eadog.c: 63:  send_lcd_cmd(0x6c);
  6293  019796  0E6C               	movlw	108
  6294  019798  6EE6               	movwf	postinc1,c
  6295  01979A  EC79  F0D8         	call	_send_lcd_cmd	;wreg free
  6296                           
  6297                           ; BSR set to: 0
  6298                           ;eadog.c: 64:  send_lcd_cmd(0x76);
  6299  01979E  0E76               	movlw	118
  6300  0197A0  6EE6               	movwf	postinc1,c
  6301  0197A2  EC79  F0D8         	call	_send_lcd_cmd	;wreg free
  6302                           
  6303                           ; BSR set to: 0
  6304                           ;eadog.c: 65:  send_lcd_cmd_long(0x38);
  6305  0197A6  0E38               	movlw	56
  6306  0197A8  6EE6               	movwf	postinc1,c
  6307  0197AA  EC65  F0D8         	call	_send_lcd_cmd_long	;wreg free
  6308                           
  6309                           ; BSR set to: 0
  6310                           ;eadog.c: 66:  send_lcd_cmd(0x0f);
  6311  0197AE  0E0F               	movlw	15
  6312  0197B0  6EE6               	movwf	postinc1,c
  6313  0197B2  EC79  F0D8         	call	_send_lcd_cmd	;wreg free
  6314                           
  6315                           ; BSR set to: 0
  6316                           ;eadog.c: 67:  send_lcd_cmd_long(0x01);
  6317  0197B6  0E01               	movlw	1
  6318  0197B8  6EE6               	movwf	postinc1,c
  6319  0197BA  EC65  F0D8         	call	_send_lcd_cmd_long	;wreg free
  6320                           
  6321                           ; BSR set to: 0
  6322                           ;eadog.c: 68:  send_lcd_cmd(0x02);
  6323  0197BE  0E02               	movlw	2
  6324  0197C0  6EE6               	movwf	postinc1,c
  6325  0197C2  EC79  F0D8         	call	_send_lcd_cmd	;wreg free
  6326                           
  6327                           ; BSR set to: 0
  6328                           ;eadog.c: 69:  send_lcd_cmd(0x06);
  6329  0197C6  0E06               	movlw	6
  6330  0197C8  6EE6               	movwf	postinc1,c
  6331  0197CA  EC79  F0D8         	call	_send_lcd_cmd	;wreg free
  6332                           
  6333                           ; BSR set to: 0
  6334                           ;eadog.c: 70:  wdtdelay(30);
  6335  0197CE  0E1E               	movlw	30
  6336  0197D0  6EE6               	movwf	postinc1,c
  6337  0197D2  0E00               	movlw	0
  6338  0197D4  6EE6               	movwf	postinc1,c
  6339  0197D6  0E00               	movlw	0
  6340  0197D8  6EE6               	movwf	postinc1,c
  6341  0197DA  0E00               	movlw	0
  6342  0197DC  6EE6               	movwf	postinc1,c
  6343  0197DE  ECBB  F0D3         	call	_wdtdelay	;wreg free
  6344                           
  6345                           ; BSR set to: 0
  6346                           ;eadog.c: 71:  SPI1CON2 = 0x02;
  6347  0197E2  0E02               	movlw	2
  6348  0197E4  013D               	movlb	61	; () banked
  6349  0197E6  6F16               	movwf	22,b	;volatile
  6350                           
  6351                           ; BSR set to: 61
  6352                           ;eadog.c: 72:  SPI1CON1 = 0x40;
  6353  0197E8  0E40               	movlw	64
  6354  0197EA  6F15               	movwf	21,b	;volatile
  6355                           
  6356                           ; BSR set to: 61
  6357                           ;eadog.c: 73:  SPI1CON0 = 0x83;
  6358  0197EC  0E83               	movlw	131
  6359  0197EE  6F14               	movwf	20,b	;volatile
  6360                           
  6361                           ; BSR set to: 61
  6362                           ;eadog.c: 75:  SPI1INTFbits.SPI1TXUIF = 0;
  6363  0197F0  931A               	bcf	26,1,b	;volatile
  6364                           
  6365                           ; BSR set to: 61
  6366                           ;eadog.c: 76:  DMA1CON1bits.DMODE = 0;
  6367  0197F2  0E3F               	movlw	-193
  6368  0197F4  013B               	movlb	59	; () banked
  6369  0197F6  17FD               	andwf	253,f,b	;volatile
  6370                           
  6371                           ; BSR set to: 59
  6372                           ;eadog.c: 77:  DMA1CON1bits.DSTP = 0;
  6373  0197F8  9BFD               	bcf	253,5,b	;volatile
  6374                           
  6375                           ; BSR set to: 59
  6376                           ;eadog.c: 78:  DMA1CON1bits.SMODE = 1;
  6377  0197FA  51FD               	movf	253,w,b	;volatile
  6378  0197FC  0BF9               	andlw	-7
  6379  0197FE  0902               	iorlw	2
  6380  019800  6FFD               	movwf	253,b	;volatile
  6381                           
  6382                           ; BSR set to: 59
  6383                           ;eadog.c: 79:  DMA1CON1bits.SMR = 0;
  6384  019802  0EE7               	movlw	-25
  6385  019804  17FD               	andwf	253,f,b	;volatile
  6386                           
  6387                           ; BSR set to: 59
  6388                           ;eadog.c: 80:  DMA1CON1bits.SSTP = 1;
  6389  019806  81FD               	bsf	253,0,b	;volatile
  6390                           
  6391                           ; BSR set to: 59
  6392                           ;eadog.c: 81:  DMA1SSA = (uint32_t) & ring_buf1;
  6393  019808  0E43               	movlw	low _ring_buf1
  6394  01980A  6FF9               	movwf	249,b	;volatile
  6395  01980C  0E04               	movlw	high _ring_buf1
  6396  01980E  6FFA               	movwf	250,b	;volatile
  6397  019810  0E00               	movlw	low (_ring_buf1 shr (0+16))
  6398  019812  6FFB               	movwf	251,b	;volatile
  6399                           
  6400                           ; BSR set to: 59
  6401                           ;eadog.c: 82:  DMA1CON0bits.DGO = 0;
  6402  019814  9BFC               	bcf	252,5,b	;volatile
  6403                           
  6404                           ; BSR set to: 59
  6405                           ;eadog.c: 83:  SPI1INTFbits.SPI1TXUIF = 1;
  6406  019816  013D               	movlb	61	; () banked
  6407  019818  831A               	bsf	26,1,b	;volatile
  6408                           
  6409                           ; BSR set to: 61
  6410                           ;eadog.c: 84:  LATEbits.LATE2 = 0;
  6411  01981A  94BE               	bcf	190,2,c	;volatile
  6412                           
  6413                           ; BSR set to: 61
  6414                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6415  01981C  0012               	return		;funcret
  6416  01981E                     __end_of_init_display:
  6417                           	opt callstack 0
  6418                           
  6419 ;; *************** function _send_lcd_cmd_long *****************
  6420 ;; Defined at:
  6421 ;;		line 129 in file "eadog.c"
  6422 ;; Parameters:    Size  Location     Type
  6423 ;;  cmd             1  [STACK] const unsigned char 
  6424 ;; Auto vars:     Size  Location     Type
  6425 ;;		None
  6426 ;; Return value:  Size  Location     Type
  6427 ;;                  1  [STACK] void 
  6428 ;; Registers used:
  6429 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6430 ;; Tracked objects:
  6431 ;;		On entry : 3F/0
  6432 ;;		On exit  : 3F/0
  6433 ;;		Unchanged: 0/0
  6434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6439 ;;Total ram usage:        0 bytes
  6440 ;; Hardware stack levels used:    1
  6441 ;; Hardware stack levels required when called:   16
  6442 ;; This function calls:
  6443 ;;		_SPI1_Exchange8bit
  6444 ;;		_wdtdelay
  6445 ;; This function is called by:
  6446 ;;		_init_display
  6447 ;; This function uses a reentrant model
  6448 ;;
  6449                           
  6450                           	psect	text7
  6451  01B0CA                     __ptext7:
  6452                           	opt callstack 0
  6453  01B0CA                     _send_lcd_cmd_long:
  6454                           	opt callstack 13
  6455                           
  6456                           ; BSR set to: 61
  6457                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6458                           ;incstack = 0
  6459                           ;eadog.c: 129: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 130: {;eadog.c:
      +                           131:  do { LATCbits.LATC1 = 0; } while(0);
  6460  01B0CA  92BC               	bcf	188,1,c	;volatile
  6461                           
  6462                           ;eadog.c: 132:  do { LATCbits.LATC2 = 0; } while(0);
  6463  01B0CC  94BC               	bcf	188,2,c	;volatile
  6464                           
  6465                           ;eadog.c: 133:  SPI1_Exchange8bit(cmd);
  6466                           ;stkvar	_cmd @ sp[(0)+-1]
  6467  01B0CE  0EFF               	movlw	-1
  6468  01B0D0  50E3               	movf	plusw1,w,c
  6469  01B0D2  6EE6               	movwf	postinc1,c
  6470  01B0D4  EC59  F0DA         	call	_SPI1_Exchange8bit	;wreg free
  6471                           
  6472                           ; BSR set to: 57
  6473                           ;eadog.c: 134:  wdtdelay(800);
  6474  01B0D8  0E20               	movlw	32
  6475  01B0DA  6EE6               	movwf	postinc1,c
  6476  01B0DC  0E03               	movlw	3
  6477  01B0DE  6EE6               	movwf	postinc1,c
  6478  01B0E0  0E00               	movlw	0
  6479  01B0E2  6EE6               	movwf	postinc1,c
  6480  01B0E4  0E00               	movlw	0
  6481  01B0E6  6EE6               	movwf	postinc1,c
  6482  01B0E8  ECBB  F0D3         	call	_wdtdelay	;wreg free
  6483                           
  6484                           ; BSR set to: 0
  6485  01B0EC  82BC               	bsf	188,1,c	;volatile
  6486                           
  6487                           ; BSR set to: 0
  6488                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6489  01B0EE  52E5               	movf	postdec1,f,c
  6490  01B0F0  0012               	return		;funcret
  6491  01B0F2                     __end_of_send_lcd_cmd_long:
  6492                           	opt callstack 0
  6493                           
  6494 ;; *************** function _send_lcd_cmd *****************
  6495 ;; Defined at:
  6496 ;;		line 117 in file "eadog.c"
  6497 ;; Parameters:    Size  Location     Type
  6498 ;;  cmd             1  [STACK] const unsigned char 
  6499 ;; Auto vars:     Size  Location     Type
  6500 ;;		None
  6501 ;; Return value:  Size  Location     Type
  6502 ;;                  1  [STACK] void 
  6503 ;; Registers used:
  6504 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6505 ;; Tracked objects:
  6506 ;;		On entry : 3F/0
  6507 ;;		On exit  : 3F/0
  6508 ;;		Unchanged: 0/0
  6509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6514 ;;Total ram usage:        0 bytes
  6515 ;; Hardware stack levels used:    1
  6516 ;; Hardware stack levels required when called:   16
  6517 ;; This function calls:
  6518 ;;		_SPI1_Exchange8bit
  6519 ;;		_wdtdelay
  6520 ;; This function is called by:
  6521 ;;		_init_display
  6522 ;; This function uses a reentrant model
  6523 ;;
  6524                           
  6525                           	psect	text8
  6526  01B0F2                     __ptext8:
  6527                           	opt callstack 0
  6528  01B0F2                     _send_lcd_cmd:
  6529                           	opt callstack 13
  6530                           
  6531                           ; BSR set to: 0
  6532                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6533                           ;incstack = 0
  6534                           ;eadog.c: 117: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 118: {;eadog.c: 119:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  6535  01B0F2  92BC               	bcf	188,1,c	;volatile
  6536                           
  6537                           ;eadog.c: 120:  do { LATCbits.LATC2 = 0; } while(0);
  6538  01B0F4  94BC               	bcf	188,2,c	;volatile
  6539                           
  6540                           ;eadog.c: 121:  SPI1_Exchange8bit(cmd);
  6541                           ;stkvar	_cmd @ sp[(0)+-1]
  6542  01B0F6  0EFF               	movlw	-1
  6543  01B0F8  50E3               	movf	plusw1,w,c
  6544  01B0FA  6EE6               	movwf	postinc1,c
  6545  01B0FC  EC59  F0DA         	call	_SPI1_Exchange8bit	;wreg free
  6546                           
  6547                           ; BSR set to: 57
  6548                           ;eadog.c: 122:  wdtdelay(30);
  6549  01B100  0E1E               	movlw	30
  6550  01B102  6EE6               	movwf	postinc1,c
  6551  01B104  0E00               	movlw	0
  6552  01B106  6EE6               	movwf	postinc1,c
  6553  01B108  0E00               	movlw	0
  6554  01B10A  6EE6               	movwf	postinc1,c
  6555  01B10C  0E00               	movlw	0
  6556  01B10E  6EE6               	movwf	postinc1,c
  6557  01B110  ECBB  F0D3         	call	_wdtdelay	;wreg free
  6558                           
  6559                           ; BSR set to: 0
  6560  01B114  82BC               	bsf	188,1,c	;volatile
  6561                           
  6562                           ; BSR set to: 0
  6563                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  6564  01B116  52E5               	movf	postdec1,f,c
  6565  01B118  0012               	return		;funcret
  6566  01B11A                     __end_of_send_lcd_cmd:
  6567                           	opt callstack 0
  6568                           
  6569 ;; *************** function _SPI1_Exchange8bit *****************
  6570 ;; Defined at:
  6571 ;;		line 79 in file "mcc_generated_files/spi1.c"
  6572 ;; Parameters:    Size  Location     Type
  6573 ;;  data            1  [STACK] unsigned char 
  6574 ;; Auto vars:     Size  Location     Type
  6575 ;;		None
  6576 ;; Return value:  Size  Location     Type
  6577 ;;                  1  [STACK] unsigned char 
  6578 ;; Registers used:
  6579 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  6580 ;; Tracked objects:
  6581 ;;		On entry : 0/0
  6582 ;;		On exit  : 3F/39
  6583 ;;		Unchanged: 0/0
  6584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6589 ;;Total ram usage:        0 bytes
  6590 ;; Hardware stack levels used:    1
  6591 ;; Hardware stack levels required when called:   15
  6592 ;; This function calls:
  6593 ;;		Nothing
  6594 ;; This function is called by:
  6595 ;;		_send_lcd_cmd
  6596 ;;		_send_lcd_cmd_long
  6597 ;; This function uses a reentrant model
  6598 ;;
  6599                           
  6600                           	psect	text9
  6601  01B4B2                     __ptext9:
  6602                           	opt callstack 0
  6603  01B4B2                     _SPI1_Exchange8bit:
  6604                           	opt callstack 13
  6605                           
  6606                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  6607                           
  6608                           ; BSR set to: 0
  6609                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6610                           ;incstack = 0
  6611  01B4B2  0E01               	movlw	1
  6612  01B4B4  013D               	movlb	61	; () banked
  6613  01B4B6  6F12               	movwf	18,b	;volatile
  6614                           
  6615                           ; BSR set to: 61
  6616                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  6617                           ;stkvar	_data @ sp[(0)+-1]
  6618  01B4B8  0EFF               	movlw	-1
  6619  01B4BA  006F FF8F FD11     	movff	plusw1,15633	;volatile
  6620  01B4C0                     l807:
  6621                           
  6622                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  6623  01B4C0  0139               	movlb	57	; () banked
  6624  01B4C2  A9A2               	btfss	162,4,b	;volatile
  6625  01B4C4  D7FD               	goto	l807
  6626                           
  6627                           ; BSR set to: 57
  6628                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  6629  01B4C6  006F F440  F001    	movff	15632,btemp	;volatile
  6630                           
  6631                           ; BSR set to: 57
  6632                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6633  01B4CC  52E5               	movf	postdec1,f,c
  6634  01B4CE  0012               	return		;funcret
  6635  01B4D0                     __end_of_SPI1_Exchange8bit:
  6636                           	opt callstack 0
  6637                           
  6638 ;; *************** function _ringBufS_init *****************
  6639 ;; Defined at:
  6640 ;;		line 22 in file "ringbufs.c"
  6641 ;; Parameters:    Size  Location     Type
  6642 ;;  _this           2  [STACK] PTR volatile struct ring
  6643 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6644 ;; Auto vars:     Size  Location     Type
  6645 ;;		None
  6646 ;; Return value:  Size  Location     Type
  6647 ;;                  1  [STACK] void 
  6648 ;; Registers used:
  6649 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6650 ;; Tracked objects:
  6651 ;;		On entry : 0/0
  6652 ;;		On exit  : 0/0
  6653 ;;		Unchanged: 0/0
  6654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6659 ;;Total ram usage:        0 bytes
  6660 ;; Hardware stack levels used:    1
  6661 ;; Hardware stack levels required when called:   16
  6662 ;; This function calls:
  6663 ;;		_memset
  6664 ;; This function is called by:
  6665 ;;		_init_display
  6666 ;; This function uses a reentrant model
  6667 ;;
  6668                           
  6669                           	psect	text10
  6670  01B11A                     __ptext10:
  6671                           	opt callstack 0
  6672  01B11A                     _ringBufS_init:
  6673                           	opt callstack 13
  6674                           
  6675                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  6676                           
  6677                           ; BSR set to: 57
  6678                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6679                           ;incstack = 0
  6680  01B11A  0E43               	movlw	67
  6681  01B11C  6EE6               	movwf	postinc1,c
  6682  01B11E  0E00               	movlw	0
  6683  01B120  6EE6               	movwf	postinc1,c
  6684  01B122  0E00               	movlw	0
  6685  01B124  6EE6               	movwf	postinc1,c
  6686  01B126  0E00               	movlw	0
  6687  01B128  6EE6               	movwf	postinc1,c
  6688                           
  6689                           ;stkvar	__this @ sp[(-4)+-2]
  6690  01B12A  0EFA               	movlw	-6
  6691  01B12C  006F FF8F FFE6     	movff	plusw1,postinc1
  6692  01B132  006F FF8F FFE6     	movff	plusw1,postinc1
  6693  01B138  EC64  F0B4         	call	_memset	;wreg free
  6694                           
  6695                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  6696  01B13C  52E5               	movf	postdec1,f,c
  6697  01B13E  52E5               	movf	postdec1,f,c
  6698  01B140  0012               	return		;funcret
  6699  01B142                     __end_of_ringBufS_init:
  6700                           	opt callstack 0
  6701                           
  6702 ;; *************** function _init_bsoc *****************
  6703 ;; Defined at:
  6704 ;;		line 89 in file "bsoc.c"
  6705 ;; Parameters:    Size  Location     Type
  6706 ;;		None
  6707 ;; Auto vars:     Size  Location     Type
  6708 ;;		None
  6709 ;; Return value:  Size  Location     Type
  6710 ;;                  1  [STACK] void 
  6711 ;; Registers used:
  6712 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  6713 ;; Tracked objects:
  6714 ;;		On entry : 3F/1
  6715 ;;		On exit  : 0/0
  6716 ;;		Unchanged: 0/0
  6717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6722 ;;Total ram usage:        0 bytes
  6723 ;; Hardware stack levels used:    1
  6724 ;; Hardware stack levels required when called:   18
  6725 ;; This function calls:
  6726 ;;		_TMR3_SetInterruptHandler
  6727 ;;		_Volts_to_SOC
  6728 ;;		___fldiv
  6729 ;;		___flmul
  6730 ;;		___fltol
  6731 ;;		___xxtofl
  6732 ;;		_conv_raw_result
  6733 ;; This function is called by:
  6734 ;;		_main
  6735 ;; This function uses a reentrant model
  6736 ;;
  6737                           
  6738                           	psect	text11
  6739  018594                     __ptext11:
  6740                           	opt callstack 0
  6741  018594                     _init_bsoc:
  6742                           	opt callstack 12
  6743                           
  6744                           ;bsoc.c: 94:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  6745                           
  6746                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6747                           ;incstack = 0
  6748  018594  0E00               	movlw	0
  6749  018596  6EE6               	movwf	postinc1,c
  6750  018598  0E00               	movlw	0
  6751  01859A  6EE6               	movwf	postinc1,c
  6752  01859C  0E7A               	movlw	122
  6753  01859E  6EE6               	movwf	postinc1,c
  6754  0185A0  0E44               	movlw	68
  6755  0185A2  6EE6               	movwf	postinc1,c
  6756  0185A4  0E00               	movlw	0
  6757  0185A6  6EE6               	movwf	postinc1,c
  6758  0185A8  0E04               	movlw	4
  6759  0185AA  6EE6               	movwf	postinc1,c
  6760  0185AC  EC28  F0A7         	call	_conv_raw_result	;wreg free
  6761  0185B0  0060  F007  FFE6   	movff	btemp,postinc1
  6762  0185B6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6763  0185BC  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6764  0185C2  0060  F013  FFE6   	movff	btemp+3,postinc1
  6765  0185C8  EC11  F0C2         	call	___fltol	;wreg free
  6766  0185CC  0060  F007  FFE6   	movff	btemp,postinc1
  6767  0185D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6768  0185D8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6769  0185DE  0060  F013  FFE6   	movff	btemp+3,postinc1
  6770  0185E4  0E00               	movlw	0
  6771  0185E6  6EE6               	movwf	postinc1,c
  6772  0185E8  ECEC  F0BC         	call	___xxtofl	;wreg free
  6773  0185EC  0060  F007  FFE6   	movff	btemp,postinc1
  6774  0185F2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6775  0185F8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6776  0185FE  0060  F013  FFE6   	movff	btemp+3,postinc1
  6777  018604  ECED  F098         	call	___flmul	;wreg free
  6778  018608  0060  F007  FFE6   	movff	btemp,postinc1
  6779  01860E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6780  018614  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6781  01861A  0060  F013  FFE6   	movff	btemp+3,postinc1
  6782  018620  EC11  F0C2         	call	___fltol	;wreg free
  6783  018624  0060  F007  FFE6   	movff	btemp,postinc1
  6784  01862A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6785  018630  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6786  018636  0060  F013  FFE6   	movff	btemp+3,postinc1
  6787  01863C  ECFB  F0CF         	call	_Volts_to_SOC	;wreg free
  6788  018640  0060  F004  F1AE   	movff	btemp,_C+174	;volatile
  6789  018646  0060  F008  F1AF   	movff	btemp+1,_C+175	;volatile
  6790                           
  6791                           ;bsoc.c: 95:  C.dynamic_ah = C.bank_ah * (C.soc / 100.0);
  6792  01864C  0060  F623  FFE6   	movff	_C+136,postinc1
  6793  018652  0060  F627  FFE6   	movff	_C+137,postinc1
  6794  018658  0060  F62B  FFE6   	movff	_C+138,postinc1
  6795  01865E  0060  F62F  FFE6   	movff	_C+139,postinc1
  6796  018664  0E00               	movlw	0
  6797  018666  6EE6               	movwf	postinc1,c
  6798  018668  0E00               	movlw	0
  6799  01866A  6EE6               	movwf	postinc1,c
  6800  01866C  0EC8               	movlw	200
  6801  01866E  6EE6               	movwf	postinc1,c
  6802  018670  0E42               	movlw	66
  6803  018672  6EE6               	movwf	postinc1,c
  6804  018674  0101               	movlb	1	; () banked
  6805  018676  51AE               	movf	(_C+174)& (0+255),w,b	;volatile
  6806  018678  6E09               	movwf	(btemp+8)^0,c
  6807  01867A  51AF               	movf	(_C+175)& (0+255),w,b	;volatile
  6808  01867C  6E0A               	movwf	(btemp+9)^0,c
  6809  01867E  6A0B               	clrf	(btemp+10)^0,c
  6810  018680  6A0C               	clrf	(btemp+11)^0,c
  6811  018682  0060  F027  FFE6   	movff	btemp+8,postinc1
  6812  018688  0060  F02B  FFE6   	movff	btemp+9,postinc1
  6813  01868E  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6814  018694  0060  F033  FFE6   	movff	btemp+11,postinc1
  6815  01869A  0E00               	movlw	0
  6816  01869C  6EE6               	movwf	postinc1,c
  6817  01869E  ECEC  F0BC         	call	___xxtofl	;wreg free
  6818  0186A2  0060  F007  FFE6   	movff	btemp,postinc1
  6819  0186A8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6820  0186AE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6821  0186B4  0060  F013  FFE6   	movff	btemp+3,postinc1
  6822  0186BA  EC6B  F0A4         	call	___fldiv	;wreg free
  6823  0186BE  0060  F007  FFE6   	movff	btemp,postinc1
  6824  0186C4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6825  0186CA  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6826  0186D0  0060  F013  FFE6   	movff	btemp+3,postinc1
  6827  0186D6  ECED  F098         	call	___flmul	;wreg free
  6828  0186DA  0060  F004  F18C   	movff	btemp,_C+140	;volatile
  6829  0186E0  0060  F008  F18D   	movff	btemp+1,_C+141	;volatile
  6830  0186E6  0060  F00C  F18E   	movff	btemp+2,_C+142	;volatile
  6831  0186EC  0060  F010  F18F   	movff	btemp+3,_C+143	;volatile
  6832                           
  6833                           ;bsoc.c: 96:  TMR3_SetInterruptHandler(calc_bsoc);
  6834  0186F2  0EC0               	movlw	low _calc_bsoc
  6835  0186F4  6EE6               	movwf	postinc1,c
  6836  0186F6  0E41               	movlw	high _calc_bsoc
  6837  0186F8  6EE6               	movwf	postinc1,c
  6838  0186FA  0E01               	movlw	low (_calc_bsoc shr (0+16))
  6839  0186FC  6EE6               	movwf	postinc1,c
  6840  0186FE  EC19  F0D9         	call	_TMR3_SetInterruptHandler	;wreg free
  6841                           
  6842                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  6843  018702  0012               	return		;funcret
  6844  018704                     __end_of_init_bsoc:
  6845                           	opt callstack 0
  6846                           
  6847 ;; *************** function _Volts_to_SOC *****************
  6848 ;; Defined at:
  6849 ;;		line 153 in file "bsoc.c"
  6850 ;; Parameters:    Size  Location     Type
  6851 ;;  cvoltage        4  [STACK] unsigned long 
  6852 ;; Auto vars:     Size  Location     Type
  6853 ;;		None
  6854 ;; Return value:  Size  Location     Type
  6855 ;;                  2  [STACK] unsigned short 
  6856 ;; Registers used:
  6857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, tblptrl, tblptrh, tblptru, prodl, prodh
  6858 ;; Tracked objects:
  6859 ;;		On entry : 0/1
  6860 ;;		On exit  : 0/0
  6861 ;;		Unchanged: 0/0
  6862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6867 ;;Total ram usage:        0 bytes
  6868 ;; Hardware stack levels used:    1
  6869 ;; Hardware stack levels required when called:   15
  6870 ;; This function calls:
  6871 ;;		Nothing
  6872 ;; This function is called by:
  6873 ;;		_init_bsoc
  6874 ;; This function uses a reentrant model
  6875 ;;
  6876                           
  6877                           	psect	text12
  6878  019FF6                     __ptext12:
  6879                           	opt callstack 0
  6880  019FF6                     _Volts_to_SOC:
  6881                           	opt callstack 14
  6882                           
  6883                           ;bsoc.c: 153: uint16_t Volts_to_SOC(uint32_t cvoltage);bsoc.c: 154: {;bsoc.c: 155:  stat
      +                          ic uint8_t slot;;bsoc.c: 157:  C.soc = 0;
  6884                           
  6885                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6886                           ;incstack = 0
  6887  019FF6  0101               	movlb	1	; () banked
  6888  019FF8  6BAE               	clrf	(_C+174)& (0+255),b	;volatile
  6889  019FFA  6BAF               	clrf	(_C+175)& (0+255),b	;volatile
  6890                           
  6891                           ;bsoc.c: 158:  for (slot = 0; slot < 26; slot++) {
  6892  019FFC  6A2E               	clrf	Volts_to_SOC@slot^0,c
  6893  019FFE                     l10326:
  6894                           
  6895                           ;bsoc.c: 159:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  6896                           ;stkvar	_cvoltage @ sp[(0)+-4]
  6897  019FFE  502E               	movf	Volts_to_SOC@slot^0,w,c
  6898  01A000  0D08               	mullw	8
  6899  01A002  0E7B               	movlw	low _BVSOC_TABLE
  6900  01A004  24F3               	addwf	243,w,c
  6901  01A006  6EF6               	movwf	tblptrl,c
  6902  01A008  0EFA               	movlw	high _BVSOC_TABLE
  6903  01A00A  20F4               	addwfc	244,w,c
  6904  01A00C  6EF7               	movwf	tblptrh,c
  6905  01A00E                     	if	1	;There are 3 active tblptr bytes
  6906  01A00E  6AF8               	clrf	tblptru,c
  6907  01A010  0E00               	movlw	low (__mediumconst shr (0+16))
  6908  01A012  22F8               	addwfc	tblptru,f,c
  6909  01A014                     	endif
  6910  01A014  0EFC               	movlw	-4
  6911  01A016  50E3               	movf	plusw1,w,c
  6912  01A018  0009               	tblrd		*+
  6913  01A01A  5CF5               	subwf	tablat,w,c
  6914  01A01C  0EFD               	movlw	-3
  6915  01A01E  50E3               	movf	plusw1,w,c
  6916  01A020  0009               	tblrd		*+
  6917  01A022  58F5               	subwfb	tablat,w,c
  6918  01A024  0EFE               	movlw	-2
  6919  01A026  50E3               	movf	plusw1,w,c
  6920  01A028  0009               	tblrd		*+
  6921  01A02A  58F5               	subwfb	tablat,w,c
  6922  01A02C  0EFF               	movlw	-1
  6923  01A02E  50E3               	movf	plusw1,w,c
  6924  01A030  0009               	tblrd		*+
  6925  01A032  58F5               	subwfb	tablat,w,c
  6926  01A034  B0D8               	btfsc	status,0,c
  6927  01A036  D017               	goto	l10330
  6928                           
  6929                           ;bsoc.c: 160:    C.soc = BVSOC_TABLE[slot][1];
  6930  01A038  502E               	movf	Volts_to_SOC@slot^0,w,c
  6931  01A03A  0D08               	mullw	8
  6932  01A03C  0E04               	movlw	4
  6933  01A03E  26F3               	addwf	243,f,c
  6934  01A040  0E00               	movlw	0
  6935  01A042  22F4               	addwfc	244,f,c
  6936  01A044  0E7B               	movlw	low _BVSOC_TABLE
  6937  01A046  24F3               	addwf	243,w,c
  6938  01A048  6EF6               	movwf	tblptrl,c
  6939  01A04A  0EFA               	movlw	high _BVSOC_TABLE
  6940  01A04C  20F4               	addwfc	244,w,c
  6941  01A04E  6EF7               	movwf	tblptrh,c
  6942  01A050                     	if	1	;There are 3 active tblptr bytes
  6943  01A050  6AF8               	clrf	tblptru,c
  6944  01A052  0E00               	movlw	low (__mediumconst shr (0+16))
  6945  01A054  22F8               	addwfc	tblptru,f,c
  6946  01A056                     	endif
  6947  01A056  0009               	tblrd		*+
  6948  01A058  006F FFD4  F1AE    	movff	tablat,_C+174	;volatile
  6949  01A05E  000A               	tblrd		*-
  6950  01A060  006F FFD4  F1AF    	movff	tablat,_C+175	;volatile
  6951  01A066                     l10330:
  6952                           
  6953                           ;bsoc.c: 162:  }
  6954  01A066  2A2E               	incf	Volts_to_SOC@slot^0,f,c
  6955  01A068  0E19               	movlw	25
  6956  01A06A  642E               	cpfsgt	Volts_to_SOC@slot^0,c
  6957  01A06C  D7C8               	goto	l10326
  6958                           
  6959                           ;bsoc.c: 164:  return C.soc;
  6960  01A06E  EE20  F1AE         	lfsr	2,_C+174	;volatile
  6961  01A072  006F FF78  F001    	movff	postinc2,btemp
  6962  01A078  006F FF74  F002    	movff	postdec2,btemp+1
  6963                           
  6964                           ; _Volts_to_SOC: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  6965  01A07E  52E5               	movf	postdec1,f,c
  6966  01A080  52E5               	movf	postdec1,f,c
  6967  01A082  52E5               	movf	postdec1,f,c
  6968  01A084  52E5               	movf	postdec1,f,c
  6969  01A086  0012               	return		;funcret
  6970  01A088                     __end_of_Volts_to_SOC:
  6971                           	opt callstack 0
  6972                           
  6973 ;; *************** function _hid_display *****************
  6974 ;; Defined at:
  6975 ;;		line 17 in file "hid.c"
  6976 ;; Parameters:    Size  Location     Type
  6977 ;;  h               1  [STACK] PTR struct H_data
  6978 ;;		 -> H(7), 
  6979 ;; Auto vars:     Size  Location     Type
  6980 ;;		None
  6981 ;; Return value:  Size  Location     Type
  6982 ;;                  1  [STACK] PTR struct H_data
  6983 ;; Registers used:
  6984 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  6985 ;; Tracked objects:
  6986 ;;		On entry : 3F/1
  6987 ;;		On exit  : 0/0
  6988 ;;		Unchanged: 0/0
  6989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6994 ;;Total ram usage:        0 bytes
  6995 ;; Hardware stack levels used:    1
  6996 ;; Hardware stack levels required when called:   17
  6997 ;; This function calls:
  6998 ;;		_hid_input
  6999 ;; This function is called by:
  7000 ;;		_main
  7001 ;; This function uses a reentrant model
  7002 ;;
  7003                           
  7004                           	psect	text13
  7005  01953A                     __ptext13:
  7006                           	opt callstack 0
  7007  01953A                     _hid_display:
  7008                           	opt callstack 13
  7009                           
  7010                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  7011                           ;stkvar	_h @ sp[(0)+-1]
  7012                           
  7013                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7014                           ;incstack = 0
  7015  01953A  0EFF               	movlw	-1
  7016  01953C  50E3               	movf	plusw1,w,c
  7017  01953E  6EE6               	movwf	postinc1,c
  7018  019540  ECD6  F0D0         	call	_hid_input	;wreg free
  7019                           
  7020                           ;hid.c: 21:  switch (h->h_state) {
  7021  019544  D066               	goto	l10736
  7022  019546                     l10714:
  7023                           
  7024                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  7025                           ;stkvar	_h @ sp[(0)+-1]
  7026  019546  0EFF               	movlw	-1
  7027  019548  50E3               	movf	plusw1,w,c
  7028  01954A  6ED9               	movwf	fsr2l,c
  7029  01954C  6ADA               	clrf	fsr2h,c
  7030  01954E  0E01               	movlw	1
  7031  019550  26D9               	addwf	fsr2l,f,c
  7032  019552  0E01               	movlw	1
  7033  019554  6EDF               	movwf	indf2,c
  7034                           
  7035                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  7036                           ;stkvar	_h @ sp[(0)+-1]
  7037  019556  0EFF               	movlw	-1
  7038  019558  50E3               	movf	plusw1,w,c
  7039  01955A  6ED9               	movwf	fsr2l,c
  7040  01955C  6ADA               	clrf	fsr2h,c
  7041  01955E  0E00               	movlw	0
  7042  019560  6EDF               	movwf	indf2,c
  7043                           
  7044                           ;hid.c: 25:   h->wait_enter = 1;
  7045                           ;stkvar	_h @ sp[(0)+-1]
  7046  019562  0EFF               	movlw	-1
  7047  019564  50E3               	movf	plusw1,w,c
  7048  019566  6ED9               	movwf	fsr2l,c
  7049  019568  6ADA               	clrf	fsr2h,c
  7050  01956A  0E04               	movlw	4
  7051  01956C  26D9               	addwf	fsr2l,f,c
  7052  01956E  0E01               	movlw	1
  7053  019570  6EDF               	movwf	indf2,c
  7054                           
  7055                           ;hid.c: 26:   h->wait_select = 1;
  7056                           ;stkvar	_h @ sp[(0)+-1]
  7057  019572  0EFF               	movlw	-1
  7058  019574  50E3               	movf	plusw1,w,c
  7059  019576  6ED9               	movwf	fsr2l,c
  7060  019578  6ADA               	clrf	fsr2h,c
  7061  01957A  0E02               	movlw	2
  7062  01957C  26D9               	addwf	fsr2l,f,c
  7063  01957E  0E01               	movlw	1
  7064  019580  6EDF               	movwf	indf2,c
  7065                           
  7066                           ;hid.c: 27:   h->select_p = SW_OFF;
  7067                           ;stkvar	_h @ sp[(0)+-1]
  7068  019582  0EFF               	movlw	-1
  7069  019584  50E3               	movf	plusw1,w,c
  7070  019586  6ED9               	movwf	fsr2l,c
  7071  019588  6ADA               	clrf	fsr2h,c
  7072  01958A  0E03               	movlw	3
  7073  01958C  26D9               	addwf	fsr2l,f,c
  7074  01958E  0E00               	movlw	0
  7075  019590  6EDF               	movwf	indf2,c
  7076                           
  7077                           ;hid.c: 28:   h->enter_p = SW_OFF;
  7078                           ;stkvar	_h @ sp[(0)+-1]
  7079  019592  0EFF               	movlw	-1
  7080  019594  50E3               	movf	plusw1,w,c
  7081  019596  6ED9               	movwf	fsr2l,c
  7082  019598  6ADA               	clrf	fsr2h,c
  7083  01959A  0E05               	movlw	5
  7084  01959C  26D9               	addwf	fsr2l,f,c
  7085  01959E  0E00               	movlw	0
  7086  0195A0  D036               	goto	L1
  7087  0195A2                     l10726:
  7088                           
  7089                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  7090                           ;stkvar	_h @ sp[(0)+-1]
  7091  0195A2  0EFF               	movlw	-1
  7092  0195A4  50E3               	movf	plusw1,w,c
  7093  0195A6  6ED9               	movwf	fsr2l,c
  7094  0195A8  6ADA               	clrf	fsr2h,c
  7095  0195AA  0E02               	movlw	2
  7096  0195AC  26D9               	addwf	fsr2l,f,c
  7097  0195AE  50DF               	movf	indf2,w,c
  7098  0195B0  A4D8               	btfss	status,2,c
  7099  0195B2  D042               	goto	l1935
  7100                           
  7101                           ;stkvar	_h @ sp[(0)+-1]
  7102  0195B4  0EFF               	movlw	-1
  7103  0195B6  50E3               	movf	plusw1,w,c
  7104  0195B8  6ED9               	movwf	fsr2l,c
  7105  0195BA  6ADA               	clrf	fsr2h,c
  7106  0195BC  0E03               	movlw	3
  7107  0195BE  26D9               	addwf	fsr2l,f,c
  7108  0195C0  50DF               	movf	indf2,w,c
  7109  0195C2  A4D8               	btfss	status,2,c
  7110  0195C4  D039               	goto	l1935
  7111                           
  7112                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  7113                           ;stkvar	_h @ sp[(0)+-1]
  7114  0195C6  0EFF               	movlw	-1
  7115  0195C8  50E3               	movf	plusw1,w,c
  7116  0195CA  6ED9               	movwf	fsr2l,c
  7117  0195CC  6ADA               	clrf	fsr2h,c
  7118  0195CE  0E06               	movlw	6
  7119  0195D0  26D9               	addwf	fsr2l,f,c
  7120                           
  7121                           ;stkvar	_h @ sp[(0)+-1]
  7122  0195D2  0EFF               	movlw	-1
  7123  0195D4  50E3               	movf	plusw1,w,c
  7124  0195D6  6EE9               	movwf	fsr0l,c
  7125  0195D8  6AEA               	clrf	fsr0h,c
  7126  0195DA  0E06               	movlw	6
  7127  0195DC  26E9               	addwf	fsr0l,f,c
  7128  0195DE  2AEF               	incf	indf0,f,c
  7129  0195E0  50EF               	movf	indf0,w,c
  7130  0195E2  0B03               	andlw	3
  7131  0195E4  6EDF               	movwf	indf2,c
  7132                           
  7133                           ;hid.c: 34:    h->hid_display = h->sequence;
  7134                           ;stkvar	_h @ sp[(0)+-1]
  7135  0195E6  0EFF               	movlw	-1
  7136  0195E8  50E3               	movf	plusw1,w,c
  7137  0195EA  6ED9               	movwf	fsr2l,c
  7138  0195EC  6ADA               	clrf	fsr2h,c
  7139  0195EE  0E06               	movlw	6
  7140  0195F0  26D9               	addwf	fsr2l,f,c
  7141                           
  7142                           ;stkvar	_h @ sp[(0)+-1]
  7143  0195F2  0EFF               	movlw	-1
  7144  0195F4  50E3               	movf	plusw1,w,c
  7145  0195F6  6EE9               	movwf	fsr0l,c
  7146  0195F8  6AEA               	clrf	fsr0h,c
  7147  0195FA  006F FF7F FFEF     	movff	indf2,indf0
  7148                           
  7149                           ;hid.c: 35:    h->wait_select = 1;
  7150                           ;stkvar	_h @ sp[(0)+-1]
  7151  019600  0EFF               	movlw	-1
  7152  019602  50E3               	movf	plusw1,w,c
  7153  019604  6ED9               	movwf	fsr2l,c
  7154  019606  6ADA               	clrf	fsr2h,c
  7155  019608  0E02               	movlw	2
  7156  01960A  26D9               	addwf	fsr2l,f,c
  7157  01960C  0E01               	movlw	1
  7158  01960E                     L1:
  7159  01960E  6EDF               	movwf	indf2,c
  7160  019610  D013               	goto	l1935
  7161  019612                     l10736:
  7162                           
  7163                           ;stkvar	_h @ sp[(0)+-1]
  7164  019612  0EFF               	movlw	-1
  7165  019614  50E3               	movf	plusw1,w,c
  7166  019616  6ED9               	movwf	fsr2l,c
  7167  019618  6ADA               	clrf	fsr2h,c
  7168  01961A  0E01               	movlw	1
  7169  01961C  26D9               	addwf	fsr2l,f,c
  7170  01961E  50DF               	movf	indf2,w,c
  7171  019620  6E0B               	movwf	(btemp+10)^0,c
  7172  019622  6A0C               	clrf	(btemp+11)^0,c
  7173                           
  7174                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7175                           ; Switch size 1, requested type "simple"
  7176                           ; Number of cases is 1, Range of values is 0 to 0
  7177                           ; switch strategies available:
  7178                           ; Name         Instructions Cycles
  7179                           ; simple_byte            4     3 (average)
  7180                           ;	Chosen strategy is simple_byte
  7181  019624  500C               	movf	(btemp+11)^0,w,c
  7182  019626  0A00               	xorlw	0	; case 0
  7183  019628  A4D8               	btfss	status,2,c
  7184  01962A  D7BB               	goto	l10726
  7185                           
  7186                           ; Switch size 1, requested type "simple"
  7187                           ; Number of cases is 2, Range of values is 0 to 1
  7188                           ; switch strategies available:
  7189                           ; Name         Instructions Cycles
  7190                           ; simple_byte            7     4 (average)
  7191                           ;	Chosen strategy is simple_byte
  7192  01962C  500B               	movf	(btemp+10)^0,w,c
  7193  01962E  0A00               	xorlw	0	; case 0
  7194  019630  B4D8               	btfsc	status,2,c
  7195  019632  D789               	goto	l10714
  7196  019634  0A01               	xorlw	1	; case 1
  7197  019636  D7B5               	goto	l10726
  7198  019638                     l1935:
  7199                           
  7200                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  7201  019638  52E5               	movf	postdec1,f,c
  7202  01963A  0012               	return		;funcret
  7203  01963C                     __end_of_hid_display:
  7204                           	opt callstack 0
  7205                           
  7206 ;; *************** function _hid_input *****************
  7207 ;; Defined at:
  7208 ;;		line 3 in file "hid.c"
  7209 ;; Parameters:    Size  Location     Type
  7210 ;;  h               1  [STACK] PTR struct H_data
  7211 ;;		 -> H(7), 
  7212 ;; Auto vars:     Size  Location     Type
  7213 ;;		None
  7214 ;; Return value:  Size  Location     Type
  7215 ;;                  1  [STACK] PTR struct H_data
  7216 ;; Registers used:
  7217 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  7218 ;; Tracked objects:
  7219 ;;		On entry : 0/1
  7220 ;;		On exit  : 0/0
  7221 ;;		Unchanged: 0/0
  7222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7227 ;;Total ram usage:        0 bytes
  7228 ;; Hardware stack levels used:    1
  7229 ;; Hardware stack levels required when called:   16
  7230 ;; This function calls:
  7231 ;;		_get_switch
  7232 ;; This function is called by:
  7233 ;;		_hid_display
  7234 ;; This function uses a reentrant model
  7235 ;;
  7236                           
  7237                           	psect	text14
  7238  01A1AC                     __ptext14:
  7239                           	opt callstack 0
  7240  01A1AC                     _hid_input:
  7241                           	opt callstack 13
  7242                           
  7243                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  7244                           
  7245                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7246                           ;incstack = 0
  7247  01A1AC  0E02               	movlw	2
  7248  01A1AE  6EE6               	movwf	postinc1,c
  7249  01A1B0  EC0E  F0D8         	call	_get_switch	;wreg free
  7250  01A1B4  5001               	movf	btemp^0,w,c
  7251  01A1B6  B4D8               	btfsc	status,2,c
  7252  01A1B8  D01C               	goto	l10256
  7253                           
  7254                           ;hid.c: 6:   h->wait_select = 0;
  7255                           ;stkvar	_h @ sp[(0)+-1]
  7256  01A1BA  0EFF               	movlw	-1
  7257  01A1BC  50E3               	movf	plusw1,w,c
  7258  01A1BE  6ED9               	movwf	fsr2l,c
  7259  01A1C0  6ADA               	clrf	fsr2h,c
  7260  01A1C2  0E02               	movlw	2
  7261  01A1C4  26D9               	addwf	fsr2l,f,c
  7262  01A1C6  0E00               	movlw	0
  7263  01A1C8  6EDF               	movwf	indf2,c
  7264                           
  7265                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  7266  01A1CA  0E02               	movlw	2
  7267  01A1CC  6EE6               	movwf	postinc1,c
  7268  01A1CE  EC0E  F0D8         	call	_get_switch	;wreg free
  7269  01A1D2  5001               	movf	btemp^0,w,c
  7270  01A1D4  B4D8               	btfsc	status,2,c
  7271  01A1D6  D003               	goto	u9400
  7272  01A1D8  6A0C               	clrf	(btemp+11)^0,c
  7273  01A1DA  2A0C               	incf	(btemp+11)^0,f,c
  7274  01A1DC  D001               	goto	u9418
  7275  01A1DE                     u9400:
  7276  01A1DE  6A0C               	clrf	(btemp+11)^0,c
  7277  01A1E0                     u9418:
  7278                           
  7279                           ;stkvar	_h @ sp[(0)+-1]
  7280  01A1E0  0EFF               	movlw	-1
  7281  01A1E2  50E3               	movf	plusw1,w,c
  7282  01A1E4  6ED9               	movwf	fsr2l,c
  7283  01A1E6  6ADA               	clrf	fsr2h,c
  7284  01A1E8  0E03               	movlw	3
  7285  01A1EA  26D9               	addwf	fsr2l,f,c
  7286  01A1EC  0060  F033  FFDF   	movff	btemp+11,indf2
  7287  01A1F2                     l10256:
  7288                           
  7289                           ;hid.c: 10:  if (get_switch(SENTER)) {
  7290  01A1F2  0E03               	movlw	3
  7291  01A1F4  6EE6               	movwf	postinc1,c
  7292  01A1F6  EC0E  F0D8         	call	_get_switch	;wreg free
  7293  01A1FA  5001               	movf	btemp^0,w,c
  7294  01A1FC  B4D8               	btfsc	status,2,c
  7295  01A1FE  D01C               	goto	l1926
  7296                           
  7297                           ;hid.c: 11:   h->wait_enter = 0;
  7298                           ;stkvar	_h @ sp[(0)+-1]
  7299  01A200  0EFF               	movlw	-1
  7300  01A202  50E3               	movf	plusw1,w,c
  7301  01A204  6ED9               	movwf	fsr2l,c
  7302  01A206  6ADA               	clrf	fsr2h,c
  7303  01A208  0E04               	movlw	4
  7304  01A20A  26D9               	addwf	fsr2l,f,c
  7305  01A20C  0E00               	movlw	0
  7306  01A20E  6EDF               	movwf	indf2,c
  7307                           
  7308                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  7309  01A210  0E03               	movlw	3
  7310  01A212  6EE6               	movwf	postinc1,c
  7311  01A214  EC0E  F0D8         	call	_get_switch	;wreg free
  7312  01A218  5001               	movf	btemp^0,w,c
  7313  01A21A  B4D8               	btfsc	status,2,c
  7314  01A21C  D003               	goto	u9430
  7315  01A21E  6A0C               	clrf	(btemp+11)^0,c
  7316  01A220  2A0C               	incf	(btemp+11)^0,f,c
  7317  01A222  D001               	goto	u9448
  7318  01A224                     u9430:
  7319  01A224  6A0C               	clrf	(btemp+11)^0,c
  7320  01A226                     u9448:
  7321                           
  7322                           ;stkvar	_h @ sp[(0)+-1]
  7323  01A226  0EFF               	movlw	-1
  7324  01A228  50E3               	movf	plusw1,w,c
  7325  01A22A  6ED9               	movwf	fsr2l,c
  7326  01A22C  6ADA               	clrf	fsr2h,c
  7327  01A22E  0E05               	movlw	5
  7328  01A230  26D9               	addwf	fsr2l,f,c
  7329  01A232  0060  F033  FFDF   	movff	btemp+11,indf2
  7330  01A238                     l1926:
  7331                           
  7332                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  7333  01A238  52E5               	movf	postdec1,f,c
  7334  01A23A  0012               	return		;funcret
  7335  01A23C                     __end_of_hid_input:
  7336                           	opt callstack 0
  7337                           
  7338 ;; *************** function _get_switch *****************
  7339 ;; Defined at:
  7340 ;;		line 18 in file "dio.c"
  7341 ;; Parameters:    Size  Location     Type
  7342 ;;  i               1  [STACK] unsigned char 
  7343 ;; Auto vars:     Size  Location     Type
  7344 ;;		None
  7345 ;; Return value:  Size  Location     Type
  7346 ;;                  1  [STACK] enum E17021
  7347 ;; Registers used:
  7348 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  7349 ;; Tracked objects:
  7350 ;;		On entry : 0/2
  7351 ;;		On exit  : 0/0
  7352 ;;		Unchanged: 0/0
  7353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7358 ;;Total ram usage:        0 bytes
  7359 ;; Hardware stack levels used:    1
  7360 ;; Hardware stack levels required when called:   15
  7361 ;; This function calls:
  7362 ;;		Nothing
  7363 ;; This function is called by:
  7364 ;;		_main
  7365 ;;		_hid_input
  7366 ;; This function uses a reentrant model
  7367 ;;
  7368                           
  7369                           	psect	text15
  7370  01B01C                     __ptext15:
  7371                           	opt callstack 0
  7372  01B01C                     _get_switch:
  7373                           	opt callstack 13
  7374                           
  7375                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  7376                           ;stkvar	_i @ sp[(0)+-1]
  7377                           
  7378                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7379                           ;incstack = 0
  7380  01B01C  0EFF               	movlw	-1
  7381  01B01E  006F FF8C  F001    	movff	plusw1,btemp
  7382  01B024  0E03               	movlw	3
  7383  01B026  6401               	cpfsgt	btemp^0,c
  7384  01B028  D002               	goto	l9520
  7385                           
  7386                           ;dio.c: 21:   return SW_OFF;
  7387  01B02A  0E00               	movlw	0
  7388  01B02C  D00A               	goto	L2
  7389  01B02E                     l9520:
  7390                           
  7391                           ;dio.c: 23:  return S.button[i].sw;
  7392                           ;stkvar	_i @ sp[(0)+-1]
  7393  01B02E  0EFF               	movlw	-1
  7394  01B030  50E3               	movf	plusw1,w,c
  7395  01B032  0D05               	mullw	5
  7396  01B034  0EBD               	movlw	low _S
  7397  01B036  24F3               	addwf	243,w,c
  7398  01B038  6ED9               	movwf	fsr2l,c
  7399  01B03A  0E02               	movlw	high _S
  7400  01B03C  20F4               	addwfc	prodh,w,c
  7401  01B03E  6EDA               	movwf	fsr2h,c
  7402  01B040  50DF               	movf	indf2,w,c
  7403  01B042                     L2:
  7404  01B042  6E01               	movwf	btemp^0,c
  7405                           
  7406                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7407  01B044  52E5               	movf	postdec1,f,c
  7408  01B046  0012               	return		;funcret
  7409  01B048                     __end_of_get_switch:
  7410                           	opt callstack 0
  7411                           
  7412 ;; *************** function _esr_check *****************
  7413 ;; Defined at:
  7414 ;;		line 170 in file "bsoc.c"
  7415 ;; Parameters:    Size  Location     Type
  7416 ;;  fsm             1  [STACK] unsigned char 
  7417 ;; Auto vars:     Size  Location     Type
  7418 ;;  esr_value       4  [STACK] float 
  7419 ;; Return value:  Size  Location     Type
  7420 ;;                  4  [STACK] float 
  7421 ;; Registers used:
  7422 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7423 ;; Tracked objects:
  7424 ;;		On entry : 0/0
  7425 ;;		On exit  : 0/0
  7426 ;;		Unchanged: 0/0
  7427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7432 ;;Total ram usage:        0 bytes
  7433 ;; Hardware stack levels used:    1
  7434 ;; Hardware stack levels required when called:   18
  7435 ;; This function calls:
  7436 ;;		_StartTimer
  7437 ;;		_TimerDone
  7438 ;;		___fldiv
  7439 ;;		___flsub
  7440 ;;		_conv_raw_result
  7441 ;;		_fabsf
  7442 ;;		_set_load_relay_one
  7443 ;;		_set_load_relay_two
  7444 ;;		_update_adc_result
  7445 ;; This function is called by:
  7446 ;;		_main
  7447 ;; This function uses a reentrant model
  7448 ;;
  7449                           
  7450                           	psect	text16
  7451  016244                     __ptext16:
  7452                           	opt callstack 0
  7453  016244                     _esr_check:
  7454                           	opt callstack 0
  7455                           
  7456                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7457  016244  52E6               	movf	postinc1,f,c
  7458  016246  52E6               	movf	postinc1,f,c
  7459  016248  52E6               	movf	postinc1,f,c
  7460  01624A  52E6               	movf	postinc1,f,c
  7461                           
  7462                           ;bsoc.c: 170: float esr_check(uint8_t fsm);bsoc.c: 171: {;bsoc.c: 172:  static uint8_t e
      +                          sr_state = 0;;bsoc.c: 173:  float esr_value = -1.0;
  7463                           
  7464                           ;incstack = 0
  7465  01624C  0E00               	movlw	0
  7466  01624E  6E09               	movwf	(btemp+8)^0,c
  7467  016250  0E00               	movlw	0
  7468  016252  6E0A               	movwf	(btemp+9)^0,c
  7469  016254  0E80               	movlw	128
  7470  016256  6E0B               	movwf	(btemp+10)^0,c
  7471  016258  0EBF               	movlw	191
  7472  01625A  6E0C               	movwf	(btemp+11)^0,c
  7473                           
  7474                           ;stkvar	_esr_value @ sp[(-4)+0]
  7475  01625C  0EFC               	movlw	-4
  7476  01625E  0060  F027  FFE3   	movff	btemp+8,plusw1
  7477  016264  0EFD               	movlw	-3
  7478  016266  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7479  01626C  0EFE               	movlw	-2
  7480  01626E  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7481  016274  0EFF               	movlw	-1
  7482  016276  0060  F033  FFE3   	movff	btemp+11,plusw1
  7483                           
  7484                           ;bsoc.c: 175:  if (fsm) {
  7485                           ;stkvar	_fsm @ sp[(-4)+-1]
  7486  01627C  0EFB               	movlw	-5
  7487  01627E  50E3               	movf	plusw1,w,c
  7488  016280  B4D8               	btfsc	status,2,c
  7489  016282  D168               	goto	l10652
  7490                           
  7491                           ;bsoc.c: 176:   esr_state = 0;
  7492  016284  6A2D               	clrf	esr_check@esr_state^0,c
  7493                           
  7494                           ;bsoc.c: 177:   esr_value = -10.0;
  7495  016286  0E00               	movlw	0
  7496  016288  6E09               	movwf	(btemp+8)^0,c
  7497  01628A  0E00               	movlw	0
  7498  01628C  6E0A               	movwf	(btemp+9)^0,c
  7499  01628E  0E20               	movlw	32
  7500  016290  6E0B               	movwf	(btemp+10)^0,c
  7501  016292  0EC1               	movlw	193
  7502  016294  6E0C               	movwf	(btemp+11)^0,c
  7503                           
  7504                           ;stkvar	_esr_value @ sp[(-4)+0]
  7505  016296  0EFC               	movlw	-4
  7506  016298  0060  F027  FFE3   	movff	btemp+8,plusw1
  7507  01629E  0EFD               	movlw	-3
  7508  0162A0  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7509  0162A6  0EFE               	movlw	-2
  7510  0162A8  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7511  0162AE  0EFF               	movlw	-1
  7512  0162B0  0060  F033  FFE3   	movff	btemp+11,plusw1
  7513  0162B6                     l10578:
  7514                           
  7515                           ;bsoc.c: 178:   return esr_value;
  7516                           ;stkvar	_esr_value @ sp[(-4)+0]
  7517  0162B6  0EFC               	movlw	-4
  7518  0162B8  006F FF8C  F001    	movff	plusw1,btemp
  7519  0162BE  0EFD               	movlw	-3
  7520  0162C0  006F FF8C  F002    	movff	plusw1,btemp+1
  7521  0162C6  0EFE               	movlw	-2
  7522  0162C8  006F FF8C  F003    	movff	plusw1,btemp+2
  7523  0162CE  0EFF               	movlw	-1
  7524  0162D0  006F FF8C  F004    	movff	plusw1,btemp+3
  7525  0162D6  D153               	goto	l2039
  7526  0162D8                     l10582:
  7527                           
  7528                           ;bsoc.c: 183:   StartTimer(TMR_ESR, 10000);
  7529  0162D8  0E10               	movlw	16
  7530  0162DA  6EE6               	movwf	postinc1,c
  7531  0162DC  0E27               	movlw	39
  7532  0162DE  6EE6               	movwf	postinc1,c
  7533  0162E0  0E0C               	movlw	12
  7534  0162E2  6EE6               	movwf	postinc1,c
  7535  0162E4  EC20  F0D6         	call	_StartTimer	;wreg free
  7536                           
  7537                           ;bsoc.c: 184:   esr_state++;
  7538  0162E8  2A2D               	incf	esr_check@esr_state^0,f,c
  7539                           
  7540                           ;bsoc.c: 185:   esr_value = -1.0;
  7541  0162EA  0E00               	movlw	0
  7542  0162EC  6E09               	movwf	(btemp+8)^0,c
  7543  0162EE  0E00               	movlw	0
  7544  0162F0  6E0A               	movwf	(btemp+9)^0,c
  7545  0162F2  0E80               	movlw	128
  7546  0162F4  6E0B               	movwf	(btemp+10)^0,c
  7547  0162F6  0EBF               	movlw	191
  7548  0162F8  D7CD               	goto	L3
  7549  0162FA                     l10588:
  7550                           
  7551                           ;bsoc.c: 188:   set_load_relay_one(0);
  7552  0162FA  0E00               	movlw	0
  7553  0162FC  6EE6               	movwf	postinc1,c
  7554  0162FE  EC2F  F0DB         	call	_set_load_relay_one	;wreg free
  7555                           
  7556                           ;bsoc.c: 189:   set_load_relay_two(0);
  7557  016302  0E00               	movlw	0
  7558  016304  6EE6               	movwf	postinc1,c
  7559  016306  EC27  F0DB         	call	_set_load_relay_two	;wreg free
  7560                           
  7561                           ;bsoc.c: 190:   if (TimerDone(TMR_ESR)) {
  7562  01630A  0E0C               	movlw	12
  7563  01630C  6EE6               	movwf	postinc1,c
  7564  01630E  ECA1  F0D8         	call	_TimerDone	;wreg free
  7565  016312  5001               	movf	btemp^0,w,c
  7566  016314  B4D8               	btfsc	status,2,c
  7567  016316  D009               	goto	l10594
  7568                           
  7569                           ;bsoc.c: 191:    StartTimer(TMR_ESR, 10000);
  7570  016318  0E10               	movlw	16
  7571  01631A  6EE6               	movwf	postinc1,c
  7572  01631C  0E27               	movlw	39
  7573  01631E  6EE6               	movwf	postinc1,c
  7574  016320  0E0C               	movlw	12
  7575  016322  6EE6               	movwf	postinc1,c
  7576  016324  EC20  F0D6         	call	_StartTimer	;wreg free
  7577                           
  7578                           ;bsoc.c: 192:   } else {
  7579  016328  D006               	goto	l10598
  7580  01632A                     l10594:
  7581                           
  7582                           ;bsoc.c: 193:    return -2.0;
  7583  01632A  0E00               	movlw	0
  7584  01632C  6E01               	movwf	btemp^0,c
  7585  01632E  0E00               	movlw	0
  7586  016330  6E02               	movwf	(btemp+1)^0,c
  7587  016332  0E00               	movlw	0
  7588  016334  D067               	goto	L5
  7589  016336                     l10598:
  7590                           
  7591                           ;bsoc.c: 196:   update_adc_result();
  7592  016336  ECBF  F0D6         	call	_update_adc_result	;wreg free
  7593                           
  7594                           ;bsoc.c: 197:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  7595  01633A  0E00               	movlw	0
  7596  01633C  6EE6               	movwf	postinc1,c
  7597  01633E  0E04               	movlw	4
  7598  016340  6EE6               	movwf	postinc1,c
  7599  016342  EC28  F0A7         	call	_conv_raw_result	;wreg free
  7600  016346  0060  F004  F1EB   	movff	btemp,_C+235	;volatile
  7601  01634C  0060  F008  F1EC   	movff	btemp+1,_C+236	;volatile
  7602  016352  0060  F00C  F1ED   	movff	btemp+2,_C+237	;volatile
  7603  016358  0060  F010  F1EE   	movff	btemp+3,_C+238	;volatile
  7604  01635E                     l10602:
  7605                           
  7606                           ;bsoc.c: 198:   esr_state++;
  7607  01635E  2A2D               	incf	esr_check@esr_state^0,f,c
  7608                           
  7609                           ;bsoc.c: 199:   break;
  7610  016360  D7AA               	goto	l10578
  7611  016362                     l10604:
  7612                           
  7613                           ;bsoc.c: 201:   set_load_relay_one(1);
  7614  016362  0E01               	movlw	1
  7615  016364  6EE6               	movwf	postinc1,c
  7616  016366  EC2F  F0DB         	call	_set_load_relay_one	;wreg free
  7617                           
  7618                           ;bsoc.c: 202:   if (TimerDone(TMR_ESR)) {
  7619  01636A  0E0C               	movlw	12
  7620  01636C  6EE6               	movwf	postinc1,c
  7621  01636E  ECA1  F0D8         	call	_TimerDone	;wreg free
  7622  016372  5001               	movf	btemp^0,w,c
  7623  016374  B4D8               	btfsc	status,2,c
  7624  016376  D009               	goto	l10610
  7625                           
  7626                           ;bsoc.c: 203:    StartTimer(TMR_ESR, 10000);
  7627  016378  0E10               	movlw	16
  7628  01637A  6EE6               	movwf	postinc1,c
  7629  01637C  0E27               	movlw	39
  7630  01637E  6EE6               	movwf	postinc1,c
  7631  016380  0E0C               	movlw	12
  7632  016382  6EE6               	movwf	postinc1,c
  7633  016384  EC20  F0D6         	call	_StartTimer	;wreg free
  7634                           
  7635                           ;bsoc.c: 204:   } else {
  7636  016388  D006               	goto	l10614
  7637  01638A                     l10610:
  7638                           
  7639                           ;bsoc.c: 205:    return -3.0;
  7640  01638A  0E00               	movlw	0
  7641  01638C  6E01               	movwf	btemp^0,c
  7642  01638E  0E00               	movlw	0
  7643  016390  6E02               	movwf	(btemp+1)^0,c
  7644  016392  0E40               	movlw	64
  7645  016394  D037               	goto	L5
  7646  016396                     l10614:
  7647                           
  7648                           ;bsoc.c: 208:   update_adc_result();
  7649  016396  ECBF  F0D6         	call	_update_adc_result	;wreg free
  7650                           
  7651                           ;bsoc.c: 209:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  7652  01639A  0E00               	movlw	0
  7653  01639C  6EE6               	movwf	postinc1,c
  7654  01639E  0E04               	movlw	4
  7655  0163A0  6EE6               	movwf	postinc1,c
  7656  0163A2  EC28  F0A7         	call	_conv_raw_result	;wreg free
  7657  0163A6  0060  F004  F1EF   	movff	btemp,_C+239	;volatile
  7658  0163AC  0060  F008  F1F0   	movff	btemp+1,_C+240	;volatile
  7659  0163B2  0060  F00C  F1F1   	movff	btemp+2,_C+241	;volatile
  7660  0163B8  0060  F010  F1F2   	movff	btemp+3,_C+242	;volatile
  7661                           
  7662                           ;bsoc.c: 210:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  7663  0163BE  0E00               	movlw	0
  7664  0163C0  6EE6               	movwf	postinc1,c
  7665  0163C2  0E00               	movlw	0
  7666  0163C4  6EE6               	movwf	postinc1,c
  7667  0163C6  EC28  F0A7         	call	_conv_raw_result	;wreg free
  7668  0163CA  0060  F004  F1E3   	movff	btemp,_C+227	;volatile
  7669  0163D0  0060  F008  F1E4   	movff	btemp+1,_C+228	;volatile
  7670  0163D6  0060  F00C  F1E5   	movff	btemp+2,_C+229	;volatile
  7671  0163DC  0060  F010  F1E6   	movff	btemp+3,_C+230	;volatile
  7672  0163E2  D7BD               	goto	l10602
  7673  0163E4                     l10622:
  7674                           
  7675                           ;bsoc.c: 214:   set_load_relay_two(1);
  7676  0163E4  0E01               	movlw	1
  7677  0163E6  6EE6               	movwf	postinc1,c
  7678  0163E8  EC27  F0DB         	call	_set_load_relay_two	;wreg free
  7679                           
  7680                           ;bsoc.c: 215:   if (!TimerDone(TMR_ESR))
  7681  0163EC  0E0C               	movlw	12
  7682  0163EE  6EE6               	movwf	postinc1,c
  7683  0163F0  ECA1  F0D8         	call	_TimerDone	;wreg free
  7684  0163F4  5001               	movf	btemp^0,w,c
  7685  0163F6  A4D8               	btfss	status,2,c
  7686  0163F8  D009               	goto	l10630
  7687                           
  7688                           ;bsoc.c: 216:    return -4.0;
  7689  0163FA  0E00               	movlw	0
  7690  0163FC  6E01               	movwf	btemp^0,c
  7691  0163FE  0E00               	movlw	0
  7692  016400  6E02               	movwf	(btemp+1)^0,c
  7693  016402  0E80               	movlw	128
  7694  016404                     L5:
  7695  016404  6E03               	movwf	(btemp+2)^0,c
  7696  016406  0EC0               	movlw	192
  7697  016408  6E04               	movwf	(btemp+3)^0,c
  7698  01640A  D0B9               	goto	l2039
  7699  01640C                     l10630:
  7700                           
  7701                           ;bsoc.c: 218:   update_adc_result();
  7702  01640C  ECBF  F0D6         	call	_update_adc_result	;wreg free
  7703                           
  7704                           ;bsoc.c: 219:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  7705  016410  0E00               	movlw	0
  7706  016412  6EE6               	movwf	postinc1,c
  7707  016414  0E04               	movlw	4
  7708  016416  6EE6               	movwf	postinc1,c
  7709  016418  EC28  F0A7         	call	_conv_raw_result	;wreg free
  7710  01641C  0060  F004  F1F3   	movff	btemp,_C+243	;volatile
  7711  016422  0060  F008  F1F4   	movff	btemp+1,_C+244	;volatile
  7712  016428  0060  F00C  F1F5   	movff	btemp+2,_C+245	;volatile
  7713  01642E  0060  F010  F1F6   	movff	btemp+3,_C+246	;volatile
  7714                           
  7715                           ;bsoc.c: 220:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  7716  016434  0E00               	movlw	0
  7717  016436  6EE6               	movwf	postinc1,c
  7718  016438  0E00               	movlw	0
  7719  01643A  6EE6               	movwf	postinc1,c
  7720  01643C  EC28  F0A7         	call	_conv_raw_result	;wreg free
  7721  016440  0060  F004  F1E7   	movff	btemp,_C+231	;volatile
  7722  016446  0060  F008  F1E8   	movff	btemp+1,_C+232	;volatile
  7723  01644C  0060  F00C  F1E9   	movff	btemp+2,_C+233	;volatile
  7724  016452  0060  F010  F1EA   	movff	btemp+3,_C+234	;volatile
  7725                           
  7726                           ;bsoc.c: 222:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  7727  016458  0060  F79F  FFE6   	movff	_C+231,postinc1
  7728  01645E  0060  F7A3  FFE6   	movff	_C+232,postinc1
  7729  016464  0060  F7A7  FFE6   	movff	_C+233,postinc1
  7730  01646A  0060  F7AB  FFE6   	movff	_C+234,postinc1
  7731  016470  0060  F78F  FFE6   	movff	_C+227,postinc1
  7732  016476  0060  F793  FFE6   	movff	_C+228,postinc1
  7733  01647C  0060  F797  FFE6   	movff	_C+229,postinc1
  7734  016482  0060  F79B  FFE6   	movff	_C+230,postinc1
  7735  016488  EC51  F0D5         	call	___flsub	;wreg free
  7736  01648C  0060  F007  FFE6   	movff	btemp,postinc1
  7737  016492  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7738  016498  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7739  01649E  0060  F013  FFE6   	movff	btemp+3,postinc1
  7740  0164A4  0060  F7CF  FFE6   	movff	_C+243,postinc1
  7741  0164AA  0060  F7D3  FFE6   	movff	_C+244,postinc1
  7742  0164B0  0060  F7D7  FFE6   	movff	_C+245,postinc1
  7743  0164B6  0060  F7DB  FFE6   	movff	_C+246,postinc1
  7744  0164BC  0060  F7BF  FFE6   	movff	_C+239,postinc1
  7745  0164C2  0060  F7C3  FFE6   	movff	_C+240,postinc1
  7746  0164C8  0060  F7C7  FFE6   	movff	_C+241,postinc1
  7747  0164CE  0060  F7CB  FFE6   	movff	_C+242,postinc1
  7748  0164D4  EC51  F0D5         	call	___flsub	;wreg free
  7749  0164D8  0060  F007  FFE6   	movff	btemp,postinc1
  7750  0164DE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7751  0164E4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7752  0164EA  0060  F013  FFE6   	movff	btemp+3,postinc1
  7753  0164F0  EC6B  F0A4         	call	___fldiv	;wreg free
  7754  0164F4  0060  F007  FFE6   	movff	btemp,postinc1
  7755  0164FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7756  016500  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7757  016506  0060  F013  FFE6   	movff	btemp+3,postinc1
  7758  01650C  EC09  F0CE         	call	_fabsf	;wreg free
  7759  016510  0060  F004  F184   	movff	btemp,_C+132	;volatile
  7760  016516  0060  F008  F185   	movff	btemp+1,_C+133	;volatile
  7761  01651C  0060  F00C  F186   	movff	btemp+2,_C+134	;volatile
  7762  016522  0060  F010  F187   	movff	btemp+3,_C+135	;volatile
  7763                           
  7764                           ;bsoc.c: 223:   set_load_relay_one(0);
  7765  016528  0E00               	movlw	0
  7766  01652A  6EE6               	movwf	postinc1,c
  7767  01652C  EC2F  F0DB         	call	_set_load_relay_one	;wreg free
  7768                           
  7769                           ;bsoc.c: 224:   set_load_relay_two(0);
  7770  016530  0E00               	movlw	0
  7771  016532  6EE6               	movwf	postinc1,c
  7772  016534  EC27  F0DB         	call	_set_load_relay_two	;wreg free
  7773                           
  7774                           ;bsoc.c: 225:   esr_state = 0;
  7775  016538  6A2D               	clrf	esr_check@esr_state^0,c
  7776                           
  7777                           ;bsoc.c: 226:   return C.esr;
  7778  01653A  0060  F610  F001   	movff	_C+132,btemp	;volatile
  7779  016540  0060  F614  F002   	movff	_C+133,btemp+1	;volatile
  7780  016546  0060  F618  F003   	movff	_C+134,btemp+2	;volatile
  7781  01654C  0060  F61C  F004   	movff	_C+135,btemp+3	;volatile
  7782  016552  D015               	goto	l2039
  7783  016554                     l10652:
  7784  016554  502D               	movf	esr_check@esr_state^0,w,c
  7785  016556  6E0B               	movwf	(btemp+10)^0,c
  7786  016558  6A0C               	clrf	(btemp+11)^0,c
  7787                           
  7788                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7789                           ; Switch size 1, requested type "simple"
  7790                           ; Number of cases is 1, Range of values is 0 to 0
  7791                           ; switch strategies available:
  7792                           ; Name         Instructions Cycles
  7793                           ; simple_byte            4     3 (average)
  7794                           ;	Chosen strategy is simple_byte
  7795  01655A  500C               	movf	(btemp+11)^0,w,c
  7796  01655C  0A00               	xorlw	0	; case 0
  7797  01655E  A4D8               	btfss	status,2,c
  7798  016560  D6AA               	goto	l10578
  7799                           
  7800                           ; Switch size 1, requested type "simple"
  7801                           ; Number of cases is 4, Range of values is 0 to 3
  7802                           ; switch strategies available:
  7803                           ; Name         Instructions Cycles
  7804                           ; simple_byte           13     7 (average)
  7805                           ;	Chosen strategy is simple_byte
  7806  016562  500B               	movf	(btemp+10)^0,w,c
  7807  016564  0A00               	xorlw	0	; case 0
  7808  016566  B4D8               	btfsc	status,2,c
  7809  016568  D6B7               	goto	l10582
  7810  01656A  0A01               	xorlw	1	; case 1
  7811  01656C  B4D8               	btfsc	status,2,c
  7812  01656E  D6C5               	goto	l10588
  7813  016570  0A03               	xorlw	3	; case 2
  7814  016572  B4D8               	btfsc	status,2,c
  7815  016574  D6F6               	goto	l10604
  7816  016576  0A01               	xorlw	1	; case 3
  7817  016578  B4D8               	btfsc	status,2,c
  7818  01657A  D734               	goto	l10622
  7819  01657C  D69C               	goto	l10578
  7820  01657E                     l2039:
  7821                           
  7822                           ; _esr_check: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  7823  01657E  0EFB               	movlw	251
  7824  016580  26E1               	addwf	fsr1l,f,c
  7825  016582  0EFF               	movlw	255
  7826  016584  22E2               	addwfc	fsr1h,f,c
  7827  016586  0012               	return		;funcret
  7828  016588                     __end_of_esr_check:
  7829                           	opt callstack 0
  7830                           
  7831 ;; *************** function _update_adc_result *****************
  7832 ;; Defined at:
  7833 ;;		line 71 in file "daq.c"
  7834 ;; Parameters:    Size  Location     Type
  7835 ;;		None
  7836 ;; Auto vars:     Size  Location     Type
  7837 ;;		None
  7838 ;; Return value:  Size  Location     Type
  7839 ;;                  1  [STACK] _Bool 
  7840 ;; Registers used:
  7841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  7842 ;; Tracked objects:
  7843 ;;		On entry : 0/0
  7844 ;;		On exit  : 0/0
  7845 ;;		Unchanged: 0/0
  7846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7851 ;;Total ram usage:        0 bytes
  7852 ;; Hardware stack levels used:    1
  7853 ;; Hardware stack levels required when called:   17
  7854 ;; This function calls:
  7855 ;;		_StartTimer
  7856 ;;		_TimerDone
  7857 ;;		_check_adc_scan
  7858 ;;		_clear_adc_scan
  7859 ;;		_start_adc_scan
  7860 ;; This function is called by:
  7861 ;;		_esr_check
  7862 ;; This function uses a reentrant model
  7863 ;;
  7864                           
  7865                           	psect	text17
  7866  01AD7E                     __ptext17:
  7867                           	opt callstack 0
  7868  01AD7E                     _update_adc_result:
  7869                           	opt callstack 12
  7870                           
  7871                           ;daq.c: 73:  if (R.done) {
  7872                           
  7873                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7874                           ;incstack = 0
  7875  01AD7E  0100               	movlb	0	; () banked
  7876  01AD80  51EB               	movf	(_R+39)& (0+255),w,b	;volatile
  7877  01AD82  B4D8               	btfsc	status,2,c
  7878  01AD84  0012               	return	
  7879                           
  7880                           ; BSR set to: 0
  7881                           ;daq.c: 74:   clear_adc_scan();
  7882  01AD86  EC8D  F0DB         	call	_clear_adc_scan	;wreg free
  7883                           
  7884                           ; BSR set to: 0
  7885                           ;daq.c: 75:   start_adc_scan();
  7886  01AD8A  ECF8  F0D2         	call	_start_adc_scan	;wreg free
  7887                           
  7888                           ;daq.c: 76:   StartTimer(TMR_ADC, 200);
  7889  01AD8E  0EC8               	movlw	200
  7890  01AD90  6EE6               	movwf	postinc1,c
  7891  01AD92  0E00               	movlw	0
  7892  01AD94  6EE6               	movwf	postinc1,c
  7893  01AD96  0E01               	movlw	1
  7894  01AD98  6EE6               	movwf	postinc1,c
  7895  01AD9A  EC20  F0D6         	call	_StartTimer	;wreg free
  7896  01AD9E                     l10186:
  7897  01AD9E  0E01               	movlw	1
  7898  01ADA0  6EE6               	movwf	postinc1,c
  7899  01ADA2  ECA1  F0D8         	call	_TimerDone	;wreg free
  7900  01ADA6  5001               	movf	btemp^0,w,c
  7901  01ADA8  A4D8               	btfss	status,2,c
  7902  01ADAA  0012               	return	
  7903  01ADAC  EC7D  F0DB         	call	_check_adc_scan	;wreg free
  7904  01ADB0  5001               	movf	btemp^0,w,c
  7905  01ADB2  A4D8               	btfss	status,2,c
  7906  01ADB4  0012               	return	
  7907  01ADB6  D7F3               	goto	l10186
  7908  01ADB8                     __end_of_update_adc_result:
  7909                           	opt callstack 0
  7910                           
  7911 ;; *************** function _start_adc_scan *****************
  7912 ;; Defined at:
  7913 ;;		line 32 in file "daq.c"
  7914 ;; Parameters:    Size  Location     Type
  7915 ;;		None
  7916 ;; Auto vars:     Size  Location     Type
  7917 ;;		None
  7918 ;; Return value:  Size  Location     Type
  7919 ;;                  1  [STACK] _Bool 
  7920 ;; Registers used:
  7921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  7922 ;; Tracked objects:
  7923 ;;		On entry : 0/0
  7924 ;;		On exit  : 1/0
  7925 ;;		Unchanged: 0/0
  7926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7931 ;;Total ram usage:        0 bytes
  7932 ;; Hardware stack levels used:    1
  7933 ;; Hardware stack levels required when called:   16
  7934 ;; This function calls:
  7935 ;;		_ADCC_DischargeSampleCapacitor
  7936 ;;		_ADCC_SetADIInterruptHandler
  7937 ;;		_ADCC_SetADTIInterruptHandler
  7938 ;;		_ADCC_StartConversion
  7939 ;; This function is called by:
  7940 ;;		_main
  7941 ;;		_update_adc_result
  7942 ;; This function uses a reentrant model
  7943 ;;
  7944                           
  7945                           	psect	text18
  7946  01A5F0                     __ptext18:
  7947                           	opt callstack 0
  7948  01A5F0                     _start_adc_scan:
  7949                           	opt callstack 14
  7950                           
  7951                           ;daq.c: 34:  if (R.done)
  7952                           
  7953                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7954                           ;incstack = 0
  7955  01A5F0  0100               	movlb	0	; () banked
  7956  01A5F2  51EB               	movf	(_R+39)& (0+255),w,b	;volatile
  7957  01A5F4  A4D8               	btfss	status,2,c
  7958  01A5F6  0012               	return	
  7959                           
  7960                           ; BSR set to: 0
  7961                           ;daq.c: 37:  R.scan_index = 0;
  7962  01A5F8  6BE8               	clrf	(_R+36)& (0+255),b	;volatile
  7963                           
  7964                           ; BSR set to: 0
  7965                           ;daq.c: 38:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  7966  01A5FA  013A               	movlb	58	; () banked
  7967  01A5FC  5140               	movf	64,w,b	;volatile
  7968  01A5FE  006E F940  F001    	movff	14928,btemp	;volatile
  7969  01A604  6A02               	clrf	(btemp+1)^0,c
  7970  01A606  0060  F004  F002   	movff	btemp,btemp+1
  7971  01A60C  6A01               	clrf	btemp^0,c
  7972  01A60E  2601               	addwf	btemp^0,f,c
  7973  01A610  0E00               	movlw	0
  7974  01A612  2202               	addwfc	(btemp+1)^0,f,c
  7975  01A614  0E77               	movlw	119
  7976  01A616  1401               	andwf	btemp^0,w,c
  7977  01A618  0100               	movlb	0	; () banked
  7978  01A61A  6FE9               	movwf	(_R+37)& (0+255),b	;volatile
  7979  01A61C  0E3C               	movlw	60
  7980  01A61E  1402               	andwf	(btemp+1)^0,w,c
  7981  01A620  6FEA               	movwf	(_R+38)& (0+255),b	;volatile
  7982                           
  7983                           ; BSR set to: 0
  7984                           ;daq.c: 39:  ADCC_SetADIInterruptHandler(adc_int_handler);
  7985  01A622  0E42               	movlw	low _adc_int_handler
  7986  01A624  6EE6               	movwf	postinc1,c
  7987  01A626  0EB7               	movlw	high _adc_int_handler
  7988  01A628  6EE6               	movwf	postinc1,c
  7989  01A62A  0E01               	movlw	low (_adc_int_handler shr (0+16))
  7990  01A62C  6EE6               	movwf	postinc1,c
  7991  01A62E  EC69  F0D9         	call	_ADCC_SetADIInterruptHandler	;wreg free
  7992                           
  7993                           ;daq.c: 40:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  7994  01A632  0ECC               	movlw	low _adc_int_t_handler
  7995  01A634  6EE6               	movwf	postinc1,c
  7996  01A636  0EA3               	movlw	high _adc_int_t_handler
  7997  01A638  6EE6               	movwf	postinc1,c
  7998  01A63A  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  7999  01A63C  6EE6               	movwf	postinc1,c
  8000  01A63E  EC55  F0D9         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  8001                           
  8002                           ;daq.c: 41:  ADCC_DischargeSampleCapacitor();
  8003  01A642  EC79  F0DB         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  8004                           
  8005                           ; BSR set to: 62
  8006                           ;daq.c: 42:  ADCC_StartConversion(R.scan_index & 0xf);
  8007  01A646  0100               	movlb	0	; () banked
  8008  01A648  51E8               	movf	(_R+36)& (0+255),w,b	;volatile
  8009  01A64A  0B0F               	andlw	15
  8010  01A64C  6EE6               	movwf	postinc1,c
  8011  01A64E  EC1E  F0DB         	call	_ADCC_StartConversion	;wreg free
  8012                           
  8013                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8014  01A652  0012               	return		;funcret
  8015  01A654                     __end_of_start_adc_scan:
  8016                           	opt callstack 0
  8017                           
  8018 ;; *************** function _ADCC_StartConversion *****************
  8019 ;; Defined at:
  8020 ;;		line 128 in file "mcc_generated_files/adcc.c"
  8021 ;; Parameters:    Size  Location     Type
  8022 ;;  channel         1  [STACK] enum E16136
  8023 ;; Auto vars:     Size  Location     Type
  8024 ;;		None
  8025 ;; Return value:  Size  Location     Type
  8026 ;;                  1  [STACK] void 
  8027 ;; Registers used:
  8028 ;;		fsr1l, fsr1h
  8029 ;; Tracked objects:
  8030 ;;		On entry : 3F/0
  8031 ;;		On exit  : 3F/3E
  8032 ;;		Unchanged: 0/0
  8033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8038 ;;Total ram usage:        0 bytes
  8039 ;; Hardware stack levels used:    1
  8040 ;; Hardware stack levels required when called:   15
  8041 ;; This function calls:
  8042 ;;		Nothing
  8043 ;; This function is called by:
  8044 ;;		_start_adc_scan
  8045 ;;		_adc_int_t_handler
  8046 ;; This function uses a reentrant model
  8047 ;;
  8048                           
  8049                           	psect	text19
  8050  01B63C                     __ptext19:
  8051                           	opt callstack 0
  8052  01B63C                     _ADCC_StartConversion:
  8053                           	opt callstack 0
  8054                           
  8055                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  8056                           ;stkvar	_channel @ sp[(0)+-1]
  8057                           
  8058                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8059                           ;incstack = 0
  8060 ;; hardware stack exceeded
  8061  01B63C  0EFF               	movlw	-1
  8062  01B63E  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  8063                           
  8064                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  8065  01B644  013E               	movlb	62	; () banked
  8066  01B646  8FF8               	bsf	248,7,b	;volatile
  8067                           
  8068                           ; BSR set to: 62
  8069                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  8070  01B648  81F8               	bsf	248,0,b	;volatile
  8071                           
  8072                           ; BSR set to: 62
  8073                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  8074  01B64A  52E5               	movf	postdec1,f,c
  8075  01B64C  0012               	return		;funcret
  8076  01B64E                     __end_of_ADCC_StartConversion:
  8077                           	opt callstack 0
  8078                           
  8079 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  8080 ;; Defined at:
  8081 ;;		line 189 in file "mcc_generated_files/adcc.c"
  8082 ;; Parameters:    Size  Location     Type
  8083 ;;		None
  8084 ;; Auto vars:     Size  Location     Type
  8085 ;;		None
  8086 ;; Return value:  Size  Location     Type
  8087 ;;                  1  [STACK] void 
  8088 ;; Registers used:
  8089 ;;		wreg, status,2
  8090 ;; Tracked objects:
  8091 ;;		On entry : 0/0
  8092 ;;		On exit  : 3F/3E
  8093 ;;		Unchanged: 0/0
  8094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8099 ;;Total ram usage:        0 bytes
  8100 ;; Hardware stack levels used:    1
  8101 ;; Hardware stack levels required when called:   15
  8102 ;; This function calls:
  8103 ;;		Nothing
  8104 ;; This function is called by:
  8105 ;;		_start_adc_scan
  8106 ;;		_adc_int_t_handler
  8107 ;; This function uses a reentrant model
  8108 ;;
  8109                           
  8110                           	psect	text20
  8111  01B6F2                     __ptext20:
  8112                           	opt callstack 0
  8113  01B6F2                     _ADCC_DischargeSampleCapacitor:
  8114                           	opt callstack 0
  8115                           
  8116                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  8117                           
  8118                           ; BSR set to: 62
  8119                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8120                           ;incstack = 0
  8121 ;; hardware stack exceeded
  8122  01B6F2  0E3B               	movlw	59
  8123  01B6F4  013E               	movlb	62	; () banked
  8124  01B6F6  6FF1               	movwf	241,b	;volatile
  8125                           
  8126                           ; BSR set to: 62
  8127                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  8128  01B6F8  0012               	return		;funcret
  8129  01B6FA                     __end_of_ADCC_DischargeSampleCapacitor:
  8130                           	opt callstack 0
  8131                           
  8132 ;; *************** function _clear_adc_scan *****************
  8133 ;; Defined at:
  8134 ;;		line 63 in file "daq.c"
  8135 ;; Parameters:    Size  Location     Type
  8136 ;;		None
  8137 ;; Auto vars:     Size  Location     Type
  8138 ;;		None
  8139 ;; Return value:  Size  Location     Type
  8140 ;;                  1  [STACK] void 
  8141 ;; Registers used:
  8142 ;;		None
  8143 ;; Tracked objects:
  8144 ;;		On entry : 0/0
  8145 ;;		On exit  : 3F/0
  8146 ;;		Unchanged: 0/0
  8147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8152 ;;Total ram usage:        0 bytes
  8153 ;; Hardware stack levels used:    1
  8154 ;; Hardware stack levels required when called:   15
  8155 ;; This function calls:
  8156 ;;		Nothing
  8157 ;; This function is called by:
  8158 ;;		_main
  8159 ;;		_update_adc_result
  8160 ;; This function uses a reentrant model
  8161 ;;
  8162                           
  8163                           	psect	text21
  8164  01B71A                     __ptext21:
  8165                           	opt callstack 0
  8166  01B71A                     _clear_adc_scan:
  8167                           	opt callstack 13
  8168                           
  8169                           ;daq.c: 65:  R.done = 0;
  8170                           
  8171                           ; BSR set to: 62
  8172                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8173                           ;incstack = 0
  8174  01B71A  0100               	movlb	0	; () banked
  8175  01B71C  6BEB               	clrf	(_R+39)& (0+255),b	;volatile
  8176                           
  8177                           ; BSR set to: 0
  8178                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8179  01B71E  0012               	return		;funcret
  8180  01B720                     __end_of_clear_adc_scan:
  8181                           	opt callstack 0
  8182                           
  8183 ;; *************** function _check_adc_scan *****************
  8184 ;; Defined at:
  8185 ;;		line 55 in file "daq.c"
  8186 ;; Parameters:    Size  Location     Type
  8187 ;;		None
  8188 ;; Auto vars:     Size  Location     Type
  8189 ;;		None
  8190 ;; Return value:  Size  Location     Type
  8191 ;;                  1  [STACK] _Bool 
  8192 ;; Registers used:
  8193 ;;		btemp
  8194 ;; Tracked objects:
  8195 ;;		On entry : 0/0
  8196 ;;		On exit  : 0/0
  8197 ;;		Unchanged: 0/0
  8198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8203 ;;Total ram usage:        0 bytes
  8204 ;; Hardware stack levels used:    1
  8205 ;; Hardware stack levels required when called:   15
  8206 ;; This function calls:
  8207 ;;		Nothing
  8208 ;; This function is called by:
  8209 ;;		_main
  8210 ;;		_update_adc_result
  8211 ;; This function uses a reentrant model
  8212 ;;
  8213                           
  8214                           	psect	text22
  8215  01B6FA                     __ptext22:
  8216                           	opt callstack 0
  8217  01B6FA                     _check_adc_scan:
  8218                           	opt callstack 13
  8219                           
  8220                           ;daq.c: 57:  return R.done;
  8221                           
  8222                           ; BSR set to: 0
  8223                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8224                           ;incstack = 0
  8225  01B6FA  0060  F3AC  F001   	movff	_R+39,btemp	;volatile
  8226                           
  8227                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8228  01B700  0012               	return		;funcret
  8229  01B702                     __end_of_check_adc_scan:
  8230                           	opt callstack 0
  8231                           
  8232 ;; *************** function _set_load_relay_two *****************
  8233 ;; Defined at:
  8234 ;;		line 128 in file "mbmc.c"
  8235 ;; Parameters:    Size  Location     Type
  8236 ;;  mode            1  [STACK] _Bool 
  8237 ;; Auto vars:     Size  Location     Type
  8238 ;;		None
  8239 ;; Return value:  Size  Location     Type
  8240 ;;                  1  [STACK] void 
  8241 ;; Registers used:
  8242 ;;		wreg, fsr1l, fsr1h
  8243 ;; Tracked objects:
  8244 ;;		On entry : 0/0
  8245 ;;		On exit  : 0/0
  8246 ;;		Unchanged: 0/0
  8247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8252 ;;Total ram usage:        0 bytes
  8253 ;; Hardware stack levels used:    1
  8254 ;; Hardware stack levels required when called:   15
  8255 ;; This function calls:
  8256 ;;		Nothing
  8257 ;; This function is called by:
  8258 ;;		_main
  8259 ;;		_esr_check
  8260 ;; This function uses a reentrant model
  8261 ;;
  8262                           
  8263                           	psect	text23
  8264  01B64E                     __ptext23:
  8265                           	opt callstack 0
  8266  01B64E                     _set_load_relay_two:
  8267                           	opt callstack 15
  8268                           
  8269                           ;mbmc.c: 128: void set_load_relay_two(_Bool mode);mbmc.c: 129: {;mbmc.c: 130:  LATDbits.
      +                          LATD5 = mode;
  8270                           ;stkvar	_mode @ sp[(0)+-1]
  8271                           
  8272                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8273                           ;incstack = 0
  8274  01B64E  0EFF               	movlw	-1
  8275  01B650  B0E3               	btfsc	plusw1,0,c
  8276  01B652  D002               	bra	u9045
  8277  01B654  9ABD               	bcf	189,5,c	;volatile
  8278  01B656  D001               	bra	u9046
  8279  01B658                     u9045:
  8280  01B658  8ABD               	bsf	189,5,c	;volatile
  8281  01B65A                     u9046:
  8282                           
  8283                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8284  01B65A  52E5               	movf	postdec1,f,c
  8285  01B65C  0012               	return		;funcret
  8286  01B65E                     __end_of_set_load_relay_two:
  8287                           	opt callstack 0
  8288                           
  8289 ;; *************** function _set_load_relay_one *****************
  8290 ;; Defined at:
  8291 ;;		line 123 in file "mbmc.c"
  8292 ;; Parameters:    Size  Location     Type
  8293 ;;  mode            1  [STACK] _Bool 
  8294 ;; Auto vars:     Size  Location     Type
  8295 ;;		None
  8296 ;; Return value:  Size  Location     Type
  8297 ;;                  1  [STACK] void 
  8298 ;; Registers used:
  8299 ;;		wreg, fsr1l, fsr1h
  8300 ;; Tracked objects:
  8301 ;;		On entry : 0/0
  8302 ;;		On exit  : 0/0
  8303 ;;		Unchanged: 0/0
  8304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8309 ;;Total ram usage:        0 bytes
  8310 ;; Hardware stack levels used:    1
  8311 ;; Hardware stack levels required when called:   15
  8312 ;; This function calls:
  8313 ;;		Nothing
  8314 ;; This function is called by:
  8315 ;;		_main
  8316 ;;		_esr_check
  8317 ;; This function uses a reentrant model
  8318 ;;
  8319                           
  8320                           	psect	text24
  8321  01B65E                     __ptext24:
  8322                           	opt callstack 0
  8323  01B65E                     _set_load_relay_one:
  8324                           	opt callstack 15
  8325                           
  8326                           ;mbmc.c: 123: void set_load_relay_one(_Bool mode);mbmc.c: 124: {;mbmc.c: 125:  LATDbits.
      +                          LATD4 = mode;
  8327                           ;stkvar	_mode @ sp[(0)+-1]
  8328                           
  8329                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8330                           ;incstack = 0
  8331  01B65E  0EFF               	movlw	-1
  8332  01B660  B0E3               	btfsc	plusw1,0,c
  8333  01B662  D002               	bra	u9035
  8334  01B664  98BD               	bcf	189,4,c	;volatile
  8335  01B666  D001               	bra	u9036
  8336  01B668                     u9035:
  8337  01B668  88BD               	bsf	189,4,c	;volatile
  8338  01B66A                     u9036:
  8339                           
  8340                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8341  01B66A  52E5               	movf	postdec1,f,c
  8342  01B66C  0012               	return		;funcret
  8343  01B66E                     __end_of_set_load_relay_one:
  8344                           	opt callstack 0
  8345                           
  8346 ;; *************** function _eaDogM_WriteCommand *****************
  8347 ;; Defined at:
  8348 ;;		line 175 in file "eadog.c"
  8349 ;; Parameters:    Size  Location     Type
  8350 ;;  cmd             1  [STACK] const unsigned char 
  8351 ;; Auto vars:     Size  Location     Type
  8352 ;;		None
  8353 ;; Return value:  Size  Location     Type
  8354 ;;                  1  [STACK] void 
  8355 ;; Registers used:
  8356 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8357 ;; Tracked objects:
  8358 ;;		On entry : 3F/3D
  8359 ;;		On exit  : 3F/0
  8360 ;;		Unchanged: 0/0
  8361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8366 ;;Total ram usage:        0 bytes
  8367 ;; Hardware stack levels used:    1
  8368 ;; Hardware stack levels required when called:   25
  8369 ;; This function calls:
  8370 ;;		_send_lcd_cmd_dma
  8371 ;; This function is called by:
  8372 ;;		_main
  8373 ;; This function uses a reentrant model
  8374 ;;
  8375                           
  8376                           	psect	text25
  8377  01B67E                     __ptext25:
  8378                           	opt callstack 0
  8379  01B67E                     _eaDogM_WriteCommand:
  8380                           	opt callstack 5
  8381                           
  8382                           ;eadog.c: 175: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 176: {;eadog.c: 177:
      +                            send_lcd_cmd_dma(cmd);
  8383                           ;stkvar	_cmd @ sp[(0)+-1]
  8384                           
  8385                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8386                           ;incstack = 0
  8387  01B67E  0EFF               	movlw	-1
  8388  01B680  50E3               	movf	plusw1,w,c
  8389  01B682  6EE6               	movwf	postinc1,c
  8390  01B684  EC43  F0D4         	call	_send_lcd_cmd_dma	;wreg free
  8391                           
  8392                           ; BSR set to: 0
  8393                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  8394  01B688  52E5               	movf	postdec1,f,c
  8395  01B68A  0012               	return		;funcret
  8396  01B68C                     __end_of_eaDogM_WriteCommand:
  8397                           	opt callstack 0
  8398                           
  8399 ;; *************** function _convert_adc_data *****************
  8400 ;; Defined at:
  8401 ;;		line 51 in file "mbmc.c"
  8402 ;; Parameters:    Size  Location     Type
  8403 ;;		None
  8404 ;; Auto vars:     Size  Location     Type
  8405 ;;  i               1  [STACK] unsigned char 
  8406 ;; Return value:  Size  Location     Type
  8407 ;;                  1  [STACK] void 
  8408 ;; Registers used:
  8409 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8410 ;; Tracked objects:
  8411 ;;		On entry : 0/0
  8412 ;;		On exit  : 0/0
  8413 ;;		Unchanged: 0/0
  8414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8419 ;;Total ram usage:        0 bytes
  8420 ;; Hardware stack levels used:    1
  8421 ;; Hardware stack levels required when called:   18
  8422 ;; This function calls:
  8423 ;;		_conv_raw_result
  8424 ;;		_lp_filter
  8425 ;; This function is called by:
  8426 ;;		_main
  8427 ;; This function uses a reentrant model
  8428 ;;
  8429                           
  8430                           	psect	text26
  8431  019B5A                     __ptext26:
  8432                           	opt callstack 0
  8433  019B5A                     _convert_adc_data:
  8434                           	opt callstack 0
  8435                           
  8436                           ; BSR set to: 0
  8437                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8438  019B5A  52E6               	movf	postinc1,f,c
  8439                           
  8440                           ;mbmc.c: 53:  uint8_t i = 0;
  8441                           ;stkvar	_i @ sp[(-1)+0]
  8442                           
  8443                           ;incstack = 0
  8444  019B5C  0EFF               	movlw	-1
  8445  019B5E  6AE3               	clrf	plusw1,c
  8446  019B60                     l10664:
  8447                           
  8448                           ;mbmc.c: 56:   if (V.calib) {
  8449  019B60  0102               	movlb	2	; () banked
  8450  019B62  51AC               	movf	(_V+172)& (0+255),w,b	;volatile
  8451  019B64  B4D8               	btfsc	status,2,c
  8452  019B66  D01B               	goto	l10668
  8453                           
  8454                           ; BSR set to: 2
  8455                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  8456  019B68  0E01               	movlw	1
  8457  019B6A  6EE6               	movwf	postinc1,c
  8458                           
  8459                           ;stkvar	_i @ sp[(-2)+0]
  8460  019B6C  0EFE               	movlw	-2
  8461  019B6E  50E3               	movf	plusw1,w,c
  8462  019B70  6EE6               	movwf	postinc1,c
  8463  019B72  0E01               	movlw	1
  8464  019B74  6EE6               	movwf	postinc1,c
  8465                           
  8466                           ;stkvar	_i @ sp[(-4)+0]
  8467  019B76  0EFC               	movlw	-4
  8468  019B78  50E3               	movf	plusw1,w,c
  8469  019B7A  6EE6               	movwf	postinc1,c
  8470  019B7C  EC28  F0A7         	call	_conv_raw_result	;wreg free
  8471  019B80  0060  F007  FFE6   	movff	btemp,postinc1
  8472  019B86  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8473  019B8C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8474  019B92  0060  F013  FFE6   	movff	btemp+3,postinc1
  8475  019B98  ECEE  F0BE         	call	_lp_filter	;wreg free
  8476  019B9C  D01A               	goto	L6
  8477  019B9E                     l10668:
  8478                           
  8479                           ; BSR set to: 2
  8480                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  8481  019B9E  0E00               	movlw	0
  8482  019BA0  6EE6               	movwf	postinc1,c
  8483                           
  8484                           ;stkvar	_i @ sp[(-2)+0]
  8485  019BA2  0EFE               	movlw	-2
  8486  019BA4  50E3               	movf	plusw1,w,c
  8487  019BA6  6EE6               	movwf	postinc1,c
  8488  019BA8  0E00               	movlw	0
  8489  019BAA  6EE6               	movwf	postinc1,c
  8490                           
  8491                           ;stkvar	_i @ sp[(-4)+0]
  8492  019BAC  0EFC               	movlw	-4
  8493  019BAE  50E3               	movf	plusw1,w,c
  8494  019BB0  6EE6               	movwf	postinc1,c
  8495  019BB2  EC28  F0A7         	call	_conv_raw_result	;wreg free
  8496  019BB6  0060  F007  FFE6   	movff	btemp,postinc1
  8497  019BBC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8498  019BC2  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8499  019BC8  0060  F013  FFE6   	movff	btemp+3,postinc1
  8500  019BCE  ECEE  F0BE         	call	_lp_filter	;wreg free
  8501  019BD2                     L6:
  8502                           
  8503                           ;stkvar	_i @ sp[(-1)+0]
  8504  019BD2  0EFF               	movlw	-1
  8505  019BD4  50E3               	movf	plusw1,w,c
  8506  019BD6  0D04               	mullw	4
  8507  019BD8  0E00               	movlw	low _C
  8508  019BDA  24F3               	addwf	243,w,c
  8509  019BDC  6ED9               	movwf	fsr2l,c
  8510  019BDE  0E01               	movlw	high _C
  8511  019BE0  20F4               	addwfc	prodh,w,c
  8512  019BE2  6EDA               	movwf	fsr2h,c
  8513  019BE4  0060  F007  FFDE   	movff	btemp,postinc2
  8514  019BEA  0060  F00B  FFDE   	movff	btemp+1,postinc2
  8515  019BF0  0060  F00F  FFDE   	movff	btemp+2,postinc2
  8516  019BF6  0060  F013  FFDE   	movff	btemp+3,postinc2
  8517                           
  8518                           ;mbmc.c: 61:  } while (++i < 16);
  8519                           ;stkvar	_i @ sp[(-1)+0]
  8520  019BFC  0EFF               	movlw	-1
  8521  019BFE  2AE3               	incf	plusw1,f,c
  8522  019C00  0EFF               	movlw	-1
  8523  019C02  006F FF8C  F001    	movff	plusw1,btemp
  8524  019C08  0E0F               	movlw	15
  8525  019C0A  6401               	cpfsgt	btemp^0,c
  8526  019C0C  D7A9               	goto	l10664
  8527                           
  8528                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  8529  019C0E  52E5               	movf	postdec1,f,c
  8530  019C10  0012               	return		;funcret
  8531  019C12                     __end_of_convert_adc_data:
  8532                           	opt callstack 0
  8533                           
  8534 ;; *************** function _clear_hid_pflags *****************
  8535 ;; Defined at:
  8536 ;;		line 51 in file "hid.c"
  8537 ;; Parameters:    Size  Location     Type
  8538 ;;  h               1  [STACK] PTR struct H_data
  8539 ;;		 -> H(7), 
  8540 ;; Auto vars:     Size  Location     Type
  8541 ;;		None
  8542 ;; Return value:  Size  Location     Type
  8543 ;;                  1  [STACK] void 
  8544 ;; Registers used:
  8545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8546 ;; Tracked objects:
  8547 ;;		On entry : 3F/0
  8548 ;;		On exit  : 0/0
  8549 ;;		Unchanged: 0/0
  8550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8555 ;;Total ram usage:        0 bytes
  8556 ;; Hardware stack levels used:    1
  8557 ;; Hardware stack levels required when called:   15
  8558 ;; This function calls:
  8559 ;;		Nothing
  8560 ;; This function is called by:
  8561 ;;		_main
  8562 ;; This function uses a reentrant model
  8563 ;;
  8564                           
  8565                           	psect	text27
  8566  01B398                     __ptext27:
  8567                           	opt callstack 0
  8568  01B398                     _clear_hid_pflags:
  8569                           	opt callstack 15
  8570                           
  8571                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  8572                           ;stkvar	_h @ sp[(0)+-1]
  8573                           
  8574                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8575                           ;incstack = 0
  8576  01B398  0EFF               	movlw	-1
  8577  01B39A  50E3               	movf	plusw1,w,c
  8578  01B39C  6ED9               	movwf	fsr2l,c
  8579  01B39E  6ADA               	clrf	fsr2h,c
  8580  01B3A0  0E03               	movlw	3
  8581  01B3A2  26D9               	addwf	fsr2l,f,c
  8582  01B3A4  0E00               	movlw	0
  8583  01B3A6  6EDF               	movwf	indf2,c
  8584                           
  8585                           ;hid.c: 54:  h->enter_p = SW_OFF;
  8586                           ;stkvar	_h @ sp[(0)+-1]
  8587  01B3A8  0EFF               	movlw	-1
  8588  01B3AA  50E3               	movf	plusw1,w,c
  8589  01B3AC  6ED9               	movwf	fsr2l,c
  8590  01B3AE  6ADA               	clrf	fsr2h,c
  8591  01B3B0  0E05               	movlw	5
  8592  01B3B2  26D9               	addwf	fsr2l,f,c
  8593  01B3B4  0E00               	movlw	0
  8594  01B3B6  6EDF               	movwf	indf2,c
  8595                           
  8596                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  8597  01B3B8  52E5               	movf	postdec1,f,c
  8598  01B3BA  0012               	return		;funcret
  8599  01B3BC                     __end_of_clear_hid_pflags:
  8600                           	opt callstack 0
  8601                           
  8602 ;; *************** function _check_help *****************
  8603 ;; Defined at:
  8604 ;;		line 40 in file "mconfig.c"
  8605 ;; Parameters:    Size  Location     Type
  8606 ;;  flipper         1  [STACK] const _Bool 
  8607 ;; Auto vars:     Size  Location     Type
  8608 ;;  estatus         1    0        _Bool 
  8609 ;; Return value:  Size  Location     Type
  8610 ;;                  1  [STACK] _Bool 
  8611 ;; Registers used:
  8612 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8613 ;; Tracked objects:
  8614 ;;		On entry : 3F/2
  8615 ;;		On exit  : 0/0
  8616 ;;		Unchanged: 0/0
  8617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8622 ;;Total ram usage:        0 bytes
  8623 ;; Hardware stack levels used:    1
  8624 ;; Hardware stack levels required when called:   27
  8625 ;; This function calls:
  8626 ;;		_StartTimer
  8627 ;;		_TimerDone
  8628 ;;		_display_help
  8629 ;;		_display_info
  8630 ;;		_get_vterm_ptr
  8631 ;;		_help_button
  8632 ;;		_mode_lamp_bright
  8633 ;;		_mode_lamp_dim
  8634 ;;		_set_display_info
  8635 ;;		_set_temp_display_help
  8636 ;;		_set_vterm
  8637 ;;		_sprintf
  8638 ;;		_update_lcd
  8639 ;;		_vterm_dump
  8640 ;; This function is called by:
  8641 ;;		_main
  8642 ;; This function uses a reentrant model
  8643 ;;
  8644                           
  8645                           	psect	text28
  8646  0177C6                     __ptext28:
  8647                           	opt callstack 0
  8648  0177C6                     _check_help:
  8649                           	opt callstack 3
  8650                           
  8651                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  8652                           
  8653                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8654                           ;incstack = 0
  8655  0177C6  ECDC  F0D6         	call	_help_button	;wreg free
  8656  0177CA  5001               	movf	btemp^0,w,c
  8657  0177CC  B4D8               	btfsc	status,2,c
  8658  0177CE  D0D0               	goto	l12518
  8659  0177D0  EC81  F0DB         	call	_display_info	;wreg free
  8660  0177D4  0401               	decf	btemp^0,w,c
  8661  0177D6  B4D8               	btfsc	status,2,c
  8662  0177D8  D0CB               	goto	l12518
  8663                           
  8664                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  8665  0177DA  0EDC               	movlw	220
  8666  0177DC  6EE6               	movwf	postinc1,c
  8667  0177DE  0E05               	movlw	5
  8668  0177E0  6EE6               	movwf	postinc1,c
  8669  0177E2  0E0B               	movlw	11
  8670  0177E4  6EE6               	movwf	postinc1,c
  8671  0177E6  EC20  F0D6         	call	_StartTimer	;wreg free
  8672                           
  8673                           ;mconfig.c: 48:   if (V.debug)
  8674  0177EA  0102               	movlb	2	; () banked
  8675  0177EC  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  8676                           
  8677                           ; BSR set to: 2
  8678                           ;mconfig.c: 49:    vterm_dump();
  8679  0177EE  ECCA  F0C6         	call	_vterm_dump	;wreg free
  8680                           
  8681                           ;mconfig.c: 51:   set_vterm(1);
  8682  0177F2  0E01               	movlw	1
  8683  0177F4  6EE6               	movwf	postinc1,c
  8684  0177F6  EC68  F0DA         	call	_set_vterm	;wreg free
  8685                           
  8686                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  8687  0177FA  EC81  F0DB         	call	_display_info	;wreg free
  8688  0177FE  5001               	movf	btemp^0,w,c
  8689  017800  6EE6               	movwf	postinc1,c
  8690  017802  EC37  F0DB         	call	_set_temp_display_help	;wreg free
  8691                           
  8692                           ; BSR set to: 2
  8693                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  8694  017806  0E01               	movlw	1
  8695  017808  6EE6               	movwf	postinc1,c
  8696  01780A  EC77  F0DA         	call	_set_display_info	;wreg free
  8697                           
  8698                           ;mconfig.c: 54:   if (flipper) {
  8699                           ;stkvar	_flipper @ sp[(0)+-1]
  8700  01780E  0EFF               	movlw	-1
  8701  017810  50E3               	movf	plusw1,w,c
  8702  017812  B4D8               	btfsc	status,2,c
  8703  017814  D019               	goto	l12504
  8704                           
  8705                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  8706  017816  0EB2               	movlw	low STR_46
  8707  017818  6EE6               	movwf	postinc1,c
  8708  01781A  0EFF               	movlw	high STR_46
  8709  01781C  6EE6               	movwf	postinc1,c
  8710  01781E  0E02               	movlw	low STR_48
  8711  017820  6EE6               	movwf	postinc1,c
  8712  017822  0EFE               	movlw	high STR_48
  8713  017824  6EE6               	movwf	postinc1,c
  8714  017826  0E01               	movlw	1
  8715  017828  6EE6               	movwf	postinc1,c
  8716  01782A  0E00               	movlw	0
  8717  01782C  6EE6               	movwf	postinc1,c
  8718  01782E  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  8719  017832  0060  F007  FFE6   	movff	btemp,postinc1
  8720  017838  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8721  01783E  0E06               	movlw	6
  8722  017840  6EE6               	movwf	postinc1,c
  8723  017842  EC18  F0CA         	call	_sprintf	;wreg free
  8724                           
  8725                           ;mconfig.c: 56:   } else {
  8726  017846  D018               	goto	l1662
  8727  017848                     l12504:
  8728                           
  8729                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  8730  017848  0EC8               	movlw	low STR_47
  8731  01784A  6EE6               	movwf	postinc1,c
  8732  01784C  0EFF               	movlw	high STR_47
  8733  01784E  6EE6               	movwf	postinc1,c
  8734  017850  0E02               	movlw	low STR_48
  8735  017852  6EE6               	movwf	postinc1,c
  8736  017854  0EFE               	movlw	high STR_48
  8737  017856  6EE6               	movwf	postinc1,c
  8738  017858  0E01               	movlw	1
  8739  01785A  6EE6               	movwf	postinc1,c
  8740  01785C  0E00               	movlw	0
  8741  01785E  6EE6               	movwf	postinc1,c
  8742  017860  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  8743  017864  0060  F007  FFE6   	movff	btemp,postinc1
  8744  01786A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8745  017870  0E06               	movlw	6
  8746  017872  6EE6               	movwf	postinc1,c
  8747  017874  EC18  F0CA         	call	_sprintf	;wreg free
  8748  017878                     l1662:
  8749                           
  8750                           ; BSR set to: 0
  8751                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  8752  017878  0102               	movlb	2	; () banked
  8753  01787A  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  8754  01787C  32E8               	rrcf	wreg,f,c
  8755  01787E  32E8               	rrcf	wreg,f,c
  8756  017880  0B03               	andlw	3
  8757  017882  0D24               	mullw	36
  8758  017884  0E12               	movlw	18
  8759  017886  26F3               	addwf	243,f,c
  8760  017888  0E00               	movlw	0
  8761  01788A  22F4               	addwfc	244,f,c
  8762  01788C  0E4B               	movlw	low _T
  8763  01788E  6E0B               	movwf	(btemp+10)^0,c
  8764  017890  0EFB               	movlw	high _T
  8765  017892  6E0C               	movwf	(btemp+11)^0,c
  8766  017894  50F3               	movf	243,w,c
  8767  017896  260B               	addwf	(btemp+10)^0,f,c
  8768  017898  50F4               	movf	244,w,c
  8769  01789A  220C               	addwfc	(btemp+11)^0,f,c
  8770  01789C  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8771  0178A2  0060  F033  FFE6   	movff	btemp+11,postinc1
  8772  0178A8  0EBE               	movlw	low STR_50
  8773  0178AA  6EE6               	movwf	postinc1,c
  8774  0178AC  0EFF               	movlw	high STR_50
  8775  0178AE  6EE6               	movwf	postinc1,c
  8776  0178B0  0E01               	movlw	1
  8777  0178B2  6EE6               	movwf	postinc1,c
  8778  0178B4  0E01               	movlw	1
  8779  0178B6  6EE6               	movwf	postinc1,c
  8780  0178B8  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  8781  0178BC  0060  F007  FFE6   	movff	btemp,postinc1
  8782  0178C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8783  0178C8  0E06               	movlw	6
  8784  0178CA  6EE6               	movwf	postinc1,c
  8785  0178CC  EC18  F0CA         	call	_sprintf	;wreg free
  8786                           
  8787                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  8788  0178D0  0102               	movlb	2	; () banked
  8789  0178D2  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  8790  0178D4  32E8               	rrcf	wreg,f,c
  8791  0178D6  32E8               	rrcf	wreg,f,c
  8792  0178D8  0B03               	andlw	3
  8793  0178DA  0D24               	mullw	36
  8794  0178DC  0E4B               	movlw	low _T
  8795  0178DE  6E0B               	movwf	(btemp+10)^0,c
  8796  0178E0  0EFB               	movlw	high _T
  8797  0178E2  6E0C               	movwf	(btemp+11)^0,c
  8798  0178E4  50F3               	movf	243,w,c
  8799  0178E6  260B               	addwf	(btemp+10)^0,f,c
  8800  0178E8  50F4               	movf	244,w,c
  8801  0178EA  220C               	addwfc	(btemp+11)^0,f,c
  8802  0178EC  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8803  0178F2  0060  F033  FFE6   	movff	btemp+11,postinc1
  8804  0178F8  0EBE               	movlw	low STR_50
  8805  0178FA  6EE6               	movwf	postinc1,c
  8806  0178FC  0EFF               	movlw	high STR_50
  8807  0178FE  6EE6               	movwf	postinc1,c
  8808  017900  0E01               	movlw	1
  8809  017902  6EE6               	movwf	postinc1,c
  8810  017904  0E02               	movlw	2
  8811  017906  6EE6               	movwf	postinc1,c
  8812  017908  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  8813  01790C  0060  F007  FFE6   	movff	btemp,postinc1
  8814  017912  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8815  017918  0E06               	movlw	6
  8816  01791A  6EE6               	movwf	postinc1,c
  8817  01791C  EC18  F0CA         	call	_sprintf	;wreg free
  8818                           
  8819                           ; BSR set to: 0
  8820                           ;mconfig.c: 61:   V.help_id++;
  8821  017920  EE20  F29B         	lfsr	2,_V+155	;volatile
  8822  017924  38DF               	swapf	223,w,c
  8823  017926  6E0C               	movwf	(btemp+11)^0,c
  8824  017928  320C               	rrcf	(btemp+11)^0,f,c
  8825  01792A  300C               	rrcf	(btemp+11)^0,w,c
  8826  01792C  0B03               	andlw	3
  8827  01792E  6E0C               	movwf	(btemp+11)^0,c
  8828  017930  2A0C               	incf	(btemp+11)^0,f,c
  8829  017932  3A0C               	swapf	(btemp+11)^0,f,c
  8830  017934  360C               	rlcf	(btemp+11)^0,f,c
  8831  017936  360C               	rlcf	(btemp+11)^0,f,c
  8832  017938  50DF               	movf	223,w,c
  8833  01793A  180C               	xorwf	(btemp+11)^0,w,c
  8834  01793C  0B3F               	andlw	-193
  8835  01793E  180C               	xorwf	(btemp+11)^0,w,c
  8836  017940  6EDF               	movwf	223,c
  8837                           
  8838                           ; BSR set to: 0
  8839                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  8840  017942  0EB8               	movlw	184
  8841  017944  6EE6               	movwf	postinc1,c
  8842  017946  0E0B               	movlw	11
  8843  017948  6EE6               	movwf	postinc1,c
  8844  01794A  0E09               	movlw	9
  8845  01794C  6EE6               	movwf	postinc1,c
  8846  01794E  EC20  F0D6         	call	_StartTimer	;wreg free
  8847                           
  8848                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  8849  017952  0EB8               	movlw	184
  8850  017954  6EE6               	movwf	postinc1,c
  8851  017956  0E0B               	movlw	11
  8852  017958  6EE6               	movwf	postinc1,c
  8853  01795A  0E07               	movlw	7
  8854  01795C  6EE6               	movwf	postinc1,c
  8855  01795E  EC20  F0D6         	call	_StartTimer	;wreg free
  8856                           
  8857                           ;mconfig.c: 64:   mode_lamp_bright();
  8858  017962  EC46  F0DB         	call	_mode_lamp_bright	;wreg free
  8859                           
  8860                           ;mconfig.c: 65:   update_lcd(1);
  8861  017966  0E01               	movlw	1
  8862  017968  6EE6               	movwf	postinc1,c
  8863  01796A  EC09  F0C9         	call	_update_lcd	;wreg free
  8864                           
  8865                           ;mconfig.c: 67:  } else {
  8866  01796E  D032               	goto	l1663
  8867  017970                     l12518:
  8868                           
  8869                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  8870  017970  0E09               	movlw	9
  8871  017972  6EE6               	movwf	postinc1,c
  8872  017974  ECA1  F0D8         	call	_TimerDone	;wreg free
  8873  017978  5001               	movf	btemp^0,w,c
  8874  01797A  B4D8               	btfsc	status,2,c
  8875  01797C  D02B               	goto	l1663
  8876                           
  8877                           ;mconfig.c: 69:    set_vterm(0);
  8878  01797E  0E00               	movlw	0
  8879  017980  6EE6               	movwf	postinc1,c
  8880  017982  EC68  F0DA         	call	_set_vterm	;wreg free
  8881                           
  8882                           ;mconfig.c: 70:    V.help = 0;
  8883  017986  0102               	movlb	2	; () banked
  8884  017988  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  8885                           
  8886                           ; BSR set to: 2
  8887                           ;mconfig.c: 71:    set_display_info(display_help());
  8888  01798A  EC85  F0DB         	call	_display_help	;wreg free
  8889  01798E  5001               	movf	btemp^0,w,c
  8890  017990  6EE6               	movwf	postinc1,c
  8891  017992  EC77  F0DA         	call	_set_display_info	;wreg free
  8892                           
  8893                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  8894  017996  0060  FA57  FFE6   	movff	_V+149,postinc1
  8895  01799C  0060  FA5B  FFE6   	movff	_V+150,postinc1
  8896  0179A2  ECDB  F0DA         	call	_mode_lamp_dim	;wreg free
  8897                           
  8898                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  8899  0179A6  0E0B               	movlw	11
  8900  0179A8  6EE6               	movwf	postinc1,c
  8901  0179AA  ECA1  F0D8         	call	_TimerDone	;wreg free
  8902  0179AE  5001               	movf	btemp^0,w,c
  8903  0179B0  B4D8               	btfsc	status,2,c
  8904  0179B2  D010               	goto	l1663
  8905                           
  8906                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  8907  0179B4  0102               	movlb	2	; () banked
  8908  0179B6  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  8909  0179B8  A4D8               	btfss	status,2,c
  8910  0179BA  D002               	goto	u12030
  8911  0179BC  0E01               	movlw	1
  8912  0179BE  D001               	goto	u12040
  8913  0179C0                     u12030:
  8914  0179C0  0E00               	movlw	0
  8915  0179C2                     u12040:
  8916  0179C2  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
  8917                           
  8918                           ; BSR set to: 2
  8919                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  8920  0179C4  0EDC               	movlw	220
  8921  0179C6  6EE6               	movwf	postinc1,c
  8922  0179C8  0E05               	movlw	5
  8923  0179CA  6EE6               	movwf	postinc1,c
  8924  0179CC  0E0B               	movlw	11
  8925  0179CE  6EE6               	movwf	postinc1,c
  8926  0179D0  EC20  F0D6         	call	_StartTimer	;wreg free
  8927  0179D4                     l1663:
  8928                           
  8929                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  8930  0179D4  52E5               	movf	postdec1,f,c
  8931  0179D6  0012               	return		;funcret
  8932  0179D8                     __end_of_check_help:
  8933                           	opt callstack 0
  8934                           
  8935 ;; *************** function _vterm_dump *****************
  8936 ;; Defined at:
  8937 ;;		line 121 in file "mconfig.c"
  8938 ;; Parameters:    Size  Location     Type
  8939 ;;		None
  8940 ;; Auto vars:     Size  Location     Type
  8941 ;;		None
  8942 ;; Return value:  Size  Location     Type
  8943 ;;                  1  [STACK] void 
  8944 ;; Registers used:
  8945 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8946 ;; Tracked objects:
  8947 ;;		On entry : 3F/2
  8948 ;;		On exit  : 0/0
  8949 ;;		Unchanged: 0/0
  8950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8955 ;;Total ram usage:        0 bytes
  8956 ;; Hardware stack levels used:    1
  8957 ;; Hardware stack levels required when called:   26
  8958 ;; This function calls:
  8959 ;;		_WaitMs
  8960 ;;		_eaDogM_WriteStringAtPos
  8961 ;;		_get_vterm_ptr
  8962 ;;		_sprintf
  8963 ;;		_wait_lcd_done
  8964 ;; This function is called by:
  8965 ;;		_check_help
  8966 ;; This function uses a reentrant model
  8967 ;;
  8968                           
  8969                           	psect	text29
  8970  018D94                     __ptext29:
  8971                           	opt callstack 0
  8972  018D94                     _vterm_dump:
  8973                           	opt callstack 3
  8974                           
  8975                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  8976                           
  8977                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8978                           ;incstack = 0
  8979  018D94  0E01               	movlw	1
  8980  018D96  6EE6               	movwf	postinc1,c
  8981  018D98  0E00               	movlw	0
  8982  018D9A  6EE6               	movwf	postinc1,c
  8983  018D9C  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  8984  018DA0  0060  F007  FFE6   	movff	btemp,postinc1
  8985  018DA6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8986  018DAC  0E00               	movlw	0
  8987  018DAE  6EE6               	movwf	postinc1,c
  8988  018DB0  0E00               	movlw	0
  8989  018DB2  6EE6               	movwf	postinc1,c
  8990  018DB4  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  8991  018DB8  0060  F007  FFE6   	movff	btemp,postinc1
  8992  018DBE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8993  018DC4  0E94               	movlw	low STR_52
  8994  018DC6  6EE6               	movwf	postinc1,c
  8995  018DC8  0EFF               	movlw	high STR_52
  8996  018DCA  6EE6               	movwf	postinc1,c
  8997  018DCC  0E01               	movlw	low (_V+1)
  8998  018DCE  6EE6               	movwf	postinc1,c
  8999  018DD0  0E02               	movlw	high (_V+1)
  9000  018DD2  6EE6               	movwf	postinc1,c
  9001  018DD4  0E08               	movlw	8
  9002  018DD6  6EE6               	movwf	postinc1,c
  9003  018DD8  EC18  F0CA         	call	_sprintf	;wreg free
  9004                           
  9005                           ; BSR set to: 0
  9006                           ;mconfig.c: 124:  wait_lcd_done();
  9007  018DDC  ECA4  F0DA         	call	_wait_lcd_done	;wreg free
  9008                           
  9009                           ; BSR set to: 0
  9010                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  9011  018DE0  0E01               	movlw	low (_V+1)
  9012  018DE2  6EE6               	movwf	postinc1,c
  9013  018DE4  0E02               	movlw	high (_V+1)
  9014  018DE6  6EE6               	movwf	postinc1,c
  9015  018DE8  0E00               	movlw	0
  9016  018DEA  6EE6               	movwf	postinc1,c
  9017  018DEC  0E00               	movlw	0
  9018  018DEE  6EE6               	movwf	postinc1,c
  9019  018DF0  EC2E  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9020                           
  9021                           ; BSR set to: 59
  9022                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  9023  018DF4  0E01               	movlw	1
  9024  018DF6  6EE6               	movwf	postinc1,c
  9025  018DF8  0E01               	movlw	1
  9026  018DFA  6EE6               	movwf	postinc1,c
  9027  018DFC  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  9028  018E00  0060  F007  FFE6   	movff	btemp,postinc1
  9029  018E06  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9030  018E0C  0E00               	movlw	0
  9031  018E0E  6EE6               	movwf	postinc1,c
  9032  018E10  0E01               	movlw	1
  9033  018E12  6EE6               	movwf	postinc1,c
  9034  018E14  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  9035  018E18  0060  F007  FFE6   	movff	btemp,postinc1
  9036  018E1E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9037  018E24  0E94               	movlw	low STR_52
  9038  018E26  6EE6               	movwf	postinc1,c
  9039  018E28  0EFF               	movlw	high STR_52
  9040  018E2A  6EE6               	movwf	postinc1,c
  9041  018E2C  0E01               	movlw	low (_V+1)
  9042  018E2E  6EE6               	movwf	postinc1,c
  9043  018E30  0E02               	movlw	high (_V+1)
  9044  018E32  6EE6               	movwf	postinc1,c
  9045  018E34  0E08               	movlw	8
  9046  018E36  6EE6               	movwf	postinc1,c
  9047  018E38  EC18  F0CA         	call	_sprintf	;wreg free
  9048                           
  9049                           ; BSR set to: 0
  9050                           ;mconfig.c: 127:  wait_lcd_done();
  9051  018E3C  ECA4  F0DA         	call	_wait_lcd_done	;wreg free
  9052                           
  9053                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  9054  018E40  0E01               	movlw	low (_V+1)
  9055  018E42  6EE6               	movwf	postinc1,c
  9056  018E44  0E02               	movlw	high (_V+1)
  9057  018E46  6EE6               	movwf	postinc1,c
  9058  018E48  0E00               	movlw	0
  9059  018E4A  6EE6               	movwf	postinc1,c
  9060  018E4C  0E01               	movlw	1
  9061  018E4E  6EE6               	movwf	postinc1,c
  9062  018E50  EC2E  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9063                           
  9064                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  9065  018E54  0E01               	movlw	1
  9066  018E56  6EE6               	movwf	postinc1,c
  9067  018E58  0E02               	movlw	2
  9068  018E5A  6EE6               	movwf	postinc1,c
  9069  018E5C  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  9070  018E60  0060  F007  FFE6   	movff	btemp,postinc1
  9071  018E66  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9072  018E6C  0E00               	movlw	0
  9073  018E6E  6EE6               	movwf	postinc1,c
  9074  018E70  0E02               	movlw	2
  9075  018E72  6EE6               	movwf	postinc1,c
  9076  018E74  ECF7  F0D7         	call	_get_vterm_ptr	;wreg free
  9077  018E78  0060  F007  FFE6   	movff	btemp,postinc1
  9078  018E7E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9079  018E84  0E94               	movlw	low STR_52
  9080  018E86  6EE6               	movwf	postinc1,c
  9081  018E88  0EFF               	movlw	high STR_52
  9082  018E8A  6EE6               	movwf	postinc1,c
  9083  018E8C  0E01               	movlw	low (_V+1)
  9084  018E8E  6EE6               	movwf	postinc1,c
  9085  018E90  0E02               	movlw	high (_V+1)
  9086  018E92  6EE6               	movwf	postinc1,c
  9087  018E94  0E08               	movlw	8
  9088  018E96  6EE6               	movwf	postinc1,c
  9089  018E98  EC18  F0CA         	call	_sprintf	;wreg free
  9090                           
  9091                           ; BSR set to: 0
  9092                           ;mconfig.c: 130:  wait_lcd_done();
  9093  018E9C  ECA4  F0DA         	call	_wait_lcd_done	;wreg free
  9094                           
  9095                           ; BSR set to: 0
  9096                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  9097  018EA0  0E01               	movlw	low (_V+1)
  9098  018EA2  6EE6               	movwf	postinc1,c
  9099  018EA4  0E02               	movlw	high (_V+1)
  9100  018EA6  6EE6               	movwf	postinc1,c
  9101  018EA8  0E00               	movlw	0
  9102  018EAA  6EE6               	movwf	postinc1,c
  9103  018EAC  0E02               	movlw	2
  9104  018EAE  6EE6               	movwf	postinc1,c
  9105  018EB0  EC2E  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9106                           
  9107                           ; BSR set to: 59
  9108                           ;mconfig.c: 132:  WaitMs(3000);
  9109  018EB4  0EB8               	movlw	184
  9110  018EB6  6EE6               	movwf	postinc1,c
  9111  018EB8  0E0B               	movlw	11
  9112  018EBA  6EE6               	movwf	postinc1,c
  9113  018EBC  EC13  F0D7         	call	_WaitMs	;wreg free
  9114                           
  9115                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  9116  018EC0  0012               	return		;funcret
  9117  018EC2                     __end_of_vterm_dump:
  9118                           	opt callstack 0
  9119                           
  9120 ;; *************** function _sprintf *****************
  9121 ;; Defined at:
  9122 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  9123 ;; Parameters:    Size  Location     Type
  9124 ;;  s               2  [STACK] PTR unsigned char 
  9125 ;;		 -> D.lcd(288), D(290), port_data(512), V(189), 
  9126 ;;  fmt             2  [STACK] PTR const unsigned char 
  9127 ;;		 -> STR_65(85), STR_63(3), STR_62(3), STR_61(19), 
  9128 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
  9129 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
  9130 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
  9131 ;;		 -> STR_48(19), STR_42(17), STR_41(16), STR_40(16), 
  9132 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
  9133 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
  9134 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
  9135 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
  9136 ;;		 -> STR_23(19), STR_22(19), STR_21(17), STR_20(16), 
  9137 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
  9138 ;;		 -> STR_15(22), STR_14(17), STR_13(17), STR_12(17), 
  9139 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
  9140 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
  9141 ;;		 -> STR_2(15), STR_1(17), 
  9142 ;; Auto vars:     Size  Location     Type
  9143 ;;  f               6  [STACK] struct _IO_FILE
  9144 ;;  ap              2  [STACK] PTR void [1]
  9145 ;;		 -> ?_printf(2), ?_sprintf(2), 
  9146 ;;  ret             2    0        int 
  9147 ;; Return value:  Size  Location     Type
  9148 ;;                  2  [STACK] int 
  9149 ;; Registers used:
  9150 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9151 ;; Tracked objects:
  9152 ;;		On entry : 0/1
  9153 ;;		On exit  : 3F/0
  9154 ;;		Unchanged: 0/0
  9155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9160 ;;Total ram usage:        0 bytes
  9161 ;; Hardware stack levels used:    1
  9162 ;; Hardware stack levels required when called:   23
  9163 ;; This function calls:
  9164 ;;		_vfprintf
  9165 ;; This function is called by:
  9166 ;;		_main
  9167 ;;		_check_help
  9168 ;;		_vterm_dump
  9169 ;;		_calc_bsoc
  9170 ;; This function uses a reentrant model
  9171 ;;
  9172                           
  9173                           	psect	text30
  9174  019430                     __ptext30:
  9175                           	opt callstack 0
  9176  019430                     _sprintf:
  9177                           	opt callstack 0
  9178                           
  9179                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 56, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9180  019430  0E08               	movlw	8
  9181  019432  26E1               	addwf	fsr1l,f,c
  9182  019434  0E00               	movlw	0
  9183  019436  22E2               	addwfc	fsr1h,f,c
  9184                           
  9185                           ;incstack = 0
  9186 ;; hardware stack exceeded
  9187  019438  0EFE               	movlw	254
  9188  01943A  6E0B               	movwf	(btemp+10)^0,c
  9189  01943C  0EFF               	movlw	255
  9190  01943E  6E0C               	movwf	(btemp+11)^0,c
  9191                           
  9192                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  9193  019440  0EF5               	movlw	245
  9194  019442  24E1               	addwf	fsr1l,w,c
  9195  019444  6E09               	movwf	(btemp+8)^0,c
  9196  019446  0EFF               	movlw	255
  9197  019448  20E2               	addwfc	fsr1h,w,c
  9198  01944A  6E0A               	movwf	(btemp+9)^0,c
  9199  01944C  500B               	movf	(btemp+10)^0,w,c
  9200  01944E  2609               	addwf	(btemp+8)^0,f,c
  9201  019450  500C               	movf	(btemp+11)^0,w,c
  9202  019452  220A               	addwfc	(btemp+9)^0,f,c
  9203                           
  9204                           ;stkvar	_ap @ sp[(-8)+6]
  9205  019454  0EFF               	movlw	-1
  9206  019456  0060  F02B  FFE3   	movff	btemp+9,plusw1
  9207  01945C  0EFE               	movlw	-2
  9208  01945E  0060  F027  FFE3   	movff	btemp+8,plusw1
  9209                           
  9210                           ;stkvar	_s @ sp[(-8)+-3]
  9211  019464  0EF5               	movlw	-11
  9212  019466  006F FF8C  F00B    	movff	plusw1,btemp+10
  9213  01946C  0EF6               	movlw	-10
  9214  01946E  006F FF8C  F00C    	movff	plusw1,btemp+11
  9215                           
  9216                           ;stkvar	_f @ sp[(-8)+0]
  9217  019474  0EF9               	movlw	-7
  9218  019476  0060  F033  FFE3   	movff	btemp+11,plusw1
  9219  01947C  0EF8               	movlw	-8
  9220  01947E  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9221                           
  9222                           ;stkvar	_f @ sp[(-8)+0]
  9223  019484  0EFA               	movlw	250
  9224  019486  24E1               	addwf	fsr1l,w,c
  9225  019488  6ED9               	movwf	fsr2l,c
  9226  01948A  0EFF               	movlw	255
  9227  01948C  20E2               	addwfc	fsr1h,w,c
  9228  01948E  6EDA               	movwf	fsr2h,c
  9229  019490  0E00               	movlw	0
  9230  019492  6EDE               	movwf	postinc2,c
  9231  019494  0E00               	movlw	0
  9232  019496  6EDD               	movwf	postdec2,c
  9233                           
  9234                           ;stkvar	_f @ sp[(-8)+0]
  9235  019498  0EFC               	movlw	252
  9236  01949A  24E1               	addwf	fsr1l,w,c
  9237  01949C  6ED9               	movwf	fsr2l,c
  9238  01949E  0EFF               	movlw	255
  9239  0194A0  20E2               	addwfc	fsr1h,w,c
  9240  0194A2  6EDA               	movwf	fsr2h,c
  9241  0194A4  0E00               	movlw	0
  9242  0194A6  6EDE               	movwf	postinc2,c
  9243  0194A8  0E00               	movlw	0
  9244  0194AA  6EDD               	movwf	postdec2,c
  9245                           
  9246                           ;stkvar	_ap @ sp[(-8)+6]
  9247  0194AC  0EFE               	movlw	254
  9248  0194AE  24E1               	addwf	fsr1l,w,c
  9249  0194B0  6E01               	movwf	btemp^0,c
  9250  0194B2  0EFF               	movlw	255
  9251  0194B4  20E2               	addwfc	fsr1h,w,c
  9252  0194B6  6E02               	movwf	(btemp+1)^0,c
  9253  0194B8  0060  F007  FFE6   	movff	btemp,postinc1
  9254  0194BE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9255                           
  9256                           ;stkvar	_fmt @ sp[(-10)+-5]
  9257  0194C4  0EF1               	movlw	-15
  9258  0194C6  006F FF8F FFE6     	movff	plusw1,postinc1
  9259  0194CC  006F FF8F FFE6     	movff	plusw1,postinc1
  9260                           
  9261                           ;stkvar	_f @ sp[(-12)+0]
  9262  0194D2  0EF4               	movlw	244
  9263  0194D4  24E1               	addwf	fsr1l,w,c
  9264  0194D6  6E01               	movwf	btemp^0,c
  9265  0194D8  0EFF               	movlw	255
  9266  0194DA  20E2               	addwfc	fsr1h,w,c
  9267  0194DC  6E02               	movwf	(btemp+1)^0,c
  9268  0194DE  0060  F007  FFE6   	movff	btemp,postinc1
  9269  0194E4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9270  0194EA  EC60  F0CE         	call	_vfprintf	;wreg free
  9271                           
  9272                           ; BSR set to: 0
  9273                           ;stkvar	_f @ sp[(-8)+0]
  9274  0194EE  0EFA               	movlw	250
  9275  0194F0  24E1               	addwf	fsr1l,w,c
  9276  0194F2  6ED9               	movwf	fsr2l,c
  9277  0194F4  0EFF               	movlw	255
  9278  0194F6  20E2               	addwfc	fsr1h,w,c
  9279  0194F8  6EDA               	movwf	fsr2h,c
  9280  0194FA  006F FF78  F00B    	movff	postinc2,btemp+10
  9281  019500  006F FF74  F00C    	movff	postdec2,btemp+11
  9282                           
  9283                           ;stkvar	_s @ sp[(-8)+-3]
  9284  019506  0EF5               	movlw	-11
  9285  019508  006F FF8C  F009    	movff	plusw1,btemp+8
  9286  01950E  0EF6               	movlw	-10
  9287  019510  006F FF8C  F00A    	movff	plusw1,btemp+9
  9288  019516  500B               	movf	(btemp+10)^0,w,c
  9289  019518  2409               	addwf	(btemp+8)^0,w,c
  9290  01951A  6ED9               	movwf	fsr2l,c
  9291  01951C  500C               	movf	(btemp+11)^0,w,c
  9292  01951E  200A               	addwfc	(btemp+9)^0,w,c
  9293  019520  6EDA               	movwf	fsr2h,c
  9294  019522  0E00               	movlw	0
  9295  019524  6EDF               	movwf	indf2,c
  9296                           
  9297                           ; BSR set to: 0
  9298                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 56, args
      +                          ize = 4, vargsize = 0
  9299  019526  0EF8               	movlw	248
  9300  019528  26E1               	addwf	fsr1l,f,c
  9301  01952A  0EFF               	movlw	255
  9302  01952C  22E2               	addwfc	fsr1h,f,c
  9303  01952E  52E5               	movf	postdec1,f,c
  9304  019530  50E7               	movf	indf1,w,c
  9305  019532  5EE1               	subwf	fsr1l,f,c
  9306  019534  0E00               	movlw	0
  9307  019536  5AE2               	subwfb	fsr1h,f,c
  9308  019538  0012               	return		;funcret
  9309  01953A                     __end_of_sprintf:
  9310                           	opt callstack 0
  9311                           
  9312 ;; *************** function _get_vterm_ptr *****************
  9313 ;; Defined at:
  9314 ;;		line 116 in file "mconfig.c"
  9315 ;; Parameters:    Size  Location     Type
  9316 ;;  line            1  [STACK] const unsigned char 
  9317 ;;  vterm           1  [STACK] const unsigned char 
  9318 ;; Auto vars:     Size  Location     Type
  9319 ;;		None
  9320 ;; Return value:  Size  Location     Type
  9321 ;;                  2  [STACK] PTR unsigned char 
  9322 ;; Registers used:
  9323 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  9324 ;; Tracked objects:
  9325 ;;		On entry : 0/1
  9326 ;;		On exit  : 0/0
  9327 ;;		Unchanged: 0/0
  9328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9333 ;;Total ram usage:        0 bytes
  9334 ;; Hardware stack levels used:    1
  9335 ;; Hardware stack levels required when called:   15
  9336 ;; This function calls:
  9337 ;;		Nothing
  9338 ;; This function is called by:
  9339 ;;		_main
  9340 ;;		_check_help
  9341 ;;		_vterm_dump
  9342 ;; This function uses a reentrant model
  9343 ;;
  9344                           
  9345                           	psect	text31
  9346  01AFEE                     __ptext31:
  9347                           	opt callstack 0
  9348  01AFEE                     _get_vterm_ptr:
  9349                           	opt callstack 15
  9350                           
  9351                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  9352                           ;stkvar	_vterm @ sp[(0)+-2]
  9353                           
  9354                           ; BSR set to: 0
  9355                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9356                           ;incstack = 0
  9357  01AFEE  0EFE               	movlw	-2
  9358  01AFF0  50E3               	movf	plusw1,w,c
  9359  01AFF2  0B03               	andlw	3
  9360  01AFF4  0D48               	mullw	72
  9361  01AFF6  0EFF               	movlw	low _D
  9362  01AFF8  6E01               	movwf	btemp^0,c
  9363  01AFFA  0E07               	movlw	high _D
  9364  01AFFC  6E02               	movwf	(btemp+1)^0,c
  9365  01AFFE  50F3               	movf	243,w,c
  9366  01B000  2601               	addwf	btemp^0,f,c
  9367  01B002  50F4               	movf	244,w,c
  9368  01B004  2202               	addwfc	(btemp+1)^0,f,c
  9369                           
  9370                           ;stkvar	_line @ sp[(0)+-1]
  9371  01B006  0EFF               	movlw	-1
  9372  01B008  50E3               	movf	plusw1,w,c
  9373  01B00A  0B03               	andlw	3
  9374  01B00C  0D18               	mullw	24
  9375  01B00E  50F3               	movf	243,w,c
  9376  01B010  2601               	addwf	btemp^0,f,c
  9377  01B012  50F4               	movf	244,w,c
  9378  01B014  2202               	addwfc	(btemp+1)^0,f,c
  9379                           
  9380                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  9381  01B016  52E5               	movf	postdec1,f,c
  9382  01B018  52E5               	movf	postdec1,f,c
  9383  01B01A  0012               	return		;funcret
  9384  01B01C                     __end_of_get_vterm_ptr:
  9385                           	opt callstack 0
  9386                           
  9387 ;; *************** function _WaitMs *****************
  9388 ;; Defined at:
  9389 ;;		line 32 in file "timers.c"
  9390 ;; Parameters:    Size  Location     Type
  9391 ;;  numMilliseco    2  [STACK] const unsigned short 
  9392 ;; Auto vars:     Size  Location     Type
  9393 ;;		None
  9394 ;; Return value:  Size  Location     Type
  9395 ;;                  1  [STACK] void 
  9396 ;; Registers used:
  9397 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9398 ;; Tracked objects:
  9399 ;;		On entry : 0/2
  9400 ;;		On exit  : 0/0
  9401 ;;		Unchanged: 0/0
  9402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9407 ;;Total ram usage:        0 bytes
  9408 ;; Hardware stack levels used:    1
  9409 ;; Hardware stack levels required when called:   16
  9410 ;; This function calls:
  9411 ;;		_StartTimer
  9412 ;;		_TimerDone
  9413 ;; This function is called by:
  9414 ;;		_main
  9415 ;;		_vterm_dump
  9416 ;; This function uses a reentrant model
  9417 ;;
  9418                           
  9419                           	psect	text32
  9420  01AE26                     __ptext32:
  9421                           	opt callstack 0
  9422  01AE26                     _WaitMs:
  9423                           	opt callstack 12
  9424                           
  9425                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  9426                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  9427                           
  9428                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9429                           ;incstack = 0
  9430  01AE26  0EFE               	movlw	-2
  9431  01AE28  006F FF8F FFE6     	movff	plusw1,postinc1
  9432  01AE2E  006F FF8F FFE6     	movff	plusw1,postinc1
  9433  01AE34  0E00               	movlw	0
  9434  01AE36  6EE6               	movwf	postinc1,c
  9435  01AE38  EC20  F0D6         	call	_StartTimer	;wreg free
  9436                           
  9437                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9438  01AE3C  D005               	goto	l9466
  9439  01AE3E                     l1594:
  9440                           
  9441                           ;timers.c: 36:   __nop();
  9442  01AE3E  F000               	nop	
  9443                           
  9444                           ;timers.c: 37:   __nop();
  9445  01AE40  F000               	nop	
  9446                           
  9447                           ;timers.c: 38:   __nop();
  9448  01AE42  F000               	nop	
  9449                           
  9450                           ;timers.c: 39:   __nop();
  9451  01AE44  F000               	nop	
  9452  01AE46  0004               	clrwdt		;# 
  9453  01AE48                     l9466:
  9454                           
  9455                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9456  01AE48  0E00               	movlw	0
  9457  01AE4A  6EE6               	movwf	postinc1,c
  9458  01AE4C  ECA1  F0D8         	call	_TimerDone	;wreg free
  9459  01AE50  5001               	movf	btemp^0,w,c
  9460  01AE52  B4D8               	btfsc	status,2,c
  9461  01AE54  D7F4               	goto	l1594
  9462                           
  9463                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  9464  01AE56  52E5               	movf	postdec1,f,c
  9465  01AE58  52E5               	movf	postdec1,f,c
  9466  01AE5A  0012               	return		;funcret
  9467  01AE5C                     __end_of_WaitMs:
  9468                           	opt callstack 0
  9469                           
  9470 ;; *************** function _update_lcd *****************
  9471 ;; Defined at:
  9472 ;;		line 85 in file "mconfig.c"
  9473 ;; Parameters:    Size  Location     Type
  9474 ;;  vterm           1  [STACK] unsigned char 
  9475 ;; Auto vars:     Size  Location     Type
  9476 ;;		None
  9477 ;; Return value:  Size  Location     Type
  9478 ;;                  1  [STACK] unsigned char 
  9479 ;; Registers used:
  9480 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9481 ;; Tracked objects:
  9482 ;;		On entry : 0/0
  9483 ;;		On exit  : 0/0
  9484 ;;		Unchanged: 0/0
  9485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9490 ;;Total ram usage:        0 bytes
  9491 ;; Hardware stack levels used:    1
  9492 ;; Hardware stack levels required when called:   26
  9493 ;; This function calls:
  9494 ;;		_eaDogM_WriteStringAtPos
  9495 ;;		_wait_lcd_done
  9496 ;; This function is called by:
  9497 ;;		_main
  9498 ;;		_check_help
  9499 ;; This function uses a reentrant model
  9500 ;;
  9501                           
  9502                           	psect	text33
  9503  019212                     __ptext33:
  9504                           	opt callstack 0
  9505  019212                     _update_lcd:
  9506                           	opt callstack 4
  9507                           
  9508                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  9509                           ;stkvar	_vterm @ sp[(0)+-1]
  9510                           
  9511                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9512                           ;incstack = 0
  9513  019212  0EFF               	movlw	-1
  9514  019214  006F FF8C  F001    	movff	plusw1,btemp
  9515  01921A  0E03               	movlw	3
  9516  01921C  1601               	andwf	btemp^0,f,c
  9517  01921E  0EFF               	movlw	-1
  9518  019220  0060  F007  FFE3   	movff	btemp,plusw1
  9519                           
  9520                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  9521  019226  EE22  F11F         	lfsr	2,_D+288
  9522  01922A  A0DF               	btfss	indf2,0,c
  9523  01922C  D004               	goto	l12318
  9524                           
  9525                           ;stkvar	_vterm @ sp[(0)+-1]
  9526  01922E  0EFF               	movlw	-1
  9527  019230  50E3               	movf	plusw1,w,c
  9528  019232  B4D8               	btfsc	status,2,c
  9529  019234  D074               	goto	l1670
  9530  019236                     l12318:
  9531                           
  9532                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  9533                           ;stkvar	_vterm @ sp[(0)+-1]
  9534  019236  0EFF               	movlw	-1
  9535  019238  50E3               	movf	plusw1,w,c
  9536  01923A  0D48               	mullw	72
  9537  01923C  0E0F               	movlw	low (_D+16)
  9538  01923E  24F3               	addwf	243,w,c
  9539  019240  6ED9               	movwf	fsr2l,c
  9540  019242  0E08               	movlw	high (_D+16)
  9541  019244  20F4               	addwfc	prodh,w,c
  9542  019246  6EDA               	movwf	fsr2h,c
  9543  019248  0E00               	movlw	0
  9544  01924A  6EDF               	movwf	indf2,c
  9545                           
  9546                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  9547                           ;stkvar	_vterm @ sp[(0)+-1]
  9548  01924C  0EFF               	movlw	-1
  9549  01924E  50E3               	movf	plusw1,w,c
  9550  019250  0D48               	mullw	72
  9551  019252  0E27               	movlw	low (_D+40)
  9552  019254  24F3               	addwf	243,w,c
  9553  019256  6ED9               	movwf	fsr2l,c
  9554  019258  0E08               	movlw	high (_D+40)
  9555  01925A  20F4               	addwfc	prodh,w,c
  9556  01925C  6EDA               	movwf	fsr2h,c
  9557  01925E  0E00               	movlw	0
  9558  019260  6EDF               	movwf	indf2,c
  9559                           
  9560                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  9561                           ;stkvar	_vterm @ sp[(0)+-1]
  9562  019262  0EFF               	movlw	-1
  9563  019264  50E3               	movf	plusw1,w,c
  9564  019266  0D48               	mullw	72
  9565  019268  0E3F               	movlw	low (_D+64)
  9566  01926A  24F3               	addwf	243,w,c
  9567  01926C  6ED9               	movwf	fsr2l,c
  9568  01926E  0E08               	movlw	high (_D+64)
  9569  019270  20F4               	addwfc	prodh,w,c
  9570  019272  6EDA               	movwf	fsr2h,c
  9571  019274  0E00               	movlw	0
  9572  019276  6EDF               	movwf	indf2,c
  9573                           
  9574                           ;mconfig.c: 95:  wait_lcd_done();
  9575  019278  ECA4  F0DA         	call	_wait_lcd_done	;wreg free
  9576                           
  9577                           ; BSR set to: 0
  9578                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  9579                           ;stkvar	_vterm @ sp[(0)+-1]
  9580  01927C  0EFF               	movlw	-1
  9581  01927E  50E3               	movf	plusw1,w,c
  9582  019280  0D48               	mullw	72
  9583  019282  0EFF               	movlw	low _D
  9584  019284  6E0B               	movwf	(btemp+10)^0,c
  9585  019286  0E07               	movlw	high _D
  9586  019288  6E0C               	movwf	(btemp+11)^0,c
  9587  01928A  50F3               	movf	243,w,c
  9588  01928C  260B               	addwf	(btemp+10)^0,f,c
  9589  01928E  50F4               	movf	244,w,c
  9590  019290  220C               	addwfc	(btemp+11)^0,f,c
  9591  019292  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9592  019298  0060  F033  FFE6   	movff	btemp+11,postinc1
  9593  01929E  0E00               	movlw	0
  9594  0192A0  6EE6               	movwf	postinc1,c
  9595  0192A2  0E00               	movlw	0
  9596  0192A4  6EE6               	movwf	postinc1,c
  9597  0192A6  EC2E  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9598                           
  9599                           ; BSR set to: 59
  9600                           ;mconfig.c: 97:  wait_lcd_done();
  9601  0192AA  ECA4  F0DA         	call	_wait_lcd_done	;wreg free
  9602                           
  9603                           ; BSR set to: 0
  9604                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  9605                           ;stkvar	_vterm @ sp[(0)+-1]
  9606  0192AE  0EFF               	movlw	-1
  9607  0192B0  50E3               	movf	plusw1,w,c
  9608  0192B2  0D48               	mullw	72
  9609  0192B4  0EFF               	movlw	low _D
  9610  0192B6  6E0B               	movwf	(btemp+10)^0,c
  9611  0192B8  0E07               	movlw	high _D
  9612  0192BA  6E0C               	movwf	(btemp+11)^0,c
  9613  0192BC  0E18               	movlw	24
  9614  0192BE  260B               	addwf	(btemp+10)^0,f,c
  9615  0192C0  0E00               	movlw	0
  9616  0192C2  220C               	addwfc	(btemp+11)^0,f,c
  9617  0192C4  50F3               	movf	243,w,c
  9618  0192C6  260B               	addwf	(btemp+10)^0,f,c
  9619  0192C8  50F4               	movf	244,w,c
  9620  0192CA  220C               	addwfc	(btemp+11)^0,f,c
  9621  0192CC  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9622  0192D2  0060  F033  FFE6   	movff	btemp+11,postinc1
  9623  0192D8  0E00               	movlw	0
  9624  0192DA  6EE6               	movwf	postinc1,c
  9625  0192DC  0E01               	movlw	1
  9626  0192DE  6EE6               	movwf	postinc1,c
  9627  0192E0  EC2E  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9628                           
  9629                           ; BSR set to: 59
  9630                           ;mconfig.c: 99:  wait_lcd_done();
  9631  0192E4  ECA4  F0DA         	call	_wait_lcd_done	;wreg free
  9632                           
  9633                           ; BSR set to: 0
  9634                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  9635                           ;stkvar	_vterm @ sp[(0)+-1]
  9636  0192E8  0EFF               	movlw	-1
  9637  0192EA  50E3               	movf	plusw1,w,c
  9638  0192EC  0D48               	mullw	72
  9639  0192EE  0EFF               	movlw	low _D
  9640  0192F0  6E0B               	movwf	(btemp+10)^0,c
  9641  0192F2  0E07               	movlw	high _D
  9642  0192F4  6E0C               	movwf	(btemp+11)^0,c
  9643  0192F6  0E30               	movlw	48
  9644  0192F8  260B               	addwf	(btemp+10)^0,f,c
  9645  0192FA  0E00               	movlw	0
  9646  0192FC  220C               	addwfc	(btemp+11)^0,f,c
  9647  0192FE  50F3               	movf	243,w,c
  9648  019300  260B               	addwf	(btemp+10)^0,f,c
  9649  019302  50F4               	movf	244,w,c
  9650  019304  220C               	addwfc	(btemp+11)^0,f,c
  9651  019306  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9652  01930C  0060  F033  FFE6   	movff	btemp+11,postinc1
  9653  019312  0E00               	movlw	0
  9654  019314  6EE6               	movwf	postinc1,c
  9655  019316  0E02               	movlw	2
  9656  019318  6EE6               	movwf	postinc1,c
  9657  01931A  EC2E  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9658  01931E                     l1670:
  9659                           
  9660                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  9661  01931E  52E5               	movf	postdec1,f,c
  9662  019320  0012               	return		;funcret
  9663  019322                     __end_of_update_lcd:
  9664                           	opt callstack 0
  9665                           
  9666 ;; *************** function _eaDogM_WriteStringAtPos *****************
  9667 ;; Defined at:
  9668 ;;		line 278 in file "eadog.c"
  9669 ;; Parameters:    Size  Location     Type
  9670 ;;  r               1  [STACK] const unsigned char 
  9671 ;;  c               1  [STACK] const unsigned char 
  9672 ;;  strPtr          2  [STACK] PTR unsigned char 
  9673 ;;		 -> D.lcd(288), D(290), V(189), 
  9674 ;; Auto vars:     Size  Location     Type
  9675 ;;		None
  9676 ;; Return value:  Size  Location     Type
  9677 ;;                  1  [STACK] void 
  9678 ;; Registers used:
  9679 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9680 ;; Tracked objects:
  9681 ;;		On entry : 3F/0
  9682 ;;		On exit  : 3F/3B
  9683 ;;		Unchanged: 0/0
  9684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9689 ;;Total ram usage:        0 bytes
  9690 ;; Hardware stack levels used:    1
  9691 ;; Hardware stack levels required when called:   25
  9692 ;; This function calls:
  9693 ;;		_eaDogM_WriteString
  9694 ;;		_send_lcd_cmd_dma
  9695 ;; This function is called by:
  9696 ;;		_update_lcd
  9697 ;;		_vterm_dump
  9698 ;; This function uses a reentrant model
  9699 ;;
  9700                           
  9701                           	psect	text34
  9702  01AE5C                     __ptext34:
  9703                           	opt callstack 0
  9704  01AE5C                     _eaDogM_WriteStringAtPos:
  9705                           	opt callstack 4
  9706                           
  9707                           ;eadog.c: 278: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 279: {;eadog.c: 280:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  9708                           ;stkvar	_c @ sp[(0)+-2]
  9709                           
  9710                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9711                           ;incstack = 0
  9712  01AE5C  0EFE               	movlw	-2
  9713  01AE5E  006F FF8C  F00C    	movff	plusw1,btemp+11
  9714                           
  9715                           ;stkvar	_r @ sp[(0)+-1]
  9716  01AE64  0EFF               	movlw	-1
  9717  01AE66  50E3               	movf	plusw1,w,c
  9718  01AE68  0D10               	mullw	16
  9719  01AE6A  50F3               	movf	243,w,c
  9720  01AE6C  240C               	addwf	(btemp+11)^0,w,c
  9721  01AE6E  0F80               	addlw	128
  9722  01AE70  6EE6               	movwf	postinc1,c
  9723  01AE72  EC43  F0D4         	call	_send_lcd_cmd_dma	;wreg free
  9724                           
  9725                           ;eadog.c: 281:  eaDogM_WriteString(strPtr);
  9726                           ;stkvar	_strPtr @ sp[(0)+-4]
  9727  01AE76  0EFC               	movlw	-4
  9728  01AE78  006F FF8F FFE6     	movff	plusw1,postinc1
  9729  01AE7E  006F FF8F FFE6     	movff	plusw1,postinc1
  9730  01AE84  EC0B  F0CF         	call	_eaDogM_WriteString	;wreg free
  9731                           
  9732                           ; BSR set to: 59
  9733                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  9734  01AE88  52E5               	movf	postdec1,f,c
  9735  01AE8A  52E5               	movf	postdec1,f,c
  9736  01AE8C  52E5               	movf	postdec1,f,c
  9737  01AE8E  52E5               	movf	postdec1,f,c
  9738  01AE90  0012               	return		;funcret
  9739  01AE92                     __end_of_eaDogM_WriteStringAtPos:
  9740                           	opt callstack 0
  9741                           
  9742 ;; *************** function _send_lcd_cmd_dma *****************
  9743 ;; Defined at:
  9744 ;;		line 220 in file "eadog.c"
  9745 ;; Parameters:    Size  Location     Type
  9746 ;;  strPtr          1  [STACK] unsigned char 
  9747 ;; Auto vars:     Size  Location     Type
  9748 ;;		None
  9749 ;; Return value:  Size  Location     Type
  9750 ;;                  1  [STACK] void 
  9751 ;; Registers used:
  9752 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9753 ;; Tracked objects:
  9754 ;;		On entry : 0/3D
  9755 ;;		On exit  : 3F/0
  9756 ;;		Unchanged: 0/0
  9757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9762 ;;Total ram usage:        0 bytes
  9763 ;; Hardware stack levels used:    1
  9764 ;; Hardware stack levels required when called:   24
  9765 ;; This function calls:
  9766 ;;		_printf
  9767 ;;		_ringBufS_flush
  9768 ;;		_start_lcd
  9769 ;;		_wait_lcd_done
  9770 ;;		_wait_lcd_set
  9771 ;; This function is called by:
  9772 ;;		_eaDogM_WriteCommand
  9773 ;;		_eaDogM_WriteStringAtPos
  9774 ;; This function uses a reentrant model
  9775 ;;
  9776                           
  9777                           	psect	text35
  9778  01A886                     __ptext35:
  9779                           	opt callstack 0
  9780  01A886                     _send_lcd_cmd_dma:
  9781                           	opt callstack 4
  9782                           
  9783                           ;eadog.c: 220: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 221: {;eadog.c: 223:  wait
      +                          _lcd_set();
  9784                           
  9785                           ; BSR set to: 59
  9786                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9787                           ;incstack = 0
  9788  01A886  EC90  F0DB         	call	_wait_lcd_set	;wreg free
  9789                           
  9790                           ; BSR set to: 0
  9791                           ;eadog.c: 225:  ringBufS_flush(spi_link.tx1a, 0);
  9792  01A88A  0E00               	movlw	0
  9793  01A88C  6EE6               	movwf	postinc1,c
  9794  01A88E  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  9795  01A894  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  9796  01A89A  EC44  F0D0         	call	_ringBufS_flush	;wreg free
  9797  01A89E  92BC               	bcf	188,1,c	;volatile
  9798  01A8A0  94BC               	bcf	188,2,c	;volatile
  9799                           
  9800                           ;eadog.c: 228:  DMA1CON0bits.EN = 0;
  9801  01A8A2  013B               	movlb	59	; () banked
  9802  01A8A4  9FFC               	bcf	252,7,b	;volatile
  9803                           
  9804                           ; BSR set to: 59
  9805                           ;eadog.c: 229:  DMA1SSZ = 1;
  9806  01A8A6  0E00               	movlw	0
  9807  01A8A8  6FF8               	movwf	248,b	;volatile
  9808  01A8AA  0E01               	movlw	1
  9809  01A8AC  6FF7               	movwf	247,b	;volatile
  9810                           
  9811                           ; BSR set to: 59
  9812                           ;eadog.c: 230:  DMA1CON0bits.EN = 1;
  9813  01A8AE  8FFC               	bsf	252,7,b	;volatile
  9814                           
  9815                           ; BSR set to: 59
  9816                           ;eadog.c: 231:  printf("%c", strPtr);
  9817                           ;stkvar	_strPtr @ sp[(0)+-1]
  9818  01A8B0  0EFF               	movlw	-1
  9819  01A8B2  50E3               	movf	plusw1,w,c
  9820  01A8B4  6EE6               	movwf	postinc1,c
  9821  01A8B6  0E00               	movlw	0
  9822  01A8B8  6EE6               	movwf	postinc1,c
  9823  01A8BA  0EF9               	movlw	low STR_44
  9824  01A8BC  6EE6               	movwf	postinc1,c
  9825  01A8BE  0EFF               	movlw	high STR_44
  9826  01A8C0  6EE6               	movwf	postinc1,c
  9827  01A8C2  0E04               	movlw	4
  9828  01A8C4  6EE6               	movwf	postinc1,c
  9829  01A8C6  EC2A  F0D3         	call	_printf	;wreg free
  9830                           
  9831                           ; BSR set to: 0
  9832                           ;eadog.c: 232:  start_lcd();
  9833  01A8CA  EC93  F0DB         	call	_start_lcd	;wreg free
  9834                           
  9835                           ; BSR set to: 59
  9836                           ;eadog.c: 233:  wait_lcd_done();
  9837  01A8CE  ECA4  F0DA         	call	_wait_lcd_done	;wreg free
  9838                           
  9839                           ; BSR set to: 0
  9840  01A8D2  82BC               	bsf	188,1,c	;volatile
  9841                           
  9842                           ; BSR set to: 0
  9843                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  9844  01A8D4  52E5               	movf	postdec1,f,c
  9845  01A8D6  0012               	return		;funcret
  9846  01A8D8                     __end_of_send_lcd_cmd_dma:
  9847                           	opt callstack 0
  9848                           
  9849 ;; *************** function _wait_lcd_done *****************
  9850 ;; Defined at:
  9851 ;;		line 156 in file "eadog.c"
  9852 ;; Parameters:    Size  Location     Type
  9853 ;;		None
  9854 ;; Auto vars:     Size  Location     Type
  9855 ;;		None
  9856 ;; Return value:  Size  Location     Type
  9857 ;;                  1  [STACK] void 
  9858 ;; Registers used:
  9859 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9860 ;; Tracked objects:
  9861 ;;		On entry : 0/0
  9862 ;;		On exit  : 3F/0
  9863 ;;		Unchanged: 0/0
  9864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9869 ;;Total ram usage:        0 bytes
  9870 ;; Hardware stack levels used:    1
  9871 ;; Hardware stack levels required when called:   16
  9872 ;; This function calls:
  9873 ;;		_wdtdelay
  9874 ;; This function is called by:
  9875 ;;		_send_lcd_cmd_dma
  9876 ;;		_update_lcd
  9877 ;;		_vterm_dump
  9878 ;; This function uses a reentrant model
  9879 ;;
  9880                           
  9881                           	psect	text36
  9882  01B548                     __ptext36:
  9883                           	opt callstack 0
  9884  01B548                     _wait_lcd_done:
  9885                           	opt callstack 13
  9886                           
  9887                           ;eadog.c: 158:  while (spi_link.LCD_DATA);
  9888                           
  9889                           ; BSR set to: 0
  9890                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9891                           ;incstack = 0
  9892  01B548  0100               	movlb	0	; () banked
  9893  01B54A  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
  9894  01B54C  D7FD               	goto	_wait_lcd_done
  9895                           
  9896                           ; BSR set to: 0
  9897                           ;eadog.c: 159:  wdtdelay(50);
  9898  01B54E  0E32               	movlw	50
  9899  01B550  6EE6               	movwf	postinc1,c
  9900  01B552  0E00               	movlw	0
  9901  01B554  6EE6               	movwf	postinc1,c
  9902  01B556  0E00               	movlw	0
  9903  01B558  6EE6               	movwf	postinc1,c
  9904  01B55A  0E00               	movlw	0
  9905  01B55C  6EE6               	movwf	postinc1,c
  9906  01B55E  ECBB  F0D3         	call	_wdtdelay	;wreg free
  9907                           
  9908                           ; BSR set to: 0
  9909                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  9910  01B562  0012               	return		;funcret
  9911  01B564                     __end_of_wait_lcd_done:
  9912                           	opt callstack 0
  9913                           
  9914 ;; *************** function _wdtdelay *****************
  9915 ;; Defined at:
  9916 ;;		line 23 in file "eadog.c"
  9917 ;; Parameters:    Size  Location     Type
  9918 ;;  delay           4  [STACK] const unsigned long 
  9919 ;; Auto vars:     Size  Location     Type
  9920 ;;		None
  9921 ;; Return value:  Size  Location     Type
  9922 ;;                  1  [STACK] void 
  9923 ;; Registers used:
  9924 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9925 ;; Tracked objects:
  9926 ;;		On entry : 0/0
  9927 ;;		On exit  : 3F/0
  9928 ;;		Unchanged: 0/0
  9929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9934 ;;Total ram usage:        0 bytes
  9935 ;; Hardware stack levels used:    1
  9936 ;; Hardware stack levels required when called:   15
  9937 ;; This function calls:
  9938 ;;		Nothing
  9939 ;; This function is called by:
  9940 ;;		_init_display
  9941 ;;		_send_lcd_cmd
  9942 ;;		_send_lcd_cmd_long
  9943 ;;		_wait_lcd_done
  9944 ;; This function uses a reentrant model
  9945 ;;
  9946                           
  9947                           	psect	text37
  9948  01A776                     __ptext37:
  9949                           	opt callstack 0
  9950  01A776                     _wdtdelay:
  9951                           	opt callstack 13
  9952                           
  9953                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
  9954                           
  9955                           ; BSR set to: 0
  9956                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9957                           ;incstack = 0
  9958  01A776  0100               	movlb	0	; () banked
  9959  01A778  6B9A               	clrf	wdtdelay@dcount& (0+255),b
  9960  01A77A  6B9B               	clrf	(wdtdelay@dcount+1)& (0+255),b
  9961  01A77C  6B9C               	clrf	(wdtdelay@dcount+2)& (0+255),b
  9962  01A77E  6B9D               	clrf	(wdtdelay@dcount+3)& (0+255),b
  9963  01A780                     l1435:
  9964                           
  9965                           ; BSR set to: 0
  9966                           ;eadog.c: 28:   __nop();
  9967  01A780  F000               	nop	
  9968  01A782  0004               	clrwdt		;# 
  9969                           
  9970                           ;eadog.c: 30:  };
  9971  01A784  0E01               	movlw	1
  9972  01A786  0100               	movlb	0	; () banked
  9973  01A788  279A               	addwf	wdtdelay@dcount& (0+255),f,b
  9974  01A78A  0E00               	movlw	0
  9975  01A78C  239B               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  9976  01A78E  239C               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  9977  01A790  239D               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  9978                           
  9979                           ; BSR set to: 0
  9980                           ;stkvar	_delay @ sp[(0)+-4]
  9981  01A792  0EFC               	movlw	-4
  9982  01A794  006F FF8C  F001    	movff	plusw1,btemp
  9983  01A79A  519A               	movf	wdtdelay@dcount& (0+255),w,b
  9984  01A79C  5C01               	subwf	btemp^0,w,c
  9985  01A79E  0EFD               	movlw	-3
  9986  01A7A0  006F FF8C  F001    	movff	plusw1,btemp
  9987  01A7A6  519B               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  9988  01A7A8  5801               	subwfb	btemp^0,w,c
  9989  01A7AA  0EFE               	movlw	-2
  9990  01A7AC  006F FF8C  F001    	movff	plusw1,btemp
  9991  01A7B2  519C               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  9992  01A7B4  5801               	subwfb	btemp^0,w,c
  9993  01A7B6  0EFF               	movlw	-1
  9994  01A7B8  006F FF8C  F001    	movff	plusw1,btemp
  9995  01A7BE  519D               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  9996  01A7C0  5801               	subwfb	btemp^0,w,c
  9997  01A7C2  B0D8               	btfsc	status,0,c
  9998  01A7C4  D7DD               	goto	l1435
  9999                           
 10000                           ; BSR set to: 0
 10001                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 10002  01A7C6  52E5               	movf	postdec1,f,c
 10003  01A7C8  52E5               	movf	postdec1,f,c
 10004  01A7CA  52E5               	movf	postdec1,f,c
 10005  01A7CC  52E5               	movf	postdec1,f,c
 10006  01A7CE  0012               	return		;funcret
 10007  01A7D0                     __end_of_wdtdelay:
 10008                           	opt callstack 0
 10009                           
 10010 ;; *************** function _eaDogM_WriteString *****************
 10011 ;; Defined at:
 10012 ;;		line 199 in file "eadog.c"
 10013 ;; Parameters:    Size  Location     Type
 10014 ;;  strPtr          2  [STACK] PTR unsigned char 
 10015 ;;		 -> D.lcd(288), D(290), V(189), 
 10016 ;; Auto vars:     Size  Location     Type
 10017 ;;		None
 10018 ;; Return value:  Size  Location     Type
 10019 ;;                  1  [STACK] void 
 10020 ;; Registers used:
 10021 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10022 ;; Tracked objects:
 10023 ;;		On entry : 3F/0
 10024 ;;		On exit  : 3F/3B
 10025 ;;		Unchanged: 0/0
 10026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10031 ;;Total ram usage:        0 bytes
 10032 ;; Hardware stack levels used:    1
 10033 ;; Hardware stack levels required when called:   24
 10034 ;; This function calls:
 10035 ;;		_printf
 10036 ;;		_ringBufS_flush
 10037 ;;		_start_lcd
 10038 ;;		_strlen
 10039 ;;		_wait_lcd_set
 10040 ;; This function is called by:
 10041 ;;		_eaDogM_WriteStringAtPos
 10042 ;; This function uses a reentrant model
 10043 ;;
 10044                           
 10045                           	psect	text38
 10046  019E16                     __ptext38:
 10047                           	opt callstack 0
 10048  019E16                     _eaDogM_WriteString:
 10049                           	opt callstack 4
 10050                           
 10051                           ;eadog.c: 199: void eaDogM_WriteString(char *strPtr);eadog.c: 200: {;eadog.c: 202:  wait
      +                          _lcd_set();
 10052                           
 10053                           ; BSR set to: 0
 10054                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10055                           ;incstack = 0
 10056  019E16  EC90  F0DB         	call	_wait_lcd_set	;wreg free
 10057                           
 10058                           ; BSR set to: 0
 10059                           ;eadog.c: 204:  ringBufS_flush(spi_link.tx1a, 0);
 10060  019E1A  0E00               	movlw	0
 10061  019E1C  6EE6               	movwf	postinc1,c
 10062  019E1E  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 10063  019E24  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 10064  019E2A  EC44  F0D0         	call	_ringBufS_flush	;wreg free
 10065  019E2E  94BC               	bcf	188,2,c	;volatile
 10066                           
 10067                           ;eadog.c: 206:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 10068                           ;stkvar	_strPtr @ sp[(0)+-2]
 10069  019E30  0EFE               	movlw	-2
 10070  019E32  006F FF8F FFE6     	movff	plusw1,postinc1
 10071  019E38  006F FF8F FFE6     	movff	plusw1,postinc1
 10072  019E3E  EC5E  F0CF         	call	_strlen	;wreg free
 10073  019E42  5002               	movf	(btemp+1)^0,w,c
 10074  019E44  E104               	bnz	u11840
 10075  019E46  0E41               	movlw	65
 10076  019E48  5C01               	subwf	btemp^0,w,c
 10077  019E4A  A0D8               	btfss	status,0,c
 10078  019E4C  D010               	goto	l12272
 10079  019E4E                     u11840:
 10080                           
 10081                           ;stkvar	_strPtr @ sp[(0)+-2]
 10082  019E4E  0EFE               	movlw	-2
 10083  019E50  006F FF8C  F00B    	movff	plusw1,btemp+10
 10084  019E56  0EFF               	movlw	-1
 10085  019E58  006F FF8C  F00C    	movff	plusw1,btemp+11
 10086  019E5E  0E40               	movlw	64
 10087  019E60  240B               	addwf	(btemp+10)^0,w,c
 10088  019E62  6ED9               	movwf	fsr2l,c
 10089  019E64  0E00               	movlw	0
 10090  019E66  200C               	addwfc	(btemp+11)^0,w,c
 10091  019E68  6EDA               	movwf	fsr2h,c
 10092  019E6A  0E00               	movlw	0
 10093  019E6C  6EDF               	movwf	indf2,c
 10094  019E6E                     l12272:
 10095                           
 10096                           ;eadog.c: 207:  DMA1CON0bits.EN = 0;
 10097  019E6E  013B               	movlb	59	; () banked
 10098  019E70  9FFC               	bcf	252,7,b	;volatile
 10099                           
 10100                           ; BSR set to: 59
 10101                           ;eadog.c: 208:  DMA1SSZ = strlen(strPtr);
 10102                           ;stkvar	_strPtr @ sp[(0)+-2]
 10103  019E72  0EFE               	movlw	-2
 10104  019E74  006F FF8F FFE6     	movff	plusw1,postinc1
 10105  019E7A  006F FF8F FFE6     	movff	plusw1,postinc1
 10106  019E80  EC5E  F0CF         	call	_strlen	;wreg free
 10107  019E84  0060  F007  FBF7   	movff	btemp,15351	;volatile
 10108  019E8A  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
 10109                           
 10110                           ;eadog.c: 209:  DMA1CON0bits.EN = 1;
 10111  019E90  013B               	movlb	59	; () banked
 10112  019E92  8FFC               	bsf	252,7,b	;volatile
 10113                           
 10114                           ; BSR set to: 59
 10115                           ;eadog.c: 210:  printf("%s", strPtr);
 10116                           ;stkvar	_strPtr @ sp[(0)+-2]
 10117  019E94  0EFE               	movlw	-2
 10118  019E96  006F FF8F FFE6     	movff	plusw1,postinc1
 10119  019E9C  006F FF8F FFE6     	movff	plusw1,postinc1
 10120  019EA2  0EFC               	movlw	low STR_43
 10121  019EA4  6EE6               	movwf	postinc1,c
 10122  019EA6  0EFF               	movlw	high STR_43
 10123  019EA8  6EE6               	movwf	postinc1,c
 10124  019EAA  0E04               	movlw	4
 10125  019EAC  6EE6               	movwf	postinc1,c
 10126  019EAE  EC2A  F0D3         	call	_printf	;wreg free
 10127                           
 10128                           ; BSR set to: 0
 10129                           ;eadog.c: 211:  start_lcd();
 10130  019EB2  EC93  F0DB         	call	_start_lcd	;wreg free
 10131                           
 10132                           ; BSR set to: 59
 10133                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 10134  019EB6  52E5               	movf	postdec1,f,c
 10135  019EB8  52E5               	movf	postdec1,f,c
 10136  019EBA  0012               	return		;funcret
 10137  019EBC                     __end_of_eaDogM_WriteString:
 10138                           	opt callstack 0
 10139                           
 10140 ;; *************** function _wait_lcd_set *****************
 10141 ;; Defined at:
 10142 ;;		line 146 in file "eadog.c"
 10143 ;; Parameters:    Size  Location     Type
 10144 ;;		None
 10145 ;; Auto vars:     Size  Location     Type
 10146 ;;		None
 10147 ;; Return value:  Size  Location     Type
 10148 ;;                  1  [STACK] void 
 10149 ;; Registers used:
 10150 ;;		None
 10151 ;; Tracked objects:
 10152 ;;		On entry : 0/3D
 10153 ;;		On exit  : 3F/0
 10154 ;;		Unchanged: 0/0
 10155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10160 ;;Total ram usage:        0 bytes
 10161 ;; Hardware stack levels used:    1
 10162 ;; Hardware stack levels required when called:   15
 10163 ;; This function calls:
 10164 ;;		Nothing
 10165 ;; This function is called by:
 10166 ;;		_eaDogM_WriteString
 10167 ;;		_send_lcd_cmd_dma
 10168 ;; This function uses a reentrant model
 10169 ;;
 10170                           
 10171                           	psect	text39
 10172  01B720                     __ptext39:
 10173                           	opt callstack 0
 10174  01B720                     _wait_lcd_set:
 10175                           	opt callstack 12
 10176                           
 10177                           ;eadog.c: 148:  spi_link.LCD_DATA = 1;
 10178                           
 10179                           ; BSR set to: 59
 10180                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10181                           ;incstack = 0
 10182  01B720  0100               	movlb	0	; () banked
 10183  01B722  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 10184                           
 10185                           ; BSR set to: 0
 10186                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 10187  01B724  0012               	return		;funcret
 10188  01B726                     __end_of_wait_lcd_set:
 10189                           	opt callstack 0
 10190                           
 10191 ;; *************** function _start_lcd *****************
 10192 ;; Defined at:
 10193 ;;		line 141 in file "eadog.c"
 10194 ;; Parameters:    Size  Location     Type
 10195 ;;		None
 10196 ;; Auto vars:     Size  Location     Type
 10197 ;;		None
 10198 ;; Return value:  Size  Location     Type
 10199 ;;                  1  [STACK] void 
 10200 ;; Registers used:
 10201 ;;		None
 10202 ;; Tracked objects:
 10203 ;;		On entry : 3F/0
 10204 ;;		On exit  : 3F/3B
 10205 ;;		Unchanged: 0/0
 10206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10211 ;;Total ram usage:        0 bytes
 10212 ;; Hardware stack levels used:    1
 10213 ;; Hardware stack levels required when called:   15
 10214 ;; This function calls:
 10215 ;;		Nothing
 10216 ;; This function is called by:
 10217 ;;		_eaDogM_WriteString
 10218 ;;		_send_lcd_cmd_dma
 10219 ;; This function uses a reentrant model
 10220 ;;
 10221                           
 10222                           	psect	text40
 10223  01B726                     __ptext40:
 10224                           	opt callstack 0
 10225  01B726                     _start_lcd:
 10226                           	opt callstack 12
 10227                           
 10228                           ;eadog.c: 143:  DMA1CON0bits.DMA1SIRQEN = 1;
 10229                           
 10230                           ; BSR set to: 0
 10231                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10232                           ;incstack = 0
 10233  01B726  013B               	movlb	59	; () banked
 10234  01B728  8DFC               	bsf	252,6,b	;volatile
 10235                           
 10236                           ; BSR set to: 59
 10237                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 10238  01B72A  0012               	return		;funcret
 10239  01B72C                     __end_of_start_lcd:
 10240                           	opt callstack 0
 10241                           
 10242 ;; *************** function _ringBufS_flush *****************
 10243 ;; Defined at:
 10244 ;;		line 76 in file "ringbufs.c"
 10245 ;; Parameters:    Size  Location     Type
 10246 ;;  _this           2  [STACK] PTR struct ringBufS_t
 10247 ;;		 -> ring_buf1(67), 
 10248 ;;  clearBuffer     1  [STACK] const char 
 10249 ;; Auto vars:     Size  Location     Type
 10250 ;;		None
 10251 ;; Return value:  Size  Location     Type
 10252 ;;                  1  [STACK] void 
 10253 ;; Registers used:
 10254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10255 ;; Tracked objects:
 10256 ;;		On entry : 3F/0
 10257 ;;		On exit  : 0/0
 10258 ;;		Unchanged: 0/0
 10259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10264 ;;Total ram usage:        0 bytes
 10265 ;; Hardware stack levels used:    1
 10266 ;; Hardware stack levels required when called:   16
 10267 ;; This function calls:
 10268 ;;		_memset
 10269 ;; This function is called by:
 10270 ;;		_eaDogM_WriteString
 10271 ;;		_send_lcd_cmd_dma
 10272 ;; This function uses a reentrant model
 10273 ;;
 10274                           
 10275                           	psect	text41
 10276  01A088                     __ptext41:
 10277                           	opt callstack 0
 10278  01A088                     _ringBufS_flush:
 10279                           	opt callstack 11
 10280                           
 10281                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 10282                           ;stkvar	__this @ sp[(0)+-2]
 10283                           
 10284                           ; BSR set to: 59
 10285                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10286                           ;incstack = 0
 10287  01A088  0EFE               	movlw	-2
 10288  01A08A  006F FF8C  F00B    	movff	plusw1,btemp+10
 10289  01A090  0EFF               	movlw	-1
 10290  01A092  006F FF8C  F00C    	movff	plusw1,btemp+11
 10291  01A098  0E42               	movlw	66
 10292  01A09A  240B               	addwf	(btemp+10)^0,w,c
 10293  01A09C  6ED9               	movwf	fsr2l,c
 10294  01A09E  0E00               	movlw	0
 10295  01A0A0  200C               	addwfc	(btemp+11)^0,w,c
 10296  01A0A2  6EDA               	movwf	fsr2h,c
 10297  01A0A4  0E00               	movlw	0
 10298  01A0A6  6EDF               	movwf	indf2,c
 10299                           
 10300                           ;ringbufs.c: 79:  _this->head = 0;
 10301                           ;stkvar	__this @ sp[(0)+-2]
 10302  01A0A8  0EFE               	movlw	-2
 10303  01A0AA  006F FF8C  F00B    	movff	plusw1,btemp+10
 10304  01A0B0  0EFF               	movlw	-1
 10305  01A0B2  006F FF8C  F00C    	movff	plusw1,btemp+11
 10306  01A0B8  0E40               	movlw	64
 10307  01A0BA  240B               	addwf	(btemp+10)^0,w,c
 10308  01A0BC  6ED9               	movwf	fsr2l,c
 10309  01A0BE  0E00               	movlw	0
 10310  01A0C0  200C               	addwfc	(btemp+11)^0,w,c
 10311  01A0C2  6EDA               	movwf	fsr2h,c
 10312  01A0C4  0E00               	movlw	0
 10313  01A0C6  6EDF               	movwf	indf2,c
 10314                           
 10315                           ;ringbufs.c: 80:  _this->tail = 0;
 10316                           ;stkvar	__this @ sp[(0)+-2]
 10317  01A0C8  0EFE               	movlw	-2
 10318  01A0CA  006F FF8C  F00B    	movff	plusw1,btemp+10
 10319  01A0D0  0EFF               	movlw	-1
 10320  01A0D2  006F FF8C  F00C    	movff	plusw1,btemp+11
 10321  01A0D8  0E41               	movlw	65
 10322  01A0DA  240B               	addwf	(btemp+10)^0,w,c
 10323  01A0DC  6ED9               	movwf	fsr2l,c
 10324  01A0DE  0E00               	movlw	0
 10325  01A0E0  200C               	addwfc	(btemp+11)^0,w,c
 10326  01A0E2  6EDA               	movwf	fsr2h,c
 10327  01A0E4  0E00               	movlw	0
 10328  01A0E6  6EDF               	movwf	indf2,c
 10329                           
 10330                           ;ringbufs.c: 81:  if (clearBuffer) {
 10331                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 10332  01A0E8  0EFD               	movlw	-3
 10333  01A0EA  50E3               	movf	plusw1,w,c
 10334  01A0EC  B4D8               	btfsc	status,2,c
 10335  01A0EE  D011               	goto	l1579
 10336                           
 10337                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 10338  01A0F0  0E40               	movlw	64
 10339  01A0F2  6EE6               	movwf	postinc1,c
 10340  01A0F4  0E00               	movlw	0
 10341  01A0F6  6EE6               	movwf	postinc1,c
 10342  01A0F8  0E00               	movlw	0
 10343  01A0FA  6EE6               	movwf	postinc1,c
 10344  01A0FC  0E00               	movlw	0
 10345  01A0FE  6EE6               	movwf	postinc1,c
 10346                           
 10347                           ;stkvar	__this @ sp[(-4)+-2]
 10348  01A100  0EFA               	movlw	-6
 10349  01A102  006F FF8F FFE6     	movff	plusw1,postinc1
 10350  01A108  006F FF8F FFE6     	movff	plusw1,postinc1
 10351  01A10E  EC64  F0B4         	call	_memset	;wreg free
 10352  01A112                     l1579:
 10353                           
 10354                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 10355  01A112  52E5               	movf	postdec1,f,c
 10356  01A114  52E5               	movf	postdec1,f,c
 10357  01A116  52E5               	movf	postdec1,f,c
 10358  01A118  0012               	return		;funcret
 10359  01A11A                     __end_of_ringBufS_flush:
 10360                           	opt callstack 0
 10361                           
 10362 ;; *************** function _memset *****************
 10363 ;; Defined at:
 10364 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 10365 ;; Parameters:    Size  Location     Type
 10366 ;;  dest            2  [STACK] PTR void 
 10367 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10368 ;;  c               2  [STACK] int 
 10369 ;;  n               2  [STACK] unsigned int 
 10370 ;; Auto vars:     Size  Location     Type
 10371 ;;  s               2  [STACK] PTR unsigned char 
 10372 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10373 ;;  k               2  [STACK] unsigned int 
 10374 ;; Return value:  Size  Location     Type
 10375 ;;                  2  [STACK] PTR void 
 10376 ;; Registers used:
 10377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10378 ;; Tracked objects:
 10379 ;;		On entry : 0/0
 10380 ;;		On exit  : 0/0
 10381 ;;		Unchanged: 0/0
 10382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10387 ;;Total ram usage:        0 bytes
 10388 ;; Hardware stack levels used:    1
 10389 ;; Hardware stack levels required when called:   15
 10390 ;; This function calls:
 10391 ;;		Nothing
 10392 ;; This function is called by:
 10393 ;;		_ringBufS_init
 10394 ;;		_ringBufS_flush
 10395 ;; This function uses a reentrant model
 10396 ;;
 10397                           
 10398                           	psect	text42
 10399  0168C8                     __ptext42:
 10400                           	opt callstack 0
 10401  0168C8                     _memset:
 10402                           	opt callstack 0
 10403                           
 10404                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10405  0168C8  52E6               	movf	postinc1,f,c
 10406  0168CA  52E6               	movf	postinc1,f,c
 10407  0168CC  52E6               	movf	postinc1,f,c
 10408  0168CE  52E6               	movf	postinc1,f,c
 10409                           
 10410                           ;stkvar	_dest @ sp[(-4)+-2]
 10411                           
 10412                           ;incstack = 0
 10413  0168D0  0EFA               	movlw	-6
 10414  0168D2  006F FF8C  F00B    	movff	plusw1,btemp+10
 10415  0168D8  0EFB               	movlw	-5
 10416  0168DA  006F FF8C  F00C    	movff	plusw1,btemp+11
 10417                           
 10418                           ;stkvar	_s @ sp[(-4)+0]
 10419  0168E0  0EFD               	movlw	-3
 10420  0168E2  0060  F033  FFE3   	movff	btemp+11,plusw1
 10421  0168E8  0EFC               	movlw	-4
 10422  0168EA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10423                           
 10424                           ;stkvar	_n @ sp[(-4)+-6]
 10425  0168F0  0EF6               	movlw	-10
 10426  0168F2  006F FF8C  F001    	movff	plusw1,btemp
 10427  0168F8  0EF7               	movlw	-9
 10428  0168FA  50E3               	movf	plusw1,w,c
 10429  0168FC  1001               	iorwf	btemp^0,w,c
 10430  0168FE  B4D8               	btfsc	status,2,c
 10431  016900  D154               	goto	u10450
 10432                           
 10433                           ;stkvar	_c @ sp[(-4)+-4]
 10434                           ;stkvar	_s @ sp[(-4)+0]
 10435  016902  0EFC               	movlw	-4
 10436  016904  006F FF8F FFD9     	movff	plusw1,fsr2l
 10437  01690A  0EFD               	movlw	-3
 10438  01690C  006F FF8F FFDA     	movff	plusw1,fsr2h
 10439  016912  0EF8               	movlw	-8
 10440  016914  006F FF8F FFDF     	movff	plusw1,indf2
 10441                           
 10442                           ;stkvar	_c @ sp[(-4)+-4]
 10443                           ;stkvar	_n @ sp[(-4)+-6]
 10444                           ;stkvar	_s @ sp[(-4)+0]
 10445  01691A  0EFC               	movlw	-4
 10446  01691C  006F FF8C  F00B    	movff	plusw1,btemp+10
 10447  016922  0EFD               	movlw	-3
 10448  016924  006F FF8C  F00C    	movff	plusw1,btemp+11
 10449  01692A  0EF6               	movlw	-10
 10450  01692C  50E3               	movf	plusw1,w,c
 10451  01692E  260B               	addwf	(btemp+10)^0,f,c
 10452  016930  0EF7               	movlw	-9
 10453  016932  50E3               	movf	plusw1,w,c
 10454  016934  220C               	addwfc	(btemp+11)^0,f,c
 10455  016936  0EFF               	movlw	255
 10456  016938  240B               	addwf	(btemp+10)^0,w,c
 10457  01693A  6ED9               	movwf	fsr2l,c
 10458  01693C  0EFF               	movlw	255
 10459  01693E  200C               	addwfc	(btemp+11)^0,w,c
 10460  016940  6EDA               	movwf	fsr2h,c
 10461  016942  0EF8               	movlw	-8
 10462  016944  006F FF8F FFDF     	movff	plusw1,indf2
 10463                           
 10464                           ;stkvar	_n @ sp[(-4)+-6]
 10465  01694A  0EF7               	movlw	-9
 10466  01694C  50E3               	movf	plusw1,w,c
 10467  01694E  E108               	bnz	l11444
 10468  016950  0EF6               	movlw	-10
 10469  016952  006F FF8C  F001    	movff	plusw1,btemp
 10470  016958  0E03               	movlw	3
 10471  01695A  5E01               	subwf	btemp^0,f,c
 10472  01695C  A0D8               	btfss	status,0,c
 10473  01695E  D125               	goto	u10450
 10474  016960                     l11444:
 10475                           
 10476                           ;stkvar	_c @ sp[(-4)+-4]
 10477                           ;stkvar	_s @ sp[(-4)+0]
 10478  016960  0EFC               	movlw	-4
 10479  016962  006F FF8C  F00B    	movff	plusw1,btemp+10
 10480  016968  0EFD               	movlw	-3
 10481  01696A  006F FF8C  F00C    	movff	plusw1,btemp+11
 10482  016970  0E01               	movlw	1
 10483  016972  240B               	addwf	(btemp+10)^0,w,c
 10484  016974  6ED9               	movwf	fsr2l,c
 10485  016976  0E00               	movlw	0
 10486  016978  200C               	addwfc	(btemp+11)^0,w,c
 10487  01697A  6EDA               	movwf	fsr2h,c
 10488  01697C  0EF8               	movlw	-8
 10489  01697E  006F FF8F FFDF     	movff	plusw1,indf2
 10490                           
 10491                           ;stkvar	_c @ sp[(-4)+-4]
 10492                           ;stkvar	_s @ sp[(-4)+0]
 10493  016984  0EFC               	movlw	-4
 10494  016986  006F FF8C  F00B    	movff	plusw1,btemp+10
 10495  01698C  0EFD               	movlw	-3
 10496  01698E  006F FF8C  F00C    	movff	plusw1,btemp+11
 10497  016994  0E02               	movlw	2
 10498  016996  240B               	addwf	(btemp+10)^0,w,c
 10499  016998  6ED9               	movwf	fsr2l,c
 10500  01699A  0E00               	movlw	0
 10501  01699C  200C               	addwfc	(btemp+11)^0,w,c
 10502  01699E  6EDA               	movwf	fsr2h,c
 10503  0169A0  0EF8               	movlw	-8
 10504  0169A2  006F FF8F FFDF     	movff	plusw1,indf2
 10505                           
 10506                           ;stkvar	_c @ sp[(-4)+-4]
 10507                           ;stkvar	_n @ sp[(-4)+-6]
 10508                           ;stkvar	_s @ sp[(-4)+0]
 10509  0169A8  0EFC               	movlw	-4
 10510  0169AA  006F FF8C  F00B    	movff	plusw1,btemp+10
 10511  0169B0  0EFD               	movlw	-3
 10512  0169B2  006F FF8C  F00C    	movff	plusw1,btemp+11
 10513  0169B8  0EF6               	movlw	-10
 10514  0169BA  50E3               	movf	plusw1,w,c
 10515  0169BC  260B               	addwf	(btemp+10)^0,f,c
 10516  0169BE  0EF7               	movlw	-9
 10517  0169C0  50E3               	movf	plusw1,w,c
 10518  0169C2  220C               	addwfc	(btemp+11)^0,f,c
 10519  0169C4  0EFE               	movlw	254
 10520  0169C6  240B               	addwf	(btemp+10)^0,w,c
 10521  0169C8  6ED9               	movwf	fsr2l,c
 10522  0169CA  0EFF               	movlw	255
 10523  0169CC  200C               	addwfc	(btemp+11)^0,w,c
 10524  0169CE  6EDA               	movwf	fsr2h,c
 10525  0169D0  0EF8               	movlw	-8
 10526  0169D2  006F FF8F FFDF     	movff	plusw1,indf2
 10527                           
 10528                           ;stkvar	_c @ sp[(-4)+-4]
 10529                           ;stkvar	_n @ sp[(-4)+-6]
 10530                           ;stkvar	_s @ sp[(-4)+0]
 10531  0169D8  0EFC               	movlw	-4
 10532  0169DA  006F FF8C  F00B    	movff	plusw1,btemp+10
 10533  0169E0  0EFD               	movlw	-3
 10534  0169E2  006F FF8C  F00C    	movff	plusw1,btemp+11
 10535  0169E8  0EF6               	movlw	-10
 10536  0169EA  50E3               	movf	plusw1,w,c
 10537  0169EC  260B               	addwf	(btemp+10)^0,f,c
 10538  0169EE  0EF7               	movlw	-9
 10539  0169F0  50E3               	movf	plusw1,w,c
 10540  0169F2  220C               	addwfc	(btemp+11)^0,f,c
 10541  0169F4  0EFD               	movlw	253
 10542  0169F6  240B               	addwf	(btemp+10)^0,w,c
 10543  0169F8  6ED9               	movwf	fsr2l,c
 10544  0169FA  0EFF               	movlw	255
 10545  0169FC  200C               	addwfc	(btemp+11)^0,w,c
 10546  0169FE  6EDA               	movwf	fsr2h,c
 10547  016A00  0EF8               	movlw	-8
 10548  016A02  006F FF8F FFDF     	movff	plusw1,indf2
 10549                           
 10550                           ;stkvar	_n @ sp[(-4)+-6]
 10551  016A08  0EF7               	movlw	-9
 10552  016A0A  50E3               	movf	plusw1,w,c
 10553  016A0C  E108               	bnz	l11450
 10554  016A0E  0EF6               	movlw	-10
 10555  016A10  006F FF8C  F001    	movff	plusw1,btemp
 10556  016A16  0E07               	movlw	7
 10557  016A18  5E01               	subwf	btemp^0,f,c
 10558  016A1A  A0D8               	btfss	status,0,c
 10559  016A1C  D0C6               	goto	u10450
 10560  016A1E                     l11450:
 10561                           
 10562                           ;stkvar	_c @ sp[(-4)+-4]
 10563                           ;stkvar	_s @ sp[(-4)+0]
 10564  016A1E  0EFC               	movlw	-4
 10565  016A20  006F FF8C  F00B    	movff	plusw1,btemp+10
 10566  016A26  0EFD               	movlw	-3
 10567  016A28  006F FF8C  F00C    	movff	plusw1,btemp+11
 10568  016A2E  0E03               	movlw	3
 10569  016A30  240B               	addwf	(btemp+10)^0,w,c
 10570  016A32  6ED9               	movwf	fsr2l,c
 10571  016A34  0E00               	movlw	0
 10572  016A36  200C               	addwfc	(btemp+11)^0,w,c
 10573  016A38  6EDA               	movwf	fsr2h,c
 10574  016A3A  0EF8               	movlw	-8
 10575  016A3C  006F FF8F FFDF     	movff	plusw1,indf2
 10576                           
 10577                           ;stkvar	_c @ sp[(-4)+-4]
 10578                           ;stkvar	_n @ sp[(-4)+-6]
 10579                           ;stkvar	_s @ sp[(-4)+0]
 10580  016A42  0EFC               	movlw	-4
 10581  016A44  006F FF8C  F00B    	movff	plusw1,btemp+10
 10582  016A4A  0EFD               	movlw	-3
 10583  016A4C  006F FF8C  F00C    	movff	plusw1,btemp+11
 10584  016A52  0EF6               	movlw	-10
 10585  016A54  50E3               	movf	plusw1,w,c
 10586  016A56  260B               	addwf	(btemp+10)^0,f,c
 10587  016A58  0EF7               	movlw	-9
 10588  016A5A  50E3               	movf	plusw1,w,c
 10589  016A5C  220C               	addwfc	(btemp+11)^0,f,c
 10590  016A5E  0EFC               	movlw	252
 10591  016A60  240B               	addwf	(btemp+10)^0,w,c
 10592  016A62  6ED9               	movwf	fsr2l,c
 10593  016A64  0EFF               	movlw	255
 10594  016A66  200C               	addwfc	(btemp+11)^0,w,c
 10595  016A68  6EDA               	movwf	fsr2h,c
 10596  016A6A  0EF8               	movlw	-8
 10597  016A6C  006F FF8F FFDF     	movff	plusw1,indf2
 10598                           
 10599                           ;stkvar	_n @ sp[(-4)+-6]
 10600  016A72  0EF7               	movlw	-9
 10601  016A74  50E3               	movf	plusw1,w,c
 10602  016A76  E108               	bnz	l11456
 10603  016A78  0EF6               	movlw	-10
 10604  016A7A  006F FF8C  F001    	movff	plusw1,btemp
 10605  016A80  0E09               	movlw	9
 10606  016A82  5E01               	subwf	btemp^0,f,c
 10607  016A84  A0D8               	btfss	status,0,c
 10608  016A86  D091               	goto	u10450
 10609  016A88                     l11456:
 10610                           
 10611                           ;stkvar	_s @ sp[(-4)+0]
 10612  016A88  0EFC               	movlw	-4
 10613  016A8A  006F FF8C  F00B    	movff	plusw1,btemp+10
 10614  016A90  1E0B               	comf	(btemp+10)^0,f,c
 10615  016A92  0EFD               	movlw	-3
 10616  016A94  006F FF8C  F00C    	movff	plusw1,btemp+11
 10617  016A9A  1E0C               	comf	(btemp+11)^0,f,c
 10618  016A9C  2A0B               	incf	(btemp+10)^0,f,c
 10619  016A9E  B4D8               	btfsc	status,2,c
 10620  016AA0  2A0C               	incf	(btemp+11)^0,f,c
 10621  016AA2  0E03               	movlw	3
 10622  016AA4  160B               	andwf	(btemp+10)^0,f,c
 10623  016AA6  0E00               	movlw	0
 10624  016AA8  160C               	andwf	(btemp+11)^0,f,c
 10625                           
 10626                           ;stkvar	_k @ sp[(-4)+2]
 10627  016AAA  0EFE               	movlw	-2
 10628  016AAC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10629  016AB2  0EFF               	movlw	-1
 10630  016AB4  0060  F033  FFE3   	movff	btemp+11,plusw1
 10631                           
 10632                           ;stkvar	_k @ sp[(-4)+2]
 10633                           ;stkvar	_s @ sp[(-4)+0]
 10634  016ABA  0EFC               	movlw	-4
 10635  016ABC  50E3               	movf	plusw1,w,c
 10636  016ABE  6E01               	movwf	btemp^0,c
 10637  016AC0  0EFE               	movlw	-2
 10638  016AC2  50E3               	movf	plusw1,w,c
 10639  016AC4  2601               	addwf	btemp^0,f,c
 10640  016AC6  0EFC               	movlw	-4
 10641  016AC8  0060  F007  FFE3   	movff	btemp,plusw1
 10642  016ACE  0EFD               	movlw	-3
 10643  016AD0  50E3               	movf	plusw1,w,c
 10644  016AD2  6E01               	movwf	btemp^0,c
 10645  016AD4  0EFF               	movlw	-1
 10646  016AD6  50E3               	movf	plusw1,w,c
 10647  016AD8  2201               	addwfc	btemp^0,f,c
 10648  016ADA  0EFD               	movlw	-3
 10649  016ADC  0060  F007  FFE3   	movff	btemp,plusw1
 10650                           
 10651                           ;stkvar	_k @ sp[(-4)+2]
 10652                           ;stkvar	_n @ sp[(-4)+-6]
 10653  016AE2  0EF6               	movlw	-10
 10654  016AE4  50E3               	movf	plusw1,w,c
 10655  016AE6  6E01               	movwf	btemp^0,c
 10656  016AE8  0EFE               	movlw	-2
 10657  016AEA  50E3               	movf	plusw1,w,c
 10658  016AEC  5E01               	subwf	btemp^0,f,c
 10659  016AEE  0EF6               	movlw	-10
 10660  016AF0  0060  F007  FFE3   	movff	btemp,plusw1
 10661  016AF6  0EF7               	movlw	-9
 10662  016AF8  50E3               	movf	plusw1,w,c
 10663  016AFA  6E01               	movwf	btemp^0,c
 10664  016AFC  0EFF               	movlw	-1
 10665  016AFE  50E3               	movf	plusw1,w,c
 10666  016B00  5A01               	subwfb	btemp^0,f,c
 10667  016B02  0EF7               	movlw	-9
 10668  016B04  0060  F007  FFE3   	movff	btemp,plusw1
 10669  016B0A  0EFC               	movlw	252
 10670  016B0C  6E0B               	movwf	(btemp+10)^0,c
 10671  016B0E  0EFF               	movlw	255
 10672  016B10  6E0C               	movwf	(btemp+11)^0,c
 10673                           
 10674                           ;stkvar	_n @ sp[(-4)+-6]
 10675  016B12  0EF6               	movlw	-10
 10676  016B14  006F FF8C  F001    	movff	plusw1,btemp
 10677  016B1A  500B               	movf	(btemp+10)^0,w,c
 10678  016B1C  1601               	andwf	btemp^0,f,c
 10679  016B1E  0EF6               	movlw	-10
 10680  016B20  0060  F007  FFE3   	movff	btemp,plusw1
 10681  016B26  0EF7               	movlw	-9
 10682  016B28  006F FF8C  F001    	movff	plusw1,btemp
 10683  016B2E  500C               	movf	(btemp+11)^0,w,c
 10684  016B30  1601               	andwf	btemp^0,f,c
 10685  016B32  0EF7               	movlw	-9
 10686  016B34  D02E               	goto	L7
 10687  016B36                     l11464:
 10688                           
 10689                           ;stkvar	_c @ sp[(-4)+-4]
 10690                           ;stkvar	_s @ sp[(-4)+0]
 10691  016B36  0EFC               	movlw	-4
 10692  016B38  006F FF8F FFD9     	movff	plusw1,fsr2l
 10693  016B3E  0EFD               	movlw	-3
 10694  016B40  006F FF8F FFDA     	movff	plusw1,fsr2h
 10695  016B46  0EF8               	movlw	-8
 10696  016B48  006F FF8F FFDF     	movff	plusw1,indf2
 10697                           
 10698                           ;stkvar	_n @ sp[(-4)+-6]
 10699  016B4E  0EF6               	movlw	-10
 10700  016B50  006F FF8C  F001    	movff	plusw1,btemp
 10701  016B56  0E01               	movlw	1
 10702  016B58  5E01               	subwf	btemp^0,f,c
 10703  016B5A  0EF6               	movlw	-10
 10704  016B5C  0060  F007  FFE3   	movff	btemp,plusw1
 10705  016B62  0EF7               	movlw	-9
 10706  016B64  006F FF8C  F001    	movff	plusw1,btemp
 10707  016B6A  0E00               	movlw	0
 10708  016B6C  5A01               	subwfb	btemp^0,f,c
 10709  016B6E  0EF7               	movlw	-9
 10710  016B70  0060  F007  FFE3   	movff	btemp,plusw1
 10711                           
 10712                           ;stkvar	_s @ sp[(-4)+0]
 10713  016B76  0EFC               	movlw	-4
 10714  016B78  50E3               	movf	plusw1,w,c
 10715  016B7A  0F01               	addlw	1
 10716  016B7C  6E01               	movwf	btemp^0,c
 10717  016B7E  0EFC               	movlw	-4
 10718  016B80  0060  F007  FFE3   	movff	btemp,plusw1
 10719  016B86  6A01               	clrf	btemp^0,c
 10720  016B88  0EFD               	movlw	-3
 10721  016B8A  50E3               	movf	plusw1,w,c
 10722  016B8C  2001               	addwfc	btemp^0,w,c
 10723  016B8E  6E01               	movwf	btemp^0,c
 10724  016B90  0EFD               	movlw	-3
 10725  016B92                     L7:
 10726  016B92  0060  F007  FFE3   	movff	btemp,plusw1
 10727                           
 10728                           ;stkvar	_n @ sp[(-4)+-6]
 10729  016B98  0EF6               	movlw	-10
 10730  016B9A  006F FF8C  F001    	movff	plusw1,btemp
 10731  016BA0  0EF7               	movlw	-9
 10732  016BA2  50E3               	movf	plusw1,w,c
 10733  016BA4  1001               	iorwf	btemp^0,w,c
 10734  016BA6  A4D8               	btfss	status,2,c
 10735  016BA8  D7C6               	goto	l11464
 10736  016BAA                     u10450:
 10737                           
 10738                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 10739  016BAA  0EF6               	movlw	246
 10740  016BAC  26E1               	addwf	fsr1l,f,c
 10741  016BAE  0EFF               	movlw	255
 10742  016BB0  22E2               	addwfc	fsr1h,f,c
 10743  016BB2  0012               	return		;funcret
 10744  016BB4                     __end_of_memset:
 10745                           	opt callstack 0
 10746                           
 10747 ;; *************** function _printf *****************
 10748 ;; Defined at:
 10749 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 10750 ;; Parameters:    Size  Location     Type
 10751 ;;  fmt             2  [STACK] PTR const unsigned char 
 10752 ;;		 -> STR_45(3), STR_44(3), STR_43(3), 
 10753 ;; Auto vars:     Size  Location     Type
 10754 ;;  ap              2  [STACK] PTR void [1]
 10755 ;;		 -> ?_printf(2), ?_sprintf(2), 
 10756 ;;  ret             2    0        int 
 10757 ;; Return value:  Size  Location     Type
 10758 ;;                  2  [STACK] int 
 10759 ;; Registers used:
 10760 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10761 ;; Tracked objects:
 10762 ;;		On entry : 3F/3B
 10763 ;;		On exit  : 3F/0
 10764 ;;		Unchanged: 0/0
 10765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10770 ;;Total ram usage:        0 bytes
 10771 ;; Hardware stack levels used:    1
 10772 ;; Hardware stack levels required when called:   23
 10773 ;; This function calls:
 10774 ;;		_vfprintf
 10775 ;; This function is called by:
 10776 ;;		_eaDogM_WriteString
 10777 ;;		_send_lcd_cmd_dma
 10778 ;; This function uses a reentrant model
 10779 ;;
 10780                           
 10781                           	psect	text43
 10782  01A654                     __ptext43:
 10783                           	opt callstack 0
 10784  01A654                     _printf:
 10785                           	opt callstack 0
 10786                           
 10787                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10788  01A654  52E6               	movf	postinc1,f,c
 10789  01A656  52E6               	movf	postinc1,f,c
 10790                           
 10791                           ;stkvar	?_printf @ sp[(-2)+-3]
 10792                           
 10793                           ;incstack = 0
 10794  01A658  0EFB               	movlw	251
 10795  01A65A  24E1               	addwf	fsr1l,w,c
 10796  01A65C  6E0B               	movwf	(btemp+10)^0,c
 10797  01A65E  0EFF               	movlw	255
 10798  01A660  20E2               	addwfc	fsr1h,w,c
 10799  01A662  6E0C               	movwf	(btemp+11)^0,c
 10800                           
 10801                           ;stkvar	_ap @ sp[(-2)+0]
 10802  01A664  0EFF               	movlw	-1
 10803  01A666  0060  F033  FFE3   	movff	btemp+11,plusw1
 10804  01A66C  0EFE               	movlw	-2
 10805  01A66E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10806                           
 10807                           ;stkvar	_ap @ sp[(-2)+0]
 10808  01A674  0EFE               	movlw	254
 10809  01A676  24E1               	addwf	fsr1l,w,c
 10810  01A678  6E01               	movwf	btemp^0,c
 10811  01A67A  0EFF               	movlw	255
 10812  01A67C  20E2               	addwfc	fsr1h,w,c
 10813  01A67E  6E02               	movwf	(btemp+1)^0,c
 10814  01A680  0060  F007  FFE6   	movff	btemp,postinc1
 10815  01A686  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10816                           
 10817                           ;stkvar	_fmt @ sp[(-4)+-3]
 10818  01A68C  0EF9               	movlw	-7
 10819  01A68E  006F FF8F FFE6     	movff	plusw1,postinc1
 10820  01A694  006F FF8F FFE6     	movff	plusw1,postinc1
 10821  01A69A  0E00               	movlw	0
 10822  01A69C  6EE6               	movwf	postinc1,c
 10823  01A69E  0E00               	movlw	0
 10824  01A6A0  6EE6               	movwf	postinc1,c
 10825  01A6A2  EC60  F0CE         	call	_vfprintf	;wreg free
 10826                           
 10827                           ; BSR set to: 0
 10828                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 10829  01A6A6  52E5               	movf	postdec1,f,c
 10830  01A6A8  52E5               	movf	postdec1,f,c
 10831  01A6AA  52E5               	movf	postdec1,f,c
 10832  01A6AC  50E7               	movf	indf1,w,c
 10833  01A6AE  5EE1               	subwf	fsr1l,f,c
 10834  01A6B0  0E00               	movlw	0
 10835  01A6B2  5AE2               	subwfb	fsr1h,f,c
 10836  01A6B4  0012               	return		;funcret
 10837  01A6B6                     __end_of_printf:
 10838                           	opt callstack 0
 10839                           
 10840 ;; *************** function _vfprintf *****************
 10841 ;; Defined at:
 10842 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10843 ;; Parameters:    Size  Location     Type
 10844 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10845 ;;		 -> f(6), NULL(0), 
 10846 ;;  fmt             2  [STACK] PTR const unsigned char 
 10847 ;;		 -> STR_65(85), STR_63(3), STR_62(3), STR_61(19), 
 10848 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 10849 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 10850 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 10851 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 10852 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 10853 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 10854 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 10855 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 10856 ;;		 -> STR_26(19), STR_25(19), STR_24(19), STR_23(19), 
 10857 ;;		 -> STR_22(19), STR_21(17), STR_20(16), STR_19(16), 
 10858 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(22), 
 10859 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 10860 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 10861 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 10862 ;;		 -> STR_1(17), 
 10863 ;;  ap              2  [STACK] PTR PTR void 
 10864 ;;		 -> ap(2), ap(2), 
 10865 ;; Auto vars:     Size  Location     Type
 10866 ;;  cfmt            2  [STACK] PTR unsigned char 
 10867 ;;		 -> STR_65(85), STR_63(3), STR_62(3), STR_61(19), 
 10868 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 10869 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 10870 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 10871 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 10872 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 10873 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 10874 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 10875 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 10876 ;;		 -> STR_26(19), STR_25(19), STR_24(19), STR_23(19), 
 10877 ;;		 -> STR_22(19), STR_21(17), STR_20(16), STR_19(16), 
 10878 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(22), 
 10879 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 10880 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 10881 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 10882 ;;		 -> STR_1(17), 
 10883 ;; Return value:  Size  Location     Type
 10884 ;;                  2  [STACK] int 
 10885 ;; Registers used:
 10886 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10887 ;; Tracked objects:
 10888 ;;		On entry : 0/1
 10889 ;;		On exit  : 3F/0
 10890 ;;		Unchanged: 0/0
 10891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10896 ;;Total ram usage:        0 bytes
 10897 ;; Hardware stack levels used:    1
 10898 ;; Hardware stack levels required when called:   22
 10899 ;; This function calls:
 10900 ;;		_vfpfcnvrt
 10901 ;; This function is called by:
 10902 ;;		_sprintf
 10903 ;;		_printf
 10904 ;; This function uses a reentrant model
 10905 ;;
 10906                           
 10907                           	psect	text44
 10908  019CC0                     __ptext44:
 10909                           	opt callstack 0
 10910  019CC0                     _vfprintf:
 10911                           	opt callstack 0
 10912                           
 10913                           ; BSR set to: 0
 10914                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10915  019CC0  52E6               	movf	postinc1,f,c
 10916  019CC2  52E6               	movf	postinc1,f,c
 10917                           
 10918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 10919                           ;stkvar	_fmt @ sp[(-2)+-4]
 10920                           
 10921                           ;incstack = 0
 10922 ;; hardware stack exceeded
 10923  019CC4  0EFA               	movlw	-6
 10924  019CC6  006F FF8C  F00B    	movff	plusw1,btemp+10
 10925  019CCC  0EFB               	movlw	-5
 10926  019CCE  006F FF8C  F00C    	movff	plusw1,btemp+11
 10927                           
 10928                           ;stkvar	_cfmt @ sp[(-2)+0]
 10929  019CD4  0EFF               	movlw	-1
 10930  019CD6  0060  F033  FFE3   	movff	btemp+11,plusw1
 10931  019CDC  0EFE               	movlw	-2
 10932  019CDE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10933                           
 10934                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 10935  019CE4  0100               	movlb	0	; () banked
 10936  019CE6  6BC0               	clrf	_nout& (0+255),b
 10937  019CE8  6BC1               	clrf	(_nout+1)& (0+255),b
 10938                           
 10939                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 10940  019CEA  D021               	goto	l12288
 10941  019CEC                     l12286:
 10942                           
 10943                           ; BSR set to: 0
 10944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 10945                           ;stkvar	_ap @ sp[(-2)+-6]
 10946  019CEC  0EF8               	movlw	-8
 10947  019CEE  006F FF8F FFE6     	movff	plusw1,postinc1
 10948  019CF4  006F FF8F FFE6     	movff	plusw1,postinc1
 10949                           
 10950                           ;stkvar	_cfmt @ sp[(-4)+0]
 10951  019CFA  0EFC               	movlw	252
 10952  019CFC  24E1               	addwf	fsr1l,w,c
 10953  019CFE  6E01               	movwf	btemp^0,c
 10954  019D00  0EFF               	movlw	255
 10955  019D02  20E2               	addwfc	fsr1h,w,c
 10956  019D04  6E02               	movwf	(btemp+1)^0,c
 10957  019D06  0060  F007  FFE6   	movff	btemp,postinc1
 10958  019D0C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10959                           
 10960                           ;stkvar	_fp @ sp[(-6)+-2]
 10961  019D12  0EF8               	movlw	-8
 10962  019D14  006F FF8F FFE6     	movff	plusw1,postinc1
 10963  019D1A  006F FF8F FFE6     	movff	plusw1,postinc1
 10964  019D20  EC17  F091         	call	_vfpfcnvrt	;wreg free
 10965  019D24  5001               	movf	btemp^0,w,c
 10966  019D26  0100               	movlb	0	; () banked
 10967  019D28  27C0               	addwf	_nout& (0+255),f,b
 10968  019D2A  5002               	movf	(btemp+1)^0,w,c
 10969  019D2C  23C1               	addwfc	(_nout+1)& (0+255),f,b
 10970  019D2E                     l12288:
 10971                           
 10972                           ; BSR set to: 0
 10973                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 10974                           ;stkvar	_cfmt @ sp[(-2)+0]
 10975  019D2E  50E1               	movf	fsr1l,w,c
 10976  019D30  0FFE               	addlw	-2
 10977  019D32  6ED9               	movwf	fsr2l,c
 10978  019D34  50E2               	movf	fsr1h,w,c
 10979  019D36  6EDA               	movwf	fsr2h,c
 10980  019D38  0EFF               	movlw	255
 10981  019D3A  22DA               	addwfc	fsr2h,f,c
 10982  019D3C  006F FF7B FFF6     	movff	postinc2,tblptrl
 10983  019D42  006F FF77 FFF7     	movff	postdec2,tblptrh
 10984  019D48                     	if	0	;tblptru may be non-zero
 10985  019D48                     	endif
 10986  019D48                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10987  019D48  0E00               	movlw	low (__mediumconst shr (0+16))
 10988  019D4A  6EF8               	movwf	tblptru,c
 10989  019D4C                     	endif
 10990  019D4C  0008               	tblrd		*
 10991  019D4E  50F5               	movf	tablat,w,c
 10992  019D50  0900               	iorlw	0
 10993  019D52  A4D8               	btfss	status,2,c
 10994  019D54  D7CB               	goto	l12286
 10995                           
 10996                           ; BSR set to: 0
 10997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 10998  019D56  0060  F300  F001   	movff	_nout,btemp
 10999  019D5C  0060  F304  F002   	movff	_nout+1,btemp+1
 11000                           
 11001                           ; BSR set to: 0
 11002                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 11003  019D62  0EF8               	movlw	248
 11004  019D64  26E1               	addwf	fsr1l,f,c
 11005  019D66  0EFF               	movlw	255
 11006  019D68  22E2               	addwfc	fsr1h,f,c
 11007  019D6A  0012               	return		;funcret
 11008  019D6C                     __end_of_vfprintf:
 11009                           	opt callstack 0
 11010                           
 11011 ;; *************** function _vfpfcnvrt *****************
 11012 ;; Defined at:
 11013 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11014 ;; Parameters:    Size  Location     Type
 11015 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11016 ;;		 -> f(6), NULL(0), 
 11017 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 11018 ;;		 -> cfmt(2), 
 11019 ;;  ap              2  [STACK] PTR PTR void 
 11020 ;;		 -> ap(2), ap(2), 
 11021 ;; Auto vars:     Size  Location     Type
 11022 ;;  llu             8  [STACK] unsigned long long 
 11023 ;;  ll              8  [STACK] long long 
 11024 ;;  f               4  [STACK] long long 
 11025 ;;  ct              3  [STACK] unsigned char [3]
 11026 ;;  vp              3    0        PTR void 
 11027 ;;  cp              2  [STACK] PTR unsigned char 
 11028 ;;		 -> ?_printf(2), ?_sprintf(2), STR_47(9), STR_46(12), 
 11029 ;;		 -> D.lcd(288), D(290), T(144), STR_3(6), 
 11030 ;;		 -> V(189), 
 11031 ;;  i               2    0        int 
 11032 ;;  done            2    0        int 
 11033 ;;  c               1  [STACK] unsigned char 
 11034 ;; Return value:  Size  Location     Type
 11035 ;;                  2  [STACK] int 
 11036 ;; Registers used:
 11037 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11038 ;; Tracked objects:
 11039 ;;		On entry : 0/0
 11040 ;;		On exit  : 0/0
 11041 ;;		Unchanged: 0/0
 11042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11047 ;;Total ram usage:        0 bytes
 11048 ;; Hardware stack levels used:    1
 11049 ;; Hardware stack levels required when called:   21
 11050 ;; This function calls:
 11051 ;;		_atoi
 11052 ;;		_ctoa
 11053 ;;		_dtoa
 11054 ;;		_efgtoa
 11055 ;;		_fputc
 11056 ;;		_isdigit
 11057 ;;		_isupper
 11058 ;;		_stoa
 11059 ;;		_strncmp
 11060 ;;		_tolower
 11061 ;;		_utoa
 11062 ;;		_xtoa
 11063 ;; This function is called by:
 11064 ;;		_vfprintf
 11065 ;; This function uses a reentrant model
 11066 ;;
 11067                           
 11068                           	psect	text45
 11069  01222E                     __ptext45:
 11070                           	opt callstack 0
 11071  01222E                     _vfpfcnvrt:
 11072                           	opt callstack 0
 11073                           
 11074                           ; BSR set to: 0
 11075                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11076  01222E  0E20               	movlw	32
 11077  012230  26E1               	addwf	fsr1l,f,c
 11078  012232  0E00               	movlw	0
 11079  012234  22E2               	addwfc	fsr1h,f,c
 11080                           
 11081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 11082                           ;stkvar	_fmt @ sp[(-32)+-4]
 11083                           
 11084                           ;incstack = 0
 11085 ;; hardware stack exceeded
 11086  012236  0EDC               	movlw	-36
 11087  012238  006F FF8F FFD9     	movff	plusw1,fsr2l
 11088  01223E  0EDD               	movlw	-35
 11089  012240  006F FF8F FFDA     	movff	plusw1,fsr2h
 11090  012246  006F FF7B FFF6     	movff	postinc2,tblptrl
 11091  01224C  006F FF77 FFF7     	movff	postdec2,tblptrh
 11092  012252                     	if	0	;tblptru may be non-zero
 11093  012252                     	endif
 11094  012252                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11095  012252  0E00               	movlw	low (__mediumconst shr (0+16))
 11096  012254  6EF8               	movwf	tblptru,c
 11097  012256                     	endif
 11098  012256  0008               	tblrd		*
 11099  012258  50F5               	movf	tablat,w,c
 11100  01225A  0A25               	xorlw	37
 11101  01225C  A4D8               	btfss	status,2,c
 11102  01225E  EFBE  F098         	goto	l12232
 11103                           
 11104                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 11105                           ;stkvar	_fmt @ sp[(-32)+-4]
 11106  012262  0EDC               	movlw	-36
 11107  012264  006F FF8F FFD9     	movff	plusw1,fsr2l
 11108  01226A  0EDD               	movlw	-35
 11109  01226C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11110  012272  2ADE               	incf	postinc2,f,c
 11111  012274  0E00               	movlw	0
 11112  012276  22DD               	addwfc	postdec2,f,c
 11113                           
 11114                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 11115  012278  6A21               	clrf	_width^0,c
 11116  01227A  6A22               	clrf	(_width+1)^0,c
 11117  01227C  6A25               	clrf	_flags^0,c
 11118  01227E  6A26               	clrf	(_flags+1)^0,c
 11119                           
 11120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 11121  012280  6823               	setf	_prec^0,c
 11122  012282  6824               	setf	(_prec+1)^0,c
 11123                           
 11124                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 11125                           ;stkvar	_fmt @ sp[(-32)+-4]
 11126  012284  0EDC               	movlw	-36
 11127  012286  006F FF8F FFD9     	movff	plusw1,fsr2l
 11128  01228C  0EDD               	movlw	-35
 11129  01228E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11130  012294  006F FF7B FFF6     	movff	postinc2,tblptrl
 11131  01229A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11132  0122A0                     	if	0	;tblptru may be non-zero
 11133  0122A0                     	endif
 11134  0122A0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11135  0122A0  0E00               	movlw	low (__mediumconst shr (0+16))
 11136  0122A2  6EF8               	movwf	tblptru,c
 11137  0122A4                     	endif
 11138  0122A4  0008               	tblrd		*
 11139  0122A6  50F5               	movf	tablat,w,c
 11140  0122A8  0A2A               	xorlw	42
 11141  0122AA  A4D8               	btfss	status,2,c
 11142  0122AC  D031               	goto	l12050
 11143                           
 11144                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 11145                           ;stkvar	_fmt @ sp[(-32)+-4]
 11146  0122AE  0EDC               	movlw	-36
 11147  0122B0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11148  0122B6  0EDD               	movlw	-35
 11149  0122B8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11150  0122BE  2ADE               	incf	postinc2,f,c
 11151  0122C0  0E00               	movlw	0
 11152  0122C2  22DD               	addwfc	postdec2,f,c
 11153                           
 11154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 11155                           ;stkvar	_ap @ sp[(-32)+-6]
 11156  0122C4  0EDA               	movlw	-38
 11157  0122C6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11158  0122CC  0EDB               	movlw	-37
 11159  0122CE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11160  0122D4  0E02               	movlw	2
 11161  0122D6  5EDE               	subwf	postinc2,f,c
 11162  0122D8  0E00               	movlw	0
 11163  0122DA  5ADD               	subwfb	postdec2,f,c
 11164  0122DC  006F FF78  F00B    	movff	postinc2,btemp+10
 11165  0122E2  006F FF74  F00C    	movff	postdec2,btemp+11
 11166  0122E8  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11167  0122EE  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11168  0122F4  006F FF78  F021    	movff	postinc2,_width
 11169  0122FA  006F FF74  F022    	movff	postdec2,_width+1
 11170                           
 11171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 11172  012300  AE22               	btfss	(_width+1)^0,7,c
 11173  012302  D066               	goto	u11580
 11174                           
 11175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 11176  012304  8025               	bsf	_flags^0,0,c
 11177                           
 11178                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 11179  012306  6C21               	negf	_width^0,c
 11180  012308  1E22               	comf	(_width+1)^0,f,c
 11181  01230A  B0D8               	btfsc	status,0,c
 11182  01230C  2A22               	incf	(_width+1)^0,f,c
 11183  01230E  D060               	goto	u11580
 11184  012310                     l12050:
 11185                           
 11186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 11187                           ;stkvar	_fmt @ sp[(-32)+-4]
 11188  012310  0EDC               	movlw	-36
 11189  012312  006F FF8F FFD9     	movff	plusw1,fsr2l
 11190  012318  0EDD               	movlw	-35
 11191  01231A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11192  012320  006F FF78  F00B    	movff	postinc2,btemp+10
 11193  012326  006F FF74  F00C    	movff	postdec2,btemp+11
 11194  01232C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11195  012332  0060  F033  FFE6   	movff	btemp+11,postinc1
 11196  012338  EC79  F0B8         	call	_atoi	;wreg free
 11197  01233C  0060  F004  F021   	movff	btemp,_width
 11198  012342  0060  F008  F022   	movff	btemp+1,_width+1
 11199                           
 11200                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11201  012348  D00B               	goto	l12054
 11202  01234A                     l12052:
 11203                           
 11204                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 11205                           ;stkvar	_fmt @ sp[(-32)+-4]
 11206  01234A  0EDC               	movlw	-36
 11207  01234C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11208  012352  0EDD               	movlw	-35
 11209  012354  006F FF8F FFDA     	movff	plusw1,fsr2h
 11210  01235A  2ADE               	incf	postinc2,f,c
 11211  01235C  0E00               	movlw	0
 11212  01235E  22DD               	addwfc	postdec2,f,c
 11213  012360                     l12054:
 11214  012360  0ED0               	movlw	208
 11215  012362  6E0B               	movwf	(btemp+10)^0,c
 11216  012364  0EFF               	movlw	255
 11217  012366  6E0C               	movwf	(btemp+11)^0,c
 11218                           
 11219                           ;stkvar	_fmt @ sp[(-32)+-4]
 11220  012368  0EDC               	movlw	-36
 11221  01236A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11222  012370  0EDD               	movlw	-35
 11223  012372  006F FF8F FFDA     	movff	plusw1,fsr2h
 11224  012378  006F FF7B FFF6     	movff	postinc2,tblptrl
 11225  01237E  006F FF77 FFF7     	movff	postdec2,tblptrh
 11226  012384                     	if	0	;tblptru may be non-zero
 11227  012384                     	endif
 11228  012384                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11229  012384  0E00               	movlw	low (__mediumconst shr (0+16))
 11230  012386  6EF8               	movwf	tblptru,c
 11231  012388                     	endif
 11232  012388  0008               	tblrd		*
 11233  01238A  50F5               	movf	tablat,w,c
 11234  01238C  6E09               	movwf	(btemp+8)^0,c
 11235  01238E  6A0A               	clrf	(btemp+9)^0,c
 11236  012390  500B               	movf	(btemp+10)^0,w,c
 11237  012392  2609               	addwf	(btemp+8)^0,f,c
 11238  012394  500C               	movf	(btemp+11)^0,w,c
 11239  012396  220A               	addwfc	(btemp+9)^0,f,c
 11240  012398  500A               	movf	(btemp+9)^0,w,c
 11241  01239A  E106               	bnz	u11560
 11242  01239C  0E0A               	movlw	10
 11243  01239E  5C09               	subwf	(btemp+8)^0,w,c
 11244  0123A0  B0D8               	btfsc	status,0,c
 11245  0123A2  D002               	goto	u11560
 11246  0123A4  0E01               	movlw	1
 11247  0123A6  D001               	goto	u11570
 11248  0123A8                     u11560:
 11249  0123A8  0E00               	movlw	0
 11250  0123AA                     u11570:
 11251  0123AA  6E0B               	movwf	(btemp+10)^0,c
 11252  0123AC  6A0C               	clrf	(btemp+11)^0,c
 11253                           
 11254                           ;stkvar	_vfpfcnvrt$5385 @ sp[(-32)+4]
 11255  0123AE  0EE4               	movlw	-28
 11256  0123B0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11257  0123B6  0EE5               	movlw	-27
 11258  0123B8  0060  F033  FFE3   	movff	btemp+11,plusw1
 11259                           
 11260                           ;stkvar	_vfpfcnvrt$5385 @ sp[(-32)+4]
 11261  0123BE  0EE4               	movlw	-28
 11262  0123C0  006F FF8C  F001    	movff	plusw1,btemp
 11263  0123C6  0EE5               	movlw	-27
 11264  0123C8  50E3               	movf	plusw1,w,c
 11265  0123CA  1001               	iorwf	btemp^0,w,c
 11266  0123CC  A4D8               	btfss	status,2,c
 11267  0123CE  D7BD               	goto	l12052
 11268  0123D0                     u11580:
 11269                           
 11270                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 11271                           ;stkvar	_fmt @ sp[(-32)+-4]
 11272  0123D0  0EDC               	movlw	-36
 11273  0123D2  006F FF8F FFD9     	movff	plusw1,fsr2l
 11274  0123D8  0EDD               	movlw	-35
 11275  0123DA  006F FF8F FFDA     	movff	plusw1,fsr2h
 11276  0123E0  006F FF7B FFF6     	movff	postinc2,tblptrl
 11277  0123E6  006F FF77 FFF7     	movff	postdec2,tblptrh
 11278  0123EC                     	if	0	;tblptru may be non-zero
 11279  0123EC                     	endif
 11280  0123EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11281  0123EC  0E00               	movlw	low (__mediumconst shr (0+16))
 11282  0123EE  6EF8               	movwf	tblptru,c
 11283  0123F0                     	endif
 11284  0123F0  0008               	tblrd		*
 11285  0123F2  50F5               	movf	tablat,w,c
 11286  0123F4  0A2E               	xorlw	46
 11287  0123F6  A4D8               	btfss	status,2,c
 11288  0123F8  D0AC               	goto	u11630
 11289                           
 11290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 11291  0123FA  6A23               	clrf	_prec^0,c
 11292  0123FC  6A24               	clrf	(_prec+1)^0,c
 11293                           
 11294                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 11295                           ;stkvar	_fmt @ sp[(-32)+-4]
 11296  0123FE  0EDC               	movlw	-36
 11297  012400  006F FF8F FFD9     	movff	plusw1,fsr2l
 11298  012406  0EDD               	movlw	-35
 11299  012408  006F FF8F FFDA     	movff	plusw1,fsr2h
 11300  01240E  2ADE               	incf	postinc2,f,c
 11301  012410  0E00               	movlw	0
 11302  012412  22DD               	addwfc	postdec2,f,c
 11303                           
 11304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 11305                           ;stkvar	_fmt @ sp[(-32)+-4]
 11306  012414  0EDC               	movlw	-36
 11307  012416  006F FF8F FFD9     	movff	plusw1,fsr2l
 11308  01241C  0EDD               	movlw	-35
 11309  01241E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11310  012424  006F FF7B FFF6     	movff	postinc2,tblptrl
 11311  01242A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11312  012430                     	if	0	;tblptru may be non-zero
 11313  012430                     	endif
 11314  012430                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11315  012430  0E00               	movlw	low (__mediumconst shr (0+16))
 11316  012432  6EF8               	movwf	tblptru,c
 11317  012434                     	endif
 11318  012434  0008               	tblrd		*
 11319  012436  50F5               	movf	tablat,w,c
 11320  012438  0A2A               	xorlw	42
 11321  01243A  A4D8               	btfss	status,2,c
 11322  01243C  D02A               	goto	l12072
 11323                           
 11324                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 11325                           ;stkvar	_fmt @ sp[(-32)+-4]
 11326  01243E  0EDC               	movlw	-36
 11327  012440  006F FF8F FFD9     	movff	plusw1,fsr2l
 11328  012446  0EDD               	movlw	-35
 11329  012448  006F FF8F FFDA     	movff	plusw1,fsr2h
 11330  01244E  2ADE               	incf	postinc2,f,c
 11331  012450  0E00               	movlw	0
 11332  012452  22DD               	addwfc	postdec2,f,c
 11333                           
 11334                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 11335                           ;stkvar	_ap @ sp[(-32)+-6]
 11336  012454  0EDA               	movlw	-38
 11337  012456  006F FF8F FFD9     	movff	plusw1,fsr2l
 11338  01245C  0EDB               	movlw	-37
 11339  01245E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11340  012464  0E02               	movlw	2
 11341  012466  5EDE               	subwf	postinc2,f,c
 11342  012468  0E00               	movlw	0
 11343  01246A  5ADD               	subwfb	postdec2,f,c
 11344  01246C  006F FF78  F00B    	movff	postinc2,btemp+10
 11345  012472  006F FF74  F00C    	movff	postdec2,btemp+11
 11346  012478  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11347  01247E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11348  012484  006F FF78  F023    	movff	postinc2,_prec
 11349  01248A  006F FF74  F024    	movff	postdec2,_prec+1
 11350                           
 11351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 11352  012490  D060               	goto	u11630
 11353  012492                     l12072:
 11354                           
 11355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 11356                           ;stkvar	_fmt @ sp[(-32)+-4]
 11357  012492  0EDC               	movlw	-36
 11358  012494  006F FF8F FFD9     	movff	plusw1,fsr2l
 11359  01249A  0EDD               	movlw	-35
 11360  01249C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11361  0124A2  006F FF78  F00B    	movff	postinc2,btemp+10
 11362  0124A8  006F FF74  F00C    	movff	postdec2,btemp+11
 11363  0124AE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11364  0124B4  0060  F033  FFE6   	movff	btemp+11,postinc1
 11365  0124BA  EC79  F0B8         	call	_atoi	;wreg free
 11366  0124BE  0060  F004  F023   	movff	btemp,_prec
 11367  0124C4  0060  F008  F024   	movff	btemp+1,_prec+1
 11368                           
 11369                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11370  0124CA  D00B               	goto	l12076
 11371  0124CC                     l12074:
 11372                           
 11373                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 11374                           ;stkvar	_fmt @ sp[(-32)+-4]
 11375  0124CC  0EDC               	movlw	-36
 11376  0124CE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11377  0124D4  0EDD               	movlw	-35
 11378  0124D6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11379  0124DC  2ADE               	incf	postinc2,f,c
 11380  0124DE  0E00               	movlw	0
 11381  0124E0  22DD               	addwfc	postdec2,f,c
 11382  0124E2                     l12076:
 11383  0124E2  0ED0               	movlw	208
 11384  0124E4  6E0B               	movwf	(btemp+10)^0,c
 11385  0124E6  0EFF               	movlw	255
 11386  0124E8  6E0C               	movwf	(btemp+11)^0,c
 11387                           
 11388                           ;stkvar	_fmt @ sp[(-32)+-4]
 11389  0124EA  0EDC               	movlw	-36
 11390  0124EC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11391  0124F2  0EDD               	movlw	-35
 11392  0124F4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11393  0124FA  006F FF7B FFF6     	movff	postinc2,tblptrl
 11394  012500  006F FF77 FFF7     	movff	postdec2,tblptrh
 11395  012506                     	if	0	;tblptru may be non-zero
 11396  012506                     	endif
 11397  012506                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11398  012506  0E00               	movlw	low (__mediumconst shr (0+16))
 11399  012508  6EF8               	movwf	tblptru,c
 11400  01250A                     	endif
 11401  01250A  0008               	tblrd		*
 11402  01250C  50F5               	movf	tablat,w,c
 11403  01250E  6E09               	movwf	(btemp+8)^0,c
 11404  012510  6A0A               	clrf	(btemp+9)^0,c
 11405  012512  500B               	movf	(btemp+10)^0,w,c
 11406  012514  2609               	addwf	(btemp+8)^0,f,c
 11407  012516  500C               	movf	(btemp+11)^0,w,c
 11408  012518  220A               	addwfc	(btemp+9)^0,f,c
 11409  01251A  500A               	movf	(btemp+9)^0,w,c
 11410  01251C  E106               	bnz	u11610
 11411  01251E  0E0A               	movlw	10
 11412  012520  5C09               	subwf	(btemp+8)^0,w,c
 11413  012522  B0D8               	btfsc	status,0,c
 11414  012524  D002               	goto	u11610
 11415  012526  0E01               	movlw	1
 11416  012528  D001               	goto	u11620
 11417  01252A                     u11610:
 11418  01252A  0E00               	movlw	0
 11419  01252C                     u11620:
 11420  01252C  6E0B               	movwf	(btemp+10)^0,c
 11421  01252E  6A0C               	clrf	(btemp+11)^0,c
 11422                           
 11423                           ;stkvar	_vfpfcnvrt$5386 @ sp[(-32)+0]
 11424  012530  0EE0               	movlw	-32
 11425  012532  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11426  012538  0EE1               	movlw	-31
 11427  01253A  0060  F033  FFE3   	movff	btemp+11,plusw1
 11428                           
 11429                           ;stkvar	_vfpfcnvrt$5386 @ sp[(-32)+0]
 11430  012540  0EE0               	movlw	-32
 11431  012542  006F FF8C  F001    	movff	plusw1,btemp
 11432  012548  0EE1               	movlw	-31
 11433  01254A  50E3               	movf	plusw1,w,c
 11434  01254C  1001               	iorwf	btemp^0,w,c
 11435  01254E  A4D8               	btfss	status,2,c
 11436  012550  D7BD               	goto	l12074
 11437  012552                     u11630:
 11438                           
 11439                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 11440                           ;stkvar	_fmt @ sp[(-32)+-4]
 11441  012552  0EDC               	movlw	-36
 11442  012554  006F FF8F FFD9     	movff	plusw1,fsr2l
 11443  01255A  0EDD               	movlw	-35
 11444  01255C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11445  012562  006F FF7B FFF6     	movff	postinc2,tblptrl
 11446  012568  006F FF77 FFF7     	movff	postdec2,tblptrh
 11447  01256E                     	if	0	;tblptru may be non-zero
 11448  01256E                     	endif
 11449  01256E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11450  01256E  0E00               	movlw	low (__mediumconst shr (0+16))
 11451  012570  6EF8               	movwf	tblptru,c
 11452  012572                     	endif
 11453  012572  0008               	tblrd		*
 11454  012574  50F5               	movf	tablat,w,c
 11455  012576  6EE6               	movwf	postinc1,c
 11456  012578  0E00               	movlw	0
 11457  01257A  6EE6               	movwf	postinc1,c
 11458  01257C  ECA4  F0D1         	call	_tolower	;wreg free
 11459                           
 11460                           ;stkvar	_ct @ sp[(-32)+26]
 11461  012580  0EFA               	movlw	-6
 11462  012582  0060  F007  FFE3   	movff	btemp,plusw1
 11463                           
 11464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 11465                           ;stkvar	_ct @ sp[(-32)+26]
 11466  012588  0EFA               	movlw	-6
 11467  01258A  50E3               	movf	plusw1,w,c
 11468  01258C  B4D8               	btfsc	status,2,c
 11469  01258E  D05B               	goto	l12092
 11470                           
 11471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 11472                           ;stkvar	_ct @ sp[(-32)+26]
 11473  012590  0EFB               	movlw	251
 11474  012592  24E1               	addwf	fsr1l,w,c
 11475  012594  6ED9               	movwf	fsr2l,c
 11476  012596  0EFF               	movlw	255
 11477  012598  20E2               	addwfc	fsr1h,w,c
 11478  01259A  6EDA               	movwf	fsr2h,c
 11479                           
 11480                           ;stkvar	_fmt @ sp[(-32)+-4]
 11481  01259C  0EDC               	movlw	-36
 11482  01259E  006F FF8F FFE9     	movff	plusw1,fsr0l
 11483  0125A4  0EDD               	movlw	-35
 11484  0125A6  006F FF8F FFEA     	movff	plusw1,fsr0h
 11485  0125AC  006F FFB8  F00B    	movff	postinc0,btemp+10
 11486  0125B2  006F FFB4  F00C    	movff	postdec0,btemp+11
 11487  0125B8  0E01               	movlw	1
 11488  0125BA  260B               	addwf	(btemp+10)^0,f,c
 11489  0125BC  0E00               	movlw	0
 11490  0125BE  220C               	addwfc	(btemp+11)^0,f,c
 11491  0125C0  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 11492  0125C6  0060  F033  FFF7   	movff	btemp+11,tblptrh
 11493  0125CC                     	if	0	;tblptru may be non-zero
 11494  0125CC                     	endif
 11495  0125CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11496  0125CC  0E00               	movlw	low (__mediumconst shr (0+16))
 11497  0125CE  6EF8               	movwf	tblptru,c
 11498  0125D0                     	endif
 11499  0125D0  0008               	tblrd		*
 11500  0125D2  50F5               	movf	tablat,w,c
 11501  0125D4  6EE6               	movwf	postinc1,c
 11502  0125D6  0E00               	movlw	0
 11503  0125D8  6EE6               	movwf	postinc1,c
 11504  0125DA  ECA4  F0D1         	call	_tolower	;wreg free
 11505  0125DE  5001               	movf	btemp^0,w,c
 11506  0125E0  6EDF               	movwf	indf2,c
 11507                           
 11508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 11509                           ;stkvar	_ct @ sp[(-32)+26]
 11510  0125E2  0EFB               	movlw	251
 11511  0125E4  24E1               	addwf	fsr1l,w,c
 11512  0125E6  6ED9               	movwf	fsr2l,c
 11513  0125E8  0EFF               	movlw	255
 11514  0125EA  20E2               	addwfc	fsr1h,w,c
 11515  0125EC  6EDA               	movwf	fsr2h,c
 11516  0125EE  50DF               	movf	indf2,w,c
 11517  0125F0  B4D8               	btfsc	status,2,c
 11518  0125F2  D029               	goto	l12092
 11519                           
 11520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 11521                           ;stkvar	_ct @ sp[(-32)+26]
 11522  0125F4  0EFC               	movlw	252
 11523  0125F6  24E1               	addwf	fsr1l,w,c
 11524  0125F8  6ED9               	movwf	fsr2l,c
 11525  0125FA  0EFF               	movlw	255
 11526  0125FC  20E2               	addwfc	fsr1h,w,c
 11527  0125FE  6EDA               	movwf	fsr2h,c
 11528                           
 11529                           ;stkvar	_fmt @ sp[(-32)+-4]
 11530  012600  0EDC               	movlw	-36
 11531  012602  006F FF8F FFE9     	movff	plusw1,fsr0l
 11532  012608  0EDD               	movlw	-35
 11533  01260A  006F FF8F FFEA     	movff	plusw1,fsr0h
 11534  012610  006F FFB8  F00B    	movff	postinc0,btemp+10
 11535  012616  006F FFB4  F00C    	movff	postdec0,btemp+11
 11536  01261C  0E02               	movlw	2
 11537  01261E  260B               	addwf	(btemp+10)^0,f,c
 11538  012620  0E00               	movlw	0
 11539  012622  220C               	addwfc	(btemp+11)^0,f,c
 11540  012624  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 11541  01262A  0060  F033  FFF7   	movff	btemp+11,tblptrh
 11542  012630                     	if	0	;tblptru may be non-zero
 11543  012630                     	endif
 11544  012630                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11545  012630  0E00               	movlw	low (__mediumconst shr (0+16))
 11546  012632  6EF8               	movwf	tblptru,c
 11547  012634                     	endif
 11548  012634  0008               	tblrd		*
 11549  012636  50F5               	movf	tablat,w,c
 11550  012638  6EE6               	movwf	postinc1,c
 11551  01263A  0E00               	movlw	0
 11552  01263C  6EE6               	movwf	postinc1,c
 11553  01263E  ECA4  F0D1         	call	_tolower	;wreg free
 11554  012642  5001               	movf	btemp^0,w,c
 11555  012644  6EDF               	movwf	indf2,c
 11556  012646                     l12092:
 11557                           
 11558                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 11559                           ;stkvar	_fmt @ sp[(-32)+-4]
 11560  012646  0EDC               	movlw	-36
 11561  012648  006F FF8F FFD9     	movff	plusw1,fsr2l
 11562  01264E  0EDD               	movlw	-35
 11563  012650  006F FF8F FFDA     	movff	plusw1,fsr2h
 11564  012656  006F FF7B FFF6     	movff	postinc2,tblptrl
 11565  01265C  006F FF77 FFF7     	movff	postdec2,tblptrh
 11566  012662                     	if	0	;tblptru may be non-zero
 11567  012662                     	endif
 11568  012662                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11569  012662  0E00               	movlw	low (__mediumconst shr (0+16))
 11570  012664  6EF8               	movwf	tblptru,c
 11571  012666                     	endif
 11572  012666  0008               	tblrd		*
 11573  012668  50F5               	movf	tablat,w,c
 11574  01266A  0A63               	xorlw	99
 11575  01266C  A4D8               	btfss	status,2,c
 11576  01266E  D037               	goto	l12102
 11577                           
 11578                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 11579                           ;stkvar	_fmt @ sp[(-32)+-4]
 11580  012670  0EDC               	movlw	-36
 11581  012672  006F FF8F FFD9     	movff	plusw1,fsr2l
 11582  012678  0EDD               	movlw	-35
 11583  01267A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11584  012680  2ADE               	incf	postinc2,f,c
 11585  012682  0E00               	movlw	0
 11586  012684  22DD               	addwfc	postdec2,f,c
 11587                           
 11588                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 11589                           ;stkvar	_ap @ sp[(-32)+-6]
 11590  012686  0EDA               	movlw	-38
 11591  012688  006F FF8F FFD9     	movff	plusw1,fsr2l
 11592  01268E  0EDB               	movlw	-37
 11593  012690  006F FF8F FFDA     	movff	plusw1,fsr2h
 11594  012696  0E02               	movlw	2
 11595  012698  5EDE               	subwf	postinc2,f,c
 11596  01269A  0E00               	movlw	0
 11597  01269C  5ADD               	subwfb	postdec2,f,c
 11598  01269E  006F FF78  F00B    	movff	postinc2,btemp+10
 11599  0126A4  006F FF74  F00C    	movff	postdec2,btemp+11
 11600  0126AA  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11601  0126B0  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11602  0126B6  50DF               	movf	indf2,w,c
 11603  0126B8  6E0C               	movwf	(btemp+11)^0,c
 11604                           
 11605                           ;stkvar	_c @ sp[(-32)+31]
 11606  0126BA  0EFF               	movlw	-1
 11607  0126BC  0060  F033  FFE3   	movff	btemp+11,plusw1
 11608                           
 11609                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 11610                           ;stkvar	_c @ sp[(-32)+31]
 11611  0126C2  0EFF               	movlw	-1
 11612  0126C4  50E3               	movf	plusw1,w,c
 11613  0126C6  6EE6               	movwf	postinc1,c
 11614                           
 11615                           ;stkvar	_fp @ sp[(-33)+-2]
 11616  0126C8  0EDD               	movlw	-35
 11617  0126CA  006F FF8F FFE6     	movff	plusw1,postinc1
 11618  0126D0  006F FF8F FFE6     	movff	plusw1,postinc1
 11619  0126D6  EC1E  F0D1         	call	_ctoa	;wreg free
 11620  0126DA  EFE8  F098         	goto	l2322
 11621  0126DE                     l12102:
 11622                           
 11623                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 11624                           ;stkvar	_fmt @ sp[(-32)+-4]
 11625  0126DE  0EDC               	movlw	-36
 11626  0126E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11627  0126E6  0EDD               	movlw	-35
 11628  0126E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11629  0126EE  006F FF7B FFF6     	movff	postinc2,tblptrl
 11630  0126F4  006F FF77 FFF7     	movff	postdec2,tblptrh
 11631  0126FA                     	if	0	;tblptru may be non-zero
 11632  0126FA                     	endif
 11633  0126FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11634  0126FA  0E00               	movlw	low (__mediumconst shr (0+16))
 11635  0126FC  6EF8               	movwf	tblptru,c
 11636  0126FE                     	endif
 11637  0126FE  0008               	tblrd		*
 11638  012700  50F5               	movf	tablat,w,c
 11639  012702  0A64               	xorlw	100
 11640  012704  B4D8               	btfsc	status,2,c
 11641  012706  D015               	goto	u11680
 11642                           
 11643                           ;stkvar	_fmt @ sp[(-32)+-4]
 11644  012708  0EDC               	movlw	-36
 11645  01270A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11646  012710  0EDD               	movlw	-35
 11647  012712  006F FF8F FFDA     	movff	plusw1,fsr2h
 11648  012718  006F FF7B FFF6     	movff	postinc2,tblptrl
 11649  01271E  006F FF77 FFF7     	movff	postdec2,tblptrh
 11650  012724                     	if	0	;tblptru may be non-zero
 11651  012724                     	endif
 11652  012724                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11653  012724  0E00               	movlw	low (__mediumconst shr (0+16))
 11654  012726  6EF8               	movwf	tblptru,c
 11655  012728                     	endif
 11656  012728  0008               	tblrd		*
 11657  01272A  50F5               	movf	tablat,w,c
 11658  01272C  0A69               	xorlw	105
 11659  01272E  A4D8               	btfss	status,2,c
 11660  012730  D076               	goto	l12114
 11661  012732                     u11680:
 11662                           
 11663                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 11664                           ;stkvar	_fmt @ sp[(-32)+-4]
 11665  012732  0EDC               	movlw	-36
 11666  012734  006F FF8F FFD9     	movff	plusw1,fsr2l
 11667  01273A  0EDD               	movlw	-35
 11668  01273C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11669  012742  2ADE               	incf	postinc2,f,c
 11670  012744  0E00               	movlw	0
 11671  012746  22DD               	addwfc	postdec2,f,c
 11672                           
 11673                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 11674                           ;stkvar	_ap @ sp[(-32)+-6]
 11675  012748  0EDA               	movlw	-38
 11676  01274A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11677  012750  0EDB               	movlw	-37
 11678  012752  006F FF8F FFDA     	movff	plusw1,fsr2h
 11679  012758  0E02               	movlw	2
 11680  01275A  5EDE               	subwf	postinc2,f,c
 11681  01275C  0E00               	movlw	0
 11682  01275E  5ADD               	subwfb	postdec2,f,c
 11683  012760  006F FF78  F00B    	movff	postinc2,btemp+10
 11684  012766  006F FF74  F00C    	movff	postdec2,btemp+11
 11685  01276C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11686  012772  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11687  012778  006F FF78  F00B    	movff	postinc2,btemp+10
 11688  01277E  006F FF74  F00C    	movff	postdec2,btemp+11
 11689                           
 11690                           ;stkvar	_ll @ sp[(-32)+14]
 11691  012784  0EEE               	movlw	-18
 11692  012786  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11693  01278C  0EEF               	movlw	-17
 11694  01278E  0060  F033  FFE3   	movff	btemp+11,plusw1
 11695  012794  6A01               	clrf	btemp^0,c
 11696  012796  BEE3               	btfsc	plusw1,7,c
 11697  012798  6801               	setf	btemp^0,c
 11698  01279A  0EF0               	movlw	-16
 11699  01279C  0060  F007  FFE3   	movff	btemp,plusw1
 11700  0127A2  0EF1               	movlw	-15
 11701  0127A4  0060  F007  FFE3   	movff	btemp,plusw1
 11702  0127AA  0EF2               	movlw	-14
 11703  0127AC  0060  F007  FFE3   	movff	btemp,plusw1
 11704  0127B2  0EF3               	movlw	-13
 11705  0127B4  0060  F007  FFE3   	movff	btemp,plusw1
 11706  0127BA  0EF4               	movlw	-12
 11707  0127BC  0060  F007  FFE3   	movff	btemp,plusw1
 11708  0127C2  0EF5               	movlw	-11
 11709  0127C4  0060  F007  FFE3   	movff	btemp,plusw1
 11710  0127CA                     l12110:
 11711                           
 11712                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 11713                           ;stkvar	_ll @ sp[(-32)+14]
 11714  0127CA  50E1               	movf	fsr1l,w,c
 11715  0127CC  0FEE               	addlw	-18
 11716  0127CE  6ED9               	movwf	fsr2l,c
 11717  0127D0  50E2               	movf	fsr1h,w,c
 11718  0127D2  6EDA               	movwf	fsr2h,c
 11719  0127D4  0EFF               	movlw	255
 11720  0127D6  22DA               	addwfc	fsr2h,f,c
 11721  0127D8  006F FF7B FFE6     	movff	postinc2,postinc1
 11722  0127DE  006F FF7B FFE6     	movff	postinc2,postinc1
 11723  0127E4  006F FF7B FFE6     	movff	postinc2,postinc1
 11724  0127EA  006F FF7B FFE6     	movff	postinc2,postinc1
 11725  0127F0  006F FF7B FFE6     	movff	postinc2,postinc1
 11726  0127F6  006F FF7B FFE6     	movff	postinc2,postinc1
 11727  0127FC  006F FF7B FFE6     	movff	postinc2,postinc1
 11728  012802  006F FF7B FFE6     	movff	postinc2,postinc1
 11729                           
 11730                           ;stkvar	_fp @ sp[(-40)+-2]
 11731  012808  0ED6               	movlw	-42
 11732  01280A  006F FF8F FFE6     	movff	plusw1,postinc1
 11733  012810  006F FF8F FFE6     	movff	plusw1,postinc1
 11734  012816  EC7E  F0A9         	call	_dtoa	;wreg free
 11735  01281A  EFE8  F098         	goto	l2322
 11736  01281E                     l12114:
 11737                           
 11738                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 11739  01281E  0E02               	movlw	2
 11740  012820  6EE6               	movwf	postinc1,c
 11741  012822  0E00               	movlw	0
 11742  012824  6EE6               	movwf	postinc1,c
 11743  012826  0EEA               	movlw	low STR_74
 11744  012828  6EE6               	movwf	postinc1,c
 11745  01282A  0EFF               	movlw	high STR_74
 11746  01282C  6EE6               	movwf	postinc1,c
 11747                           
 11748                           ;stkvar	_fmt @ sp[(-36)+-4]
 11749  01282E  0ED8               	movlw	-40
 11750  012830  006F FF8F FFD9     	movff	plusw1,fsr2l
 11751  012836  0ED9               	movlw	-39
 11752  012838  006F FF8F FFDA     	movff	plusw1,fsr2h
 11753  01283E  006F FF78  F00B    	movff	postinc2,btemp+10
 11754  012844  006F FF74  F00C    	movff	postdec2,btemp+11
 11755  01284A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11756  012850  0060  F033  FFE6   	movff	btemp+11,postinc1
 11757  012856  ECD3  F0BA         	call	_strncmp	;wreg free
 11758  01285A  5001               	movf	btemp^0,w,c
 11759  01285C  1002               	iorwf	(btemp+1)^0,w,c
 11760  01285E  B4D8               	btfsc	status,2,c
 11761  012860  D022               	goto	u11700
 11762  012862  0E02               	movlw	2
 11763  012864  6EE6               	movwf	postinc1,c
 11764  012866  0E00               	movlw	0
 11765  012868  6EE6               	movwf	postinc1,c
 11766  01286A  0EF0               	movlw	low STR_78
 11767  01286C  6EE6               	movwf	postinc1,c
 11768  01286E  0EFF               	movlw	high STR_78
 11769  012870  6EE6               	movwf	postinc1,c
 11770                           
 11771                           ;stkvar	_fmt @ sp[(-36)+-4]
 11772  012872  0ED8               	movlw	-40
 11773  012874  006F FF8F FFD9     	movff	plusw1,fsr2l
 11774  01287A  0ED9               	movlw	-39
 11775  01287C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11776  012882  006F FF78  F00B    	movff	postinc2,btemp+10
 11777  012888  006F FF74  F00C    	movff	postdec2,btemp+11
 11778  01288E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11779  012894  0060  F033  FFE6   	movff	btemp+11,postinc1
 11780  01289A  ECD3  F0BA         	call	_strncmp	;wreg free
 11781  01289E  5001               	movf	btemp^0,w,c
 11782  0128A0  1002               	iorwf	(btemp+1)^0,w,c
 11783  0128A2  A4D8               	btfss	status,2,c
 11784  0128A4  D069               	goto	l12126
 11785  0128A6                     u11700:
 11786                           
 11787                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 11788                           ;stkvar	_fmt @ sp[(-32)+-4]
 11789  0128A6  0EDC               	movlw	-36
 11790  0128A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11791  0128AE  0EDD               	movlw	-35
 11792  0128B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11793  0128B6  0E02               	movlw	2
 11794  0128B8  26DE               	addwf	postinc2,f,c
 11795  0128BA  0E00               	movlw	0
 11796  0128BC  22DD               	addwfc	postdec2,f,c
 11797                           
 11798                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 11799                           ;stkvar	_ap @ sp[(-32)+-6]
 11800  0128BE  0EDA               	movlw	-38
 11801  0128C0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11802  0128C6  0EDB               	movlw	-37
 11803  0128C8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11804  0128CE  0E04               	movlw	4
 11805  0128D0  5EDE               	subwf	postinc2,f,c
 11806  0128D2  0E00               	movlw	0
 11807  0128D4  5ADD               	subwfb	postdec2,f,c
 11808  0128D6  006F FF78  F00B    	movff	postinc2,btemp+10
 11809  0128DC  006F FF74  F00C    	movff	postdec2,btemp+11
 11810  0128E2  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11811  0128E8  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11812  0128EE  006F FF78  F009    	movff	postinc2,btemp+8
 11813  0128F4  006F FF78  F00A    	movff	postinc2,btemp+9
 11814  0128FA  006F FF78  F00B    	movff	postinc2,btemp+10
 11815  012900  006F FF78  F00C    	movff	postinc2,btemp+11
 11816  012906  0060  F024  F011   	movff	btemp+8,btemp+16
 11817  01290C  0060  F028  F012   	movff	btemp+9,btemp+17
 11818  012912  0060  F02C  F013   	movff	btemp+10,btemp+18
 11819  012918  0060  F030  F014   	movff	btemp+11,btemp+19
 11820  01291E  6A15               	clrf	(btemp+20)^0,c
 11821  012920  BE14               	btfsc	(btemp+19)^0,7,c
 11822  012922  6815               	setf	(btemp+20)^0,c
 11823  012924  0060  F054  F016   	movff	btemp+20,btemp+21
 11824  01292A  0060  F054  F017   	movff	btemp+20,btemp+22
 11825  012930  0060  F054  F018   	movff	btemp+20,btemp+23
 11826                           
 11827                           ;stkvar	_ll @ sp[(-32)+14]
 11828  012936  0EEE               	movlw	-18
 11829  012938  0060  F047  FFE3   	movff	btemp+16,plusw1
 11830  01293E  0EEF               	movlw	-17
 11831  012940  0060  F04B  FFE3   	movff	btemp+17,plusw1
 11832  012946  0EF0               	movlw	-16
 11833  012948  0060  F04F  FFE3   	movff	btemp+18,plusw1
 11834  01294E  0EF1               	movlw	-15
 11835  012950  0060  F053  FFE3   	movff	btemp+19,plusw1
 11836  012956  0EF2               	movlw	-14
 11837  012958  0060  F057  FFE3   	movff	btemp+20,plusw1
 11838  01295E  0EF3               	movlw	-13
 11839  012960  0060  F05B  FFE3   	movff	btemp+21,plusw1
 11840  012966  0EF4               	movlw	-12
 11841  012968  0060  F05F  FFE3   	movff	btemp+22,plusw1
 11842  01296E  0EF5               	movlw	-11
 11843  012970  0060  F063  FFE3   	movff	btemp+23,plusw1
 11844  012976  D729               	goto	l12110
 11845  012978                     l12126:
 11846                           
 11847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 11848                           ;stkvar	_ct @ sp[(-32)+26]
 11849  012978  0EFA               	movlw	-6
 11850  01297A  006F FF8C  F001    	movff	plusw1,btemp
 11851  012980  0E66               	movlw	102
 11852  012982  1801               	xorwf	btemp^0,w,c
 11853  012984  A4D8               	btfss	status,2,c
 11854  012986  D06E               	goto	l12138
 11855                           
 11856                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 11857                           ;stkvar	_fmt @ sp[(-32)+-4]
 11858  012988  0EDC               	movlw	-36
 11859  01298A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11860  012990  0EDD               	movlw	-35
 11861  012992  006F FF8F FFDA     	movff	plusw1,fsr2h
 11862  012998  006F FF7B FFF6     	movff	postinc2,tblptrl
 11863  01299E  006F FF77 FFF7     	movff	postdec2,tblptrh
 11864  0129A4                     	if	0	;tblptru may be non-zero
 11865  0129A4                     	endif
 11866  0129A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11867  0129A4  0E00               	movlw	low (__mediumconst shr (0+16))
 11868  0129A6  6EF8               	movwf	tblptru,c
 11869  0129A8                     	endif
 11870                           
 11871                           ;stkvar	_c @ sp[(-32)+31]
 11872  0129A8  0008               	tblrd		*
 11873  0129AA  0EFF               	movlw	-1
 11874  0129AC  006F FFD7 FFE3     	movff	tablat,plusw1
 11875                           
 11876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 11877                           ;stkvar	_fmt @ sp[(-32)+-4]
 11878  0129B2  0EDC               	movlw	-36
 11879  0129B4  006F FF8F FFD9     	movff	plusw1,fsr2l
 11880  0129BA  0EDD               	movlw	-35
 11881  0129BC  006F FF8F FFDA     	movff	plusw1,fsr2h
 11882  0129C2  2ADE               	incf	postinc2,f,c
 11883  0129C4  0E00               	movlw	0
 11884  0129C6  22DD               	addwfc	postdec2,f,c
 11885                           
 11886                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 11887                           ;stkvar	_ap @ sp[(-32)+-6]
 11888  0129C8  0EDA               	movlw	-38
 11889  0129CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11890  0129D0  0EDB               	movlw	-37
 11891  0129D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11892  0129D8  0E04               	movlw	4
 11893  0129DA  5EDE               	subwf	postinc2,f,c
 11894  0129DC  0E00               	movlw	0
 11895  0129DE  5ADD               	subwfb	postdec2,f,c
 11896  0129E0  006F FF78  F00B    	movff	postinc2,btemp+10
 11897  0129E6  006F FF74  F00C    	movff	postdec2,btemp+11
 11898  0129EC  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11899  0129F2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11900  0129F8  006F FF78  F009    	movff	postinc2,btemp+8
 11901  0129FE  006F FF78  F00A    	movff	postinc2,btemp+9
 11902  012A04  006F FF78  F00B    	movff	postinc2,btemp+10
 11903  012A0A  006F FF78  F00C    	movff	postinc2,btemp+11
 11904                           
 11905                           ;stkvar	_f @ sp[(-32)+22]
 11906  012A10  0EF6               	movlw	-10
 11907  012A12  0060  F027  FFE3   	movff	btemp+8,plusw1
 11908  012A18  0EF7               	movlw	-9
 11909  012A1A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 11910  012A20  0EF8               	movlw	-8
 11911  012A22  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11912  012A28  0EF9               	movlw	-7
 11913  012A2A  0060  F033  FFE3   	movff	btemp+11,plusw1
 11914  012A30                     l12134:
 11915                           
 11916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 11917                           ;stkvar	_c @ sp[(-32)+31]
 11918  012A30  0EFF               	movlw	-1
 11919  012A32  50E3               	movf	plusw1,w,c
 11920  012A34  6EE6               	movwf	postinc1,c
 11921                           
 11922                           ;stkvar	_f @ sp[(-33)+22]
 11923  012A36  0EF5               	movlw	-11
 11924  012A38  006F FF8F FFE6     	movff	plusw1,postinc1
 11925  012A3E  006F FF8F FFE6     	movff	plusw1,postinc1
 11926  012A44  006F FF8F FFE6     	movff	plusw1,postinc1
 11927  012A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 11928                           
 11929                           ;stkvar	_fp @ sp[(-37)+-2]
 11930  012A50  0ED9               	movlw	-39
 11931  012A52  006F FF8F FFE6     	movff	plusw1,postinc1
 11932  012A58  006F FF8F FFE6     	movff	plusw1,postinc1
 11933  012A5E  EC00  F080         	call	_efgtoa	;wreg free
 11934  012A62  D3B6               	goto	l2322
 11935  012A64                     l12138:
 11936                           
 11937                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 11938  012A64  0E02               	movlw	2
 11939  012A66  6EE6               	movwf	postinc1,c
 11940  012A68  0E00               	movlw	0
 11941  012A6A  6EE6               	movwf	postinc1,c
 11942  012A6C  0EED               	movlw	low STR_83
 11943  012A6E  6EE6               	movwf	postinc1,c
 11944  012A70  0EFF               	movlw	high STR_83
 11945  012A72  6EE6               	movwf	postinc1,c
 11946                           
 11947                           ;stkvar	_ct @ sp[(-36)+26]
 11948  012A74  0EF6               	movlw	246
 11949  012A76  24E1               	addwf	fsr1l,w,c
 11950  012A78  6E01               	movwf	btemp^0,c
 11951  012A7A  0EFF               	movlw	255
 11952  012A7C  20E2               	addwfc	fsr1h,w,c
 11953  012A7E  6E02               	movwf	(btemp+1)^0,c
 11954  012A80  0060  F007  FFE6   	movff	btemp,postinc1
 11955  012A86  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11956  012A8C  ECD3  F0BA         	call	_strncmp	;wreg free
 11957  012A90  5001               	movf	btemp^0,w,c
 11958  012A92  1002               	iorwf	(btemp+1)^0,w,c
 11959  012A94  A4D8               	btfss	status,2,c
 11960  012A96  D096               	goto	l12158
 11961                           
 11962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 11963                           ;stkvar	_fmt @ sp[(-32)+-4]
 11964  012A98  0EDC               	movlw	-36
 11965  012A9A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11966  012AA0  0EDD               	movlw	-35
 11967  012AA2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11968  012AA8  006F FF78  F00B    	movff	postinc2,btemp+10
 11969  012AAE  006F FF74  F00C    	movff	postdec2,btemp+11
 11970  012AB4  0E01               	movlw	1
 11971  012AB6  260B               	addwf	(btemp+10)^0,f,c
 11972  012AB8  0E00               	movlw	0
 11973  012ABA  220C               	addwfc	(btemp+11)^0,f,c
 11974  012ABC  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 11975  012AC2  0060  F033  FFF7   	movff	btemp+11,tblptrh
 11976  012AC8                     	if	0	;tblptru may be non-zero
 11977  012AC8                     	endif
 11978  012AC8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11979  012AC8  0E00               	movlw	low (__mediumconst shr (0+16))
 11980  012ACA  6EF8               	movwf	tblptru,c
 11981  012ACC                     	endif
 11982                           
 11983                           ;stkvar	_c @ sp[(-32)+31]
 11984  012ACC  0008               	tblrd		*
 11985  012ACE  0EFF               	movlw	-1
 11986  012AD0  006F FFD7 FFE3     	movff	tablat,plusw1
 11987  012AD6  0EBF               	movlw	191
 11988  012AD8  6E0B               	movwf	(btemp+10)^0,c
 11989  012ADA  0EFF               	movlw	255
 11990  012ADC  6E0C               	movwf	(btemp+11)^0,c
 11991                           
 11992                           ;stkvar	_fmt @ sp[(-32)+-4]
 11993  012ADE  0EDC               	movlw	-36
 11994  012AE0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11995  012AE6  0EDD               	movlw	-35
 11996  012AE8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11997  012AEE  006F FF7B FFF6     	movff	postinc2,tblptrl
 11998  012AF4  006F FF77 FFF7     	movff	postdec2,tblptrh
 11999  012AFA                     	if	0	;tblptru may be non-zero
 12000  012AFA                     	endif
 12001  012AFA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12002  012AFA  0E00               	movlw	low (__mediumconst shr (0+16))
 12003  012AFC  6EF8               	movwf	tblptru,c
 12004  012AFE                     	endif
 12005  012AFE  0008               	tblrd		*
 12006  012B00  50F5               	movf	tablat,w,c
 12007  012B02  6E09               	movwf	(btemp+8)^0,c
 12008  012B04  6A0A               	clrf	(btemp+9)^0,c
 12009  012B06  500B               	movf	(btemp+10)^0,w,c
 12010  012B08  2609               	addwf	(btemp+8)^0,f,c
 12011  012B0A  500C               	movf	(btemp+11)^0,w,c
 12012  012B0C  220A               	addwfc	(btemp+9)^0,f,c
 12013  012B0E  500A               	movf	(btemp+9)^0,w,c
 12014  012B10  E106               	bnz	u11730
 12015  012B12  0E1A               	movlw	26
 12016  012B14  5C09               	subwf	(btemp+8)^0,w,c
 12017  012B16  B0D8               	btfsc	status,0,c
 12018  012B18  D002               	goto	u11730
 12019  012B1A  0E01               	movlw	1
 12020  012B1C  D001               	goto	u11740
 12021  012B1E                     u11730:
 12022  012B1E  0E00               	movlw	0
 12023  012B20                     u11740:
 12024  012B20  6E0B               	movwf	(btemp+10)^0,c
 12025  012B22  6A0C               	clrf	(btemp+11)^0,c
 12026                           
 12027                           ;stkvar	_vfpfcnvrt$5397 @ sp[(-32)+2]
 12028  012B24  0EE2               	movlw	-30
 12029  012B26  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12030  012B2C  0EE3               	movlw	-29
 12031  012B2E  0060  F033  FFE3   	movff	btemp+11,plusw1
 12032                           
 12033                           ;stkvar	_vfpfcnvrt$5397 @ sp[(-32)+2]
 12034  012B34  0EE2               	movlw	-30
 12035  012B36  006F FF8C  F001    	movff	plusw1,btemp
 12036  012B3C  0EE3               	movlw	-29
 12037  012B3E  50E3               	movf	plusw1,w,c
 12038  012B40  1001               	iorwf	btemp^0,w,c
 12039                           
 12040                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 12041                           ;stkvar	_ap @ sp[(-32)+-6]
 12042                           
 12043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 12044                           
 12045                           ;stkvar	_f @ sp[(-32)+22]
 12046                           
 12047                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 12048                           ;stkvar	_ap @ sp[(-32)+-6]
 12049  012B42  0EDA               	movlw	-38
 12050  012B44  006F FF8F FFD9     	movff	plusw1,fsr2l
 12051  012B4A  0EDB               	movlw	-37
 12052  012B4C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12053  012B52  0E04               	movlw	4
 12054  012B54  5EDE               	subwf	postinc2,f,c
 12055  012B56  0E00               	movlw	0
 12056  012B58  5ADD               	subwfb	postdec2,f,c
 12057  012B5A  006F FF78  F00B    	movff	postinc2,btemp+10
 12058  012B60  006F FF74  F00C    	movff	postdec2,btemp+11
 12059  012B66  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12060  012B6C  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12061  012B72  006F FF78  F009    	movff	postinc2,btemp+8
 12062  012B78  006F FF78  F00A    	movff	postinc2,btemp+9
 12063  012B7E  006F FF78  F00B    	movff	postinc2,btemp+10
 12064  012B84  006F FF78  F00C    	movff	postinc2,btemp+11
 12065                           
 12066                           ;stkvar	_f @ sp[(-32)+22]
 12067  012B8A  0EF6               	movlw	-10
 12068  012B8C  0060  F027  FFE3   	movff	btemp+8,plusw1
 12069  012B92  0EF7               	movlw	-9
 12070  012B94  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12071  012B9A  0EF8               	movlw	-8
 12072  012B9C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12073  012BA2  0EF9               	movlw	-7
 12074  012BA4  0060  F033  FFE3   	movff	btemp+11,plusw1
 12075                           
 12076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 12077                           ;stkvar	_fmt @ sp[(-32)+-4]
 12078  012BAA  0EDC               	movlw	-36
 12079  012BAC  006F FF8F FFD9     	movff	plusw1,fsr2l
 12080  012BB2  0EDD               	movlw	-35
 12081  012BB4  006F FF8F FFDA     	movff	plusw1,fsr2h
 12082  012BBA  0E02               	movlw	2
 12083  012BBC  26DE               	addwf	postinc2,f,c
 12084  012BBE  0E00               	movlw	0
 12085  012BC0  22DD               	addwfc	postdec2,f,c
 12086  012BC2  D736               	goto	l12134
 12087  012BC4                     l12158:
 12088                           
 12089                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 12090                           ;stkvar	_fmt @ sp[(-32)+-4]
 12091  012BC4  0EDC               	movlw	-36
 12092  012BC6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12093  012BCC  0EDD               	movlw	-35
 12094  012BCE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12095  012BD4  006F FF7B FFF6     	movff	postinc2,tblptrl
 12096  012BDA  006F FF77 FFF7     	movff	postdec2,tblptrh
 12097  012BE0                     	if	0	;tblptru may be non-zero
 12098  012BE0                     	endif
 12099  012BE0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12100  012BE0  0E00               	movlw	low (__mediumconst shr (0+16))
 12101  012BE2  6EF8               	movwf	tblptru,c
 12102  012BE4                     	endif
 12103  012BE4  0008               	tblrd		*
 12104  012BE6  50F5               	movf	tablat,w,c
 12105  012BE8  0A73               	xorlw	115
 12106  012BEA  A4D8               	btfss	status,2,c
 12107  012BEC  D042               	goto	l12168
 12108                           
 12109                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 12110                           ;stkvar	_fmt @ sp[(-32)+-4]
 12111  012BEE  0EDC               	movlw	-36
 12112  012BF0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12113  012BF6  0EDD               	movlw	-35
 12114  012BF8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12115  012BFE  2ADE               	incf	postinc2,f,c
 12116  012C00  0E00               	movlw	0
 12117  012C02  22DD               	addwfc	postdec2,f,c
 12118                           
 12119                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 12120                           ;stkvar	_ap @ sp[(-32)+-6]
 12121  012C04  0EDA               	movlw	-38
 12122  012C06  006F FF8F FFD9     	movff	plusw1,fsr2l
 12123  012C0C  0EDB               	movlw	-37
 12124  012C0E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12125  012C14  0E02               	movlw	2
 12126  012C16  5EDE               	subwf	postinc2,f,c
 12127  012C18  0E00               	movlw	0
 12128  012C1A  5ADD               	subwfb	postdec2,f,c
 12129  012C1C  006F FF78  F00B    	movff	postinc2,btemp+10
 12130  012C22  006F FF74  F00C    	movff	postdec2,btemp+11
 12131  012C28  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12132  012C2E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12133  012C34  006F FF78  F00B    	movff	postinc2,btemp+10
 12134  012C3A  006F FF74  F00C    	movff	postdec2,btemp+11
 12135                           
 12136                           ;stkvar	_cp @ sp[(-32)+29]
 12137  012C40  0EFE               	movlw	-2
 12138  012C42  0060  F033  FFE3   	movff	btemp+11,plusw1
 12139  012C48  0EFD               	movlw	-3
 12140  012C4A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12141                           
 12142                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 12143                           ;stkvar	_cp @ sp[(-32)+29]
 12144  012C50  0EFD               	movlw	-3
 12145  012C52  006F FF8F FFE6     	movff	plusw1,postinc1
 12146  012C58  006F FF8F FFE6     	movff	plusw1,postinc1
 12147                           
 12148                           ;stkvar	_fp @ sp[(-34)+-2]
 12149  012C5E  0EDC               	movlw	-36
 12150  012C60  006F FF8F FFE6     	movff	plusw1,postinc1
 12151  012C66  006F FF8F FFE6     	movff	plusw1,postinc1
 12152  012C6C  ECDA  F0B5         	call	_stoa	;wreg free
 12153  012C70  D2AF               	goto	l2322
 12154  012C72                     l12168:
 12155                           
 12156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 12157                           ;stkvar	_fmt @ sp[(-32)+-4]
 12158  012C72  0EDC               	movlw	-36
 12159  012C74  006F FF8F FFD9     	movff	plusw1,fsr2l
 12160  012C7A  0EDD               	movlw	-35
 12161  012C7C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12162  012C82  006F FF7B FFF6     	movff	postinc2,tblptrl
 12163  012C88  006F FF77 FFF7     	movff	postdec2,tblptrh
 12164  012C8E                     	if	0	;tblptru may be non-zero
 12165  012C8E                     	endif
 12166  012C8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12167  012C8E  0E00               	movlw	low (__mediumconst shr (0+16))
 12168  012C90  6EF8               	movwf	tblptru,c
 12169  012C92                     	endif
 12170  012C92  0008               	tblrd		*
 12171  012C94  50F5               	movf	tablat,w,c
 12172  012C96  0A75               	xorlw	117
 12173  012C98  A4D8               	btfss	status,2,c
 12174  012C9A  D07C               	goto	l12178
 12175                           
 12176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 12177                           ;stkvar	_fmt @ sp[(-32)+-4]
 12178  012C9C  0EDC               	movlw	-36
 12179  012C9E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12180  012CA4  0EDD               	movlw	-35
 12181  012CA6  006F FF8F FFDA     	movff	plusw1,fsr2h
 12182  012CAC  2ADE               	incf	postinc2,f,c
 12183  012CAE  0E00               	movlw	0
 12184  012CB0  22DD               	addwfc	postdec2,f,c
 12185                           
 12186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 12187                           ;stkvar	_ap @ sp[(-32)+-6]
 12188  012CB2  0EDA               	movlw	-38
 12189  012CB4  006F FF8F FFD9     	movff	plusw1,fsr2l
 12190  012CBA  0EDB               	movlw	-37
 12191  012CBC  006F FF8F FFDA     	movff	plusw1,fsr2h
 12192  012CC2  0E02               	movlw	2
 12193  012CC4  5EDE               	subwf	postinc2,f,c
 12194  012CC6  0E00               	movlw	0
 12195  012CC8  5ADD               	subwfb	postdec2,f,c
 12196  012CCA  006F FF78  F00B    	movff	postinc2,btemp+10
 12197  012CD0  006F FF74  F00C    	movff	postdec2,btemp+11
 12198  012CD6  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12199  012CDC  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12200  012CE2  006F FF78  F00B    	movff	postinc2,btemp+10
 12201  012CE8  006F FF74  F00C    	movff	postdec2,btemp+11
 12202  012CEE  500B               	movf	(btemp+10)^0,w,c
 12203  012CF0  6E11               	movwf	(btemp+16)^0,c
 12204  012CF2  500C               	movf	(btemp+11)^0,w,c
 12205  012CF4  6E12               	movwf	(btemp+17)^0,c
 12206  012CF6  6A13               	clrf	(btemp+18)^0,c
 12207  012CF8  6A14               	clrf	(btemp+19)^0,c
 12208  012CFA  6A15               	clrf	(btemp+20)^0,c
 12209  012CFC  6A16               	clrf	(btemp+21)^0,c
 12210  012CFE  6A17               	clrf	(btemp+22)^0,c
 12211  012D00  6A18               	clrf	(btemp+23)^0,c
 12212                           
 12213                           ;stkvar	_llu @ sp[(-32)+6]
 12214  012D02  0EE6               	movlw	-26
 12215  012D04  0060  F047  FFE3   	movff	btemp+16,plusw1
 12216  012D0A  0EE7               	movlw	-25
 12217  012D0C  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12218  012D12  0EE8               	movlw	-24
 12219  012D14  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12220  012D1A  0EE9               	movlw	-23
 12221  012D1C  0060  F053  FFE3   	movff	btemp+19,plusw1
 12222  012D22  0EEA               	movlw	-22
 12223  012D24  0060  F057  FFE3   	movff	btemp+20,plusw1
 12224  012D2A  0EEB               	movlw	-21
 12225  012D2C  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12226  012D32  0EEC               	movlw	-20
 12227  012D34  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12228  012D3A  0EED               	movlw	-19
 12229  012D3C  0060  F063  FFE3   	movff	btemp+23,plusw1
 12230                           
 12231                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 12232                           ;stkvar	_llu @ sp[(-32)+6]
 12233  012D42  50E1               	movf	fsr1l,w,c
 12234  012D44  0FE6               	addlw	-26
 12235  012D46  6ED9               	movwf	fsr2l,c
 12236  012D48  50E2               	movf	fsr1h,w,c
 12237  012D4A  6EDA               	movwf	fsr2h,c
 12238  012D4C  0EFF               	movlw	255
 12239  012D4E  22DA               	addwfc	fsr2h,f,c
 12240  012D50  006F FF7B FFE6     	movff	postinc2,postinc1
 12241  012D56  006F FF7B FFE6     	movff	postinc2,postinc1
 12242  012D5C  006F FF7B FFE6     	movff	postinc2,postinc1
 12243  012D62  006F FF7B FFE6     	movff	postinc2,postinc1
 12244  012D68  006F FF7B FFE6     	movff	postinc2,postinc1
 12245  012D6E  006F FF7B FFE6     	movff	postinc2,postinc1
 12246  012D74  006F FF7B FFE6     	movff	postinc2,postinc1
 12247  012D7A  006F FF7B FFE6     	movff	postinc2,postinc1
 12248                           
 12249                           ;stkvar	_fp @ sp[(-40)+-2]
 12250  012D80  0ED6               	movlw	-42
 12251  012D82  006F FF8F FFE6     	movff	plusw1,postinc1
 12252  012D88  006F FF8F FFE6     	movff	plusw1,postinc1
 12253  012D8E  ECC4  F0B2         	call	_utoa	;wreg free
 12254  012D92  D21E               	goto	l2322
 12255  012D94                     l12178:
 12256                           
 12257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 12258  012D94  0E02               	movlw	2
 12259  012D96  6EE6               	movwf	postinc1,c
 12260  012D98  0E00               	movlw	0
 12261  012D9A  6EE6               	movwf	postinc1,c
 12262  012D9C  0EF3               	movlw	low STR_88
 12263  012D9E  6EE6               	movwf	postinc1,c
 12264  012DA0  0EFF               	movlw	high STR_88
 12265  012DA2  6EE6               	movwf	postinc1,c
 12266                           
 12267                           ;stkvar	_fmt @ sp[(-36)+-4]
 12268  012DA4  0ED8               	movlw	-40
 12269  012DA6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12270  012DAC  0ED9               	movlw	-39
 12271  012DAE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12272  012DB4  006F FF78  F00B    	movff	postinc2,btemp+10
 12273  012DBA  006F FF74  F00C    	movff	postdec2,btemp+11
 12274  012DC0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12275  012DC6  0060  F033  FFE6   	movff	btemp+11,postinc1
 12276  012DCC  ECD3  F0BA         	call	_strncmp	;wreg free
 12277  012DD0  5001               	movf	btemp^0,w,c
 12278  012DD2  1002               	iorwf	(btemp+1)^0,w,c
 12279  012DD4  A4D8               	btfss	status,2,c
 12280  012DD6  D039               	goto	l12188
 12281                           
 12282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 12283                           ;stkvar	_fmt @ sp[(-32)+-4]
 12284  012DD8  0EDC               	movlw	-36
 12285  012DDA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12286  012DE0  0EDD               	movlw	-35
 12287  012DE2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12288  012DE8  0E02               	movlw	2
 12289  012DEA  26DE               	addwf	postinc2,f,c
 12290  012DEC  0E00               	movlw	0
 12291  012DEE  22DD               	addwfc	postdec2,f,c
 12292                           
 12293                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 12294                           ;stkvar	_ap @ sp[(-32)+-6]
 12295  012DF0  0EDA               	movlw	-38
 12296  012DF2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12297  012DF8  0EDB               	movlw	-37
 12298  012DFA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12299  012E00  0E04               	movlw	4
 12300  012E02  5EDE               	subwf	postinc2,f,c
 12301  012E04  0E00               	movlw	0
 12302  012E06  5ADD               	subwfb	postdec2,f,c
 12303  012E08  006F FF78  F00B    	movff	postinc2,btemp+10
 12304  012E0E  006F FF74  F00C    	movff	postdec2,btemp+11
 12305  012E14  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12306  012E1A  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12307  012E20  006F FF78  F009    	movff	postinc2,btemp+8
 12308  012E26  006F FF78  F00A    	movff	postinc2,btemp+9
 12309  012E2C  006F FF78  F00B    	movff	postinc2,btemp+10
 12310  012E32  006F FF78  F00C    	movff	postinc2,btemp+11
 12311  012E38  5009               	movf	(btemp+8)^0,w,c
 12312  012E3A  6E11               	movwf	(btemp+16)^0,c
 12313  012E3C  500A               	movf	(btemp+9)^0,w,c
 12314  012E3E  6E12               	movwf	(btemp+17)^0,c
 12315  012E40  500B               	movf	(btemp+10)^0,w,c
 12316  012E42  6E13               	movwf	(btemp+18)^0,c
 12317  012E44  500C               	movf	(btemp+11)^0,w,c
 12318  012E46  6E14               	movwf	(btemp+19)^0,c
 12319  012E48  D758               	goto	L8
 12320  012E4A                     l12188:
 12321                           
 12322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 12323                           ;stkvar	_fmt @ sp[(-32)+-4]
 12324  012E4A  0EDC               	movlw	-36
 12325  012E4C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12326  012E52  0EDD               	movlw	-35
 12327  012E54  006F FF8F FFDA     	movff	plusw1,fsr2h
 12328  012E5A  006F FF7B FFF6     	movff	postinc2,tblptrl
 12329  012E60  006F FF77 FFF7     	movff	postdec2,tblptrh
 12330  012E66                     	if	0	;tblptru may be non-zero
 12331  012E66                     	endif
 12332  012E66                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12333  012E66  0E00               	movlw	low (__mediumconst shr (0+16))
 12334  012E68  6EF8               	movwf	tblptru,c
 12335  012E6A                     	endif
 12336  012E6A  0008               	tblrd		*
 12337  012E6C  50F5               	movf	tablat,w,c
 12338  012E6E  0A78               	xorlw	120
 12339  012E70  B4D8               	btfsc	status,2,c
 12340  012E72  D015               	goto	u11800
 12341                           
 12342                           ;stkvar	_fmt @ sp[(-32)+-4]
 12343  012E74  0EDC               	movlw	-36
 12344  012E76  006F FF8F FFD9     	movff	plusw1,fsr2l
 12345  012E7C  0EDD               	movlw	-35
 12346  012E7E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12347  012E84  006F FF7B FFF6     	movff	postinc2,tblptrl
 12348  012E8A  006F FF77 FFF7     	movff	postdec2,tblptrh
 12349  012E90                     	if	0	;tblptru may be non-zero
 12350  012E90                     	endif
 12351  012E90                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12352  012E90  0E00               	movlw	low (__mediumconst shr (0+16))
 12353  012E92  6EF8               	movwf	tblptru,c
 12354  012E94                     	endif
 12355  012E94  0008               	tblrd		*
 12356  012E96  50F5               	movf	tablat,w,c
 12357  012E98  0A58               	xorlw	88
 12358  012E9A  A4D8               	btfss	status,2,c
 12359  012E9C  D094               	goto	l12202
 12360  012E9E                     u11800:
 12361                           
 12362                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 12363                           ;stkvar	_fmt @ sp[(-32)+-4]
 12364  012E9E  0EDC               	movlw	-36
 12365  012EA0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12366  012EA6  0EDD               	movlw	-35
 12367  012EA8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12368  012EAE  006F FF7B FFF6     	movff	postinc2,tblptrl
 12369  012EB4  006F FF77 FFF7     	movff	postdec2,tblptrh
 12370  012EBA                     	if	0	;tblptru may be non-zero
 12371  012EBA                     	endif
 12372  012EBA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12373  012EBA  0E00               	movlw	low (__mediumconst shr (0+16))
 12374  012EBC  6EF8               	movwf	tblptru,c
 12375  012EBE                     	endif
 12376                           
 12377                           ;stkvar	_c @ sp[(-32)+31]
 12378  012EBE  0008               	tblrd		*
 12379  012EC0  0EFF               	movlw	-1
 12380  012EC2  006F FFD7 FFE3     	movff	tablat,plusw1
 12381                           
 12382                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 12383                           ;stkvar	_fmt @ sp[(-32)+-4]
 12384  012EC8  0EDC               	movlw	-36
 12385  012ECA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12386  012ED0  0EDD               	movlw	-35
 12387  012ED2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12388  012ED8  2ADE               	incf	postinc2,f,c
 12389  012EDA  0E00               	movlw	0
 12390  012EDC  22DD               	addwfc	postdec2,f,c
 12391                           
 12392                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 12393                           ;stkvar	_ap @ sp[(-32)+-6]
 12394  012EDE  0EDA               	movlw	-38
 12395  012EE0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12396  012EE6  0EDB               	movlw	-37
 12397  012EE8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12398  012EEE  0E02               	movlw	2
 12399  012EF0  5EDE               	subwf	postinc2,f,c
 12400  012EF2  0E00               	movlw	0
 12401  012EF4  5ADD               	subwfb	postdec2,f,c
 12402  012EF6  006F FF78  F00B    	movff	postinc2,btemp+10
 12403  012EFC  006F FF74  F00C    	movff	postdec2,btemp+11
 12404  012F02  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12405  012F08  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12406  012F0E  006F FF78  F00B    	movff	postinc2,btemp+10
 12407  012F14  006F FF74  F00C    	movff	postdec2,btemp+11
 12408  012F1A  500B               	movf	(btemp+10)^0,w,c
 12409  012F1C  6E11               	movwf	(btemp+16)^0,c
 12410  012F1E  500C               	movf	(btemp+11)^0,w,c
 12411  012F20  6E12               	movwf	(btemp+17)^0,c
 12412  012F22  6A13               	clrf	(btemp+18)^0,c
 12413  012F24  6A14               	clrf	(btemp+19)^0,c
 12414  012F26  6A15               	clrf	(btemp+20)^0,c
 12415  012F28  6A16               	clrf	(btemp+21)^0,c
 12416  012F2A  6A17               	clrf	(btemp+22)^0,c
 12417  012F2C  6A18               	clrf	(btemp+23)^0,c
 12418                           
 12419                           ;stkvar	_llu @ sp[(-32)+6]
 12420  012F2E  0EE6               	movlw	-26
 12421  012F30  0060  F047  FFE3   	movff	btemp+16,plusw1
 12422  012F36  0EE7               	movlw	-25
 12423  012F38  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12424  012F3E  0EE8               	movlw	-24
 12425  012F40  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12426  012F46  0EE9               	movlw	-23
 12427  012F48  0060  F053  FFE3   	movff	btemp+19,plusw1
 12428  012F4E  0EEA               	movlw	-22
 12429  012F50  0060  F057  FFE3   	movff	btemp+20,plusw1
 12430  012F56  0EEB               	movlw	-21
 12431  012F58  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12432  012F5E  0EEC               	movlw	-20
 12433  012F60  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12434  012F66  0EED               	movlw	-19
 12435  012F68  0060  F063  FFE3   	movff	btemp+23,plusw1
 12436                           
 12437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 12438                           ;stkvar	_c @ sp[(-32)+31]
 12439  012F6E  0EFF               	movlw	-1
 12440  012F70  50E3               	movf	plusw1,w,c
 12441  012F72  6EE6               	movwf	postinc1,c
 12442                           
 12443                           ;stkvar	_llu @ sp[(-33)+6]
 12444  012F74  50E1               	movf	fsr1l,w,c
 12445  012F76  0FE5               	addlw	-27
 12446  012F78  6ED9               	movwf	fsr2l,c
 12447  012F7A  50E2               	movf	fsr1h,w,c
 12448  012F7C  6EDA               	movwf	fsr2h,c
 12449  012F7E  0EFF               	movlw	255
 12450  012F80  22DA               	addwfc	fsr2h,f,c
 12451  012F82  006F FF7B FFE6     	movff	postinc2,postinc1
 12452  012F88  006F FF7B FFE6     	movff	postinc2,postinc1
 12453  012F8E  006F FF7B FFE6     	movff	postinc2,postinc1
 12454  012F94  006F FF7B FFE6     	movff	postinc2,postinc1
 12455  012F9A  006F FF7B FFE6     	movff	postinc2,postinc1
 12456  012FA0  006F FF7B FFE6     	movff	postinc2,postinc1
 12457  012FA6  006F FF7B FFE6     	movff	postinc2,postinc1
 12458  012FAC  006F FF7B FFE6     	movff	postinc2,postinc1
 12459                           
 12460                           ;stkvar	_fp @ sp[(-41)+-2]
 12461  012FB2  0ED5               	movlw	-43
 12462  012FB4  006F FF8F FFE6     	movff	plusw1,postinc1
 12463  012FBA  006F FF8F FFE6     	movff	plusw1,postinc1
 12464  012FC0  ECBE  F0AB         	call	_xtoa	;wreg free
 12465  012FC4  D105               	goto	l2322
 12466  012FC6                     l12202:
 12467                           
 12468                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 12469  012FC6  0E02               	movlw	2
 12470  012FC8  6EE6               	movwf	postinc1,c
 12471  012FCA  0E00               	movlw	0
 12472  012FCC  6EE6               	movwf	postinc1,c
 12473  012FCE  0EF6               	movlw	low STR_93
 12474  012FD0  6EE6               	movwf	postinc1,c
 12475  012FD2  0EFF               	movlw	high STR_93
 12476  012FD4  6EE6               	movwf	postinc1,c
 12477                           
 12478                           ;stkvar	_fmt @ sp[(-36)+-4]
 12479  012FD6  0ED8               	movlw	-40
 12480  012FD8  006F FF8F FFD9     	movff	plusw1,fsr2l
 12481  012FDE  0ED9               	movlw	-39
 12482  012FE0  006F FF8F FFDA     	movff	plusw1,fsr2h
 12483  012FE6  006F FF78  F00B    	movff	postinc2,btemp+10
 12484  012FEC  006F FF74  F00C    	movff	postdec2,btemp+11
 12485  012FF2  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12486  012FF8  0060  F033  FFE6   	movff	btemp+11,postinc1
 12487  012FFE  ECD3  F0BA         	call	_strncmp	;wreg free
 12488  013002  5001               	movf	btemp^0,w,c
 12489  013004  1002               	iorwf	(btemp+1)^0,w,c
 12490  013006  B4D8               	btfsc	status,2,c
 12491  013008  D022               	goto	u11820
 12492  01300A  0E02               	movlw	2
 12493  01300C  6EE6               	movwf	postinc1,c
 12494  01300E  0E00               	movlw	0
 12495  013010  6EE6               	movwf	postinc1,c
 12496  013012  0EE7               	movlw	low STR_97
 12497  013014  6EE6               	movwf	postinc1,c
 12498  013016  0EFF               	movlw	high STR_97
 12499  013018  6EE6               	movwf	postinc1,c
 12500                           
 12501                           ;stkvar	_fmt @ sp[(-36)+-4]
 12502  01301A  0ED8               	movlw	-40
 12503  01301C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12504  013022  0ED9               	movlw	-39
 12505  013024  006F FF8F FFDA     	movff	plusw1,fsr2h
 12506  01302A  006F FF78  F00B    	movff	postinc2,btemp+10
 12507  013030  006F FF74  F00C    	movff	postdec2,btemp+11
 12508  013036  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12509  01303C  0060  F033  FFE6   	movff	btemp+11,postinc1
 12510  013042  ECD3  F0BA         	call	_strncmp	;wreg free
 12511  013046  5001               	movf	btemp^0,w,c
 12512  013048  1002               	iorwf	(btemp+1)^0,w,c
 12513  01304A  A4D8               	btfss	status,2,c
 12514  01304C  D058               	goto	l12216
 12515  01304E                     u11820:
 12516                           
 12517                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 12518                           ;stkvar	_fmt @ sp[(-32)+-4]
 12519  01304E  0EDC               	movlw	-36
 12520  013050  006F FF8F FFD9     	movff	plusw1,fsr2l
 12521  013056  0EDD               	movlw	-35
 12522  013058  006F FF8F FFDA     	movff	plusw1,fsr2h
 12523  01305E  006F FF78  F00B    	movff	postinc2,btemp+10
 12524  013064  006F FF74  F00C    	movff	postdec2,btemp+11
 12525  01306A  0E01               	movlw	1
 12526  01306C  260B               	addwf	(btemp+10)^0,f,c
 12527  01306E  0E00               	movlw	0
 12528  013070  220C               	addwfc	(btemp+11)^0,f,c
 12529  013072  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12530  013078  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12531  01307E                     	if	0	;tblptru may be non-zero
 12532  01307E                     	endif
 12533  01307E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12534  01307E  0E00               	movlw	low (__mediumconst shr (0+16))
 12535  013080  6EF8               	movwf	tblptru,c
 12536  013082                     	endif
 12537                           
 12538                           ;stkvar	_c @ sp[(-32)+31]
 12539  013082  0008               	tblrd		*
 12540  013084  0EFF               	movlw	-1
 12541  013086  006F FFD7 FFE3     	movff	tablat,plusw1
 12542                           
 12543                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 12544                           ;stkvar	_fmt @ sp[(-32)+-4]
 12545  01308C  0EDC               	movlw	-36
 12546  01308E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12547  013094  0EDD               	movlw	-35
 12548  013096  006F FF8F FFDA     	movff	plusw1,fsr2h
 12549  01309C  0E02               	movlw	2
 12550  01309E  26DE               	addwf	postinc2,f,c
 12551  0130A0  0E00               	movlw	0
 12552  0130A2  22DD               	addwfc	postdec2,f,c
 12553                           
 12554                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 12555                           ;stkvar	_ap @ sp[(-32)+-6]
 12556  0130A4  0EDA               	movlw	-38
 12557  0130A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12558  0130AC  0EDB               	movlw	-37
 12559  0130AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12560  0130B4  0E04               	movlw	4
 12561  0130B6  5EDE               	subwf	postinc2,f,c
 12562  0130B8  0E00               	movlw	0
 12563  0130BA  5ADD               	subwfb	postdec2,f,c
 12564  0130BC  006F FF78  F00B    	movff	postinc2,btemp+10
 12565  0130C2  006F FF74  F00C    	movff	postdec2,btemp+11
 12566  0130C8  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12567  0130CE  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12568  0130D4  006F FF78  F009    	movff	postinc2,btemp+8
 12569  0130DA  006F FF78  F00A    	movff	postinc2,btemp+9
 12570  0130E0  006F FF78  F00B    	movff	postinc2,btemp+10
 12571  0130E6  006F FF78  F00C    	movff	postinc2,btemp+11
 12572  0130EC  5009               	movf	(btemp+8)^0,w,c
 12573  0130EE  6E11               	movwf	(btemp+16)^0,c
 12574  0130F0  500A               	movf	(btemp+9)^0,w,c
 12575  0130F2  6E12               	movwf	(btemp+17)^0,c
 12576  0130F4  500B               	movf	(btemp+10)^0,w,c
 12577  0130F6  6E13               	movwf	(btemp+18)^0,c
 12578  0130F8  500C               	movf	(btemp+11)^0,w,c
 12579  0130FA  6E14               	movwf	(btemp+19)^0,c
 12580  0130FC  D714               	goto	L9
 12581  0130FE                     l12216:
 12582                           
 12583                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 12584                           ;stkvar	_fmt @ sp[(-32)+-4]
 12585  0130FE  0EDC               	movlw	-36
 12586  013100  006F FF8F FFD9     	movff	plusw1,fsr2l
 12587  013106  0EDD               	movlw	-35
 12588  013108  006F FF8F FFDA     	movff	plusw1,fsr2h
 12589  01310E  006F FF7B FFF6     	movff	postinc2,tblptrl
 12590  013114  006F FF77 FFF7     	movff	postdec2,tblptrh
 12591  01311A                     	if	0	;tblptru may be non-zero
 12592  01311A                     	endif
 12593  01311A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12594  01311A  0E00               	movlw	low (__mediumconst shr (0+16))
 12595  01311C  6EF8               	movwf	tblptru,c
 12596  01311E                     	endif
 12597  01311E  0008               	tblrd		*
 12598  013120  50F5               	movf	tablat,w,c
 12599  013122  0A25               	xorlw	37
 12600  013124  A4D8               	btfss	status,2,c
 12601  013126  D01A               	goto	l12226
 12602                           
 12603                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 12604                           ;stkvar	_fmt @ sp[(-32)+-4]
 12605  013128  0EDC               	movlw	-36
 12606  01312A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12607  013130  0EDD               	movlw	-35
 12608  013132  006F FF8F FFDA     	movff	plusw1,fsr2h
 12609  013138  2ADE               	incf	postinc2,f,c
 12610  01313A  0E00               	movlw	0
 12611  01313C  22DD               	addwfc	postdec2,f,c
 12612                           
 12613                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 12614                           ;stkvar	_fp @ sp[(-32)+-2]
 12615  01313E  0EDE               	movlw	-34
 12616  013140  006F FF8F FFE6     	movff	plusw1,postinc1
 12617  013146  006F FF8F FFE6     	movff	plusw1,postinc1
 12618  01314C  0E25               	movlw	37
 12619  01314E  6EE6               	movwf	postinc1,c
 12620  013150  0E00               	movlw	0
 12621  013152  6EE6               	movwf	postinc1,c
 12622  013154  EC61  F0C7         	call	_fputc	;wreg free
 12623  013158                     l12222:
 12624                           
 12625                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 12626  013158  0E01               	movlw	1
 12627  01315A  D00C               	goto	L10
 12628  01315C                     l12226:
 12629                           
 12630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 12631                           ;stkvar	_fmt @ sp[(-32)+-4]
 12632  01315C  0EDC               	movlw	-36
 12633  01315E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12634  013164  0EDD               	movlw	-35
 12635  013166  006F FF8F FFDA     	movff	plusw1,fsr2h
 12636  01316C  2ADE               	incf	postinc2,f,c
 12637  01316E  0E00               	movlw	0
 12638  013170  22DD               	addwfc	postdec2,f,c
 12639                           
 12640                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 12641  013172  0E00               	movlw	0
 12642  013174                     L10:
 12643  013174  6E01               	movwf	btemp^0,c
 12644  013176  0E00               	movlw	0
 12645  013178  6E02               	movwf	(btemp+1)^0,c
 12646  01317A  D02A               	goto	l2322
 12647  01317C                     l12232:
 12648                           
 12649                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 12650                           ;stkvar	_fp @ sp[(-32)+-2]
 12651  01317C  0EDE               	movlw	-34
 12652  01317E  006F FF8F FFE6     	movff	plusw1,postinc1
 12653  013184  006F FF8F FFE6     	movff	plusw1,postinc1
 12654                           
 12655                           ;stkvar	_fmt @ sp[(-34)+-4]
 12656  01318A  0EDA               	movlw	-38
 12657  01318C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12658  013192  0EDB               	movlw	-37
 12659  013194  006F FF8F FFDA     	movff	plusw1,fsr2h
 12660  01319A  006F FF7B FFF6     	movff	postinc2,tblptrl
 12661  0131A0  006F FF77 FFF7     	movff	postdec2,tblptrh
 12662  0131A6                     	if	0	;tblptru may be non-zero
 12663  0131A6                     	endif
 12664  0131A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12665  0131A6  0E00               	movlw	low (__mediumconst shr (0+16))
 12666  0131A8  6EF8               	movwf	tblptru,c
 12667  0131AA                     	endif
 12668  0131AA  0008               	tblrd		*
 12669  0131AC  50F5               	movf	tablat,w,c
 12670  0131AE  6EE6               	movwf	postinc1,c
 12671  0131B0  0E00               	movlw	0
 12672  0131B2  6EE6               	movwf	postinc1,c
 12673  0131B4  EC61  F0C7         	call	_fputc	;wreg free
 12674                           
 12675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 12676                           ;stkvar	_fmt @ sp[(-32)+-4]
 12677  0131B8  0EDC               	movlw	-36
 12678  0131BA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12679  0131C0  0EDD               	movlw	-35
 12680  0131C2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12681  0131C8  2ADE               	incf	postinc2,f,c
 12682  0131CA  0E00               	movlw	0
 12683  0131CC  22DD               	addwfc	postdec2,f,c
 12684  0131CE  D7C4               	goto	l12222
 12685  0131D0                     l2322:
 12686                           
 12687                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 12688  0131D0  0EDA               	movlw	218
 12689  0131D2  26E1               	addwf	fsr1l,f,c
 12690  0131D4  0EFF               	movlw	255
 12691  0131D6  22E2               	addwfc	fsr1h,f,c
 12692  0131D8  0012               	return		;funcret
 12693  0131DA                     __end_of_vfpfcnvrt:
 12694                           	opt callstack 0
 12695                           
 12696 ;; *************** function _xtoa *****************
 12697 ;; Defined at:
 12698 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12699 ;; Parameters:    Size  Location     Type
 12700 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12701 ;;		 -> f(6), NULL(0), 
 12702 ;;  d               8  [STACK] unsigned long long 
 12703 ;;  x               1  [STACK] unsigned char 
 12704 ;; Auto vars:     Size  Location     Type
 12705 ;;  n               8  [STACK] unsigned long long 
 12706 ;;  c               2  [STACK] int 
 12707 ;;  i               2  [STACK] int 
 12708 ;;  w               2  [STACK] int 
 12709 ;;  p               2  [STACK] int 
 12710 ;; Return value:  Size  Location     Type
 12711 ;;                  2  [STACK] int 
 12712 ;; Registers used:
 12713 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 12714 ;; Tracked objects:
 12715 ;;		On entry : 0/0
 12716 ;;		On exit  : 0/0
 12717 ;;		Unchanged: 0/0
 12718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12723 ;;Total ram usage:        0 bytes
 12724 ;; Hardware stack levels used:    1
 12725 ;; Hardware stack levels required when called:   20
 12726 ;; This function calls:
 12727 ;;		_isalpha
 12728 ;;		_isupper
 12729 ;;		_pad
 12730 ;;		_toupper
 12731 ;; This function is called by:
 12732 ;;		_vfpfcnvrt
 12733 ;; This function uses a reentrant model
 12734 ;;
 12735                           
 12736                           	psect	text46
 12737  01577C                     __ptext46:
 12738                           	opt callstack 0
 12739  01577C                     _xtoa:
 12740                           	opt callstack 0
 12741                           
 12742                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 12743  01577C  0E14               	movlw	20
 12744  01577E  26E1               	addwf	fsr1l,f,c
 12745  015780  0E00               	movlw	0
 12746  015782  22E2               	addwfc	fsr1h,f,c
 12747                           
 12748                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 12749                           
 12750                           ;incstack = 0
 12751 ;; hardware stack exceeded
 12752  015784  AE24               	btfss	(_prec+1)^0,7,c
 12753                           
 12754                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 12755  015786  9225               	bcf	_flags^0,1,c
 12756                           
 12757                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 12758  015788  BE24               	btfsc	(_prec+1)^0,7,c
 12759  01578A  D005               	goto	u11350
 12760  01578C  5024               	movf	(_prec+1)^0,w,c
 12761  01578E  E110               	bnz	l11956
 12762  015790  0423               	decf	_prec^0,w,c
 12763  015792  B0D8               	btfsc	status,0,c
 12764  015794  D00D               	goto	l11956
 12765  015796                     u11350:
 12766  015796  0E01               	movlw	1
 12767  015798  6E0B               	movwf	(btemp+10)^0,c
 12768  01579A  0E00               	movlw	0
 12769  01579C  6E0C               	movwf	(btemp+11)^0,c
 12770                           
 12771                           ;stkvar	_p @ sp[(-20)+18]
 12772  01579E  0EFE               	movlw	-2
 12773  0157A0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12774  0157A6  0EFF               	movlw	-1
 12775  0157A8  0060  F033  FFE3   	movff	btemp+11,plusw1
 12776  0157AE  D008               	goto	l2272
 12777  0157B0                     l11956:
 12778                           
 12779                           ;stkvar	_p @ sp[(-20)+18]
 12780  0157B0  0EFE               	movlw	-2
 12781  0157B2  0060  F08F  FFE3   	movff	_prec,plusw1
 12782  0157B8  0EFF               	movlw	-1
 12783  0157BA  0060  F093  FFE3   	movff	_prec+1,plusw1
 12784  0157C0                     l2272:
 12785                           
 12786                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 12787                           ;stkvar	_w @ sp[(-20)+16]
 12788  0157C0  0EFC               	movlw	-4
 12789  0157C2  0060  F087  FFE3   	movff	_width,plusw1
 12790  0157C8  0EFD               	movlw	-3
 12791  0157CA  0060  F08B  FFE3   	movff	_width+1,plusw1
 12792                           
 12793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 12794  0157D0  A825               	btfss	_flags^0,4,c
 12795  0157D2  D00B               	goto	l11962
 12796                           
 12797                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 12798                           ;stkvar	_w @ sp[(-20)+16]
 12799  0157D4  50E1               	movf	fsr1l,w,c
 12800  0157D6  0FFC               	addlw	-4
 12801  0157D8  6ED9               	movwf	fsr2l,c
 12802  0157DA  50E2               	movf	fsr1h,w,c
 12803  0157DC  6EDA               	movwf	fsr2h,c
 12804  0157DE  0EFF               	movlw	255
 12805  0157E0  22DA               	addwfc	fsr2h,f,c
 12806  0157E2  0EFE               	movlw	254
 12807  0157E4  26DE               	addwf	postinc2,f,c
 12808  0157E6  0EFF               	movlw	255
 12809  0157E8  22DD               	addwfc	postdec2,f,c
 12810  0157EA                     l11962:
 12811                           
 12812                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 12813                           ;stkvar	_d @ sp[(-20)+-10]
 12814  0157EA  0EE2               	movlw	226
 12815  0157EC  24E1               	addwf	fsr1l,w,c
 12816  0157EE  6ED9               	movwf	fsr2l,c
 12817  0157F0  0EFF               	movlw	255
 12818  0157F2  20E2               	addwfc	fsr1h,w,c
 12819  0157F4  6EDA               	movwf	fsr2h,c
 12820                           
 12821                           ;stkvar	_n @ sp[(-20)+4]
 12822  0157F6  0E08               	movlw	8
 12823  0157F8  6E01               	movwf	btemp^0,c
 12824  0157FA  0EF0               	movlw	-16
 12825  0157FC                     us1137999:
 12826  0157FC  006F FF7B FFE3     	movff	postinc2,plusw1
 12827  015802  28E8               	incf	wreg,w,c
 12828  015804  2E01               	decfsz	btemp^0,f,c
 12829  015806  D7FA               	bra	us1137999
 12830                           
 12831                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 12832  015808  0E4F               	movlw	79
 12833  01580A  6E0B               	movwf	(btemp+10)^0,c
 12834  01580C  0E00               	movlw	0
 12835  01580E  6E0C               	movwf	(btemp+11)^0,c
 12836                           
 12837                           ;stkvar	_i @ sp[(-20)+14]
 12838  015810  0EFA               	movlw	-6
 12839  015812  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12840  015818  0EFB               	movlw	-5
 12841  01581A  0060  F033  FFE3   	movff	btemp+11,plusw1
 12842                           
 12843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 12844  015820  0103               	movlb	3	; () banked
 12845  015822  6BE3               	clrf	(_dbuf+79)& (0+255),b
 12846                           
 12847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12848  015824  D0EE               	goto	l12000
 12849  015826                     l11968:
 12850                           
 12851                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 12852                           ;stkvar	_i @ sp[(-20)+14]
 12853  015826  50E1               	movf	fsr1l,w,c
 12854  015828  0FFA               	addlw	-6
 12855  01582A  6ED9               	movwf	fsr2l,c
 12856  01582C  50E2               	movf	fsr1h,w,c
 12857  01582E  6EDA               	movwf	fsr2h,c
 12858  015830  0EFF               	movlw	255
 12859  015832  22DA               	addwfc	fsr2h,f,c
 12860  015834  06DE               	decf	postinc2,f,c
 12861  015836  0E00               	movlw	0
 12862  015838  5ADD               	subwfb	postdec2,f,c
 12863                           
 12864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 12865                           ;stkvar	_n @ sp[(-20)+4]
 12866  01583A  0EF0               	movlw	-16
 12867  01583C  006F FF8C  F00B    	movff	plusw1,btemp+10
 12868  015842  0EF1               	movlw	-15
 12869  015844  006F FF8C  F00C    	movff	plusw1,btemp+11
 12870  01584A  0E0F               	movlw	15
 12871  01584C  160B               	andwf	(btemp+10)^0,f,c
 12872  01584E  0E00               	movlw	0
 12873  015850  160C               	andwf	(btemp+11)^0,f,c
 12874                           
 12875                           ;stkvar	_c @ sp[(-20)+12]
 12876  015852  0EF8               	movlw	-8
 12877  015854  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12878  01585A  0EF9               	movlw	-7
 12879  01585C  0060  F033  FFE3   	movff	btemp+11,plusw1
 12880                           
 12881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 12882                           ;stkvar	_c @ sp[(-20)+12]
 12883  015862  0EF9               	movlw	-7
 12884  015864  BEE3               	btfsc	plusw1,7,c
 12885  015866  D00F               	goto	l11976
 12886  015868  0EF9               	movlw	-7
 12887  01586A  50E3               	movf	plusw1,w,c
 12888  01586C  E108               	bnz	u11380
 12889  01586E  0EF8               	movlw	-8
 12890  015870  006F FF8C  F001    	movff	plusw1,btemp
 12891  015876  0E0A               	movlw	10
 12892  015878  5E01               	subwf	btemp^0,f,c
 12893  01587A  A0D8               	btfss	status,0,c
 12894  01587C  D004               	goto	l11976
 12895  01587E                     u11380:
 12896                           
 12897                           ;stkvar	_c @ sp[(-20)+12]
 12898  01587E  0EF8               	movlw	-8
 12899  015880  50E3               	movf	plusw1,w,c
 12900  015882  0F57               	addlw	87
 12901  015884  D003               	goto	L11
 12902  015886                     l11976:
 12903                           
 12904                           ;stkvar	_c @ sp[(-20)+12]
 12905  015886  0EF8               	movlw	-8
 12906  015888  50E3               	movf	plusw1,w,c
 12907  01588A  0F30               	addlw	48
 12908  01588C                     L11:
 12909  01588C  6E0B               	movwf	(btemp+10)^0,c
 12910  01588E  0EF9               	movlw	-7
 12911  015890  006F FF8C  F00C    	movff	plusw1,btemp+11
 12912  015896  0E00               	movlw	0
 12913  015898  220C               	addwfc	(btemp+11)^0,f,c
 12914                           
 12915                           ;stkvar	_c @ sp[(-20)+12]
 12916  01589A  0EF8               	movlw	-8
 12917  01589C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12918  0158A2  0EF9               	movlw	-7
 12919  0158A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 12920  0158AA  0EBF               	movlw	191
 12921  0158AC  6E0B               	movwf	(btemp+10)^0,c
 12922  0158AE  0EFF               	movlw	255
 12923  0158B0  6E0C               	movwf	(btemp+11)^0,c
 12924                           
 12925                           ;stkvar	_x @ sp[(-20)+-11]
 12926  0158B2  0EE1               	movlw	-31
 12927  0158B4  50E3               	movf	plusw1,w,c
 12928  0158B6  6E09               	movwf	(btemp+8)^0,c
 12929  0158B8  6A0A               	clrf	(btemp+9)^0,c
 12930  0158BA  500B               	movf	(btemp+10)^0,w,c
 12931  0158BC  2609               	addwf	(btemp+8)^0,f,c
 12932  0158BE  500C               	movf	(btemp+11)^0,w,c
 12933  0158C0  220A               	addwfc	(btemp+9)^0,f,c
 12934  0158C2  500A               	movf	(btemp+9)^0,w,c
 12935  0158C4  E106               	bnz	u11390
 12936  0158C6  0E1A               	movlw	26
 12937  0158C8  5C09               	subwf	(btemp+8)^0,w,c
 12938  0158CA  B0D8               	btfsc	status,0,c
 12939  0158CC  D002               	goto	u11390
 12940  0158CE  0E01               	movlw	1
 12941  0158D0  D001               	goto	u11400
 12942  0158D2                     u11390:
 12943  0158D2  0E00               	movlw	0
 12944  0158D4                     u11400:
 12945  0158D4  6E0B               	movwf	(btemp+10)^0,c
 12946  0158D6  6A0C               	clrf	(btemp+11)^0,c
 12947                           
 12948                           ;stkvar	_xtoa$5370 @ sp[(-20)+2]
 12949  0158D8  0EEE               	movlw	-18
 12950  0158DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12951  0158E0  0EEF               	movlw	-17
 12952  0158E2  0060  F033  FFE3   	movff	btemp+11,plusw1
 12953                           
 12954                           ;stkvar	_xtoa$5370 @ sp[(-20)+2]
 12955  0158E8  0EEE               	movlw	-18
 12956  0158EA  006F FF8C  F001    	movff	plusw1,btemp
 12957  0158F0  0EEF               	movlw	-17
 12958  0158F2  50E3               	movf	plusw1,w,c
 12959  0158F4  1001               	iorwf	btemp^0,w,c
 12960  0158F6  B4D8               	btfsc	status,2,c
 12961  0158F8  D041               	goto	l11992
 12962  0158FA  0E9F               	movlw	159
 12963  0158FC  6E0B               	movwf	(btemp+10)^0,c
 12964  0158FE  0EFF               	movlw	255
 12965  015900  6E0C               	movwf	(btemp+11)^0,c
 12966                           
 12967                           ;stkvar	_c @ sp[(-20)+12]
 12968  015902  0EF8               	movlw	-8
 12969  015904  006F FF8C  F009    	movff	plusw1,btemp+8
 12970  01590A  0EF9               	movlw	-7
 12971  01590C  006F FF8C  F00A    	movff	plusw1,btemp+9
 12972  015912  0E20               	movlw	32
 12973  015914  1209               	iorwf	(btemp+8)^0,f,c
 12974  015916  0E00               	movlw	0
 12975  015918  120A               	iorwf	(btemp+9)^0,f,c
 12976  01591A  500B               	movf	(btemp+10)^0,w,c
 12977  01591C  2609               	addwf	(btemp+8)^0,f,c
 12978  01591E  500C               	movf	(btemp+11)^0,w,c
 12979  015920  220A               	addwfc	(btemp+9)^0,f,c
 12980  015922  500A               	movf	(btemp+9)^0,w,c
 12981  015924  E106               	bnz	u11420
 12982  015926  0E1A               	movlw	26
 12983  015928  5C09               	subwf	(btemp+8)^0,w,c
 12984  01592A  B0D8               	btfsc	status,0,c
 12985  01592C  D002               	goto	u11420
 12986  01592E  0E01               	movlw	1
 12987  015930  D001               	goto	u11430
 12988  015932                     u11420:
 12989  015932  0E00               	movlw	0
 12990  015934                     u11430:
 12991  015934  6E0B               	movwf	(btemp+10)^0,c
 12992  015936  6A0C               	clrf	(btemp+11)^0,c
 12993                           
 12994                           ;stkvar	_xtoa$5371 @ sp[(-20)+0]
 12995  015938  0EEC               	movlw	-20
 12996  01593A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12997  015940  0EED               	movlw	-19
 12998  015942  0060  F033  FFE3   	movff	btemp+11,plusw1
 12999                           
 13000                           ;stkvar	_xtoa$5371 @ sp[(-20)+0]
 13001  015948  0EEC               	movlw	-20
 13002  01594A  006F FF8C  F001    	movff	plusw1,btemp
 13003  015950  0EED               	movlw	-19
 13004  015952  50E3               	movf	plusw1,w,c
 13005  015954  1001               	iorwf	btemp^0,w,c
 13006  015956  B4D8               	btfsc	status,2,c
 13007  015958  D011               	goto	l11992
 13008                           
 13009                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 13010                           ;stkvar	_c @ sp[(-20)+12]
 13011  01595A  0EF8               	movlw	-8
 13012  01595C  006F FF8F FFE6     	movff	plusw1,postinc1
 13013  015962  006F FF8F FFE6     	movff	plusw1,postinc1
 13014  015968  EC62  F0D1         	call	_toupper	;wreg free
 13015                           
 13016                           ;stkvar	_c @ sp[(-20)+12]
 13017  01596C  0EF8               	movlw	-8
 13018  01596E  0060  F007  FFE3   	movff	btemp,plusw1
 13019  015974  0EF9               	movlw	-7
 13020  015976  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13021  01597C                     l11992:
 13022                           
 13023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 13024                           ;stkvar	_c @ sp[(-20)+12]
 13025                           ;stkvar	_i @ sp[(-20)+14]
 13026  01597C  0EFA               	movlw	-6
 13027  01597E  006F FF8C  F00B    	movff	plusw1,btemp+10
 13028  015984  0EFB               	movlw	-5
 13029  015986  006F FF8C  F00C    	movff	plusw1,btemp+11
 13030  01598C  0E94               	movlw	low _dbuf
 13031  01598E  240B               	addwf	(btemp+10)^0,w,c
 13032  015990  6ED9               	movwf	fsr2l,c
 13033  015992  0E03               	movlw	high _dbuf
 13034  015994  200C               	addwfc	(btemp+11)^0,w,c
 13035  015996  6EDA               	movwf	fsr2h,c
 13036  015998  0EF8               	movlw	-8
 13037  01599A  006F FF8F FFDF     	movff	plusw1,indf2
 13038                           
 13039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 13040                           ;stkvar	_p @ sp[(-20)+18]
 13041  0159A0  50E1               	movf	fsr1l,w,c
 13042  0159A2  0FFE               	addlw	-2
 13043  0159A4  6ED9               	movwf	fsr2l,c
 13044  0159A6  50E2               	movf	fsr1h,w,c
 13045  0159A8  6EDA               	movwf	fsr2h,c
 13046  0159AA  0EFF               	movlw	255
 13047  0159AC  22DA               	addwfc	fsr2h,f,c
 13048  0159AE  06DE               	decf	postinc2,f,c
 13049  0159B0  0E00               	movlw	0
 13050  0159B2  5ADD               	subwfb	postdec2,f,c
 13051                           
 13052                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 13053                           ;stkvar	_w @ sp[(-20)+16]
 13054  0159B4  50E1               	movf	fsr1l,w,c
 13055  0159B6  0FFC               	addlw	-4
 13056  0159B8  6ED9               	movwf	fsr2l,c
 13057  0159BA  50E2               	movf	fsr1h,w,c
 13058  0159BC  6EDA               	movwf	fsr2h,c
 13059  0159BE  0EFF               	movlw	255
 13060  0159C0  22DA               	addwfc	fsr2h,f,c
 13061  0159C2  06DE               	decf	postinc2,f,c
 13062  0159C4  0E00               	movlw	0
 13063  0159C6  5ADD               	subwfb	postdec2,f,c
 13064                           
 13065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 13066  0159C8  0E04               	movlw	4
 13067  0159CA  6E0C               	movwf	(btemp+11)^0,c
 13068                           
 13069                           ;stkvar	_n @ sp[(-20)+4]
 13070  0159CC  50E1               	movf	fsr1l,w,c
 13071  0159CE  0FF0               	addlw	-16
 13072  0159D0  6ED9               	movwf	fsr2l,c
 13073  0159D2  50E2               	movf	fsr1h,w,c
 13074  0159D4  6EDA               	movwf	fsr2h,c
 13075  0159D6  0EFF               	movlw	255
 13076  0159D8  22DA               	addwfc	fsr2h,f,c
 13077  0159DA  280C               	incf	(btemp+11)^0,w,c
 13078  0159DC  52DE               	movf	postinc2,f,c
 13079  0159DE  D00F               	goto	u11450
 13080  0159E0                     u11455:
 13081  0159E0  52DE               	movf	postinc2,f,c
 13082  0159E2  52DE               	movf	postinc2,f,c
 13083  0159E4  52DE               	movf	postinc2,f,c
 13084  0159E6  52DE               	movf	postinc2,f,c
 13085  0159E8  52DE               	movf	postinc2,f,c
 13086  0159EA  52DE               	movf	postinc2,f,c
 13087  0159EC  90D8               	bcf	status,0,c
 13088  0159EE  32DD               	rrcf	postdec2,f,c
 13089  0159F0  32DD               	rrcf	postdec2,f,c
 13090  0159F2  32DD               	rrcf	postdec2,f,c
 13091  0159F4  32DD               	rrcf	postdec2,f,c
 13092  0159F6  32DD               	rrcf	postdec2,f,c
 13093  0159F8  32DD               	rrcf	postdec2,f,c
 13094  0159FA  32DD               	rrcf	postdec2,f,c
 13095  0159FC  32DE               	rrcf	postinc2,f,c
 13096  0159FE                     u11450:
 13097  0159FE  2EE8               	decfsz	wreg,f,c
 13098  015A00  D7EF               	goto	u11455
 13099  015A02                     l12000:
 13100                           
 13101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13102                           ;stkvar	_i @ sp[(-20)+14]
 13103  015A02  0EFB               	movlw	-5
 13104  015A04  BEE3               	btfsc	plusw1,7,c
 13105  015A06  D03A               	goto	u11500
 13106  015A08  0EFB               	movlw	-5
 13107  015A0A  50E3               	movf	plusw1,w,c
 13108  015A0C  E108               	bnz	u11460
 13109  015A0E  0EFA               	movlw	-6
 13110  015A10  006F FF8C  F001    	movff	plusw1,btemp
 13111  015A16  0E02               	movlw	2
 13112  015A18  5E01               	subwf	btemp^0,f,c
 13113  015A1A  A0D8               	btfss	status,0,c
 13114  015A1C  D02F               	goto	u11500
 13115  015A1E                     u11460:
 13116                           
 13117                           ;stkvar	_n @ sp[(-20)+4]
 13118  015A1E  0EF0               	movlw	-16
 13119  015A20  50E3               	movf	plusw1,w,c
 13120  015A22  E115               	bnz	u11471
 13121  015A24  0EF1               	movlw	-15
 13122  015A26  50E3               	movf	plusw1,w,c
 13123  015A28  E112               	bnz	u11471
 13124  015A2A  0EF2               	movlw	-14
 13125  015A2C  50E3               	movf	plusw1,w,c
 13126  015A2E  E10F               	bnz	u11471
 13127  015A30  0EF3               	movlw	-13
 13128  015A32  50E3               	movf	plusw1,w,c
 13129  015A34  E10C               	bnz	u11471
 13130  015A36  0EF4               	movlw	-12
 13131  015A38  50E3               	movf	plusw1,w,c
 13132  015A3A  E109               	bnz	u11471
 13133  015A3C  0EF5               	movlw	-11
 13134  015A3E  50E3               	movf	plusw1,w,c
 13135  015A40  E106               	bnz	u11471
 13136  015A42  0EF6               	movlw	-10
 13137  015A44  50E3               	movf	plusw1,w,c
 13138  015A46  E103               	bnz	u11471
 13139  015A48  0EF7               	movlw	-9
 13140  015A4A  50E3               	movf	plusw1,w,c
 13141  015A4C  A4D8               	btfss	status,2,c
 13142  015A4E                     u11471:
 13143  015A4E  D6EB               	goto	l11968
 13144                           
 13145                           ;stkvar	_p @ sp[(-20)+18]
 13146  015A50  0EFF               	movlw	-1
 13147  015A52  BEE3               	btfsc	plusw1,7,c
 13148  015A54  D007               	goto	u11480
 13149  015A56  0EFF               	movlw	-1
 13150  015A58  50E3               	movf	plusw1,w,c
 13151  015A5A  E103               	bnz	u11481
 13152  015A5C  0EFE               	movlw	-2
 13153  015A5E  04E3               	decf	plusw1,w,c
 13154  015A60  B0D8               	btfsc	status,0,c
 13155  015A62                     u11481:
 13156  015A62  D6E1               	goto	l11968
 13157  015A64                     u11480:
 13158                           
 13159                           ;stkvar	_w @ sp[(-20)+16]
 13160  015A64  0EFD               	movlw	-3
 13161  015A66  BEE3               	btfsc	plusw1,7,c
 13162  015A68  D009               	goto	u11500
 13163  015A6A  0EFD               	movlw	-3
 13164  015A6C  50E3               	movf	plusw1,w,c
 13165  015A6E  E104               	bnz	u11490
 13166  015A70  0EFC               	movlw	-4
 13167  015A72  04E3               	decf	plusw1,w,c
 13168  015A74  A0D8               	btfss	status,0,c
 13169  015A76  D002               	goto	u11500
 13170  015A78                     u11490:
 13171  015A78  B225               	btfsc	_flags^0,1,c
 13172  015A7A  D6D5               	goto	l11968
 13173  015A7C                     u11500:
 13174                           
 13175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 13176  015A7C  A825               	btfss	_flags^0,4,c
 13177  015A7E  D036               	goto	l12016
 13178                           
 13179                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 13180                           ;stkvar	_i @ sp[(-20)+14]
 13181  015A80  50E1               	movf	fsr1l,w,c
 13182  015A82  0FFA               	addlw	-6
 13183  015A84  6ED9               	movwf	fsr2l,c
 13184  015A86  50E2               	movf	fsr1h,w,c
 13185  015A88  6EDA               	movwf	fsr2h,c
 13186  015A8A  0EFF               	movlw	255
 13187  015A8C  22DA               	addwfc	fsr2h,f,c
 13188  015A8E  06DE               	decf	postinc2,f,c
 13189  015A90  0E00               	movlw	0
 13190  015A92  5ADD               	subwfb	postdec2,f,c
 13191                           
 13192                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 13193                           ;stkvar	_x @ sp[(-20)+-11]
 13194                           ;stkvar	_i @ sp[(-20)+14]
 13195  015A94  0EFA               	movlw	-6
 13196  015A96  006F FF8C  F00B    	movff	plusw1,btemp+10
 13197  015A9C  0EFB               	movlw	-5
 13198  015A9E  006F FF8C  F00C    	movff	plusw1,btemp+11
 13199  015AA4  0E94               	movlw	low _dbuf
 13200  015AA6  240B               	addwf	(btemp+10)^0,w,c
 13201  015AA8  6ED9               	movwf	fsr2l,c
 13202  015AAA  0E03               	movlw	high _dbuf
 13203  015AAC  200C               	addwfc	(btemp+11)^0,w,c
 13204  015AAE  6EDA               	movwf	fsr2h,c
 13205  015AB0  0EE1               	movlw	-31
 13206  015AB2  006F FF8F FFDF     	movff	plusw1,indf2
 13207                           
 13208                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 13209                           ;stkvar	_i @ sp[(-20)+14]
 13210  015AB8  50E1               	movf	fsr1l,w,c
 13211  015ABA  0FFA               	addlw	-6
 13212  015ABC  6ED9               	movwf	fsr2l,c
 13213  015ABE  50E2               	movf	fsr1h,w,c
 13214  015AC0  6EDA               	movwf	fsr2h,c
 13215  015AC2  0EFF               	movlw	255
 13216  015AC4  22DA               	addwfc	fsr2h,f,c
 13217  015AC6  06DE               	decf	postinc2,f,c
 13218  015AC8  0E00               	movlw	0
 13219  015ACA  5ADD               	subwfb	postdec2,f,c
 13220                           
 13221                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 13222                           ;stkvar	_i @ sp[(-20)+14]
 13223  015ACC  0EFA               	movlw	-6
 13224  015ACE  006F FF8C  F00B    	movff	plusw1,btemp+10
 13225  015AD4  0EFB               	movlw	-5
 13226  015AD6  006F FF8C  F00C    	movff	plusw1,btemp+11
 13227  015ADC  0E94               	movlw	low _dbuf
 13228  015ADE  240B               	addwf	(btemp+10)^0,w,c
 13229  015AE0  6ED9               	movwf	fsr2l,c
 13230  015AE2  0E03               	movlw	high _dbuf
 13231  015AE4  200C               	addwfc	(btemp+11)^0,w,c
 13232  015AE6  6EDA               	movwf	fsr2h,c
 13233  015AE8  0E30               	movlw	48
 13234  015AEA  6EDF               	movwf	indf2,c
 13235  015AEC                     l12016:
 13236                           
 13237                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 13238                           ;stkvar	_w @ sp[(-20)+16]
 13239  015AEC  0EFC               	movlw	-4
 13240  015AEE  006F FF8F FFE6     	movff	plusw1,postinc1
 13241  015AF4  006F FF8F FFE6     	movff	plusw1,postinc1
 13242                           
 13243                           ;stkvar	_i @ sp[(-22)+14]
 13244  015AFA  0E94               	movlw	low _dbuf
 13245  015AFC  6E0B               	movwf	(btemp+10)^0,c
 13246  015AFE  0E03               	movlw	high _dbuf
 13247  015B00  6E0C               	movwf	(btemp+11)^0,c
 13248  015B02  0EF8               	movlw	-8
 13249  015B04  50E3               	movf	plusw1,w,c
 13250  015B06  260B               	addwf	(btemp+10)^0,f,c
 13251  015B08  0EF9               	movlw	-7
 13252  015B0A  50E3               	movf	plusw1,w,c
 13253  015B0C  220C               	addwfc	(btemp+11)^0,f,c
 13254  015B0E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13255  015B14  0060  F033  FFE6   	movff	btemp+11,postinc1
 13256                           
 13257                           ;stkvar	_fp @ sp[(-24)+-2]
 13258  015B1A  0EE6               	movlw	-26
 13259  015B1C  006F FF8F FFE6     	movff	plusw1,postinc1
 13260  015B22  006F FF8F FFE6     	movff	plusw1,postinc1
 13261  015B28  EC7F  F0C8         	call	_pad	;wreg free
 13262                           
 13263                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 13264  015B2C  0EE1               	movlw	225
 13265  015B2E  26E1               	addwf	fsr1l,f,c
 13266  015B30  0EFF               	movlw	255
 13267  015B32  22E2               	addwfc	fsr1h,f,c
 13268  015B34  0012               	return		;funcret
 13269  015B36                     __end_of_xtoa:
 13270                           	opt callstack 0
 13271                           
 13272 ;; *************** function _toupper *****************
 13273 ;; Defined at:
 13274 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 13275 ;; Parameters:    Size  Location     Type
 13276 ;;  c               2  [STACK] int 
 13277 ;; Auto vars:     Size  Location     Type
 13278 ;;		None
 13279 ;; Return value:  Size  Location     Type
 13280 ;;                  2  [STACK] int 
 13281 ;; Registers used:
 13282 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13283 ;; Tracked objects:
 13284 ;;		On entry : 0/3
 13285 ;;		On exit  : 0/0
 13286 ;;		Unchanged: 0/0
 13287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13292 ;;Total ram usage:        0 bytes
 13293 ;; Hardware stack levels used:    1
 13294 ;; Hardware stack levels required when called:   16
 13295 ;; This function calls:
 13296 ;;		_islower
 13297 ;; This function is called by:
 13298 ;;		_xtoa
 13299 ;; This function uses a reentrant model
 13300 ;;
 13301                           
 13302                           	psect	text47
 13303  01A2C4                     __ptext47:
 13304                           	opt callstack 0
 13305  01A2C4                     _toupper:
 13306                           	opt callstack 0
 13307                           
 13308                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13309  01A2C4  52E6               	movf	postinc1,f,c
 13310  01A2C6  52E6               	movf	postinc1,f,c
 13311                           
 13312                           ;stkvar	_c @ sp[(-2)+-2]
 13313                           
 13314                           ;incstack = 0
 13315 ;; hardware stack exceeded
 13316  01A2C8  0EFC               	movlw	-4
 13317  01A2CA  50E3               	movf	plusw1,w,c
 13318  01A2CC  0F9F               	addlw	159
 13319  01A2CE  6E0B               	movwf	(btemp+10)^0,c
 13320  01A2D0  0EFD               	movlw	-3
 13321  01A2D2  006F FF8C  F00C    	movff	plusw1,btemp+11
 13322  01A2D8  0EFF               	movlw	255
 13323  01A2DA  220C               	addwfc	(btemp+11)^0,f,c
 13324  01A2DC  500C               	movf	(btemp+11)^0,w,c
 13325  01A2DE  E106               	bnz	u5980
 13326  01A2E0  0E1A               	movlw	26
 13327  01A2E2  5C0B               	subwf	(btemp+10)^0,w,c
 13328  01A2E4  B0D8               	btfsc	status,0,c
 13329  01A2E6  D002               	goto	u5980
 13330  01A2E8  0E01               	movlw	1
 13331  01A2EA  D001               	goto	u5990
 13332  01A2EC                     u5980:
 13333  01A2EC  0E00               	movlw	0
 13334  01A2EE                     u5990:
 13335  01A2EE  6E0B               	movwf	(btemp+10)^0,c
 13336  01A2F0  6A0C               	clrf	(btemp+11)^0,c
 13337                           
 13338                           ;stkvar	_toupper$6177 @ sp[(-2)+0]
 13339  01A2F2  0EFE               	movlw	-2
 13340  01A2F4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13341  01A2FA  0EFF               	movlw	-1
 13342  01A2FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 13343                           
 13344                           ;stkvar	_toupper$6177 @ sp[(-2)+0]
 13345  01A302  0EFE               	movlw	-2
 13346  01A304  006F FF8C  F001    	movff	plusw1,btemp
 13347  01A30A  0EFF               	movlw	-1
 13348  01A30C  50E3               	movf	plusw1,w,c
 13349  01A30E  1001               	iorwf	btemp^0,w,c
 13350  01A310  B4D8               	btfsc	status,2,c
 13351  01A312  D00D               	goto	l7832
 13352                           
 13353                           ;stkvar	_c @ sp[(-2)+-2]
 13354  01A314  0EFC               	movlw	-4
 13355  01A316  006F FF8C  F001    	movff	plusw1,btemp
 13356  01A31C  0EFD               	movlw	-3
 13357  01A31E  006F FF8C  F002    	movff	plusw1,btemp+1
 13358  01A324  0E5F               	movlw	95
 13359  01A326  1601               	andwf	btemp^0,f,c
 13360  01A328  0E00               	movlw	0
 13361  01A32A  1602               	andwf	(btemp+1)^0,f,c
 13362  01A32C  D008               	goto	l3439
 13363  01A32E                     l7832:
 13364                           
 13365                           ;stkvar	_c @ sp[(-2)+-2]
 13366  01A32E  0EFC               	movlw	-4
 13367  01A330  006F FF8C  F001    	movff	plusw1,btemp
 13368  01A336  0EFD               	movlw	-3
 13369  01A338  006F FF8C  F002    	movff	plusw1,btemp+1
 13370  01A33E                     l3439:
 13371                           
 13372                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13373  01A33E  52E5               	movf	postdec1,f,c
 13374  01A340  52E5               	movf	postdec1,f,c
 13375  01A342  52E5               	movf	postdec1,f,c
 13376  01A344  52E5               	movf	postdec1,f,c
 13377  01A346  0012               	return		;funcret
 13378  01A348                     __end_of_toupper:
 13379                           	opt callstack 0
 13380                           
 13381 ;; *************** function _islower *****************
 13382 ;; Defined at:
 13383 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 13384 ;; Parameters:    Size  Location     Type
 13385 ;;  c               2  [STACK] int 
 13386 ;; Auto vars:     Size  Location     Type
 13387 ;;		None
 13388 ;; Return value:  Size  Location     Type
 13389 ;;                  2  [STACK] int 
 13390 ;; Registers used:
 13391 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13392 ;; Tracked objects:
 13393 ;;		On entry : 0/0
 13394 ;;		On exit  : 0/0
 13395 ;;		Unchanged: 0/0
 13396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13401 ;;Total ram usage:        0 bytes
 13402 ;; Hardware stack levels used:    1
 13403 ;; Hardware stack levels required when called:   15
 13404 ;; This function calls:
 13405 ;;		Nothing
 13406 ;; This function is called by:
 13407 ;;		_toupper
 13408 ;; This function uses a reentrant model
 13409 ;;
 13410                           
 13411                           	psect	text48
 13412  01AF5E                     __ptext48:
 13413                           	opt callstack 0
 13414  01AF5E                     _islower:
 13415                           	opt callstack 0
 13416                           
 13417                           ;stkvar	_c @ sp[(0)+-2]
 13418                           
 13419                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13420                           ;incstack = 0
 13421 ;; hardware stack exceeded
 13422  01AF5E  0EFE               	movlw	-2
 13423  01AF60  50E3               	movf	plusw1,w,c
 13424  01AF62  0F9F               	addlw	159
 13425  01AF64  6E0B               	movwf	(btemp+10)^0,c
 13426  01AF66  0EFF               	movlw	-1
 13427  01AF68  006F FF8C  F00C    	movff	plusw1,btemp+11
 13428  01AF6E  0EFF               	movlw	255
 13429  01AF70  220C               	addwfc	(btemp+11)^0,f,c
 13430  01AF72  500C               	movf	(btemp+11)^0,w,c
 13431  01AF74  E106               	bnz	u5670
 13432  01AF76  0E1A               	movlw	26
 13433  01AF78  5C0B               	subwf	(btemp+10)^0,w,c
 13434  01AF7A  B0D8               	btfsc	status,0,c
 13435  01AF7C  D002               	goto	u5670
 13436  01AF7E  0E01               	movlw	1
 13437  01AF80  D001               	goto	u5680
 13438  01AF82                     u5670:
 13439  01AF82  0E00               	movlw	0
 13440  01AF84                     u5680:
 13441  01AF84  6E01               	movwf	btemp^0,c
 13442  01AF86  6A02               	clrf	(btemp+1)^0,c
 13443                           
 13444                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13445  01AF88  52E5               	movf	postdec1,f,c
 13446  01AF8A  52E5               	movf	postdec1,f,c
 13447  01AF8C  0012               	return		;funcret
 13448  01AF8E                     __end_of_islower:
 13449                           	opt callstack 0
 13450                           
 13451 ;; *************** function _isalpha *****************
 13452 ;; Defined at:
 13453 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 13454 ;; Parameters:    Size  Location     Type
 13455 ;;  c               2  [STACK] int 
 13456 ;; Auto vars:     Size  Location     Type
 13457 ;;		None
 13458 ;; Return value:  Size  Location     Type
 13459 ;;                  2  [STACK] int 
 13460 ;; Registers used:
 13461 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 13462 ;; Tracked objects:
 13463 ;;		On entry : 0/0
 13464 ;;		On exit  : 0/0
 13465 ;;		Unchanged: 0/0
 13466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13471 ;;Total ram usage:        0 bytes
 13472 ;; Hardware stack levels used:    1
 13473 ;; Hardware stack levels required when called:   15
 13474 ;; This function calls:
 13475 ;;		Nothing
 13476 ;; This function is called by:
 13477 ;;		_xtoa
 13478 ;; This function uses a reentrant model
 13479 ;;
 13480                           
 13481                           	psect	text49
 13482  01ABBA                     __ptext49:
 13483                           	opt callstack 0
 13484  01ABBA                     _isalpha:
 13485                           	opt callstack 0
 13486                           
 13487                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13488                           ;incstack = 0
 13489 ;; hardware stack exceeded
 13490  01ABBA  0E9F               	movlw	159
 13491  01ABBC  6E0B               	movwf	(btemp+10)^0,c
 13492  01ABBE  0EFF               	movlw	255
 13493  01ABC0  6E0C               	movwf	(btemp+11)^0,c
 13494                           
 13495                           ;stkvar	_c @ sp[(0)+-2]
 13496  01ABC2  0EFE               	movlw	-2
 13497  01ABC4  006F FF8C  F009    	movff	plusw1,btemp+8
 13498  01ABCA  0EFF               	movlw	-1
 13499  01ABCC  006F FF8C  F00A    	movff	plusw1,btemp+9
 13500  01ABD2  0E20               	movlw	32
 13501  01ABD4  1209               	iorwf	(btemp+8)^0,f,c
 13502  01ABD6  0E00               	movlw	0
 13503  01ABD8  120A               	iorwf	(btemp+9)^0,f,c
 13504  01ABDA  500B               	movf	(btemp+10)^0,w,c
 13505  01ABDC  2609               	addwf	(btemp+8)^0,f,c
 13506  01ABDE  500C               	movf	(btemp+11)^0,w,c
 13507  01ABE0  220A               	addwfc	(btemp+9)^0,f,c
 13508  01ABE2  500A               	movf	(btemp+9)^0,w,c
 13509  01ABE4  E106               	bnz	u5960
 13510  01ABE6  0E1A               	movlw	26
 13511  01ABE8  5C09               	subwf	(btemp+8)^0,w,c
 13512  01ABEA  B0D8               	btfsc	status,0,c
 13513  01ABEC  D002               	goto	u5960
 13514  01ABEE  0E01               	movlw	1
 13515  01ABF0  D001               	goto	u5970
 13516  01ABF2                     u5960:
 13517  01ABF2  0E00               	movlw	0
 13518  01ABF4                     u5970:
 13519  01ABF4  6E01               	movwf	btemp^0,c
 13520  01ABF6  6A02               	clrf	(btemp+1)^0,c
 13521                           
 13522                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13523  01ABF8  52E5               	movf	postdec1,f,c
 13524  01ABFA  52E5               	movf	postdec1,f,c
 13525  01ABFC  0012               	return		;funcret
 13526  01ABFE                     __end_of_isalpha:
 13527                           	opt callstack 0
 13528                           
 13529 ;; *************** function _utoa *****************
 13530 ;; Defined at:
 13531 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13532 ;; Parameters:    Size  Location     Type
 13533 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13534 ;;		 -> f(6), NULL(0), 
 13535 ;;  d               8  [STACK] unsigned long long 
 13536 ;; Auto vars:     Size  Location     Type
 13537 ;;  n               8  [STACK] unsigned long long 
 13538 ;;  i               2  [STACK] int 
 13539 ;;  w               2  [STACK] int 
 13540 ;;  p               2  [STACK] int 
 13541 ;; Return value:  Size  Location     Type
 13542 ;;                  2  [STACK] int 
 13543 ;; Registers used:
 13544 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 13545 ;; Tracked objects:
 13546 ;;		On entry : 0/0
 13547 ;;		On exit  : 0/0
 13548 ;;		Unchanged: 0/0
 13549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13554 ;;Total ram usage:        0 bytes
 13555 ;; Hardware stack levels used:    1
 13556 ;; Hardware stack levels required when called:   20
 13557 ;; This function calls:
 13558 ;;		___lodiv
 13559 ;;		___lomod
 13560 ;;		_pad
 13561 ;; This function is called by:
 13562 ;;		_vfpfcnvrt
 13563 ;; This function uses a reentrant model
 13564 ;;
 13565                           
 13566                           	psect	text50
 13567  016588                     __ptext50:
 13568                           	opt callstack 0
 13569  016588                     _utoa:
 13570                           	opt callstack 0
 13571                           
 13572                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 13573  016588  0E0E               	movlw	14
 13574  01658A  26E1               	addwf	fsr1l,f,c
 13575  01658C  0E00               	movlw	0
 13576  01658E  22E2               	addwfc	fsr1h,f,c
 13577                           
 13578                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 13579                           
 13580                           ;incstack = 0
 13581 ;; hardware stack exceeded
 13582  016590  AE24               	btfss	(_prec+1)^0,7,c
 13583                           
 13584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 13585  016592  9225               	bcf	_flags^0,1,c
 13586                           
 13587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 13588  016594  BE24               	btfsc	(_prec+1)^0,7,c
 13589  016596  D005               	goto	u11270
 13590  016598  5024               	movf	(_prec+1)^0,w,c
 13591  01659A  E110               	bnz	l11916
 13592  01659C  0423               	decf	_prec^0,w,c
 13593  01659E  B0D8               	btfsc	status,0,c
 13594  0165A0  D00D               	goto	l11916
 13595  0165A2                     u11270:
 13596  0165A2  0E01               	movlw	1
 13597  0165A4  6E0B               	movwf	(btemp+10)^0,c
 13598  0165A6  0E00               	movlw	0
 13599  0165A8  6E0C               	movwf	(btemp+11)^0,c
 13600                           
 13601                           ;stkvar	_p @ sp[(-14)+12]
 13602  0165AA  0EFE               	movlw	-2
 13603  0165AC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13604  0165B2  0EFF               	movlw	-1
 13605  0165B4  0060  F033  FFE3   	movff	btemp+11,plusw1
 13606  0165BA  D008               	goto	l2257
 13607  0165BC                     l11916:
 13608                           
 13609                           ;stkvar	_p @ sp[(-14)+12]
 13610  0165BC  0EFE               	movlw	-2
 13611  0165BE  0060  F08F  FFE3   	movff	_prec,plusw1
 13612  0165C4  0EFF               	movlw	-1
 13613  0165C6  0060  F093  FFE3   	movff	_prec+1,plusw1
 13614  0165CC                     l2257:
 13615                           
 13616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 13617                           ;stkvar	_w @ sp[(-14)+10]
 13618  0165CC  0EFC               	movlw	-4
 13619  0165CE  0060  F087  FFE3   	movff	_width,plusw1
 13620  0165D4  0EFD               	movlw	-3
 13621  0165D6  0060  F08B  FFE3   	movff	_width+1,plusw1
 13622                           
 13623                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 13624                           ;stkvar	_d @ sp[(-14)+-10]
 13625  0165DC  0EE8               	movlw	232
 13626  0165DE  24E1               	addwf	fsr1l,w,c
 13627  0165E0  6ED9               	movwf	fsr2l,c
 13628  0165E2  0EFF               	movlw	255
 13629  0165E4  20E2               	addwfc	fsr1h,w,c
 13630  0165E6  6EDA               	movwf	fsr2h,c
 13631                           
 13632                           ;stkvar	_n @ sp[(-14)+0]
 13633  0165E8  0E08               	movlw	8
 13634  0165EA  6E01               	movwf	btemp^0,c
 13635  0165EC  0EF2               	movlw	-14
 13636  0165EE                     us1128999:
 13637  0165EE  006F FF7B FFE3     	movff	postinc2,plusw1
 13638  0165F4  28E8               	incf	wreg,w,c
 13639  0165F6  2E01               	decfsz	btemp^0,f,c
 13640  0165F8  D7FA               	bra	us1128999
 13641                           
 13642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 13643  0165FA  0E4F               	movlw	79
 13644  0165FC  6E0B               	movwf	(btemp+10)^0,c
 13645  0165FE  0E00               	movlw	0
 13646  016600  6E0C               	movwf	(btemp+11)^0,c
 13647                           
 13648                           ;stkvar	_i @ sp[(-14)+8]
 13649  016602  0EFA               	movlw	-6
 13650  016604  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13651  01660A  0EFB               	movlw	-5
 13652  01660C  0060  F033  FFE3   	movff	btemp+11,plusw1
 13653                           
 13654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 13655  016612  0103               	movlb	3	; () banked
 13656  016614  6BE3               	clrf	(_dbuf+79)& (0+255),b
 13657                           
 13658                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 13659  016616  D0FB               	goto	l11934
 13660  016618                     l11924:
 13661                           
 13662                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 13663                           ;stkvar	_i @ sp[(-14)+8]
 13664  016618  50E1               	movf	fsr1l,w,c
 13665  01661A  0FFA               	addlw	-6
 13666  01661C  6ED9               	movwf	fsr2l,c
 13667  01661E  50E2               	movf	fsr1h,w,c
 13668  016620  6EDA               	movwf	fsr2h,c
 13669  016622  0EFF               	movlw	255
 13670  016624  22DA               	addwfc	fsr2h,f,c
 13671  016626  06DE               	decf	postinc2,f,c
 13672  016628  0E00               	movlw	0
 13673  01662A  5ADD               	subwfb	postdec2,f,c
 13674                           
 13675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 13676  01662C  0E0A               	movlw	10
 13677  01662E  6EE6               	movwf	postinc1,c
 13678  016630  0E00               	movlw	0
 13679  016632  6EE6               	movwf	postinc1,c
 13680  016634  0E00               	movlw	0
 13681  016636  6EE6               	movwf	postinc1,c
 13682  016638  0E00               	movlw	0
 13683  01663A  6EE6               	movwf	postinc1,c
 13684  01663C  0E00               	movlw	0
 13685  01663E  6EE6               	movwf	postinc1,c
 13686  016640  0E00               	movlw	0
 13687  016642  6EE6               	movwf	postinc1,c
 13688  016644  0E00               	movlw	0
 13689  016646  6EE6               	movwf	postinc1,c
 13690  016648  0E00               	movlw	0
 13691  01664A  6EE6               	movwf	postinc1,c
 13692                           
 13693                           ;stkvar	_n @ sp[(-22)+0]
 13694  01664C  50E1               	movf	fsr1l,w,c
 13695  01664E  0FEA               	addlw	-22
 13696  016650  6ED9               	movwf	fsr2l,c
 13697  016652  50E2               	movf	fsr1h,w,c
 13698  016654  6EDA               	movwf	fsr2h,c
 13699  016656  0EFF               	movlw	255
 13700  016658  22DA               	addwfc	fsr2h,f,c
 13701  01665A  006F FF7B FFE6     	movff	postinc2,postinc1
 13702  016660  006F FF7B FFE6     	movff	postinc2,postinc1
 13703  016666  006F FF7B FFE6     	movff	postinc2,postinc1
 13704  01666C  006F FF7B FFE6     	movff	postinc2,postinc1
 13705  016672  006F FF7B FFE6     	movff	postinc2,postinc1
 13706  016678  006F FF7B FFE6     	movff	postinc2,postinc1
 13707  01667E  006F FF7B FFE6     	movff	postinc2,postinc1
 13708  016684  006F FF7B FFE6     	movff	postinc2,postinc1
 13709  01668A  EC8C  F0C5         	call	___lomod	;wreg free
 13710  01668E  52E5               	movf	postdec1,f,c
 13711  016690  006F FF9C  F018    	movff	indf1,btemp+23
 13712  016696  52E5               	movf	postdec1,f,c
 13713  016698  006F FF9C  F017    	movff	indf1,btemp+22
 13714  01669E  52E5               	movf	postdec1,f,c
 13715  0166A0  006F FF9C  F016    	movff	indf1,btemp+21
 13716  0166A6  52E5               	movf	postdec1,f,c
 13717  0166A8  006F FF9C  F015    	movff	indf1,btemp+20
 13718  0166AE  52E5               	movf	postdec1,f,c
 13719  0166B0  006F FF9C  F014    	movff	indf1,btemp+19
 13720  0166B6  52E5               	movf	postdec1,f,c
 13721  0166B8  006F FF9C  F013    	movff	indf1,btemp+18
 13722  0166BE  52E5               	movf	postdec1,f,c
 13723  0166C0  006F FF9C  F012    	movff	indf1,btemp+17
 13724  0166C6  52E5               	movf	postdec1,f,c
 13725  0166C8  006F FF9C  F011    	movff	indf1,btemp+16
 13726  0166CE  0EF8               	movlw	248
 13727  0166D0  26E1               	addwf	fsr1l,f,c
 13728  0166D2  0EFF               	movlw	255
 13729  0166D4  22E2               	addwfc	fsr1h,f,c
 13730  0166D6  0E30               	movlw	48
 13731  0166D8  2611               	addwf	(btemp+16)^0,f,c
 13732                           
 13733                           ;stkvar	_i @ sp[(-14)+8]
 13734  0166DA  0EFA               	movlw	-6
 13735  0166DC  006F FF8C  F00B    	movff	plusw1,btemp+10
 13736  0166E2  0EFB               	movlw	-5
 13737  0166E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 13738  0166EA  0E94               	movlw	low _dbuf
 13739  0166EC  240B               	addwf	(btemp+10)^0,w,c
 13740  0166EE  6ED9               	movwf	fsr2l,c
 13741  0166F0  0E03               	movlw	high _dbuf
 13742  0166F2  200C               	addwfc	(btemp+11)^0,w,c
 13743  0166F4  6EDA               	movwf	fsr2h,c
 13744  0166F6  0060  F047  FFDF   	movff	btemp+16,indf2
 13745                           
 13746                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 13747                           ;stkvar	_p @ sp[(-14)+12]
 13748  0166FC  50E1               	movf	fsr1l,w,c
 13749  0166FE  0FFE               	addlw	-2
 13750  016700  6ED9               	movwf	fsr2l,c
 13751  016702  50E2               	movf	fsr1h,w,c
 13752  016704  6EDA               	movwf	fsr2h,c
 13753  016706  0EFF               	movlw	255
 13754  016708  22DA               	addwfc	fsr2h,f,c
 13755  01670A  06DE               	decf	postinc2,f,c
 13756  01670C  0E00               	movlw	0
 13757  01670E  5ADD               	subwfb	postdec2,f,c
 13758                           
 13759                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 13760                           ;stkvar	_w @ sp[(-14)+10]
 13761  016710  50E1               	movf	fsr1l,w,c
 13762  016712  0FFC               	addlw	-4
 13763  016714  6ED9               	movwf	fsr2l,c
 13764  016716  50E2               	movf	fsr1h,w,c
 13765  016718  6EDA               	movwf	fsr2h,c
 13766  01671A  0EFF               	movlw	255
 13767  01671C  22DA               	addwfc	fsr2h,f,c
 13768  01671E  06DE               	decf	postinc2,f,c
 13769  016720  0E00               	movlw	0
 13770  016722  5ADD               	subwfb	postdec2,f,c
 13771                           
 13772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 13773  016724  0E0A               	movlw	10
 13774  016726  6EE6               	movwf	postinc1,c
 13775  016728  0E00               	movlw	0
 13776  01672A  6EE6               	movwf	postinc1,c
 13777  01672C  0E00               	movlw	0
 13778  01672E  6EE6               	movwf	postinc1,c
 13779  016730  0E00               	movlw	0
 13780  016732  6EE6               	movwf	postinc1,c
 13781  016734  0E00               	movlw	0
 13782  016736  6EE6               	movwf	postinc1,c
 13783  016738  0E00               	movlw	0
 13784  01673A  6EE6               	movwf	postinc1,c
 13785  01673C  0E00               	movlw	0
 13786  01673E  6EE6               	movwf	postinc1,c
 13787  016740  0E00               	movlw	0
 13788  016742  6EE6               	movwf	postinc1,c
 13789                           
 13790                           ;stkvar	_n @ sp[(-22)+0]
 13791  016744  50E1               	movf	fsr1l,w,c
 13792  016746  0FEA               	addlw	-22
 13793  016748  6ED9               	movwf	fsr2l,c
 13794  01674A  50E2               	movf	fsr1h,w,c
 13795  01674C  6EDA               	movwf	fsr2h,c
 13796  01674E  0EFF               	movlw	255
 13797  016750  22DA               	addwfc	fsr2h,f,c
 13798  016752  006F FF7B FFE6     	movff	postinc2,postinc1
 13799  016758  006F FF7B FFE6     	movff	postinc2,postinc1
 13800  01675E  006F FF7B FFE6     	movff	postinc2,postinc1
 13801  016764  006F FF7B FFE6     	movff	postinc2,postinc1
 13802  01676A  006F FF7B FFE6     	movff	postinc2,postinc1
 13803  016770  006F FF7B FFE6     	movff	postinc2,postinc1
 13804  016776  006F FF7B FFE6     	movff	postinc2,postinc1
 13805  01677C  006F FF7B FFE6     	movff	postinc2,postinc1
 13806  016782  EC97  F0C0         	call	___lodiv	;wreg free
 13807  016786  52E5               	movf	postdec1,f,c
 13808  016788  006F FF9C  F018    	movff	indf1,btemp+23
 13809  01678E  52E5               	movf	postdec1,f,c
 13810  016790  006F FF9C  F017    	movff	indf1,btemp+22
 13811  016796  52E5               	movf	postdec1,f,c
 13812  016798  006F FF9C  F016    	movff	indf1,btemp+21
 13813  01679E  52E5               	movf	postdec1,f,c
 13814  0167A0  006F FF9C  F015    	movff	indf1,btemp+20
 13815  0167A6  52E5               	movf	postdec1,f,c
 13816  0167A8  006F FF9C  F014    	movff	indf1,btemp+19
 13817  0167AE  52E5               	movf	postdec1,f,c
 13818  0167B0  006F FF9C  F013    	movff	indf1,btemp+18
 13819  0167B6  52E5               	movf	postdec1,f,c
 13820  0167B8  006F FF9C  F012    	movff	indf1,btemp+17
 13821  0167BE  52E5               	movf	postdec1,f,c
 13822  0167C0  006F FF9C  F011    	movff	indf1,btemp+16
 13823  0167C6  0EF8               	movlw	248
 13824  0167C8  26E1               	addwf	fsr1l,f,c
 13825  0167CA  0EFF               	movlw	255
 13826  0167CC  22E2               	addwfc	fsr1h,f,c
 13827                           
 13828                           ;stkvar	_n @ sp[(-14)+0]
 13829  0167CE  0EF2               	movlw	-14
 13830  0167D0  0060  F047  FFE3   	movff	btemp+16,plusw1
 13831  0167D6  0EF3               	movlw	-13
 13832  0167D8  0060  F04B  FFE3   	movff	btemp+17,plusw1
 13833  0167DE  0EF4               	movlw	-12
 13834  0167E0  0060  F04F  FFE3   	movff	btemp+18,plusw1
 13835  0167E6  0EF5               	movlw	-11
 13836  0167E8  0060  F053  FFE3   	movff	btemp+19,plusw1
 13837  0167EE  0EF6               	movlw	-10
 13838  0167F0  0060  F057  FFE3   	movff	btemp+20,plusw1
 13839  0167F6  0EF7               	movlw	-9
 13840  0167F8  0060  F05B  FFE3   	movff	btemp+21,plusw1
 13841  0167FE  0EF8               	movlw	-8
 13842  016800  0060  F05F  FFE3   	movff	btemp+22,plusw1
 13843  016806  0EF9               	movlw	-7
 13844  016808  0060  F063  FFE3   	movff	btemp+23,plusw1
 13845  01680E                     l11934:
 13846                           
 13847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 13848                           ;stkvar	_i @ sp[(-14)+8]
 13849  01680E  0EFA               	movlw	-6
 13850  016810  006F FF8C  F001    	movff	plusw1,btemp
 13851  016816  0EFB               	movlw	-5
 13852  016818  50E3               	movf	plusw1,w,c
 13853  01681A  1001               	iorwf	btemp^0,w,c
 13854  01681C  B4D8               	btfsc	status,2,c
 13855  01681E  D02F               	goto	u11330
 13856                           
 13857                           ;stkvar	_n @ sp[(-14)+0]
 13858  016820  0EF2               	movlw	-14
 13859  016822  50E3               	movf	plusw1,w,c
 13860  016824  E115               	bnz	u11301
 13861  016826  0EF3               	movlw	-13
 13862  016828  50E3               	movf	plusw1,w,c
 13863  01682A  E112               	bnz	u11301
 13864  01682C  0EF4               	movlw	-12
 13865  01682E  50E3               	movf	plusw1,w,c
 13866  016830  E10F               	bnz	u11301
 13867  016832  0EF5               	movlw	-11
 13868  016834  50E3               	movf	plusw1,w,c
 13869  016836  E10C               	bnz	u11301
 13870  016838  0EF6               	movlw	-10
 13871  01683A  50E3               	movf	plusw1,w,c
 13872  01683C  E109               	bnz	u11301
 13873  01683E  0EF7               	movlw	-9
 13874  016840  50E3               	movf	plusw1,w,c
 13875  016842  E106               	bnz	u11301
 13876  016844  0EF8               	movlw	-8
 13877  016846  50E3               	movf	plusw1,w,c
 13878  016848  E103               	bnz	u11301
 13879  01684A  0EF9               	movlw	-7
 13880  01684C  50E3               	movf	plusw1,w,c
 13881  01684E  A4D8               	btfss	status,2,c
 13882  016850                     u11301:
 13883  016850  D6E3               	goto	l11924
 13884                           
 13885                           ;stkvar	_p @ sp[(-14)+12]
 13886  016852  0EFF               	movlw	-1
 13887  016854  BEE3               	btfsc	plusw1,7,c
 13888  016856  D007               	goto	u11310
 13889  016858  0EFF               	movlw	-1
 13890  01685A  50E3               	movf	plusw1,w,c
 13891  01685C  E103               	bnz	u11311
 13892  01685E  0EFE               	movlw	-2
 13893  016860  04E3               	decf	plusw1,w,c
 13894  016862  B0D8               	btfsc	status,0,c
 13895  016864                     u11311:
 13896  016864  D6D9               	goto	l11924
 13897  016866                     u11310:
 13898                           
 13899                           ;stkvar	_w @ sp[(-14)+10]
 13900  016866  0EFD               	movlw	-3
 13901  016868  BEE3               	btfsc	plusw1,7,c
 13902  01686A  D009               	goto	u11330
 13903  01686C  0EFD               	movlw	-3
 13904  01686E  50E3               	movf	plusw1,w,c
 13905  016870  E104               	bnz	u11320
 13906  016872  0EFC               	movlw	-4
 13907  016874  04E3               	decf	plusw1,w,c
 13908  016876  A0D8               	btfss	status,0,c
 13909  016878  D002               	goto	u11330
 13910  01687A                     u11320:
 13911  01687A  B225               	btfsc	_flags^0,1,c
 13912  01687C  D6CD               	goto	l11924
 13913  01687E                     u11330:
 13914                           
 13915                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 13916                           ;stkvar	_w @ sp[(-14)+10]
 13917  01687E  0EFC               	movlw	-4
 13918  016880  006F FF8F FFE6     	movff	plusw1,postinc1
 13919  016886  006F FF8F FFE6     	movff	plusw1,postinc1
 13920                           
 13921                           ;stkvar	_i @ sp[(-16)+8]
 13922  01688C  0E94               	movlw	low _dbuf
 13923  01688E  6E0B               	movwf	(btemp+10)^0,c
 13924  016890  0E03               	movlw	high _dbuf
 13925  016892  6E0C               	movwf	(btemp+11)^0,c
 13926  016894  0EF8               	movlw	-8
 13927  016896  50E3               	movf	plusw1,w,c
 13928  016898  260B               	addwf	(btemp+10)^0,f,c
 13929  01689A  0EF9               	movlw	-7
 13930  01689C  50E3               	movf	plusw1,w,c
 13931  01689E  220C               	addwfc	(btemp+11)^0,f,c
 13932  0168A0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13933  0168A6  0060  F033  FFE6   	movff	btemp+11,postinc1
 13934                           
 13935                           ;stkvar	_fp @ sp[(-18)+-2]
 13936  0168AC  0EEC               	movlw	-20
 13937  0168AE  006F FF8F FFE6     	movff	plusw1,postinc1
 13938  0168B4  006F FF8F FFE6     	movff	plusw1,postinc1
 13939  0168BA  EC7F  F0C8         	call	_pad	;wreg free
 13940                           
 13941                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 13942  0168BE  0EE8               	movlw	232
 13943  0168C0  26E1               	addwf	fsr1l,f,c
 13944  0168C2  0EFF               	movlw	255
 13945  0168C4  22E2               	addwfc	fsr1h,f,c
 13946  0168C6  0012               	return		;funcret
 13947  0168C8                     __end_of_utoa:
 13948                           	opt callstack 0
 13949                           
 13950 ;; *************** function ___lomod *****************
 13951 ;; Defined at:
 13952 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 13953 ;; Parameters:    Size  Location     Type
 13954 ;;  dividend        8  [STACK] unsigned long long 
 13955 ;;  divisor         8  [STACK] unsigned long long 
 13956 ;; Auto vars:     Size  Location     Type
 13957 ;;  counter         1  [STACK] unsigned char 
 13958 ;; Return value:  Size  Location     Type
 13959 ;;                  8  [STACK] unsigned long long 
 13960 ;; Registers used:
 13961 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 13962 ;; Tracked objects:
 13963 ;;		On entry : 0/3
 13964 ;;		On exit  : 0/0
 13965 ;;		Unchanged: 0/0
 13966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13971 ;;Total ram usage:        0 bytes
 13972 ;; Hardware stack levels used:    1
 13973 ;; Hardware stack levels required when called:   15
 13974 ;; This function calls:
 13975 ;;		Nothing
 13976 ;; This function is called by:
 13977 ;;		_utoa
 13978 ;; This function uses a reentrant model
 13979 ;;
 13980                           
 13981                           	psect	text51
 13982  018B18                     __ptext51:
 13983                           	opt callstack 0
 13984  018B18                     ___lomod:
 13985                           	opt callstack 0
 13986                           
 13987                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 13988  018B18  52E6               	movf	postinc1,f,c
 13989                           
 13990                           ;stkvar	_divisor @ sp[(-1)+-16]
 13991                           
 13992                           ;incstack = 0
 13993 ;; hardware stack exceeded
 13994  018B1A  0EEF               	movlw	-17
 13995  018B1C  50E3               	movf	plusw1,w,c
 13996  018B1E  E116               	bnz	u7110
 13997  018B20  0EF0               	movlw	-16
 13998  018B22  50E3               	movf	plusw1,w,c
 13999  018B24  E113               	bnz	u7110
 14000  018B26  0EF1               	movlw	-15
 14001  018B28  50E3               	movf	plusw1,w,c
 14002  018B2A  E110               	bnz	u7110
 14003  018B2C  0EF2               	movlw	-14
 14004  018B2E  50E3               	movf	plusw1,w,c
 14005  018B30  E10D               	bnz	u7110
 14006  018B32  0EF3               	movlw	-13
 14007  018B34  50E3               	movf	plusw1,w,c
 14008  018B36  E10A               	bnz	u7110
 14009  018B38  0EF4               	movlw	-12
 14010  018B3A  50E3               	movf	plusw1,w,c
 14011  018B3C  E107               	bnz	u7110
 14012  018B3E  0EF5               	movlw	-11
 14013  018B40  50E3               	movf	plusw1,w,c
 14014  018B42  E104               	bnz	u7110
 14015  018B44  0EF6               	movlw	-10
 14016  018B46  50E3               	movf	plusw1,w,c
 14017  018B48  B4D8               	btfsc	status,2,c
 14018  018B4A  D075               	goto	u7140
 14019  018B4C                     u7110:
 14020                           
 14021                           ;stkvar	_counter @ sp[(-1)+0]
 14022  018B4C  0EFF               	movlw	-1
 14023  018B4E  6AE3               	clrf	plusw1,c
 14024  018B50  D012               	goto	L12
 14025  018B52                     l8442:
 14026                           
 14027                           ;stkvar	_divisor @ sp[(-1)+-16]
 14028  018B52  90D8               	bcf	status,0,c
 14029  018B54  0EEF               	movlw	-17
 14030  018B56  36E3               	rlcf	plusw1,f,c
 14031  018B58  0EF0               	movlw	-16
 14032  018B5A  36E3               	rlcf	plusw1,f,c
 14033  018B5C  0EF1               	movlw	-15
 14034  018B5E  36E3               	rlcf	plusw1,f,c
 14035  018B60  0EF2               	movlw	-14
 14036  018B62  36E3               	rlcf	plusw1,f,c
 14037  018B64  0EF3               	movlw	-13
 14038  018B66  36E3               	rlcf	plusw1,f,c
 14039  018B68  0EF4               	movlw	-12
 14040  018B6A  36E3               	rlcf	plusw1,f,c
 14041  018B6C  0EF5               	movlw	-11
 14042  018B6E  36E3               	rlcf	plusw1,f,c
 14043  018B70  0EF6               	movlw	-10
 14044  018B72  36E3               	rlcf	plusw1,f,c
 14045                           
 14046                           ;stkvar	_counter @ sp[(-1)+0]
 14047  018B74  0EFF               	movlw	-1
 14048  018B76                     L12:
 14049  018B76  2AE3               	incf	plusw1,f,c
 14050                           
 14051                           ;stkvar	_divisor @ sp[(-1)+-16]
 14052  018B78  0EF6               	movlw	-10
 14053  018B7A  AEE3               	btfss	plusw1,7,c
 14054  018B7C  D7EA               	goto	l8442
 14055  018B7E                     u7120:
 14056                           
 14057                           ;stkvar	_divisor @ sp[(-1)+-16]
 14058                           ;stkvar	_dividend @ sp[(-1)+-8]
 14059  018B7E  50E1               	movf	fsr1l,w,c
 14060  018B80  0FF7               	addlw	-9
 14061  018B82  6ED9               	movwf	fsr2l,c
 14062  018B84  50E2               	movf	fsr1h,w,c
 14063  018B86  6EDA               	movwf	fsr2h,c
 14064  018B88  0EFF               	movlw	255
 14065  018B8A  22DA               	addwfc	fsr2h,f,c
 14066  018B8C  0EEF               	movlw	-17
 14067  018B8E  50E3               	movf	plusw1,w,c
 14068  018B90  5CDE               	subwf	postinc2,w,c
 14069  018B92  0EF0               	movlw	-16
 14070  018B94  50E3               	movf	plusw1,w,c
 14071  018B96  58DE               	subwfb	postinc2,w,c
 14072  018B98  0EF1               	movlw	-15
 14073  018B9A  50E3               	movf	plusw1,w,c
 14074  018B9C  58DE               	subwfb	postinc2,w,c
 14075  018B9E  0EF2               	movlw	-14
 14076  018BA0  50E3               	movf	plusw1,w,c
 14077  018BA2  58DE               	subwfb	postinc2,w,c
 14078  018BA4  0EF3               	movlw	-13
 14079  018BA6  50E3               	movf	plusw1,w,c
 14080  018BA8  58DE               	subwfb	postinc2,w,c
 14081  018BAA  0EF4               	movlw	-12
 14082  018BAC  50E3               	movf	plusw1,w,c
 14083  018BAE  58DE               	subwfb	postinc2,w,c
 14084  018BB0  0EF5               	movlw	-11
 14085  018BB2  50E3               	movf	plusw1,w,c
 14086  018BB4  58DE               	subwfb	postinc2,w,c
 14087  018BB6  0EF6               	movlw	-10
 14088  018BB8  50E3               	movf	plusw1,w,c
 14089  018BBA  58DE               	subwfb	postinc2,w,c
 14090  018BBC  A0D8               	btfss	status,0,c
 14091  018BBE  D01F               	goto	l8450
 14092                           
 14093                           ;stkvar	_divisor @ sp[(-1)+-16]
 14094                           ;stkvar	_dividend @ sp[(-1)+-8]
 14095  018BC0  50E1               	movf	fsr1l,w,c
 14096  018BC2  0FF7               	addlw	-9
 14097  018BC4  6ED9               	movwf	fsr2l,c
 14098  018BC6  50E2               	movf	fsr1h,w,c
 14099  018BC8  6EDA               	movwf	fsr2h,c
 14100  018BCA  0EFF               	movlw	255
 14101  018BCC  22DA               	addwfc	fsr2h,f,c
 14102  018BCE  0EEF               	movlw	-17
 14103  018BD0  50E3               	movf	plusw1,w,c
 14104  018BD2  5EDE               	subwf	postinc2,f,c
 14105  018BD4  0EF0               	movlw	-16
 14106  018BD6  50E3               	movf	plusw1,w,c
 14107  018BD8  5ADE               	subwfb	postinc2,f,c
 14108  018BDA  0EF1               	movlw	-15
 14109  018BDC  50E3               	movf	plusw1,w,c
 14110  018BDE  5ADE               	subwfb	postinc2,f,c
 14111  018BE0  0EF2               	movlw	-14
 14112  018BE2  50E3               	movf	plusw1,w,c
 14113  018BE4  5ADE               	subwfb	postinc2,f,c
 14114  018BE6  0EF3               	movlw	-13
 14115  018BE8  50E3               	movf	plusw1,w,c
 14116  018BEA  5ADE               	subwfb	postinc2,f,c
 14117  018BEC  0EF4               	movlw	-12
 14118  018BEE  50E3               	movf	plusw1,w,c
 14119  018BF0  5ADE               	subwfb	postinc2,f,c
 14120  018BF2  0EF5               	movlw	-11
 14121  018BF4  50E3               	movf	plusw1,w,c
 14122  018BF6  5ADE               	subwfb	postinc2,f,c
 14123  018BF8  0EF6               	movlw	-10
 14124  018BFA  50E3               	movf	plusw1,w,c
 14125  018BFC  5ADE               	subwfb	postinc2,f,c
 14126  018BFE                     l8450:
 14127                           
 14128                           ;stkvar	_divisor @ sp[(-1)+-16]
 14129  018BFE  90D8               	bcf	status,0,c
 14130  018C00  0EF6               	movlw	-10
 14131  018C02  32E3               	rrcf	plusw1,f,c
 14132  018C04  0EF5               	movlw	-11
 14133  018C06  32E3               	rrcf	plusw1,f,c
 14134  018C08  0EF4               	movlw	-12
 14135  018C0A  32E3               	rrcf	plusw1,f,c
 14136  018C0C  0EF3               	movlw	-13
 14137  018C0E  32E3               	rrcf	plusw1,f,c
 14138  018C10  0EF2               	movlw	-14
 14139  018C12  32E3               	rrcf	plusw1,f,c
 14140  018C14  0EF1               	movlw	-15
 14141  018C16  32E3               	rrcf	plusw1,f,c
 14142  018C18  0EF0               	movlw	-16
 14143  018C1A  32E3               	rrcf	plusw1,f,c
 14144  018C1C  0EEF               	movlw	-17
 14145  018C1E  32E3               	rrcf	plusw1,f,c
 14146                           
 14147                           ;stkvar	_counter @ sp[(-1)+0]
 14148  018C20  0EFF               	movlw	-1
 14149  018C22  50E3               	movf	plusw1,w,c
 14150  018C24  6E01               	movwf	btemp^0,c
 14151  018C26  0E01               	movlw	1
 14152  018C28  5E01               	subwf	btemp^0,f,c
 14153  018C2A  0EFF               	movlw	-1
 14154  018C2C  0060  F007  FFE3   	movff	btemp,plusw1
 14155  018C32  A4D8               	btfss	status,2,c
 14156  018C34  D7A4               	goto	u7120
 14157  018C36                     u7140:
 14158                           
 14159                           ;stkvar	_dividend @ sp[(-1)+-8]
 14160  018C36  0EF7               	movlw	247
 14161  018C38  24E1               	addwf	fsr1l,w,c
 14162  018C3A  6ED9               	movwf	fsr2l,c
 14163  018C3C  0EFF               	movlw	255
 14164  018C3E  20E2               	addwfc	fsr1h,w,c
 14165  018C40  6EDA               	movwf	fsr2h,c
 14166                           
 14167                           ;stkvar	?___lomod @ sp[(-1)+-8]
 14168  018C42  0E08               	movlw	8
 14169  018C44  6E01               	movwf	btemp^0,c
 14170  018C46  0EF7               	movlw	-9
 14171  018C48                     us715999:
 14172  018C48  006F FF7B FFE3     	movff	postinc2,plusw1
 14173  018C4E  28E8               	incf	wreg,w,c
 14174  018C50  2E01               	decfsz	btemp^0,f,c
 14175  018C52  D7FA               	bra	us715999
 14176                           
 14177                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 14178  018C54  52E5               	movf	postdec1,f,c
 14179  018C56  0012               	return		;funcret
 14180  018C58                     __end_of___lomod:
 14181                           	opt callstack 0
 14182                           
 14183 ;; *************** function ___lodiv *****************
 14184 ;; Defined at:
 14185 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 14186 ;; Parameters:    Size  Location     Type
 14187 ;;  dividend        8  [STACK] unsigned long long 
 14188 ;;  divisor         8  [STACK] unsigned long long 
 14189 ;; Auto vars:     Size  Location     Type
 14190 ;;  quotient        8  [STACK] unsigned long long 
 14191 ;;  counter         1  [STACK] unsigned char 
 14192 ;; Return value:  Size  Location     Type
 14193 ;;                  8  [STACK] unsigned long long 
 14194 ;; Registers used:
 14195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 14196 ;; Tracked objects:
 14197 ;;		On entry : 0/3
 14198 ;;		On exit  : 0/0
 14199 ;;		Unchanged: 0/0
 14200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14205 ;;Total ram usage:        0 bytes
 14206 ;; Hardware stack levels used:    1
 14207 ;; Hardware stack levels required when called:   15
 14208 ;; This function calls:
 14209 ;;		Nothing
 14210 ;; This function is called by:
 14211 ;;		_utoa
 14212 ;; This function uses a reentrant model
 14213 ;;
 14214                           
 14215                           	psect	text52
 14216  01812E                     __ptext52:
 14217                           	opt callstack 0
 14218  01812E                     ___lodiv:
 14219                           	opt callstack 0
 14220                           
 14221                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 14222  01812E  0E09               	movlw	9
 14223  018130  26E1               	addwf	fsr1l,f,c
 14224  018132  0E00               	movlw	0
 14225  018134  22E2               	addwfc	fsr1h,f,c
 14226                           
 14227                           ;stkvar	_quotient @ sp[(-9)+0]
 14228                           
 14229                           ;incstack = 0
 14230 ;; hardware stack exceeded
 14231  018136  0E07               	movlw	7
 14232  018138  6E01               	movwf	btemp^0,c
 14233  01813A  0EF7               	movlw	-9
 14234  01813C                     u7051:
 14235  01813C  6AE3               	clrf	plusw1,c
 14236  01813E  2AE8               	incf	wreg,f,c
 14237  018140  0601               	decf	btemp^0,f,c
 14238  018142  E2FC               	bc	u7051
 14239                           
 14240                           ;stkvar	_divisor @ sp[(-9)+-16]
 14241  018144  0EE7               	movlw	-25
 14242  018146  50E3               	movf	plusw1,w,c
 14243  018148  E116               	bnz	u7060
 14244  01814A  0EE8               	movlw	-24
 14245  01814C  50E3               	movf	plusw1,w,c
 14246  01814E  E113               	bnz	u7060
 14247  018150  0EE9               	movlw	-23
 14248  018152  50E3               	movf	plusw1,w,c
 14249  018154  E110               	bnz	u7060
 14250  018156  0EEA               	movlw	-22
 14251  018158  50E3               	movf	plusw1,w,c
 14252  01815A  E10D               	bnz	u7060
 14253  01815C  0EEB               	movlw	-21
 14254  01815E  50E3               	movf	plusw1,w,c
 14255  018160  E10A               	bnz	u7060
 14256  018162  0EEC               	movlw	-20
 14257  018164  50E3               	movf	plusw1,w,c
 14258  018166  E107               	bnz	u7060
 14259  018168  0EED               	movlw	-19
 14260  01816A  50E3               	movf	plusw1,w,c
 14261  01816C  E104               	bnz	u7060
 14262  01816E  0EEE               	movlw	-18
 14263  018170  50E3               	movf	plusw1,w,c
 14264  018172  B4D8               	btfsc	status,2,c
 14265  018174  D088               	goto	u7090
 14266  018176                     u7060:
 14267                           
 14268                           ;stkvar	_counter @ sp[(-9)+8]
 14269  018176  0EFF               	movlw	-1
 14270  018178  6AE3               	clrf	plusw1,c
 14271  01817A  D012               	goto	L13
 14272  01817C                     l8418:
 14273                           
 14274                           ;stkvar	_divisor @ sp[(-9)+-16]
 14275  01817C  90D8               	bcf	status,0,c
 14276  01817E  0EE7               	movlw	-25
 14277  018180  36E3               	rlcf	plusw1,f,c
 14278  018182  0EE8               	movlw	-24
 14279  018184  36E3               	rlcf	plusw1,f,c
 14280  018186  0EE9               	movlw	-23
 14281  018188  36E3               	rlcf	plusw1,f,c
 14282  01818A  0EEA               	movlw	-22
 14283  01818C  36E3               	rlcf	plusw1,f,c
 14284  01818E  0EEB               	movlw	-21
 14285  018190  36E3               	rlcf	plusw1,f,c
 14286  018192  0EEC               	movlw	-20
 14287  018194  36E3               	rlcf	plusw1,f,c
 14288  018196  0EED               	movlw	-19
 14289  018198  36E3               	rlcf	plusw1,f,c
 14290  01819A  0EEE               	movlw	-18
 14291  01819C  36E3               	rlcf	plusw1,f,c
 14292                           
 14293                           ;stkvar	_counter @ sp[(-9)+8]
 14294  01819E  0EFF               	movlw	-1
 14295  0181A0                     L13:
 14296  0181A0  2AE3               	incf	plusw1,f,c
 14297                           
 14298                           ;stkvar	_divisor @ sp[(-9)+-16]
 14299  0181A2  0EEE               	movlw	-18
 14300  0181A4  AEE3               	btfss	plusw1,7,c
 14301  0181A6  D7EA               	goto	l8418
 14302  0181A8                     u7070:
 14303                           
 14304                           ;stkvar	_quotient @ sp[(-9)+0]
 14305  0181A8  90D8               	bcf	status,0,c
 14306  0181AA  0EF7               	movlw	-9
 14307  0181AC  36E3               	rlcf	plusw1,f,c
 14308  0181AE  0EF8               	movlw	-8
 14309  0181B0  36E3               	rlcf	plusw1,f,c
 14310  0181B2  0EF9               	movlw	-7
 14311  0181B4  36E3               	rlcf	plusw1,f,c
 14312  0181B6  0EFA               	movlw	-6
 14313  0181B8  36E3               	rlcf	plusw1,f,c
 14314  0181BA  0EFB               	movlw	-5
 14315  0181BC  36E3               	rlcf	plusw1,f,c
 14316  0181BE  0EFC               	movlw	-4
 14317  0181C0  36E3               	rlcf	plusw1,f,c
 14318  0181C2  0EFD               	movlw	-3
 14319  0181C4  36E3               	rlcf	plusw1,f,c
 14320  0181C6  0EFE               	movlw	-2
 14321  0181C8  36E3               	rlcf	plusw1,f,c
 14322                           
 14323                           ;stkvar	_divisor @ sp[(-9)+-16]
 14324                           ;stkvar	_dividend @ sp[(-9)+-8]
 14325  0181CA  50E1               	movf	fsr1l,w,c
 14326  0181CC  0FEF               	addlw	-17
 14327  0181CE  6ED9               	movwf	fsr2l,c
 14328  0181D0  50E2               	movf	fsr1h,w,c
 14329  0181D2  6EDA               	movwf	fsr2h,c
 14330  0181D4  0EFF               	movlw	255
 14331  0181D6  22DA               	addwfc	fsr2h,f,c
 14332  0181D8  0EE7               	movlw	-25
 14333  0181DA  50E3               	movf	plusw1,w,c
 14334  0181DC  5CDE               	subwf	postinc2,w,c
 14335  0181DE  0EE8               	movlw	-24
 14336  0181E0  50E3               	movf	plusw1,w,c
 14337  0181E2  58DE               	subwfb	postinc2,w,c
 14338  0181E4  0EE9               	movlw	-23
 14339  0181E6  50E3               	movf	plusw1,w,c
 14340  0181E8  58DE               	subwfb	postinc2,w,c
 14341  0181EA  0EEA               	movlw	-22
 14342  0181EC  50E3               	movf	plusw1,w,c
 14343  0181EE  58DE               	subwfb	postinc2,w,c
 14344  0181F0  0EEB               	movlw	-21
 14345  0181F2  50E3               	movf	plusw1,w,c
 14346  0181F4  58DE               	subwfb	postinc2,w,c
 14347  0181F6  0EEC               	movlw	-20
 14348  0181F8  50E3               	movf	plusw1,w,c
 14349  0181FA  58DE               	subwfb	postinc2,w,c
 14350  0181FC  0EED               	movlw	-19
 14351  0181FE  50E3               	movf	plusw1,w,c
 14352  018200  58DE               	subwfb	postinc2,w,c
 14353  018202  0EEE               	movlw	-18
 14354  018204  50E3               	movf	plusw1,w,c
 14355  018206  58DE               	subwfb	postinc2,w,c
 14356  018208  A0D8               	btfss	status,0,c
 14357  01820A  D021               	goto	l8430
 14358                           
 14359                           ;stkvar	_divisor @ sp[(-9)+-16]
 14360                           ;stkvar	_dividend @ sp[(-9)+-8]
 14361  01820C  50E1               	movf	fsr1l,w,c
 14362  01820E  0FEF               	addlw	-17
 14363  018210  6ED9               	movwf	fsr2l,c
 14364  018212  50E2               	movf	fsr1h,w,c
 14365  018214  6EDA               	movwf	fsr2h,c
 14366  018216  0EFF               	movlw	255
 14367  018218  22DA               	addwfc	fsr2h,f,c
 14368  01821A  0EE7               	movlw	-25
 14369  01821C  50E3               	movf	plusw1,w,c
 14370  01821E  5EDE               	subwf	postinc2,f,c
 14371  018220  0EE8               	movlw	-24
 14372  018222  50E3               	movf	plusw1,w,c
 14373  018224  5ADE               	subwfb	postinc2,f,c
 14374  018226  0EE9               	movlw	-23
 14375  018228  50E3               	movf	plusw1,w,c
 14376  01822A  5ADE               	subwfb	postinc2,f,c
 14377  01822C  0EEA               	movlw	-22
 14378  01822E  50E3               	movf	plusw1,w,c
 14379  018230  5ADE               	subwfb	postinc2,f,c
 14380  018232  0EEB               	movlw	-21
 14381  018234  50E3               	movf	plusw1,w,c
 14382  018236  5ADE               	subwfb	postinc2,f,c
 14383  018238  0EEC               	movlw	-20
 14384  01823A  50E3               	movf	plusw1,w,c
 14385  01823C  5ADE               	subwfb	postinc2,f,c
 14386  01823E  0EED               	movlw	-19
 14387  018240  50E3               	movf	plusw1,w,c
 14388  018242  5ADE               	subwfb	postinc2,f,c
 14389  018244  0EEE               	movlw	-18
 14390  018246  50E3               	movf	plusw1,w,c
 14391  018248  5ADE               	subwfb	postinc2,f,c
 14392                           
 14393                           ;stkvar	_quotient @ sp[(-9)+0]
 14394  01824A  0EF7               	movlw	-9
 14395  01824C  80E3               	bsf	plusw1,0,c
 14396  01824E                     l8430:
 14397                           
 14398                           ;stkvar	_divisor @ sp[(-9)+-16]
 14399  01824E  90D8               	bcf	status,0,c
 14400  018250  0EEE               	movlw	-18
 14401  018252  32E3               	rrcf	plusw1,f,c
 14402  018254  0EED               	movlw	-19
 14403  018256  32E3               	rrcf	plusw1,f,c
 14404  018258  0EEC               	movlw	-20
 14405  01825A  32E3               	rrcf	plusw1,f,c
 14406  01825C  0EEB               	movlw	-21
 14407  01825E  32E3               	rrcf	plusw1,f,c
 14408  018260  0EEA               	movlw	-22
 14409  018262  32E3               	rrcf	plusw1,f,c
 14410  018264  0EE9               	movlw	-23
 14411  018266  32E3               	rrcf	plusw1,f,c
 14412  018268  0EE8               	movlw	-24
 14413  01826A  32E3               	rrcf	plusw1,f,c
 14414  01826C  0EE7               	movlw	-25
 14415  01826E  32E3               	rrcf	plusw1,f,c
 14416                           
 14417                           ;stkvar	_counter @ sp[(-9)+8]
 14418  018270  0EFF               	movlw	-1
 14419  018272  50E3               	movf	plusw1,w,c
 14420  018274  6E01               	movwf	btemp^0,c
 14421  018276  0E01               	movlw	1
 14422  018278  5E01               	subwf	btemp^0,f,c
 14423  01827A  0EFF               	movlw	-1
 14424  01827C  0060  F007  FFE3   	movff	btemp,plusw1
 14425  018282  A4D8               	btfss	status,2,c
 14426  018284  D791               	goto	u7070
 14427  018286                     u7090:
 14428                           
 14429                           ;stkvar	_quotient @ sp[(-9)+0]
 14430  018286  0EF7               	movlw	247
 14431  018288  24E1               	addwf	fsr1l,w,c
 14432  01828A  6ED9               	movwf	fsr2l,c
 14433  01828C  0EFF               	movlw	255
 14434  01828E  20E2               	addwfc	fsr1h,w,c
 14435  018290  6EDA               	movwf	fsr2h,c
 14436                           
 14437                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 14438  018292  0E08               	movlw	8
 14439  018294  6E01               	movwf	btemp^0,c
 14440  018296  0EEF               	movlw	-17
 14441  018298                     us710999:
 14442  018298  006F FF7B FFE3     	movff	postinc2,plusw1
 14443  01829E  28E8               	incf	wreg,w,c
 14444  0182A0  2E01               	decfsz	btemp^0,f,c
 14445  0182A2  D7FA               	bra	us710999
 14446                           
 14447                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 14448  0182A4  0EF7               	movlw	247
 14449  0182A6  26E1               	addwf	fsr1l,f,c
 14450  0182A8  0EFF               	movlw	255
 14451  0182AA  22E2               	addwfc	fsr1h,f,c
 14452  0182AC  0012               	return		;funcret
 14453  0182AE                     __end_of___lodiv:
 14454                           	opt callstack 0
 14455                           
 14456 ;; *************** function _strncmp *****************
 14457 ;; Defined at:
 14458 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 14459 ;; Parameters:    Size  Location     Type
 14460 ;;  _l              2  [STACK] PTR const unsigned char 
 14461 ;;		 -> ct(3), STR_65(85), STR_63(3), STR_62(3), 
 14462 ;;		 -> STR_61(19), STR_60(19), STR_59(19), STR_58(19), 
 14463 ;;		 -> STR_57(19), STR_56(19), STR_55(24), STR_54(15), 
 14464 ;;		 -> STR_53(15), STR_52(15), STR_51(10), STR_50(10), 
 14465 ;;		 -> STR_49(19), STR_48(19), STR_45(3), STR_44(3), 
 14466 ;;		 -> STR_43(3), STR_42(17), STR_41(16), STR_40(16), 
 14467 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
 14468 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
 14469 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
 14470 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
 14471 ;;		 -> STR_23(19), STR_22(19), STR_21(17), STR_20(16), 
 14472 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 14473 ;;		 -> STR_15(22), STR_14(17), STR_13(17), STR_12(17), 
 14474 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
 14475 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 14476 ;;		 -> STR_2(15), STR_1(17), 
 14477 ;;  _r              2  [STACK] PTR const unsigned char 
 14478 ;;		 -> STR_99(3), STR_95(3), STR_90(3), STR_85(3), 
 14479 ;;		 -> STR_80(3), STR_76(3), 
 14480 ;;  n               2  [STACK] unsigned int 
 14481 ;; Auto vars:     Size  Location     Type
 14482 ;;  r               2  [STACK] PTR const unsigned char 
 14483 ;;		 -> STR_99(3), STR_95(3), STR_90(3), STR_85(3), 
 14484 ;;		 -> STR_80(3), STR_76(3), 
 14485 ;;  l               2  [STACK] PTR const unsigned char 
 14486 ;;		 -> ct(3), STR_65(85), STR_63(3), STR_62(3), 
 14487 ;;		 -> STR_61(19), STR_60(19), STR_59(19), STR_58(19), 
 14488 ;;		 -> STR_57(19), STR_56(19), STR_55(24), STR_54(15), 
 14489 ;;		 -> STR_53(15), STR_52(15), STR_51(10), STR_50(10), 
 14490 ;;		 -> STR_49(19), STR_48(19), STR_45(3), STR_44(3), 
 14491 ;;		 -> STR_43(3), STR_42(17), STR_41(16), STR_40(16), 
 14492 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
 14493 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
 14494 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
 14495 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
 14496 ;;		 -> STR_23(19), STR_22(19), STR_21(17), STR_20(16), 
 14497 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 14498 ;;		 -> STR_15(22), STR_14(17), STR_13(17), STR_12(17), 
 14499 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
 14500 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 14501 ;;		 -> STR_2(15), STR_1(17), 
 14502 ;; Return value:  Size  Location     Type
 14503 ;;                  2  [STACK] int 
 14504 ;; Registers used:
 14505 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 14506 ;; Tracked objects:
 14507 ;;		On entry : 0/0
 14508 ;;		On exit  : 0/0
 14509 ;;		Unchanged: 0/0
 14510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14515 ;;Total ram usage:        0 bytes
 14516 ;; Hardware stack levels used:    1
 14517 ;; Hardware stack levels required when called:   15
 14518 ;; This function calls:
 14519 ;;		Nothing
 14520 ;; This function is called by:
 14521 ;;		_vfpfcnvrt
 14522 ;; This function uses a reentrant model
 14523 ;;
 14524                           
 14525                           	psect	text53
 14526  0175A6                     __ptext53:
 14527                           	opt callstack 0
 14528  0175A6                     _strncmp:
 14529                           	opt callstack 0
 14530                           
 14531                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14532  0175A6  52E6               	movf	postinc1,f,c
 14533  0175A8  52E6               	movf	postinc1,f,c
 14534  0175AA  52E6               	movf	postinc1,f,c
 14535  0175AC  52E6               	movf	postinc1,f,c
 14536                           
 14537                           ;stkvar	__l @ sp[(-4)+-2]
 14538                           
 14539                           ;incstack = 0
 14540 ;; hardware stack exceeded
 14541  0175AE  0EFA               	movlw	-6
 14542  0175B0  006F FF8C  F00B    	movff	plusw1,btemp+10
 14543  0175B6  0EFB               	movlw	-5
 14544  0175B8  006F FF8C  F00C    	movff	plusw1,btemp+11
 14545                           
 14546                           ;stkvar	_l @ sp[(-4)+2]
 14547  0175BE  0EFF               	movlw	-1
 14548  0175C0  0060  F033  FFE3   	movff	btemp+11,plusw1
 14549  0175C6  0EFE               	movlw	-2
 14550  0175C8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14551                           
 14552                           ;stkvar	__r @ sp[(-4)+-4]
 14553  0175CE  0EF8               	movlw	-8
 14554  0175D0  006F FF8C  F00B    	movff	plusw1,btemp+10
 14555  0175D6  0EF9               	movlw	-7
 14556  0175D8  006F FF8C  F00C    	movff	plusw1,btemp+11
 14557                           
 14558                           ;stkvar	_r @ sp[(-4)+0]
 14559  0175DE  0EFD               	movlw	-3
 14560  0175E0  0060  F033  FFE3   	movff	btemp+11,plusw1
 14561  0175E6  0EFC               	movlw	-4
 14562  0175E8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14563                           
 14564                           ;stkvar	_n @ sp[(-4)+-6]
 14565  0175EE  0EF6               	movlw	-10
 14566  0175F0  006F FF8C  F001    	movff	plusw1,btemp
 14567  0175F6  0E01               	movlw	1
 14568  0175F8  5E01               	subwf	btemp^0,f,c
 14569  0175FA  0EF6               	movlw	-10
 14570  0175FC  0060  F007  FFE3   	movff	btemp,plusw1
 14571  017602  0EF7               	movlw	-9
 14572  017604  006F FF8C  F001    	movff	plusw1,btemp
 14573  01760A  0E00               	movlw	0
 14574  01760C  5A01               	subwfb	btemp^0,f,c
 14575  01760E  0EF7               	movlw	-9
 14576  017610  0060  F007  FFE3   	movff	btemp,plusw1
 14577  017616  0EF6               	movlw	-10
 14578  017618  28E3               	incf	plusw1,w,c
 14579  01761A  E13F               	bnz	l9126
 14580  01761C  0EF7               	movlw	-9
 14581  01761E  28E3               	incf	plusw1,w,c
 14582  017620  A4D8               	btfss	status,2,c
 14583  017622  D03B               	goto	l9126
 14584  017624  0E00               	movlw	0
 14585  017626  6E01               	movwf	btemp^0,c
 14586  017628  0E00               	movlw	0
 14587  01762A  6E02               	movwf	(btemp+1)^0,c
 14588  01762C  D0C7               	goto	l3411
 14589  01762E                     l9124:
 14590                           
 14591                           ;stkvar	_l @ sp[(-4)+2]
 14592  01762E  0EFE               	movlw	-2
 14593  017630  50E3               	movf	plusw1,w,c
 14594  017632  0F01               	addlw	1
 14595  017634  6E01               	movwf	btemp^0,c
 14596  017636  0EFE               	movlw	-2
 14597  017638  0060  F007  FFE3   	movff	btemp,plusw1
 14598  01763E  6A01               	clrf	btemp^0,c
 14599  017640  0EFF               	movlw	-1
 14600  017642  50E3               	movf	plusw1,w,c
 14601  017644  2001               	addwfc	btemp^0,w,c
 14602  017646  6E01               	movwf	btemp^0,c
 14603  017648  0EFF               	movlw	-1
 14604  01764A  0060  F007  FFE3   	movff	btemp,plusw1
 14605                           
 14606                           ;stkvar	_r @ sp[(-4)+0]
 14607  017650  0EFC               	movlw	-4
 14608  017652  50E3               	movf	plusw1,w,c
 14609  017654  0F01               	addlw	1
 14610  017656  6E01               	movwf	btemp^0,c
 14611  017658  0EFC               	movlw	-4
 14612  01765A  0060  F007  FFE3   	movff	btemp,plusw1
 14613  017660  6A01               	clrf	btemp^0,c
 14614  017662  0EFD               	movlw	-3
 14615  017664  50E3               	movf	plusw1,w,c
 14616  017666  2001               	addwfc	btemp^0,w,c
 14617  017668  6E01               	movwf	btemp^0,c
 14618  01766A  0EFD               	movlw	-3
 14619  01766C  0060  F007  FFE3   	movff	btemp,plusw1
 14620                           
 14621                           ;stkvar	_n @ sp[(-4)+-6]
 14622  017672  0EF6               	movlw	-10
 14623  017674  006F FF8C  F001    	movff	plusw1,btemp
 14624  01767A  0E01               	movlw	1
 14625  01767C  5E01               	subwf	btemp^0,f,c
 14626  01767E  0EF6               	movlw	-10
 14627  017680  0060  F007  FFE3   	movff	btemp,plusw1
 14628  017686  0EF7               	movlw	-9
 14629  017688  006F FF8C  F001    	movff	plusw1,btemp
 14630  01768E  0E00               	movlw	0
 14631  017690  5A01               	subwfb	btemp^0,f,c
 14632  017692  0EF7               	movlw	-9
 14633  017694  0060  F007  FFE3   	movff	btemp,plusw1
 14634  01769A                     l9126:
 14635                           
 14636                           ;stkvar	_l @ sp[(-4)+2]
 14637  01769A  0EFE               	movlw	-2
 14638  01769C  006F FF8F FFF6     	movff	plusw1,tblptrl
 14639  0176A2  0EFF               	movlw	-1
 14640  0176A4  006F FF8F FFF7     	movff	plusw1,tblptrh
 14641  0176AA  0E00               	movlw	low (__mediumconst shr (0+16))
 14642  0176AC  6EF8               	movwf	tblptru,c
 14643  0176AE  0E1F               	movlw	(high __ramtop+-1)
 14644  0176B0  64F7               	cpfsgt	tblptrh,c
 14645  0176B2  D003               	bra	u8387
 14646  0176B4  0008               	tblrd		*
 14647  0176B6  50F5               	movf	tablat,w,c
 14648  0176B8  D007               	bra	u8380
 14649  0176BA                     u8387:
 14650  0176BA  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14651  0176C0  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14652  0176C6  50EF               	movf	indf0,w,c
 14653  0176C8                     u8380:
 14654  0176C8  0900               	iorlw	0
 14655  0176CA  B4D8               	btfsc	status,2,c
 14656  0176CC  D04A               	goto	u8420
 14657                           
 14658                           ;stkvar	_r @ sp[(-4)+0]
 14659  0176CE  50E1               	movf	fsr1l,w,c
 14660  0176D0  0FFC               	addlw	-4
 14661  0176D2  6ED9               	movwf	fsr2l,c
 14662  0176D4  50E2               	movf	fsr1h,w,c
 14663  0176D6  6EDA               	movwf	fsr2h,c
 14664  0176D8  0EFF               	movlw	255
 14665  0176DA  22DA               	addwfc	fsr2h,f,c
 14666  0176DC  006F FF7B FFF6     	movff	postinc2,tblptrl
 14667  0176E2  006F FF77 FFF7     	movff	postdec2,tblptrh
 14668  0176E8                     	if	0	;tblptru may be non-zero
 14669  0176E8                     	endif
 14670  0176E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14671  0176E8  0E00               	movlw	low (__mediumconst shr (0+16))
 14672  0176EA  6EF8               	movwf	tblptru,c
 14673  0176EC                     	endif
 14674  0176EC  0008               	tblrd		*
 14675  0176EE  50F5               	movf	tablat,w,c
 14676  0176F0  0900               	iorlw	0
 14677  0176F2  B4D8               	btfsc	status,2,c
 14678  0176F4  D036               	goto	u8420
 14679                           
 14680                           ;stkvar	_n @ sp[(-4)+-6]
 14681  0176F6  0EF6               	movlw	-10
 14682  0176F8  006F FF8C  F001    	movff	plusw1,btemp
 14683  0176FE  0EF7               	movlw	-9
 14684  017700  50E3               	movf	plusw1,w,c
 14685  017702  1001               	iorwf	btemp^0,w,c
 14686  017704  B4D8               	btfsc	status,2,c
 14687  017706  D02D               	goto	u8420
 14688                           
 14689                           ;stkvar	_r @ sp[(-4)+0]
 14690  017708  50E1               	movf	fsr1l,w,c
 14691  01770A  0FFC               	addlw	-4
 14692  01770C  6ED9               	movwf	fsr2l,c
 14693  01770E  50E2               	movf	fsr1h,w,c
 14694  017710  6EDA               	movwf	fsr2h,c
 14695  017712  0EFF               	movlw	255
 14696  017714  22DA               	addwfc	fsr2h,f,c
 14697  017716  006F FF7B FFF6     	movff	postinc2,tblptrl
 14698  01771C  006F FF77 FFF7     	movff	postdec2,tblptrh
 14699  017722                     	if	0	;tblptru may be non-zero
 14700  017722                     	endif
 14701  017722                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14702  017722  0E00               	movlw	low (__mediumconst shr (0+16))
 14703  017724  6EF8               	movwf	tblptru,c
 14704  017726                     	endif
 14705  017726  0008               	tblrd		*
 14706  017728  006F FFD4  F00C    	movff	tablat,btemp+11
 14707                           
 14708                           ;stkvar	_l @ sp[(-4)+2]
 14709  01772E  0EFE               	movlw	-2
 14710  017730  006F FF8F FFF6     	movff	plusw1,tblptrl
 14711  017736  0EFF               	movlw	-1
 14712  017738  006F FF8F FFF7     	movff	plusw1,tblptrh
 14713  01773E  0E00               	movlw	low (__mediumconst shr (0+16))
 14714  017740  6EF8               	movwf	tblptru,c
 14715  017742  0E1F               	movlw	(high __ramtop+-1)
 14716  017744  64F7               	cpfsgt	tblptrh,c
 14717  017746  D003               	bra	u8427
 14718  017748  0008               	tblrd		*
 14719  01774A  50F5               	movf	tablat,w,c
 14720  01774C  D007               	bra	u8425
 14721  01774E                     u8427:
 14722  01774E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14723  017754  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14724  01775A  50EF               	movf	indf0,w,c
 14725  01775C                     u8425:
 14726  01775C  180C               	xorwf	(btemp+11)^0,w,c
 14727  01775E  B4D8               	btfsc	status,2,c
 14728  017760  D766               	goto	l9124
 14729  017762                     u8420:
 14730                           
 14731                           ;stkvar	_l @ sp[(-4)+2]
 14732  017762  0EFE               	movlw	-2
 14733  017764  006F FF8F FFF6     	movff	plusw1,tblptrl
 14734  01776A  0EFF               	movlw	-1
 14735  01776C  006F FF8F FFF7     	movff	plusw1,tblptrh
 14736  017772  0E00               	movlw	low (__mediumconst shr (0+16))
 14737  017774  6EF8               	movwf	tblptru,c
 14738  017776  0E1F               	movlw	(high __ramtop+-1)
 14739  017778  64F7               	cpfsgt	tblptrh,c
 14740  01777A  D003               	bra	u8437
 14741  01777C  0008               	tblrd		*
 14742  01777E  50F5               	movf	tablat,w,c
 14743  017780  D007               	bra	u8430
 14744  017782                     u8437:
 14745  017782  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14746  017788  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14747  01778E  50EF               	movf	indf0,w,c
 14748  017790                     u8430:
 14749  017790  6E01               	movwf	btemp^0,c
 14750  017792  6A02               	clrf	(btemp+1)^0,c
 14751                           
 14752                           ;stkvar	_r @ sp[(-4)+0]
 14753  017794  50E1               	movf	fsr1l,w,c
 14754  017796  0FFC               	addlw	-4
 14755  017798  6ED9               	movwf	fsr2l,c
 14756  01779A  50E2               	movf	fsr1h,w,c
 14757  01779C  6EDA               	movwf	fsr2h,c
 14758  01779E  0EFF               	movlw	255
 14759  0177A0  22DA               	addwfc	fsr2h,f,c
 14760  0177A2  006F FF7B FFF6     	movff	postinc2,tblptrl
 14761  0177A8  006F FF77 FFF7     	movff	postdec2,tblptrh
 14762  0177AE                     	if	0	;tblptru may be non-zero
 14763  0177AE                     	endif
 14764  0177AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14765  0177AE  0E00               	movlw	low (__mediumconst shr (0+16))
 14766  0177B0  6EF8               	movwf	tblptru,c
 14767  0177B2                     	endif
 14768  0177B2  0008               	tblrd		*
 14769  0177B4  50F5               	movf	tablat,w,c
 14770  0177B6  5E01               	subwf	btemp^0,f,c
 14771  0177B8  0E00               	movlw	0
 14772  0177BA  5A02               	subwfb	(btemp+1)^0,f,c
 14773  0177BC                     l3411:
 14774                           
 14775                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 14776  0177BC  0EF6               	movlw	246
 14777  0177BE  26E1               	addwf	fsr1l,f,c
 14778  0177C0  0EFF               	movlw	255
 14779  0177C2  22E2               	addwfc	fsr1h,f,c
 14780  0177C4  0012               	return		;funcret
 14781  0177C6                     __end_of_strncmp:
 14782                           	opt callstack 0
 14783                           
 14784 ;; *************** function _stoa *****************
 14785 ;; Defined at:
 14786 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14787 ;; Parameters:    Size  Location     Type
 14788 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14789 ;;		 -> f(6), NULL(0), 
 14790 ;;  s               2  [STACK] PTR unsigned char 
 14791 ;;		 -> ?_printf(2), ?_sprintf(2), STR_47(9), STR_46(12), 
 14792 ;;		 -> D.lcd(288), D(290), T(144), STR_3(6), 
 14793 ;;		 -> V(189), 
 14794 ;; Auto vars:     Size  Location     Type
 14795 ;;  nuls            7  [STACK] unsigned char [7]
 14796 ;;  l               2  [STACK] int 
 14797 ;;  p               2  [STACK] int 
 14798 ;;  cp              2  [STACK] PTR unsigned char 
 14799 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_47(9), 
 14800 ;;		 -> STR_46(12), D.lcd(288), D(290), T(144), 
 14801 ;;		 -> STR_3(6), V(189), 
 14802 ;;  w               2  [STACK] int 
 14803 ;;  i               2  [STACK] int 
 14804 ;; Return value:  Size  Location     Type
 14805 ;;                  2  [STACK] int 
 14806 ;; Registers used:
 14807 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 14808 ;; Tracked objects:
 14809 ;;		On entry : 0/0
 14810 ;;		On exit  : 0/0
 14811 ;;		Unchanged: 0/0
 14812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14817 ;;Total ram usage:        0 bytes
 14818 ;; Hardware stack levels used:    1
 14819 ;; Hardware stack levels required when called:   18
 14820 ;; This function calls:
 14821 ;;		_fputc
 14822 ;;		_strlen
 14823 ;; This function is called by:
 14824 ;;		_vfpfcnvrt
 14825 ;; This function uses a reentrant model
 14826 ;;
 14827                           
 14828                           	psect	text54
 14829  016BB4                     __ptext54:
 14830                           	opt callstack 0
 14831  016BB4                     _stoa:
 14832                           	opt callstack 0
 14833                           
 14834                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14835  016BB4  0E11               	movlw	17
 14836  016BB6  26E1               	addwf	fsr1l,f,c
 14837  016BB8  0E00               	movlw	0
 14838  016BBA  22E2               	addwfc	fsr1h,f,c
 14839                           
 14840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 14841                           
 14842                           ;incstack = 0
 14843 ;; hardware stack exceeded
 14844  016BBC  EE20  F0EC         	lfsr	2,stoa@F1166
 14845                           
 14846                           ;stkvar	_nuls @ sp[(-17)+0]
 14847  016BC0  0E07               	movlw	7
 14848  016BC2  6E01               	movwf	btemp^0,c
 14849  016BC4  0EEF               	movlw	-17
 14850  016BC6                     us1116999:
 14851  016BC6  006F FF7B FFE3     	movff	postinc2,plusw1
 14852  016BCC  28E8               	incf	wreg,w,c
 14853  016BCE  2E01               	decfsz	btemp^0,f,c
 14854  016BD0  D7FA               	bra	us1116999
 14855                           
 14856                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 14857                           ;stkvar	_s @ sp[(-17)+-4]
 14858  016BD2  0EEB               	movlw	-21
 14859  016BD4  006F FF8C  F00B    	movff	plusw1,btemp+10
 14860  016BDA  0EEC               	movlw	-20
 14861  016BDC  006F FF8C  F00C    	movff	plusw1,btemp+11
 14862                           
 14863                           ;stkvar	_cp @ sp[(-17)+11]
 14864  016BE2  0EFB               	movlw	-5
 14865  016BE4  0060  F033  FFE3   	movff	btemp+11,plusw1
 14866  016BEA  0EFA               	movlw	-6
 14867  016BEC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14868                           
 14869                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 14870                           ;stkvar	_cp @ sp[(-17)+11]
 14871  016BF2  0EFA               	movlw	-6
 14872  016BF4  006F FF8C  F001    	movff	plusw1,btemp
 14873  016BFA  0EFB               	movlw	-5
 14874  016BFC  50E3               	movf	plusw1,w,c
 14875  016BFE  1001               	iorwf	btemp^0,w,c
 14876  016C00  A4D8               	btfss	status,2,c
 14877  016C02  D00E               	goto	l11864
 14878                           
 14879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 14880                           ;stkvar	_nuls @ sp[(-17)+0]
 14881  016C04  0EEF               	movlw	239
 14882  016C06  24E1               	addwf	fsr1l,w,c
 14883  016C08  6E0B               	movwf	(btemp+10)^0,c
 14884  016C0A  0EFF               	movlw	255
 14885  016C0C  20E2               	addwfc	fsr1h,w,c
 14886  016C0E  6E0C               	movwf	(btemp+11)^0,c
 14887                           
 14888                           ;stkvar	_cp @ sp[(-17)+11]
 14889  016C10  0EFB               	movlw	-5
 14890  016C12  0060  F033  FFE3   	movff	btemp+11,plusw1
 14891  016C18  0EFA               	movlw	-6
 14892  016C1A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14893  016C20                     l11864:
 14894                           
 14895                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 14896                           ;stkvar	_cp @ sp[(-17)+11]
 14897  016C20  0EFA               	movlw	-6
 14898  016C22  006F FF8F FFE6     	movff	plusw1,postinc1
 14899  016C28  006F FF8F FFE6     	movff	plusw1,postinc1
 14900  016C2E  EC5E  F0CF         	call	_strlen	;wreg free
 14901                           
 14902                           ;stkvar	_l @ sp[(-17)+7]
 14903  016C32  0EF6               	movlw	-10
 14904  016C34  0060  F007  FFE3   	movff	btemp,plusw1
 14905  016C3A  0EF7               	movlw	-9
 14906  016C3C  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14907                           
 14908                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 14909                           ;stkvar	_p @ sp[(-17)+9]
 14910  016C42  0EF8               	movlw	-8
 14911  016C44  0060  F08F  FFE3   	movff	_prec,plusw1
 14912  016C4A  0EF9               	movlw	-7
 14913  016C4C  0060  F093  FFE3   	movff	_prec+1,plusw1
 14914                           
 14915                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 14916                           ;stkvar	_p @ sp[(-17)+9]
 14917  016C52  0EF9               	movlw	-7
 14918  016C54  BEE3               	btfsc	plusw1,7,c
 14919  016C56  D023               	goto	l2236
 14920                           
 14921                           ;stkvar	_l @ sp[(-17)+7]
 14922                           ;stkvar	_p @ sp[(-17)+9]
 14923  016C58  50E1               	movf	fsr1l,w,c
 14924  016C5A  0FF8               	addlw	-8
 14925  016C5C  6ED9               	movwf	fsr2l,c
 14926  016C5E  50E2               	movf	fsr1h,w,c
 14927  016C60  6EDA               	movwf	fsr2h,c
 14928  016C62  0EFF               	movlw	255
 14929  016C64  22DA               	addwfc	fsr2h,f,c
 14930  016C66  0EF6               	movlw	-10
 14931  016C68  50E3               	movf	plusw1,w,c
 14932  016C6A  5CDE               	subwf	postinc2,w,c
 14933  016C6C  50DE               	movf	postinc2,w,c
 14934  016C6E  0A80               	xorlw	128
 14935  016C70  6E01               	movwf	btemp^0,c
 14936  016C72  0EF7               	movlw	-9
 14937  016C74  50E3               	movf	plusw1,w,c
 14938  016C76  0A80               	xorlw	128
 14939  016C78  5801               	subwfb	btemp^0,w,c
 14940  016C7A  B0D8               	btfsc	status,0,c
 14941  016C7C  D010               	goto	l2236
 14942                           
 14943                           ;stkvar	_p @ sp[(-17)+9]
 14944                           ;stkvar	_l @ sp[(-17)+7]
 14945  016C7E  0EF8               	movlw	-8
 14946  016C80  006F FF8C  F001    	movff	plusw1,btemp
 14947  016C86  0EF6               	movlw	-10
 14948  016C88  0060  F007  FFE3   	movff	btemp,plusw1
 14949  016C8E  0EF9               	movlw	-7
 14950  016C90  006F FF8C  F001    	movff	plusw1,btemp
 14951  016C96  0EF7               	movlw	-9
 14952  016C98  0060  F007  FFE3   	movff	btemp,plusw1
 14953  016C9E                     l2236:
 14954                           
 14955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 14956                           ;stkvar	_l @ sp[(-17)+7]
 14957                           ;stkvar	_p @ sp[(-17)+9]
 14958  016C9E  0EF6               	movlw	-10
 14959  016CA0  006F FF8C  F001    	movff	plusw1,btemp
 14960  016CA6  0EF8               	movlw	-8
 14961  016CA8  0060  F007  FFE3   	movff	btemp,plusw1
 14962  016CAE  0EF7               	movlw	-9
 14963  016CB0  006F FF8C  F001    	movff	plusw1,btemp
 14964  016CB6  0EF9               	movlw	-7
 14965  016CB8  0060  F007  FFE3   	movff	btemp,plusw1
 14966                           
 14967                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 14968                           ;stkvar	_w @ sp[(-17)+13]
 14969  016CBE  0EFC               	movlw	-4
 14970  016CC0  0060  F087  FFE3   	movff	_width,plusw1
 14971  016CC6  0EFD               	movlw	-3
 14972  016CC8  0060  F08B  FFE3   	movff	_width+1,plusw1
 14973                           
 14974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 14975  016CCE  A025               	btfss	_flags^0,0,c
 14976  016CD0  D01F               	goto	l11884
 14977  016CD2  D031               	goto	u11210
 14978  016CD4                     l11880:
 14979                           
 14980                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 14981                           ;stkvar	_fp @ sp[(-17)+-2]
 14982  016CD4  0EED               	movlw	-19
 14983  016CD6  006F FF8F FFE6     	movff	plusw1,postinc1
 14984  016CDC  006F FF8F FFE6     	movff	plusw1,postinc1
 14985  016CE2  0E20               	movlw	32
 14986  016CE4  6EE6               	movwf	postinc1,c
 14987  016CE6  0E00               	movlw	0
 14988  016CE8  6EE6               	movwf	postinc1,c
 14989  016CEA  EC61  F0C7         	call	_fputc	;wreg free
 14990                           
 14991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 14992                           ;stkvar	_l @ sp[(-17)+7]
 14993  016CEE  0EF6               	movlw	-10
 14994  016CF0  50E3               	movf	plusw1,w,c
 14995  016CF2  0F01               	addlw	1
 14996  016CF4  6E01               	movwf	btemp^0,c
 14997  016CF6  0EF6               	movlw	-10
 14998  016CF8  0060  F007  FFE3   	movff	btemp,plusw1
 14999  016CFE  6A01               	clrf	btemp^0,c
 15000  016D00  0EF7               	movlw	-9
 15001  016D02  50E3               	movf	plusw1,w,c
 15002  016D04  2001               	addwfc	btemp^0,w,c
 15003  016D06  6E01               	movwf	btemp^0,c
 15004  016D08  0EF7               	movlw	-9
 15005  016D0A  0060  F007  FFE3   	movff	btemp,plusw1
 15006  016D10                     l11884:
 15007                           
 15008                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 15009                           ;stkvar	_w @ sp[(-17)+13]
 15010                           ;stkvar	_l @ sp[(-17)+7]
 15011  016D10  50E1               	movf	fsr1l,w,c
 15012  016D12  0FF6               	addlw	-10
 15013  016D14  6ED9               	movwf	fsr2l,c
 15014  016D16  50E2               	movf	fsr1h,w,c
 15015  016D18  6EDA               	movwf	fsr2h,c
 15016  016D1A  0EFF               	movlw	255
 15017  016D1C  22DA               	addwfc	fsr2h,f,c
 15018  016D1E  0EFC               	movlw	-4
 15019  016D20  50E3               	movf	plusw1,w,c
 15020  016D22  5CDE               	subwf	postinc2,w,c
 15021  016D24  50DE               	movf	postinc2,w,c
 15022  016D26  0A80               	xorlw	128
 15023  016D28  6E01               	movwf	btemp^0,c
 15024  016D2A  0EFD               	movlw	-3
 15025  016D2C  50E3               	movf	plusw1,w,c
 15026  016D2E  0A80               	xorlw	128
 15027  016D30  5801               	subwfb	btemp^0,w,c
 15028  016D32  A0D8               	btfss	status,0,c
 15029  016D34  D7CF               	goto	l11880
 15030  016D36                     u11210:
 15031                           
 15032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 15033                           ;stkvar	_i @ sp[(-17)+15]
 15034  016D36  0EFE               	movlw	-2
 15035  016D38  6AE3               	clrf	plusw1,c
 15036  016D3A  0EFF               	movlw	-1
 15037  016D3C  6AE3               	clrf	plusw1,c
 15038                           
 15039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15040  016D3E  D045               	goto	l11894
 15041  016D40                     l11888:
 15042                           
 15043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 15044                           ;stkvar	_fp @ sp[(-17)+-2]
 15045  016D40  0EED               	movlw	-19
 15046  016D42  006F FF8F FFE6     	movff	plusw1,postinc1
 15047  016D48  006F FF8F FFE6     	movff	plusw1,postinc1
 15048                           
 15049                           ;stkvar	_cp @ sp[(-19)+11]
 15050  016D4E  0EF8               	movlw	-8
 15051  016D50  006F FF8F FFF6     	movff	plusw1,tblptrl
 15052  016D56  0EF9               	movlw	-7
 15053  016D58  006F FF8F FFF7     	movff	plusw1,tblptrh
 15054  016D5E  0E00               	movlw	low (__mediumconst shr (0+16))
 15055  016D60  6EF8               	movwf	tblptru,c
 15056  016D62  0E1F               	movlw	(high __ramtop+-1)
 15057  016D64  64F7               	cpfsgt	tblptrh,c
 15058  016D66  D003               	bra	u11227
 15059  016D68  0008               	tblrd		*
 15060  016D6A  50F5               	movf	tablat,w,c
 15061  016D6C  D007               	bra	u11220
 15062  016D6E                     u11227:
 15063  016D6E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15064  016D74  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15065  016D7A  50EF               	movf	indf0,w,c
 15066  016D7C                     u11220:
 15067  016D7C  6EE6               	movwf	postinc1,c
 15068  016D7E  0E00               	movlw	0
 15069  016D80  6EE6               	movwf	postinc1,c
 15070  016D82  EC61  F0C7         	call	_fputc	;wreg free
 15071                           
 15072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 15073                           ;stkvar	_cp @ sp[(-17)+11]
 15074  016D86  0EFA               	movlw	-6
 15075  016D88  50E3               	movf	plusw1,w,c
 15076  016D8A  0F01               	addlw	1
 15077  016D8C  6E01               	movwf	btemp^0,c
 15078  016D8E  0EFA               	movlw	-6
 15079  016D90  0060  F007  FFE3   	movff	btemp,plusw1
 15080  016D96  6A01               	clrf	btemp^0,c
 15081  016D98  0EFB               	movlw	-5
 15082  016D9A  50E3               	movf	plusw1,w,c
 15083  016D9C  2001               	addwfc	btemp^0,w,c
 15084  016D9E  6E01               	movwf	btemp^0,c
 15085  016DA0  0EFB               	movlw	-5
 15086  016DA2  0060  F007  FFE3   	movff	btemp,plusw1
 15087                           
 15088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 15089                           ;stkvar	_i @ sp[(-17)+15]
 15090  016DA8  0EFE               	movlw	-2
 15091  016DAA  50E3               	movf	plusw1,w,c
 15092  016DAC  0F01               	addlw	1
 15093  016DAE  6E01               	movwf	btemp^0,c
 15094  016DB0  0EFE               	movlw	-2
 15095  016DB2  0060  F007  FFE3   	movff	btemp,plusw1
 15096  016DB8  6A01               	clrf	btemp^0,c
 15097  016DBA  0EFF               	movlw	-1
 15098  016DBC  50E3               	movf	plusw1,w,c
 15099  016DBE  2001               	addwfc	btemp^0,w,c
 15100  016DC0  6E01               	movwf	btemp^0,c
 15101  016DC2  0EFF               	movlw	-1
 15102  016DC4  0060  F007  FFE3   	movff	btemp,plusw1
 15103  016DCA                     l11894:
 15104                           
 15105                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15106                           ;stkvar	_p @ sp[(-17)+9]
 15107                           ;stkvar	_i @ sp[(-17)+15]
 15108  016DCA  50E1               	movf	fsr1l,w,c
 15109  016DCC  0FFE               	addlw	-2
 15110  016DCE  6ED9               	movwf	fsr2l,c
 15111  016DD0  50E2               	movf	fsr1h,w,c
 15112  016DD2  6EDA               	movwf	fsr2h,c
 15113  016DD4  0EFF               	movlw	255
 15114  016DD6  22DA               	addwfc	fsr2h,f,c
 15115  016DD8  0EF8               	movlw	-8
 15116  016DDA  50E3               	movf	plusw1,w,c
 15117  016DDC  5CDE               	subwf	postinc2,w,c
 15118  016DDE  50DE               	movf	postinc2,w,c
 15119  016DE0  0A80               	xorlw	128
 15120  016DE2  6E01               	movwf	btemp^0,c
 15121  016DE4  0EF9               	movlw	-7
 15122  016DE6  50E3               	movf	plusw1,w,c
 15123  016DE8  0A80               	xorlw	128
 15124  016DEA  5801               	subwfb	btemp^0,w,c
 15125  016DEC  A0D8               	btfss	status,0,c
 15126  016DEE  D7A8               	goto	l11888
 15127                           
 15128                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 15129  016DF0  B025               	btfsc	_flags^0,0,c
 15130  016DF2  D01F               	goto	l11902
 15131  016DF4  D031               	goto	u11250
 15132  016DF6                     l11898:
 15133                           
 15134                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 15135                           ;stkvar	_fp @ sp[(-17)+-2]
 15136  016DF6  0EED               	movlw	-19
 15137  016DF8  006F FF8F FFE6     	movff	plusw1,postinc1
 15138  016DFE  006F FF8F FFE6     	movff	plusw1,postinc1
 15139  016E04  0E20               	movlw	32
 15140  016E06  6EE6               	movwf	postinc1,c
 15141  016E08  0E00               	movlw	0
 15142  016E0A  6EE6               	movwf	postinc1,c
 15143  016E0C  EC61  F0C7         	call	_fputc	;wreg free
 15144                           
 15145                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 15146                           ;stkvar	_l @ sp[(-17)+7]
 15147  016E10  0EF6               	movlw	-10
 15148  016E12  50E3               	movf	plusw1,w,c
 15149  016E14  0F01               	addlw	1
 15150  016E16  6E01               	movwf	btemp^0,c
 15151  016E18  0EF6               	movlw	-10
 15152  016E1A  0060  F007  FFE3   	movff	btemp,plusw1
 15153  016E20  6A01               	clrf	btemp^0,c
 15154  016E22  0EF7               	movlw	-9
 15155  016E24  50E3               	movf	plusw1,w,c
 15156  016E26  2001               	addwfc	btemp^0,w,c
 15157  016E28  6E01               	movwf	btemp^0,c
 15158  016E2A  0EF7               	movlw	-9
 15159  016E2C  0060  F007  FFE3   	movff	btemp,plusw1
 15160  016E32                     l11902:
 15161                           
 15162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 15163                           ;stkvar	_w @ sp[(-17)+13]
 15164                           ;stkvar	_l @ sp[(-17)+7]
 15165  016E32  50E1               	movf	fsr1l,w,c
 15166  016E34  0FF6               	addlw	-10
 15167  016E36  6ED9               	movwf	fsr2l,c
 15168  016E38  50E2               	movf	fsr1h,w,c
 15169  016E3A  6EDA               	movwf	fsr2h,c
 15170  016E3C  0EFF               	movlw	255
 15171  016E3E  22DA               	addwfc	fsr2h,f,c
 15172  016E40  0EFC               	movlw	-4
 15173  016E42  50E3               	movf	plusw1,w,c
 15174  016E44  5CDE               	subwf	postinc2,w,c
 15175  016E46  50DE               	movf	postinc2,w,c
 15176  016E48  0A80               	xorlw	128
 15177  016E4A  6E01               	movwf	btemp^0,c
 15178  016E4C  0EFD               	movlw	-3
 15179  016E4E  50E3               	movf	plusw1,w,c
 15180  016E50  0A80               	xorlw	128
 15181  016E52  5801               	subwfb	btemp^0,w,c
 15182  016E54  A0D8               	btfss	status,0,c
 15183  016E56  D7CF               	goto	l11898
 15184  016E58                     u11250:
 15185                           
 15186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 15187                           ;stkvar	_l @ sp[(-17)+7]
 15188  016E58  0EF6               	movlw	-10
 15189  016E5A  006F FF8C  F001    	movff	plusw1,btemp
 15190  016E60  0EF7               	movlw	-9
 15191  016E62  006F FF8C  F002    	movff	plusw1,btemp+1
 15192                           
 15193                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 15194  016E68  0EEB               	movlw	235
 15195  016E6A  26E1               	addwf	fsr1l,f,c
 15196  016E6C  0EFF               	movlw	255
 15197  016E6E  22E2               	addwfc	fsr1h,f,c
 15198  016E70  0012               	return		;funcret
 15199  016E72                     __end_of_stoa:
 15200                           	opt callstack 0
 15201                           
 15202 ;; *************** function _efgtoa *****************
 15203 ;; Defined at:
 15204 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15205 ;; Parameters:    Size  Location     Type
 15206 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15207 ;;		 -> f(6), NULL(0), 
 15208 ;;  f               4  [STACK] PTR struct _IO_FILE
 15209 ;;  c               1  [STACK] unsigned char 
 15210 ;; Auto vars:     Size  Location     Type
 15211 ;;  u               4  [STACK] unsigned char 
 15212 ;;  g               4  [STACK] unsigned char 
 15213 ;;  l               4  [STACK] unsigned char 
 15214 ;;  h               4  [STACK] unsigned char 
 15215 ;;  ou              4  [STACK] unsigned char 
 15216 ;;  n               2  [STACK] int 
 15217 ;;  e               2  [STACK] int 
 15218 ;;  i               2  [STACK] int 
 15219 ;;  w               2  [STACK] int 
 15220 ;;  p               2  [STACK] int 
 15221 ;;  sign            2  [STACK] int 
 15222 ;;  d               2  [STACK] int 
 15223 ;;  ne              2  [STACK] int 
 15224 ;;  m               2  [STACK] int 
 15225 ;;  pp              2  [STACK] int 
 15226 ;;  t               2  [STACK] int 
 15227 ;;  mode            1  [STACK] unsigned char 
 15228 ;;  nmode           1  [STACK] unsigned char 
 15229 ;; Return value:  Size  Location     Type
 15230 ;;                  2  [STACK] int 
 15231 ;; Registers used:
 15232 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15233 ;; Tracked objects:
 15234 ;;		On entry : 0/0
 15235 ;;		On exit  : 0/0
 15236 ;;		Unchanged: 0/0
 15237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15242 ;;Total ram usage:        0 bytes
 15243 ;; Hardware stack levels used:    1
 15244 ;; Hardware stack levels required when called:   20
 15245 ;; This function calls:
 15246 ;;		___awdiv
 15247 ;;		___awmod
 15248 ;;		___fladd
 15249 ;;		___fldiv
 15250 ;;		___fleq
 15251 ;;		___flge
 15252 ;;		___flmul
 15253 ;;		___flneg
 15254 ;;		___flsub
 15255 ;;		___fltol
 15256 ;;		___fpclassifyf
 15257 ;;		_floorf
 15258 ;;		_isupper
 15259 ;;		_pad
 15260 ;;		_strcpy
 15261 ;;		_tolower
 15262 ;; This function is called by:
 15263 ;;		_vfpfcnvrt
 15264 ;; This function uses a reentrant model
 15265 ;;
 15266                           
 15267                           	psect	text55
 15268  010000                     __ptext55:
 15269                           	opt callstack 0
 15270  010000                     _efgtoa:
 15271                           	opt callstack 0
 15272                           
 15273                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15274  010000  0E38               	movlw	56
 15275  010002  26E1               	addwf	fsr1l,f,c
 15276  010004  0E00               	movlw	0
 15277  010006  22E2               	addwfc	fsr1h,f,c
 15278                           
 15279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 15280                           ;stkvar	_sign @ sp[(-56)+42]
 15281                           
 15282                           ;incstack = 0
 15283 ;; hardware stack exceeded
 15284  010008  0EF2               	movlw	-14
 15285  01000A  6AE3               	clrf	plusw1,c
 15286  01000C  0EF3               	movlw	-13
 15287  01000E  6AE3               	clrf	plusw1,c
 15288                           
 15289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 15290                           ;stkvar	_f @ sp[(-56)+-6]
 15291  010010  0EC2               	movlw	-62
 15292  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 15293  010018  0EC3               	movlw	-61
 15294  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 15295  010020  0EC4               	movlw	-60
 15296  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 15297  010028  0EC5               	movlw	-59
 15298  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 15299                           
 15300                           ;stkvar	_g @ sp[(-56)+16]
 15301  010030  0ED8               	movlw	-40
 15302  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 15303  010038  0ED9               	movlw	-39
 15304  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15305  010040  0EDA               	movlw	-38
 15306  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15307  010048  0EDB               	movlw	-37
 15308  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 15309                           
 15310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 15311                           ;stkvar	_g @ sp[(-56)+16]
 15312  010050  0EDB               	movlw	-37
 15313  010052  AEE3               	btfss	plusw1,7,c
 15314  010054  D02B               	goto	l11562
 15315                           
 15316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 15317  010056  0E01               	movlw	1
 15318  010058  6E0B               	movwf	(btemp+10)^0,c
 15319  01005A  0E00               	movlw	0
 15320  01005C  6E0C               	movwf	(btemp+11)^0,c
 15321                           
 15322                           ;stkvar	_sign @ sp[(-56)+42]
 15323  01005E  0EF2               	movlw	-14
 15324  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15325  010066  0EF3               	movlw	-13
 15326  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 15327                           
 15328                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 15329                           ;stkvar	_g @ sp[(-56)+16]
 15330  01006E  0ED8               	movlw	-40
 15331  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 15332  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 15333  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 15334  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 15335  010088  EC0A  F0D5         	call	___flneg	;wreg free
 15336                           
 15337                           ;stkvar	_g @ sp[(-56)+16]
 15338  01008C  0ED8               	movlw	-40
 15339  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 15340  010094  0ED9               	movlw	-39
 15341  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15342  01009C  0EDA               	movlw	-38
 15343  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15344  0100A4  0EDB               	movlw	-37
 15345  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 15346  0100AC                     l11562:
 15347                           
 15348                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 15349                           ;stkvar	_n @ sp[(-56)+32]
 15350  0100AC  0EE8               	movlw	-24
 15351  0100AE  6AE3               	clrf	plusw1,c
 15352  0100B0  0EE9               	movlw	-23
 15353  0100B2  6AE3               	clrf	plusw1,c
 15354                           
 15355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 15356                           ;stkvar	_w @ sp[(-56)+38]
 15357  0100B4  0EEE               	movlw	-18
 15358  0100B6  0060  F087  FFE3   	movff	_width,plusw1
 15359  0100BC  0EEF               	movlw	-17
 15360  0100BE  0060  F08B  FFE3   	movff	_width+1,plusw1
 15361                           
 15362                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 15363                           ;stkvar	_sign @ sp[(-56)+42]
 15364  0100C4  0EF2               	movlw	-14
 15365  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 15366  0100CC  0EF3               	movlw	-13
 15367  0100CE  50E3               	movf	plusw1,w,c
 15368  0100D0  1001               	iorwf	btemp^0,w,c
 15369  0100D2  A4D8               	btfss	status,2,c
 15370  0100D4  D002               	goto	u10660
 15371  0100D6  A425               	btfss	_flags^0,2,c
 15372  0100D8  D036               	goto	l11582
 15373  0100DA                     u10660:
 15374                           
 15375                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 15376                           ;stkvar	_sign @ sp[(-56)+42]
 15377  0100DA  0EF2               	movlw	-14
 15378  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 15379  0100E2  0EF3               	movlw	-13
 15380  0100E4  50E3               	movf	plusw1,w,c
 15381  0100E6  1001               	iorwf	btemp^0,w,c
 15382  0100E8  A4D8               	btfss	status,2,c
 15383  0100EA  D002               	goto	l11574
 15384  0100EC  0E2B               	movlw	43
 15385  0100EE  D001               	goto	L14
 15386  0100F0                     l11574:
 15387  0100F0  0E2D               	movlw	45
 15388  0100F2                     L14:
 15389  0100F2  6E0B               	movwf	(btemp+10)^0,c
 15390  0100F4  0E00               	movlw	0
 15391  0100F6  6E0C               	movwf	(btemp+11)^0,c
 15392                           
 15393                           ;stkvar	_efgtoa$5332 @ sp[(-56)+10]
 15394  0100F8  0ED2               	movlw	-46
 15395  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15396  010100  0ED3               	movlw	-45
 15397  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 15398                           
 15399                           ;stkvar	_efgtoa$5332 @ sp[(-56)+10]
 15400  010108  0ED2               	movlw	-46
 15401  01010A  006F FF8C  F394    	movff	plusw1,_dbuf
 15402                           
 15403                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 15404                           ;stkvar	_n @ sp[(-56)+32]
 15405  010110  0EE8               	movlw	-24
 15406  010112  50E3               	movf	plusw1,w,c
 15407  010114  0F01               	addlw	1
 15408  010116  6E01               	movwf	btemp^0,c
 15409  010118  0EE8               	movlw	-24
 15410  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 15411  010120  6A01               	clrf	btemp^0,c
 15412  010122  0EE9               	movlw	-23
 15413  010124  50E3               	movf	plusw1,w,c
 15414  010126  2001               	addwfc	btemp^0,w,c
 15415  010128  6E01               	movwf	btemp^0,c
 15416  01012A  0EE9               	movlw	-23
 15417  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 15418                           
 15419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 15420                           ;stkvar	_w @ sp[(-56)+38]
 15421  010132  50E1               	movf	fsr1l,w,c
 15422  010134  0FEE               	addlw	-18
 15423  010136  6ED9               	movwf	fsr2l,c
 15424  010138  50E2               	movf	fsr1h,w,c
 15425  01013A  6EDA               	movwf	fsr2h,c
 15426  01013C  0EFF               	movlw	255
 15427  01013E  22DA               	addwfc	fsr2h,f,c
 15428  010140  06DE               	decf	postinc2,f,c
 15429  010142  0E00               	movlw	0
 15430  010144  5ADD               	subwfb	postdec2,f,c
 15431  010146                     l11582:
 15432                           
 15433                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15434                           ;stkvar	_g @ sp[(-56)+16]
 15435  010146  0ED8               	movlw	-40
 15436  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 15437  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 15438  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 15439  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 15440  010160  ECCC  F0BF         	call	___fpclassifyf	;wreg free
 15441  010164  0401               	decf	btemp^0,w,c
 15442  010166  1002               	iorwf	(btemp+1)^0,w,c
 15443  010168  A4D8               	btfss	status,2,c
 15444  01016A  D076               	goto	l11600
 15445  01016C  0EBF               	movlw	191
 15446  01016E  6E0B               	movwf	(btemp+10)^0,c
 15447  010170  0EFF               	movlw	255
 15448  010172  6E0C               	movwf	(btemp+11)^0,c
 15449                           
 15450                           ;stkvar	_c @ sp[(-56)+-7]
 15451  010174  0EC1               	movlw	-63
 15452  010176  50E3               	movf	plusw1,w,c
 15453  010178  6E09               	movwf	(btemp+8)^0,c
 15454  01017A  6A0A               	clrf	(btemp+9)^0,c
 15455  01017C  500B               	movf	(btemp+10)^0,w,c
 15456  01017E  2609               	addwf	(btemp+8)^0,f,c
 15457  010180  500C               	movf	(btemp+11)^0,w,c
 15458  010182  220A               	addwfc	(btemp+9)^0,f,c
 15459  010184  500A               	movf	(btemp+9)^0,w,c
 15460  010186  E106               	bnz	u10690
 15461  010188  0E1A               	movlw	26
 15462  01018A  5C09               	subwf	(btemp+8)^0,w,c
 15463  01018C  B0D8               	btfsc	status,0,c
 15464  01018E  D002               	goto	u10690
 15465  010190  0E01               	movlw	1
 15466  010192  D001               	goto	u10700
 15467  010194                     u10690:
 15468  010194  0E00               	movlw	0
 15469  010196                     u10700:
 15470  010196  6E0B               	movwf	(btemp+10)^0,c
 15471  010198  6A0C               	clrf	(btemp+11)^0,c
 15472                           
 15473                           ;stkvar	_efgtoa$5333 @ sp[(-56)+8]
 15474  01019A  0ED0               	movlw	-48
 15475  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15476  0101A2  0ED1               	movlw	-47
 15477  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 15478                           
 15479                           ;stkvar	_efgtoa$5333 @ sp[(-56)+8]
 15480  0101AA  0ED0               	movlw	-48
 15481  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 15482  0101B2  0ED1               	movlw	-47
 15483  0101B4  50E3               	movf	plusw1,w,c
 15484  0101B6  1001               	iorwf	btemp^0,w,c
 15485  0101B8  B4D8               	btfsc	status,2,c
 15486  0101BA  D017               	goto	l11592
 15487                           
 15488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 15489  0101BC  0ED7               	movlw	low STR_66
 15490  0101BE  6EE6               	movwf	postinc1,c
 15491  0101C0  0EFF               	movlw	high STR_66
 15492  0101C2  6EE6               	movwf	postinc1,c
 15493                           
 15494                           ;stkvar	_n @ sp[(-58)+32]
 15495  0101C4  0E94               	movlw	low _dbuf
 15496  0101C6  6E0B               	movwf	(btemp+10)^0,c
 15497  0101C8  0E03               	movlw	high _dbuf
 15498  0101CA  6E0C               	movwf	(btemp+11)^0,c
 15499  0101CC  0EE6               	movlw	-26
 15500  0101CE  50E3               	movf	plusw1,w,c
 15501  0101D0  260B               	addwf	(btemp+10)^0,f,c
 15502  0101D2  0EE7               	movlw	-25
 15503  0101D4  50E3               	movf	plusw1,w,c
 15504  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 15505  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15506  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 15507  0101E4  EC82  F0CC         	call	_strcpy	;wreg free
 15508                           
 15509                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 15510  0101E8  D016               	goto	l11594
 15511  0101EA                     l11592:
 15512                           
 15513                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 15514  0101EA  0EDF               	movlw	low STR_67
 15515  0101EC  6EE6               	movwf	postinc1,c
 15516  0101EE  0EFF               	movlw	high STR_67
 15517  0101F0  6EE6               	movwf	postinc1,c
 15518                           
 15519                           ;stkvar	_n @ sp[(-58)+32]
 15520  0101F2  0E94               	movlw	low _dbuf
 15521  0101F4  6E0B               	movwf	(btemp+10)^0,c
 15522  0101F6  0E03               	movlw	high _dbuf
 15523  0101F8  6E0C               	movwf	(btemp+11)^0,c
 15524  0101FA  0EE6               	movlw	-26
 15525  0101FC  50E3               	movf	plusw1,w,c
 15526  0101FE  260B               	addwf	(btemp+10)^0,f,c
 15527  010200  0EE7               	movlw	-25
 15528  010202  50E3               	movf	plusw1,w,c
 15529  010204  220C               	addwfc	(btemp+11)^0,f,c
 15530  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15531  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 15532  010212  EC82  F0CC         	call	_strcpy	;wreg free
 15533  010216                     l11594:
 15534                           
 15535                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 15536                           ;stkvar	_w @ sp[(-56)+38]
 15537  010216  50E1               	movf	fsr1l,w,c
 15538  010218  0FEE               	addlw	-18
 15539  01021A  6ED9               	movwf	fsr2l,c
 15540  01021C  50E2               	movf	fsr1h,w,c
 15541  01021E  6EDA               	movwf	fsr2h,c
 15542  010220  0EFF               	movlw	255
 15543  010222  22DA               	addwfc	fsr2h,f,c
 15544  010224  0EFD               	movlw	253
 15545  010226  26DE               	addwf	postinc2,f,c
 15546  010228  0EFF               	movlw	255
 15547  01022A  22DD               	addwfc	postdec2,f,c
 15548  01022C                     l11596:
 15549                           
 15550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 15551                           ;stkvar	_w @ sp[(-56)+38]
 15552  01022C  0EEE               	movlw	-18
 15553  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 15554  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 15555  01023A  0E94               	movlw	low _dbuf
 15556  01023C  6EE6               	movwf	postinc1,c
 15557  01023E  0E03               	movlw	high _dbuf
 15558  010240  6EE6               	movwf	postinc1,c
 15559                           
 15560                           ;stkvar	_fp @ sp[(-60)+-2]
 15561  010242  0EC2               	movlw	-62
 15562  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 15563  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 15564  010250  EC7F  F0C8         	call	_pad	;wreg free
 15565  010254  EF1D  F089         	goto	l2154
 15566  010258                     l11600:
 15567                           
 15568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15569                           ;stkvar	_g @ sp[(-56)+16]
 15570  010258  0ED8               	movlw	-40
 15571  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 15572  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 15573  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 15574  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 15575  010272  ECCC  F0BF         	call	___fpclassifyf	;wreg free
 15576  010276  5001               	movf	btemp^0,w,c
 15577  010278  1002               	iorwf	(btemp+1)^0,w,c
 15578  01027A  A4D8               	btfss	status,2,c
 15579  01027C  D056               	goto	l11618
 15580  01027E  0EBF               	movlw	191
 15581  010280  6E0B               	movwf	(btemp+10)^0,c
 15582  010282  0EFF               	movlw	255
 15583  010284  6E0C               	movwf	(btemp+11)^0,c
 15584                           
 15585                           ;stkvar	_c @ sp[(-56)+-7]
 15586  010286  0EC1               	movlw	-63
 15587  010288  50E3               	movf	plusw1,w,c
 15588  01028A  6E09               	movwf	(btemp+8)^0,c
 15589  01028C  6A0A               	clrf	(btemp+9)^0,c
 15590  01028E  500B               	movf	(btemp+10)^0,w,c
 15591  010290  2609               	addwf	(btemp+8)^0,f,c
 15592  010292  500C               	movf	(btemp+11)^0,w,c
 15593  010294  220A               	addwfc	(btemp+9)^0,f,c
 15594  010296  500A               	movf	(btemp+9)^0,w,c
 15595  010298  E106               	bnz	u10730
 15596  01029A  0E1A               	movlw	26
 15597  01029C  5C09               	subwf	(btemp+8)^0,w,c
 15598  01029E  B0D8               	btfsc	status,0,c
 15599  0102A0  D002               	goto	u10730
 15600  0102A2  0E01               	movlw	1
 15601  0102A4  D001               	goto	u10740
 15602  0102A6                     u10730:
 15603  0102A6  0E00               	movlw	0
 15604  0102A8                     u10740:
 15605  0102A8  6E0B               	movwf	(btemp+10)^0,c
 15606  0102AA  6A0C               	clrf	(btemp+11)^0,c
 15607                           
 15608                           ;stkvar	_efgtoa$5337 @ sp[(-56)+6]
 15609  0102AC  0ECE               	movlw	-50
 15610  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15611  0102B4  0ECF               	movlw	-49
 15612  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 15613                           
 15614                           ;stkvar	_efgtoa$5337 @ sp[(-56)+6]
 15615  0102BC  0ECE               	movlw	-50
 15616  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 15617  0102C4  0ECF               	movlw	-49
 15618  0102C6  50E3               	movf	plusw1,w,c
 15619  0102C8  1001               	iorwf	btemp^0,w,c
 15620  0102CA  B4D8               	btfsc	status,2,c
 15621  0102CC  D017               	goto	l11610
 15622                           
 15623                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 15624  0102CE  0EDB               	movlw	low STR_70
 15625  0102D0  6EE6               	movwf	postinc1,c
 15626  0102D2  0EFF               	movlw	high STR_70
 15627  0102D4  6EE6               	movwf	postinc1,c
 15628                           
 15629                           ;stkvar	_n @ sp[(-58)+32]
 15630  0102D6  0E94               	movlw	low _dbuf
 15631  0102D8  6E0B               	movwf	(btemp+10)^0,c
 15632  0102DA  0E03               	movlw	high _dbuf
 15633  0102DC  6E0C               	movwf	(btemp+11)^0,c
 15634  0102DE  0EE6               	movlw	-26
 15635  0102E0  50E3               	movf	plusw1,w,c
 15636  0102E2  260B               	addwf	(btemp+10)^0,f,c
 15637  0102E4  0EE7               	movlw	-25
 15638  0102E6  50E3               	movf	plusw1,w,c
 15639  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 15640  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15641  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 15642  0102F6  EC82  F0CC         	call	_strcpy	;wreg free
 15643                           
 15644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 15645  0102FA  D78D               	goto	l11594
 15646  0102FC                     l11610:
 15647                           
 15648                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 15649  0102FC  0EE3               	movlw	low STR_71
 15650  0102FE  6EE6               	movwf	postinc1,c
 15651  010300  0EFF               	movlw	high STR_71
 15652  010302  6EE6               	movwf	postinc1,c
 15653                           
 15654                           ;stkvar	_n @ sp[(-58)+32]
 15655  010304  0E94               	movlw	low _dbuf
 15656  010306  6E0B               	movwf	(btemp+10)^0,c
 15657  010308  0E03               	movlw	high _dbuf
 15658  01030A  6E0C               	movwf	(btemp+11)^0,c
 15659  01030C  0EE6               	movlw	-26
 15660  01030E  50E3               	movf	plusw1,w,c
 15661  010310  260B               	addwf	(btemp+10)^0,f,c
 15662  010312  0EE7               	movlw	-25
 15663  010314  50E3               	movf	plusw1,w,c
 15664  010316  220C               	addwfc	(btemp+11)^0,f,c
 15665  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15666  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 15667  010324  EC82  F0CC         	call	_strcpy	;wreg free
 15668  010328  D776               	goto	l11594
 15669  01032A                     l11618:
 15670                           
 15671                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 15672  01032A  0E00               	movlw	0
 15673  01032C  6E09               	movwf	(btemp+8)^0,c
 15674  01032E  0E00               	movlw	0
 15675  010330  6E0A               	movwf	(btemp+9)^0,c
 15676  010332  0E80               	movlw	128
 15677  010334  6E0B               	movwf	(btemp+10)^0,c
 15678  010336  0E3F               	movlw	63
 15679  010338  6E0C               	movwf	(btemp+11)^0,c
 15680                           
 15681                           ;stkvar	_u @ sp[(-56)+12]
 15682  01033A  0ED4               	movlw	-44
 15683  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 15684  010342  0ED5               	movlw	-43
 15685  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15686  01034A  0ED6               	movlw	-42
 15687  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15688  010352  0ED7               	movlw	-41
 15689  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 15690                           
 15691                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 15692                           ;stkvar	_e @ sp[(-56)+34]
 15693  01035A  0EEA               	movlw	-22
 15694  01035C  6AE3               	clrf	plusw1,c
 15695  01035E  0EEB               	movlw	-21
 15696  010360  6AE3               	clrf	plusw1,c
 15697                           
 15698                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 15699  010362  0E00               	movlw	0
 15700  010364  6EE6               	movwf	postinc1,c
 15701  010366  0E00               	movlw	0
 15702  010368  6EE6               	movwf	postinc1,c
 15703  01036A  0E00               	movlw	0
 15704  01036C  6EE6               	movwf	postinc1,c
 15705  01036E  0E00               	movlw	0
 15706  010370  6EE6               	movwf	postinc1,c
 15707                           
 15708                           ;stkvar	_g @ sp[(-60)+16]
 15709  010372  0ED4               	movlw	-44
 15710  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 15711  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 15712  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 15713  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 15714  01038C  ECEC  F0CC         	call	___fleq	;wreg free
 15715  010390  A001               	btfss	btemp& (0+255),0,c
 15716  010392  D039               	goto	l11630
 15717  010394  D0BC               	goto	u10780
 15718  010396                     l11626:
 15719                           
 15720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 15721  010396  0E00               	movlw	0
 15722  010398  6EE6               	movwf	postinc1,c
 15723  01039A  0E00               	movlw	0
 15724  01039C  6EE6               	movwf	postinc1,c
 15725  01039E  0E20               	movlw	32
 15726  0103A0  6EE6               	movwf	postinc1,c
 15727  0103A2  0E41               	movlw	65
 15728  0103A4  6EE6               	movwf	postinc1,c
 15729                           
 15730                           ;stkvar	_u @ sp[(-60)+12]
 15731  0103A6  0ED0               	movlw	-48
 15732  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 15733  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 15734  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 15735  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 15736  0103C0  ECED  F098         	call	___flmul	;wreg free
 15737                           
 15738                           ;stkvar	_u @ sp[(-56)+12]
 15739  0103C4  0ED4               	movlw	-44
 15740  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 15741  0103CC  0ED5               	movlw	-43
 15742  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15743  0103D4  0ED6               	movlw	-42
 15744  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15745  0103DC  0ED7               	movlw	-41
 15746  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 15747                           
 15748                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 15749                           ;stkvar	_e @ sp[(-56)+34]
 15750  0103E4  0EEA               	movlw	-22
 15751  0103E6  50E3               	movf	plusw1,w,c
 15752  0103E8  0F01               	addlw	1
 15753  0103EA  6E01               	movwf	btemp^0,c
 15754  0103EC  0EEA               	movlw	-22
 15755  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 15756  0103F4  6A01               	clrf	btemp^0,c
 15757  0103F6  0EEB               	movlw	-21
 15758  0103F8  50E3               	movf	plusw1,w,c
 15759  0103FA  2001               	addwfc	btemp^0,w,c
 15760  0103FC  6E01               	movwf	btemp^0,c
 15761  0103FE  0EEB               	movlw	-21
 15762  010400  0060  F007  FFE3   	movff	btemp,plusw1
 15763  010406                     l11630:
 15764                           
 15765                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 15766  010406  0E00               	movlw	0
 15767  010408  6EE6               	movwf	postinc1,c
 15768  01040A  0E00               	movlw	0
 15769  01040C  6EE6               	movwf	postinc1,c
 15770  01040E  0E20               	movlw	32
 15771  010410  6EE6               	movwf	postinc1,c
 15772  010412  0E41               	movlw	65
 15773  010414  6EE6               	movwf	postinc1,c
 15774                           
 15775                           ;stkvar	_u @ sp[(-60)+12]
 15776  010416  0ED0               	movlw	-48
 15777  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 15778  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 15779  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 15780  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 15781  010430  ECED  F098         	call	___flmul	;wreg free
 15782  010434  0060  F007  FFE6   	movff	btemp,postinc1
 15783  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15784  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 15785  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 15786                           
 15787                           ;stkvar	_g @ sp[(-60)+16]
 15788  01044C  0ED4               	movlw	-44
 15789  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 15790  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 15791  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 15792  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 15793  010466  EC82  F0C3         	call	___flge	;wreg free
 15794  01046A  A001               	btfss	btemp& (0+255),0,c
 15795  01046C  D032               	goto	l11636
 15796  01046E  D793               	goto	l11626
 15797  010470                     l11632:
 15798                           
 15799                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 15800  010470  0E00               	movlw	0
 15801  010472  6EE6               	movwf	postinc1,c
 15802  010474  0E00               	movlw	0
 15803  010476  6EE6               	movwf	postinc1,c
 15804  010478  0E20               	movlw	32
 15805  01047A  6EE6               	movwf	postinc1,c
 15806  01047C  0E41               	movlw	65
 15807  01047E  6EE6               	movwf	postinc1,c
 15808                           
 15809                           ;stkvar	_u @ sp[(-60)+12]
 15810  010480  0ED0               	movlw	-48
 15811  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 15812  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 15813  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 15814  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 15815  01049A  EC6B  F0A4         	call	___fldiv	;wreg free
 15816                           
 15817                           ;stkvar	_u @ sp[(-56)+12]
 15818  01049E  0ED4               	movlw	-44
 15819  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 15820  0104A6  0ED5               	movlw	-43
 15821  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15822  0104AE  0ED6               	movlw	-42
 15823  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15824  0104B6  0ED7               	movlw	-41
 15825  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 15826                           
 15827                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 15828                           ;stkvar	_e @ sp[(-56)+34]
 15829  0104BE  50E1               	movf	fsr1l,w,c
 15830  0104C0  0FEA               	addlw	-22
 15831  0104C2  6ED9               	movwf	fsr2l,c
 15832  0104C4  50E2               	movf	fsr1h,w,c
 15833  0104C6  6EDA               	movwf	fsr2h,c
 15834  0104C8  0EFF               	movlw	255
 15835  0104CA  22DA               	addwfc	fsr2h,f,c
 15836  0104CC  06DE               	decf	postinc2,f,c
 15837  0104CE  0E00               	movlw	0
 15838  0104D0  5ADD               	subwfb	postdec2,f,c
 15839  0104D2                     l11636:
 15840                           
 15841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 15842                           ;stkvar	_u @ sp[(-56)+12]
 15843  0104D2  0ED4               	movlw	-44
 15844  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 15845  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 15846  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 15847  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 15848                           
 15849                           ;stkvar	_g @ sp[(-60)+16]
 15850  0104EC  0ED4               	movlw	-44
 15851  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 15852  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 15853  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 15854  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 15855  010506  EC82  F0C3         	call	___flge	;wreg free
 15856  01050A  A001               	btfss	btemp& (0+255),0,c
 15857  01050C  D7B1               	goto	l11632
 15858  01050E                     u10780:
 15859                           
 15860                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 15861                           ;stkvar	_c @ sp[(-56)+-7]
 15862  01050E  0EC1               	movlw	-63
 15863  010510  50E3               	movf	plusw1,w,c
 15864  010512  6EE6               	movwf	postinc1,c
 15865  010514  0E00               	movlw	0
 15866  010516  6EE6               	movwf	postinc1,c
 15867  010518  ECA4  F0D1         	call	_tolower	;wreg free
 15868                           
 15869                           ;stkvar	_mode @ sp[(-56)+54]
 15870  01051C  0EFE               	movlw	-2
 15871  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 15872                           
 15873                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 15874                           ;stkvar	_mode @ sp[(-56)+54]
 15875                           ;stkvar	_nmode @ sp[(-56)+55]
 15876  010524  0EFE               	movlw	-2
 15877  010526  006F FF8C  F001    	movff	plusw1,btemp
 15878  01052C  0EFF               	movlw	-1
 15879  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 15880                           
 15881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 15882                           ;stkvar	_mode @ sp[(-56)+54]
 15883  010534  0EFE               	movlw	-2
 15884  010536  006F FF8C  F001    	movff	plusw1,btemp
 15885  01053C  0E67               	movlw	103
 15886  01053E  1801               	xorwf	btemp^0,w,c
 15887  010540  A4D8               	btfss	status,2,c
 15888  010542  D025               	goto	l11654
 15889                           
 15890                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 15891  010544  5023               	movf	_prec^0,w,c
 15892  010546  1024               	iorwf	(_prec+1)^0,w,c
 15893  010548  A4D8               	btfss	status,2,c
 15894  01054A  D004               	goto	l11648
 15895                           
 15896                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 15897  01054C  0E00               	movlw	0
 15898  01054E  6E24               	movwf	(_prec+1)^0,c
 15899  010550  0E01               	movlw	1
 15900  010552  6E23               	movwf	_prec^0,c
 15901  010554                     l11648:
 15902                           
 15903                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 15904  010554  BE24               	btfsc	(_prec+1)^0,7,c
 15905  010556  D005               	goto	u10810
 15906  010558  5024               	movf	(_prec+1)^0,w,c
 15907  01055A  E110               	bnz	l11652
 15908  01055C  0423               	decf	_prec^0,w,c
 15909  01055E  B0D8               	btfsc	status,0,c
 15910  010560  D00D               	goto	l11652
 15911  010562                     u10810:
 15912  010562  0E06               	movlw	6
 15913  010564  6E0B               	movwf	(btemp+10)^0,c
 15914  010566  0E00               	movlw	0
 15915  010568  6E0C               	movwf	(btemp+11)^0,c
 15916                           
 15917                           ;stkvar	_p @ sp[(-56)+40]
 15918  01056A  0EF0               	movlw	-16
 15919  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15920  010572  0EF1               	movlw	-15
 15921  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 15922  01057A  D00C               	goto	l11660
 15923  01057C                     l11652:
 15924                           
 15925                           ;stkvar	_p @ sp[(-56)+40]
 15926  01057C  0EF0               	movlw	-16
 15927  01057E  0060  F08F  FFE3   	movff	_prec,plusw1
 15928  010584  0EF1               	movlw	-15
 15929  010586  0060  F093  FFE3   	movff	_prec+1,plusw1
 15930  01058C  D003               	goto	l11660
 15931  01058E                     l11654:
 15932                           
 15933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 15934  01058E  AE24               	btfss	(_prec+1)^0,7,c
 15935  010590  D7F5               	goto	l11652
 15936  010592  D7E7               	goto	u10810
 15937  010594                     l11660:
 15938                           
 15939                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 15940                           ;stkvar	_mode @ sp[(-56)+54]
 15941  010594  0EFE               	movlw	-2
 15942  010596  006F FF8C  F001    	movff	plusw1,btemp
 15943  01059C  0E67               	movlw	103
 15944  01059E  1801               	xorwf	btemp^0,w,c
 15945  0105A0  A4D8               	btfss	status,2,c
 15946  0105A2  D02F               	goto	l11670
 15947                           
 15948                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 15949                           ;stkvar	_e @ sp[(-56)+34]
 15950  0105A4  0EEB               	movlw	-21
 15951  0105A6  AEE3               	btfss	plusw1,7,c
 15952  0105A8  D00E               	goto	u10840
 15953  0105AA  0EEA               	movlw	-22
 15954  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 15955  0105B2  0EFC               	movlw	252
 15956  0105B4  5E01               	subwf	btemp^0,f,c
 15957  0105B6  0EEB               	movlw	-21
 15958  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 15959  0105BE  0EFF               	movlw	255
 15960  0105C0  5A01               	subwfb	btemp^0,f,c
 15961  0105C2  A0D8               	btfss	status,0,c
 15962  0105C4  D018               	goto	l11668
 15963  0105C6                     u10840:
 15964                           
 15965                           ;stkvar	_e @ sp[(-56)+34]
 15966                           ;stkvar	_p @ sp[(-56)+40]
 15967  0105C6  0EF0               	movlw	-16
 15968  0105C8  50E3               	movf	plusw1,w,c
 15969  0105CA  0FFF               	addlw	255
 15970  0105CC  6E0B               	movwf	(btemp+10)^0,c
 15971  0105CE  0EF1               	movlw	-15
 15972  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 15973  0105D6  0EFF               	movlw	255
 15974  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 15975  0105DA  0EEA               	movlw	-22
 15976  0105DC  50E3               	movf	plusw1,w,c
 15977  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 15978  0105E0  500C               	movf	(btemp+11)^0,w,c
 15979  0105E2  0A80               	xorlw	128
 15980  0105E4  6E01               	movwf	btemp^0,c
 15981  0105E6  0EEB               	movlw	-21
 15982  0105E8  50E3               	movf	plusw1,w,c
 15983  0105EA  0A80               	xorlw	128
 15984  0105EC  5801               	subwfb	btemp^0,w,c
 15985  0105EE  A0D8               	btfss	status,0,c
 15986  0105F0  D002               	goto	l11668
 15987                           
 15988                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 15989  0105F2  0E66               	movlw	102
 15990  0105F4  D001               	goto	L15
 15991  0105F6                     l11668:
 15992                           
 15993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 15994  0105F6  0E65               	movlw	101
 15995  0105F8                     L15:
 15996  0105F8  6E0C               	movwf	(btemp+11)^0,c
 15997                           
 15998                           ;stkvar	_nmode @ sp[(-56)+55]
 15999  0105FA  0EFF               	movlw	-1
 16000  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 16001  010602                     l11670:
 16002                           
 16003                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 16004                           ;stkvar	_p @ sp[(-56)+40]
 16005                           ;stkvar	_m @ sp[(-56)+48]
 16006  010602  0EF0               	movlw	-16
 16007  010604  006F FF8C  F001    	movff	plusw1,btemp
 16008  01060A  0EF8               	movlw	-8
 16009  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 16010  010612  0EF1               	movlw	-15
 16011  010614  006F FF8C  F001    	movff	plusw1,btemp
 16012  01061A  0EF9               	movlw	-7
 16013  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 16014                           
 16015                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 16016                           ;stkvar	_mode @ sp[(-56)+54]
 16017  010622  0EFE               	movlw	-2
 16018  010624  006F FF8C  F001    	movff	plusw1,btemp
 16019  01062A  0E67               	movlw	103
 16020  01062C  1801               	xorwf	btemp^0,w,c
 16021  01062E  A4D8               	btfss	status,2,c
 16022  010630  D00B               	goto	u10880
 16023                           
 16024                           ;stkvar	_nmode @ sp[(-56)+55]
 16025  010632  0EFF               	movlw	-1
 16026  010634  006F FF8C  F001    	movff	plusw1,btemp
 16027  01063A  0E66               	movlw	102
 16028  01063C  1801               	xorwf	btemp^0,w,c
 16029  01063E  A4D8               	btfss	status,2,c
 16030  010640  D014               	goto	l2183
 16031                           
 16032                           ;stkvar	_e @ sp[(-56)+34]
 16033  010642  0EEB               	movlw	-21
 16034  010644  AEE3               	btfss	plusw1,7,c
 16035  010646  D011               	goto	l2183
 16036  010648                     u10880:
 16037                           
 16038                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 16039                           ;stkvar	_m @ sp[(-56)+48]
 16040  010648  0EF8               	movlw	-8
 16041  01064A  50E3               	movf	plusw1,w,c
 16042  01064C  0F01               	addlw	1
 16043  01064E  6E01               	movwf	btemp^0,c
 16044  010650  0EF8               	movlw	-8
 16045  010652  0060  F007  FFE3   	movff	btemp,plusw1
 16046  010658  6A01               	clrf	btemp^0,c
 16047  01065A  0EF9               	movlw	-7
 16048  01065C  50E3               	movf	plusw1,w,c
 16049  01065E  2001               	addwfc	btemp^0,w,c
 16050  010660  6E01               	movwf	btemp^0,c
 16051  010662  0EF9               	movlw	-7
 16052  010664  0060  F007  FFE3   	movff	btemp,plusw1
 16053  01066A                     l2183:
 16054                           
 16055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 16056                           ;stkvar	_nmode @ sp[(-56)+55]
 16057  01066A  0EFF               	movlw	-1
 16058  01066C  006F FF8C  F001    	movff	plusw1,btemp
 16059  010672  0E66               	movlw	102
 16060  010674  1801               	xorwf	btemp^0,w,c
 16061  010676  A4D8               	btfss	status,2,c
 16062  010678  D03B               	goto	l11690
 16063                           
 16064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 16065                           ;stkvar	_e @ sp[(-56)+34]
 16066  01067A  0EEB               	movlw	-21
 16067  01067C  AEE3               	btfss	plusw1,7,c
 16068  01067E  D01C               	goto	l11686
 16069                           
 16070                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 16071  010680  0E00               	movlw	0
 16072  010682  6E09               	movwf	(btemp+8)^0,c
 16073  010684  0E00               	movlw	0
 16074  010686  6E0A               	movwf	(btemp+9)^0,c
 16075  010688  0E80               	movlw	128
 16076  01068A  6E0B               	movwf	(btemp+10)^0,c
 16077  01068C  0E3F               	movlw	63
 16078  01068E  6E0C               	movwf	(btemp+11)^0,c
 16079                           
 16080                           ;stkvar	_u @ sp[(-56)+12]
 16081  010690  0ED4               	movlw	-44
 16082  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 16083  010698  0ED5               	movlw	-43
 16084  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16085  0106A0  0ED6               	movlw	-42
 16086  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16087  0106A8  0ED7               	movlw	-41
 16088  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 16089                           
 16090                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 16091                           ;stkvar	_e @ sp[(-56)+34]
 16092  0106B0  0EEA               	movlw	-22
 16093  0106B2  6AE3               	clrf	plusw1,c
 16094  0106B4  0EEB               	movlw	-21
 16095  0106B6  6AE3               	clrf	plusw1,c
 16096  0106B8                     l11686:
 16097                           
 16098                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 16099                           ;stkvar	_mode @ sp[(-56)+54]
 16100  0106B8  0EFE               	movlw	-2
 16101  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 16102  0106C0  0E67               	movlw	103
 16103  0106C2  1801               	xorwf	btemp^0,w,c
 16104  0106C4  B4D8               	btfsc	status,2,c
 16105  0106C6  D014               	goto	l11690
 16106                           
 16107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 16108                           ;stkvar	_e @ sp[(-56)+34]
 16109                           ;stkvar	_m @ sp[(-56)+48]
 16110  0106C8  0EF8               	movlw	-8
 16111  0106CA  50E3               	movf	plusw1,w,c
 16112  0106CC  6E01               	movwf	btemp^0,c
 16113  0106CE  0EEA               	movlw	-22
 16114  0106D0  50E3               	movf	plusw1,w,c
 16115  0106D2  2601               	addwf	btemp^0,f,c
 16116  0106D4  0EF8               	movlw	-8
 16117  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 16118  0106DC  0EF9               	movlw	-7
 16119  0106DE  50E3               	movf	plusw1,w,c
 16120  0106E0  6E01               	movwf	btemp^0,c
 16121  0106E2  0EEB               	movlw	-21
 16122  0106E4  50E3               	movf	plusw1,w,c
 16123  0106E6  2201               	addwfc	btemp^0,f,c
 16124  0106E8  0EF9               	movlw	-7
 16125  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 16126  0106F0                     l11690:
 16127                           
 16128                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 16129                           ;stkvar	_i @ sp[(-56)+36]
 16130  0106F0  0EEC               	movlw	-20
 16131  0106F2  6AE3               	clrf	plusw1,c
 16132  0106F4  0EED               	movlw	-19
 16133  0106F6  6AE3               	clrf	plusw1,c
 16134                           
 16135                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 16136                           ;stkvar	_g @ sp[(-56)+16]
 16137  0106F8  0ED8               	movlw	-40
 16138  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 16139  010700  0ED9               	movlw	-39
 16140  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 16141  010708  0EDA               	movlw	-38
 16142  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 16143  010710  0EDB               	movlw	-37
 16144  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 16145                           
 16146                           ;stkvar	_h @ sp[(-56)+24]
 16147  010718  0EE0               	movlw	-32
 16148  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 16149  010720  0EE1               	movlw	-31
 16150  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16151  010728  0EE2               	movlw	-30
 16152  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16153  010730  0EE3               	movlw	-29
 16154  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 16155                           
 16156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 16157                           ;stkvar	_u @ sp[(-56)+12]
 16158  010738  0ED4               	movlw	-44
 16159  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 16160  010740  0ED5               	movlw	-43
 16161  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 16162  010748  0ED6               	movlw	-42
 16163  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 16164  010750  0ED7               	movlw	-41
 16165  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 16166                           
 16167                           ;stkvar	_ou @ sp[(-56)+28]
 16168  010758  0EE4               	movlw	-28
 16169  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 16170  010760  0EE5               	movlw	-27
 16171  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16172  010768  0EE6               	movlw	-26
 16173  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16174  010770  0EE7               	movlw	-25
 16175  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 16176                           
 16177                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16178  010778  D0D6               	goto	l11706
 16179  01077A                     l11696:
 16180                           
 16181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 16182                           ;stkvar	_u @ sp[(-56)+12]
 16183  01077A  0ED4               	movlw	-44
 16184  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 16185  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 16186  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 16187  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 16188                           
 16189                           ;stkvar	_h @ sp[(-60)+24]
 16190  010794  0EDC               	movlw	-36
 16191  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 16192  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 16193  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16194  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16195  0107AE  EC6B  F0A4         	call	___fldiv	;wreg free
 16196  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 16197  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16198  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16199  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 16200  0107CA  EC6C  F0AF         	call	_floorf	;wreg free
 16201                           
 16202                           ;stkvar	_l @ sp[(-56)+20]
 16203  0107CE  0EDC               	movlw	-36
 16204  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 16205  0107D6  0EDD               	movlw	-35
 16206  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16207  0107DE  0EDE               	movlw	-34
 16208  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16209  0107E6  0EDF               	movlw	-33
 16210  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 16211                           
 16212                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 16213                           ;stkvar	_l @ sp[(-56)+20]
 16214  0107EE  0EDC               	movlw	-36
 16215  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 16216  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 16217  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 16218  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 16219  010808  EC11  F0C2         	call	___fltol	;wreg free
 16220  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 16221  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 16222                           
 16223                           ;stkvar	_d @ sp[(-56)+44]
 16224  010818  0EF4               	movlw	-12
 16225  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16226  010820  0EF5               	movlw	-11
 16227  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 16228                           
 16229                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 16230                           ;stkvar	_u @ sp[(-56)+12]
 16231  010828  0ED4               	movlw	-44
 16232  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 16233  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 16234  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 16235  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 16236                           
 16237                           ;stkvar	_l @ sp[(-60)+20]
 16238  010842  0ED8               	movlw	-40
 16239  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 16240  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 16241  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 16242  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 16243  01085C  ECED  F098         	call	___flmul	;wreg free
 16244  010860  0060  F007  FFE6   	movff	btemp,postinc1
 16245  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16246  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16247  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 16248                           
 16249                           ;stkvar	_h @ sp[(-60)+24]
 16250  010878  0EDC               	movlw	-36
 16251  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 16252  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 16253  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 16254  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 16255  010892  EC51  F0D5         	call	___flsub	;wreg free
 16256                           
 16257                           ;stkvar	_h @ sp[(-56)+24]
 16258  010896  0EE0               	movlw	-32
 16259  010898  0060  F007  FFE3   	movff	btemp,plusw1
 16260  01089E  0EE1               	movlw	-31
 16261  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16262  0108A6  0EE2               	movlw	-30
 16263  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16264  0108AE  0EE3               	movlw	-29
 16265  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 16266                           
 16267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 16268  0108B6  0E00               	movlw	0
 16269  0108B8  6EE6               	movwf	postinc1,c
 16270  0108BA  0E00               	movlw	0
 16271  0108BC  6EE6               	movwf	postinc1,c
 16272  0108BE  0E20               	movlw	32
 16273  0108C0  6EE6               	movwf	postinc1,c
 16274  0108C2  0E41               	movlw	65
 16275  0108C4  6EE6               	movwf	postinc1,c
 16276                           
 16277                           ;stkvar	_u @ sp[(-60)+12]
 16278  0108C6  0ED0               	movlw	-48
 16279  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16280  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 16281  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16282  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 16283  0108E0  EC6B  F0A4         	call	___fldiv	;wreg free
 16284                           
 16285                           ;stkvar	_u @ sp[(-56)+12]
 16286  0108E4  0ED4               	movlw	-44
 16287  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 16288  0108EC  0ED5               	movlw	-43
 16289  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16290  0108F4  0ED6               	movlw	-42
 16291  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16292  0108FC  0ED7               	movlw	-41
 16293  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 16294                           
 16295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 16296                           ;stkvar	_i @ sp[(-56)+36]
 16297  010904  0EEC               	movlw	-20
 16298  010906  50E3               	movf	plusw1,w,c
 16299  010908  0F01               	addlw	1
 16300  01090A  6E01               	movwf	btemp^0,c
 16301  01090C  0EEC               	movlw	-20
 16302  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 16303  010914  6A01               	clrf	btemp^0,c
 16304  010916  0EED               	movlw	-19
 16305  010918  50E3               	movf	plusw1,w,c
 16306  01091A  2001               	addwfc	btemp^0,w,c
 16307  01091C  6E01               	movwf	btemp^0,c
 16308  01091E  0EED               	movlw	-19
 16309  010920  0060  F007  FFE3   	movff	btemp,plusw1
 16310  010926                     l11706:
 16311                           
 16312                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16313                           ;stkvar	_m @ sp[(-56)+48]
 16314                           ;stkvar	_i @ sp[(-56)+36]
 16315  010926  50E1               	movf	fsr1l,w,c
 16316  010928  0FEC               	addlw	-20
 16317  01092A  6ED9               	movwf	fsr2l,c
 16318  01092C  50E2               	movf	fsr1h,w,c
 16319  01092E  6EDA               	movwf	fsr2h,c
 16320  010930  0EFF               	movlw	255
 16321  010932  22DA               	addwfc	fsr2h,f,c
 16322  010934  0EF8               	movlw	-8
 16323  010936  50E3               	movf	plusw1,w,c
 16324  010938  5CDE               	subwf	postinc2,w,c
 16325  01093A  50DE               	movf	postinc2,w,c
 16326  01093C  0A80               	xorlw	128
 16327  01093E  6E01               	movwf	btemp^0,c
 16328  010940  0EF9               	movlw	-7
 16329  010942  50E3               	movf	plusw1,w,c
 16330  010944  0A80               	xorlw	128
 16331  010946  5801               	subwfb	btemp^0,w,c
 16332  010948  A0D8               	btfss	status,0,c
 16333  01094A  D717               	goto	l11696
 16334                           
 16335                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 16336  01094C  0E00               	movlw	0
 16337  01094E  6EE6               	movwf	postinc1,c
 16338  010950  0E00               	movlw	0
 16339  010952  6EE6               	movwf	postinc1,c
 16340  010954  0EA0               	movlw	160
 16341  010956  6EE6               	movwf	postinc1,c
 16342  010958  0E40               	movlw	64
 16343  01095A  6EE6               	movwf	postinc1,c
 16344                           
 16345                           ;stkvar	_u @ sp[(-60)+12]
 16346  01095C  0ED0               	movlw	-48
 16347  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 16348  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 16349  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 16350  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 16351  010976  ECED  F098         	call	___flmul	;wreg free
 16352                           
 16353                           ;stkvar	_l @ sp[(-56)+20]
 16354  01097A  0EDC               	movlw	-36
 16355  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 16356  010982  0EDD               	movlw	-35
 16357  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16358  01098A  0EDE               	movlw	-34
 16359  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16360  010992  0EDF               	movlw	-33
 16361  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 16362                           
 16363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 16364                           ;stkvar	_l @ sp[(-56)+20]
 16365  01099A  0EDC               	movlw	-36
 16366  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 16367  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16368  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16369  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 16370                           
 16371                           ;stkvar	_h @ sp[(-60)+24]
 16372  0109B4  0EDC               	movlw	-36
 16373  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 16374  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 16375  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 16376  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16377  0109CE  EC82  F0C3         	call	___flge	;wreg free
 16378  0109D2  A001               	btfss	btemp& (0+255),0,c
 16379  0109D4  D021               	goto	u10950
 16380                           
 16381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 16382                           ;stkvar	_l @ sp[(-56)+20]
 16383                           
 16384                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 16385                           
 16386                           ;stkvar	_l @ sp[(-56)+20]
 16387                           
 16388                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 16389  0109D6  0EDC               	movlw	-36
 16390  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 16391  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 16392  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 16393  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 16394                           
 16395                           ;stkvar	_h @ sp[(-60)+24]
 16396  0109F0  0EDC               	movlw	-36
 16397  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 16398  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 16399  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 16400  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 16401  010A0A  ECEC  F0CC         	call	___fleq	;wreg free
 16402  010A0E  A001               	btfss	btemp& (0+255),0,c
 16403  010A10  D01B               	goto	l11720
 16404                           
 16405                           ;stkvar	_d @ sp[(-56)+44]
 16406  010A12  0EF4               	movlw	-12
 16407  010A14  B0E3               	btfsc	plusw1,0,c
 16408  010A16  D018               	goto	l11720
 16409  010A18                     u10950:
 16410                           
 16411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 16412  010A18  0E00               	movlw	0
 16413  010A1A  6E09               	movwf	(btemp+8)^0,c
 16414  010A1C  0E00               	movlw	0
 16415  010A1E  6E0A               	movwf	(btemp+9)^0,c
 16416  010A20  0E00               	movlw	0
 16417  010A22  6E0B               	movwf	(btemp+10)^0,c
 16418  010A24  0E00               	movlw	0
 16419  010A26  6E0C               	movwf	(btemp+11)^0,c
 16420                           
 16421                           ;stkvar	_l @ sp[(-56)+20]
 16422  010A28  0EDC               	movlw	-36
 16423  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 16424  010A30  0EDD               	movlw	-35
 16425  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16426  010A38  0EDE               	movlw	-34
 16427  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16428  010A40  0EDF               	movlw	-33
 16429  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 16430  010A48                     l11720:
 16431                           
 16432                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 16433                           ;stkvar	_l @ sp[(-56)+20]
 16434  010A48  0EDC               	movlw	-36
 16435  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 16436  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 16437  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 16438  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 16439                           
 16440                           ;stkvar	_g @ sp[(-60)+16]
 16441  010A62  0ED4               	movlw	-44
 16442  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 16443  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 16444  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 16445  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 16446  010A7C  EC02  F09D         	call	___fladd	;wreg free
 16447                           
 16448                           ;stkvar	_h @ sp[(-56)+24]
 16449  010A80  0EE0               	movlw	-32
 16450  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 16451  010A88  0EE1               	movlw	-31
 16452  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16453  010A90  0EE2               	movlw	-30
 16454  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16455  010A98  0EE3               	movlw	-29
 16456  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 16457                           
 16458                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 16459                           ;stkvar	_ou @ sp[(-56)+28]
 16460  010AA0  0EE4               	movlw	-28
 16461  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 16462  010AA8  0EE5               	movlw	-27
 16463  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 16464  010AB0  0EE6               	movlw	-26
 16465  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 16466  010AB8  0EE7               	movlw	-25
 16467  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 16468                           
 16469                           ;stkvar	_u @ sp[(-56)+12]
 16470  010AC0  0ED4               	movlw	-44
 16471  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 16472  010AC8  0ED5               	movlw	-43
 16473  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16474  010AD0  0ED6               	movlw	-42
 16475  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16476  010AD8  0ED7               	movlw	-41
 16477  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 16478                           
 16479                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 16480                           ;stkvar	_nmode @ sp[(-56)+55]
 16481  010AE0  0EFF               	movlw	-1
 16482  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 16483  010AE8  0E65               	movlw	101
 16484  010AEA  1801               	xorwf	btemp^0,w,c
 16485  010AEC  B4D8               	btfsc	status,2,c
 16486  010AEE  D011               	goto	l11728
 16487                           
 16488                           ;stkvar	_e @ sp[(-56)+34]
 16489                           ;stkvar	_ne @ sp[(-56)+46]
 16490  010AF0  0EEA               	movlw	-22
 16491  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 16492  010AF8  0EF6               	movlw	-10
 16493  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 16494  010B00  0EEB               	movlw	-21
 16495  010B02  006F FF8C  F001    	movff	plusw1,btemp
 16496  010B08  0EF7               	movlw	-9
 16497  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 16498  010B10  D004               	goto	l2198
 16499  010B12                     l11728:
 16500                           
 16501                           ;stkvar	_ne @ sp[(-56)+46]
 16502  010B12  0EF6               	movlw	-10
 16503  010B14  6AE3               	clrf	plusw1,c
 16504  010B16  0EF7               	movlw	-9
 16505  010B18  6AE3               	clrf	plusw1,c
 16506  010B1A                     l2198:
 16507                           
 16508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 16509                           ;stkvar	_pp @ sp[(-56)+50]
 16510  010B1A  0EFA               	movlw	-6
 16511  010B1C  6AE3               	clrf	plusw1,c
 16512  010B1E  0EFB               	movlw	-5
 16513  010B20  6AE3               	clrf	plusw1,c
 16514                           
 16515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 16516                           ;stkvar	_t @ sp[(-56)+52]
 16517  010B22  0EFC               	movlw	-4
 16518  010B24  6AE3               	clrf	plusw1,c
 16519  010B26  0EFD               	movlw	-3
 16520  010B28  6AE3               	clrf	plusw1,c
 16521                           
 16522                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 16523                           ;stkvar	_i @ sp[(-56)+36]
 16524  010B2A  0EEC               	movlw	-20
 16525  010B2C  6AE3               	clrf	plusw1,c
 16526  010B2E  0EED               	movlw	-19
 16527  010B30  6AE3               	clrf	plusw1,c
 16528                           
 16529                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 16530  010B32  D1B7               	goto	l11780
 16531  010B34                     l11730:
 16532                           
 16533                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 16534                           ;stkvar	_u @ sp[(-56)+12]
 16535  010B34  0ED4               	movlw	-44
 16536  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 16537  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 16538  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 16539  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 16540                           
 16541                           ;stkvar	_h @ sp[(-60)+24]
 16542  010B4E  0EDC               	movlw	-36
 16543  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 16544  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 16545  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 16546  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 16547  010B68  EC6B  F0A4         	call	___fldiv	;wreg free
 16548  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 16549  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16550  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16551  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 16552  010B84  EC6C  F0AF         	call	_floorf	;wreg free
 16553                           
 16554                           ;stkvar	_l @ sp[(-56)+20]
 16555  010B88  0EDC               	movlw	-36
 16556  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 16557  010B90  0EDD               	movlw	-35
 16558  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16559  010B98  0EDE               	movlw	-34
 16560  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16561  010BA0  0EDF               	movlw	-33
 16562  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 16563                           
 16564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 16565                           ;stkvar	_l @ sp[(-56)+20]
 16566  010BA8  0EDC               	movlw	-36
 16567  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 16568  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 16569  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 16570  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 16571  010BC2  EC11  F0C2         	call	___fltol	;wreg free
 16572  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 16573  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 16574                           
 16575                           ;stkvar	_d @ sp[(-56)+44]
 16576  010BD2  0EF4               	movlw	-12
 16577  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16578  010BDA  0EF5               	movlw	-11
 16579  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 16580                           
 16581                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 16582  010BE2  B825               	btfsc	_flags^0,4,c
 16583  010BE4  D026               	goto	l11744
 16584                           
 16585                           ;stkvar	_d @ sp[(-56)+44]
 16586  010BE6  0EF4               	movlw	-12
 16587  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 16588  010BEE  0EF5               	movlw	-11
 16589  010BF0  50E3               	movf	plusw1,w,c
 16590  010BF2  1001               	iorwf	btemp^0,w,c
 16591  010BF4  A4D8               	btfss	status,2,c
 16592  010BF6  D01D               	goto	l11744
 16593                           
 16594                           ;stkvar	_mode @ sp[(-56)+54]
 16595  010BF8  0EFE               	movlw	-2
 16596  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 16597  010C00  0E67               	movlw	103
 16598  010C02  1801               	xorwf	btemp^0,w,c
 16599  010C04  A4D8               	btfss	status,2,c
 16600  010C06  D015               	goto	l11744
 16601                           
 16602                           ;stkvar	_ne @ sp[(-56)+46]
 16603  010C08  0EF7               	movlw	-9
 16604  010C0A  AEE3               	btfss	plusw1,7,c
 16605  010C0C  D012               	goto	l11744
 16606                           
 16607                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 16608                           ;stkvar	_t @ sp[(-56)+52]
 16609  010C0E  0EFC               	movlw	-4
 16610  010C10  50E3               	movf	plusw1,w,c
 16611  010C12  0F01               	addlw	1
 16612  010C14  6E01               	movwf	btemp^0,c
 16613  010C16  0EFC               	movlw	-4
 16614  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 16615  010C1E  6A01               	clrf	btemp^0,c
 16616  010C20  0EFD               	movlw	-3
 16617  010C22  50E3               	movf	plusw1,w,c
 16618  010C24  2001               	addwfc	btemp^0,w,c
 16619  010C26  6E01               	movwf	btemp^0,c
 16620  010C28  0EFD               	movlw	-3
 16621  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 16622                           
 16623                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 16624  010C30  D0AF               	goto	l11772
 16625  010C32                     l11744:
 16626                           
 16627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 16628                           ;stkvar	_pp @ sp[(-56)+50]
 16629  010C32  0EFA               	movlw	-6
 16630  010C34  006F FF8C  F001    	movff	plusw1,btemp
 16631  010C3A  0EFB               	movlw	-5
 16632  010C3C  50E3               	movf	plusw1,w,c
 16633  010C3E  1001               	iorwf	btemp^0,w,c
 16634  010C40  A4D8               	btfss	status,2,c
 16635  010C42  D070               	goto	l11764
 16636                           
 16637                           ;stkvar	_ne @ sp[(-56)+46]
 16638  010C44  0EF7               	movlw	-9
 16639  010C46  AEE3               	btfss	plusw1,7,c
 16640  010C48  D06D               	goto	l11764
 16641                           
 16642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 16643                           ;stkvar	_n @ sp[(-56)+32]
 16644  010C4A  0EE8               	movlw	-24
 16645  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 16646  010C52  0EE9               	movlw	-23
 16647  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 16648  010C5A  0E94               	movlw	low _dbuf
 16649  010C5C  240B               	addwf	(btemp+10)^0,w,c
 16650  010C5E  6ED9               	movwf	fsr2l,c
 16651  010C60  0E03               	movlw	high _dbuf
 16652  010C62  200C               	addwfc	(btemp+11)^0,w,c
 16653  010C64  6EDA               	movwf	fsr2h,c
 16654  010C66  0E2E               	movlw	46
 16655  010C68  6EDF               	movwf	indf2,c
 16656                           
 16657                           ;stkvar	_n @ sp[(-56)+32]
 16658  010C6A  0EE8               	movlw	-24
 16659  010C6C  50E3               	movf	plusw1,w,c
 16660  010C6E  0F01               	addlw	1
 16661  010C70  6E01               	movwf	btemp^0,c
 16662  010C72  0EE8               	movlw	-24
 16663  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 16664  010C7A  6A01               	clrf	btemp^0,c
 16665  010C7C  0EE9               	movlw	-23
 16666  010C7E  50E3               	movf	plusw1,w,c
 16667  010C80  2001               	addwfc	btemp^0,w,c
 16668  010C82  6E01               	movwf	btemp^0,c
 16669  010C84  0EE9               	movlw	-23
 16670  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 16671                           
 16672                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 16673                           ;stkvar	_w @ sp[(-56)+38]
 16674  010C8C  50E1               	movf	fsr1l,w,c
 16675  010C8E  0FEE               	addlw	-18
 16676  010C90  6ED9               	movwf	fsr2l,c
 16677  010C92  50E2               	movf	fsr1h,w,c
 16678  010C94  6EDA               	movwf	fsr2h,c
 16679  010C96  0EFF               	movlw	255
 16680  010C98  22DA               	addwfc	fsr2h,f,c
 16681  010C9A  06DE               	decf	postinc2,f,c
 16682  010C9C  0E00               	movlw	0
 16683  010C9E  5ADD               	subwfb	postdec2,f,c
 16684                           
 16685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 16686  010CA0  0E01               	movlw	1
 16687  010CA2  6E0B               	movwf	(btemp+10)^0,c
 16688  010CA4  0E00               	movlw	0
 16689  010CA6  6E0C               	movwf	(btemp+11)^0,c
 16690                           
 16691                           ;stkvar	_pp @ sp[(-56)+50]
 16692  010CA8  0EFA               	movlw	-6
 16693  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16694  010CB0  0EFB               	movlw	-5
 16695  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 16696  010CB8  D035               	goto	l11764
 16697  010CBA                     l11756:
 16698                           
 16699                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 16700                           ;stkvar	_n @ sp[(-56)+32]
 16701  010CBA  0EE8               	movlw	-24
 16702  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 16703  010CC2  0EE9               	movlw	-23
 16704  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 16705  010CCA  0E94               	movlw	low _dbuf
 16706  010CCC  240B               	addwf	(btemp+10)^0,w,c
 16707  010CCE  6ED9               	movwf	fsr2l,c
 16708  010CD0  0E03               	movlw	high _dbuf
 16709  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 16710  010CD4  6EDA               	movwf	fsr2h,c
 16711  010CD6  0E30               	movlw	48
 16712  010CD8  6EDF               	movwf	indf2,c
 16713                           
 16714                           ;stkvar	_n @ sp[(-56)+32]
 16715  010CDA  0EE8               	movlw	-24
 16716  010CDC  50E3               	movf	plusw1,w,c
 16717  010CDE  0F01               	addlw	1
 16718  010CE0  6E01               	movwf	btemp^0,c
 16719  010CE2  0EE8               	movlw	-24
 16720  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 16721  010CEA  6A01               	clrf	btemp^0,c
 16722  010CEC  0EE9               	movlw	-23
 16723  010CEE  50E3               	movf	plusw1,w,c
 16724  010CF0  2001               	addwfc	btemp^0,w,c
 16725  010CF2  6E01               	movwf	btemp^0,c
 16726  010CF4  0EE9               	movlw	-23
 16727  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 16728                           
 16729                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 16730                           ;stkvar	_w @ sp[(-56)+38]
 16731  010CFC  50E1               	movf	fsr1l,w,c
 16732  010CFE  0FEE               	addlw	-18
 16733  010D00  6ED9               	movwf	fsr2l,c
 16734  010D02  50E2               	movf	fsr1h,w,c
 16735  010D04  6EDA               	movwf	fsr2h,c
 16736  010D06  0EFF               	movlw	255
 16737  010D08  22DA               	addwfc	fsr2h,f,c
 16738  010D0A  06DE               	decf	postinc2,f,c
 16739  010D0C  0E00               	movlw	0
 16740  010D0E  5ADD               	subwfb	postdec2,f,c
 16741                           
 16742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 16743                           ;stkvar	_t @ sp[(-56)+52]
 16744  010D10  50E1               	movf	fsr1l,w,c
 16745  010D12  0FFC               	addlw	-4
 16746  010D14  6ED9               	movwf	fsr2l,c
 16747  010D16  50E2               	movf	fsr1h,w,c
 16748  010D18  6EDA               	movwf	fsr2h,c
 16749  010D1A  0EFF               	movlw	255
 16750  010D1C  22DA               	addwfc	fsr2h,f,c
 16751  010D1E  06DE               	decf	postinc2,f,c
 16752  010D20  0E00               	movlw	0
 16753  010D22  5ADD               	subwfb	postdec2,f,c
 16754  010D24                     l11764:
 16755                           
 16756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 16757                           ;stkvar	_t @ sp[(-56)+52]
 16758  010D24  0EFC               	movlw	-4
 16759  010D26  006F FF8C  F001    	movff	plusw1,btemp
 16760  010D2C  0EFD               	movlw	-3
 16761  010D2E  50E3               	movf	plusw1,w,c
 16762  010D30  1001               	iorwf	btemp^0,w,c
 16763  010D32  A4D8               	btfss	status,2,c
 16764  010D34  D7C2               	goto	l11756
 16765                           
 16766                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 16767                           ;stkvar	_n @ sp[(-56)+32]
 16768  010D36  0EE8               	movlw	-24
 16769  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 16770  010D3E  0EE9               	movlw	-23
 16771  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 16772  010D46  0E94               	movlw	low _dbuf
 16773  010D48  240B               	addwf	(btemp+10)^0,w,c
 16774  010D4A  6ED9               	movwf	fsr2l,c
 16775  010D4C  0E03               	movlw	high _dbuf
 16776  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 16777  010D50  6EDA               	movwf	fsr2h,c
 16778                           
 16779                           ;stkvar	_d @ sp[(-56)+44]
 16780  010D52  0EF4               	movlw	-12
 16781  010D54  50E3               	movf	plusw1,w,c
 16782  010D56  0F30               	addlw	48
 16783  010D58  6EDF               	movwf	indf2,c
 16784                           
 16785                           ;stkvar	_n @ sp[(-56)+32]
 16786  010D5A  0EE8               	movlw	-24
 16787  010D5C  50E3               	movf	plusw1,w,c
 16788  010D5E  0F01               	addlw	1
 16789  010D60  6E01               	movwf	btemp^0,c
 16790  010D62  0EE8               	movlw	-24
 16791  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 16792  010D6A  6A01               	clrf	btemp^0,c
 16793  010D6C  0EE9               	movlw	-23
 16794  010D6E  50E3               	movf	plusw1,w,c
 16795  010D70  2001               	addwfc	btemp^0,w,c
 16796  010D72  6E01               	movwf	btemp^0,c
 16797  010D74  0EE9               	movlw	-23
 16798  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 16799                           
 16800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 16801                           ;stkvar	_w @ sp[(-56)+38]
 16802  010D7C  50E1               	movf	fsr1l,w,c
 16803  010D7E  0FEE               	addlw	-18
 16804  010D80  6ED9               	movwf	fsr2l,c
 16805  010D82  50E2               	movf	fsr1h,w,c
 16806  010D84  6EDA               	movwf	fsr2h,c
 16807  010D86  0EFF               	movlw	255
 16808  010D88  22DA               	addwfc	fsr2h,f,c
 16809  010D8A  06DE               	decf	postinc2,f,c
 16810  010D8C  0E00               	movlw	0
 16811  010D8E  5ADD               	subwfb	postdec2,f,c
 16812  010D90                     l11772:
 16813                           
 16814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 16815                           ;stkvar	_u @ sp[(-56)+12]
 16816  010D90  0ED4               	movlw	-44
 16817  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 16818  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 16819  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 16820  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 16821                           
 16822                           ;stkvar	_l @ sp[(-60)+20]
 16823  010DAA  0ED8               	movlw	-40
 16824  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 16825  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 16826  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 16827  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 16828  010DC4  ECED  F098         	call	___flmul	;wreg free
 16829  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 16830  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16831  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16832  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 16833                           
 16834                           ;stkvar	_h @ sp[(-60)+24]
 16835  010DE0  0EDC               	movlw	-36
 16836  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 16837  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 16838  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 16839  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 16840  010DFA  EC51  F0D5         	call	___flsub	;wreg free
 16841                           
 16842                           ;stkvar	_h @ sp[(-56)+24]
 16843  010DFE  0EE0               	movlw	-32
 16844  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 16845  010E06  0EE1               	movlw	-31
 16846  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16847  010E0E  0EE2               	movlw	-30
 16848  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16849  010E16  0EE3               	movlw	-29
 16850  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 16851                           
 16852                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 16853  010E1E  0E00               	movlw	0
 16854  010E20  6EE6               	movwf	postinc1,c
 16855  010E22  0E00               	movlw	0
 16856  010E24  6EE6               	movwf	postinc1,c
 16857  010E26  0E20               	movlw	32
 16858  010E28  6EE6               	movwf	postinc1,c
 16859  010E2A  0E41               	movlw	65
 16860  010E2C  6EE6               	movwf	postinc1,c
 16861                           
 16862                           ;stkvar	_u @ sp[(-60)+12]
 16863  010E2E  0ED0               	movlw	-48
 16864  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 16865  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 16866  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 16867  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 16868  010E48  EC6B  F0A4         	call	___fldiv	;wreg free
 16869                           
 16870                           ;stkvar	_u @ sp[(-56)+12]
 16871  010E4C  0ED4               	movlw	-44
 16872  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 16873  010E54  0ED5               	movlw	-43
 16874  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16875  010E5C  0ED6               	movlw	-42
 16876  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16877  010E64  0ED7               	movlw	-41
 16878  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 16879                           
 16880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 16881                           ;stkvar	_ne @ sp[(-56)+46]
 16882  010E6C  50E1               	movf	fsr1l,w,c
 16883  010E6E  0FF6               	addlw	-10
 16884  010E70  6ED9               	movwf	fsr2l,c
 16885  010E72  50E2               	movf	fsr1h,w,c
 16886  010E74  6EDA               	movwf	fsr2h,c
 16887  010E76  0EFF               	movlw	255
 16888  010E78  22DA               	addwfc	fsr2h,f,c
 16889  010E7A  06DE               	decf	postinc2,f,c
 16890  010E7C  0E00               	movlw	0
 16891  010E7E  5ADD               	subwfb	postdec2,f,c
 16892                           
 16893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 16894                           ;stkvar	_i @ sp[(-56)+36]
 16895  010E80  0EEC               	movlw	-20
 16896  010E82  50E3               	movf	plusw1,w,c
 16897  010E84  0F01               	addlw	1
 16898  010E86  6E01               	movwf	btemp^0,c
 16899  010E88  0EEC               	movlw	-20
 16900  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 16901  010E90  6A01               	clrf	btemp^0,c
 16902  010E92  0EED               	movlw	-19
 16903  010E94  50E3               	movf	plusw1,w,c
 16904  010E96  2001               	addwfc	btemp^0,w,c
 16905  010E98  6E01               	movwf	btemp^0,c
 16906  010E9A  0EED               	movlw	-19
 16907  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 16908  010EA2                     l11780:
 16909                           
 16910                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 16911                           ;stkvar	_m @ sp[(-56)+48]
 16912                           ;stkvar	_i @ sp[(-56)+36]
 16913  010EA2  50E1               	movf	fsr1l,w,c
 16914  010EA4  0FEC               	addlw	-20
 16915  010EA6  6ED9               	movwf	fsr2l,c
 16916  010EA8  50E2               	movf	fsr1h,w,c
 16917  010EAA  6EDA               	movwf	fsr2h,c
 16918  010EAC  0EFF               	movlw	255
 16919  010EAE  22DA               	addwfc	fsr2h,f,c
 16920  010EB0  0EF8               	movlw	-8
 16921  010EB2  50E3               	movf	plusw1,w,c
 16922  010EB4  5CDE               	subwf	postinc2,w,c
 16923  010EB6  50DE               	movf	postinc2,w,c
 16924  010EB8  0A80               	xorlw	128
 16925  010EBA  6E01               	movwf	btemp^0,c
 16926  010EBC  0EF9               	movlw	-7
 16927  010EBE  50E3               	movf	plusw1,w,c
 16928  010EC0  0A80               	xorlw	128
 16929  010EC2  5801               	subwfb	btemp^0,w,c
 16930  010EC4  B0D8               	btfsc	status,0,c
 16931  010EC6  D00E               	goto	u11050
 16932                           
 16933                           ;stkvar	_n @ sp[(-56)+32]
 16934  010EC8  0EE9               	movlw	-23
 16935  010ECA  BEE3               	btfsc	plusw1,7,c
 16936  010ECC  D633               	goto	l11730
 16937  010ECE  0EE9               	movlw	-23
 16938  010ED0  50E3               	movf	plusw1,w,c
 16939  010ED2  E108               	bnz	u11050
 16940  010ED4  0EE8               	movlw	-24
 16941  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 16942  010EDC  0E4B               	movlw	75
 16943  010EDE  5E01               	subwf	btemp^0,f,c
 16944  010EE0  A0D8               	btfss	status,0,c
 16945  010EE2  D628               	goto	l11730
 16946  010EE4                     u11050:
 16947                           
 16948                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 16949                           ;stkvar	_pp @ sp[(-56)+50]
 16950  010EE4  0EFA               	movlw	-6
 16951  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 16952  010EEC  0EFB               	movlw	-5
 16953  010EEE  50E3               	movf	plusw1,w,c
 16954  010EF0  1001               	iorwf	btemp^0,w,c
 16955  010EF2  B4D8               	btfsc	status,2,c
 16956  010EF4  A825               	btfss	_flags^0,4,c
 16957  010EF6  D021               	goto	l11792
 16958                           
 16959                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 16960                           ;stkvar	_n @ sp[(-56)+32]
 16961  010EF8  0EE8               	movlw	-24
 16962  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 16963  010F00  0EE9               	movlw	-23
 16964  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 16965  010F08  0E94               	movlw	low _dbuf
 16966  010F0A  240B               	addwf	(btemp+10)^0,w,c
 16967  010F0C  6ED9               	movwf	fsr2l,c
 16968  010F0E  0E03               	movlw	high _dbuf
 16969  010F10  200C               	addwfc	(btemp+11)^0,w,c
 16970  010F12  6EDA               	movwf	fsr2h,c
 16971  010F14  0E2E               	movlw	46
 16972  010F16  6EDF               	movwf	indf2,c
 16973                           
 16974                           ;stkvar	_n @ sp[(-56)+32]
 16975  010F18  0EE8               	movlw	-24
 16976  010F1A  50E3               	movf	plusw1,w,c
 16977  010F1C  0F01               	addlw	1
 16978  010F1E  6E01               	movwf	btemp^0,c
 16979  010F20  0EE8               	movlw	-24
 16980  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 16981  010F28  6A01               	clrf	btemp^0,c
 16982  010F2A  0EE9               	movlw	-23
 16983  010F2C  50E3               	movf	plusw1,w,c
 16984  010F2E  2001               	addwfc	btemp^0,w,c
 16985  010F30  6E01               	movwf	btemp^0,c
 16986  010F32  0EE9               	movlw	-23
 16987  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 16988  010F3A                     l11792:
 16989                           
 16990                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 16991                           ;stkvar	_n @ sp[(-56)+32]
 16992  010F3A  0EE8               	movlw	-24
 16993  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 16994  010F42  0EE9               	movlw	-23
 16995  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 16996  010F4A  0E94               	movlw	low _dbuf
 16997  010F4C  240B               	addwf	(btemp+10)^0,w,c
 16998  010F4E  6ED9               	movwf	fsr2l,c
 16999  010F50  0E03               	movlw	high _dbuf
 17000  010F52  200C               	addwfc	(btemp+11)^0,w,c
 17001  010F54  6EDA               	movwf	fsr2h,c
 17002  010F56  0E00               	movlw	0
 17003  010F58  6EDF               	movwf	indf2,c
 17004                           
 17005                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 17006                           ;stkvar	_nmode @ sp[(-56)+55]
 17007  010F5A  0EFF               	movlw	-1
 17008  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 17009  010F62  0E65               	movlw	101
 17010  010F64  1801               	xorwf	btemp^0,w,c
 17011  010F66  A4D8               	btfss	status,2,c
 17012  010F68  EF16  F081         	goto	l11596
 17013                           
 17014                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 17015  010F6C  0E4F               	movlw	79
 17016  010F6E  6E0B               	movwf	(btemp+10)^0,c
 17017  010F70  0E00               	movlw	0
 17018  010F72  6E0C               	movwf	(btemp+11)^0,c
 17019                           
 17020                           ;stkvar	_i @ sp[(-56)+36]
 17021  010F74  0EEC               	movlw	-20
 17022  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17023  010F7C  0EED               	movlw	-19
 17024  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17025                           
 17026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 17027                           ;stkvar	_i @ sp[(-56)+36]
 17028  010F84  0EEC               	movlw	-20
 17029  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 17030  010F8C  0EED               	movlw	-19
 17031  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17032  010F94  0E94               	movlw	low _dbuf
 17033  010F96  240B               	addwf	(btemp+10)^0,w,c
 17034  010F98  6ED9               	movwf	fsr2l,c
 17035  010F9A  0E03               	movlw	high _dbuf
 17036  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 17037  010F9E  6EDA               	movwf	fsr2h,c
 17038  010FA0  0E00               	movlw	0
 17039  010FA2  6EDF               	movwf	indf2,c
 17040                           
 17041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 17042                           ;stkvar	_sign @ sp[(-56)+42]
 17043  010FA4  0EF2               	movlw	-14
 17044  010FA6  6AE3               	clrf	plusw1,c
 17045  010FA8  0EF3               	movlw	-13
 17046  010FAA  6AE3               	clrf	plusw1,c
 17047                           
 17048                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 17049                           ;stkvar	_e @ sp[(-56)+34]
 17050  010FAC  0EEB               	movlw	-21
 17051  010FAE  AEE3               	btfss	plusw1,7,c
 17052  010FB0  D012               	goto	l11806
 17053                           
 17054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 17055  010FB2  0E01               	movlw	1
 17056  010FB4  6E0B               	movwf	(btemp+10)^0,c
 17057  010FB6  0E00               	movlw	0
 17058  010FB8  6E0C               	movwf	(btemp+11)^0,c
 17059                           
 17060                           ;stkvar	_sign @ sp[(-56)+42]
 17061  010FBA  0EF2               	movlw	-14
 17062  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17063  010FC2  0EF3               	movlw	-13
 17064  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 17065                           
 17066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 17067                           ;stkvar	_e @ sp[(-56)+34]
 17068                           ;stkvar	_e @ sp[(-56)+34]
 17069  010FCA  0EEA               	movlw	-22
 17070  010FCC  6CE3               	negf	plusw1,c
 17071  010FCE  0EEB               	movlw	-21
 17072  010FD0  1EE3               	comf	plusw1,f,c
 17073  010FD2  B0D8               	btfsc	status,0,c
 17074  010FD4  2AE3               	incf	plusw1,f,c
 17075  010FD6                     l11806:
 17076                           
 17077                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 17078  010FD6  0E02               	movlw	2
 17079  010FD8  6E0B               	movwf	(btemp+10)^0,c
 17080  010FDA  0E00               	movlw	0
 17081  010FDC  6E0C               	movwf	(btemp+11)^0,c
 17082                           
 17083                           ;stkvar	_p @ sp[(-56)+40]
 17084  010FDE  0EF0               	movlw	-16
 17085  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17086  010FE6  0EF1               	movlw	-15
 17087  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 17088                           
 17089                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17090  010FEE  D051               	goto	l11818
 17091  010FF0                     l11808:
 17092                           
 17093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 17094                           ;stkvar	_i @ sp[(-56)+36]
 17095  010FF0  50E1               	movf	fsr1l,w,c
 17096  010FF2  0FEC               	addlw	-20
 17097  010FF4  6ED9               	movwf	fsr2l,c
 17098  010FF6  50E2               	movf	fsr1h,w,c
 17099  010FF8  6EDA               	movwf	fsr2h,c
 17100  010FFA  0EFF               	movlw	255
 17101  010FFC  22DA               	addwfc	fsr2h,f,c
 17102  010FFE  06DE               	decf	postinc2,f,c
 17103  011000  0E00               	movlw	0
 17104  011002  5ADD               	subwfb	postdec2,f,c
 17105                           
 17106                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 17107                           ;stkvar	_i @ sp[(-56)+36]
 17108  011004  0EEC               	movlw	-20
 17109  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 17110  01100C  0EED               	movlw	-19
 17111  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17112  011014  0E94               	movlw	low _dbuf
 17113  011016  240B               	addwf	(btemp+10)^0,w,c
 17114  011018  6ED9               	movwf	fsr2l,c
 17115  01101A  0E03               	movlw	high _dbuf
 17116  01101C  200C               	addwfc	(btemp+11)^0,w,c
 17117  01101E  6EDA               	movwf	fsr2h,c
 17118  011020  0E0A               	movlw	10
 17119  011022  6EE6               	movwf	postinc1,c
 17120  011024  0E00               	movlw	0
 17121  011026  6EE6               	movwf	postinc1,c
 17122                           
 17123                           ;stkvar	_e @ sp[(-58)+34]
 17124  011028  0EE8               	movlw	-24
 17125  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 17126  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 17127  011036  ECF3  F0C7         	call	___awmod	;wreg free
 17128  01103A  5001               	movf	btemp^0,w,c
 17129  01103C  0F30               	addlw	48
 17130  01103E  6EDF               	movwf	indf2,c
 17131                           
 17132                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 17133  011040  0E0A               	movlw	10
 17134  011042  6EE6               	movwf	postinc1,c
 17135  011044  0E00               	movlw	0
 17136  011046  6EE6               	movwf	postinc1,c
 17137                           
 17138                           ;stkvar	_e @ sp[(-58)+34]
 17139  011048  0EE8               	movlw	-24
 17140  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 17141  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 17142  011056  ECE5  F0C4         	call	___awdiv	;wreg free
 17143                           
 17144                           ;stkvar	_e @ sp[(-56)+34]
 17145  01105A  0EEA               	movlw	-22
 17146  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 17147  011062  0EEB               	movlw	-21
 17148  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17149                           
 17150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 17151                           ;stkvar	_p @ sp[(-56)+40]
 17152  01106A  50E1               	movf	fsr1l,w,c
 17153  01106C  0FF0               	addlw	-16
 17154  01106E  6ED9               	movwf	fsr2l,c
 17155  011070  50E2               	movf	fsr1h,w,c
 17156  011072  6EDA               	movwf	fsr2h,c
 17157  011074  0EFF               	movlw	255
 17158  011076  22DA               	addwfc	fsr2h,f,c
 17159  011078  06DE               	decf	postinc2,f,c
 17160  01107A  0E00               	movlw	0
 17161  01107C  5ADD               	subwfb	postdec2,f,c
 17162                           
 17163                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 17164                           ;stkvar	_w @ sp[(-56)+38]
 17165  01107E  50E1               	movf	fsr1l,w,c
 17166  011080  0FEE               	addlw	-18
 17167  011082  6ED9               	movwf	fsr2l,c
 17168  011084  50E2               	movf	fsr1h,w,c
 17169  011086  6EDA               	movwf	fsr2h,c
 17170  011088  0EFF               	movlw	255
 17171  01108A  22DA               	addwfc	fsr2h,f,c
 17172  01108C  06DE               	decf	postinc2,f,c
 17173  01108E  0E00               	movlw	0
 17174  011090  5ADD               	subwfb	postdec2,f,c
 17175  011092                     l11818:
 17176                           
 17177                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17178                           ;stkvar	_e @ sp[(-56)+34]
 17179  011092  0EEA               	movlw	-22
 17180  011094  006F FF8C  F001    	movff	plusw1,btemp
 17181  01109A  0EEB               	movlw	-21
 17182  01109C  50E3               	movf	plusw1,w,c
 17183  01109E  1001               	iorwf	btemp^0,w,c
 17184  0110A0  A4D8               	btfss	status,2,c
 17185  0110A2  D7A6               	goto	l11808
 17186                           
 17187                           ;stkvar	_p @ sp[(-56)+40]
 17188  0110A4  0EF1               	movlw	-15
 17189  0110A6  BEE3               	btfsc	plusw1,7,c
 17190  0110A8  D007               	goto	u11110
 17191  0110AA  0EF1               	movlw	-15
 17192  0110AC  50E3               	movf	plusw1,w,c
 17193  0110AE  E1A0               	bnz	l11808
 17194  0110B0  0EF0               	movlw	-16
 17195  0110B2  04E3               	decf	plusw1,w,c
 17196  0110B4  B0D8               	btfsc	status,0,c
 17197  0110B6  D79C               	goto	l11808
 17198  0110B8                     u11110:
 17199                           
 17200                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 17201                           ;stkvar	_i @ sp[(-56)+36]
 17202  0110B8  50E1               	movf	fsr1l,w,c
 17203  0110BA  0FEC               	addlw	-20
 17204  0110BC  6ED9               	movwf	fsr2l,c
 17205  0110BE  50E2               	movf	fsr1h,w,c
 17206  0110C0  6EDA               	movwf	fsr2h,c
 17207  0110C2  0EFF               	movlw	255
 17208  0110C4  22DA               	addwfc	fsr2h,f,c
 17209  0110C6  06DE               	decf	postinc2,f,c
 17210  0110C8  0E00               	movlw	0
 17211  0110CA  5ADD               	subwfb	postdec2,f,c
 17212                           
 17213                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 17214                           ;stkvar	_sign @ sp[(-56)+42]
 17215  0110CC  0EF2               	movlw	-14
 17216  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 17217  0110D4  0EF3               	movlw	-13
 17218  0110D6  50E3               	movf	plusw1,w,c
 17219  0110D8  1001               	iorwf	btemp^0,w,c
 17220  0110DA  A4D8               	btfss	status,2,c
 17221  0110DC  D002               	goto	l11828
 17222  0110DE  0E2B               	movlw	43
 17223  0110E0  D001               	goto	L16
 17224  0110E2                     l11828:
 17225  0110E2  0E2D               	movlw	45
 17226  0110E4                     L16:
 17227  0110E4  6E0B               	movwf	(btemp+10)^0,c
 17228  0110E6  0E00               	movlw	0
 17229  0110E8  6E0C               	movwf	(btemp+11)^0,c
 17230                           
 17231                           ;stkvar	_efgtoa$5341 @ sp[(-56)+4]
 17232  0110EA  0ECC               	movlw	-52
 17233  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17234  0110F2  0ECD               	movlw	-51
 17235  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 17236                           
 17237                           ;stkvar	_efgtoa$5341 @ sp[(-56)+4]
 17238                           ;stkvar	_i @ sp[(-56)+36]
 17239  0110FA  0EEC               	movlw	-20
 17240  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 17241  011102  0EED               	movlw	-19
 17242  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 17243  01110A  0E94               	movlw	low _dbuf
 17244  01110C  240B               	addwf	(btemp+10)^0,w,c
 17245  01110E  6ED9               	movwf	fsr2l,c
 17246  011110  0E03               	movlw	high _dbuf
 17247  011112  200C               	addwfc	(btemp+11)^0,w,c
 17248  011114  6EDA               	movwf	fsr2h,c
 17249  011116  0ECC               	movlw	-52
 17250  011118  006F FF8F FFDF     	movff	plusw1,indf2
 17251                           
 17252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 17253                           ;stkvar	_w @ sp[(-56)+38]
 17254  01111E  50E1               	movf	fsr1l,w,c
 17255  011120  0FEE               	addlw	-18
 17256  011122  6ED9               	movwf	fsr2l,c
 17257  011124  50E2               	movf	fsr1h,w,c
 17258  011126  6EDA               	movwf	fsr2h,c
 17259  011128  0EFF               	movlw	255
 17260  01112A  22DA               	addwfc	fsr2h,f,c
 17261  01112C  06DE               	decf	postinc2,f,c
 17262  01112E  0E00               	movlw	0
 17263  011130  5ADD               	subwfb	postdec2,f,c
 17264                           
 17265                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 17266                           ;stkvar	_i @ sp[(-56)+36]
 17267  011132  50E1               	movf	fsr1l,w,c
 17268  011134  0FEC               	addlw	-20
 17269  011136  6ED9               	movwf	fsr2l,c
 17270  011138  50E2               	movf	fsr1h,w,c
 17271  01113A  6EDA               	movwf	fsr2h,c
 17272  01113C  0EFF               	movlw	255
 17273  01113E  22DA               	addwfc	fsr2h,f,c
 17274  011140  06DE               	decf	postinc2,f,c
 17275  011142  0E00               	movlw	0
 17276  011144  5ADD               	subwfb	postdec2,f,c
 17277  011146  0EBF               	movlw	191
 17278  011148  6E0B               	movwf	(btemp+10)^0,c
 17279  01114A  0EFF               	movlw	255
 17280  01114C  6E0C               	movwf	(btemp+11)^0,c
 17281                           
 17282                           ;stkvar	_c @ sp[(-56)+-7]
 17283  01114E  0EC1               	movlw	-63
 17284  011150  50E3               	movf	plusw1,w,c
 17285  011152  6E09               	movwf	(btemp+8)^0,c
 17286  011154  6A0A               	clrf	(btemp+9)^0,c
 17287  011156  500B               	movf	(btemp+10)^0,w,c
 17288  011158  2609               	addwf	(btemp+8)^0,f,c
 17289  01115A  500C               	movf	(btemp+11)^0,w,c
 17290  01115C  220A               	addwfc	(btemp+9)^0,f,c
 17291  01115E  500A               	movf	(btemp+9)^0,w,c
 17292  011160  E106               	bnz	u11130
 17293  011162  0E1A               	movlw	26
 17294  011164  5C09               	subwf	(btemp+8)^0,w,c
 17295  011166  B0D8               	btfsc	status,0,c
 17296  011168  D002               	goto	u11130
 17297  01116A  0E01               	movlw	1
 17298  01116C  D001               	goto	u11140
 17299  01116E                     u11130:
 17300  01116E  0E00               	movlw	0
 17301  011170                     u11140:
 17302  011170  6E0B               	movwf	(btemp+10)^0,c
 17303  011172  6A0C               	clrf	(btemp+11)^0,c
 17304                           
 17305                           ;stkvar	_efgtoa$5343 @ sp[(-56)+0]
 17306  011174  0EC8               	movlw	-56
 17307  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17308  01117C  0EC9               	movlw	-55
 17309  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17310                           
 17311                           ;stkvar	_efgtoa$5343 @ sp[(-56)+0]
 17312  011184  0EC8               	movlw	-56
 17313  011186  006F FF8C  F001    	movff	plusw1,btemp
 17314  01118C  0EC9               	movlw	-55
 17315  01118E  50E3               	movf	plusw1,w,c
 17316  011190  1001               	iorwf	btemp^0,w,c
 17317  011192  A4D8               	btfss	status,2,c
 17318  011194  D002               	goto	l11844
 17319  011196  0E65               	movlw	101
 17320  011198  D001               	goto	L17
 17321  01119A                     l11844:
 17322  01119A  0E45               	movlw	69
 17323  01119C                     L17:
 17324  01119C  6E0B               	movwf	(btemp+10)^0,c
 17325  01119E  0E00               	movlw	0
 17326  0111A0  6E0C               	movwf	(btemp+11)^0,c
 17327                           
 17328                           ;stkvar	_efgtoa$5342 @ sp[(-56)+2]
 17329  0111A2  0ECA               	movlw	-54
 17330  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17331  0111AA  0ECB               	movlw	-53
 17332  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17333                           
 17334                           ;stkvar	_efgtoa$5342 @ sp[(-56)+2]
 17335                           ;stkvar	_i @ sp[(-56)+36]
 17336  0111B2  0EEC               	movlw	-20
 17337  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 17338  0111BA  0EED               	movlw	-19
 17339  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 17340  0111C2  0E94               	movlw	low _dbuf
 17341  0111C4  240B               	addwf	(btemp+10)^0,w,c
 17342  0111C6  6ED9               	movwf	fsr2l,c
 17343  0111C8  0E03               	movlw	high _dbuf
 17344  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 17345  0111CC  6EDA               	movwf	fsr2h,c
 17346  0111CE  0ECA               	movlw	-54
 17347  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 17348                           
 17349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 17350                           ;stkvar	_w @ sp[(-56)+38]
 17351  0111D6  50E1               	movf	fsr1l,w,c
 17352  0111D8  0FEE               	addlw	-18
 17353  0111DA  6ED9               	movwf	fsr2l,c
 17354  0111DC  50E2               	movf	fsr1h,w,c
 17355  0111DE  6EDA               	movwf	fsr2h,c
 17356  0111E0  0EFF               	movlw	255
 17357  0111E2  22DA               	addwfc	fsr2h,f,c
 17358  0111E4  06DE               	decf	postinc2,f,c
 17359  0111E6  0E00               	movlw	0
 17360  0111E8  5ADD               	subwfb	postdec2,f,c
 17361                           
 17362                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 17363                           ;stkvar	_i @ sp[(-56)+36]
 17364  0111EA  0EEC               	movlw	-20
 17365  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 17366  0111F2  0EED               	movlw	-19
 17367  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 17368  0111FA  0E94               	movlw	low _dbuf
 17369  0111FC  240B               	addwf	(btemp+10)^0,w,c
 17370  0111FE  6E09               	movwf	(btemp+8)^0,c
 17371  011200  0E03               	movlw	high _dbuf
 17372  011202  200C               	addwfc	(btemp+11)^0,w,c
 17373  011204  6E0A               	movwf	(btemp+9)^0,c
 17374  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 17375  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 17376                           
 17377                           ;stkvar	_n @ sp[(-58)+32]
 17378  011212  0E94               	movlw	low _dbuf
 17379  011214  6E0B               	movwf	(btemp+10)^0,c
 17380  011216  0E03               	movlw	high _dbuf
 17381  011218  6E0C               	movwf	(btemp+11)^0,c
 17382  01121A  0EE6               	movlw	-26
 17383  01121C  50E3               	movf	plusw1,w,c
 17384  01121E  260B               	addwf	(btemp+10)^0,f,c
 17385  011220  0EE7               	movlw	-25
 17386  011222  50E3               	movf	plusw1,w,c
 17387  011224  220C               	addwfc	(btemp+11)^0,f,c
 17388  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17389  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 17390  011232  EC82  F0CC         	call	_strcpy	;wreg free
 17391  011236  EF16  F081         	goto	l11596
 17392  01123A                     l2154:
 17393                           
 17394                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 17395  01123A  0EC1               	movlw	193
 17396  01123C  26E1               	addwf	fsr1l,f,c
 17397  01123E  0EFF               	movlw	255
 17398  011240  22E2               	addwfc	fsr1h,f,c
 17399  011242  0012               	return		;funcret
 17400  011244                     __end_of_efgtoa:
 17401                           	opt callstack 0
 17402                           
 17403 ;; *************** function _tolower *****************
 17404 ;; Defined at:
 17405 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 17406 ;; Parameters:    Size  Location     Type
 17407 ;;  c               2  [STACK] int 
 17408 ;; Auto vars:     Size  Location     Type
 17409 ;;		None
 17410 ;; Return value:  Size  Location     Type
 17411 ;;                  2  [STACK] int 
 17412 ;; Registers used:
 17413 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 17414 ;; Tracked objects:
 17415 ;;		On entry : 0/0
 17416 ;;		On exit  : 0/0
 17417 ;;		Unchanged: 0/0
 17418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17423 ;;Total ram usage:        0 bytes
 17424 ;; Hardware stack levels used:    1
 17425 ;; Hardware stack levels required when called:   16
 17426 ;; This function calls:
 17427 ;;		_isupper
 17428 ;; This function is called by:
 17429 ;;		_efgtoa
 17430 ;;		_vfpfcnvrt
 17431 ;; This function uses a reentrant model
 17432 ;;
 17433                           
 17434                           	psect	text56
 17435  01A348                     __ptext56:
 17436                           	opt callstack 0
 17437  01A348                     _tolower:
 17438                           	opt callstack 0
 17439                           
 17440                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17441  01A348  52E6               	movf	postinc1,f,c
 17442  01A34A  52E6               	movf	postinc1,f,c
 17443                           
 17444                           ;stkvar	_c @ sp[(-2)+-2]
 17445                           
 17446                           ;incstack = 0
 17447 ;; hardware stack exceeded
 17448  01A34C  0EFC               	movlw	-4
 17449  01A34E  50E3               	movf	plusw1,w,c
 17450  01A350  0FBF               	addlw	191
 17451  01A352  6E0B               	movwf	(btemp+10)^0,c
 17452  01A354  0EFD               	movlw	-3
 17453  01A356  006F FF8C  F00C    	movff	plusw1,btemp+11
 17454  01A35C  0EFF               	movlw	255
 17455  01A35E  220C               	addwfc	(btemp+11)^0,f,c
 17456  01A360  500C               	movf	(btemp+11)^0,w,c
 17457  01A362  E106               	bnz	u5830
 17458  01A364  0E1A               	movlw	26
 17459  01A366  5C0B               	subwf	(btemp+10)^0,w,c
 17460  01A368  B0D8               	btfsc	status,0,c
 17461  01A36A  D002               	goto	u5830
 17462  01A36C  0E01               	movlw	1
 17463  01A36E  D001               	goto	u5840
 17464  01A370                     u5830:
 17465  01A370  0E00               	movlw	0
 17466  01A372                     u5840:
 17467  01A372  6E0B               	movwf	(btemp+10)^0,c
 17468  01A374  6A0C               	clrf	(btemp+11)^0,c
 17469                           
 17470                           ;stkvar	_tolower$6162 @ sp[(-2)+0]
 17471  01A376  0EFE               	movlw	-2
 17472  01A378  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17473  01A37E  0EFF               	movlw	-1
 17474  01A380  0060  F033  FFE3   	movff	btemp+11,plusw1
 17475                           
 17476                           ;stkvar	_tolower$6162 @ sp[(-2)+0]
 17477  01A386  0EFE               	movlw	-2
 17478  01A388  006F FF8C  F001    	movff	plusw1,btemp
 17479  01A38E  0EFF               	movlw	-1
 17480  01A390  50E3               	movf	plusw1,w,c
 17481  01A392  1001               	iorwf	btemp^0,w,c
 17482  01A394  B4D8               	btfsc	status,2,c
 17483  01A396  D00D               	goto	l7776
 17484                           
 17485                           ;stkvar	_c @ sp[(-2)+-2]
 17486  01A398  0EFC               	movlw	-4
 17487  01A39A  006F FF8C  F001    	movff	plusw1,btemp
 17488  01A3A0  0EFD               	movlw	-3
 17489  01A3A2  006F FF8C  F002    	movff	plusw1,btemp+1
 17490  01A3A8  0E20               	movlw	32
 17491  01A3AA  1201               	iorwf	btemp^0,f,c
 17492  01A3AC  0E00               	movlw	0
 17493  01A3AE  1202               	iorwf	(btemp+1)^0,f,c
 17494  01A3B0  D008               	goto	l3426
 17495  01A3B2                     l7776:
 17496                           
 17497                           ;stkvar	_c @ sp[(-2)+-2]
 17498  01A3B2  0EFC               	movlw	-4
 17499  01A3B4  006F FF8C  F001    	movff	plusw1,btemp
 17500  01A3BA  0EFD               	movlw	-3
 17501  01A3BC  006F FF8C  F002    	movff	plusw1,btemp+1
 17502  01A3C2                     l3426:
 17503                           
 17504                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17505  01A3C2  52E5               	movf	postdec1,f,c
 17506  01A3C4  52E5               	movf	postdec1,f,c
 17507  01A3C6  52E5               	movf	postdec1,f,c
 17508  01A3C8  52E5               	movf	postdec1,f,c
 17509  01A3CA  0012               	return		;funcret
 17510  01A3CC                     __end_of_tolower:
 17511                           	opt callstack 0
 17512                           
 17513 ;; *************** function _isupper *****************
 17514 ;; Defined at:
 17515 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 17516 ;; Parameters:    Size  Location     Type
 17517 ;;  c               2  [STACK] int 
 17518 ;; Auto vars:     Size  Location     Type
 17519 ;;		None
 17520 ;; Return value:  Size  Location     Type
 17521 ;;                  2  [STACK] int 
 17522 ;; Registers used:
 17523 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 17524 ;; Tracked objects:
 17525 ;;		On entry : 0/0
 17526 ;;		On exit  : 0/0
 17527 ;;		Unchanged: 0/0
 17528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17533 ;;Total ram usage:        0 bytes
 17534 ;; Hardware stack levels used:    1
 17535 ;; Hardware stack levels required when called:   15
 17536 ;; This function calls:
 17537 ;;		Nothing
 17538 ;; This function is called by:
 17539 ;;		_efgtoa
 17540 ;;		_xtoa
 17541 ;;		_vfpfcnvrt
 17542 ;;		_tolower
 17543 ;; This function uses a reentrant model
 17544 ;;
 17545                           
 17546                           	psect	text57
 17547  01AF8E                     __ptext57:
 17548                           	opt callstack 0
 17549  01AF8E                     _isupper:
 17550                           	opt callstack 0
 17551                           
 17552                           ;stkvar	_c @ sp[(0)+-2]
 17553                           
 17554                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17555                           ;incstack = 0
 17556 ;; hardware stack exceeded
 17557  01AF8E  0EFE               	movlw	-2
 17558  01AF90  50E3               	movf	plusw1,w,c
 17559  01AF92  0FBF               	addlw	191
 17560  01AF94  6E0B               	movwf	(btemp+10)^0,c
 17561  01AF96  0EFF               	movlw	-1
 17562  01AF98  006F FF8C  F00C    	movff	plusw1,btemp+11
 17563  01AF9E  0EFF               	movlw	255
 17564  01AFA0  220C               	addwfc	(btemp+11)^0,f,c
 17565  01AFA2  500C               	movf	(btemp+11)^0,w,c
 17566  01AFA4  E106               	bnz	u5230
 17567  01AFA6  0E1A               	movlw	26
 17568  01AFA8  5C0B               	subwf	(btemp+10)^0,w,c
 17569  01AFAA  B0D8               	btfsc	status,0,c
 17570  01AFAC  D002               	goto	u5230
 17571  01AFAE  0E01               	movlw	1
 17572  01AFB0  D001               	goto	u5240
 17573  01AFB2                     u5230:
 17574  01AFB2  0E00               	movlw	0
 17575  01AFB4                     u5240:
 17576  01AFB4  6E01               	movwf	btemp^0,c
 17577  01AFB6  6A02               	clrf	(btemp+1)^0,c
 17578                           
 17579                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17580  01AFB8  52E5               	movf	postdec1,f,c
 17581  01AFBA  52E5               	movf	postdec1,f,c
 17582  01AFBC  0012               	return		;funcret
 17583  01AFBE                     __end_of_isupper:
 17584                           	opt callstack 0
 17585                           
 17586 ;; *************** function _strcpy *****************
 17587 ;; Defined at:
 17588 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 17589 ;; Parameters:    Size  Location     Type
 17590 ;;  dest            2  [STACK] PTR unsigned char 
 17591 ;;		 -> dbuf(80), 
 17592 ;;  src             2  [STACK] PTR const unsigned char 
 17593 ;;		 -> STR_71(4), STR_70(4), STR_67(4), STR_66(4), 
 17594 ;;		 -> dbuf(80), 
 17595 ;; Auto vars:     Size  Location     Type
 17596 ;;  d               2  [STACK] PTR unsigned char 
 17597 ;;		 -> dbuf(80), 
 17598 ;;  s               2  [STACK] PTR const unsigned char 
 17599 ;;		 -> STR_71(4), STR_70(4), STR_67(4), STR_66(4), 
 17600 ;;		 -> dbuf(80), 
 17601 ;; Return value:  Size  Location     Type
 17602 ;;                  2  [STACK] PTR unsigned char 
 17603 ;; Registers used:
 17604 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 17605 ;; Tracked objects:
 17606 ;;		On entry : 0/0
 17607 ;;		On exit  : 0/0
 17608 ;;		Unchanged: 0/0
 17609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17614 ;;Total ram usage:        0 bytes
 17615 ;; Hardware stack levels used:    1
 17616 ;; Hardware stack levels required when called:   15
 17617 ;; This function calls:
 17618 ;;		Nothing
 17619 ;; This function is called by:
 17620 ;;		_efgtoa
 17621 ;; This function uses a reentrant model
 17622 ;;
 17623                           
 17624                           	psect	text58
 17625  019904                     __ptext58:
 17626                           	opt callstack 0
 17627  019904                     _strcpy:
 17628                           	opt callstack 0
 17629                           
 17630                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17631  019904  52E6               	movf	postinc1,f,c
 17632  019906  52E6               	movf	postinc1,f,c
 17633  019908  52E6               	movf	postinc1,f,c
 17634  01990A  52E6               	movf	postinc1,f,c
 17635                           
 17636                           ;stkvar	_src @ sp[(-4)+-4]
 17637                           
 17638                           ;incstack = 0
 17639 ;; hardware stack exceeded
 17640  01990C  0EF8               	movlw	-8
 17641  01990E  006F FF8C  F00B    	movff	plusw1,btemp+10
 17642  019914  0EF9               	movlw	-7
 17643  019916  006F FF8C  F00C    	movff	plusw1,btemp+11
 17644                           
 17645                           ;stkvar	_s @ sp[(-4)+2]
 17646  01991C  0EFF               	movlw	-1
 17647  01991E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17648  019924  0EFE               	movlw	-2
 17649  019926  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17650                           
 17651                           ;stkvar	_dest @ sp[(-4)+-2]
 17652  01992C  0EFA               	movlw	-6
 17653  01992E  006F FF8C  F00B    	movff	plusw1,btemp+10
 17654  019934  0EFB               	movlw	-5
 17655  019936  006F FF8C  F00C    	movff	plusw1,btemp+11
 17656                           
 17657                           ;stkvar	_d @ sp[(-4)+0]
 17658  01993C  0EFD               	movlw	-3
 17659  01993E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17660  019944  0EFC               	movlw	-4
 17661  019946  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17662  01994C                     l11428:
 17663                           
 17664                           ;stkvar	_s @ sp[(-4)+2]
 17665  01994C  50E1               	movf	fsr1l,w,c
 17666  01994E  0FFE               	addlw	-2
 17667  019950  6ED9               	movwf	fsr2l,c
 17668  019952  50E2               	movf	fsr1h,w,c
 17669  019954  6EDA               	movwf	fsr2h,c
 17670  019956  0EFF               	movlw	255
 17671  019958  22DA               	addwfc	fsr2h,f,c
 17672  01995A  006F FF7C  F00B    	movff	indf2,btemp+10
 17673  019960  0E01               	movlw	1
 17674  019962  26DE               	addwf	postinc2,f,c
 17675  019964  006F FF7C  F00C    	movff	indf2,btemp+11
 17676  01996A  0E00               	movlw	0
 17677  01996C  22DD               	addwfc	postdec2,f,c
 17678  01996E  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 17679  019974  0060  F033  FFF7   	movff	btemp+11,tblptrh
 17680  01997A  0E00               	movlw	low (__mediumconst shr (0+16))
 17681  01997C  6EF8               	movwf	tblptru,c
 17682                           
 17683                           ;stkvar	_d @ sp[(-4)+0]
 17684  01997E  50E1               	movf	fsr1l,w,c
 17685  019980  0FFC               	addlw	-4
 17686  019982  6ED9               	movwf	fsr2l,c
 17687  019984  50E2               	movf	fsr1h,w,c
 17688  019986  6EDA               	movwf	fsr2h,c
 17689  019988  0EFF               	movlw	255
 17690  01998A  22DA               	addwfc	fsr2h,f,c
 17691  01998C  006F FF7C  F00B    	movff	indf2,btemp+10
 17692  019992  0E01               	movlw	1
 17693  019994  26DE               	addwf	postinc2,f,c
 17694  019996  006F FF7C  F00C    	movff	indf2,btemp+11
 17695  01999C  0E00               	movlw	0
 17696  01999E  22DD               	addwfc	postdec2,f,c
 17697  0199A0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 17698  0199A6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 17699  0199AC  0E1F               	movlw	(high __ramtop+-1)
 17700  0199AE  64F7               	cpfsgt	tblptrh,c
 17701  0199B0  D003               	bra	u10397
 17702  0199B2  0008               	tblrd		*
 17703  0199B4  50F5               	movf	tablat,w,c
 17704  0199B6  D007               	bra	u10390
 17705  0199B8                     u10397:
 17706  0199B8  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17707  0199BE  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17708  0199C4  50EF               	movf	indf0,w,c
 17709  0199C6                     u10390:
 17710  0199C6  6EDF               	movwf	indf2,c
 17711  0199C8  50DF               	movf	indf2,w,c
 17712  0199CA  A4D8               	btfss	status,2,c
 17713  0199CC  D7BF               	goto	l11428
 17714                           
 17715                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 17716  0199CE  0EF8               	movlw	248
 17717  0199D0  26E1               	addwf	fsr1l,f,c
 17718  0199D2  0EFF               	movlw	255
 17719  0199D4  22E2               	addwfc	fsr1h,f,c
 17720  0199D6  0012               	return		;funcret
 17721  0199D8                     __end_of_strcpy:
 17722                           	opt callstack 0
 17723                           
 17724 ;; *************** function _floorf *****************
 17725 ;; Defined at:
 17726 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 17727 ;; Parameters:    Size  Location     Type
 17728 ;;  x               4  [STACK] float 
 17729 ;; Auto vars:     Size  Location     Type
 17730 ;;  u               4  [STACK] struct .
 17731 ;;  m               4  [STACK] unsigned long 
 17732 ;;  e               2  [STACK] int 
 17733 ;; Return value:  Size  Location     Type
 17734 ;;                  4  [STACK] float 
 17735 ;; Registers used:
 17736 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 17737 ;; Tracked objects:
 17738 ;;		On entry : 0/0
 17739 ;;		On exit  : 0/0
 17740 ;;		Unchanged: 0/0
 17741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17746 ;;Total ram usage:        0 bytes
 17747 ;; Hardware stack levels used:    1
 17748 ;; Hardware stack levels required when called:   15
 17749 ;; This function calls:
 17750 ;;		Nothing
 17751 ;; This function is called by:
 17752 ;;		_efgtoa
 17753 ;; This function uses a reentrant model
 17754 ;;
 17755                           
 17756                           	psect	text59
 17757  015ED8                     __ptext59:
 17758                           	opt callstack 0
 17759  015ED8                     _floorf:
 17760                           	opt callstack 0
 17761                           
 17762                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 17763  015ED8  0E0A               	movlw	10
 17764  015EDA  26E1               	addwf	fsr1l,f,c
 17765  015EDC  0E00               	movlw	0
 17766  015EDE  22E2               	addwfc	fsr1h,f,c
 17767                           
 17768                           ;incstack = 0
 17769 ;; hardware stack exceeded
 17770  015EE0  0060  F1E8  F009   	movff	floorf@F524,btemp+8
 17771  015EE6  0060  F1EC  F00A   	movff	floorf@F524+1,btemp+9
 17772  015EEC  0060  F1F0  F00B   	movff	floorf@F524+2,btemp+10
 17773  015EF2  0060  F1F4  F00C   	movff	floorf@F524+3,btemp+11
 17774                           
 17775                           ;stkvar	_u @ sp[(-10)+0]
 17776  015EF8  0EF6               	movlw	-10
 17777  015EFA  0060  F027  FFE3   	movff	btemp+8,plusw1
 17778  015F00  0EF7               	movlw	-9
 17779  015F02  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17780  015F08  0EF8               	movlw	-8
 17781  015F0A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17782  015F10  0EF9               	movlw	-7
 17783  015F12  0060  F033  FFE3   	movff	btemp+11,plusw1
 17784                           
 17785                           ;stkvar	_x @ sp[(-10)+-4]
 17786  015F18  0EF2               	movlw	-14
 17787  015F1A  006F FF8C  F009    	movff	plusw1,btemp+8
 17788  015F20  0EF3               	movlw	-13
 17789  015F22  006F FF8C  F00A    	movff	plusw1,btemp+9
 17790  015F28  0EF4               	movlw	-12
 17791  015F2A  006F FF8C  F00B    	movff	plusw1,btemp+10
 17792  015F30  0EF5               	movlw	-11
 17793  015F32  006F FF8C  F00C    	movff	plusw1,btemp+11
 17794                           
 17795                           ;stkvar	_u @ sp[(-10)+0]
 17796  015F38  0EF6               	movlw	-10
 17797  015F3A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17798  015F40  0EF7               	movlw	-9
 17799  015F42  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17800  015F48  0EF8               	movlw	-8
 17801  015F4A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17802  015F50  0EF9               	movlw	-7
 17803  015F52  0060  F033  FFE3   	movff	btemp+11,plusw1
 17804  015F58  0E81               	movlw	129
 17805  015F5A  6E0B               	movwf	(btemp+10)^0,c
 17806  015F5C  0EFF               	movlw	255
 17807  015F5E  6E0C               	movwf	(btemp+11)^0,c
 17808                           
 17809                           ;stkvar	_u @ sp[(-10)+0]
 17810  015F60  0EF6               	movlw	-10
 17811  015F62  006F FF8C  F005    	movff	plusw1,btemp+4
 17812  015F68  0EF7               	movlw	-9
 17813  015F6A  006F FF8C  F006    	movff	plusw1,btemp+5
 17814  015F70  0EF8               	movlw	-8
 17815  015F72  006F FF8C  F007    	movff	plusw1,btemp+6
 17816  015F78  0EF9               	movlw	-7
 17817  015F7A  006F FF8C  F008    	movff	plusw1,btemp+7
 17818  015F80  0E18               	movlw	24
 17819  015F82  D005               	goto	u5860
 17820  015F84                     u5865:
 17821  015F84  90D8               	bcf	status,0,c
 17822  015F86  3208               	rrcf	(btemp+7)^0,f,c
 17823  015F88  3207               	rrcf	(btemp+6)^0,f,c
 17824  015F8A  3206               	rrcf	(btemp+5)^0,f,c
 17825  015F8C  3205               	rrcf	(btemp+4)^0,f,c
 17826  015F8E                     u5860:
 17827  015F8E  2EE8               	decfsz	wreg,f,c
 17828  015F90  D7F9               	goto	u5865
 17829  015F92  0060  F014  F009   	movff	btemp+4,btemp+8
 17830  015F98  0060  F018  F00A   	movff	btemp+5,btemp+9
 17831  015F9E  0EFF               	movlw	255
 17832  015FA0  1609               	andwf	(btemp+8)^0,f,c
 17833  015FA2  0E00               	movlw	0
 17834  015FA4  160A               	andwf	(btemp+9)^0,f,c
 17835  015FA6  500B               	movf	(btemp+10)^0,w,c
 17836  015FA8  2609               	addwf	(btemp+8)^0,f,c
 17837  015FAA  500C               	movf	(btemp+11)^0,w,c
 17838  015FAC  220A               	addwfc	(btemp+9)^0,f,c
 17839                           
 17840                           ;stkvar	_e @ sp[(-10)+8]
 17841  015FAE  0EFE               	movlw	-2
 17842  015FB0  0060  F027  FFE3   	movff	btemp+8,plusw1
 17843  015FB6  0EFF               	movlw	-1
 17844  015FB8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17845                           
 17846                           ;stkvar	_e @ sp[(-10)+8]
 17847  015FBE  0EFF               	movlw	-1
 17848  015FC0  BEE3               	btfsc	plusw1,7,c
 17849  015FC2  D019               	goto	l7790
 17850  015FC4  0EFF               	movlw	-1
 17851  015FC6  50E3               	movf	plusw1,w,c
 17852  015FC8  E108               	bnz	u5870
 17853  015FCA  0EFE               	movlw	-2
 17854  015FCC  006F FF8C  F001    	movff	plusw1,btemp
 17855  015FD2  0E17               	movlw	23
 17856  015FD4  5E01               	subwf	btemp^0,f,c
 17857  015FD6  A0D8               	btfss	status,0,c
 17858  015FD8  D00E               	goto	l7790
 17859  015FDA                     u5870:
 17860                           
 17861                           ;stkvar	_x @ sp[(-10)+-4]
 17862  015FDA  0EF2               	movlw	-14
 17863  015FDC  006F FF8C  F001    	movff	plusw1,btemp
 17864  015FE2  0EF3               	movlw	-13
 17865  015FE4  006F FF8C  F002    	movff	plusw1,btemp+1
 17866  015FEA  0EF4               	movlw	-12
 17867  015FEC  006F FF8C  F003    	movff	plusw1,btemp+2
 17868  015FF2  0EF5               	movlw	-11
 17869  015FF4  D11F               	goto	L18
 17870  015FF6                     l7790:
 17871                           
 17872                           ;stkvar	_e @ sp[(-10)+8]
 17873  015FF6  0EFF               	movlw	-1
 17874  015FF8  BEE3               	btfsc	plusw1,7,c
 17875  015FFA  D0B4               	goto	l7806
 17876                           
 17877                           ;stkvar	_e @ sp[(-10)+8]
 17878  015FFC  0EFE               	movlw	-2
 17879  015FFE  006F FF8C  F00C    	movff	plusw1,btemp+11
 17880  016004  0EFF               	movlw	255
 17881  016006  6E05               	movwf	(btemp+4)^0,c
 17882  016008  0EFF               	movlw	255
 17883  01600A  6E06               	movwf	(btemp+5)^0,c
 17884  01600C  0E7F               	movlw	127
 17885  01600E  6E07               	movwf	(btemp+6)^0,c
 17886  016010  0E00               	movlw	0
 17887  016012  6E08               	movwf	(btemp+7)^0,c
 17888  016014                     u5895:
 17889  016014  660C               	tstfsz	(btemp+11)^0,c
 17890  016016  D001               	goto	u5896
 17891  016018  D007               	goto	u5897
 17892  01601A                     u5896:
 17893  01601A  3408               	rlcf	(btemp+7)^0,w,c
 17894  01601C  3208               	rrcf	(btemp+7)^0,f,c
 17895  01601E  3207               	rrcf	(btemp+6)^0,f,c
 17896  016020  3206               	rrcf	(btemp+5)^0,f,c
 17897  016022  3205               	rrcf	(btemp+4)^0,f,c
 17898  016024  2E0C               	decfsz	(btemp+11)^0,f,c
 17899  016026  D7F6               	goto	u5895
 17900  016028                     u5897:
 17901                           
 17902                           ;stkvar	_m @ sp[(-10)+4]
 17903  016028  0EFA               	movlw	-6
 17904  01602A  0060  F017  FFE3   	movff	btemp+4,plusw1
 17905  016030  0EFB               	movlw	-5
 17906  016032  0060  F01B  FFE3   	movff	btemp+5,plusw1
 17907  016038  0EFC               	movlw	-4
 17908  01603A  0060  F01F  FFE3   	movff	btemp+6,plusw1
 17909  016040  0EFD               	movlw	-3
 17910  016042  0060  F023  FFE3   	movff	btemp+7,plusw1
 17911                           
 17912                           ;stkvar	_m @ sp[(-10)+4]
 17913                           ;stkvar	_u @ sp[(-10)+0]
 17914  016048  0EF6               	movlw	-10
 17915  01604A  006F FF8C  F009    	movff	plusw1,btemp+8
 17916  016050  0EF7               	movlw	-9
 17917  016052  006F FF8C  F00A    	movff	plusw1,btemp+9
 17918  016058  0EF8               	movlw	-8
 17919  01605A  006F FF8C  F00B    	movff	plusw1,btemp+10
 17920  016060  0EF9               	movlw	-7
 17921  016062  006F FF8C  F00C    	movff	plusw1,btemp+11
 17922  016068  0EFA               	movlw	-6
 17923  01606A  50E3               	movf	plusw1,w,c
 17924  01606C  1609               	andwf	(btemp+8)^0,f,c
 17925  01606E  0EFB               	movlw	-5
 17926  016070  50E3               	movf	plusw1,w,c
 17927  016072  160A               	andwf	(btemp+9)^0,f,c
 17928  016074  0EFC               	movlw	-4
 17929  016076  50E3               	movf	plusw1,w,c
 17930  016078  160B               	andwf	(btemp+10)^0,f,c
 17931  01607A  0EFD               	movlw	-3
 17932  01607C  50E3               	movf	plusw1,w,c
 17933  01607E  160C               	andwf	(btemp+11)^0,f,c
 17934  016080  5009               	movf	(btemp+8)^0,w,c
 17935  016082  100A               	iorwf	(btemp+9)^0,w,c
 17936  016084  100B               	iorwf	(btemp+10)^0,w,c
 17937  016086  100C               	iorwf	(btemp+11)^0,w,c
 17938  016088  B4D8               	btfsc	status,2,c
 17939  01608A  D7A7               	goto	u5870
 17940                           
 17941                           ;stkvar	_u @ sp[(-10)+0]
 17942  01608C  0EF6               	movlw	-10
 17943  01608E  006F FF8C  F009    	movff	plusw1,btemp+8
 17944  016094  0EF7               	movlw	-9
 17945  016096  006F FF8C  F00A    	movff	plusw1,btemp+9
 17946  01609C  0EF8               	movlw	-8
 17947  01609E  006F FF8C  F00B    	movff	plusw1,btemp+10
 17948  0160A4  0EF9               	movlw	-7
 17949  0160A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 17950  0160AC  0E20               	movlw	32
 17951  0160AE  D005               	goto	u5910
 17952  0160B0                     u5915:
 17953  0160B0  90D8               	bcf	status,0,c
 17954  0160B2  320C               	rrcf	(btemp+11)^0,f,c
 17955  0160B4  320B               	rrcf	(btemp+10)^0,f,c
 17956  0160B6  320A               	rrcf	(btemp+9)^0,f,c
 17957  0160B8  3209               	rrcf	(btemp+8)^0,f,c
 17958  0160BA                     u5910:
 17959  0160BA  2EE8               	decfsz	wreg,f,c
 17960  0160BC  D7F9               	goto	u5915
 17961  0160BE  5009               	movf	(btemp+8)^0,w,c
 17962  0160C0  B4D8               	btfsc	status,2,c
 17963  0160C2  D028               	goto	l7804
 17964                           
 17965                           ;stkvar	_m @ sp[(-10)+4]
 17966                           ;stkvar	_u @ sp[(-10)+0]
 17967  0160C4  0EF6               	movlw	-10
 17968  0160C6  50E3               	movf	plusw1,w,c
 17969  0160C8  6E01               	movwf	btemp^0,c
 17970  0160CA  0EFA               	movlw	-6
 17971  0160CC  50E3               	movf	plusw1,w,c
 17972  0160CE  2601               	addwf	btemp^0,f,c
 17973  0160D0  0EF6               	movlw	-10
 17974  0160D2  0060  F007  FFE3   	movff	btemp,plusw1
 17975  0160D8  0EF7               	movlw	-9
 17976  0160DA  50E3               	movf	plusw1,w,c
 17977  0160DC  6E01               	movwf	btemp^0,c
 17978  0160DE  0EFB               	movlw	-5
 17979  0160E0  50E3               	movf	plusw1,w,c
 17980  0160E2  2201               	addwfc	btemp^0,f,c
 17981  0160E4  0EF7               	movlw	-9
 17982  0160E6  0060  F007  FFE3   	movff	btemp,plusw1
 17983  0160EC  0EF8               	movlw	-8
 17984  0160EE  50E3               	movf	plusw1,w,c
 17985  0160F0  6E01               	movwf	btemp^0,c
 17986  0160F2  0EFC               	movlw	-4
 17987  0160F4  50E3               	movf	plusw1,w,c
 17988  0160F6  2201               	addwfc	btemp^0,f,c
 17989  0160F8  0EF8               	movlw	-8
 17990  0160FA  0060  F007  FFE3   	movff	btemp,plusw1
 17991  016100  0EF9               	movlw	-7
 17992  016102  50E3               	movf	plusw1,w,c
 17993  016104  6E01               	movwf	btemp^0,c
 17994  016106  0EFD               	movlw	-3
 17995  016108  50E3               	movf	plusw1,w,c
 17996  01610A  2201               	addwfc	btemp^0,f,c
 17997  01610C  0EF9               	movlw	-7
 17998  01610E  0060  F007  FFE3   	movff	btemp,plusw1
 17999  016114                     l7804:
 18000                           
 18001                           ;stkvar	_m @ sp[(-10)+4]
 18002  016114  0EFA               	movlw	-6
 18003  016116  006F FF8C  F009    	movff	plusw1,btemp+8
 18004  01611C  0EFB               	movlw	-5
 18005  01611E  006F FF8C  F00A    	movff	plusw1,btemp+9
 18006  016124  0EFC               	movlw	-4
 18007  016126  006F FF8C  F00B    	movff	plusw1,btemp+10
 18008  01612C  0EFD               	movlw	-3
 18009  01612E  006F FF8C  F00C    	movff	plusw1,btemp+11
 18010  016134  1C09               	comf	(btemp+8)^0,w,c
 18011  016136  6E05               	movwf	(btemp+4)^0,c
 18012  016138  1C0A               	comf	(btemp+9)^0,w,c
 18013  01613A  6E06               	movwf	(btemp+5)^0,c
 18014  01613C  1C0B               	comf	(btemp+10)^0,w,c
 18015  01613E  6E07               	movwf	(btemp+6)^0,c
 18016  016140  1C0C               	comf	(btemp+11)^0,w,c
 18017  016142  6E08               	movwf	(btemp+7)^0,c
 18018                           
 18019                           ;stkvar	_u @ sp[(-10)+0]
 18020  016144  50E1               	movf	fsr1l,w,c
 18021  016146  0FF6               	addlw	-10
 18022  016148  6ED9               	movwf	fsr2l,c
 18023  01614A  50E2               	movf	fsr1h,w,c
 18024  01614C  6EDA               	movwf	fsr2h,c
 18025  01614E  0EFF               	movlw	255
 18026  016150  22DA               	addwfc	fsr2h,f,c
 18027  016152  5005               	movf	(btemp+4)^0,w,c
 18028  016154  16DE               	andwf	postinc2,f,c
 18029  016156  5006               	movf	(btemp+5)^0,w,c
 18030  016158  16DE               	andwf	postinc2,f,c
 18031  01615A  5007               	movf	(btemp+6)^0,w,c
 18032  01615C  16DE               	andwf	postinc2,f,c
 18033  01615E  5008               	movf	(btemp+7)^0,w,c
 18034  016160  16DE               	andwf	postinc2,f,c
 18035  016162  D05B               	goto	l7814
 18036  016164                     l7806:
 18037                           
 18038                           ;stkvar	_u @ sp[(-10)+0]
 18039  016164  0EF6               	movlw	-10
 18040  016166  006F FF8C  F009    	movff	plusw1,btemp+8
 18041  01616C  0EF7               	movlw	-9
 18042  01616E  006F FF8C  F00A    	movff	plusw1,btemp+9
 18043  016174  0EF8               	movlw	-8
 18044  016176  006F FF8C  F00B    	movff	plusw1,btemp+10
 18045  01617C  0EF9               	movlw	-7
 18046  01617E  006F FF8C  F00C    	movff	plusw1,btemp+11
 18047  016184  0E20               	movlw	32
 18048  016186  D005               	goto	u5930
 18049  016188                     u5935:
 18050  016188  90D8               	bcf	status,0,c
 18051  01618A  320C               	rrcf	(btemp+11)^0,f,c
 18052  01618C  320B               	rrcf	(btemp+10)^0,f,c
 18053  01618E  320A               	rrcf	(btemp+9)^0,f,c
 18054  016190  3209               	rrcf	(btemp+8)^0,f,c
 18055  016192                     u5930:
 18056  016192  2EE8               	decfsz	wreg,f,c
 18057  016194  D7F9               	goto	u5935
 18058  016196  6609               	tstfsz	(btemp+8)^0,c
 18059  016198  D009               	goto	l7810
 18060                           
 18061                           ;stkvar	_u @ sp[(-10)+0]
 18062  01619A  0EF6               	movlw	-10
 18063  01619C  6AE3               	clrf	plusw1,c
 18064  01619E  0EF7               	movlw	-9
 18065  0161A0  6AE3               	clrf	plusw1,c
 18066  0161A2  0EF8               	movlw	-8
 18067  0161A4  6AE3               	clrf	plusw1,c
 18068  0161A6  0EF9               	movlw	-7
 18069  0161A8  6AE3               	clrf	plusw1,c
 18070  0161AA  D037               	goto	l7814
 18071  0161AC                     l7810:
 18072                           
 18073                           ;stkvar	_u @ sp[(-10)+0]
 18074  0161AC  0EF6               	movlw	-10
 18075  0161AE  006F FF8C  F009    	movff	plusw1,btemp+8
 18076  0161B4  0EF7               	movlw	-9
 18077  0161B6  006F FF8C  F00A    	movff	plusw1,btemp+9
 18078  0161BC  0EF8               	movlw	-8
 18079  0161BE  006F FF8C  F00B    	movff	plusw1,btemp+10
 18080  0161C4  0EF9               	movlw	-7
 18081  0161C6  006F FF8C  F00C    	movff	plusw1,btemp+11
 18082  0161CC  90D8               	bcf	status,0,c
 18083  0161CE  3409               	rlcf	(btemp+8)^0,w,c
 18084  0161D0  6E05               	movwf	(btemp+4)^0,c
 18085  0161D2  340A               	rlcf	(btemp+9)^0,w,c
 18086  0161D4  6E06               	movwf	(btemp+5)^0,c
 18087  0161D6  340B               	rlcf	(btemp+10)^0,w,c
 18088  0161D8  6E07               	movwf	(btemp+6)^0,c
 18089  0161DA  340C               	rlcf	(btemp+11)^0,w,c
 18090  0161DC  6E08               	movwf	(btemp+7)^0,c
 18091  0161DE  5005               	movf	(btemp+4)^0,w,c
 18092  0161E0  1006               	iorwf	(btemp+5)^0,w,c
 18093  0161E2  1007               	iorwf	(btemp+6)^0,w,c
 18094  0161E4  1008               	iorwf	(btemp+7)^0,w,c
 18095  0161E6  B4D8               	btfsc	status,2,c
 18096  0161E8  D018               	goto	l7814
 18097  0161EA  0E00               	movlw	0
 18098  0161EC  6E09               	movwf	(btemp+8)^0,c
 18099  0161EE  0E00               	movlw	0
 18100  0161F0  6E0A               	movwf	(btemp+9)^0,c
 18101  0161F2  0E80               	movlw	128
 18102  0161F4  6E0B               	movwf	(btemp+10)^0,c
 18103  0161F6  0EBF               	movlw	191
 18104  0161F8  6E0C               	movwf	(btemp+11)^0,c
 18105                           
 18106                           ;stkvar	_u @ sp[(-10)+0]
 18107  0161FA  0EF6               	movlw	-10
 18108  0161FC  0060  F027  FFE3   	movff	btemp+8,plusw1
 18109  016202  0EF7               	movlw	-9
 18110  016204  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18111  01620A  0EF8               	movlw	-8
 18112  01620C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18113  016212  0EF9               	movlw	-7
 18114  016214  0060  F033  FFE3   	movff	btemp+11,plusw1
 18115  01621A                     l7814:
 18116                           
 18117                           ;stkvar	_u @ sp[(-10)+0]
 18118  01621A  0EF6               	movlw	-10
 18119  01621C  006F FF8C  F001    	movff	plusw1,btemp
 18120  016222  0EF7               	movlw	-9
 18121  016224  006F FF8C  F002    	movff	plusw1,btemp+1
 18122  01622A  0EF8               	movlw	-8
 18123  01622C  006F FF8C  F003    	movff	plusw1,btemp+2
 18124  016232  0EF9               	movlw	-7
 18125  016234                     L18:
 18126  016234  006F FF8C  F004    	movff	plusw1,btemp+3
 18127                           
 18128                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18129  01623A  0EF2               	movlw	242
 18130  01623C  26E1               	addwf	fsr1l,f,c
 18131  01623E  0EFF               	movlw	255
 18132  016240  22E2               	addwfc	fsr1h,f,c
 18133  016242  0012               	return		;funcret
 18134  016244                     __end_of_floorf:
 18135                           	opt callstack 0
 18136                           
 18137 ;; *************** function ___fpclassifyf *****************
 18138 ;; Defined at:
 18139 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 18140 ;; Parameters:    Size  Location     Type
 18141 ;;  x               4  [STACK] float 
 18142 ;; Auto vars:     Size  Location     Type
 18143 ;;  u               4  [STACK] struct .
 18144 ;;  e               2  [STACK] int 
 18145 ;; Return value:  Size  Location     Type
 18146 ;;                  2  [STACK] int 
 18147 ;; Registers used:
 18148 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 18149 ;; Tracked objects:
 18150 ;;		On entry : 0/0
 18151 ;;		On exit  : 0/0
 18152 ;;		Unchanged: 0/0
 18153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18158 ;;Total ram usage:        0 bytes
 18159 ;; Hardware stack levels used:    1
 18160 ;; Hardware stack levels required when called:   15
 18161 ;; This function calls:
 18162 ;;		Nothing
 18163 ;; This function is called by:
 18164 ;;		_efgtoa
 18165 ;; This function uses a reentrant model
 18166 ;;
 18167                           
 18168                           	psect	text60
 18169  017F98                     __ptext60:
 18170                           	opt callstack 0
 18171  017F98                     ___fpclassifyf:
 18172                           	opt callstack 0
 18173                           
 18174                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18175  017F98  0E06               	movlw	6
 18176  017F9A  26E1               	addwf	fsr1l,f,c
 18177  017F9C  0E00               	movlw	0
 18178  017F9E  22E2               	addwfc	fsr1h,f,c
 18179                           
 18180                           ;incstack = 0
 18181 ;; hardware stack exceeded
 18182  017FA0  0060  F208  F009   	movff	___fpclassifyf@F463,btemp+8
 18183  017FA6  0060  F20C  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 18184  017FAC  0060  F210  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 18185  017FB2  0060  F214  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 18186                           
 18187                           ;stkvar	_u @ sp[(-6)+0]
 18188  017FB8  0EFA               	movlw	-6
 18189  017FBA  0060  F027  FFE3   	movff	btemp+8,plusw1
 18190  017FC0  0EFB               	movlw	-5
 18191  017FC2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18192  017FC8  0EFC               	movlw	-4
 18193  017FCA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18194  017FD0  0EFD               	movlw	-3
 18195  017FD2  0060  F033  FFE3   	movff	btemp+11,plusw1
 18196                           
 18197                           ;stkvar	_x @ sp[(-6)+-4]
 18198  017FD8  0EF6               	movlw	-10
 18199  017FDA  006F FF8C  F009    	movff	plusw1,btemp+8
 18200  017FE0  0EF7               	movlw	-9
 18201  017FE2  006F FF8C  F00A    	movff	plusw1,btemp+9
 18202  017FE8  0EF8               	movlw	-8
 18203  017FEA  006F FF8C  F00B    	movff	plusw1,btemp+10
 18204  017FF0  0EF9               	movlw	-7
 18205  017FF2  006F FF8C  F00C    	movff	plusw1,btemp+11
 18206                           
 18207                           ;stkvar	_u @ sp[(-6)+0]
 18208  017FF8  0EFA               	movlw	-6
 18209  017FFA  0060  F027  FFE3   	movff	btemp+8,plusw1
 18210  018000  0EFB               	movlw	-5
 18211  018002  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18212  018008  0EFC               	movlw	-4
 18213  01800A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18214  018010  0EFD               	movlw	-3
 18215  018012  0060  F033  FFE3   	movff	btemp+11,plusw1
 18216                           
 18217                           ;stkvar	_u @ sp[(-6)+0]
 18218  018018  0EFA               	movlw	-6
 18219  01801A  006F FF8C  F009    	movff	plusw1,btemp+8
 18220  018020  0EFB               	movlw	-5
 18221  018022  006F FF8C  F00A    	movff	plusw1,btemp+9
 18222  018028  0EFC               	movlw	-4
 18223  01802A  006F FF8C  F00B    	movff	plusw1,btemp+10
 18224  018030  0EFD               	movlw	-3
 18225  018032  006F FF8C  F00C    	movff	plusw1,btemp+11
 18226  018038  0E18               	movlw	24
 18227  01803A  D005               	goto	u5740
 18228  01803C                     u5745:
 18229  01803C  90D8               	bcf	status,0,c
 18230  01803E  320C               	rrcf	(btemp+11)^0,f,c
 18231  018040  320B               	rrcf	(btemp+10)^0,f,c
 18232  018042  320A               	rrcf	(btemp+9)^0,f,c
 18233  018044  3209               	rrcf	(btemp+8)^0,f,c
 18234  018046                     u5740:
 18235  018046  2EE8               	decfsz	wreg,f,c
 18236  018048  D7F9               	goto	u5745
 18237  01804A  0060  F024  F007   	movff	btemp+8,btemp+6
 18238  018050  0060  F028  F008   	movff	btemp+9,btemp+7
 18239  018056  0EFF               	movlw	255
 18240  018058  1607               	andwf	(btemp+6)^0,f,c
 18241  01805A  0E00               	movlw	0
 18242  01805C  1608               	andwf	(btemp+7)^0,f,c
 18243                           
 18244                           ;stkvar	_e @ sp[(-6)+4]
 18245  01805E  0EFE               	movlw	-2
 18246  018060  0060  F01F  FFE3   	movff	btemp+6,plusw1
 18247  018066  0EFF               	movlw	-1
 18248  018068  0060  F023  FFE3   	movff	btemp+7,plusw1
 18249                           
 18250                           ;stkvar	_e @ sp[(-6)+4]
 18251  01806E  0EFE               	movlw	-2
 18252  018070  006F FF8C  F001    	movff	plusw1,btemp
 18253  018076  0EFF               	movlw	-1
 18254  018078  50E3               	movf	plusw1,w,c
 18255  01807A  1001               	iorwf	btemp^0,w,c
 18256  01807C  A4D8               	btfss	status,2,c
 18257  01807E  D023               	goto	l7752
 18258                           
 18259                           ;stkvar	_u @ sp[(-6)+0]
 18260  018080  0EFA               	movlw	-6
 18261  018082  006F FF8C  F009    	movff	plusw1,btemp+8
 18262  018088  0EFB               	movlw	-5
 18263  01808A  006F FF8C  F00A    	movff	plusw1,btemp+9
 18264  018090  0EFC               	movlw	-4
 18265  018092  006F FF8C  F00B    	movff	plusw1,btemp+10
 18266  018098  0EFD               	movlw	-3
 18267  01809A  006F FF8C  F00C    	movff	plusw1,btemp+11
 18268  0180A0  90D8               	bcf	status,0,c
 18269  0180A2  3409               	rlcf	(btemp+8)^0,w,c
 18270  0180A4  6E05               	movwf	(btemp+4)^0,c
 18271  0180A6  340A               	rlcf	(btemp+9)^0,w,c
 18272  0180A8  6E06               	movwf	(btemp+5)^0,c
 18273  0180AA  340B               	rlcf	(btemp+10)^0,w,c
 18274  0180AC  6E07               	movwf	(btemp+6)^0,c
 18275  0180AE  340C               	rlcf	(btemp+11)^0,w,c
 18276  0180B0  6E08               	movwf	(btemp+7)^0,c
 18277  0180B2  5005               	movf	(btemp+4)^0,w,c
 18278  0180B4  1006               	iorwf	(btemp+5)^0,w,c
 18279  0180B6  1007               	iorwf	(btemp+6)^0,w,c
 18280  0180B8  1008               	iorwf	(btemp+7)^0,w,c
 18281  0180BA  A4D8               	btfss	status,2,c
 18282  0180BC  D002               	goto	l7748
 18283  0180BE  0E02               	movlw	2
 18284  0180C0  D02E               	goto	L19
 18285  0180C2                     l7748:
 18286  0180C2  0E03               	movlw	3
 18287  0180C4  D02C               	goto	L19
 18288  0180C6                     l7752:
 18289                           
 18290                           ;stkvar	_e @ sp[(-6)+4]
 18291  0180C6  0EFE               	movlw	-2
 18292  0180C8  28E3               	incf	plusw1,w,c
 18293  0180CA  E128               	bnz	l7758
 18294  0180CC  0EFF               	movlw	-1
 18295  0180CE  50E3               	movf	plusw1,w,c
 18296  0180D0  A4D8               	btfss	status,2,c
 18297  0180D2  D024               	goto	l7758
 18298                           
 18299                           ;stkvar	_u @ sp[(-6)+0]
 18300  0180D4  0EFA               	movlw	-6
 18301  0180D6  006F FF8C  F009    	movff	plusw1,btemp+8
 18302  0180DC  0EFB               	movlw	-5
 18303  0180DE  006F FF8C  F00A    	movff	plusw1,btemp+9
 18304  0180E4  0EFC               	movlw	-4
 18305  0180E6  006F FF8C  F00B    	movff	plusw1,btemp+10
 18306  0180EC  0EFD               	movlw	-3
 18307  0180EE  006F FF8C  F00C    	movff	plusw1,btemp+11
 18308  0180F4  0E09               	movlw	9
 18309  0180F6                     u5785:
 18310  0180F6  90D8               	bcf	status,0,c
 18311  0180F8  3609               	rlcf	(btemp+8)^0,f,c
 18312  0180FA  360A               	rlcf	(btemp+9)^0,f,c
 18313  0180FC  360B               	rlcf	(btemp+10)^0,f,c
 18314  0180FE  360C               	rlcf	(btemp+11)^0,f,c
 18315  018100  2EE8               	decfsz	wreg,f,c
 18316  018102  D7F9               	goto	u5785
 18317  018104  5009               	movf	(btemp+8)^0,w,c
 18318  018106  100A               	iorwf	(btemp+9)^0,w,c
 18319  018108  100B               	iorwf	(btemp+10)^0,w,c
 18320  01810A  100C               	iorwf	(btemp+11)^0,w,c
 18321  01810C  A4D8               	btfss	status,2,c
 18322  01810E  D002               	goto	u5790
 18323  018110  0E01               	movlw	1
 18324  018112  D001               	goto	u5800
 18325  018114                     u5790:
 18326  018114  0E00               	movlw	0
 18327  018116                     u5800:
 18328  018116  6E01               	movwf	btemp^0,c
 18329  018118  6A02               	clrf	(btemp+1)^0,c
 18330  01811A  D004               	goto	l3036
 18331  01811C                     l7758:
 18332  01811C  0E04               	movlw	4
 18333  01811E                     L19:
 18334  01811E  6E01               	movwf	btemp^0,c
 18335  018120  0E00               	movlw	0
 18336  018122  6E02               	movwf	(btemp+1)^0,c
 18337  018124                     l3036:
 18338                           
 18339                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 18340  018124  0EF6               	movlw	246
 18341  018126  26E1               	addwf	fsr1l,f,c
 18342  018128  0EFF               	movlw	255
 18343  01812A  22E2               	addwfc	fsr1h,f,c
 18344  01812C  0012               	return		;funcret
 18345  01812E                     __end_of___fpclassifyf:
 18346                           	opt callstack 0
 18347                           
 18348 ;; *************** function ___fltol *****************
 18349 ;; Defined at:
 18350 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 18351 ;; Parameters:    Size  Location     Type
 18352 ;;  f1              4  [STACK] int 
 18353 ;; Auto vars:     Size  Location     Type
 18354 ;;  exp1            1  [STACK] unsigned char 
 18355 ;;  sign1           1  [STACK] unsigned char 
 18356 ;; Return value:  Size  Location     Type
 18357 ;;                  4  [STACK] long 
 18358 ;; Registers used:
 18359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 18360 ;; Tracked objects:
 18361 ;;		On entry : 0/1
 18362 ;;		On exit  : 0/0
 18363 ;;		Unchanged: 0/0
 18364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18369 ;;Total ram usage:        0 bytes
 18370 ;; Hardware stack levels used:    1
 18371 ;; Hardware stack levels required when called:   15
 18372 ;; This function calls:
 18373 ;;		Nothing
 18374 ;; This function is called by:
 18375 ;;		_calc_bsoc
 18376 ;;		_init_bsoc
 18377 ;;		_efgtoa
 18378 ;; This function uses a reentrant model
 18379 ;;
 18380                           
 18381                           	psect	text61
 18382  018422                     __ptext61:
 18383                           	opt callstack 0
 18384  018422                     ___fltol:
 18385                           	opt callstack 0
 18386                           
 18387                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18388  018422  52E6               	movf	postinc1,f,c
 18389  018424  52E6               	movf	postinc1,f,c
 18390                           
 18391                           ;stkvar	_f1 @ sp[(-2)+-4]
 18392                           
 18393                           ;incstack = 0
 18394 ;; hardware stack exceeded
 18395  018426  0EFA               	movlw	-6
 18396  018428  006F FF8C  F009    	movff	plusw1,btemp+8
 18397  01842E  0EFB               	movlw	-5
 18398  018430  006F FF8C  F00A    	movff	plusw1,btemp+9
 18399  018436  0EFC               	movlw	-4
 18400  018438  006F FF8C  F00B    	movff	plusw1,btemp+10
 18401  01843E  0EFD               	movlw	-3
 18402  018440  006F FF8C  F00C    	movff	plusw1,btemp+11
 18403  018446  0E18               	movlw	24
 18404  018448  D005               	goto	u6950
 18405  01844A                     u6955:
 18406  01844A  90D8               	bcf	status,0,c
 18407  01844C  320C               	rrcf	(btemp+11)^0,f,c
 18408  01844E  320B               	rrcf	(btemp+10)^0,f,c
 18409  018450  320A               	rrcf	(btemp+9)^0,f,c
 18410  018452  3209               	rrcf	(btemp+8)^0,f,c
 18411  018454                     u6950:
 18412  018454  2EE8               	decfsz	wreg,f,c
 18413  018456  D7F9               	goto	u6955
 18414                           
 18415                           ;stkvar	_exp1 @ sp[(-2)+0]
 18416  018458  0EFE               	movlw	-2
 18417  01845A  0060  F027  FFE3   	movff	btemp+8,plusw1
 18418  018460  0EFE               	movlw	-2
 18419  018462  50E3               	movf	plusw1,w,c
 18420  018464  A4D8               	btfss	status,2,c
 18421  018466  D006               	goto	l8378
 18422  018468                     u6960:
 18423  018468  0E00               	movlw	0
 18424  01846A  6E01               	movwf	btemp^0,c
 18425  01846C  6A02               	clrf	(btemp+1)^0,c
 18426  01846E  6A03               	clrf	(btemp+2)^0,c
 18427  018470  6A04               	clrf	(btemp+3)^0,c
 18428  018472  D08B               	goto	l2652
 18429  018474                     l8378:
 18430                           
 18431                           ;stkvar	_f1 @ sp[(-2)+-4]
 18432  018474  0EFA               	movlw	-6
 18433  018476  006F FF8C  F009    	movff	plusw1,btemp+8
 18434  01847C  0EFB               	movlw	-5
 18435  01847E  006F FF8C  F00A    	movff	plusw1,btemp+9
 18436  018484  0EFC               	movlw	-4
 18437  018486  006F FF8C  F00B    	movff	plusw1,btemp+10
 18438  01848C  0EFD               	movlw	-3
 18439  01848E  006F FF8C  F00C    	movff	plusw1,btemp+11
 18440  018494  0E20               	movlw	32
 18441  018496  D005               	goto	u6970
 18442  018498                     u6975:
 18443  018498  90D8               	bcf	status,0,c
 18444  01849A  320C               	rrcf	(btemp+11)^0,f,c
 18445  01849C  320B               	rrcf	(btemp+10)^0,f,c
 18446  01849E  320A               	rrcf	(btemp+9)^0,f,c
 18447  0184A0  3209               	rrcf	(btemp+8)^0,f,c
 18448  0184A2                     u6970:
 18449  0184A2  2EE8               	decfsz	wreg,f,c
 18450  0184A4  D7F9               	goto	u6975
 18451                           
 18452                           ;stkvar	_sign1 @ sp[(-2)+1]
 18453  0184A6  0EFF               	movlw	-1
 18454  0184A8  0060  F027  FFE3   	movff	btemp+8,plusw1
 18455                           
 18456                           ;stkvar	_f1 @ sp[(-2)+-4]
 18457  0184AE  0EFC               	movlw	-4
 18458  0184B0  8EE3               	bsf	plusw1,7,c
 18459                           
 18460                           ;stkvar	_f1 @ sp[(-2)+-4]
 18461  0184B2  50E1               	movf	fsr1l,w,c
 18462  0184B4  0FFA               	addlw	-6
 18463  0184B6  6ED9               	movwf	fsr2l,c
 18464  0184B8  50E2               	movf	fsr1h,w,c
 18465  0184BA  6EDA               	movwf	fsr2h,c
 18466  0184BC  0EFF               	movlw	255
 18467  0184BE  22DA               	addwfc	fsr2h,f,c
 18468  0184C0  0EFF               	movlw	255
 18469  0184C2  16DE               	andwf	postinc2,f,c
 18470  0184C4  0EFF               	movlw	255
 18471  0184C6  16DE               	andwf	postinc2,f,c
 18472  0184C8  0EFF               	movlw	255
 18473  0184CA  16DE               	andwf	postinc2,f,c
 18474  0184CC  0E00               	movlw	0
 18475  0184CE  16DE               	andwf	postinc2,f,c
 18476                           
 18477                           ;stkvar	_exp1 @ sp[(-2)+0]
 18478  0184D0  0EFE               	movlw	-2
 18479  0184D2  006F FF8C  F001    	movff	plusw1,btemp
 18480  0184D8  0E96               	movlw	150
 18481  0184DA  5E01               	subwf	btemp^0,f,c
 18482  0184DC  0EFE               	movlw	-2
 18483  0184DE  0060  F007  FFE3   	movff	btemp,plusw1
 18484                           
 18485                           ;stkvar	_exp1 @ sp[(-2)+0]
 18486  0184E4  0EFE               	movlw	-2
 18487  0184E6  AEE3               	btfss	plusw1,7,c
 18488  0184E8  D014               	goto	l8396
 18489                           
 18490                           ;stkvar	_exp1 @ sp[(-2)+0]
 18491  0184EA  0EFE               	movlw	-2
 18492  0184EC  50E3               	movf	plusw1,w,c
 18493  0184EE  0A80               	xorlw	128
 18494  0184F0  0F97               	addlw	151
 18495  0184F2  A0D8               	btfss	status,0,c
 18496  0184F4  D7B9               	goto	u6960
 18497  0184F6                     l8394:
 18498                           
 18499                           ;stkvar	_f1 @ sp[(-2)+-4]
 18500  0184F6  90D8               	bcf	status,0,c
 18501  0184F8  0EFD               	movlw	-3
 18502  0184FA  32E3               	rrcf	plusw1,f,c
 18503  0184FC  0EFC               	movlw	-4
 18504  0184FE  32E3               	rrcf	plusw1,f,c
 18505  018500  0EFB               	movlw	-5
 18506  018502  32E3               	rrcf	plusw1,f,c
 18507  018504  0EFA               	movlw	-6
 18508  018506  32E3               	rrcf	plusw1,f,c
 18509                           
 18510                           ;stkvar	_exp1 @ sp[(-2)+0]
 18511  018508  0EFE               	movlw	-2
 18512  01850A  2AE3               	incf	plusw1,f,c
 18513  01850C  B4D8               	btfsc	status,2,c
 18514  01850E  D018               	goto	u7020
 18515  018510  D7F2               	goto	l8394
 18516  018512                     l8396:
 18517                           
 18518                           ;stkvar	_exp1 @ sp[(-2)+0]
 18519  018512  0EFE               	movlw	-2
 18520  018514  006F FF8C  F001    	movff	plusw1,btemp
 18521  01851A  0E1F               	movlw	31
 18522  01851C  6401               	cpfsgt	btemp^0,c
 18523  01851E  D00C               	goto	l8404
 18524  018520  D7A3               	goto	u6960
 18525  018522                     l8402:
 18526                           
 18527                           ;stkvar	_f1 @ sp[(-2)+-4]
 18528  018522  90D8               	bcf	status,0,c
 18529  018524  0EFA               	movlw	-6
 18530  018526  36E3               	rlcf	plusw1,f,c
 18531  018528  0EFB               	movlw	-5
 18532  01852A  36E3               	rlcf	plusw1,f,c
 18533  01852C  0EFC               	movlw	-4
 18534  01852E  36E3               	rlcf	plusw1,f,c
 18535  018530  0EFD               	movlw	-3
 18536  018532  36E3               	rlcf	plusw1,f,c
 18537                           
 18538                           ;stkvar	_exp1 @ sp[(-2)+0]
 18539  018534  0EFE               	movlw	-2
 18540  018536  06E3               	decf	plusw1,f,c
 18541  018538                     l8404:
 18542                           
 18543                           ;stkvar	_exp1 @ sp[(-2)+0]
 18544  018538  0EFE               	movlw	-2
 18545  01853A  50E3               	movf	plusw1,w,c
 18546  01853C  A4D8               	btfss	status,2,c
 18547  01853E  D7F1               	goto	l8402
 18548  018540                     u7020:
 18549                           
 18550                           ;stkvar	_sign1 @ sp[(-2)+1]
 18551  018540  0EFF               	movlw	-1
 18552  018542  50E3               	movf	plusw1,w,c
 18553  018544  B4D8               	btfsc	status,2,c
 18554  018546  D011               	goto	u7040
 18555                           
 18556                           ;stkvar	_f1 @ sp[(-2)+-4]
 18557                           ;stkvar	_f1 @ sp[(-2)+-4]
 18558  018548  0EFA               	movlw	-6
 18559  01854A  6CE3               	negf	plusw1,c
 18560  01854C  0EFB               	movlw	-5
 18561  01854E  1EE3               	comf	plusw1,f,c
 18562  018550  0EFC               	movlw	-4
 18563  018552  1EE3               	comf	plusw1,f,c
 18564  018554  0EFD               	movlw	-3
 18565  018556  1EE3               	comf	plusw1,f,c
 18566  018558  E308               	bnc	u7040
 18567  01855A  0EFB               	movlw	-5
 18568  01855C  2AE3               	incf	plusw1,f,c
 18569  01855E  E305               	bnc	u7040
 18570  018560  0EFC               	movlw	-4
 18571  018562  2AE3               	incf	plusw1,f,c
 18572  018564  E302               	bnc	u7040
 18573  018566  0EFD               	movlw	-3
 18574  018568  2AE3               	incf	plusw1,f,c
 18575  01856A                     u7040:
 18576                           
 18577                           ;stkvar	_f1 @ sp[(-2)+-4]
 18578  01856A  0EFA               	movlw	-6
 18579  01856C  006F FF8C  F001    	movff	plusw1,btemp
 18580  018572  0EFB               	movlw	-5
 18581  018574  006F FF8C  F002    	movff	plusw1,btemp+1
 18582  01857A  0EFC               	movlw	-4
 18583  01857C  006F FF8C  F003    	movff	plusw1,btemp+2
 18584  018582  0EFD               	movlw	-3
 18585  018584  006F FF8C  F004    	movff	plusw1,btemp+3
 18586  01858A                     l2652:
 18587                           
 18588                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18589  01858A  0EFA               	movlw	250
 18590  01858C  26E1               	addwf	fsr1l,f,c
 18591  01858E  0EFF               	movlw	255
 18592  018590  22E2               	addwfc	fsr1h,f,c
 18593  018592  0012               	return		;funcret
 18594  018594                     __end_of___fltol:
 18595                           	opt callstack 0
 18596                           
 18597 ;; *************** function ___flneg *****************
 18598 ;; Defined at:
 18599 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 18600 ;; Parameters:    Size  Location     Type
 18601 ;;  f1              4  [STACK] long 
 18602 ;; Auto vars:     Size  Location     Type
 18603 ;;		None
 18604 ;; Return value:  Size  Location     Type
 18605 ;;                  4  [STACK] long 
 18606 ;; Registers used:
 18607 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18608 ;; Tracked objects:
 18609 ;;		On entry : 0/0
 18610 ;;		On exit  : 0/0
 18611 ;;		Unchanged: 0/0
 18612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18617 ;;Total ram usage:        0 bytes
 18618 ;; Hardware stack levels used:    1
 18619 ;; Hardware stack levels required when called:   15
 18620 ;; This function calls:
 18621 ;;		Nothing
 18622 ;; This function is called by:
 18623 ;;		_calc_bsoc
 18624 ;;		_efgtoa
 18625 ;; This function uses a reentrant model
 18626 ;;
 18627                           
 18628                           	psect	text62
 18629  01AA14                     __ptext62:
 18630                           	opt callstack 0
 18631  01AA14                     ___flneg:
 18632                           	opt callstack 0
 18633                           
 18634                           ;stkvar	_f1 @ sp[(0)+-4]
 18635                           
 18636                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18637                           ;incstack = 0
 18638 ;; hardware stack exceeded
 18639  01AA14  0EFC               	movlw	-4
 18640  01AA16  50E3               	movf	plusw1,w,c
 18641  01AA18  E10A               	bnz	u6940
 18642  01AA1A  0EFD               	movlw	-3
 18643  01AA1C  50E3               	movf	plusw1,w,c
 18644  01AA1E  E107               	bnz	u6940
 18645  01AA20  0EFE               	movlw	-2
 18646  01AA22  50E3               	movf	plusw1,w,c
 18647  01AA24  E104               	bnz	u6940
 18648  01AA26  0EFF               	movlw	-1
 18649  01AA28  50E3               	movf	plusw1,w,c
 18650  01AA2A  B4D8               	btfsc	status,2,c
 18651  01AA2C  D002               	goto	l8368
 18652  01AA2E                     u6940:
 18653                           
 18654                           ;stkvar	_f1 @ sp[(0)+-4]
 18655  01AA2E  0EFF               	movlw	-1
 18656  01AA30  7EE3               	btg	plusw1,7,c
 18657  01AA32                     l8368:
 18658                           
 18659                           ;stkvar	_f1 @ sp[(0)+-4]
 18660  01AA32  0EFC               	movlw	-4
 18661  01AA34  006F FF8C  F001    	movff	plusw1,btemp
 18662  01AA3A  0EFD               	movlw	-3
 18663  01AA3C  006F FF8C  F002    	movff	plusw1,btemp+1
 18664  01AA42  0EFE               	movlw	-2
 18665  01AA44  006F FF8C  F003    	movff	plusw1,btemp+2
 18666  01AA4A  0EFF               	movlw	-1
 18667  01AA4C  006F FF8C  F004    	movff	plusw1,btemp+3
 18668                           
 18669                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18670  01AA52  52E5               	movf	postdec1,f,c
 18671  01AA54  52E5               	movf	postdec1,f,c
 18672  01AA56  52E5               	movf	postdec1,f,c
 18673  01AA58  52E5               	movf	postdec1,f,c
 18674  01AA5A  0012               	return		;funcret
 18675  01AA5C                     __end_of___flneg:
 18676                           	opt callstack 0
 18677                           
 18678 ;; *************** function ___fleq *****************
 18679 ;; Defined at:
 18680 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 18681 ;; Parameters:    Size  Location     Type
 18682 ;;  ff1             4  [STACK] long 
 18683 ;;  ff2             4  [STACK] long 
 18684 ;; Auto vars:     Size  Location     Type
 18685 ;;		None
 18686 ;; Return value:  Size  Location     Type
 18687 ;;		None               void
 18688 ;; Registers used:
 18689 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18690 ;; Tracked objects:
 18691 ;;		On entry : 0/0
 18692 ;;		On exit  : 0/0
 18693 ;;		Unchanged: 0/0
 18694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18699 ;;Total ram usage:        0 bytes
 18700 ;; Hardware stack levels used:    1
 18701 ;; Hardware stack levels required when called:   15
 18702 ;; This function calls:
 18703 ;;		Nothing
 18704 ;; This function is called by:
 18705 ;;		_efgtoa
 18706 ;; This function uses a reentrant model
 18707 ;;
 18708                           
 18709                           	psect	text63
 18710  0199D8                     __ptext63:
 18711                           	opt callstack 0
 18712  0199D8                     ___fleq:
 18713                           	opt callstack 0
 18714                           
 18715                           ;stkvar	_ff1 @ sp[(0)+-4]
 18716                           
 18717                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18718                           ;incstack = 0
 18719 ;; hardware stack exceeded
 18720  0199D8  50E1               	movf	fsr1l,w,c
 18721  0199DA  0FFC               	addlw	-4
 18722  0199DC  6ED9               	movwf	fsr2l,c
 18723  0199DE  50E2               	movf	fsr1h,w,c
 18724  0199E0  6EDA               	movwf	fsr2h,c
 18725  0199E2  0EFF               	movlw	255
 18726  0199E4  22DA               	addwfc	fsr2h,f,c
 18727  0199E6  0E00               	movlw	0
 18728  0199E8  14DE               	andwf	postinc2,w,c
 18729  0199EA  6E09               	movwf	(btemp+8)^0,c
 18730  0199EC  0E00               	movlw	0
 18731  0199EE  14DE               	andwf	postinc2,w,c
 18732  0199F0  6E0A               	movwf	(btemp+9)^0,c
 18733  0199F2  0E80               	movlw	128
 18734  0199F4  14DE               	andwf	postinc2,w,c
 18735  0199F6  6E0B               	movwf	(btemp+10)^0,c
 18736  0199F8  0E7F               	movlw	127
 18737  0199FA  14DE               	andwf	postinc2,w,c
 18738  0199FC  6E0C               	movwf	(btemp+11)^0,c
 18739  0199FE  5009               	movf	(btemp+8)^0,w,c
 18740  019A00  100A               	iorwf	(btemp+9)^0,w,c
 18741  019A02  100B               	iorwf	(btemp+10)^0,w,c
 18742  019A04  100C               	iorwf	(btemp+11)^0,w,c
 18743  019A06  A4D8               	btfss	status,2,c
 18744  019A08  D008               	goto	l8326
 18745                           
 18746                           ;stkvar	_ff1 @ sp[(0)+-4]
 18747  019A0A  0EFC               	movlw	-4
 18748  019A0C  6AE3               	clrf	plusw1,c
 18749  019A0E  0EFD               	movlw	-3
 18750  019A10  6AE3               	clrf	plusw1,c
 18751  019A12  0EFE               	movlw	-2
 18752  019A14  6AE3               	clrf	plusw1,c
 18753  019A16  0EFF               	movlw	-1
 18754  019A18  6AE3               	clrf	plusw1,c
 18755  019A1A                     l8326:
 18756                           
 18757                           ;stkvar	_ff2 @ sp[(0)+-8]
 18758  019A1A  50E1               	movf	fsr1l,w,c
 18759  019A1C  0FF8               	addlw	-8
 18760  019A1E  6ED9               	movwf	fsr2l,c
 18761  019A20  50E2               	movf	fsr1h,w,c
 18762  019A22  6EDA               	movwf	fsr2h,c
 18763  019A24  0EFF               	movlw	255
 18764  019A26  22DA               	addwfc	fsr2h,f,c
 18765  019A28  0E00               	movlw	0
 18766  019A2A  14DE               	andwf	postinc2,w,c
 18767  019A2C  6E09               	movwf	(btemp+8)^0,c
 18768  019A2E  0E00               	movlw	0
 18769  019A30  14DE               	andwf	postinc2,w,c
 18770  019A32  6E0A               	movwf	(btemp+9)^0,c
 18771  019A34  0E80               	movlw	128
 18772  019A36  14DE               	andwf	postinc2,w,c
 18773  019A38  6E0B               	movwf	(btemp+10)^0,c
 18774  019A3A  0E7F               	movlw	127
 18775  019A3C  14DE               	andwf	postinc2,w,c
 18776  019A3E  6E0C               	movwf	(btemp+11)^0,c
 18777  019A40  5009               	movf	(btemp+8)^0,w,c
 18778  019A42  100A               	iorwf	(btemp+9)^0,w,c
 18779  019A44  100B               	iorwf	(btemp+10)^0,w,c
 18780  019A46  100C               	iorwf	(btemp+11)^0,w,c
 18781  019A48  A4D8               	btfss	status,2,c
 18782  019A4A  D008               	goto	l8330
 18783                           
 18784                           ;stkvar	_ff2 @ sp[(0)+-8]
 18785  019A4C  0EF8               	movlw	-8
 18786  019A4E  6AE3               	clrf	plusw1,c
 18787  019A50  0EF9               	movlw	-7
 18788  019A52  6AE3               	clrf	plusw1,c
 18789  019A54  0EFA               	movlw	-6
 18790  019A56  6AE3               	clrf	plusw1,c
 18791  019A58  0EFB               	movlw	-5
 18792  019A5A  6AE3               	clrf	plusw1,c
 18793  019A5C                     l8330:
 18794                           
 18795                           ;stkvar	_ff2 @ sp[(0)+-8]
 18796                           ;stkvar	_ff1 @ sp[(0)+-4]
 18797  019A5C  50E1               	movf	fsr1l,w,c
 18798  019A5E  0FFC               	addlw	-4
 18799  019A60  6ED9               	movwf	fsr2l,c
 18800  019A62  50E2               	movf	fsr1h,w,c
 18801  019A64  6EDA               	movwf	fsr2h,c
 18802  019A66  0EFF               	movlw	255
 18803  019A68  22DA               	addwfc	fsr2h,f,c
 18804  019A6A  0EF8               	movlw	-8
 18805  019A6C  50E3               	movf	plusw1,w,c
 18806  019A6E  18DE               	xorwf	postinc2,w,c
 18807  019A70  E10D               	bnz	u6880
 18808  019A72  0EF9               	movlw	-7
 18809  019A74  50E3               	movf	plusw1,w,c
 18810  019A76  18DE               	xorwf	postinc2,w,c
 18811  019A78  E109               	bnz	u6880
 18812  019A7A  0EFA               	movlw	-6
 18813  019A7C  50E3               	movf	plusw1,w,c
 18814  019A7E  18DE               	xorwf	postinc2,w,c
 18815  019A80  E105               	bnz	u6880
 18816  019A82  0EFB               	movlw	-5
 18817  019A84  50E3               	movf	plusw1,w,c
 18818  019A86  18DE               	xorwf	postinc2,w,c
 18819  019A88  B4D8               	btfsc	status,2,c
 18820  019A8A  D002               	goto	l8334
 18821  019A8C                     u6880:
 18822  019A8C  9001               	bcf	btemp& (0+255),0,c
 18823  019A8E  D001               	goto	l2614
 18824  019A90                     l8334:
 18825  019A90  8001               	bsf	btemp& (0+255),0,c
 18826  019A92                     l2614:
 18827                           
 18828                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 18829  019A92  0EF8               	movlw	248
 18830  019A94  26E1               	addwf	fsr1l,f,c
 18831  019A96  0EFF               	movlw	255
 18832  019A98  22E2               	addwfc	fsr1h,f,c
 18833  019A9A  0012               	return		;funcret
 18834  019A9C                     __end_of___fleq:
 18835                           	opt callstack 0
 18836                           
 18837 ;; *************** function ___awmod *****************
 18838 ;; Defined at:
 18839 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 18840 ;; Parameters:    Size  Location     Type
 18841 ;;  dividend        2  [STACK] int 
 18842 ;;  divisor         2  [STACK] int 
 18843 ;; Auto vars:     Size  Location     Type
 18844 ;;  sign            1  [STACK] unsigned char 
 18845 ;;  counter         1  [STACK] unsigned char 
 18846 ;; Return value:  Size  Location     Type
 18847 ;;                  2  [STACK] int 
 18848 ;; Registers used:
 18849 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18850 ;; Tracked objects:
 18851 ;;		On entry : 0/0
 18852 ;;		On exit  : 0/0
 18853 ;;		Unchanged: 0/0
 18854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18859 ;;Total ram usage:        0 bytes
 18860 ;; Hardware stack levels used:    1
 18861 ;; Hardware stack levels required when called:   15
 18862 ;; This function calls:
 18863 ;;		Nothing
 18864 ;; This function is called by:
 18865 ;;		_efgtoa
 18866 ;; This function uses a reentrant model
 18867 ;;
 18868                           
 18869                           	psect	text64
 18870  018FE6                     __ptext64:
 18871                           	opt callstack 0
 18872  018FE6                     ___awmod:
 18873                           	opt callstack 0
 18874                           
 18875                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18876  018FE6  52E6               	movf	postinc1,f,c
 18877  018FE8  52E6               	movf	postinc1,f,c
 18878                           
 18879                           ;stkvar	_sign @ sp[(-2)+0]
 18880                           
 18881                           ;incstack = 0
 18882 ;; hardware stack exceeded
 18883  018FEA  0EFE               	movlw	-2
 18884  018FEC  6AE3               	clrf	plusw1,c
 18885                           
 18886                           ;stkvar	_dividend @ sp[(-2)+-2]
 18887  018FEE  0EFD               	movlw	-3
 18888  018FF0  AEE3               	btfss	plusw1,7,c
 18889  018FF2  D009               	goto	l8292
 18890                           
 18891                           ;stkvar	_dividend @ sp[(-2)+-2]
 18892                           ;stkvar	_dividend @ sp[(-2)+-2]
 18893  018FF4  0EFC               	movlw	-4
 18894  018FF6  6CE3               	negf	plusw1,c
 18895  018FF8  0EFD               	movlw	-3
 18896  018FFA  1EE3               	comf	plusw1,f,c
 18897  018FFC  B0D8               	btfsc	status,0,c
 18898  018FFE  2AE3               	incf	plusw1,f,c
 18899                           
 18900                           ;stkvar	_sign @ sp[(-2)+0]
 18901  019000  0EFE               	movlw	-2
 18902  019002  6AE3               	clrf	plusw1,c
 18903  019004  2AE3               	incf	plusw1,f,c
 18904  019006                     l8292:
 18905                           
 18906                           ;stkvar	_divisor @ sp[(-2)+-4]
 18907  019006  0EFB               	movlw	-5
 18908  019008  AEE3               	btfss	plusw1,7,c
 18909  01900A  D006               	goto	l8296
 18910                           
 18911                           ;stkvar	_divisor @ sp[(-2)+-4]
 18912                           ;stkvar	_divisor @ sp[(-2)+-4]
 18913  01900C  0EFA               	movlw	-6
 18914  01900E  6CE3               	negf	plusw1,c
 18915  019010  0EFB               	movlw	-5
 18916  019012  1EE3               	comf	plusw1,f,c
 18917  019014  B0D8               	btfsc	status,0,c
 18918  019016  2AE3               	incf	plusw1,f,c
 18919  019018                     l8296:
 18920                           
 18921                           ;stkvar	_divisor @ sp[(-2)+-4]
 18922  019018  0EFA               	movlw	-6
 18923  01901A  006F FF8C  F001    	movff	plusw1,btemp
 18924  019020  0EFB               	movlw	-5
 18925  019022  50E3               	movf	plusw1,w,c
 18926  019024  1001               	iorwf	btemp^0,w,c
 18927  019026  B4D8               	btfsc	status,2,c
 18928  019028  D053               	goto	u6840
 18929                           
 18930                           ;stkvar	_counter @ sp[(-2)+1]
 18931  01902A  0EFF               	movlw	-1
 18932  01902C  6AE3               	clrf	plusw1,c
 18933  01902E  D012               	goto	L20
 18934  019030                     l8300:
 18935                           
 18936                           ;stkvar	_divisor @ sp[(-2)+-4]
 18937  019030  0EFA               	movlw	-6
 18938  019032  50E3               	movf	plusw1,w,c
 18939  019034  90D8               	bcf	status,0,c
 18940  019036  34E8               	rlcf	wreg,w,c
 18941  019038  6E01               	movwf	btemp^0,c
 18942  01903A  0EFA               	movlw	-6
 18943  01903C  0060  F007  FFE3   	movff	btemp,plusw1
 18944  019042  0EFB               	movlw	-5
 18945  019044  50E3               	movf	plusw1,w,c
 18946  019046  34E8               	rlcf	wreg,w,c
 18947  019048  6E01               	movwf	btemp^0,c
 18948  01904A  0EFB               	movlw	-5
 18949  01904C  0060  F007  FFE3   	movff	btemp,plusw1
 18950                           
 18951                           ;stkvar	_counter @ sp[(-2)+1]
 18952  019052  0EFF               	movlw	-1
 18953  019054                     L20:
 18954  019054  2AE3               	incf	plusw1,f,c
 18955                           
 18956                           ;stkvar	_divisor @ sp[(-2)+-4]
 18957  019056  0EFB               	movlw	-5
 18958  019058  AEE3               	btfss	plusw1,7,c
 18959  01905A  D7EA               	goto	l8300
 18960  01905C                     u6820:
 18961                           
 18962                           ;stkvar	_divisor @ sp[(-2)+-4]
 18963  01905C  0EFA               	movlw	-6
 18964  01905E  006F FF8C  F00B    	movff	plusw1,btemp+10
 18965  019064  0EFB               	movlw	-5
 18966  019066  006F FF8C  F00C    	movff	plusw1,btemp+11
 18967                           
 18968                           ;stkvar	_dividend @ sp[(-2)+-2]
 18969  01906C  0EFC               	movlw	-4
 18970  01906E  006F FF8C  F009    	movff	plusw1,btemp+8
 18971  019074  0EFD               	movlw	-3
 18972  019076  006F FF8C  F00A    	movff	plusw1,btemp+9
 18973  01907C  500B               	movf	(btemp+10)^0,w,c
 18974  01907E  5C09               	subwf	(btemp+8)^0,w,c
 18975  019080  500C               	movf	(btemp+11)^0,w,c
 18976  019082  580A               	subwfb	(btemp+9)^0,w,c
 18977  019084  A0D8               	btfss	status,0,c
 18978  019086  D014               	goto	l8310
 18979                           
 18980                           ;stkvar	_divisor @ sp[(-2)+-4]
 18981                           ;stkvar	_dividend @ sp[(-2)+-2]
 18982  019088  0EFC               	movlw	-4
 18983  01908A  50E3               	movf	plusw1,w,c
 18984  01908C  6E01               	movwf	btemp^0,c
 18985  01908E  0EFA               	movlw	-6
 18986  019090  50E3               	movf	plusw1,w,c
 18987  019092  5E01               	subwf	btemp^0,f,c
 18988  019094  0EFC               	movlw	-4
 18989  019096  0060  F007  FFE3   	movff	btemp,plusw1
 18990  01909C  0EFD               	movlw	-3
 18991  01909E  50E3               	movf	plusw1,w,c
 18992  0190A0  6E01               	movwf	btemp^0,c
 18993  0190A2  0EFB               	movlw	-5
 18994  0190A4  50E3               	movf	plusw1,w,c
 18995  0190A6  5A01               	subwfb	btemp^0,f,c
 18996  0190A8  0EFD               	movlw	-3
 18997  0190AA  0060  F007  FFE3   	movff	btemp,plusw1
 18998  0190B0                     l8310:
 18999                           
 19000                           ;stkvar	_divisor @ sp[(-2)+-4]
 19001  0190B0  90D8               	bcf	status,0,c
 19002  0190B2  0EFB               	movlw	-5
 19003  0190B4  32E3               	rrcf	plusw1,f,c
 19004  0190B6  0EFA               	movlw	-6
 19005  0190B8  32E3               	rrcf	plusw1,f,c
 19006                           
 19007                           ;stkvar	_counter @ sp[(-2)+1]
 19008  0190BA  0EFF               	movlw	-1
 19009  0190BC  50E3               	movf	plusw1,w,c
 19010  0190BE  6E01               	movwf	btemp^0,c
 19011  0190C0  0E01               	movlw	1
 19012  0190C2  5E01               	subwf	btemp^0,f,c
 19013  0190C4  0EFF               	movlw	-1
 19014  0190C6  0060  F007  FFE3   	movff	btemp,plusw1
 19015  0190CC  A4D8               	btfss	status,2,c
 19016  0190CE  D7C6               	goto	u6820
 19017  0190D0                     u6840:
 19018                           
 19019                           ;stkvar	_sign @ sp[(-2)+0]
 19020  0190D0  0EFE               	movlw	-2
 19021  0190D2  50E3               	movf	plusw1,w,c
 19022  0190D4  B4D8               	btfsc	status,2,c
 19023  0190D6  D006               	goto	l8318
 19024                           
 19025                           ;stkvar	_dividend @ sp[(-2)+-2]
 19026                           ;stkvar	_dividend @ sp[(-2)+-2]
 19027  0190D8  0EFC               	movlw	-4
 19028  0190DA  6CE3               	negf	plusw1,c
 19029  0190DC  0EFD               	movlw	-3
 19030  0190DE  1EE3               	comf	plusw1,f,c
 19031  0190E0  B0D8               	btfsc	status,0,c
 19032  0190E2  2AE3               	incf	plusw1,f,c
 19033  0190E4                     l8318:
 19034                           
 19035                           ;stkvar	_dividend @ sp[(-2)+-2]
 19036  0190E4  0EFC               	movlw	-4
 19037  0190E6  006F FF8C  F001    	movff	plusw1,btemp
 19038  0190EC  0EFD               	movlw	-3
 19039  0190EE  006F FF8C  F002    	movff	plusw1,btemp+1
 19040                           
 19041                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19042  0190F4  0EFA               	movlw	250
 19043  0190F6  26E1               	addwf	fsr1l,f,c
 19044  0190F8  0EFF               	movlw	255
 19045  0190FA  22E2               	addwfc	fsr1h,f,c
 19046  0190FC  0012               	return		;funcret
 19047  0190FE                     __end_of___awmod:
 19048                           	opt callstack 0
 19049                           
 19050 ;; *************** function ___awdiv *****************
 19051 ;; Defined at:
 19052 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 19053 ;; Parameters:    Size  Location     Type
 19054 ;;  dividend        2  [STACK] int 
 19055 ;;  divisor         2  [STACK] int 
 19056 ;; Auto vars:     Size  Location     Type
 19057 ;;  quotient        2  [STACK] int 
 19058 ;;  sign            1  [STACK] unsigned char 
 19059 ;;  counter         1  [STACK] unsigned char 
 19060 ;; Return value:  Size  Location     Type
 19061 ;;                  2  [STACK] int 
 19062 ;; Registers used:
 19063 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19064 ;; Tracked objects:
 19065 ;;		On entry : 0/0
 19066 ;;		On exit  : 0/0
 19067 ;;		Unchanged: 0/0
 19068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19073 ;;Total ram usage:        0 bytes
 19074 ;; Hardware stack levels used:    1
 19075 ;; Hardware stack levels required when called:   15
 19076 ;; This function calls:
 19077 ;;		Nothing
 19078 ;; This function is called by:
 19079 ;;		_efgtoa
 19080 ;; This function uses a reentrant model
 19081 ;;
 19082                           
 19083                           	psect	text65
 19084  0189CA                     __ptext65:
 19085                           	opt callstack 0
 19086  0189CA                     ___awdiv:
 19087                           	opt callstack 0
 19088                           
 19089                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19090  0189CA  52E6               	movf	postinc1,f,c
 19091  0189CC  52E6               	movf	postinc1,f,c
 19092  0189CE  52E6               	movf	postinc1,f,c
 19093  0189D0  52E6               	movf	postinc1,f,c
 19094                           
 19095                           ;stkvar	_sign @ sp[(-4)+2]
 19096                           
 19097                           ;incstack = 0
 19098 ;; hardware stack exceeded
 19099  0189D2  0EFE               	movlw	-2
 19100  0189D4  6AE3               	clrf	plusw1,c
 19101                           
 19102                           ;stkvar	_divisor @ sp[(-4)+-4]
 19103  0189D6  0EF9               	movlw	-7
 19104  0189D8  AEE3               	btfss	plusw1,7,c
 19105  0189DA  D009               	goto	l8246
 19106                           
 19107                           ;stkvar	_divisor @ sp[(-4)+-4]
 19108                           ;stkvar	_divisor @ sp[(-4)+-4]
 19109  0189DC  0EF8               	movlw	-8
 19110  0189DE  6CE3               	negf	plusw1,c
 19111  0189E0  0EF9               	movlw	-7
 19112  0189E2  1EE3               	comf	plusw1,f,c
 19113  0189E4  B0D8               	btfsc	status,0,c
 19114  0189E6  2AE3               	incf	plusw1,f,c
 19115                           
 19116                           ;stkvar	_sign @ sp[(-4)+2]
 19117  0189E8  0EFE               	movlw	-2
 19118  0189EA  6AE3               	clrf	plusw1,c
 19119  0189EC  2AE3               	incf	plusw1,f,c
 19120  0189EE                     l8246:
 19121                           
 19122                           ;stkvar	_dividend @ sp[(-4)+-2]
 19123  0189EE  0EFB               	movlw	-5
 19124  0189F0  AEE3               	btfss	plusw1,7,c
 19125  0189F2  D008               	goto	l8252
 19126                           
 19127                           ;stkvar	_dividend @ sp[(-4)+-2]
 19128                           ;stkvar	_dividend @ sp[(-4)+-2]
 19129  0189F4  0EFA               	movlw	-6
 19130  0189F6  6CE3               	negf	plusw1,c
 19131  0189F8  0EFB               	movlw	-5
 19132  0189FA  1EE3               	comf	plusw1,f,c
 19133  0189FC  B0D8               	btfsc	status,0,c
 19134  0189FE  2AE3               	incf	plusw1,f,c
 19135                           
 19136                           ;stkvar	_sign @ sp[(-4)+2]
 19137  018A00  0EFE               	movlw	-2
 19138  018A02  70E3               	btg	plusw1,0,c
 19139  018A04                     l8252:
 19140                           
 19141                           ;stkvar	_quotient @ sp[(-4)+0]
 19142  018A04  0EFC               	movlw	-4
 19143  018A06  6AE3               	clrf	plusw1,c
 19144  018A08  0EFD               	movlw	-3
 19145  018A0A  6AE3               	clrf	plusw1,c
 19146                           
 19147                           ;stkvar	_divisor @ sp[(-4)+-4]
 19148  018A0C  0EF8               	movlw	-8
 19149  018A0E  006F FF8C  F001    	movff	plusw1,btemp
 19150  018A14  0EF9               	movlw	-7
 19151  018A16  50E3               	movf	plusw1,w,c
 19152  018A18  1001               	iorwf	btemp^0,w,c
 19153  018A1A  B4D8               	btfsc	status,2,c
 19154  018A1C  D066               	goto	u6770
 19155                           
 19156                           ;stkvar	_counter @ sp[(-4)+3]
 19157  018A1E  0EFF               	movlw	-1
 19158  018A20  6AE3               	clrf	plusw1,c
 19159  018A22  D012               	goto	L21
 19160  018A24                     l8258:
 19161                           
 19162                           ;stkvar	_divisor @ sp[(-4)+-4]
 19163  018A24  0EF8               	movlw	-8
 19164  018A26  50E3               	movf	plusw1,w,c
 19165  018A28  90D8               	bcf	status,0,c
 19166  018A2A  34E8               	rlcf	wreg,w,c
 19167  018A2C  6E01               	movwf	btemp^0,c
 19168  018A2E  0EF8               	movlw	-8
 19169  018A30  0060  F007  FFE3   	movff	btemp,plusw1
 19170  018A36  0EF9               	movlw	-7
 19171  018A38  50E3               	movf	plusw1,w,c
 19172  018A3A  34E8               	rlcf	wreg,w,c
 19173  018A3C  6E01               	movwf	btemp^0,c
 19174  018A3E  0EF9               	movlw	-7
 19175  018A40  0060  F007  FFE3   	movff	btemp,plusw1
 19176                           
 19177                           ;stkvar	_counter @ sp[(-4)+3]
 19178  018A46  0EFF               	movlw	-1
 19179  018A48                     L21:
 19180  018A48  2AE3               	incf	plusw1,f,c
 19181                           
 19182                           ;stkvar	_divisor @ sp[(-4)+-4]
 19183  018A4A  0EF9               	movlw	-7
 19184  018A4C  AEE3               	btfss	plusw1,7,c
 19185  018A4E  D7EA               	goto	l8258
 19186  018A50                     u6750:
 19187                           
 19188                           ;stkvar	_quotient @ sp[(-4)+0]
 19189  018A50  0EFC               	movlw	-4
 19190  018A52  50E3               	movf	plusw1,w,c
 19191  018A54  90D8               	bcf	status,0,c
 19192  018A56  34E8               	rlcf	wreg,w,c
 19193  018A58  6E01               	movwf	btemp^0,c
 19194  018A5A  0EFC               	movlw	-4
 19195  018A5C  0060  F007  FFE3   	movff	btemp,plusw1
 19196  018A62  0EFD               	movlw	-3
 19197  018A64  50E3               	movf	plusw1,w,c
 19198  018A66  34E8               	rlcf	wreg,w,c
 19199  018A68  6E01               	movwf	btemp^0,c
 19200  018A6A  0EFD               	movlw	-3
 19201  018A6C  0060  F007  FFE3   	movff	btemp,plusw1
 19202                           
 19203                           ;stkvar	_divisor @ sp[(-4)+-4]
 19204  018A72  0EF8               	movlw	-8
 19205  018A74  006F FF8C  F00B    	movff	plusw1,btemp+10
 19206  018A7A  0EF9               	movlw	-7
 19207  018A7C  006F FF8C  F00C    	movff	plusw1,btemp+11
 19208                           
 19209                           ;stkvar	_dividend @ sp[(-4)+-2]
 19210  018A82  0EFA               	movlw	-6
 19211  018A84  006F FF8C  F009    	movff	plusw1,btemp+8
 19212  018A8A  0EFB               	movlw	-5
 19213  018A8C  006F FF8C  F00A    	movff	plusw1,btemp+9
 19214  018A92  500B               	movf	(btemp+10)^0,w,c
 19215  018A94  5C09               	subwf	(btemp+8)^0,w,c
 19216  018A96  500C               	movf	(btemp+11)^0,w,c
 19217  018A98  580A               	subwfb	(btemp+9)^0,w,c
 19218  018A9A  A0D8               	btfss	status,0,c
 19219  018A9C  D016               	goto	l8272
 19220                           
 19221                           ;stkvar	_divisor @ sp[(-4)+-4]
 19222                           ;stkvar	_dividend @ sp[(-4)+-2]
 19223  018A9E  0EFA               	movlw	-6
 19224  018AA0  50E3               	movf	plusw1,w,c
 19225  018AA2  6E01               	movwf	btemp^0,c
 19226  018AA4  0EF8               	movlw	-8
 19227  018AA6  50E3               	movf	plusw1,w,c
 19228  018AA8  5E01               	subwf	btemp^0,f,c
 19229  018AAA  0EFA               	movlw	-6
 19230  018AAC  0060  F007  FFE3   	movff	btemp,plusw1
 19231  018AB2  0EFB               	movlw	-5
 19232  018AB4  50E3               	movf	plusw1,w,c
 19233  018AB6  6E01               	movwf	btemp^0,c
 19234  018AB8  0EF9               	movlw	-7
 19235  018ABA  50E3               	movf	plusw1,w,c
 19236  018ABC  5A01               	subwfb	btemp^0,f,c
 19237  018ABE  0EFB               	movlw	-5
 19238  018AC0  0060  F007  FFE3   	movff	btemp,plusw1
 19239                           
 19240                           ;stkvar	_quotient @ sp[(-4)+0]
 19241  018AC6  0EFC               	movlw	-4
 19242  018AC8  80E3               	bsf	plusw1,0,c
 19243  018ACA                     l8272:
 19244                           
 19245                           ;stkvar	_divisor @ sp[(-4)+-4]
 19246  018ACA  90D8               	bcf	status,0,c
 19247  018ACC  0EF9               	movlw	-7
 19248  018ACE  32E3               	rrcf	plusw1,f,c
 19249  018AD0  0EF8               	movlw	-8
 19250  018AD2  32E3               	rrcf	plusw1,f,c
 19251                           
 19252                           ;stkvar	_counter @ sp[(-4)+3]
 19253  018AD4  0EFF               	movlw	-1
 19254  018AD6  50E3               	movf	plusw1,w,c
 19255  018AD8  6E01               	movwf	btemp^0,c
 19256  018ADA  0E01               	movlw	1
 19257  018ADC  5E01               	subwf	btemp^0,f,c
 19258  018ADE  0EFF               	movlw	-1
 19259  018AE0  0060  F007  FFE3   	movff	btemp,plusw1
 19260  018AE6  A4D8               	btfss	status,2,c
 19261  018AE8  D7B3               	goto	u6750
 19262  018AEA                     u6770:
 19263                           
 19264                           ;stkvar	_sign @ sp[(-4)+2]
 19265  018AEA  0EFE               	movlw	-2
 19266  018AEC  50E3               	movf	plusw1,w,c
 19267  018AEE  B4D8               	btfsc	status,2,c
 19268  018AF0  D006               	goto	l8280
 19269                           
 19270                           ;stkvar	_quotient @ sp[(-4)+0]
 19271                           ;stkvar	_quotient @ sp[(-4)+0]
 19272  018AF2  0EFC               	movlw	-4
 19273  018AF4  6CE3               	negf	plusw1,c
 19274  018AF6  0EFD               	movlw	-3
 19275  018AF8  1EE3               	comf	plusw1,f,c
 19276  018AFA  B0D8               	btfsc	status,0,c
 19277  018AFC  2AE3               	incf	plusw1,f,c
 19278  018AFE                     l8280:
 19279                           
 19280                           ;stkvar	_quotient @ sp[(-4)+0]
 19281  018AFE  0EFC               	movlw	-4
 19282  018B00  006F FF8C  F001    	movff	plusw1,btemp
 19283  018B06  0EFD               	movlw	-3
 19284  018B08  006F FF8C  F002    	movff	plusw1,btemp+1
 19285                           
 19286                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19287  018B0E  0EF8               	movlw	248
 19288  018B10  26E1               	addwf	fsr1l,f,c
 19289  018B12  0EFF               	movlw	255
 19290  018B14  22E2               	addwfc	fsr1h,f,c
 19291  018B16  0012               	return		;funcret
 19292  018B18                     __end_of___awdiv:
 19293                           	opt callstack 0
 19294                           
 19295 ;; *************** function _dtoa *****************
 19296 ;; Defined at:
 19297 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19298 ;; Parameters:    Size  Location     Type
 19299 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19300 ;;		 -> f(6), NULL(0), 
 19301 ;;  d               8  [STACK] long long 
 19302 ;; Auto vars:     Size  Location     Type
 19303 ;;  n               8  [STACK] long long 
 19304 ;;  i               2  [STACK] int 
 19305 ;;  s               2  [STACK] int 
 19306 ;;  w               2  [STACK] int 
 19307 ;;  p               2  [STACK] int 
 19308 ;; Return value:  Size  Location     Type
 19309 ;;                  2  [STACK] int 
 19310 ;; Registers used:
 19311 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 19312 ;; Tracked objects:
 19313 ;;		On entry : 0/0
 19314 ;;		On exit  : 0/0
 19315 ;;		Unchanged: 0/0
 19316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19321 ;;Total ram usage:        0 bytes
 19322 ;; Hardware stack levels used:    1
 19323 ;; Hardware stack levels required when called:   20
 19324 ;; This function calls:
 19325 ;;		___aodiv
 19326 ;;		___aomod
 19327 ;;		_abs
 19328 ;;		_pad
 19329 ;; This function is called by:
 19330 ;;		_vfpfcnvrt
 19331 ;; This function uses a reentrant model
 19332 ;;
 19333                           
 19334                           	psect	text66
 19335  0152FC                     __ptext66:
 19336                           	opt callstack 0
 19337  0152FC                     _dtoa:
 19338                           	opt callstack 0
 19339                           
 19340                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 19341  0152FC  0E12               	movlw	18
 19342  0152FE  26E1               	addwf	fsr1l,f,c
 19343  015300  0E00               	movlw	0
 19344  015302  22E2               	addwfc	fsr1h,f,c
 19345                           
 19346                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 19347                           ;stkvar	_d @ sp[(-18)+-10]
 19348                           
 19349                           ;incstack = 0
 19350 ;; hardware stack exceeded
 19351  015304  0EE4               	movlw	228
 19352  015306  24E1               	addwf	fsr1l,w,c
 19353  015308  6ED9               	movwf	fsr2l,c
 19354  01530A  0EFF               	movlw	255
 19355  01530C  20E2               	addwfc	fsr1h,w,c
 19356  01530E  6EDA               	movwf	fsr2h,c
 19357                           
 19358                           ;stkvar	_n @ sp[(-18)+2]
 19359  015310  0E08               	movlw	8
 19360  015312  6E01               	movwf	btemp^0,c
 19361  015314  0EF0               	movlw	-16
 19362  015316                     us1047999:
 19363  015316  006F FF7B FFE3     	movff	postinc2,plusw1
 19364  01531C  28E8               	incf	wreg,w,c
 19365  01531E  2E01               	decfsz	btemp^0,f,c
 19366  015320  D7FA               	bra	us1047999
 19367                           
 19368                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 19369                           ;stkvar	_n @ sp[(-18)+2]
 19370  015322  0EF7               	movlw	-9
 19371  015324  AEE3               	btfss	plusw1,7,c
 19372  015326  D002               	goto	u10480
 19373  015328  0E01               	movlw	1
 19374  01532A  D001               	goto	u10490
 19375  01532C                     u10480:
 19376  01532C  0E00               	movlw	0
 19377  01532E                     u10490:
 19378  01532E  6E0B               	movwf	(btemp+10)^0,c
 19379  015330  6A0C               	clrf	(btemp+11)^0,c
 19380                           
 19381                           ;stkvar	_s @ sp[(-18)+12]
 19382  015332  0EFA               	movlw	-6
 19383  015334  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19384  01533A  0EFB               	movlw	-5
 19385  01533C  0060  F033  FFE3   	movff	btemp+11,plusw1
 19386                           
 19387                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 19388                           ;stkvar	_s @ sp[(-18)+12]
 19389  015342  0EFA               	movlw	-6
 19390  015344  006F FF8C  F001    	movff	plusw1,btemp
 19391  01534A  0EFB               	movlw	-5
 19392  01534C  50E3               	movf	plusw1,w,c
 19393  01534E  1001               	iorwf	btemp^0,w,c
 19394  015350  B4D8               	btfsc	status,2,c
 19395  015352  D025               	goto	u10510
 19396                           
 19397                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 19398                           ;stkvar	_n @ sp[(-18)+2]
 19399                           ;stkvar	_n @ sp[(-18)+2]
 19400  015354  0EF0               	movlw	-16
 19401  015356  6CE3               	negf	plusw1,c
 19402  015358  0EF1               	movlw	-15
 19403  01535A  1EE3               	comf	plusw1,f,c
 19404  01535C  0EF2               	movlw	-14
 19405  01535E  1EE3               	comf	plusw1,f,c
 19406  015360  0EF3               	movlw	-13
 19407  015362  1EE3               	comf	plusw1,f,c
 19408  015364  0EF4               	movlw	-12
 19409  015366  1EE3               	comf	plusw1,f,c
 19410  015368  0EF5               	movlw	-11
 19411  01536A  1EE3               	comf	plusw1,f,c
 19412  01536C  0EF6               	movlw	-10
 19413  01536E  1EE3               	comf	plusw1,f,c
 19414  015370  0EF7               	movlw	-9
 19415  015372  1EE3               	comf	plusw1,f,c
 19416  015374  E314               	bnc	u10510
 19417  015376  0EF1               	movlw	-15
 19418  015378  2AE3               	incf	plusw1,f,c
 19419  01537A  E311               	bnc	u10510
 19420  01537C  0EF2               	movlw	-14
 19421  01537E  2AE3               	incf	plusw1,f,c
 19422  015380  E30E               	bnc	u10510
 19423  015382  0EF3               	movlw	-13
 19424  015384  2AE3               	incf	plusw1,f,c
 19425  015386  E30B               	bnc	u10510
 19426  015388  0EF4               	movlw	-12
 19427  01538A  2AE3               	incf	plusw1,f,c
 19428  01538C  E308               	bnc	u10510
 19429  01538E  0EF5               	movlw	-11
 19430  015390  2AE3               	incf	plusw1,f,c
 19431  015392  E305               	bnc	u10510
 19432  015394  0EF6               	movlw	-10
 19433  015396  2AE3               	incf	plusw1,f,c
 19434  015398  E302               	bnc	u10510
 19435  01539A  0EF7               	movlw	-9
 19436  01539C  2AE3               	incf	plusw1,f,c
 19437  01539E                     u10510:
 19438                           
 19439                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 19440  01539E  AE24               	btfss	(_prec+1)^0,7,c
 19441                           
 19442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 19443  0153A0  9225               	bcf	_flags^0,1,c
 19444                           
 19445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 19446  0153A2  BE24               	btfsc	(_prec+1)^0,7,c
 19447  0153A4  D005               	goto	u10530
 19448  0153A6  5024               	movf	(_prec+1)^0,w,c
 19449  0153A8  E110               	bnz	l11502
 19450  0153AA  0423               	decf	_prec^0,w,c
 19451  0153AC  B0D8               	btfsc	status,0,c
 19452  0153AE  D00D               	goto	l11502
 19453  0153B0                     u10530:
 19454  0153B0  0E01               	movlw	1
 19455  0153B2  6E0B               	movwf	(btemp+10)^0,c
 19456  0153B4  0E00               	movlw	0
 19457  0153B6  6E0C               	movwf	(btemp+11)^0,c
 19458                           
 19459                           ;stkvar	_p @ sp[(-18)+16]
 19460  0153B8  0EFE               	movlw	-2
 19461  0153BA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19462  0153C0  0EFF               	movlw	-1
 19463  0153C2  0060  F033  FFE3   	movff	btemp+11,plusw1
 19464  0153C8  D008               	goto	l2118
 19465  0153CA                     l11502:
 19466                           
 19467                           ;stkvar	_p @ sp[(-18)+16]
 19468  0153CA  0EFE               	movlw	-2
 19469  0153CC  0060  F08F  FFE3   	movff	_prec,plusw1
 19470  0153D2  0EFF               	movlw	-1
 19471  0153D4  0060  F093  FFE3   	movff	_prec+1,plusw1
 19472  0153DA                     l2118:
 19473                           
 19474                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 19475                           ;stkvar	_w @ sp[(-18)+14]
 19476  0153DA  0EFC               	movlw	-4
 19477  0153DC  0060  F087  FFE3   	movff	_width,plusw1
 19478  0153E2  0EFD               	movlw	-3
 19479  0153E4  0060  F08B  FFE3   	movff	_width+1,plusw1
 19480                           
 19481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 19482                           ;stkvar	_s @ sp[(-18)+12]
 19483  0153EA  0EFA               	movlw	-6
 19484  0153EC  006F FF8C  F001    	movff	plusw1,btemp
 19485  0153F2  0EFB               	movlw	-5
 19486  0153F4  50E3               	movf	plusw1,w,c
 19487  0153F6  1001               	iorwf	btemp^0,w,c
 19488  0153F8  A4D8               	btfss	status,2,c
 19489  0153FA  D002               	goto	u10550
 19490  0153FC  A425               	btfss	_flags^0,2,c
 19491  0153FE  D00A               	goto	l11510
 19492  015400                     u10550:
 19493                           
 19494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 19495                           ;stkvar	_w @ sp[(-18)+14]
 19496  015400  50E1               	movf	fsr1l,w,c
 19497  015402  0FFC               	addlw	-4
 19498  015404  6ED9               	movwf	fsr2l,c
 19499  015406  50E2               	movf	fsr1h,w,c
 19500  015408  6EDA               	movwf	fsr2h,c
 19501  01540A  0EFF               	movlw	255
 19502  01540C  22DA               	addwfc	fsr2h,f,c
 19503  01540E  06DE               	decf	postinc2,f,c
 19504  015410  0E00               	movlw	0
 19505  015412  5ADD               	subwfb	postdec2,f,c
 19506  015414                     l11510:
 19507                           
 19508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 19509  015414  0E4F               	movlw	79
 19510  015416  6E0B               	movwf	(btemp+10)^0,c
 19511  015418  0E00               	movlw	0
 19512  01541A  6E0C               	movwf	(btemp+11)^0,c
 19513                           
 19514                           ;stkvar	_i @ sp[(-18)+10]
 19515  01541C  0EF8               	movlw	-8
 19516  01541E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19517  015424  0EF9               	movlw	-7
 19518  015426  0060  F033  FFE3   	movff	btemp+11,plusw1
 19519                           
 19520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 19521  01542C  0103               	movlb	3	; () banked
 19522  01542E  6BE3               	clrf	(_dbuf+79)& (0+255),b
 19523                           
 19524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19525  015430  D109               	goto	l11524
 19526  015432                     l11514:
 19527                           
 19528                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 19529                           ;stkvar	_i @ sp[(-18)+10]
 19530  015432  50E1               	movf	fsr1l,w,c
 19531  015434  0FF8               	addlw	-8
 19532  015436  6ED9               	movwf	fsr2l,c
 19533  015438  50E2               	movf	fsr1h,w,c
 19534  01543A  6EDA               	movwf	fsr2h,c
 19535  01543C  0EFF               	movlw	255
 19536  01543E  22DA               	addwfc	fsr2h,f,c
 19537  015440  06DE               	decf	postinc2,f,c
 19538  015442  0E00               	movlw	0
 19539  015444  5ADD               	subwfb	postdec2,f,c
 19540                           
 19541                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 19542  015446  0E0A               	movlw	10
 19543  015448  6EE6               	movwf	postinc1,c
 19544  01544A  0E00               	movlw	0
 19545  01544C  6EE6               	movwf	postinc1,c
 19546  01544E  0E00               	movlw	0
 19547  015450  6EE6               	movwf	postinc1,c
 19548  015452  0E00               	movlw	0
 19549  015454  6EE6               	movwf	postinc1,c
 19550  015456  0E00               	movlw	0
 19551  015458  6EE6               	movwf	postinc1,c
 19552  01545A  0E00               	movlw	0
 19553  01545C  6EE6               	movwf	postinc1,c
 19554  01545E  0E00               	movlw	0
 19555  015460  6EE6               	movwf	postinc1,c
 19556  015462  0E00               	movlw	0
 19557  015464  6EE6               	movwf	postinc1,c
 19558                           
 19559                           ;stkvar	_n @ sp[(-26)+2]
 19560  015466  50E1               	movf	fsr1l,w,c
 19561  015468  0FE8               	addlw	-24
 19562  01546A  6ED9               	movwf	fsr2l,c
 19563  01546C  50E2               	movf	fsr1h,w,c
 19564  01546E  6EDA               	movwf	fsr2h,c
 19565  015470  0EFF               	movlw	255
 19566  015472  22DA               	addwfc	fsr2h,f,c
 19567  015474  006F FF7B FFE6     	movff	postinc2,postinc1
 19568  01547A  006F FF7B FFE6     	movff	postinc2,postinc1
 19569  015480  006F FF7B FFE6     	movff	postinc2,postinc1
 19570  015486  006F FF7B FFE6     	movff	postinc2,postinc1
 19571  01548C  006F FF7B FFE6     	movff	postinc2,postinc1
 19572  015492  006F FF7B FFE6     	movff	postinc2,postinc1
 19573  015498  006F FF7B FFE6     	movff	postinc2,postinc1
 19574  01549E  006F FF7B FFE6     	movff	postinc2,postinc1
 19575  0154A4  ECB3  F0B9         	call	___aomod	;wreg free
 19576  0154A8  52E5               	movf	postdec1,f,c
 19577  0154AA  006F FF9C  F018    	movff	indf1,btemp+23
 19578  0154B0  52E5               	movf	postdec1,f,c
 19579  0154B2  006F FF9C  F017    	movff	indf1,btemp+22
 19580  0154B8  52E5               	movf	postdec1,f,c
 19581  0154BA  006F FF9C  F016    	movff	indf1,btemp+21
 19582  0154C0  52E5               	movf	postdec1,f,c
 19583  0154C2  006F FF9C  F015    	movff	indf1,btemp+20
 19584  0154C8  52E5               	movf	postdec1,f,c
 19585  0154CA  006F FF9C  F014    	movff	indf1,btemp+19
 19586  0154D0  52E5               	movf	postdec1,f,c
 19587  0154D2  006F FF9C  F013    	movff	indf1,btemp+18
 19588  0154D8  52E5               	movf	postdec1,f,c
 19589  0154DA  006F FF9C  F012    	movff	indf1,btemp+17
 19590  0154E0  52E5               	movf	postdec1,f,c
 19591  0154E2  006F FF9C  F011    	movff	indf1,btemp+16
 19592  0154E8  0EF8               	movlw	248
 19593  0154EA  26E1               	addwf	fsr1l,f,c
 19594  0154EC  0EFF               	movlw	255
 19595  0154EE  22E2               	addwfc	fsr1h,f,c
 19596  0154F0  0060  F044  F00B   	movff	btemp+16,btemp+10
 19597  0154F6  0060  F048  F00C   	movff	btemp+17,btemp+11
 19598  0154FC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19599  015502  0060  F033  FFE6   	movff	btemp+11,postinc1
 19600  015508  EC2E  F0D5         	call	_abs	;wreg free
 19601  01550C  0E30               	movlw	48
 19602  01550E  2601               	addwf	btemp^0,f,c
 19603                           
 19604                           ;stkvar	_i @ sp[(-18)+10]
 19605  015510  0EF8               	movlw	-8
 19606  015512  006F FF8C  F00B    	movff	plusw1,btemp+10
 19607  015518  0EF9               	movlw	-7
 19608  01551A  006F FF8C  F00C    	movff	plusw1,btemp+11
 19609  015520  0E94               	movlw	low _dbuf
 19610  015522  240B               	addwf	(btemp+10)^0,w,c
 19611  015524  6ED9               	movwf	fsr2l,c
 19612  015526  0E03               	movlw	high _dbuf
 19613  015528  200C               	addwfc	(btemp+11)^0,w,c
 19614  01552A  6EDA               	movwf	fsr2h,c
 19615  01552C  0060  F007  FFDF   	movff	btemp,indf2
 19616                           
 19617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 19618                           ;stkvar	_p @ sp[(-18)+16]
 19619  015532  50E1               	movf	fsr1l,w,c
 19620  015534  0FFE               	addlw	-2
 19621  015536  6ED9               	movwf	fsr2l,c
 19622  015538  50E2               	movf	fsr1h,w,c
 19623  01553A  6EDA               	movwf	fsr2h,c
 19624  01553C  0EFF               	movlw	255
 19625  01553E  22DA               	addwfc	fsr2h,f,c
 19626  015540  06DE               	decf	postinc2,f,c
 19627  015542  0E00               	movlw	0
 19628  015544  5ADD               	subwfb	postdec2,f,c
 19629                           
 19630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 19631                           ;stkvar	_w @ sp[(-18)+14]
 19632  015546  50E1               	movf	fsr1l,w,c
 19633  015548  0FFC               	addlw	-4
 19634  01554A  6ED9               	movwf	fsr2l,c
 19635  01554C  50E2               	movf	fsr1h,w,c
 19636  01554E  6EDA               	movwf	fsr2h,c
 19637  015550  0EFF               	movlw	255
 19638  015552  22DA               	addwfc	fsr2h,f,c
 19639  015554  06DE               	decf	postinc2,f,c
 19640  015556  0E00               	movlw	0
 19641  015558  5ADD               	subwfb	postdec2,f,c
 19642                           
 19643                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 19644  01555A  0E0A               	movlw	10
 19645  01555C  6EE6               	movwf	postinc1,c
 19646  01555E  0E00               	movlw	0
 19647  015560  6EE6               	movwf	postinc1,c
 19648  015562  0E00               	movlw	0
 19649  015564  6EE6               	movwf	postinc1,c
 19650  015566  0E00               	movlw	0
 19651  015568  6EE6               	movwf	postinc1,c
 19652  01556A  0E00               	movlw	0
 19653  01556C  6EE6               	movwf	postinc1,c
 19654  01556E  0E00               	movlw	0
 19655  015570  6EE6               	movwf	postinc1,c
 19656  015572  0E00               	movlw	0
 19657  015574  6EE6               	movwf	postinc1,c
 19658  015576  0E00               	movlw	0
 19659  015578  6EE6               	movwf	postinc1,c
 19660                           
 19661                           ;stkvar	_n @ sp[(-26)+2]
 19662  01557A  50E1               	movf	fsr1l,w,c
 19663  01557C  0FE8               	addlw	-24
 19664  01557E  6ED9               	movwf	fsr2l,c
 19665  015580  50E2               	movf	fsr1h,w,c
 19666  015582  6EDA               	movwf	fsr2h,c
 19667  015584  0EFF               	movlw	255
 19668  015586  22DA               	addwfc	fsr2h,f,c
 19669  015588  006F FF7B FFE6     	movff	postinc2,postinc1
 19670  01558E  006F FF7B FFE6     	movff	postinc2,postinc1
 19671  015594  006F FF7B FFE6     	movff	postinc2,postinc1
 19672  01559A  006F FF7B FFE6     	movff	postinc2,postinc1
 19673  0155A0  006F FF7B FFE6     	movff	postinc2,postinc1
 19674  0155A6  006F FF7B FFE6     	movff	postinc2,postinc1
 19675  0155AC  006F FF7B FFE6     	movff	postinc2,postinc1
 19676  0155B2  006F FF7B FFE6     	movff	postinc2,postinc1
 19677  0155B8  EC39  F0B7         	call	___aodiv	;wreg free
 19678  0155BC  52E5               	movf	postdec1,f,c
 19679  0155BE  006F FF9C  F018    	movff	indf1,btemp+23
 19680  0155C4  52E5               	movf	postdec1,f,c
 19681  0155C6  006F FF9C  F017    	movff	indf1,btemp+22
 19682  0155CC  52E5               	movf	postdec1,f,c
 19683  0155CE  006F FF9C  F016    	movff	indf1,btemp+21
 19684  0155D4  52E5               	movf	postdec1,f,c
 19685  0155D6  006F FF9C  F015    	movff	indf1,btemp+20
 19686  0155DC  52E5               	movf	postdec1,f,c
 19687  0155DE  006F FF9C  F014    	movff	indf1,btemp+19
 19688  0155E4  52E5               	movf	postdec1,f,c
 19689  0155E6  006F FF9C  F013    	movff	indf1,btemp+18
 19690  0155EC  52E5               	movf	postdec1,f,c
 19691  0155EE  006F FF9C  F012    	movff	indf1,btemp+17
 19692  0155F4  52E5               	movf	postdec1,f,c
 19693  0155F6  006F FF9C  F011    	movff	indf1,btemp+16
 19694  0155FC  0EF8               	movlw	248
 19695  0155FE  26E1               	addwf	fsr1l,f,c
 19696  015600  0EFF               	movlw	255
 19697  015602  22E2               	addwfc	fsr1h,f,c
 19698                           
 19699                           ;stkvar	_n @ sp[(-18)+2]
 19700  015604  0EF0               	movlw	-16
 19701  015606  0060  F047  FFE3   	movff	btemp+16,plusw1
 19702  01560C  0EF1               	movlw	-15
 19703  01560E  0060  F04B  FFE3   	movff	btemp+17,plusw1
 19704  015614  0EF2               	movlw	-14
 19705  015616  0060  F04F  FFE3   	movff	btemp+18,plusw1
 19706  01561C  0EF3               	movlw	-13
 19707  01561E  0060  F053  FFE3   	movff	btemp+19,plusw1
 19708  015624  0EF4               	movlw	-12
 19709  015626  0060  F057  FFE3   	movff	btemp+20,plusw1
 19710  01562C  0EF5               	movlw	-11
 19711  01562E  0060  F05B  FFE3   	movff	btemp+21,plusw1
 19712  015634  0EF6               	movlw	-10
 19713  015636  0060  F05F  FFE3   	movff	btemp+22,plusw1
 19714  01563C  0EF7               	movlw	-9
 19715  01563E  0060  F063  FFE3   	movff	btemp+23,plusw1
 19716  015644                     l11524:
 19717                           
 19718                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19719                           ;stkvar	_i @ sp[(-18)+10]
 19720  015644  0EF9               	movlw	-7
 19721  015646  BEE3               	btfsc	plusw1,7,c
 19722  015648  D036               	goto	u10600
 19723  01564A  0EF9               	movlw	-7
 19724  01564C  50E3               	movf	plusw1,w,c
 19725  01564E  E104               	bnz	u10560
 19726  015650  0EF8               	movlw	-8
 19727  015652  04E3               	decf	plusw1,w,c
 19728  015654  A0D8               	btfss	status,0,c
 19729  015656  D02F               	goto	u10600
 19730  015658                     u10560:
 19731                           
 19732                           ;stkvar	_n @ sp[(-18)+2]
 19733  015658  0EF0               	movlw	-16
 19734  01565A  50E3               	movf	plusw1,w,c
 19735  01565C  E115               	bnz	u10571
 19736  01565E  0EF1               	movlw	-15
 19737  015660  50E3               	movf	plusw1,w,c
 19738  015662  E112               	bnz	u10571
 19739  015664  0EF2               	movlw	-14
 19740  015666  50E3               	movf	plusw1,w,c
 19741  015668  E10F               	bnz	u10571
 19742  01566A  0EF3               	movlw	-13
 19743  01566C  50E3               	movf	plusw1,w,c
 19744  01566E  E10C               	bnz	u10571
 19745  015670  0EF4               	movlw	-12
 19746  015672  50E3               	movf	plusw1,w,c
 19747  015674  E109               	bnz	u10571
 19748  015676  0EF5               	movlw	-11
 19749  015678  50E3               	movf	plusw1,w,c
 19750  01567A  E106               	bnz	u10571
 19751  01567C  0EF6               	movlw	-10
 19752  01567E  50E3               	movf	plusw1,w,c
 19753  015680  E103               	bnz	u10571
 19754  015682  0EF7               	movlw	-9
 19755  015684  50E3               	movf	plusw1,w,c
 19756  015686  A4D8               	btfss	status,2,c
 19757  015688                     u10571:
 19758  015688  D6D4               	goto	l11514
 19759                           
 19760                           ;stkvar	_p @ sp[(-18)+16]
 19761  01568A  0EFF               	movlw	-1
 19762  01568C  BEE3               	btfsc	plusw1,7,c
 19763  01568E  D007               	goto	u10580
 19764  015690  0EFF               	movlw	-1
 19765  015692  50E3               	movf	plusw1,w,c
 19766  015694  E103               	bnz	u10581
 19767  015696  0EFE               	movlw	-2
 19768  015698  04E3               	decf	plusw1,w,c
 19769  01569A  B0D8               	btfsc	status,0,c
 19770  01569C                     u10581:
 19771  01569C  D6CA               	goto	l11514
 19772  01569E                     u10580:
 19773                           
 19774                           ;stkvar	_w @ sp[(-18)+14]
 19775  01569E  0EFD               	movlw	-3
 19776  0156A0  BEE3               	btfsc	plusw1,7,c
 19777  0156A2  D009               	goto	u10600
 19778  0156A4  0EFD               	movlw	-3
 19779  0156A6  50E3               	movf	plusw1,w,c
 19780  0156A8  E104               	bnz	u10590
 19781  0156AA  0EFC               	movlw	-4
 19782  0156AC  04E3               	decf	plusw1,w,c
 19783  0156AE  A0D8               	btfss	status,0,c
 19784  0156B0  D002               	goto	u10600
 19785  0156B2                     u10590:
 19786  0156B2  B225               	btfsc	_flags^0,1,c
 19787  0156B4  D6BE               	goto	l11514
 19788  0156B6                     u10600:
 19789                           
 19790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 19791                           ;stkvar	_s @ sp[(-18)+12]
 19792  0156B6  0EFA               	movlw	-6
 19793  0156B8  006F FF8C  F001    	movff	plusw1,btemp
 19794  0156BE  0EFB               	movlw	-5
 19795  0156C0  50E3               	movf	plusw1,w,c
 19796  0156C2  1001               	iorwf	btemp^0,w,c
 19797  0156C4  A4D8               	btfss	status,2,c
 19798  0156C6  D002               	goto	u10620
 19799  0156C8  A425               	btfss	_flags^0,2,c
 19800  0156CA  D033               	goto	l11548
 19801  0156CC                     u10620:
 19802                           
 19803                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 19804                           ;stkvar	_i @ sp[(-18)+10]
 19805  0156CC  50E1               	movf	fsr1l,w,c
 19806  0156CE  0FF8               	addlw	-8
 19807  0156D0  6ED9               	movwf	fsr2l,c
 19808  0156D2  50E2               	movf	fsr1h,w,c
 19809  0156D4  6EDA               	movwf	fsr2h,c
 19810  0156D6  0EFF               	movlw	255
 19811  0156D8  22DA               	addwfc	fsr2h,f,c
 19812  0156DA  06DE               	decf	postinc2,f,c
 19813  0156DC  0E00               	movlw	0
 19814  0156DE  5ADD               	subwfb	postdec2,f,c
 19815                           
 19816                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 19817                           ;stkvar	_s @ sp[(-18)+12]
 19818  0156E0  0EFA               	movlw	-6
 19819  0156E2  006F FF8C  F001    	movff	plusw1,btemp
 19820  0156E8  0EFB               	movlw	-5
 19821  0156EA  50E3               	movf	plusw1,w,c
 19822  0156EC  1001               	iorwf	btemp^0,w,c
 19823  0156EE  A4D8               	btfss	status,2,c
 19824  0156F0  D002               	goto	l11544
 19825  0156F2  0E2B               	movlw	43
 19826  0156F4  D001               	goto	L22
 19827  0156F6                     l11544:
 19828  0156F6  0E2D               	movlw	45
 19829  0156F8                     L22:
 19830  0156F8  6E0B               	movwf	(btemp+10)^0,c
 19831  0156FA  0E00               	movlw	0
 19832  0156FC  6E0C               	movwf	(btemp+11)^0,c
 19833                           
 19834                           ;stkvar	_dtoa$5309 @ sp[(-18)+0]
 19835  0156FE  0EEE               	movlw	-18
 19836  015700  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19837  015706  0EEF               	movlw	-17
 19838  015708  0060  F033  FFE3   	movff	btemp+11,plusw1
 19839                           
 19840                           ;stkvar	_dtoa$5309 @ sp[(-18)+0]
 19841                           ;stkvar	_i @ sp[(-18)+10]
 19842  01570E  0EF8               	movlw	-8
 19843  015710  006F FF8C  F00B    	movff	plusw1,btemp+10
 19844  015716  0EF9               	movlw	-7
 19845  015718  006F FF8C  F00C    	movff	plusw1,btemp+11
 19846  01571E  0E94               	movlw	low _dbuf
 19847  015720  240B               	addwf	(btemp+10)^0,w,c
 19848  015722  6ED9               	movwf	fsr2l,c
 19849  015724  0E03               	movlw	high _dbuf
 19850  015726  200C               	addwfc	(btemp+11)^0,w,c
 19851  015728  6EDA               	movwf	fsr2h,c
 19852  01572A  0EEE               	movlw	-18
 19853  01572C  006F FF8F FFDF     	movff	plusw1,indf2
 19854  015732                     l11548:
 19855                           
 19856                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 19857                           ;stkvar	_w @ sp[(-18)+14]
 19858  015732  0EFC               	movlw	-4
 19859  015734  006F FF8F FFE6     	movff	plusw1,postinc1
 19860  01573A  006F FF8F FFE6     	movff	plusw1,postinc1
 19861                           
 19862                           ;stkvar	_i @ sp[(-20)+10]
 19863  015740  0E94               	movlw	low _dbuf
 19864  015742  6E0B               	movwf	(btemp+10)^0,c
 19865  015744  0E03               	movlw	high _dbuf
 19866  015746  6E0C               	movwf	(btemp+11)^0,c
 19867  015748  0EF6               	movlw	-10
 19868  01574A  50E3               	movf	plusw1,w,c
 19869  01574C  260B               	addwf	(btemp+10)^0,f,c
 19870  01574E  0EF7               	movlw	-9
 19871  015750  50E3               	movf	plusw1,w,c
 19872  015752  220C               	addwfc	(btemp+11)^0,f,c
 19873  015754  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19874  01575A  0060  F033  FFE6   	movff	btemp+11,postinc1
 19875                           
 19876                           ;stkvar	_fp @ sp[(-22)+-2]
 19877  015760  0EE8               	movlw	-24
 19878  015762  006F FF8F FFE6     	movff	plusw1,postinc1
 19879  015768  006F FF8F FFE6     	movff	plusw1,postinc1
 19880  01576E  EC7F  F0C8         	call	_pad	;wreg free
 19881                           
 19882                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 19883  015772  0EE4               	movlw	228
 19884  015774  26E1               	addwf	fsr1l,f,c
 19885  015776  0EFF               	movlw	255
 19886  015778  22E2               	addwfc	fsr1h,f,c
 19887  01577A  0012               	return		;funcret
 19888  01577C                     __end_of_dtoa:
 19889                           	opt callstack 0
 19890                           
 19891 ;; *************** function _abs *****************
 19892 ;; Defined at:
 19893 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 19894 ;; Parameters:    Size  Location     Type
 19895 ;;  a               2  [STACK] int 
 19896 ;; Auto vars:     Size  Location     Type
 19897 ;;		None
 19898 ;; Return value:  Size  Location     Type
 19899 ;;                  2  [STACK] int 
 19900 ;; Registers used:
 19901 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 19902 ;; Tracked objects:
 19903 ;;		On entry : 0/3
 19904 ;;		On exit  : 0/0
 19905 ;;		Unchanged: 0/0
 19906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19911 ;;Total ram usage:        0 bytes
 19912 ;; Hardware stack levels used:    1
 19913 ;; Hardware stack levels required when called:   15
 19914 ;; This function calls:
 19915 ;;		Nothing
 19916 ;; This function is called by:
 19917 ;;		_dtoa
 19918 ;; This function uses a reentrant model
 19919 ;;
 19920                           
 19921                           	psect	text67
 19922  01AA5C                     __ptext67:
 19923                           	opt callstack 0
 19924  01AA5C                     _abs:
 19925                           	opt callstack 0
 19926                           
 19927                           ;stkvar	_a @ sp[(0)+-2]
 19928                           
 19929                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19930                           ;incstack = 0
 19931 ;; hardware stack exceeded
 19932  01AA5C  0EFF               	movlw	-1
 19933  01AA5E  BEE3               	btfsc	plusw1,7,c
 19934  01AA60  D007               	goto	u5730
 19935  01AA62  0EFF               	movlw	-1
 19936  01AA64  50E3               	movf	plusw1,w,c
 19937  01AA66  E112               	bnz	l7734
 19938  01AA68  0EFE               	movlw	-2
 19939  01AA6A  04E3               	decf	plusw1,w,c
 19940  01AA6C  B0D8               	btfsc	status,0,c
 19941  01AA6E  D00E               	goto	l7734
 19942  01AA70                     u5730:
 19943                           
 19944                           ;stkvar	_a @ sp[(0)+-2]
 19945  01AA70  0EFE               	movlw	-2
 19946  01AA72  006F FF8C  F001    	movff	plusw1,btemp
 19947  01AA78  1E01               	comf	btemp^0,f,c
 19948  01AA7A  0EFF               	movlw	-1
 19949  01AA7C  006F FF8C  F002    	movff	plusw1,btemp+1
 19950  01AA82  1E02               	comf	(btemp+1)^0,f,c
 19951  01AA84  2A01               	incf	btemp^0,f,c
 19952  01AA86  B4D8               	btfsc	status,2,c
 19953  01AA88  2A02               	incf	(btemp+1)^0,f,c
 19954  01AA8A  D008               	goto	l3044
 19955  01AA8C                     l7734:
 19956                           
 19957                           ;stkvar	_a @ sp[(0)+-2]
 19958  01AA8C  0EFE               	movlw	-2
 19959  01AA8E  006F FF8C  F001    	movff	plusw1,btemp
 19960  01AA94  0EFF               	movlw	-1
 19961  01AA96  006F FF8C  F002    	movff	plusw1,btemp+1
 19962  01AA9C                     l3044:
 19963                           
 19964                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 19965  01AA9C  52E5               	movf	postdec1,f,c
 19966  01AA9E  52E5               	movf	postdec1,f,c
 19967  01AAA0  0012               	return		;funcret
 19968  01AAA2                     __end_of_abs:
 19969                           	opt callstack 0
 19970                           
 19971 ;; *************** function ___aomod *****************
 19972 ;; Defined at:
 19973 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 19974 ;; Parameters:    Size  Location     Type
 19975 ;;  dividend        8  [STACK] long long 
 19976 ;;  divisor         8  [STACK] long long 
 19977 ;; Auto vars:     Size  Location     Type
 19978 ;;  sign            1  [STACK] unsigned char 
 19979 ;;  counter         1  [STACK] unsigned char 
 19980 ;; Return value:  Size  Location     Type
 19981 ;;                  8  [STACK] long long 
 19982 ;; Registers used:
 19983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19984 ;; Tracked objects:
 19985 ;;		On entry : 0/3
 19986 ;;		On exit  : 0/0
 19987 ;;		Unchanged: 0/0
 19988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19993 ;;Total ram usage:        0 bytes
 19994 ;; Hardware stack levels used:    1
 19995 ;; Hardware stack levels required when called:   15
 19996 ;; This function calls:
 19997 ;;		Nothing
 19998 ;; This function is called by:
 19999 ;;		_dtoa
 20000 ;; This function uses a reentrant model
 20001 ;;
 20002                           
 20003                           	psect	text68
 20004  017366                     __ptext68:
 20005                           	opt callstack 0
 20006  017366                     ___aomod:
 20007                           	opt callstack 0
 20008                           
 20009                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 20010  017366  52E6               	movf	postinc1,f,c
 20011  017368  52E6               	movf	postinc1,f,c
 20012                           
 20013                           ;stkvar	_sign @ sp[(-2)+0]
 20014                           
 20015                           ;incstack = 0
 20016 ;; hardware stack exceeded
 20017  01736A  0EFE               	movlw	-2
 20018  01736C  6AE3               	clrf	plusw1,c
 20019                           
 20020                           ;stkvar	_dividend @ sp[(-2)+-8]
 20021  01736E  0EFD               	movlw	-3
 20022  017370  AEE3               	btfss	plusw1,7,c
 20023  017372  D028               	goto	l7892
 20024                           
 20025                           ;stkvar	_dividend @ sp[(-2)+-8]
 20026                           ;stkvar	_dividend @ sp[(-2)+-8]
 20027  017374  0EF6               	movlw	-10
 20028  017376  6CE3               	negf	plusw1,c
 20029  017378  0EF7               	movlw	-9
 20030  01737A  1EE3               	comf	plusw1,f,c
 20031  01737C  0EF8               	movlw	-8
 20032  01737E  1EE3               	comf	plusw1,f,c
 20033  017380  0EF9               	movlw	-7
 20034  017382  1EE3               	comf	plusw1,f,c
 20035  017384  0EFA               	movlw	-6
 20036  017386  1EE3               	comf	plusw1,f,c
 20037  017388  0EFB               	movlw	-5
 20038  01738A  1EE3               	comf	plusw1,f,c
 20039  01738C  0EFC               	movlw	-4
 20040  01738E  1EE3               	comf	plusw1,f,c
 20041  017390  0EFD               	movlw	-3
 20042  017392  1EE3               	comf	plusw1,f,c
 20043  017394  E314               	bnc	u6160
 20044  017396  0EF7               	movlw	-9
 20045  017398  2AE3               	incf	plusw1,f,c
 20046  01739A  E311               	bnc	u6160
 20047  01739C  0EF8               	movlw	-8
 20048  01739E  2AE3               	incf	plusw1,f,c
 20049  0173A0  E30E               	bnc	u6160
 20050  0173A2  0EF9               	movlw	-7
 20051  0173A4  2AE3               	incf	plusw1,f,c
 20052  0173A6  E30B               	bnc	u6160
 20053  0173A8  0EFA               	movlw	-6
 20054  0173AA  2AE3               	incf	plusw1,f,c
 20055  0173AC  E308               	bnc	u6160
 20056  0173AE  0EFB               	movlw	-5
 20057  0173B0  2AE3               	incf	plusw1,f,c
 20058  0173B2  E305               	bnc	u6160
 20059  0173B4  0EFC               	movlw	-4
 20060  0173B6  2AE3               	incf	plusw1,f,c
 20061  0173B8  E302               	bnc	u6160
 20062  0173BA  0EFD               	movlw	-3
 20063  0173BC  2AE3               	incf	plusw1,f,c
 20064  0173BE                     u6160:
 20065                           
 20066                           ;stkvar	_sign @ sp[(-2)+0]
 20067  0173BE  0EFE               	movlw	-2
 20068  0173C0  6AE3               	clrf	plusw1,c
 20069  0173C2  2AE3               	incf	plusw1,f,c
 20070  0173C4                     l7892:
 20071                           
 20072                           ;stkvar	_divisor @ sp[(-2)+-16]
 20073  0173C4  0EF5               	movlw	-11
 20074  0173C6  AEE3               	btfss	plusw1,7,c
 20075  0173C8  D025               	goto	u6180
 20076                           
 20077                           ;stkvar	_divisor @ sp[(-2)+-16]
 20078                           ;stkvar	_divisor @ sp[(-2)+-16]
 20079  0173CA  0EEE               	movlw	-18
 20080  0173CC  6CE3               	negf	plusw1,c
 20081  0173CE  0EEF               	movlw	-17
 20082  0173D0  1EE3               	comf	plusw1,f,c
 20083  0173D2  0EF0               	movlw	-16
 20084  0173D4  1EE3               	comf	plusw1,f,c
 20085  0173D6  0EF1               	movlw	-15
 20086  0173D8  1EE3               	comf	plusw1,f,c
 20087  0173DA  0EF2               	movlw	-14
 20088  0173DC  1EE3               	comf	plusw1,f,c
 20089  0173DE  0EF3               	movlw	-13
 20090  0173E0  1EE3               	comf	plusw1,f,c
 20091  0173E2  0EF4               	movlw	-12
 20092  0173E4  1EE3               	comf	plusw1,f,c
 20093  0173E6  0EF5               	movlw	-11
 20094  0173E8  1EE3               	comf	plusw1,f,c
 20095  0173EA  E314               	bnc	u6180
 20096  0173EC  0EEF               	movlw	-17
 20097  0173EE  2AE3               	incf	plusw1,f,c
 20098  0173F0  E311               	bnc	u6180
 20099  0173F2  0EF0               	movlw	-16
 20100  0173F4  2AE3               	incf	plusw1,f,c
 20101  0173F6  E30E               	bnc	u6180
 20102  0173F8  0EF1               	movlw	-15
 20103  0173FA  2AE3               	incf	plusw1,f,c
 20104  0173FC  E30B               	bnc	u6180
 20105  0173FE  0EF2               	movlw	-14
 20106  017400  2AE3               	incf	plusw1,f,c
 20107  017402  E308               	bnc	u6180
 20108  017404  0EF3               	movlw	-13
 20109  017406  2AE3               	incf	plusw1,f,c
 20110  017408  E305               	bnc	u6180
 20111  01740A  0EF4               	movlw	-12
 20112  01740C  2AE3               	incf	plusw1,f,c
 20113  01740E  E302               	bnc	u6180
 20114  017410  0EF5               	movlw	-11
 20115  017412  2AE3               	incf	plusw1,f,c
 20116  017414                     u6180:
 20117                           
 20118                           ;stkvar	_divisor @ sp[(-2)+-16]
 20119  017414  0EEE               	movlw	-18
 20120  017416  50E3               	movf	plusw1,w,c
 20121  017418  E116               	bnz	u6190
 20122  01741A  0EEF               	movlw	-17
 20123  01741C  50E3               	movf	plusw1,w,c
 20124  01741E  E113               	bnz	u6190
 20125  017420  0EF0               	movlw	-16
 20126  017422  50E3               	movf	plusw1,w,c
 20127  017424  E110               	bnz	u6190
 20128  017426  0EF1               	movlw	-15
 20129  017428  50E3               	movf	plusw1,w,c
 20130  01742A  E10D               	bnz	u6190
 20131  01742C  0EF2               	movlw	-14
 20132  01742E  50E3               	movf	plusw1,w,c
 20133  017430  E10A               	bnz	u6190
 20134  017432  0EF3               	movlw	-13
 20135  017434  50E3               	movf	plusw1,w,c
 20136  017436  E107               	bnz	u6190
 20137  017438  0EF4               	movlw	-12
 20138  01743A  50E3               	movf	plusw1,w,c
 20139  01743C  E104               	bnz	u6190
 20140  01743E  0EF5               	movlw	-11
 20141  017440  50E3               	movf	plusw1,w,c
 20142  017442  B4D8               	btfsc	status,2,c
 20143  017444  D075               	goto	u6220
 20144  017446                     u6190:
 20145                           
 20146                           ;stkvar	_counter @ sp[(-2)+1]
 20147  017446  0EFF               	movlw	-1
 20148  017448  6AE3               	clrf	plusw1,c
 20149  01744A  D012               	goto	L23
 20150  01744C                     l7900:
 20151                           
 20152                           ;stkvar	_divisor @ sp[(-2)+-16]
 20153  01744C  90D8               	bcf	status,0,c
 20154  01744E  0EEE               	movlw	-18
 20155  017450  36E3               	rlcf	plusw1,f,c
 20156  017452  0EEF               	movlw	-17
 20157  017454  36E3               	rlcf	plusw1,f,c
 20158  017456  0EF0               	movlw	-16
 20159  017458  36E3               	rlcf	plusw1,f,c
 20160  01745A  0EF1               	movlw	-15
 20161  01745C  36E3               	rlcf	plusw1,f,c
 20162  01745E  0EF2               	movlw	-14
 20163  017460  36E3               	rlcf	plusw1,f,c
 20164  017462  0EF3               	movlw	-13
 20165  017464  36E3               	rlcf	plusw1,f,c
 20166  017466  0EF4               	movlw	-12
 20167  017468  36E3               	rlcf	plusw1,f,c
 20168  01746A  0EF5               	movlw	-11
 20169  01746C  36E3               	rlcf	plusw1,f,c
 20170                           
 20171                           ;stkvar	_counter @ sp[(-2)+1]
 20172  01746E  0EFF               	movlw	-1
 20173  017470                     L23:
 20174  017470  2AE3               	incf	plusw1,f,c
 20175                           
 20176                           ;stkvar	_divisor @ sp[(-2)+-16]
 20177  017472  0EF5               	movlw	-11
 20178  017474  AEE3               	btfss	plusw1,7,c
 20179  017476  D7EA               	goto	l7900
 20180  017478                     u6200:
 20181                           
 20182                           ;stkvar	_divisor @ sp[(-2)+-16]
 20183                           ;stkvar	_dividend @ sp[(-2)+-8]
 20184  017478  50E1               	movf	fsr1l,w,c
 20185  01747A  0FF6               	addlw	-10
 20186  01747C  6ED9               	movwf	fsr2l,c
 20187  01747E  50E2               	movf	fsr1h,w,c
 20188  017480  6EDA               	movwf	fsr2h,c
 20189  017482  0EFF               	movlw	255
 20190  017484  22DA               	addwfc	fsr2h,f,c
 20191  017486  0EEE               	movlw	-18
 20192  017488  50E3               	movf	plusw1,w,c
 20193  01748A  5CDE               	subwf	postinc2,w,c
 20194  01748C  0EEF               	movlw	-17
 20195  01748E  50E3               	movf	plusw1,w,c
 20196  017490  58DE               	subwfb	postinc2,w,c
 20197  017492  0EF0               	movlw	-16
 20198  017494  50E3               	movf	plusw1,w,c
 20199  017496  58DE               	subwfb	postinc2,w,c
 20200  017498  0EF1               	movlw	-15
 20201  01749A  50E3               	movf	plusw1,w,c
 20202  01749C  58DE               	subwfb	postinc2,w,c
 20203  01749E  0EF2               	movlw	-14
 20204  0174A0  50E3               	movf	plusw1,w,c
 20205  0174A2  58DE               	subwfb	postinc2,w,c
 20206  0174A4  0EF3               	movlw	-13
 20207  0174A6  50E3               	movf	plusw1,w,c
 20208  0174A8  58DE               	subwfb	postinc2,w,c
 20209  0174AA  0EF4               	movlw	-12
 20210  0174AC  50E3               	movf	plusw1,w,c
 20211  0174AE  58DE               	subwfb	postinc2,w,c
 20212  0174B0  0EF5               	movlw	-11
 20213  0174B2  50E3               	movf	plusw1,w,c
 20214  0174B4  58DE               	subwfb	postinc2,w,c
 20215  0174B6  A0D8               	btfss	status,0,c
 20216  0174B8  D01F               	goto	l7908
 20217                           
 20218                           ;stkvar	_divisor @ sp[(-2)+-16]
 20219                           ;stkvar	_dividend @ sp[(-2)+-8]
 20220  0174BA  50E1               	movf	fsr1l,w,c
 20221  0174BC  0FF6               	addlw	-10
 20222  0174BE  6ED9               	movwf	fsr2l,c
 20223  0174C0  50E2               	movf	fsr1h,w,c
 20224  0174C2  6EDA               	movwf	fsr2h,c
 20225  0174C4  0EFF               	movlw	255
 20226  0174C6  22DA               	addwfc	fsr2h,f,c
 20227  0174C8  0EEE               	movlw	-18
 20228  0174CA  50E3               	movf	plusw1,w,c
 20229  0174CC  5EDE               	subwf	postinc2,f,c
 20230  0174CE  0EEF               	movlw	-17
 20231  0174D0  50E3               	movf	plusw1,w,c
 20232  0174D2  5ADE               	subwfb	postinc2,f,c
 20233  0174D4  0EF0               	movlw	-16
 20234  0174D6  50E3               	movf	plusw1,w,c
 20235  0174D8  5ADE               	subwfb	postinc2,f,c
 20236  0174DA  0EF1               	movlw	-15
 20237  0174DC  50E3               	movf	plusw1,w,c
 20238  0174DE  5ADE               	subwfb	postinc2,f,c
 20239  0174E0  0EF2               	movlw	-14
 20240  0174E2  50E3               	movf	plusw1,w,c
 20241  0174E4  5ADE               	subwfb	postinc2,f,c
 20242  0174E6  0EF3               	movlw	-13
 20243  0174E8  50E3               	movf	plusw1,w,c
 20244  0174EA  5ADE               	subwfb	postinc2,f,c
 20245  0174EC  0EF4               	movlw	-12
 20246  0174EE  50E3               	movf	plusw1,w,c
 20247  0174F0  5ADE               	subwfb	postinc2,f,c
 20248  0174F2  0EF5               	movlw	-11
 20249  0174F4  50E3               	movf	plusw1,w,c
 20250  0174F6  5ADE               	subwfb	postinc2,f,c
 20251  0174F8                     l7908:
 20252                           
 20253                           ;stkvar	_divisor @ sp[(-2)+-16]
 20254  0174F8  90D8               	bcf	status,0,c
 20255  0174FA  0EF5               	movlw	-11
 20256  0174FC  32E3               	rrcf	plusw1,f,c
 20257  0174FE  0EF4               	movlw	-12
 20258  017500  32E3               	rrcf	plusw1,f,c
 20259  017502  0EF3               	movlw	-13
 20260  017504  32E3               	rrcf	plusw1,f,c
 20261  017506  0EF2               	movlw	-14
 20262  017508  32E3               	rrcf	plusw1,f,c
 20263  01750A  0EF1               	movlw	-15
 20264  01750C  32E3               	rrcf	plusw1,f,c
 20265  01750E  0EF0               	movlw	-16
 20266  017510  32E3               	rrcf	plusw1,f,c
 20267  017512  0EEF               	movlw	-17
 20268  017514  32E3               	rrcf	plusw1,f,c
 20269  017516  0EEE               	movlw	-18
 20270  017518  32E3               	rrcf	plusw1,f,c
 20271                           
 20272                           ;stkvar	_counter @ sp[(-2)+1]
 20273  01751A  0EFF               	movlw	-1
 20274  01751C  50E3               	movf	plusw1,w,c
 20275  01751E  6E01               	movwf	btemp^0,c
 20276  017520  0E01               	movlw	1
 20277  017522  5E01               	subwf	btemp^0,f,c
 20278  017524  0EFF               	movlw	-1
 20279  017526  0060  F007  FFE3   	movff	btemp,plusw1
 20280  01752C  A4D8               	btfss	status,2,c
 20281  01752E  D7A4               	goto	u6200
 20282  017530                     u6220:
 20283                           
 20284                           ;stkvar	_sign @ sp[(-2)+0]
 20285  017530  0EFE               	movlw	-2
 20286  017532  50E3               	movf	plusw1,w,c
 20287  017534  B4D8               	btfsc	status,2,c
 20288  017536  D025               	goto	u6240
 20289                           
 20290                           ;stkvar	_dividend @ sp[(-2)+-8]
 20291                           ;stkvar	_dividend @ sp[(-2)+-8]
 20292  017538  0EF6               	movlw	-10
 20293  01753A  6CE3               	negf	plusw1,c
 20294  01753C  0EF7               	movlw	-9
 20295  01753E  1EE3               	comf	plusw1,f,c
 20296  017540  0EF8               	movlw	-8
 20297  017542  1EE3               	comf	plusw1,f,c
 20298  017544  0EF9               	movlw	-7
 20299  017546  1EE3               	comf	plusw1,f,c
 20300  017548  0EFA               	movlw	-6
 20301  01754A  1EE3               	comf	plusw1,f,c
 20302  01754C  0EFB               	movlw	-5
 20303  01754E  1EE3               	comf	plusw1,f,c
 20304  017550  0EFC               	movlw	-4
 20305  017552  1EE3               	comf	plusw1,f,c
 20306  017554  0EFD               	movlw	-3
 20307  017556  1EE3               	comf	plusw1,f,c
 20308  017558  E314               	bnc	u6240
 20309  01755A  0EF7               	movlw	-9
 20310  01755C  2AE3               	incf	plusw1,f,c
 20311  01755E  E311               	bnc	u6240
 20312  017560  0EF8               	movlw	-8
 20313  017562  2AE3               	incf	plusw1,f,c
 20314  017564  E30E               	bnc	u6240
 20315  017566  0EF9               	movlw	-7
 20316  017568  2AE3               	incf	plusw1,f,c
 20317  01756A  E30B               	bnc	u6240
 20318  01756C  0EFA               	movlw	-6
 20319  01756E  2AE3               	incf	plusw1,f,c
 20320  017570  E308               	bnc	u6240
 20321  017572  0EFB               	movlw	-5
 20322  017574  2AE3               	incf	plusw1,f,c
 20323  017576  E305               	bnc	u6240
 20324  017578  0EFC               	movlw	-4
 20325  01757A  2AE3               	incf	plusw1,f,c
 20326  01757C  E302               	bnc	u6240
 20327  01757E  0EFD               	movlw	-3
 20328  017580  2AE3               	incf	plusw1,f,c
 20329  017582                     u6240:
 20330                           
 20331                           ;stkvar	_dividend @ sp[(-2)+-8]
 20332  017582  0EF6               	movlw	246
 20333  017584  24E1               	addwf	fsr1l,w,c
 20334  017586  6ED9               	movwf	fsr2l,c
 20335  017588  0EFF               	movlw	255
 20336  01758A  20E2               	addwfc	fsr1h,w,c
 20337  01758C  6EDA               	movwf	fsr2h,c
 20338                           
 20339                           ;stkvar	?___aomod @ sp[(-2)+-8]
 20340  01758E  0E08               	movlw	8
 20341  017590  6E01               	movwf	btemp^0,c
 20342  017592  0EF6               	movlw	-10
 20343  017594                     us625999:
 20344  017594  006F FF7B FFE3     	movff	postinc2,plusw1
 20345  01759A  28E8               	incf	wreg,w,c
 20346  01759C  2E01               	decfsz	btemp^0,f,c
 20347  01759E  D7FA               	bra	us625999
 20348                           
 20349                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 20350  0175A0  52E5               	movf	postdec1,f,c
 20351  0175A2  52E5               	movf	postdec1,f,c
 20352  0175A4  0012               	return		;funcret
 20353  0175A6                     __end_of___aomod:
 20354                           	opt callstack 0
 20355                           
 20356 ;; *************** function ___aodiv *****************
 20357 ;; Defined at:
 20358 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 20359 ;; Parameters:    Size  Location     Type
 20360 ;;  dividend        8  [STACK] long long 
 20361 ;;  divisor         8  [STACK] long long 
 20362 ;; Auto vars:     Size  Location     Type
 20363 ;;  quotient        8  [STACK] long long 
 20364 ;;  sign            1  [STACK] unsigned char 
 20365 ;;  counter         1  [STACK] unsigned char 
 20366 ;; Return value:  Size  Location     Type
 20367 ;;                  8  [STACK] long long 
 20368 ;; Registers used:
 20369 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20370 ;; Tracked objects:
 20371 ;;		On entry : 0/3
 20372 ;;		On exit  : 0/0
 20373 ;;		Unchanged: 0/0
 20374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20379 ;;Total ram usage:        0 bytes
 20380 ;; Hardware stack levels used:    1
 20381 ;; Hardware stack levels required when called:   15
 20382 ;; This function calls:
 20383 ;;		Nothing
 20384 ;; This function is called by:
 20385 ;;		_dtoa
 20386 ;; This function uses a reentrant model
 20387 ;;
 20388                           
 20389                           	psect	text69
 20390  016E72                     __ptext69:
 20391                           	opt callstack 0
 20392  016E72                     ___aodiv:
 20393                           	opt callstack 0
 20394                           
 20395                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 20396  016E72  0E0A               	movlw	10
 20397  016E74  26E1               	addwf	fsr1l,f,c
 20398  016E76  0E00               	movlw	0
 20399  016E78  22E2               	addwfc	fsr1h,f,c
 20400                           
 20401                           ;stkvar	_sign @ sp[(-10)+8]
 20402                           
 20403                           ;incstack = 0
 20404 ;; hardware stack exceeded
 20405  016E7A  0EFE               	movlw	-2
 20406  016E7C  6AE3               	clrf	plusw1,c
 20407                           
 20408                           ;stkvar	_divisor @ sp[(-10)+-16]
 20409  016E7E  0EED               	movlw	-19
 20410  016E80  AEE3               	btfss	plusw1,7,c
 20411  016E82  D028               	goto	l7848
 20412                           
 20413                           ;stkvar	_divisor @ sp[(-10)+-16]
 20414                           ;stkvar	_divisor @ sp[(-10)+-16]
 20415  016E84  0EE6               	movlw	-26
 20416  016E86  6CE3               	negf	plusw1,c
 20417  016E88  0EE7               	movlw	-25
 20418  016E8A  1EE3               	comf	plusw1,f,c
 20419  016E8C  0EE8               	movlw	-24
 20420  016E8E  1EE3               	comf	plusw1,f,c
 20421  016E90  0EE9               	movlw	-23
 20422  016E92  1EE3               	comf	plusw1,f,c
 20423  016E94  0EEA               	movlw	-22
 20424  016E96  1EE3               	comf	plusw1,f,c
 20425  016E98  0EEB               	movlw	-21
 20426  016E9A  1EE3               	comf	plusw1,f,c
 20427  016E9C  0EEC               	movlw	-20
 20428  016E9E  1EE3               	comf	plusw1,f,c
 20429  016EA0  0EED               	movlw	-19
 20430  016EA2  1EE3               	comf	plusw1,f,c
 20431  016EA4  E314               	bnc	u6040
 20432  016EA6  0EE7               	movlw	-25
 20433  016EA8  2AE3               	incf	plusw1,f,c
 20434  016EAA  E311               	bnc	u6040
 20435  016EAC  0EE8               	movlw	-24
 20436  016EAE  2AE3               	incf	plusw1,f,c
 20437  016EB0  E30E               	bnc	u6040
 20438  016EB2  0EE9               	movlw	-23
 20439  016EB4  2AE3               	incf	plusw1,f,c
 20440  016EB6  E30B               	bnc	u6040
 20441  016EB8  0EEA               	movlw	-22
 20442  016EBA  2AE3               	incf	plusw1,f,c
 20443  016EBC  E308               	bnc	u6040
 20444  016EBE  0EEB               	movlw	-21
 20445  016EC0  2AE3               	incf	plusw1,f,c
 20446  016EC2  E305               	bnc	u6040
 20447  016EC4  0EEC               	movlw	-20
 20448  016EC6  2AE3               	incf	plusw1,f,c
 20449  016EC8  E302               	bnc	u6040
 20450  016ECA  0EED               	movlw	-19
 20451  016ECC  2AE3               	incf	plusw1,f,c
 20452  016ECE                     u6040:
 20453                           
 20454                           ;stkvar	_sign @ sp[(-10)+8]
 20455  016ECE  0EFE               	movlw	-2
 20456  016ED0  6AE3               	clrf	plusw1,c
 20457  016ED2  2AE3               	incf	plusw1,f,c
 20458  016ED4                     l7848:
 20459                           
 20460                           ;stkvar	_dividend @ sp[(-10)+-8]
 20461  016ED4  0EF5               	movlw	-11
 20462  016ED6  AEE3               	btfss	plusw1,7,c
 20463  016ED8  D027               	goto	l7854
 20464                           
 20465                           ;stkvar	_dividend @ sp[(-10)+-8]
 20466                           ;stkvar	_dividend @ sp[(-10)+-8]
 20467  016EDA  0EEE               	movlw	-18
 20468  016EDC  6CE3               	negf	plusw1,c
 20469  016EDE  0EEF               	movlw	-17
 20470  016EE0  1EE3               	comf	plusw1,f,c
 20471  016EE2  0EF0               	movlw	-16
 20472  016EE4  1EE3               	comf	plusw1,f,c
 20473  016EE6  0EF1               	movlw	-15
 20474  016EE8  1EE3               	comf	plusw1,f,c
 20475  016EEA  0EF2               	movlw	-14
 20476  016EEC  1EE3               	comf	plusw1,f,c
 20477  016EEE  0EF3               	movlw	-13
 20478  016EF0  1EE3               	comf	plusw1,f,c
 20479  016EF2  0EF4               	movlw	-12
 20480  016EF4  1EE3               	comf	plusw1,f,c
 20481  016EF6  0EF5               	movlw	-11
 20482  016EF8  1EE3               	comf	plusw1,f,c
 20483  016EFA  E314               	bnc	u6060
 20484  016EFC  0EEF               	movlw	-17
 20485  016EFE  2AE3               	incf	plusw1,f,c
 20486  016F00  E311               	bnc	u6060
 20487  016F02  0EF0               	movlw	-16
 20488  016F04  2AE3               	incf	plusw1,f,c
 20489  016F06  E30E               	bnc	u6060
 20490  016F08  0EF1               	movlw	-15
 20491  016F0A  2AE3               	incf	plusw1,f,c
 20492  016F0C  E30B               	bnc	u6060
 20493  016F0E  0EF2               	movlw	-14
 20494  016F10  2AE3               	incf	plusw1,f,c
 20495  016F12  E308               	bnc	u6060
 20496  016F14  0EF3               	movlw	-13
 20497  016F16  2AE3               	incf	plusw1,f,c
 20498  016F18  E305               	bnc	u6060
 20499  016F1A  0EF4               	movlw	-12
 20500  016F1C  2AE3               	incf	plusw1,f,c
 20501  016F1E  E302               	bnc	u6060
 20502  016F20  0EF5               	movlw	-11
 20503  016F22  2AE3               	incf	plusw1,f,c
 20504  016F24                     u6060:
 20505                           
 20506                           ;stkvar	_sign @ sp[(-10)+8]
 20507  016F24  0EFE               	movlw	-2
 20508  016F26  70E3               	btg	plusw1,0,c
 20509  016F28                     l7854:
 20510                           
 20511                           ;stkvar	_quotient @ sp[(-10)+0]
 20512  016F28  0E07               	movlw	7
 20513  016F2A  6E01               	movwf	btemp^0,c
 20514  016F2C  0EF6               	movlw	-10
 20515  016F2E                     u6071:
 20516  016F2E  6AE3               	clrf	plusw1,c
 20517  016F30  2AE8               	incf	wreg,f,c
 20518  016F32  0601               	decf	btemp^0,f,c
 20519  016F34  E2FC               	bc	u6071
 20520                           
 20521                           ;stkvar	_divisor @ sp[(-10)+-16]
 20522  016F36  0EE6               	movlw	-26
 20523  016F38  50E3               	movf	plusw1,w,c
 20524  016F3A  E116               	bnz	u6080
 20525  016F3C  0EE7               	movlw	-25
 20526  016F3E  50E3               	movf	plusw1,w,c
 20527  016F40  E113               	bnz	u6080
 20528  016F42  0EE8               	movlw	-24
 20529  016F44  50E3               	movf	plusw1,w,c
 20530  016F46  E110               	bnz	u6080
 20531  016F48  0EE9               	movlw	-23
 20532  016F4A  50E3               	movf	plusw1,w,c
 20533  016F4C  E10D               	bnz	u6080
 20534  016F4E  0EEA               	movlw	-22
 20535  016F50  50E3               	movf	plusw1,w,c
 20536  016F52  E10A               	bnz	u6080
 20537  016F54  0EEB               	movlw	-21
 20538  016F56  50E3               	movf	plusw1,w,c
 20539  016F58  E107               	bnz	u6080
 20540  016F5A  0EEC               	movlw	-20
 20541  016F5C  50E3               	movf	plusw1,w,c
 20542  016F5E  E104               	bnz	u6080
 20543  016F60  0EED               	movlw	-19
 20544  016F62  50E3               	movf	plusw1,w,c
 20545  016F64  B4D8               	btfsc	status,2,c
 20546  016F66  D088               	goto	u6110
 20547  016F68                     u6080:
 20548                           
 20549                           ;stkvar	_counter @ sp[(-10)+9]
 20550  016F68  0EFF               	movlw	-1
 20551  016F6A  6AE3               	clrf	plusw1,c
 20552  016F6C  D012               	goto	L24
 20553  016F6E                     l7860:
 20554                           
 20555                           ;stkvar	_divisor @ sp[(-10)+-16]
 20556  016F6E  90D8               	bcf	status,0,c
 20557  016F70  0EE6               	movlw	-26
 20558  016F72  36E3               	rlcf	plusw1,f,c
 20559  016F74  0EE7               	movlw	-25
 20560  016F76  36E3               	rlcf	plusw1,f,c
 20561  016F78  0EE8               	movlw	-24
 20562  016F7A  36E3               	rlcf	plusw1,f,c
 20563  016F7C  0EE9               	movlw	-23
 20564  016F7E  36E3               	rlcf	plusw1,f,c
 20565  016F80  0EEA               	movlw	-22
 20566  016F82  36E3               	rlcf	plusw1,f,c
 20567  016F84  0EEB               	movlw	-21
 20568  016F86  36E3               	rlcf	plusw1,f,c
 20569  016F88  0EEC               	movlw	-20
 20570  016F8A  36E3               	rlcf	plusw1,f,c
 20571  016F8C  0EED               	movlw	-19
 20572  016F8E  36E3               	rlcf	plusw1,f,c
 20573                           
 20574                           ;stkvar	_counter @ sp[(-10)+9]
 20575  016F90  0EFF               	movlw	-1
 20576  016F92                     L24:
 20577  016F92  2AE3               	incf	plusw1,f,c
 20578                           
 20579                           ;stkvar	_divisor @ sp[(-10)+-16]
 20580  016F94  0EED               	movlw	-19
 20581  016F96  AEE3               	btfss	plusw1,7,c
 20582  016F98  D7EA               	goto	l7860
 20583  016F9A                     u6090:
 20584                           
 20585                           ;stkvar	_quotient @ sp[(-10)+0]
 20586  016F9A  90D8               	bcf	status,0,c
 20587  016F9C  0EF6               	movlw	-10
 20588  016F9E  36E3               	rlcf	plusw1,f,c
 20589  016FA0  0EF7               	movlw	-9
 20590  016FA2  36E3               	rlcf	plusw1,f,c
 20591  016FA4  0EF8               	movlw	-8
 20592  016FA6  36E3               	rlcf	plusw1,f,c
 20593  016FA8  0EF9               	movlw	-7
 20594  016FAA  36E3               	rlcf	plusw1,f,c
 20595  016FAC  0EFA               	movlw	-6
 20596  016FAE  36E3               	rlcf	plusw1,f,c
 20597  016FB0  0EFB               	movlw	-5
 20598  016FB2  36E3               	rlcf	plusw1,f,c
 20599  016FB4  0EFC               	movlw	-4
 20600  016FB6  36E3               	rlcf	plusw1,f,c
 20601  016FB8  0EFD               	movlw	-3
 20602  016FBA  36E3               	rlcf	plusw1,f,c
 20603                           
 20604                           ;stkvar	_divisor @ sp[(-10)+-16]
 20605                           ;stkvar	_dividend @ sp[(-10)+-8]
 20606  016FBC  50E1               	movf	fsr1l,w,c
 20607  016FBE  0FEE               	addlw	-18
 20608  016FC0  6ED9               	movwf	fsr2l,c
 20609  016FC2  50E2               	movf	fsr1h,w,c
 20610  016FC4  6EDA               	movwf	fsr2h,c
 20611  016FC6  0EFF               	movlw	255
 20612  016FC8  22DA               	addwfc	fsr2h,f,c
 20613  016FCA  0EE6               	movlw	-26
 20614  016FCC  50E3               	movf	plusw1,w,c
 20615  016FCE  5CDE               	subwf	postinc2,w,c
 20616  016FD0  0EE7               	movlw	-25
 20617  016FD2  50E3               	movf	plusw1,w,c
 20618  016FD4  58DE               	subwfb	postinc2,w,c
 20619  016FD6  0EE8               	movlw	-24
 20620  016FD8  50E3               	movf	plusw1,w,c
 20621  016FDA  58DE               	subwfb	postinc2,w,c
 20622  016FDC  0EE9               	movlw	-23
 20623  016FDE  50E3               	movf	plusw1,w,c
 20624  016FE0  58DE               	subwfb	postinc2,w,c
 20625  016FE2  0EEA               	movlw	-22
 20626  016FE4  50E3               	movf	plusw1,w,c
 20627  016FE6  58DE               	subwfb	postinc2,w,c
 20628  016FE8  0EEB               	movlw	-21
 20629  016FEA  50E3               	movf	plusw1,w,c
 20630  016FEC  58DE               	subwfb	postinc2,w,c
 20631  016FEE  0EEC               	movlw	-20
 20632  016FF0  50E3               	movf	plusw1,w,c
 20633  016FF2  58DE               	subwfb	postinc2,w,c
 20634  016FF4  0EED               	movlw	-19
 20635  016FF6  50E3               	movf	plusw1,w,c
 20636  016FF8  58DE               	subwfb	postinc2,w,c
 20637  016FFA  A0D8               	btfss	status,0,c
 20638  016FFC  D021               	goto	l7872
 20639                           
 20640                           ;stkvar	_divisor @ sp[(-10)+-16]
 20641                           ;stkvar	_dividend @ sp[(-10)+-8]
 20642  016FFE  50E1               	movf	fsr1l,w,c
 20643  017000  0FEE               	addlw	-18
 20644  017002  6ED9               	movwf	fsr2l,c
 20645  017004  50E2               	movf	fsr1h,w,c
 20646  017006  6EDA               	movwf	fsr2h,c
 20647  017008  0EFF               	movlw	255
 20648  01700A  22DA               	addwfc	fsr2h,f,c
 20649  01700C  0EE6               	movlw	-26
 20650  01700E  50E3               	movf	plusw1,w,c
 20651  017010  5EDE               	subwf	postinc2,f,c
 20652  017012  0EE7               	movlw	-25
 20653  017014  50E3               	movf	plusw1,w,c
 20654  017016  5ADE               	subwfb	postinc2,f,c
 20655  017018  0EE8               	movlw	-24
 20656  01701A  50E3               	movf	plusw1,w,c
 20657  01701C  5ADE               	subwfb	postinc2,f,c
 20658  01701E  0EE9               	movlw	-23
 20659  017020  50E3               	movf	plusw1,w,c
 20660  017022  5ADE               	subwfb	postinc2,f,c
 20661  017024  0EEA               	movlw	-22
 20662  017026  50E3               	movf	plusw1,w,c
 20663  017028  5ADE               	subwfb	postinc2,f,c
 20664  01702A  0EEB               	movlw	-21
 20665  01702C  50E3               	movf	plusw1,w,c
 20666  01702E  5ADE               	subwfb	postinc2,f,c
 20667  017030  0EEC               	movlw	-20
 20668  017032  50E3               	movf	plusw1,w,c
 20669  017034  5ADE               	subwfb	postinc2,f,c
 20670  017036  0EED               	movlw	-19
 20671  017038  50E3               	movf	plusw1,w,c
 20672  01703A  5ADE               	subwfb	postinc2,f,c
 20673                           
 20674                           ;stkvar	_quotient @ sp[(-10)+0]
 20675  01703C  0EF6               	movlw	-10
 20676  01703E  80E3               	bsf	plusw1,0,c
 20677  017040                     l7872:
 20678                           
 20679                           ;stkvar	_divisor @ sp[(-10)+-16]
 20680  017040  90D8               	bcf	status,0,c
 20681  017042  0EED               	movlw	-19
 20682  017044  32E3               	rrcf	plusw1,f,c
 20683  017046  0EEC               	movlw	-20
 20684  017048  32E3               	rrcf	plusw1,f,c
 20685  01704A  0EEB               	movlw	-21
 20686  01704C  32E3               	rrcf	plusw1,f,c
 20687  01704E  0EEA               	movlw	-22
 20688  017050  32E3               	rrcf	plusw1,f,c
 20689  017052  0EE9               	movlw	-23
 20690  017054  32E3               	rrcf	plusw1,f,c
 20691  017056  0EE8               	movlw	-24
 20692  017058  32E3               	rrcf	plusw1,f,c
 20693  01705A  0EE7               	movlw	-25
 20694  01705C  32E3               	rrcf	plusw1,f,c
 20695  01705E  0EE6               	movlw	-26
 20696  017060  32E3               	rrcf	plusw1,f,c
 20697                           
 20698                           ;stkvar	_counter @ sp[(-10)+9]
 20699  017062  0EFF               	movlw	-1
 20700  017064  50E3               	movf	plusw1,w,c
 20701  017066  6E01               	movwf	btemp^0,c
 20702  017068  0E01               	movlw	1
 20703  01706A  5E01               	subwf	btemp^0,f,c
 20704  01706C  0EFF               	movlw	-1
 20705  01706E  0060  F007  FFE3   	movff	btemp,plusw1
 20706  017074  A4D8               	btfss	status,2,c
 20707  017076  D791               	goto	u6090
 20708  017078                     u6110:
 20709                           
 20710                           ;stkvar	_sign @ sp[(-10)+8]
 20711  017078  0EFE               	movlw	-2
 20712  01707A  50E3               	movf	plusw1,w,c
 20713  01707C  B4D8               	btfsc	status,2,c
 20714  01707E  D025               	goto	u6130
 20715                           
 20716                           ;stkvar	_quotient @ sp[(-10)+0]
 20717                           ;stkvar	_quotient @ sp[(-10)+0]
 20718  017080  0EF6               	movlw	-10
 20719  017082  6CE3               	negf	plusw1,c
 20720  017084  0EF7               	movlw	-9
 20721  017086  1EE3               	comf	plusw1,f,c
 20722  017088  0EF8               	movlw	-8
 20723  01708A  1EE3               	comf	plusw1,f,c
 20724  01708C  0EF9               	movlw	-7
 20725  01708E  1EE3               	comf	plusw1,f,c
 20726  017090  0EFA               	movlw	-6
 20727  017092  1EE3               	comf	plusw1,f,c
 20728  017094  0EFB               	movlw	-5
 20729  017096  1EE3               	comf	plusw1,f,c
 20730  017098  0EFC               	movlw	-4
 20731  01709A  1EE3               	comf	plusw1,f,c
 20732  01709C  0EFD               	movlw	-3
 20733  01709E  1EE3               	comf	plusw1,f,c
 20734  0170A0  E314               	bnc	u6130
 20735  0170A2  0EF7               	movlw	-9
 20736  0170A4  2AE3               	incf	plusw1,f,c
 20737  0170A6  E311               	bnc	u6130
 20738  0170A8  0EF8               	movlw	-8
 20739  0170AA  2AE3               	incf	plusw1,f,c
 20740  0170AC  E30E               	bnc	u6130
 20741  0170AE  0EF9               	movlw	-7
 20742  0170B0  2AE3               	incf	plusw1,f,c
 20743  0170B2  E30B               	bnc	u6130
 20744  0170B4  0EFA               	movlw	-6
 20745  0170B6  2AE3               	incf	plusw1,f,c
 20746  0170B8  E308               	bnc	u6130
 20747  0170BA  0EFB               	movlw	-5
 20748  0170BC  2AE3               	incf	plusw1,f,c
 20749  0170BE  E305               	bnc	u6130
 20750  0170C0  0EFC               	movlw	-4
 20751  0170C2  2AE3               	incf	plusw1,f,c
 20752  0170C4  E302               	bnc	u6130
 20753  0170C6  0EFD               	movlw	-3
 20754  0170C8  2AE3               	incf	plusw1,f,c
 20755  0170CA                     u6130:
 20756                           
 20757                           ;stkvar	_quotient @ sp[(-10)+0]
 20758  0170CA  0EF6               	movlw	246
 20759  0170CC  24E1               	addwf	fsr1l,w,c
 20760  0170CE  6ED9               	movwf	fsr2l,c
 20761  0170D0  0EFF               	movlw	255
 20762  0170D2  20E2               	addwfc	fsr1h,w,c
 20763  0170D4  6EDA               	movwf	fsr2h,c
 20764                           
 20765                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 20766  0170D6  0E08               	movlw	8
 20767  0170D8  6E01               	movwf	btemp^0,c
 20768  0170DA  0EEE               	movlw	-18
 20769  0170DC                     us614999:
 20770  0170DC  006F FF7B FFE3     	movff	postinc2,plusw1
 20771  0170E2  28E8               	incf	wreg,w,c
 20772  0170E4  2E01               	decfsz	btemp^0,f,c
 20773  0170E6  D7FA               	bra	us614999
 20774                           
 20775                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 20776  0170E8  0EF6               	movlw	246
 20777  0170EA  26E1               	addwf	fsr1l,f,c
 20778  0170EC  0EFF               	movlw	255
 20779  0170EE  22E2               	addwfc	fsr1h,f,c
 20780  0170F0  0012               	return		;funcret
 20781  0170F2                     __end_of___aodiv:
 20782                           	opt callstack 0
 20783                           
 20784 ;; *************** function _ctoa *****************
 20785 ;; Defined at:
 20786 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20787 ;; Parameters:    Size  Location     Type
 20788 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20789 ;;		 -> f(6), NULL(0), 
 20790 ;;  c               1  [STACK] unsigned char 
 20791 ;; Auto vars:     Size  Location     Type
 20792 ;;  w               2  [STACK] int 
 20793 ;;  l               2    0        int 
 20794 ;; Return value:  Size  Location     Type
 20795 ;;                  2  [STACK] int 
 20796 ;; Registers used:
 20797 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20798 ;; Tracked objects:
 20799 ;;		On entry : 0/0
 20800 ;;		On exit  : 0/0
 20801 ;;		Unchanged: 0/0
 20802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20807 ;;Total ram usage:        0 bytes
 20808 ;; Hardware stack levels used:    1
 20809 ;; Hardware stack levels required when called:   20
 20810 ;; This function calls:
 20811 ;;		_pad
 20812 ;; This function is called by:
 20813 ;;		_vfpfcnvrt
 20814 ;; This function uses a reentrant model
 20815 ;;
 20816                           
 20817                           	psect	text70
 20818  01A23C                     __ptext70:
 20819                           	opt callstack 0
 20820  01A23C                     _ctoa:
 20821                           	opt callstack 0
 20822                           
 20823                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20824  01A23C  52E6               	movf	postinc1,f,c
 20825  01A23E  52E6               	movf	postinc1,f,c
 20826                           
 20827                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 20828                           
 20829                           ;incstack = 0
 20830 ;; hardware stack exceeded
 20831  01A240  5021               	movf	_width^0,w,c
 20832  01A242  1022               	iorwf	(_width+1)^0,w,c
 20833  01A244  A4D8               	btfss	status,2,c
 20834  01A246  D009               	goto	l11476
 20835                           
 20836                           ;stkvar	_w @ sp[(-2)+0]
 20837  01A248  0EFE               	movlw	-2
 20838  01A24A  0060  F087  FFE3   	movff	_width,plusw1
 20839  01A250  0EFF               	movlw	-1
 20840  01A252  0060  F08B  FFE3   	movff	_width+1,plusw1
 20841  01A258  D016               	goto	l11478
 20842  01A25A                     l11476:
 20843  01A25A  0EFF               	movlw	255
 20844  01A25C  6E0B               	movwf	(btemp+10)^0,c
 20845  01A25E  0EFF               	movlw	255
 20846  01A260  6E0C               	movwf	(btemp+11)^0,c
 20847  01A262  0060  F084  F009   	movff	_width,btemp+8
 20848  01A268  0060  F088  F00A   	movff	_width+1,btemp+9
 20849  01A26E  500B               	movf	(btemp+10)^0,w,c
 20850  01A270  2609               	addwf	(btemp+8)^0,f,c
 20851  01A272  500C               	movf	(btemp+11)^0,w,c
 20852  01A274  220A               	addwfc	(btemp+9)^0,f,c
 20853                           
 20854                           ;stkvar	_w @ sp[(-2)+0]
 20855  01A276  0EFE               	movlw	-2
 20856  01A278  0060  F027  FFE3   	movff	btemp+8,plusw1
 20857  01A27E  0EFF               	movlw	-1
 20858  01A280  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20859  01A286                     l11478:
 20860                           
 20861                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 20862                           ;stkvar	_c @ sp[(-2)+-3]
 20863  01A286  0EFB               	movlw	-5
 20864  01A288  006F FF8C  F394    	movff	plusw1,_dbuf
 20865                           
 20866                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 20867  01A28E  0103               	movlb	3	; () banked
 20868  01A290  6B95               	clrf	(_dbuf+1)& (0+255),b
 20869                           
 20870                           ; BSR set to: 3
 20871                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 20872                           ;stkvar	_w @ sp[(-2)+0]
 20873  01A292  0EFE               	movlw	-2
 20874  01A294  006F FF8F FFE6     	movff	plusw1,postinc1
 20875  01A29A  006F FF8F FFE6     	movff	plusw1,postinc1
 20876  01A2A0  0E94               	movlw	low _dbuf
 20877  01A2A2  6EE6               	movwf	postinc1,c
 20878  01A2A4  0E03               	movlw	high _dbuf
 20879  01A2A6  6EE6               	movwf	postinc1,c
 20880                           
 20881                           ;stkvar	_fp @ sp[(-6)+-2]
 20882  01A2A8  0EF8               	movlw	-8
 20883  01A2AA  006F FF8F FFE6     	movff	plusw1,postinc1
 20884  01A2B0  006F FF8F FFE6     	movff	plusw1,postinc1
 20885  01A2B6  EC7F  F0C8         	call	_pad	;wreg free
 20886                           
 20887                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 20888  01A2BA  0EFB               	movlw	251
 20889  01A2BC  26E1               	addwf	fsr1l,f,c
 20890  01A2BE  0EFF               	movlw	255
 20891  01A2C0  22E2               	addwfc	fsr1h,f,c
 20892  01A2C2  0012               	return		;funcret
 20893  01A2C4                     __end_of_ctoa:
 20894                           	opt callstack 0
 20895                           
 20896 ;; *************** function _pad *****************
 20897 ;; Defined at:
 20898 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20899 ;; Parameters:    Size  Location     Type
 20900 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20901 ;;		 -> f(6), NULL(0), 
 20902 ;;  buf             2  [STACK] PTR unsigned char 
 20903 ;;		 -> dbuf(80), 
 20904 ;;  p               2  [STACK] int 
 20905 ;; Auto vars:     Size  Location     Type
 20906 ;;  w               2  [STACK] int 
 20907 ;;  i               2  [STACK] int 
 20908 ;; Return value:  Size  Location     Type
 20909 ;;                  2  [STACK] int 
 20910 ;; Registers used:
 20911 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20912 ;; Tracked objects:
 20913 ;;		On entry : 0/3
 20914 ;;		On exit  : 0/0
 20915 ;;		Unchanged: 0/0
 20916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20921 ;;Total ram usage:        0 bytes
 20922 ;; Hardware stack levels used:    1
 20923 ;; Hardware stack levels required when called:   19
 20924 ;; This function calls:
 20925 ;;		_fputc
 20926 ;;		_fputs
 20927 ;;		_strlen
 20928 ;; This function is called by:
 20929 ;;		_ctoa
 20930 ;;		_dtoa
 20931 ;;		_efgtoa
 20932 ;;		_utoa
 20933 ;;		_xtoa
 20934 ;; This function uses a reentrant model
 20935 ;;
 20936                           
 20937                           	psect	text71
 20938  0190FE                     __ptext71:
 20939                           	opt callstack 0
 20940  0190FE                     _pad:
 20941                           	opt callstack 0
 20942                           
 20943                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20944  0190FE  52E6               	movf	postinc1,f,c
 20945  019100  52E6               	movf	postinc1,f,c
 20946  019102  52E6               	movf	postinc1,f,c
 20947  019104  52E6               	movf	postinc1,f,c
 20948                           
 20949                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 20950                           
 20951                           ;incstack = 0
 20952 ;; hardware stack exceeded
 20953  019106  A025               	btfss	_flags^0,0,c
 20954  019108  D010               	goto	l11408
 20955                           
 20956                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 20957                           ;stkvar	_fp @ sp[(-4)+-2]
 20958  01910A  0EFA               	movlw	-6
 20959  01910C  006F FF8F FFE6     	movff	plusw1,postinc1
 20960  019112  006F FF8F FFE6     	movff	plusw1,postinc1
 20961                           
 20962                           ;stkvar	_buf @ sp[(-6)+-4]
 20963  019118  0EF6               	movlw	-10
 20964  01911A  006F FF8F FFE6     	movff	plusw1,postinc1
 20965  019120  006F FF8F FFE6     	movff	plusw1,postinc1
 20966  019126  ECAF  F0CF         	call	_fputs	;wreg free
 20967  01912A                     l11408:
 20968                           
 20969                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 20970                           ;stkvar	_p @ sp[(-4)+-6]
 20971  01912A  0EF7               	movlw	-9
 20972  01912C  BEE3               	btfsc	plusw1,7,c
 20973  01912E  D011               	goto	l11412
 20974                           
 20975                           ;stkvar	_p @ sp[(-4)+-6]
 20976                           ;stkvar	_w @ sp[(-4)+0]
 20977  019130  0EF6               	movlw	-10
 20978  019132  006F FF8C  F001    	movff	plusw1,btemp
 20979  019138  0EFC               	movlw	-4
 20980  01913A  0060  F007  FFE3   	movff	btemp,plusw1
 20981  019140  0EF7               	movlw	-9
 20982  019142  006F FF8C  F001    	movff	plusw1,btemp
 20983  019148  0EFD               	movlw	-3
 20984  01914A  0060  F007  FFE3   	movff	btemp,plusw1
 20985  019150  D004               	goto	l2098
 20986  019152                     l11412:
 20987                           
 20988                           ;stkvar	_w @ sp[(-4)+0]
 20989  019152  0EFC               	movlw	-4
 20990  019154  6AE3               	clrf	plusw1,c
 20991  019156  0EFD               	movlw	-3
 20992  019158  6AE3               	clrf	plusw1,c
 20993  01915A                     l2098:
 20994                           
 20995                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 20996                           ;stkvar	_i @ sp[(-4)+2]
 20997  01915A  0EFE               	movlw	-2
 20998  01915C  6AE3               	clrf	plusw1,c
 20999  01915E  0EFF               	movlw	-1
 21000  019160  6AE3               	clrf	plusw1,c
 21001                           
 21002                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 21003  019162  D01E               	goto	l11418
 21004  019164                     l11414:
 21005                           
 21006                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 21007                           ;stkvar	_fp @ sp[(-4)+-2]
 21008  019164  0EFA               	movlw	-6
 21009  019166  006F FF8F FFE6     	movff	plusw1,postinc1
 21010  01916C  006F FF8F FFE6     	movff	plusw1,postinc1
 21011  019172  0E20               	movlw	32
 21012  019174  6EE6               	movwf	postinc1,c
 21013  019176  0E00               	movlw	0
 21014  019178  6EE6               	movwf	postinc1,c
 21015  01917A  EC61  F0C7         	call	_fputc	;wreg free
 21016                           
 21017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 21018                           ;stkvar	_i @ sp[(-4)+2]
 21019  01917E  0EFE               	movlw	-2
 21020  019180  50E3               	movf	plusw1,w,c
 21021  019182  0F01               	addlw	1
 21022  019184  6E01               	movwf	btemp^0,c
 21023  019186  0EFE               	movlw	-2
 21024  019188  0060  F007  FFE3   	movff	btemp,plusw1
 21025  01918E  6A01               	clrf	btemp^0,c
 21026  019190  0EFF               	movlw	-1
 21027  019192  50E3               	movf	plusw1,w,c
 21028  019194  2001               	addwfc	btemp^0,w,c
 21029  019196  6E01               	movwf	btemp^0,c
 21030  019198  0EFF               	movlw	-1
 21031  01919A  0060  F007  FFE3   	movff	btemp,plusw1
 21032  0191A0                     l11418:
 21033                           
 21034                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 21035                           ;stkvar	_w @ sp[(-4)+0]
 21036                           ;stkvar	_i @ sp[(-4)+2]
 21037  0191A0  50E1               	movf	fsr1l,w,c
 21038  0191A2  0FFE               	addlw	-2
 21039  0191A4  6ED9               	movwf	fsr2l,c
 21040  0191A6  50E2               	movf	fsr1h,w,c
 21041  0191A8  6EDA               	movwf	fsr2h,c
 21042  0191AA  0EFF               	movlw	255
 21043  0191AC  22DA               	addwfc	fsr2h,f,c
 21044  0191AE  0EFC               	movlw	-4
 21045  0191B0  50E3               	movf	plusw1,w,c
 21046  0191B2  5CDE               	subwf	postinc2,w,c
 21047  0191B4  50DE               	movf	postinc2,w,c
 21048  0191B6  0A80               	xorlw	128
 21049  0191B8  6E01               	movwf	btemp^0,c
 21050  0191BA  0EFD               	movlw	-3
 21051  0191BC  50E3               	movf	plusw1,w,c
 21052  0191BE  0A80               	xorlw	128
 21053  0191C0  5801               	subwfb	btemp^0,w,c
 21054  0191C2  A0D8               	btfss	status,0,c
 21055  0191C4  D7CF               	goto	l11414
 21056                           
 21057                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 21058  0191C6  B025               	btfsc	_flags^0,0,c
 21059  0191C8  D010               	goto	l11422
 21060                           
 21061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 21062                           ;stkvar	_fp @ sp[(-4)+-2]
 21063  0191CA  0EFA               	movlw	-6
 21064  0191CC  006F FF8F FFE6     	movff	plusw1,postinc1
 21065  0191D2  006F FF8F FFE6     	movff	plusw1,postinc1
 21066                           
 21067                           ;stkvar	_buf @ sp[(-6)+-4]
 21068  0191D8  0EF6               	movlw	-10
 21069  0191DA  006F FF8F FFE6     	movff	plusw1,postinc1
 21070  0191E0  006F FF8F FFE6     	movff	plusw1,postinc1
 21071  0191E6  ECAF  F0CF         	call	_fputs	;wreg free
 21072  0191EA                     l11422:
 21073                           
 21074                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 21075                           ;stkvar	_w @ sp[(-4)+0]
 21076                           ;stkvar	_buf @ sp[(-4)+-4]
 21077  0191EA  0EF8               	movlw	-8
 21078  0191EC  006F FF8F FFE6     	movff	plusw1,postinc1
 21079  0191F2  006F FF8F FFE6     	movff	plusw1,postinc1
 21080  0191F8  EC5E  F0CF         	call	_strlen	;wreg free
 21081  0191FC  0EFC               	movlw	-4
 21082  0191FE  50E3               	movf	plusw1,w,c
 21083  019200  2601               	addwf	btemp^0,f,c
 21084  019202  0EFD               	movlw	-3
 21085  019204  50E3               	movf	plusw1,w,c
 21086  019206  2202               	addwfc	(btemp+1)^0,f,c
 21087                           
 21088                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 21089  019208  0EF6               	movlw	246
 21090  01920A  26E1               	addwf	fsr1l,f,c
 21091  01920C  0EFF               	movlw	255
 21092  01920E  22E2               	addwfc	fsr1h,f,c
 21093  019210  0012               	return		;funcret
 21094  019212                     __end_of_pad:
 21095                           	opt callstack 0
 21096                           
 21097 ;; *************** function _strlen *****************
 21098 ;; Defined at:
 21099 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 21100 ;; Parameters:    Size  Location     Type
 21101 ;;  s               2  [STACK] PTR const unsigned char 
 21102 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21103 ;;		 -> spin(120), STR_47(9), STR_46(12), D.lcd(288), 
 21104 ;;		 -> D(290), T(144), port_data(512), STR_3(6), 
 21105 ;;		 -> V(189), 
 21106 ;; Auto vars:     Size  Location     Type
 21107 ;;  a               2  [STACK] PTR const unsigned char 
 21108 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21109 ;;		 -> spin(120), STR_47(9), STR_46(12), D.lcd(288), 
 21110 ;;		 -> D(290), T(144), port_data(512), STR_3(6), 
 21111 ;;		 -> V(189), 
 21112 ;; Return value:  Size  Location     Type
 21113 ;;                  2  [STACK] unsigned int 
 21114 ;; Registers used:
 21115 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 21116 ;; Tracked objects:
 21117 ;;		On entry : 0/0
 21118 ;;		On exit  : 0/0
 21119 ;;		Unchanged: 0/0
 21120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21125 ;;Total ram usage:        0 bytes
 21126 ;; Hardware stack levels used:    1
 21127 ;; Hardware stack levels required when called:   15
 21128 ;; This function calls:
 21129 ;;		Nothing
 21130 ;; This function is called by:
 21131 ;;		_eaDogM_WriteString
 21132 ;;		_spinners
 21133 ;;		_calc_bsoc
 21134 ;;		_pad
 21135 ;;		_stoa
 21136 ;; This function uses a reentrant model
 21137 ;;
 21138                           
 21139                           	psect	text72
 21140  019EBC                     __ptext72:
 21141                           	opt callstack 0
 21142  019EBC                     _strlen:
 21143                           	opt callstack 0
 21144                           
 21145                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21146  019EBC  52E6               	movf	postinc1,f,c
 21147  019EBE  52E6               	movf	postinc1,f,c
 21148                           
 21149                           ;stkvar	_s @ sp[(-2)+-2]
 21150                           
 21151                           ;incstack = 0
 21152 ;; hardware stack exceeded
 21153  019EC0  0EFC               	movlw	-4
 21154  019EC2  006F FF8C  F00B    	movff	plusw1,btemp+10
 21155  019EC8  0EFD               	movlw	-3
 21156  019ECA  006F FF8C  F00C    	movff	plusw1,btemp+11
 21157                           
 21158                           ;stkvar	_a @ sp[(-2)+0]
 21159  019ED0  0EFF               	movlw	-1
 21160  019ED2  0060  F033  FFE3   	movff	btemp+11,plusw1
 21161  019ED8  0EFE               	movlw	-2
 21162  019EDA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21163  019EE0  D011               	goto	l7466
 21164  019EE2                     l7464:
 21165                           
 21166                           ;stkvar	_s @ sp[(-2)+-2]
 21167  019EE2  0EFC               	movlw	-4
 21168  019EE4  50E3               	movf	plusw1,w,c
 21169  019EE6  0F01               	addlw	1
 21170  019EE8  6E01               	movwf	btemp^0,c
 21171  019EEA  0EFC               	movlw	-4
 21172  019EEC  0060  F007  FFE3   	movff	btemp,plusw1
 21173  019EF2  6A01               	clrf	btemp^0,c
 21174  019EF4  0EFD               	movlw	-3
 21175  019EF6  50E3               	movf	plusw1,w,c
 21176  019EF8  2001               	addwfc	btemp^0,w,c
 21177  019EFA  6E01               	movwf	btemp^0,c
 21178  019EFC  0EFD               	movlw	-3
 21179  019EFE  0060  F007  FFE3   	movff	btemp,plusw1
 21180  019F04                     l7466:
 21181                           
 21182                           ;stkvar	_s @ sp[(-2)+-2]
 21183  019F04  0EFC               	movlw	-4
 21184  019F06  006F FF8F FFF6     	movff	plusw1,tblptrl
 21185  019F0C  0EFD               	movlw	-3
 21186  019F0E  006F FF8F FFF7     	movff	plusw1,tblptrh
 21187  019F14  0E00               	movlw	low (__mediumconst shr (0+16))
 21188  019F16  6EF8               	movwf	tblptru,c
 21189  019F18  0E1F               	movlw	(high __ramtop+-1)
 21190  019F1A  64F7               	cpfsgt	tblptrh,c
 21191  019F1C  D003               	bra	u5207
 21192  019F1E  0008               	tblrd		*
 21193  019F20  50F5               	movf	tablat,w,c
 21194  019F22  D007               	bra	u5200
 21195  019F24                     u5207:
 21196  019F24  006F FFDB FFE9     	movff	tblptrl,fsr0l
 21197  019F2A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 21198  019F30  50EF               	movf	indf0,w,c
 21199  019F32                     u5200:
 21200  019F32  0900               	iorlw	0
 21201  019F34  A4D8               	btfss	status,2,c
 21202  019F36  D7D5               	goto	l7464
 21203                           
 21204                           ;stkvar	_a @ sp[(-2)+0]
 21205                           ;stkvar	_s @ sp[(-2)+-2]
 21206  019F38  0EFC               	movlw	-4
 21207  019F3A  006F FF8C  F001    	movff	plusw1,btemp
 21208  019F40  0EFD               	movlw	-3
 21209  019F42  006F FF8C  F002    	movff	plusw1,btemp+1
 21210  019F48  0EFE               	movlw	-2
 21211  019F4A  50E3               	movf	plusw1,w,c
 21212  019F4C  5E01               	subwf	btemp^0,f,c
 21213  019F4E  0EFF               	movlw	-1
 21214  019F50  50E3               	movf	plusw1,w,c
 21215  019F52  5A02               	subwfb	(btemp+1)^0,f,c
 21216                           
 21217                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 21218  019F54  52E5               	movf	postdec1,f,c
 21219  019F56  52E5               	movf	postdec1,f,c
 21220  019F58  52E5               	movf	postdec1,f,c
 21221  019F5A  52E5               	movf	postdec1,f,c
 21222  019F5C  0012               	return		;funcret
 21223  019F5E                     __end_of_strlen:
 21224                           	opt callstack 0
 21225                           
 21226 ;; *************** function _fputs *****************
 21227 ;; Defined at:
 21228 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 21229 ;; Parameters:    Size  Location     Type
 21230 ;;  s               2  [STACK] PTR const unsigned char 
 21231 ;;		 -> dbuf(80), 
 21232 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21233 ;;		 -> f(6), NULL(0), 
 21234 ;; Auto vars:     Size  Location     Type
 21235 ;;  i               2  [STACK] int 
 21236 ;;  c               1  [STACK] unsigned char 
 21237 ;; Return value:  Size  Location     Type
 21238 ;;                  2  [STACK] int 
 21239 ;; Registers used:
 21240 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21241 ;; Tracked objects:
 21242 ;;		On entry : 0/3
 21243 ;;		On exit  : 0/0
 21244 ;;		Unchanged: 0/0
 21245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21250 ;;Total ram usage:        0 bytes
 21251 ;; Hardware stack levels used:    1
 21252 ;; Hardware stack levels required when called:   18
 21253 ;; This function calls:
 21254 ;;		_fputc
 21255 ;; This function is called by:
 21256 ;;		_pad
 21257 ;; This function uses a reentrant model
 21258 ;;
 21259                           
 21260                           	psect	text73
 21261  019F5E                     __ptext73:
 21262                           	opt callstack 0
 21263  019F5E                     _fputs:
 21264                           	opt callstack 0
 21265                           
 21266                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21267  019F5E  52E6               	movf	postinc1,f,c
 21268  019F60  52E6               	movf	postinc1,f,c
 21269  019F62  52E6               	movf	postinc1,f,c
 21270                           
 21271                           ;stkvar	_i @ sp[(-3)+0]
 21272                           
 21273                           ;incstack = 0
 21274 ;; hardware stack exceeded
 21275  019F64  0EFD               	movlw	-3
 21276  019F66  6AE3               	clrf	plusw1,c
 21277  019F68  0EFE               	movlw	-2
 21278  019F6A  6AE3               	clrf	plusw1,c
 21279  019F6C  D01F               	goto	l11402
 21280  019F6E                     l11398:
 21281                           
 21282                           ;stkvar	_fp @ sp[(-3)+-4]
 21283  019F6E  0EF9               	movlw	-7
 21284  019F70  006F FF8F FFE6     	movff	plusw1,postinc1
 21285  019F76  006F FF8F FFE6     	movff	plusw1,postinc1
 21286                           
 21287                           ;stkvar	_c @ sp[(-5)+2]
 21288  019F7C  0EFD               	movlw	-3
 21289  019F7E  50E3               	movf	plusw1,w,c
 21290  019F80  6EE6               	movwf	postinc1,c
 21291  019F82  0E00               	movlw	0
 21292  019F84  6EE6               	movwf	postinc1,c
 21293  019F86  EC61  F0C7         	call	_fputc	;wreg free
 21294                           
 21295                           ;stkvar	_i @ sp[(-3)+0]
 21296  019F8A  0EFD               	movlw	-3
 21297  019F8C  50E3               	movf	plusw1,w,c
 21298  019F8E  0F01               	addlw	1
 21299  019F90  6E01               	movwf	btemp^0,c
 21300  019F92  0EFD               	movlw	-3
 21301  019F94  0060  F007  FFE3   	movff	btemp,plusw1
 21302  019F9A  6A01               	clrf	btemp^0,c
 21303  019F9C  0EFE               	movlw	-2
 21304  019F9E  50E3               	movf	plusw1,w,c
 21305  019FA0  2001               	addwfc	btemp^0,w,c
 21306  019FA2  6E01               	movwf	btemp^0,c
 21307  019FA4  0EFE               	movlw	-2
 21308  019FA6  0060  F007  FFE3   	movff	btemp,plusw1
 21309  019FAC                     l11402:
 21310                           
 21311                           ;stkvar	_i @ sp[(-3)+0]
 21312  019FAC  0EFD               	movlw	-3
 21313  019FAE  006F FF8C  F00B    	movff	plusw1,btemp+10
 21314  019FB4  0EFE               	movlw	-2
 21315  019FB6  006F FF8C  F00C    	movff	plusw1,btemp+11
 21316                           
 21317                           ;stkvar	_s @ sp[(-3)+-2]
 21318  019FBC  0EFB               	movlw	-5
 21319  019FBE  006F FF8C  F009    	movff	plusw1,btemp+8
 21320  019FC4  0EFC               	movlw	-4
 21321  019FC6  006F FF8C  F00A    	movff	plusw1,btemp+9
 21322  019FCC  500B               	movf	(btemp+10)^0,w,c
 21323  019FCE  2409               	addwf	(btemp+8)^0,w,c
 21324  019FD0  6ED9               	movwf	fsr2l,c
 21325  019FD2  500C               	movf	(btemp+11)^0,w,c
 21326  019FD4  200A               	addwfc	(btemp+9)^0,w,c
 21327  019FD6  6EDA               	movwf	fsr2h,c
 21328  019FD8  50DF               	movf	indf2,w,c
 21329  019FDA  6E0C               	movwf	(btemp+11)^0,c
 21330                           
 21331                           ;stkvar	_c @ sp[(-3)+2]
 21332  019FDC  0EFF               	movlw	-1
 21333  019FDE  0060  F033  FFE3   	movff	btemp+11,plusw1
 21334  019FE4  0EFF               	movlw	-1
 21335  019FE6  50E3               	movf	plusw1,w,c
 21336  019FE8  A4D8               	btfss	status,2,c
 21337  019FEA  D7C1               	goto	l11398
 21338                           
 21339                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21340  019FEC  0EF9               	movlw	249
 21341  019FEE  26E1               	addwf	fsr1l,f,c
 21342  019FF0  0EFF               	movlw	255
 21343  019FF2  22E2               	addwfc	fsr1h,f,c
 21344  019FF4  0012               	return		;funcret
 21345  019FF6                     __end_of_fputs:
 21346                           	opt callstack 0
 21347                           
 21348 ;; *************** function _fputc *****************
 21349 ;; Defined at:
 21350 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 21351 ;; Parameters:    Size  Location     Type
 21352 ;;  c               2  [STACK] int 
 21353 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21354 ;;		 -> f(6), NULL(0), 
 21355 ;; Auto vars:     Size  Location     Type
 21356 ;;		None
 21357 ;; Return value:  Size  Location     Type
 21358 ;;                  2  [STACK] int 
 21359 ;; Registers used:
 21360 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21361 ;; Tracked objects:
 21362 ;;		On entry : 0/0
 21363 ;;		On exit  : 0/0
 21364 ;;		Unchanged: 0/0
 21365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21370 ;;Total ram usage:        0 bytes
 21371 ;; Hardware stack levels used:    1
 21372 ;; Hardware stack levels required when called:   17
 21373 ;; This function calls:
 21374 ;;		_putch
 21375 ;; This function is called by:
 21376 ;;		_pad
 21377 ;;		_stoa
 21378 ;;		_vfpfcnvrt
 21379 ;;		_fputs
 21380 ;; This function uses a reentrant model
 21381 ;;
 21382                           
 21383                           	psect	text74
 21384  018EC2                     __ptext74:
 21385                           	opt callstack 0
 21386  018EC2                     _fputc:
 21387                           	opt callstack 0
 21388                           
 21389                           ;stkvar	_fp @ sp[(0)+-4]
 21390                           
 21391                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21392                           ;incstack = 0
 21393 ;; hardware stack exceeded
 21394  018EC2  0EFC               	movlw	-4
 21395  018EC4  006F FF8C  F001    	movff	plusw1,btemp
 21396  018ECA  0EFD               	movlw	-3
 21397  018ECC  50E3               	movf	plusw1,w,c
 21398  018ECE  1001               	iorwf	btemp^0,w,c
 21399  018ED0  B4D8               	btfsc	status,2,c
 21400  018ED2  D009               	goto	u10310
 21401                           
 21402                           ;stkvar	_fp @ sp[(0)+-4]
 21403  018ED4  0EFC               	movlw	-4
 21404  018ED6  006F FF8C  F001    	movff	plusw1,btemp
 21405  018EDC  0EFD               	movlw	-3
 21406  018EDE  50E3               	movf	plusw1,w,c
 21407  018EE0  1001               	iorwf	btemp^0,w,c
 21408  018EE2  A4D8               	btfss	status,2,c
 21409  018EE4  D006               	goto	l11386
 21410  018EE6                     u10310:
 21411                           
 21412                           ;stkvar	_c @ sp[(0)+-2]
 21413  018EE6  0EFE               	movlw	-2
 21414  018EE8  50E3               	movf	plusw1,w,c
 21415  018EEA  6EE6               	movwf	postinc1,c
 21416  018EEC  ECC0  F0DA         	call	_putch	;wreg free
 21417  018EF0  D075               	goto	l3144
 21418  018EF2                     l11386:
 21419                           
 21420                           ;stkvar	_fp @ sp[(0)+-4]
 21421  018EF2  0EFC               	movlw	-4
 21422  018EF4  006F FF8C  F00B    	movff	plusw1,btemp+10
 21423  018EFA  0EFD               	movlw	-3
 21424  018EFC  006F FF8C  F00C    	movff	plusw1,btemp+11
 21425  018F02  0E04               	movlw	4
 21426  018F04  240B               	addwf	(btemp+10)^0,w,c
 21427  018F06  6ED9               	movwf	fsr2l,c
 21428  018F08  0E00               	movlw	0
 21429  018F0A  200C               	addwfc	(btemp+11)^0,w,c
 21430  018F0C  6EDA               	movwf	fsr2h,c
 21431  018F0E  50DE               	movf	postinc2,w,c
 21432  018F10  10DE               	iorwf	postinc2,w,c
 21433  018F12  B4D8               	btfsc	status,2,c
 21434  018F14  D026               	goto	u10330
 21435                           
 21436                           ;stkvar	_fp @ sp[(0)+-4]
 21437  018F16  0EFC               	movlw	-4
 21438  018F18  006F FF8C  F00B    	movff	plusw1,btemp+10
 21439  018F1E  0EFD               	movlw	-3
 21440  018F20  006F FF8C  F00C    	movff	plusw1,btemp+11
 21441  018F26  0E04               	movlw	4
 21442  018F28  240B               	addwf	(btemp+10)^0,w,c
 21443  018F2A  6ED9               	movwf	fsr2l,c
 21444  018F2C  0E00               	movlw	0
 21445  018F2E  200C               	addwfc	(btemp+11)^0,w,c
 21446  018F30  6EDA               	movwf	fsr2h,c
 21447                           
 21448                           ;stkvar	_fp @ sp[(0)+-4]
 21449  018F32  0EFC               	movlw	-4
 21450  018F34  006F FF8C  F00B    	movff	plusw1,btemp+10
 21451  018F3A  0EFD               	movlw	-3
 21452  018F3C  006F FF8C  F00C    	movff	plusw1,btemp+11
 21453  018F42  0E02               	movlw	2
 21454  018F44  240B               	addwf	(btemp+10)^0,w,c
 21455  018F46  6EE9               	movwf	fsr0l,c
 21456  018F48  0E00               	movlw	0
 21457  018F4A  200C               	addwfc	(btemp+11)^0,w,c
 21458  018F4C  6EEA               	movwf	fsr0h,c
 21459  018F4E  50DE               	movf	postinc2,w,c
 21460  018F50  5CEE               	subwf	postinc0,w,c
 21461  018F52  50EE               	movf	postinc0,w,c
 21462  018F54  0A80               	xorlw	128
 21463  018F56  6E01               	movwf	btemp^0,c
 21464  018F58  50DE               	movf	postinc2,w,c
 21465  018F5A  0A80               	xorlw	128
 21466  018F5C  5801               	subwfb	btemp^0,w,c
 21467  018F5E  B0D8               	btfsc	status,0,c
 21468  018F60  D03D               	goto	l3144
 21469  018F62                     u10330:
 21470                           
 21471                           ;stkvar	_c @ sp[(0)+-2]
 21472                           ;stkvar	_fp @ sp[(0)+-4]
 21473  018F62  0EFC               	movlw	-4
 21474  018F64  006F FF8C  F00B    	movff	plusw1,btemp+10
 21475  018F6A  0EFD               	movlw	-3
 21476  018F6C  006F FF8C  F00C    	movff	plusw1,btemp+11
 21477  018F72  0E02               	movlw	2
 21478  018F74  240B               	addwf	(btemp+10)^0,w,c
 21479  018F76  6ED9               	movwf	fsr2l,c
 21480  018F78  0E00               	movlw	0
 21481  018F7A  200C               	addwfc	(btemp+11)^0,w,c
 21482  018F7C  6EDA               	movwf	fsr2h,c
 21483  018F7E  006F FF78  F00B    	movff	postinc2,btemp+10
 21484  018F84  006F FF74  F00C    	movff	postdec2,btemp+11
 21485                           
 21486                           ;stkvar	_fp @ sp[(0)+-4]
 21487  018F8A  0EFC               	movlw	-4
 21488  018F8C  006F FF8F FFD9     	movff	plusw1,fsr2l
 21489  018F92  0EFD               	movlw	-3
 21490  018F94  006F FF8F FFDA     	movff	plusw1,fsr2h
 21491  018F9A  006F FF78  F009    	movff	postinc2,btemp+8
 21492  018FA0  006F FF74  F00A    	movff	postdec2,btemp+9
 21493  018FA6  500B               	movf	(btemp+10)^0,w,c
 21494  018FA8  2409               	addwf	(btemp+8)^0,w,c
 21495  018FAA  6ED9               	movwf	fsr2l,c
 21496  018FAC  500C               	movf	(btemp+11)^0,w,c
 21497  018FAE  200A               	addwfc	(btemp+9)^0,w,c
 21498  018FB0  6EDA               	movwf	fsr2h,c
 21499  018FB2  0EFE               	movlw	-2
 21500  018FB4  006F FF8F FFDF     	movff	plusw1,indf2
 21501                           
 21502                           ;stkvar	_fp @ sp[(0)+-4]
 21503  018FBA  0EFC               	movlw	-4
 21504  018FBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 21505  018FC2  0EFD               	movlw	-3
 21506  018FC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 21507  018FCA  0E02               	movlw	2
 21508  018FCC  240B               	addwf	(btemp+10)^0,w,c
 21509  018FCE  6ED9               	movwf	fsr2l,c
 21510  018FD0  0E00               	movlw	0
 21511  018FD2  200C               	addwfc	(btemp+11)^0,w,c
 21512  018FD4  6EDA               	movwf	fsr2h,c
 21513  018FD6  2ADE               	incf	postinc2,f,c
 21514  018FD8  0E00               	movlw	0
 21515  018FDA  22DD               	addwfc	postdec2,f,c
 21516  018FDC                     l3144:
 21517                           
 21518                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21519  018FDC  52E5               	movf	postdec1,f,c
 21520  018FDE  52E5               	movf	postdec1,f,c
 21521  018FE0  52E5               	movf	postdec1,f,c
 21522  018FE2  52E5               	movf	postdec1,f,c
 21523  018FE4  0012               	return		;funcret
 21524  018FE6                     __end_of_fputc:
 21525                           	opt callstack 0
 21526                           
 21527 ;; *************** function _putch *****************
 21528 ;; Defined at:
 21529 ;;		line 170 in file "eadog.c"
 21530 ;; Parameters:    Size  Location     Type
 21531 ;;  c               1  [STACK] unsigned char 
 21532 ;; Auto vars:     Size  Location     Type
 21533 ;;		None
 21534 ;; Return value:  Size  Location     Type
 21535 ;;                  1  [STACK] void 
 21536 ;; Registers used:
 21537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21538 ;; Tracked objects:
 21539 ;;		On entry : 0/0
 21540 ;;		On exit  : 0/0
 21541 ;;		Unchanged: 0/0
 21542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21547 ;;Total ram usage:        0 bytes
 21548 ;; Hardware stack levels used:    1
 21549 ;; Hardware stack levels required when called:   16
 21550 ;; This function calls:
 21551 ;;		_ringBufS_put_dma
 21552 ;; This function is called by:
 21553 ;;		_fputc
 21554 ;; This function uses a reentrant model
 21555 ;;
 21556                           
 21557                           	psect	text75
 21558  01B580                     __ptext75:
 21559                           	opt callstack 0
 21560  01B580                     _putch:
 21561                           	opt callstack 0
 21562                           
 21563                           ;eadog.c: 170: void putch(char c);eadog.c: 171: {;eadog.c: 172:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 21564                           ;stkvar	_c @ sp[(0)+-1]
 21565                           
 21566                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21567                           ;incstack = 0
 21568 ;; hardware stack exceeded
 21569  01B580  0EFF               	movlw	-1
 21570  01B582  50E3               	movf	plusw1,w,c
 21571  01B584  6EE6               	movwf	postinc1,c
 21572  01B586  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 21573  01B58C  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 21574  01B592  ECB6  F0CE         	call	_ringBufS_put_dma	;wreg free
 21575                           
 21576                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 21577  01B596  52E5               	movf	postdec1,f,c
 21578  01B598  0012               	return		;funcret
 21579  01B59A                     __end_of_putch:
 21580                           	opt callstack 0
 21581                           
 21582 ;; *************** function _ringBufS_put_dma *****************
 21583 ;; Defined at:
 21584 ;;		line 67 in file "ringbufs.c"
 21585 ;; Parameters:    Size  Location     Type
 21586 ;;  _this           2  [STACK] PTR struct ringBufS_t
 21587 ;;		 -> ring_buf1(67), 
 21588 ;;  c               1  [STACK] const unsigned char 
 21589 ;; Auto vars:     Size  Location     Type
 21590 ;;		None
 21591 ;; Return value:  Size  Location     Type
 21592 ;;                  1  [STACK] void 
 21593 ;; Registers used:
 21594 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21595 ;; Tracked objects:
 21596 ;;		On entry : 0/0
 21597 ;;		On exit  : 0/0
 21598 ;;		Unchanged: 0/0
 21599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21604 ;;Total ram usage:        0 bytes
 21605 ;; Hardware stack levels used:    1
 21606 ;; Hardware stack levels required when called:   15
 21607 ;; This function calls:
 21608 ;;		Nothing
 21609 ;; This function is called by:
 21610 ;;		_putch
 21611 ;; This function uses a reentrant model
 21612 ;;
 21613                           
 21614                           	psect	text76
 21615  019D6C                     __ptext76:
 21616                           	opt callstack 0
 21617  019D6C                     _ringBufS_put_dma:
 21618                           	opt callstack 0
 21619                           
 21620                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 21621                           ;stkvar	__this @ sp[(0)+-2]
 21622                           
 21623                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21624                           ;incstack = 0
 21625 ;; hardware stack exceeded
 21626  019D6C  0EFE               	movlw	-2
 21627  019D6E  006F FF8C  F00B    	movff	plusw1,btemp+10
 21628  019D74  0EFF               	movlw	-1
 21629  019D76  006F FF8C  F00C    	movff	plusw1,btemp+11
 21630  019D7C  0E42               	movlw	66
 21631  019D7E  240B               	addwf	(btemp+10)^0,w,c
 21632  019D80  6ED9               	movwf	fsr2l,c
 21633  019D82  0E00               	movlw	0
 21634  019D84  200C               	addwfc	(btemp+11)^0,w,c
 21635  019D86  6EDA               	movwf	fsr2h,c
 21636  019D88  0E40               	movlw	64
 21637  019D8A  60DF               	cpfslt	indf2,c
 21638  019D8C  D040               	goto	l1575
 21639                           
 21640                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 21641                           ;stkvar	_c @ sp[(0)+-3]
 21642                           ;stkvar	__this @ sp[(0)+-2]
 21643  019D8E  0EFE               	movlw	-2
 21644  019D90  006F FF8C  F00B    	movff	plusw1,btemp+10
 21645  019D96  0EFF               	movlw	-1
 21646  019D98  006F FF8C  F00C    	movff	plusw1,btemp+11
 21647  019D9E  0E40               	movlw	64
 21648  019DA0  240B               	addwf	(btemp+10)^0,w,c
 21649  019DA2  6ED9               	movwf	fsr2l,c
 21650  019DA4  0E00               	movlw	0
 21651  019DA6  200C               	addwfc	(btemp+11)^0,w,c
 21652  019DA8  6EDA               	movwf	fsr2h,c
 21653  019DAA  50DF               	movf	indf2,w,c
 21654  019DAC  6E0C               	movwf	(btemp+11)^0,c
 21655                           
 21656                           ;stkvar	__this @ sp[(0)+-2]
 21657  019DAE  0EFE               	movlw	-2
 21658  019DB0  006F FF8C  F009    	movff	plusw1,btemp+8
 21659  019DB6  0EFF               	movlw	-1
 21660  019DB8  006F FF8C  F00A    	movff	plusw1,btemp+9
 21661  019DBE  500C               	movf	(btemp+11)^0,w,c
 21662  019DC0  2409               	addwf	(btemp+8)^0,w,c
 21663  019DC2  6ED9               	movwf	fsr2l,c
 21664  019DC4  0E00               	movlw	0
 21665  019DC6  200A               	addwfc	(btemp+9)^0,w,c
 21666  019DC8  6EDA               	movwf	fsr2h,c
 21667  019DCA  0EFD               	movlw	-3
 21668  019DCC  006F FF8F FFDF     	movff	plusw1,indf2
 21669                           
 21670                           ;ringbufs.c: 71:   ++_this->head;
 21671                           ;stkvar	__this @ sp[(0)+-2]
 21672  019DD2  0EFE               	movlw	-2
 21673  019DD4  006F FF8C  F00B    	movff	plusw1,btemp+10
 21674  019DDA  0EFF               	movlw	-1
 21675  019DDC  006F FF8C  F00C    	movff	plusw1,btemp+11
 21676  019DE2  0E40               	movlw	64
 21677  019DE4  240B               	addwf	(btemp+10)^0,w,c
 21678  019DE6  6ED9               	movwf	fsr2l,c
 21679  019DE8  0E00               	movlw	0
 21680  019DEA  200C               	addwfc	(btemp+11)^0,w,c
 21681  019DEC  6EDA               	movwf	fsr2h,c
 21682  019DEE  2ADF               	incf	indf2,f,c
 21683                           
 21684                           ;ringbufs.c: 72:   ++_this->count;
 21685                           ;stkvar	__this @ sp[(0)+-2]
 21686  019DF0  0EFE               	movlw	-2
 21687  019DF2  006F FF8C  F00B    	movff	plusw1,btemp+10
 21688  019DF8  0EFF               	movlw	-1
 21689  019DFA  006F FF8C  F00C    	movff	plusw1,btemp+11
 21690  019E00  0E42               	movlw	66
 21691  019E02  240B               	addwf	(btemp+10)^0,w,c
 21692  019E04  6ED9               	movwf	fsr2l,c
 21693  019E06  0E00               	movlw	0
 21694  019E08  200C               	addwfc	(btemp+11)^0,w,c
 21695  019E0A  6EDA               	movwf	fsr2h,c
 21696  019E0C  2ADF               	incf	indf2,f,c
 21697  019E0E                     l1575:
 21698                           
 21699                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 21700  019E0E  52E5               	movf	postdec1,f,c
 21701  019E10  52E5               	movf	postdec1,f,c
 21702  019E12  52E5               	movf	postdec1,f,c
 21703  019E14  0012               	return		;funcret
 21704  019E16                     __end_of_ringBufS_put_dma:
 21705                           	opt callstack 0
 21706                           
 21707 ;; *************** function _atoi *****************
 21708 ;; Defined at:
 21709 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 21710 ;; Parameters:    Size  Location     Type
 21711 ;;  s               2  [STACK] PTR const unsigned char 
 21712 ;;		 -> STR_65(85), STR_63(3), STR_62(3), STR_61(19), 
 21713 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 21714 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 21715 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 21716 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 21717 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 21718 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 21719 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 21720 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 21721 ;;		 -> STR_26(19), STR_25(19), STR_24(19), STR_23(19), 
 21722 ;;		 -> STR_22(19), STR_21(17), STR_20(16), STR_19(16), 
 21723 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(22), 
 21724 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 21725 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 21726 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 21727 ;;		 -> STR_1(17), 
 21728 ;; Auto vars:     Size  Location     Type
 21729 ;;  n               2  [STACK] int 
 21730 ;;  neg             2  [STACK] int 
 21731 ;; Return value:  Size  Location     Type
 21732 ;;                  2  [STACK] int 
 21733 ;; Registers used:
 21734 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 21735 ;; Tracked objects:
 21736 ;;		On entry : 0/0
 21737 ;;		On exit  : 0/0
 21738 ;;		Unchanged: 0/0
 21739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21744 ;;Total ram usage:        0 bytes
 21745 ;; Hardware stack levels used:    1
 21746 ;; Hardware stack levels required when called:   16
 21747 ;; This function calls:
 21748 ;;		_isdigit
 21749 ;;		_isspace
 21750 ;; This function is called by:
 21751 ;;		_vfpfcnvrt
 21752 ;; This function uses a reentrant model
 21753 ;;
 21754                           
 21755                           	psect	text77
 21756  0170F2                     __ptext77:
 21757                           	opt callstack 0
 21758  0170F2                     _atoi:
 21759                           	opt callstack 0
 21760                           
 21761                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21762  0170F2  0E09               	movlw	9
 21763  0170F4  26E1               	addwf	fsr1l,f,c
 21764  0170F6  0E00               	movlw	0
 21765  0170F8  22E2               	addwfc	fsr1h,f,c
 21766                           
 21767                           ;stkvar	_n @ sp[(-9)+5]
 21768                           
 21769                           ;incstack = 0
 21770 ;; hardware stack exceeded
 21771  0170FA  0EFC               	movlw	-4
 21772  0170FC  6AE3               	clrf	plusw1,c
 21773  0170FE  0EFD               	movlw	-3
 21774  017100  6AE3               	clrf	plusw1,c
 21775                           
 21776                           ;stkvar	_neg @ sp[(-9)+7]
 21777  017102  0EFE               	movlw	-2
 21778  017104  6AE3               	clrf	plusw1,c
 21779  017106  0EFF               	movlw	-1
 21780  017108  6AE3               	clrf	plusw1,c
 21781  01710A  D011               	goto	l9074
 21782  01710C                     l9072:
 21783                           
 21784                           ;stkvar	_s @ sp[(-9)+-2]
 21785  01710C  0EF5               	movlw	-11
 21786  01710E  50E3               	movf	plusw1,w,c
 21787  017110  0F01               	addlw	1
 21788  017112  6E01               	movwf	btemp^0,c
 21789  017114  0EF5               	movlw	-11
 21790  017116  0060  F007  FFE3   	movff	btemp,plusw1
 21791  01711C  6A01               	clrf	btemp^0,c
 21792  01711E  0EF6               	movlw	-10
 21793  017120  50E3               	movf	plusw1,w,c
 21794  017122  2001               	addwfc	btemp^0,w,c
 21795  017124  6E01               	movwf	btemp^0,c
 21796  017126  0EF6               	movlw	-10
 21797  017128  0060  F007  FFE3   	movff	btemp,plusw1
 21798  01712E                     l9074:
 21799                           
 21800                           ;stkvar	_atoi$5892 @ sp[(-9)+4]
 21801  01712E  0EFB               	movlw	-5
 21802  017130  6AE3               	clrf	plusw1,c
 21803  017132  2AE3               	incf	plusw1,f,c
 21804                           
 21805                           ;stkvar	_s @ sp[(-9)+-2]
 21806  017134  50E1               	movf	fsr1l,w,c
 21807  017136  0FF5               	addlw	-11
 21808  017138  6ED9               	movwf	fsr2l,c
 21809  01713A  50E2               	movf	fsr1h,w,c
 21810  01713C  6EDA               	movwf	fsr2h,c
 21811  01713E  0EFF               	movlw	255
 21812  017140  22DA               	addwfc	fsr2h,f,c
 21813  017142  006F FF7B FFF6     	movff	postinc2,tblptrl
 21814  017148  006F FF77 FFF7     	movff	postdec2,tblptrh
 21815  01714E                     	if	0	;tblptru may be non-zero
 21816  01714E                     	endif
 21817  01714E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21818  01714E  0E00               	movlw	low (__mediumconst shr (0+16))
 21819  017150  6EF8               	movwf	tblptru,c
 21820  017152                     	endif
 21821  017152  0008               	tblrd		*
 21822  017154  50F5               	movf	tablat,w,c
 21823  017156  0A20               	xorlw	32
 21824  017158  B4D8               	btfsc	status,2,c
 21825  01715A  D023               	goto	l9082
 21826  01715C  0EF7               	movlw	247
 21827  01715E  6E0B               	movwf	(btemp+10)^0,c
 21828  017160  0EFF               	movlw	255
 21829  017162  6E0C               	movwf	(btemp+11)^0,c
 21830                           
 21831                           ;stkvar	_s @ sp[(-9)+-2]
 21832  017164  50E1               	movf	fsr1l,w,c
 21833  017166  0FF5               	addlw	-11
 21834  017168  6ED9               	movwf	fsr2l,c
 21835  01716A  50E2               	movf	fsr1h,w,c
 21836  01716C  6EDA               	movwf	fsr2h,c
 21837  01716E  0EFF               	movlw	255
 21838  017170  22DA               	addwfc	fsr2h,f,c
 21839  017172  006F FF7B FFF6     	movff	postinc2,tblptrl
 21840  017178  006F FF77 FFF7     	movff	postdec2,tblptrh
 21841  01717E                     	if	0	;tblptru may be non-zero
 21842  01717E                     	endif
 21843  01717E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21844  01717E  0E00               	movlw	low (__mediumconst shr (0+16))
 21845  017180  6EF8               	movwf	tblptru,c
 21846  017182                     	endif
 21847  017182  0008               	tblrd		*
 21848  017184  50F5               	movf	tablat,w,c
 21849  017186  6E09               	movwf	(btemp+8)^0,c
 21850  017188  6A0A               	clrf	(btemp+9)^0,c
 21851  01718A  500B               	movf	(btemp+10)^0,w,c
 21852  01718C  2609               	addwf	(btemp+8)^0,f,c
 21853  01718E  500C               	movf	(btemp+11)^0,w,c
 21854  017190  220A               	addwfc	(btemp+9)^0,f,c
 21855  017192  500A               	movf	(btemp+9)^0,w,c
 21856  017194  E104               	bnz	u8310
 21857  017196  0E05               	movlw	5
 21858  017198  5C09               	subwf	(btemp+8)^0,w,c
 21859  01719A  A0D8               	btfss	status,0,c
 21860  01719C  D002               	goto	l9082
 21861  01719E                     u8310:
 21862                           
 21863                           ;stkvar	_atoi$5892 @ sp[(-9)+4]
 21864  01719E  0EFB               	movlw	-5
 21865  0171A0  6AE3               	clrf	plusw1,c
 21866  0171A2                     l9082:
 21867                           
 21868                           ;stkvar	_atoi$5892 @ sp[(-9)+4]
 21869  0171A2  0EFB               	movlw	-5
 21870  0171A4  50E3               	movf	plusw1,w,c
 21871  0171A6  6E0B               	movwf	(btemp+10)^0,c
 21872  0171A8  6A0C               	clrf	(btemp+11)^0,c
 21873                           
 21874                           ;stkvar	_atoi$5891 @ sp[(-9)+2]
 21875  0171AA  0EF9               	movlw	-7
 21876  0171AC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21877  0171B2  0EFA               	movlw	-6
 21878  0171B4  0060  F033  FFE3   	movff	btemp+11,plusw1
 21879                           
 21880                           ;stkvar	_atoi$5891 @ sp[(-9)+2]
 21881  0171BA  0EF9               	movlw	-7
 21882  0171BC  006F FF8C  F001    	movff	plusw1,btemp
 21883  0171C2  0EFA               	movlw	-6
 21884  0171C4  50E3               	movf	plusw1,w,c
 21885  0171C6  1001               	iorwf	btemp^0,w,c
 21886  0171C8  B4D8               	btfsc	status,2,c
 21887  0171CA  D01F               	goto	l9092
 21888  0171CC  D79F               	goto	l9072
 21889  0171CE                     l9088:
 21890  0171CE  0E01               	movlw	1
 21891  0171D0  6E0B               	movwf	(btemp+10)^0,c
 21892  0171D2  0E00               	movlw	0
 21893  0171D4  6E0C               	movwf	(btemp+11)^0,c
 21894                           
 21895                           ;stkvar	_neg @ sp[(-9)+7]
 21896  0171D6  0EFE               	movlw	-2
 21897  0171D8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21898  0171DE  0EFF               	movlw	-1
 21899  0171E0  0060  F033  FFE3   	movff	btemp+11,plusw1
 21900  0171E6                     l9090:
 21901                           
 21902                           ;stkvar	_s @ sp[(-9)+-2]
 21903  0171E6  0EF5               	movlw	-11
 21904  0171E8  50E3               	movf	plusw1,w,c
 21905  0171EA  0F01               	addlw	1
 21906  0171EC  6E01               	movwf	btemp^0,c
 21907  0171EE  0EF5               	movlw	-11
 21908  0171F0  0060  F007  FFE3   	movff	btemp,plusw1
 21909  0171F6  6A01               	clrf	btemp^0,c
 21910  0171F8  0EF6               	movlw	-10
 21911  0171FA  50E3               	movf	plusw1,w,c
 21912  0171FC  2001               	addwfc	btemp^0,w,c
 21913  0171FE  6E01               	movwf	btemp^0,c
 21914  017200  0EF6               	movlw	-10
 21915  017202  0060  F007  FFE3   	movff	btemp,plusw1
 21916  017208  D053               	goto	l9098
 21917  01720A                     l9092:
 21918                           
 21919                           ;stkvar	_s @ sp[(-9)+-2]
 21920  01720A  50E1               	movf	fsr1l,w,c
 21921  01720C  0FF5               	addlw	-11
 21922  01720E  6ED9               	movwf	fsr2l,c
 21923  017210  50E2               	movf	fsr1h,w,c
 21924  017212  6EDA               	movwf	fsr2h,c
 21925  017214  0EFF               	movlw	255
 21926  017216  22DA               	addwfc	fsr2h,f,c
 21927  017218  006F FF7B FFF6     	movff	postinc2,tblptrl
 21928  01721E  006F FF77 FFF7     	movff	postdec2,tblptrh
 21929  017224                     	if	0	;tblptru may be non-zero
 21930  017224                     	endif
 21931  017224                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21932  017224  0E00               	movlw	low (__mediumconst shr (0+16))
 21933  017226  6EF8               	movwf	tblptru,c
 21934  017228                     	endif
 21935  017228  0008               	tblrd		*
 21936  01722A  50F5               	movf	tablat,w,c
 21937  01722C  6E0B               	movwf	(btemp+10)^0,c
 21938  01722E  6A0C               	clrf	(btemp+11)^0,c
 21939                           
 21940                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21941                           ; Switch size 1, requested type "simple"
 21942                           ; Number of cases is 1, Range of values is 0 to 0
 21943                           ; switch strategies available:
 21944                           ; Name         Instructions Cycles
 21945                           ; simple_byte            4     3 (average)
 21946                           ;	Chosen strategy is simple_byte
 21947  017230  500C               	movf	(btemp+11)^0,w,c
 21948  017232  0A00               	xorlw	0	; case 0
 21949  017234  A4D8               	btfss	status,2,c
 21950  017236  D03C               	goto	l9098
 21951                           
 21952                           ; Switch size 1, requested type "simple"
 21953                           ; Number of cases is 2, Range of values is 43 to 45
 21954                           ; switch strategies available:
 21955                           ; Name         Instructions Cycles
 21956                           ; simple_byte            7     4 (average)
 21957                           ;	Chosen strategy is simple_byte
 21958  017238  500B               	movf	(btemp+10)^0,w,c
 21959  01723A  0A2B               	xorlw	43	; case 43
 21960  01723C  B4D8               	btfsc	status,2,c
 21961  01723E  D7D3               	goto	l9090
 21962  017240  0A06               	xorlw	6	; case 45
 21963  017242  B4D8               	btfsc	status,2,c
 21964  017244  D7C4               	goto	l9088
 21965  017246  D034               	goto	l9098
 21966  017248                     l9094:
 21967                           
 21968                           ;stkvar	_n @ sp[(-9)+5]
 21969  017248  0EFC               	movlw	-4
 21970  01724A  006F FF8C  F00B    	movff	plusw1,btemp+10
 21971  017250  0EFD               	movlw	-3
 21972  017252  006F FF8C  F00C    	movff	plusw1,btemp+11
 21973  017258  0E0A               	movlw	10
 21974  01725A  020B               	mulwf	(btemp+10)^0,c
 21975  01725C  006F FFCC  F009    	movff	prodl,btemp+8
 21976  017262  006F FFD0  F00A    	movff	prodh,btemp+9
 21977  017268  020C               	mulwf	(btemp+11)^0,c
 21978  01726A  50F3               	movf	prodl,w,c
 21979  01726C  260A               	addwf	(btemp+9)^0,f,c
 21980                           
 21981                           ;stkvar	_s @ sp[(-9)+-2]
 21982  01726E  50E1               	movf	fsr1l,w,c
 21983  017270  0FF5               	addlw	-11
 21984  017272  6ED9               	movwf	fsr2l,c
 21985  017274  50E2               	movf	fsr1h,w,c
 21986  017276  6EDA               	movwf	fsr2h,c
 21987  017278  0EFF               	movlw	255
 21988  01727A  22DA               	addwfc	fsr2h,f,c
 21989  01727C  006F FF7B FFF6     	movff	postinc2,tblptrl
 21990  017282  006F FF77 FFF7     	movff	postdec2,tblptrh
 21991  017288                     	if	0	;tblptru may be non-zero
 21992  017288                     	endif
 21993  017288                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21994  017288  0E00               	movlw	low (__mediumconst shr (0+16))
 21995  01728A  6EF8               	movwf	tblptru,c
 21996  01728C                     	endif
 21997  01728C  0008               	tblrd		*
 21998  01728E  50F5               	movf	tablat,w,c
 21999  017290  5E09               	subwf	(btemp+8)^0,f,c
 22000  017292  0E00               	movlw	0
 22001  017294  5A0A               	subwfb	(btemp+9)^0,f,c
 22002  017296  0E30               	movlw	48
 22003  017298  2609               	addwf	(btemp+8)^0,f,c
 22004  01729A  0E00               	movlw	0
 22005  01729C  220A               	addwfc	(btemp+9)^0,f,c
 22006                           
 22007                           ;stkvar	_n @ sp[(-9)+5]
 22008  01729E  0EFC               	movlw	-4
 22009  0172A0  0060  F027  FFE3   	movff	btemp+8,plusw1
 22010  0172A6  0EFD               	movlw	-3
 22011  0172A8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22012  0172AE  D79B               	goto	l9090
 22013  0172B0                     l9098:
 22014  0172B0  0ED0               	movlw	208
 22015  0172B2  6E0B               	movwf	(btemp+10)^0,c
 22016  0172B4  0EFF               	movlw	255
 22017  0172B6  6E0C               	movwf	(btemp+11)^0,c
 22018                           
 22019                           ;stkvar	_s @ sp[(-9)+-2]
 22020  0172B8  50E1               	movf	fsr1l,w,c
 22021  0172BA  0FF5               	addlw	-11
 22022  0172BC  6ED9               	movwf	fsr2l,c
 22023  0172BE  50E2               	movf	fsr1h,w,c
 22024  0172C0  6EDA               	movwf	fsr2h,c
 22025  0172C2  0EFF               	movlw	255
 22026  0172C4  22DA               	addwfc	fsr2h,f,c
 22027  0172C6  006F FF7B FFF6     	movff	postinc2,tblptrl
 22028  0172CC  006F FF77 FFF7     	movff	postdec2,tblptrh
 22029  0172D2                     	if	0	;tblptru may be non-zero
 22030  0172D2                     	endif
 22031  0172D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22032  0172D2  0E00               	movlw	low (__mediumconst shr (0+16))
 22033  0172D4  6EF8               	movwf	tblptru,c
 22034  0172D6                     	endif
 22035  0172D6  0008               	tblrd		*
 22036  0172D8  50F5               	movf	tablat,w,c
 22037  0172DA  6E09               	movwf	(btemp+8)^0,c
 22038  0172DC  6A0A               	clrf	(btemp+9)^0,c
 22039  0172DE  500B               	movf	(btemp+10)^0,w,c
 22040  0172E0  2609               	addwf	(btemp+8)^0,f,c
 22041  0172E2  500C               	movf	(btemp+11)^0,w,c
 22042  0172E4  220A               	addwfc	(btemp+9)^0,f,c
 22043  0172E6  500A               	movf	(btemp+9)^0,w,c
 22044  0172E8  E106               	bnz	u8330
 22045  0172EA  0E0A               	movlw	10
 22046  0172EC  5C09               	subwf	(btemp+8)^0,w,c
 22047  0172EE  B0D8               	btfsc	status,0,c
 22048  0172F0  D002               	goto	u8330
 22049  0172F2  0E01               	movlw	1
 22050  0172F4  D001               	goto	u8340
 22051  0172F6                     u8330:
 22052  0172F6  0E00               	movlw	0
 22053  0172F8                     u8340:
 22054  0172F8  6E0B               	movwf	(btemp+10)^0,c
 22055  0172FA  6A0C               	clrf	(btemp+11)^0,c
 22056                           
 22057                           ;stkvar	_atoi$5893 @ sp[(-9)+0]
 22058  0172FC  0EF7               	movlw	-9
 22059  0172FE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22060  017304  0EF8               	movlw	-8
 22061  017306  0060  F033  FFE3   	movff	btemp+11,plusw1
 22062                           
 22063                           ;stkvar	_atoi$5893 @ sp[(-9)+0]
 22064  01730C  0EF7               	movlw	-9
 22065  01730E  006F FF8C  F001    	movff	plusw1,btemp
 22066  017314  0EF8               	movlw	-8
 22067  017316  50E3               	movf	plusw1,w,c
 22068  017318  1001               	iorwf	btemp^0,w,c
 22069  01731A  A4D8               	btfss	status,2,c
 22070  01731C  D795               	goto	l9094
 22071                           
 22072                           ;stkvar	_neg @ sp[(-9)+7]
 22073  01731E  0EFE               	movlw	-2
 22074  017320  006F FF8C  F001    	movff	plusw1,btemp
 22075  017326  0EFF               	movlw	-1
 22076  017328  50E3               	movf	plusw1,w,c
 22077  01732A  1001               	iorwf	btemp^0,w,c
 22078  01732C  A4D8               	btfss	status,2,c
 22079  01732E  D00E               	goto	l9108
 22080                           
 22081                           ;stkvar	_n @ sp[(-9)+5]
 22082  017330  0EFC               	movlw	-4
 22083  017332  006F FF8C  F001    	movff	plusw1,btemp
 22084  017338  1E01               	comf	btemp^0,f,c
 22085  01733A  0EFD               	movlw	-3
 22086  01733C  006F FF8C  F002    	movff	plusw1,btemp+1
 22087  017342  1E02               	comf	(btemp+1)^0,f,c
 22088  017344  2A01               	incf	btemp^0,f,c
 22089  017346  B4D8               	btfsc	status,2,c
 22090  017348  2A02               	incf	(btemp+1)^0,f,c
 22091  01734A  D008               	goto	l3075
 22092  01734C                     l9108:
 22093                           
 22094                           ;stkvar	_n @ sp[(-9)+5]
 22095  01734C  0EFC               	movlw	-4
 22096  01734E  006F FF8C  F001    	movff	plusw1,btemp
 22097  017354  0EFD               	movlw	-3
 22098  017356  006F FF8C  F002    	movff	plusw1,btemp+1
 22099  01735C                     l3075:
 22100                           
 22101                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 22102  01735C  0EF5               	movlw	245
 22103  01735E  26E1               	addwf	fsr1l,f,c
 22104  017360  0EFF               	movlw	255
 22105  017362  22E2               	addwfc	fsr1h,f,c
 22106  017364  0012               	return		;funcret
 22107  017366                     __end_of_atoi:
 22108                           	opt callstack 0
 22109                           
 22110 ;; *************** function _isspace *****************
 22111 ;; Defined at:
 22112 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 22113 ;; Parameters:    Size  Location     Type
 22114 ;;  c               2  [STACK] int 
 22115 ;; Auto vars:     Size  Location     Type
 22116 ;;		None
 22117 ;; Return value:  Size  Location     Type
 22118 ;;                  2  [STACK] int 
 22119 ;; Registers used:
 22120 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22121 ;; Tracked objects:
 22122 ;;		On entry : 0/0
 22123 ;;		On exit  : 0/0
 22124 ;;		Unchanged: 0/0
 22125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22130 ;;Total ram usage:        0 bytes
 22131 ;; Hardware stack levels used:    1
 22132 ;; Hardware stack levels required when called:   15
 22133 ;; This function calls:
 22134 ;;		Nothing
 22135 ;; This function is called by:
 22136 ;;		_atoi
 22137 ;; This function uses a reentrant model
 22138 ;;
 22139                           
 22140                           	psect	text78
 22141  01A8D8                     __ptext78:
 22142                           	opt callstack 0
 22143  01A8D8                     _isspace:
 22144                           	opt callstack 0
 22145                           
 22146                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22147  01A8D8  52E6               	movf	postinc1,f,c
 22148                           
 22149                           ;stkvar	_isspace$5942 @ sp[(-1)+0]
 22150                           
 22151                           ;incstack = 0
 22152 ;; hardware stack exceeded
 22153  01A8DA  0EFF               	movlw	-1
 22154  01A8DC  6AE3               	clrf	plusw1,c
 22155  01A8DE  2AE3               	incf	plusw1,f,c
 22156                           
 22157                           ;stkvar	_c @ sp[(-1)+-2]
 22158  01A8E0  0EFD               	movlw	-3
 22159  01A8E2  006F FF8C  F001    	movff	plusw1,btemp
 22160  01A8E8  0E20               	movlw	32
 22161  01A8EA  1801               	xorwf	btemp^0,w,c
 22162  01A8EC  E104               	bnz	u7160
 22163  01A8EE  0EFE               	movlw	-2
 22164  01A8F0  50E3               	movf	plusw1,w,c
 22165  01A8F2  B4D8               	btfsc	status,2,c
 22166  01A8F4  D012               	goto	l8466
 22167  01A8F6                     u7160:
 22168                           
 22169                           ;stkvar	_c @ sp[(-1)+-2]
 22170  01A8F6  0EFD               	movlw	-3
 22171  01A8F8  50E3               	movf	plusw1,w,c
 22172  01A8FA  0FF7               	addlw	247
 22173  01A8FC  6E0B               	movwf	(btemp+10)^0,c
 22174  01A8FE  0EFE               	movlw	-2
 22175  01A900  006F FF8C  F00C    	movff	plusw1,btemp+11
 22176  01A906  0EFF               	movlw	255
 22177  01A908  220C               	addwfc	(btemp+11)^0,f,c
 22178  01A90A  500C               	movf	(btemp+11)^0,w,c
 22179  01A90C  E104               	bnz	u7170
 22180  01A90E  0E05               	movlw	5
 22181  01A910  5C0B               	subwf	(btemp+10)^0,w,c
 22182  01A912  A0D8               	btfss	status,0,c
 22183  01A914  D002               	goto	l8466
 22184  01A916                     u7170:
 22185                           
 22186                           ;stkvar	_isspace$5942 @ sp[(-1)+0]
 22187  01A916  0EFF               	movlw	-1
 22188  01A918  6AE3               	clrf	plusw1,c
 22189  01A91A                     l8466:
 22190                           
 22191                           ;stkvar	_isspace$5942 @ sp[(-1)+0]
 22192  01A91A  0EFF               	movlw	-1
 22193  01A91C  50E3               	movf	plusw1,w,c
 22194  01A91E  6E01               	movwf	btemp^0,c
 22195  01A920  6A02               	clrf	(btemp+1)^0,c
 22196                           
 22197                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22198  01A922  52E5               	movf	postdec1,f,c
 22199  01A924  52E5               	movf	postdec1,f,c
 22200  01A926  52E5               	movf	postdec1,f,c
 22201  01A928  0012               	return		;funcret
 22202  01A92A                     __end_of_isspace:
 22203                           	opt callstack 0
 22204                           
 22205 ;; *************** function _isdigit *****************
 22206 ;; Defined at:
 22207 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 22208 ;; Parameters:    Size  Location     Type
 22209 ;;  c               2  [STACK] int 
 22210 ;; Auto vars:     Size  Location     Type
 22211 ;;		None
 22212 ;; Return value:  Size  Location     Type
 22213 ;;                  2  [STACK] int 
 22214 ;; Registers used:
 22215 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22216 ;; Tracked objects:
 22217 ;;		On entry : 0/0
 22218 ;;		On exit  : 0/0
 22219 ;;		Unchanged: 0/0
 22220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22225 ;;Total ram usage:        0 bytes
 22226 ;; Hardware stack levels used:    1
 22227 ;; Hardware stack levels required when called:   15
 22228 ;; This function calls:
 22229 ;;		Nothing
 22230 ;; This function is called by:
 22231 ;;		_vfpfcnvrt
 22232 ;;		_atoi
 22233 ;; This function uses a reentrant model
 22234 ;;
 22235                           
 22236                           	psect	text79
 22237  01AFBE                     __ptext79:
 22238                           	opt callstack 0
 22239  01AFBE                     _isdigit:
 22240                           	opt callstack 0
 22241                           
 22242                           ;stkvar	_c @ sp[(0)+-2]
 22243                           
 22244                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22245                           ;incstack = 0
 22246 ;; hardware stack exceeded
 22247  01AFBE  0EFE               	movlw	-2
 22248  01AFC0  50E3               	movf	plusw1,w,c
 22249  01AFC2  0FD0               	addlw	208
 22250  01AFC4  6E0B               	movwf	(btemp+10)^0,c
 22251  01AFC6  0EFF               	movlw	-1
 22252  01AFC8  006F FF8C  F00C    	movff	plusw1,btemp+11
 22253  01AFCE  0EFF               	movlw	255
 22254  01AFD0  220C               	addwfc	(btemp+11)^0,f,c
 22255  01AFD2  500C               	movf	(btemp+11)^0,w,c
 22256  01AFD4  E106               	bnz	u6010
 22257  01AFD6  0E0A               	movlw	10
 22258  01AFD8  5C0B               	subwf	(btemp+10)^0,w,c
 22259  01AFDA  B0D8               	btfsc	status,0,c
 22260  01AFDC  D002               	goto	u6010
 22261  01AFDE  0E01               	movlw	1
 22262  01AFE0  D001               	goto	u6020
 22263  01AFE2                     u6010:
 22264  01AFE2  0E00               	movlw	0
 22265  01AFE4                     u6020:
 22266  01AFE4  6E01               	movwf	btemp^0,c
 22267  01AFE6  6A02               	clrf	(btemp+1)^0,c
 22268                           
 22269                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22270  01AFE8  52E5               	movf	postdec1,f,c
 22271  01AFEA  52E5               	movf	postdec1,f,c
 22272  01AFEC  0012               	return		;funcret
 22273  01AFEE                     __end_of_isdigit:
 22274                           	opt callstack 0
 22275                           
 22276 ;; *************** function _set_vterm *****************
 22277 ;; Defined at:
 22278 ;;		line 107 in file "mconfig.c"
 22279 ;; Parameters:    Size  Location     Type
 22280 ;;  vterm           1  [STACK] const unsigned char 
 22281 ;; Auto vars:     Size  Location     Type
 22282 ;;		None
 22283 ;; Return value:  Size  Location     Type
 22284 ;;                  1  [STACK] unsigned char 
 22285 ;; Registers used:
 22286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 22287 ;; Tracked objects:
 22288 ;;		On entry : 0/1
 22289 ;;		On exit  : 0/0
 22290 ;;		Unchanged: 0/0
 22291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22296 ;;Total ram usage:        0 bytes
 22297 ;; Hardware stack levels used:    1
 22298 ;; Hardware stack levels required when called:   15
 22299 ;; This function calls:
 22300 ;;		Nothing
 22301 ;; This function is called by:
 22302 ;;		_main
 22303 ;;		_check_help
 22304 ;; This function uses a reentrant model
 22305 ;;
 22306                           
 22307                           	psect	text80
 22308  01B4D0                     __ptext80:
 22309                           	opt callstack 0
 22310  01B4D0                     _set_vterm:
 22311                           	opt callstack 15
 22312                           
 22313                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 22314                           ;stkvar	_vterm @ sp[(0)+-1]
 22315                           
 22316                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22317                           ;incstack = 0
 22318  01B4D0  0EFF               	movlw	-1
 22319  01B4D2  006F FF8C  F00C    	movff	plusw1,btemp+11
 22320  01B4D8  0E03               	movlw	3
 22321  01B4DA  160C               	andwf	(btemp+11)^0,f,c
 22322  01B4DC  EE22  F11F         	lfsr	2,_D+288
 22323  01B4E0  50DF               	movf	223,w,c
 22324  01B4E2  180C               	xorwf	(btemp+11)^0,w,c
 22325  01B4E4  0BFE               	andlw	-2
 22326  01B4E6  180C               	xorwf	(btemp+11)^0,w,c
 22327  01B4E8  6EDF               	movwf	223,c
 22328                           
 22329                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22330  01B4EA  52E5               	movf	postdec1,f,c
 22331  01B4EC  0012               	return		;funcret
 22332  01B4EE                     __end_of_set_vterm:
 22333                           	opt callstack 0
 22334                           
 22335 ;; *************** function _set_temp_display_help *****************
 22336 ;; Defined at:
 22337 ;;		line 211 in file "mconfig.c"
 22338 ;; Parameters:    Size  Location     Type
 22339 ;;  new_response    1  [STACK] const enum E16509
 22340 ;; Auto vars:     Size  Location     Type
 22341 ;;		None
 22342 ;; Return value:  Size  Location     Type
 22343 ;;                  1  [STACK] enum E16509
 22344 ;; Registers used:
 22345 ;;		wreg, fsr1l, fsr1h
 22346 ;; Tracked objects:
 22347 ;;		On entry : 0/2
 22348 ;;		On exit  : 3F/2
 22349 ;;		Unchanged: 0/0
 22350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22355 ;;Total ram usage:        0 bytes
 22356 ;; Hardware stack levels used:    1
 22357 ;; Hardware stack levels required when called:   15
 22358 ;; This function calls:
 22359 ;;		Nothing
 22360 ;; This function is called by:
 22361 ;;		_check_help
 22362 ;; This function uses a reentrant model
 22363 ;;
 22364                           
 22365                           	psect	text81
 22366  01B66E                     __ptext81:
 22367                           	opt callstack 0
 22368  01B66E                     _set_temp_display_help:
 22369                           	opt callstack 14
 22370                           
 22371                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 22372                           
 22373                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22374                           ;incstack = 0
 22375  01B66E  0102               	movlb	2	; () banked
 22376  01B670  51A5               	movf	(_V+165)& (0+255),w,b	;volatile
 22377                           
 22378                           ; BSR set to: 2
 22379                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 22380                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22381  01B672  0EFF               	movlw	-1
 22382  01B674  006F FF8C  F2A5    	movff	plusw1,_V+165	;volatile
 22383                           
 22384                           ; BSR set to: 2
 22385                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 22386  01B67A  52E5               	movf	postdec1,f,c
 22387  01B67C  0012               	return		;funcret
 22388  01B67E                     __end_of_set_temp_display_help:
 22389                           	opt callstack 0
 22390                           
 22391 ;; *************** function _set_display_info *****************
 22392 ;; Defined at:
 22393 ;;		line 200 in file "mconfig.c"
 22394 ;; Parameters:    Size  Location     Type
 22395 ;;  new_response    1  [STACK] const enum E16509
 22396 ;; Auto vars:     Size  Location     Type
 22397 ;;		None
 22398 ;; Return value:  Size  Location     Type
 22399 ;;                  1  [STACK] enum E16994
 22400 ;; Registers used:
 22401 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22402 ;; Tracked objects:
 22403 ;;		On entry : 0/0
 22404 ;;		On exit  : 0/0
 22405 ;;		Unchanged: 0/0
 22406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22411 ;;Total ram usage:        0 bytes
 22412 ;; Hardware stack levels used:    1
 22413 ;; Hardware stack levels required when called:   16
 22414 ;; This function calls:
 22415 ;;		_TimerDone
 22416 ;; This function is called by:
 22417 ;;		_main
 22418 ;;		_check_help
 22419 ;; This function uses a reentrant model
 22420 ;;
 22421                           
 22422                           	psect	text82
 22423  01B4EE                     __ptext82:
 22424                           	opt callstack 0
 22425  01B4EE                     _set_display_info:
 22426                           	opt callstack 14
 22427                           
 22428                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 22429                           
 22430                           ; BSR set to: 2
 22431                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22432                           ;incstack = 0
 22433  01B4EE  0E07               	movlw	7
 22434  01B4F0  6EE6               	movwf	postinc1,c
 22435  01B4F2  ECA1  F0D8         	call	_TimerDone	;wreg free
 22436  01B4F6  5001               	movf	btemp^0,w,c
 22437  01B4F8  B4D8               	btfsc	status,2,c
 22438  01B4FA  D006               	goto	l1710
 22439                           
 22440                           ;mconfig.c: 205:   old_info = V.response.info;
 22441  01B4FC  0102               	movlb	2	; () banked
 22442  01B4FE  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 22443                           
 22444                           ; BSR set to: 2
 22445                           ;mconfig.c: 206:   V.response.info = new_response_info;
 22446                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22447  01B500  0EFF               	movlw	-1
 22448  01B502  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 22449  01B508                     l1710:
 22450                           
 22451                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 22452  01B508  52E5               	movf	postdec1,f,c
 22453  01B50A  0012               	return		;funcret
 22454  01B50C                     __end_of_set_display_info:
 22455                           	opt callstack 0
 22456                           
 22457 ;; *************** function _mode_lamp_dim *****************
 22458 ;; Defined at:
 22459 ;;		line 13 in file "mconfig.c"
 22460 ;; Parameters:    Size  Location     Type
 22461 ;;  level           2  [STACK] const unsigned short 
 22462 ;; Auto vars:     Size  Location     Type
 22463 ;;		None
 22464 ;; Return value:  Size  Location     Type
 22465 ;;                  1  [STACK] void 
 22466 ;; Registers used:
 22467 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22468 ;; Tracked objects:
 22469 ;;		On entry : 0/2
 22470 ;;		On exit  : 0/0
 22471 ;;		Unchanged: 0/0
 22472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22477 ;;Total ram usage:        0 bytes
 22478 ;; Hardware stack levels used:    1
 22479 ;; Hardware stack levels required when called:   16
 22480 ;; This function calls:
 22481 ;;		_PWM8_LoadDutyValue
 22482 ;; This function is called by:
 22483 ;;		_main
 22484 ;;		_check_help
 22485 ;; This function uses a reentrant model
 22486 ;;
 22487                           
 22488                           	psect	text83
 22489  01B5B6                     __ptext83:
 22490                           	opt callstack 0
 22491  01B5B6                     _mode_lamp_dim:
 22492                           	opt callstack 14
 22493                           
 22494                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 22495                           ;stkvar	_level @ sp[(0)+-2]
 22496                           
 22497                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22498                           ;incstack = 0
 22499  01B5B6  0EFE               	movlw	-2
 22500  01B5B8  006F FF8F FFE6     	movff	plusw1,postinc1
 22501  01B5BE  006F FF8F FFE6     	movff	plusw1,postinc1
 22502  01B5C4  ECFF  F0D5         	call	_PWM8_LoadDutyValue	;wreg free
 22503                           
 22504                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 22505  01B5C8  52E5               	movf	postdec1,f,c
 22506  01B5CA  52E5               	movf	postdec1,f,c
 22507  01B5CC  0012               	return		;funcret
 22508  01B5CE                     __end_of_mode_lamp_dim:
 22509                           	opt callstack 0
 22510                           
 22511 ;; *************** function _mode_lamp_bright *****************
 22512 ;; Defined at:
 22513 ;;		line 18 in file "mconfig.c"
 22514 ;; Parameters:    Size  Location     Type
 22515 ;;		None
 22516 ;; Auto vars:     Size  Location     Type
 22517 ;;		None
 22518 ;; Return value:  Size  Location     Type
 22519 ;;                  1  [STACK] void 
 22520 ;; Registers used:
 22521 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22522 ;; Tracked objects:
 22523 ;;		On entry : 0/0
 22524 ;;		On exit  : 0/0
 22525 ;;		Unchanged: 0/0
 22526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22531 ;;Total ram usage:        0 bytes
 22532 ;; Hardware stack levels used:    1
 22533 ;; Hardware stack levels required when called:   16
 22534 ;; This function calls:
 22535 ;;		_PWM8_LoadDutyValue
 22536 ;; This function is called by:
 22537 ;;		_check_help
 22538 ;; This function uses a reentrant model
 22539 ;;
 22540                           
 22541                           	psect	text84
 22542  01B68C                     __ptext84:
 22543                           	opt callstack 0
 22544  01B68C                     _mode_lamp_bright:
 22545                           	opt callstack 13
 22546                           
 22547                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 22548                           
 22549                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22550                           ;incstack = 0
 22551  01B68C  0E2C               	movlw	44
 22552  01B68E  6EE6               	movwf	postinc1,c
 22553  01B690  0E01               	movlw	1
 22554  01B692  6EE6               	movwf	postinc1,c
 22555  01B694  ECFF  F0D5         	call	_PWM8_LoadDutyValue	;wreg free
 22556                           
 22557                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22558  01B698  0012               	return		;funcret
 22559  01B69A                     __end_of_mode_lamp_bright:
 22560                           	opt callstack 0
 22561                           
 22562 ;; *************** function _PWM8_LoadDutyValue *****************
 22563 ;; Defined at:
 22564 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 22565 ;; Parameters:    Size  Location     Type
 22566 ;;  dutyValue       2  [STACK] unsigned short 
 22567 ;; Auto vars:     Size  Location     Type
 22568 ;;		None
 22569 ;; Return value:  Size  Location     Type
 22570 ;;                  1  [STACK] void 
 22571 ;; Registers used:
 22572 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22573 ;; Tracked objects:
 22574 ;;		On entry : 0/2
 22575 ;;		On exit  : 0/0
 22576 ;;		Unchanged: 0/0
 22577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22582 ;;Total ram usage:        0 bytes
 22583 ;; Hardware stack levels used:    1
 22584 ;; Hardware stack levels required when called:   15
 22585 ;; This function calls:
 22586 ;;		Nothing
 22587 ;; This function is called by:
 22588 ;;		_mode_lamp_dim
 22589 ;;		_mode_lamp_bright
 22590 ;; This function uses a reentrant model
 22591 ;;
 22592                           
 22593                           	psect	text85
 22594  01ABFE                     __ptext85:
 22595                           	opt callstack 0
 22596  01ABFE                     _PWM8_LoadDutyValue:
 22597                           	opt callstack 14
 22598                           
 22599                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 22600                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22601                           
 22602                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22603                           ;incstack = 0
 22604  01ABFE  0EFE               	movlw	-2
 22605  01AC00  006F FF8C  F00B    	movff	plusw1,btemp+10
 22606  01AC06  0EFF               	movlw	-1
 22607  01AC08  006F FF8C  F00C    	movff	plusw1,btemp+11
 22608  01AC0E  90D8               	bcf	status,0,c
 22609  01AC10  320C               	rrcf	(btemp+11)^0,f,c
 22610  01AC12  320B               	rrcf	(btemp+10)^0,f,c
 22611  01AC14  90D8               	bcf	status,0,c
 22612  01AC16  320C               	rrcf	(btemp+11)^0,f,c
 22613  01AC18  320B               	rrcf	(btemp+10)^0,f,c
 22614  01AC1A  500B               	movf	(btemp+10)^0,w,c
 22615  01AC1C  6E61               	movwf	97,c	;volatile
 22616                           
 22617                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 22618                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22619  01AC1E  0EFE               	movlw	-2
 22620  01AC20  006F FF8C  F00C    	movff	plusw1,btemp+11
 22621  01AC26  0E03               	movlw	3
 22622  01AC28  160C               	andwf	(btemp+11)^0,f,c
 22623  01AC2A  0E06               	movlw	6
 22624  01AC2C  6E01               	movwf	btemp^0,c
 22625  01AC2E                     u8815:
 22626  01AC2E  90D8               	bcf	status,0,c
 22627  01AC30  360C               	rlcf	(btemp+11)^0,f,c
 22628  01AC32  2E01               	decfsz	btemp^0,f,c
 22629  01AC34  D7FC               	goto	u8815
 22630  01AC36  500C               	movf	(btemp+11)^0,w,c
 22631  01AC38  6E60               	movwf	96,c	;volatile
 22632                           
 22633                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 22634  01AC3A  52E5               	movf	postdec1,f,c
 22635  01AC3C  52E5               	movf	postdec1,f,c
 22636  01AC3E  0012               	return		;funcret
 22637  01AC40                     __end_of_PWM8_LoadDutyValue:
 22638                           	opt callstack 0
 22639                           
 22640 ;; *************** function _help_button *****************
 22641 ;; Defined at:
 22642 ;;		line 26 in file "mconfig.c"
 22643 ;; Parameters:    Size  Location     Type
 22644 ;;		None
 22645 ;; Auto vars:     Size  Location     Type
 22646 ;;		None
 22647 ;; Return value:  Size  Location     Type
 22648 ;;                  1  [STACK] _Bool 
 22649 ;; Registers used:
 22650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22651 ;; Tracked objects:
 22652 ;;		On entry : 0/2
 22653 ;;		On exit  : 0/0
 22654 ;;		Unchanged: 0/0
 22655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22660 ;;Total ram usage:        0 bytes
 22661 ;; Hardware stack levels used:    1
 22662 ;; Hardware stack levels required when called:   16
 22663 ;; This function calls:
 22664 ;;		_StartTimer
 22665 ;;		_TimerDone
 22666 ;; This function is called by:
 22667 ;;		_check_help
 22668 ;; This function uses a reentrant model
 22669 ;;
 22670                           
 22671                           	psect	text86
 22672  01ADB8                     __ptext86:
 22673                           	opt callstack 0
 22674  01ADB8                     _help_button:
 22675                           	opt callstack 13
 22676                           
 22677                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 22678                           
 22679                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22680                           ;incstack = 0
 22681  01ADB8  B0CB               	btfsc	203,0,c	;volatile
 22682  01ADBA  D00C               	goto	l1653
 22683                           
 22684                           ;mconfig.c: 29:   V.help = 1;
 22685  01ADBC  0102               	movlb	2	; () banked
 22686  01ADBE  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 22687                           
 22688                           ; BSR set to: 2
 22689                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 22690  01ADC0  0E08               	movlw	8
 22691  01ADC2  6EE6               	movwf	postinc1,c
 22692  01ADC4  ECA1  F0D8         	call	_TimerDone	;wreg free
 22693  01ADC8  5001               	movf	btemp^0,w,c
 22694  01ADCA  B4D8               	btfsc	status,2,c
 22695  01ADCC  D003               	goto	l1653
 22696                           
 22697                           ;mconfig.c: 31:    return 1;
 22698  01ADCE  0E01               	movlw	1
 22699  01ADD0  6E01               	movwf	btemp^0,c
 22700  01ADD2  0012               	return	
 22701  01ADD4                     l1653:
 22702                           
 22703                           ;mconfig.c: 34:  if (!V.help)
 22704  01ADD4  0102               	movlb	2	; () banked
 22705  01ADD6  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 22706  01ADD8  D008               	goto	l10144
 22707                           
 22708                           ; BSR set to: 2
 22709                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 22710  01ADDA  0E2C               	movlw	44
 22711  01ADDC  6EE6               	movwf	postinc1,c
 22712  01ADDE  0E01               	movlw	1
 22713  01ADE0  6EE6               	movwf	postinc1,c
 22714  01ADE2  0E08               	movlw	8
 22715  01ADE4  6EE6               	movwf	postinc1,c
 22716  01ADE6  EC20  F0D6         	call	_StartTimer	;wreg free
 22717  01ADEA                     l10144:
 22718                           
 22719                           ;mconfig.c: 37:  return 0;
 22720  01ADEA  0E00               	movlw	0
 22721  01ADEC  6E01               	movwf	btemp^0,c
 22722                           
 22723                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 22724  01ADEE  0012               	return		;funcret
 22725  01ADF0                     __end_of_help_button:
 22726                           	opt callstack 0
 22727                           
 22728 ;; *************** function _TimerDone *****************
 22729 ;; Defined at:
 22730 ;;		line 20 in file "timers.c"
 22731 ;; Parameters:    Size  Location     Type
 22732 ;;  timer           1  [STACK] const unsigned char 
 22733 ;; Auto vars:     Size  Location     Type
 22734 ;;		None
 22735 ;; Return value:  Size  Location     Type
 22736 ;;                  1  [STACK] _Bool 
 22737 ;; Registers used:
 22738 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22739 ;; Tracked objects:
 22740 ;;		On entry : 0/0
 22741 ;;		On exit  : 0/0
 22742 ;;		Unchanged: 0/0
 22743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22748 ;;Total ram usage:        0 bytes
 22749 ;; Hardware stack levels used:    1
 22750 ;; Hardware stack levels required when called:   15
 22751 ;; This function calls:
 22752 ;;		Nothing
 22753 ;; This function is called by:
 22754 ;;		_main
 22755 ;;		_WaitMs
 22756 ;;		_help_button
 22757 ;;		_check_help
 22758 ;;		_set_display_info
 22759 ;;		_update_adc_result
 22760 ;;		_esr_check
 22761 ;; This function uses a reentrant model
 22762 ;;
 22763                           
 22764                           	psect	text87
 22765  01B142                     __ptext87:
 22766                           	opt callstack 0
 22767  01B142                     _TimerDone:
 22768                           	opt callstack 14
 22769                           
 22770                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22771                           ;incstack = 0
 22772  01B142  0004               	clrwdt		;# 
 22773                           
 22774                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 22775                           ;stkvar	_timer @ sp[(0)+-1]
 22776  01B144  0EFF               	movlw	-1
 22777  01B146  50E3               	movf	plusw1,w,c
 22778  01B148  0D02               	mullw	2
 22779  01B14A  0EE6               	movlw	low _tickCount
 22780  01B14C  24F3               	addwf	243,w,c
 22781  01B14E  6ED9               	movwf	fsr2l,c
 22782  01B150  0E02               	movlw	high _tickCount
 22783  01B152  20F4               	addwfc	prodh,w,c
 22784  01B154  6EDA               	movwf	fsr2h,c
 22785  01B156  50DE               	movf	postinc2,w,c
 22786  01B158  10DE               	iorwf	postinc2,w,c
 22787  01B15A  A4D8               	btfss	status,2,c
 22788  01B15C  D002               	goto	l9378
 22789                           
 22790                           ;timers.c: 24:   return 1;
 22791  01B15E  0E01               	movlw	1
 22792  01B160  D001               	goto	L25
 22793  01B162                     l9378:
 22794                           
 22795                           ;timers.c: 26:  return 0;
 22796  01B162  0E00               	movlw	0
 22797  01B164                     L25:
 22798  01B164  6E01               	movwf	btemp^0,c
 22799                           
 22800                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22801  01B166  52E5               	movf	postdec1,f,c
 22802  01B168  0012               	return		;funcret
 22803  01B16A                     __end_of_TimerDone:
 22804                           	opt callstack 0
 22805                           
 22806 ;; *************** function _StartTimer *****************
 22807 ;; Defined at:
 22808 ;;		line 12 in file "timers.c"
 22809 ;; Parameters:    Size  Location     Type
 22810 ;;  timer           1  [STACK] const unsigned char 
 22811 ;;  count           2  [STACK] const unsigned short 
 22812 ;; Auto vars:     Size  Location     Type
 22813 ;;		None
 22814 ;; Return value:  Size  Location     Type
 22815 ;;                  1  [STACK] void 
 22816 ;; Registers used:
 22817 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22818 ;; Tracked objects:
 22819 ;;		On entry : 0/0
 22820 ;;		On exit  : 0/0
 22821 ;;		Unchanged: 0/0
 22822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22827 ;;Total ram usage:        0 bytes
 22828 ;; Hardware stack levels used:    1
 22829 ;; Hardware stack levels required when called:   15
 22830 ;; This function calls:
 22831 ;;		Nothing
 22832 ;; This function is called by:
 22833 ;;		_main
 22834 ;;		_WaitMs
 22835 ;;		_help_button
 22836 ;;		_check_help
 22837 ;;		_update_adc_result
 22838 ;;		_calc_bsoc
 22839 ;;		_esr_check
 22840 ;; This function uses a reentrant model
 22841 ;;
 22842                           
 22843                           	psect	text88
 22844  01AC40                     __ptext88:
 22845                           	opt callstack 0
 22846  01AC40                     _StartTimer:
 22847                           	opt callstack 0
 22848                           
 22849                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 22850                           ;stkvar	_count @ sp[(0)+-3]
 22851                           
 22852                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22853                           ;incstack = 0
 22854 ;; hardware stack exceeded
 22855  01AC40  0EFD               	movlw	-3
 22856  01AC42  006F FF8C  F00B    	movff	plusw1,btemp+10
 22857  01AC48  0EFE               	movlw	-2
 22858  01AC4A  006F FF8C  F00C    	movff	plusw1,btemp+11
 22859  01AC50  90D8               	bcf	status,0,c
 22860  01AC52  340B               	rlcf	(btemp+10)^0,w,c
 22861  01AC54  6E09               	movwf	(btemp+8)^0,c
 22862  01AC56  340C               	rlcf	(btemp+11)^0,w,c
 22863  01AC58  6E0A               	movwf	(btemp+9)^0,c
 22864                           
 22865                           ;stkvar	_timer @ sp[(0)+-1]
 22866  01AC5A  0EFF               	movlw	-1
 22867  01AC5C  50E3               	movf	plusw1,w,c
 22868  01AC5E  0D02               	mullw	2
 22869  01AC60  0EE6               	movlw	low _tickCount
 22870  01AC62  24F3               	addwf	243,w,c
 22871  01AC64  6ED9               	movwf	fsr2l,c
 22872  01AC66  0E02               	movlw	high _tickCount
 22873  01AC68  20F4               	addwfc	prodh,w,c
 22874  01AC6A  6EDA               	movwf	fsr2h,c
 22875  01AC6C  0060  F027  FFDE   	movff	btemp+8,postinc2
 22876  01AC72  0060  F02B  FFDD   	movff	btemp+9,postdec2
 22877                           
 22878                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 22879  01AC78  52E5               	movf	postdec1,f,c
 22880  01AC7A  52E5               	movf	postdec1,f,c
 22881  01AC7C  52E5               	movf	postdec1,f,c
 22882  01AC7E  0012               	return		;funcret
 22883  01AC80                     __end_of_StartTimer:
 22884                           	opt callstack 0
 22885                           
 22886 ;; *************** function _display_info *****************
 22887 ;; Defined at:
 22888 ;;		line 190 in file "mconfig.c"
 22889 ;; Parameters:    Size  Location     Type
 22890 ;;		None
 22891 ;; Auto vars:     Size  Location     Type
 22892 ;;		None
 22893 ;; Return value:  Size  Location     Type
 22894 ;;                  1  [STACK] enum E16509
 22895 ;; Registers used:
 22896 ;;		btemp
 22897 ;; Tracked objects:
 22898 ;;		On entry : 0/2
 22899 ;;		On exit  : 0/0
 22900 ;;		Unchanged: 0/0
 22901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22906 ;;Total ram usage:        0 bytes
 22907 ;; Hardware stack levels used:    1
 22908 ;; Hardware stack levels required when called:   15
 22909 ;; This function calls:
 22910 ;;		Nothing
 22911 ;; This function is called by:
 22912 ;;		_check_help
 22913 ;; This function uses a reentrant model
 22914 ;;
 22915                           
 22916                           	psect	text89
 22917  01B702                     __ptext89:
 22918                           	opt callstack 0
 22919  01B702                     _display_info:
 22920                           	opt callstack 14
 22921                           
 22922                           ;mconfig.c: 192:  return V.response.info;
 22923                           
 22924                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22925                           ;incstack = 0
 22926  01B702  0060  FA90  F001   	movff	_V+164,btemp	;volatile
 22927                           
 22928                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22929  01B708  0012               	return		;funcret
 22930  01B70A                     __end_of_display_info:
 22931                           	opt callstack 0
 22932                           
 22933 ;; *************** function _display_help *****************
 22934 ;; Defined at:
 22935 ;;		line 195 in file "mconfig.c"
 22936 ;; Parameters:    Size  Location     Type
 22937 ;;		None
 22938 ;; Auto vars:     Size  Location     Type
 22939 ;;		None
 22940 ;; Return value:  Size  Location     Type
 22941 ;;                  1  [STACK] enum E16509
 22942 ;; Registers used:
 22943 ;;		btemp
 22944 ;; Tracked objects:
 22945 ;;		On entry : 3F/2
 22946 ;;		On exit  : 0/0
 22947 ;;		Unchanged: 0/0
 22948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22953 ;;Total ram usage:        0 bytes
 22954 ;; Hardware stack levels used:    1
 22955 ;; Hardware stack levels required when called:   15
 22956 ;; This function calls:
 22957 ;;		Nothing
 22958 ;; This function is called by:
 22959 ;;		_check_help
 22960 ;; This function uses a reentrant model
 22961 ;;
 22962                           
 22963                           	psect	text90
 22964  01B70A                     __ptext90:
 22965                           	opt callstack 0
 22966  01B70A                     _display_help:
 22967                           	opt callstack 14
 22968                           
 22969                           ;mconfig.c: 197:  return V.response.help_temp;
 22970                           
 22971                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22972                           ;incstack = 0
 22973  01B70A  0060  FA94  F001   	movff	_V+165,btemp	;volatile
 22974                           
 22975                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22976  01B710  0012               	return		;funcret
 22977  01B712                     __end_of_display_help:
 22978                           	opt callstack 0
 22979                           
 22980 ;; *************** function _check_enter_button *****************
 22981 ;; Defined at:
 22982 ;;		line 42 in file "hid.c"
 22983 ;; Parameters:    Size  Location     Type
 22984 ;;  h               1  [STACK] PTR struct H_data
 22985 ;;		 -> H(7), 
 22986 ;; Auto vars:     Size  Location     Type
 22987 ;;		None
 22988 ;; Return value:  Size  Location     Type
 22989 ;;                  1  [STACK] _Bool 
 22990 ;; Registers used:
 22991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 22992 ;; Tracked objects:
 22993 ;;		On entry : 0/0
 22994 ;;		On exit  : 0/0
 22995 ;;		Unchanged: 0/0
 22996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23001 ;;Total ram usage:        0 bytes
 23002 ;; Hardware stack levels used:    1
 23003 ;; Hardware stack levels required when called:   15
 23004 ;; This function calls:
 23005 ;;		Nothing
 23006 ;; This function is called by:
 23007 ;;		_main
 23008 ;; This function uses a reentrant model
 23009 ;;
 23010                           
 23011                           	psect	text91
 23012  01AC80                     __ptext91:
 23013                           	opt callstack 0
 23014  01AC80                     _check_enter_button:
 23015                           	opt callstack 15
 23016                           
 23017                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 23018                           ;stkvar	_h @ sp[(0)+-1]
 23019                           
 23020                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23021                           ;incstack = 0
 23022  01AC80  0EFF               	movlw	-1
 23023  01AC82  50E3               	movf	plusw1,w,c
 23024  01AC84  6ED9               	movwf	fsr2l,c
 23025  01AC86  6ADA               	clrf	fsr2h,c
 23026  01AC88  0E04               	movlw	4
 23027  01AC8A  26D9               	addwf	fsr2l,f,c
 23028  01AC8C  50DF               	movf	indf2,w,c
 23029  01AC8E  A4D8               	btfss	status,2,c
 23030  01AC90  D013               	goto	l10754
 23031                           
 23032                           ;stkvar	_h @ sp[(0)+-1]
 23033  01AC92  0EFF               	movlw	-1
 23034  01AC94  50E3               	movf	plusw1,w,c
 23035  01AC96  6ED9               	movwf	fsr2l,c
 23036  01AC98  6ADA               	clrf	fsr2h,c
 23037  01AC9A  0E05               	movlw	5
 23038  01AC9C  26D9               	addwf	fsr2l,f,c
 23039  01AC9E  50DF               	movf	indf2,w,c
 23040  01ACA0  A4D8               	btfss	status,2,c
 23041  01ACA2  D00A               	goto	l10754
 23042                           
 23043                           ;hid.c: 45:   h->wait_enter = 1;
 23044                           ;stkvar	_h @ sp[(0)+-1]
 23045  01ACA4  0EFF               	movlw	-1
 23046  01ACA6  50E3               	movf	plusw1,w,c
 23047  01ACA8  6ED9               	movwf	fsr2l,c
 23048  01ACAA  6ADA               	clrf	fsr2h,c
 23049  01ACAC  0E04               	movlw	4
 23050  01ACAE  26D9               	addwf	fsr2l,f,c
 23051  01ACB0  0E01               	movlw	1
 23052  01ACB2  6EDF               	movwf	indf2,c
 23053                           
 23054                           ;hid.c: 46:   return 1;
 23055  01ACB4  0E01               	movlw	1
 23056  01ACB6  D001               	goto	L26
 23057  01ACB8                     l10754:
 23058                           
 23059                           ;hid.c: 48:  return 0;
 23060  01ACB8  0E00               	movlw	0
 23061  01ACBA                     L26:
 23062  01ACBA  6E01               	movwf	btemp^0,c
 23063                           
 23064                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 23065  01ACBC  52E5               	movf	postdec1,f,c
 23066  01ACBE  0012               	return		;funcret
 23067  01ACC0                     __end_of_check_enter_button:
 23068                           	opt callstack 0
 23069                           
 23070 ;; *************** function _calc_ror_data *****************
 23071 ;; Defined at:
 23072 ;;		line 101 in file "mbmc.c"
 23073 ;; Parameters:    Size  Location     Type
 23074 ;;		None
 23075 ;; Auto vars:     Size  Location     Type
 23076 ;;		None
 23077 ;; Return value:  Size  Location     Type
 23078 ;;                  1  [STACK] void 
 23079 ;; Registers used:
 23080 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23081 ;; Tracked objects:
 23082 ;;		On entry : 0/39
 23083 ;;		On exit  : 0/0
 23084 ;;		Unchanged: 0/0
 23085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23090 ;;Total ram usage:        0 bytes
 23091 ;; Hardware stack levels used:    1
 23092 ;; Hardware stack levels required when called:   18
 23093 ;; This function calls:
 23094 ;;		___flge
 23095 ;;		___flsub
 23096 ;;		_conv_raw_result
 23097 ;;		_fabsf
 23098 ;; This function is called by:
 23099 ;;		_main
 23100 ;; This function uses a reentrant model
 23101 ;;
 23102                           
 23103                           	psect	text92
 23104  0182AE                     __ptext92:
 23105                           	opt callstack 0
 23106  0182AE                     _calc_ror_data:
 23107                           	opt callstack 12
 23108                           
 23109                           ;mbmc.c: 103:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 105:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 23110                           
 23111                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23112                           ;incstack = 0
 23113  0182AE  0060  F21B  FFE6   	movff	calc_ror_data@bcror,postinc1
 23114  0182B4  0060  F21F  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 23115  0182BA  0060  F223  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 23116  0182C0  0060  F227  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 23117  0182C6  0E00               	movlw	0
 23118  0182C8  6EE6               	movwf	postinc1,c
 23119  0182CA  0E00               	movlw	0
 23120  0182CC  6EE6               	movwf	postinc1,c
 23121  0182CE  EC28  F0A7         	call	_conv_raw_result	;wreg free
 23122  0182D2  0060  F007  FFE6   	movff	btemp,postinc1
 23123  0182D8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23124  0182DE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23125  0182E4  0060  F013  FFE6   	movff	btemp+3,postinc1
 23126  0182EA  EC51  F0D5         	call	___flsub	;wreg free
 23127  0182EE  0060  F007  FFE6   	movff	btemp,postinc1
 23128  0182F4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23129  0182FA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23130  018300  0060  F013  FFE6   	movff	btemp+3,postinc1
 23131  018306  EC09  F0CE         	call	_fabsf	;wreg free
 23132  01830A  0060  F004  F16C   	movff	btemp,_C+108	;volatile
 23133  018310  0060  F008  F16D   	movff	btemp+1,_C+109	;volatile
 23134  018316  0060  F00C  F16E   	movff	btemp+2,_C+110	;volatile
 23135  01831C  0060  F010  F16F   	movff	btemp+3,_C+111	;volatile
 23136                           
 23137                           ;mbmc.c: 106:  bcror = conv_raw_result(C_BATT, CONV);
 23138  018322  0E00               	movlw	0
 23139  018324  6EE6               	movwf	postinc1,c
 23140  018326  0E00               	movlw	0
 23141  018328  6EE6               	movwf	postinc1,c
 23142  01832A  EC28  F0A7         	call	_conv_raw_result	;wreg free
 23143  01832E  0060  F004  F086   	movff	btemp,calc_ror_data@bcror
 23144  018334  0060  F008  F087   	movff	btemp+1,calc_ror_data@bcror+1
 23145  01833A  0060  F00C  F088   	movff	btemp+2,calc_ror_data@bcror+2
 23146  018340  0060  F010  F089   	movff	btemp+3,calc_ror_data@bcror+3
 23147                           
 23148                           ;mbmc.c: 107:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 23149  018346  0060  F22B  FFE6   	movff	calc_ror_data@bvror,postinc1
 23150  01834C  0060  F22F  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 23151  018352  0060  F233  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 23152  018358  0060  F237  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 23153  01835E  0E00               	movlw	0
 23154  018360  6EE6               	movwf	postinc1,c
 23155  018362  0E04               	movlw	4
 23156  018364  6EE6               	movwf	postinc1,c
 23157  018366  EC28  F0A7         	call	_conv_raw_result	;wreg free
 23158  01836A  0060  F007  FFE6   	movff	btemp,postinc1
 23159  018370  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23160  018376  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23161  01837C  0060  F013  FFE6   	movff	btemp+3,postinc1
 23162  018382  EC51  F0D5         	call	___flsub	;wreg free
 23163  018386  0060  F007  FFE6   	movff	btemp,postinc1
 23164  01838C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23165  018392  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23166  018398  0060  F013  FFE6   	movff	btemp+3,postinc1
 23167  01839E  EC09  F0CE         	call	_fabsf	;wreg free
 23168  0183A2  0060  F004  F168   	movff	btemp,_C+104	;volatile
 23169  0183A8  0060  F008  F169   	movff	btemp+1,_C+105	;volatile
 23170  0183AE  0060  F00C  F16A   	movff	btemp+2,_C+106	;volatile
 23171  0183B4  0060  F010  F16B   	movff	btemp+3,_C+107	;volatile
 23172                           
 23173                           ;mbmc.c: 108:  if (C.bv_ror < 0.0051)
 23174  0183BA  0EE7               	movlw	231
 23175  0183BC  6EE6               	movwf	postinc1,c
 23176  0183BE  0E1D               	movlw	29
 23177  0183C0  6EE6               	movwf	postinc1,c
 23178  0183C2  0EA7               	movlw	167
 23179  0183C4  6EE6               	movwf	postinc1,c
 23180  0183C6  0E3B               	movlw	59
 23181  0183C8  6EE6               	movwf	postinc1,c
 23182  0183CA  0060  F5A3  FFE6   	movff	_C+104,postinc1
 23183  0183D0  0060  F5A7  FFE6   	movff	_C+105,postinc1
 23184  0183D6  0060  F5AB  FFE6   	movff	_C+106,postinc1
 23185  0183DC  0060  F5AF  FFE6   	movff	_C+107,postinc1
 23186  0183E2  EC82  F0C3         	call	___flge	;wreg free
 23187  0183E6  B001               	btfsc	btemp& (0+255),0,c
 23188  0183E8  D009               	goto	l10542
 23189                           
 23190                           ;mbmc.c: 109:   C.bv_ror = 0.0140 + 0.0001;
 23191  0183EA  0EB0               	movlw	176
 23192  0183EC  0101               	movlb	1	; () banked
 23193  0183EE  6F68               	movwf	(_C+104)& (0+255),b	;volatile
 23194  0183F0  0E03               	movlw	3
 23195  0183F2  6F69               	movwf	(_C+105)& (0+255),b	;volatile
 23196  0183F4  0E67               	movlw	103
 23197  0183F6  6F6A               	movwf	(_C+106)& (0+255),b	;volatile
 23198  0183F8  0E3C               	movlw	60
 23199  0183FA  6F6B               	movwf	(_C+107)& (0+255),b	;volatile
 23200  0183FC                     l10542:
 23201                           
 23202                           ;mbmc.c: 110:  bvror = conv_raw_result(V_BAT, CONV);
 23203  0183FC  0E00               	movlw	0
 23204  0183FE  6EE6               	movwf	postinc1,c
 23205  018400  0E04               	movlw	4
 23206  018402  6EE6               	movwf	postinc1,c
 23207  018404  EC28  F0A7         	call	_conv_raw_result	;wreg free
 23208  018408  0060  F004  F08A   	movff	btemp,calc_ror_data@bvror
 23209  01840E  0060  F008  F08B   	movff	btemp+1,calc_ror_data@bvror+1
 23210  018414  0060  F00C  F08C   	movff	btemp+2,calc_ror_data@bvror+2
 23211  01841A  0060  F010  F08D   	movff	btemp+3,calc_ror_data@bvror+3
 23212                           
 23213                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 23214  018420  0012               	return		;funcret
 23215  018422                     __end_of_calc_ror_data:
 23216                           	opt callstack 0
 23217                           
 23218 ;; *************** function _fabsf *****************
 23219 ;; Defined at:
 23220 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 23221 ;; Parameters:    Size  Location     Type
 23222 ;;  x               4  [STACK] float 
 23223 ;; Auto vars:     Size  Location     Type
 23224 ;;  u               4  [STACK] struct .
 23225 ;; Return value:  Size  Location     Type
 23226 ;;                  4  [STACK] float 
 23227 ;; Registers used:
 23228 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 23229 ;; Tracked objects:
 23230 ;;		On entry : 0/0
 23231 ;;		On exit  : 0/0
 23232 ;;		Unchanged: 0/0
 23233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23238 ;;Total ram usage:        0 bytes
 23239 ;; Hardware stack levels used:    1
 23240 ;; Hardware stack levels required when called:   15
 23241 ;; This function calls:
 23242 ;;		Nothing
 23243 ;; This function is called by:
 23244 ;;		_calc_ror_data
 23245 ;;		_esr_check
 23246 ;; This function uses a reentrant model
 23247 ;;
 23248                           
 23249                           	psect	text93
 23250  019C12                     __ptext93:
 23251                           	opt callstack 0
 23252  019C12                     _fabsf:
 23253                           	opt callstack 0
 23254                           
 23255                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23256  019C12  52E6               	movf	postinc1,f,c
 23257  019C14  52E6               	movf	postinc1,f,c
 23258  019C16  52E6               	movf	postinc1,f,c
 23259  019C18  52E6               	movf	postinc1,f,c
 23260                           
 23261                           ;incstack = 0
 23262  019C1A  0060  F1F8  F009   	movff	fabsf@F463,btemp+8
 23263  019C20  0060  F1FC  F00A   	movff	fabsf@F463+1,btemp+9
 23264  019C26  0060  F200  F00B   	movff	fabsf@F463+2,btemp+10
 23265  019C2C  0060  F204  F00C   	movff	fabsf@F463+3,btemp+11
 23266                           
 23267                           ;stkvar	_u @ sp[(-4)+0]
 23268  019C32  0EFC               	movlw	-4
 23269  019C34  0060  F027  FFE3   	movff	btemp+8,plusw1
 23270  019C3A  0EFD               	movlw	-3
 23271  019C3C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23272  019C42  0EFE               	movlw	-2
 23273  019C44  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23274  019C4A  0EFF               	movlw	-1
 23275  019C4C  0060  F033  FFE3   	movff	btemp+11,plusw1
 23276                           
 23277                           ;stkvar	_x @ sp[(-4)+-4]
 23278  019C52  0EF8               	movlw	-8
 23279  019C54  006F FF8C  F009    	movff	plusw1,btemp+8
 23280  019C5A  0EF9               	movlw	-7
 23281  019C5C  006F FF8C  F00A    	movff	plusw1,btemp+9
 23282  019C62  0EFA               	movlw	-6
 23283  019C64  006F FF8C  F00B    	movff	plusw1,btemp+10
 23284  019C6A  0EFB               	movlw	-5
 23285  019C6C  006F FF8C  F00C    	movff	plusw1,btemp+11
 23286                           
 23287                           ;stkvar	_u @ sp[(-4)+0]
 23288  019C72  0EFC               	movlw	-4
 23289  019C74  0060  F027  FFE3   	movff	btemp+8,plusw1
 23290  019C7A  0EFD               	movlw	-3
 23291  019C7C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23292  019C82  0EFE               	movlw	-2
 23293  019C84  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23294  019C8A  0EFF               	movlw	-1
 23295  019C8C  0060  F033  FFE3   	movff	btemp+11,plusw1
 23296                           
 23297                           ;stkvar	_u @ sp[(-4)+0]
 23298  019C92  0EFF               	movlw	-1
 23299  019C94  9EE3               	bcf	plusw1,7,c
 23300                           
 23301                           ;stkvar	_u @ sp[(-4)+0]
 23302  019C96  0EFC               	movlw	-4
 23303  019C98  006F FF8C  F001    	movff	plusw1,btemp
 23304  019C9E  0EFD               	movlw	-3
 23305  019CA0  006F FF8C  F002    	movff	plusw1,btemp+1
 23306  019CA6  0EFE               	movlw	-2
 23307  019CA8  006F FF8C  F003    	movff	plusw1,btemp+2
 23308  019CAE  0EFF               	movlw	-1
 23309  019CB0  006F FF8C  F004    	movff	plusw1,btemp+3
 23310                           
 23311                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 23312  019CB6  0EF8               	movlw	248
 23313  019CB8  26E1               	addwf	fsr1l,f,c
 23314  019CBA  0EFF               	movlw	255
 23315  019CBC  22E2               	addwfc	fsr1h,f,c
 23316  019CBE  0012               	return		;funcret
 23317  019CC0                     __end_of_fabsf:
 23318                           	opt callstack 0
 23319                           
 23320 ;; *************** function _conv_raw_result *****************
 23321 ;; Defined at:
 23322 ;;		line 95 in file "daq.c"
 23323 ;; Parameters:    Size  Location     Type
 23324 ;;  chan            1  [STACK] const enum E16582
 23325 ;;  to_what         1  [STACK] const enum E16644
 23326 ;; Auto vars:     Size  Location     Type
 23327 ;;		None
 23328 ;; Return value:  Size  Location     Type
 23329 ;;                  4  [STACK] float 
 23330 ;; Registers used:
 23331 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23332 ;; Tracked objects:
 23333 ;;		On entry : 0/39
 23334 ;;		On exit  : 0/0
 23335 ;;		Unchanged: 0/0
 23336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23341 ;;Total ram usage:        0 bytes
 23342 ;; Hardware stack levels used:    1
 23343 ;; Hardware stack levels required when called:   17
 23344 ;; This function calls:
 23345 ;;		___fldiv
 23346 ;;		___flmul
 23347 ;;		___flsub
 23348 ;;		___xxtofl
 23349 ;;		_get_raw_result
 23350 ;;		_nanf
 23351 ;; This function is called by:
 23352 ;;		_main
 23353 ;;		_convert_adc_data
 23354 ;;		_calc_ror_data
 23355 ;;		_init_bsoc
 23356 ;;		_esr_check
 23357 ;; This function uses a reentrant model
 23358 ;;
 23359                           
 23360                           	psect	text94
 23361  014E50                     __ptext94:
 23362                           	opt callstack 0
 23363  014E50                     _conv_raw_result:
 23364                           	opt callstack 12
 23365                           
 23366                           ;daq.c: 95: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 96: {;daq.c: 98:  switch (to_what) {
 23367                           
 23368                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23369                           ;incstack = 0
 23370  014E50  D242               	goto	l10074
 23371  014E52                     l10020:
 23372                           
 23373                           ;daq.c: 100:   if (!(0b0011110001110111 >> chan & 0x1))
 23374                           ;stkvar	_chan @ sp[(0)+-1]
 23375  014E52  0EFF               	movlw	-1
 23376  014E54  006F FF8C  F00C    	movff	plusw1,btemp+11
 23377  014E5A  0E77               	movlw	119
 23378  014E5C  6E09               	movwf	(btemp+8)^0,c
 23379  014E5E  0E3C               	movlw	60
 23380  014E60  6E0A               	movwf	(btemp+9)^0,c
 23381  014E62  2A0C               	incf	(btemp+11)^0,f,c
 23382  014E64  D003               	goto	u9074
 23383  014E66                     u9075:
 23384  014E66  340A               	rlcf	(btemp+9)^0,w,c
 23385  014E68  320A               	rrcf	(btemp+9)^0,f,c
 23386  014E6A  3209               	rrcf	(btemp+8)^0,f,c
 23387  014E6C                     u9074:
 23388  014E6C  2E0C               	decfsz	(btemp+11)^0,f,c
 23389  014E6E  D7FB               	goto	u9075
 23390  014E70  B009               	btfsc	(btemp+8)^0,0,c
 23391  014E72  D007               	goto	l10026
 23392                           
 23393                           ;daq.c: 101:    return nanf("");
 23394  014E74  0EBB               	movlw	low (STR_65+84)
 23395  014E76  6EE6               	movwf	postinc1,c
 23396  014E78  0EFC               	movlw	high (STR_65+84)
 23397  014E7A  6EE6               	movwf	postinc1,c
 23398  014E7C  EC5B  F0D3         	call	_nanf	;wreg free
 23399  014E80  D23A               	goto	l1772
 23400  014E82                     l10026:
 23401                           
 23402                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1) {
 23403                           ;stkvar	_chan @ sp[(0)+-1]
 23404  014E82  0EFF               	movlw	-1
 23405  014E84  006F FF8C  F00C    	movff	plusw1,btemp+11
 23406  014E8A  0E03               	movlw	3
 23407  014E8C  6E09               	movwf	(btemp+8)^0,c
 23408  014E8E  0E00               	movlw	0
 23409  014E90  6E0A               	movwf	(btemp+9)^0,c
 23410  014E92  2A0C               	incf	(btemp+11)^0,f,c
 23411  014E94  D003               	goto	u9094
 23412  014E96                     u9095:
 23413  014E96  340A               	rlcf	(btemp+9)^0,w,c
 23414  014E98  320A               	rrcf	(btemp+9)^0,f,c
 23415  014E9A  3209               	rrcf	(btemp+8)^0,f,c
 23416  014E9C                     u9094:
 23417  014E9C  2E0C               	decfsz	(btemp+11)^0,f,c
 23418  014E9E  D7FB               	goto	u9095
 23419  014EA0  A009               	btfss	(btemp+8)^0,0,c
 23420  014EA2  D0EB               	goto	l10040
 23421                           
 23422                           ;daq.c: 104:    if (0b0000000000000001 >> chan & 0x1) {
 23423                           ;stkvar	_chan @ sp[(0)+-1]
 23424  014EA4  0EFF               	movlw	-1
 23425  014EA6  006F FF8C  F00C    	movff	plusw1,btemp+11
 23426  014EAC  0E01               	movlw	1
 23427  014EAE  6E09               	movwf	(btemp+8)^0,c
 23428  014EB0  0E00               	movlw	0
 23429  014EB2  6E0A               	movwf	(btemp+9)^0,c
 23430  014EB4  2A0C               	incf	(btemp+11)^0,f,c
 23431  014EB6  D003               	goto	u9114
 23432  014EB8                     u9115:
 23433  014EB8  340A               	rlcf	(btemp+9)^0,w,c
 23434  014EBA  320A               	rrcf	(btemp+9)^0,f,c
 23435  014EBC  3209               	rrcf	(btemp+8)^0,f,c
 23436  014EBE                     u9114:
 23437  014EBE  2E0C               	decfsz	(btemp+11)^0,f,c
 23438  014EC0  D7FB               	goto	u9115
 23439  014EC2  A009               	btfss	(btemp+8)^0,0,c
 23440  014EC4  D06D               	goto	l10036
 23441                           
 23442                           ;daq.c: 105:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.0850
      +                          000;
 23443  014EC6  0E7B               	movlw	123
 23444  014EC8  6EE6               	movwf	postinc1,c
 23445  014ECA  0E14               	movlw	20
 23446  014ECC  6EE6               	movwf	postinc1,c
 23447  014ECE  0EAE               	movlw	174
 23448  014ED0  6EE6               	movwf	postinc1,c
 23449  014ED2  0E3D               	movlw	61
 23450  014ED4  6EE6               	movwf	postinc1,c
 23451  014ED6  0060  F390  F009   	movff	_R+32,btemp+8	;volatile
 23452  014EDC  0060  F394  F00A   	movff	_R+33,btemp+9	;volatile
 23453  014EE2  0E00               	movlw	0
 23454  014EE4  BE0A               	btfsc	(btemp+9)^0,7,c
 23455  014EE6  0EFF               	movlw	255
 23456  014EE8  6E0B               	movwf	(btemp+10)^0,c
 23457  014EEA  6E0C               	movwf	(btemp+11)^0,c
 23458  014EEC  0060  F027  FFE6   	movff	btemp+8,postinc1
 23459  014EF2  0060  F02B  FFE6   	movff	btemp+9,postinc1
 23460  014EF8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 23461  014EFE  0060  F033  FFE6   	movff	btemp+11,postinc1
 23462  014F04  0E01               	movlw	1
 23463  014F06  6EE6               	movwf	postinc1,c
 23464  014F08  ECEC  F0BC         	call	___xxtofl	;wreg free
 23465  014F0C  0060  F007  FFE6   	movff	btemp,postinc1
 23466  014F12  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23467  014F18  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23468  014F1E  0060  F013  FFE6   	movff	btemp+3,postinc1
 23469                           
 23470                           ;stkvar	_chan @ sp[(-8)+-1]
 23471  014F24  0EF7               	movlw	-9
 23472  014F26  50E3               	movf	plusw1,w,c
 23473  014F28  6EE6               	movwf	postinc1,c
 23474  014F2A  EC86  F0DA         	call	_get_raw_result	;wreg free
 23475  014F2E  0060  F004  F00B   	movff	btemp,btemp+10
 23476  014F34  0060  F008  F00C   	movff	btemp+1,btemp+11
 23477  014F3A  500B               	movf	(btemp+10)^0,w,c
 23478  014F3C  6E05               	movwf	(btemp+4)^0,c
 23479  014F3E  500C               	movf	(btemp+11)^0,w,c
 23480  014F40  6E06               	movwf	(btemp+5)^0,c
 23481  014F42  6A07               	clrf	(btemp+6)^0,c
 23482  014F44  6A08               	clrf	(btemp+7)^0,c
 23483  014F46  0060  F017  FFE6   	movff	btemp+4,postinc1
 23484  014F4C  0060  F01B  FFE6   	movff	btemp+5,postinc1
 23485  014F52  0060  F01F  FFE6   	movff	btemp+6,postinc1
 23486  014F58  0060  F023  FFE6   	movff	btemp+7,postinc1
 23487  014F5E  0E00               	movlw	0
 23488  014F60  6EE6               	movwf	postinc1,c
 23489  014F62  ECEC  F0BC         	call	___xxtofl	;wreg free
 23490  014F66  0060  F007  FFE6   	movff	btemp,postinc1
 23491  014F6C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23492  014F72  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23493  014F78  0060  F013  FFE6   	movff	btemp+3,postinc1
 23494  014F7E  EC51  F0D5         	call	___flsub	;wreg free
 23495  014F82  0060  F007  FFE6   	movff	btemp,postinc1
 23496  014F88  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23497  014F8E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23498  014F94  0060  F013  FFE6   	movff	btemp+3,postinc1
 23499  014F9A  ECED  F098         	call	___flmul	;wreg free
 23500  014F9E  D1AB               	goto	l1772
 23501  014FA0                     l10036:
 23502                           
 23503                           ;daq.c: 107:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.0350
      +                          000;
 23504  014FA0  0E29               	movlw	41
 23505  014FA2  6EE6               	movwf	postinc1,c
 23506  014FA4  0E5C               	movlw	92
 23507  014FA6  6EE6               	movwf	postinc1,c
 23508  014FA8  0E0F               	movlw	15
 23509  014FAA  6EE6               	movwf	postinc1,c
 23510  014FAC  0E3D               	movlw	61
 23511  014FAE  6EE6               	movwf	postinc1,c
 23512  014FB0  0060  F398  F009   	movff	_R+34,btemp+8	;volatile
 23513  014FB6  0060  F39C  F00A   	movff	_R+35,btemp+9	;volatile
 23514  014FBC  0E00               	movlw	0
 23515  014FBE  BE0A               	btfsc	(btemp+9)^0,7,c
 23516  014FC0  0EFF               	movlw	255
 23517  014FC2  6E0B               	movwf	(btemp+10)^0,c
 23518  014FC4  6E0C               	movwf	(btemp+11)^0,c
 23519  014FC6  0060  F027  FFE6   	movff	btemp+8,postinc1
 23520  014FCC  0060  F02B  FFE6   	movff	btemp+9,postinc1
 23521  014FD2  0060  F02F  FFE6   	movff	btemp+10,postinc1
 23522  014FD8  0060  F033  FFE6   	movff	btemp+11,postinc1
 23523  014FDE  0E01               	movlw	1
 23524  014FE0  6EE6               	movwf	postinc1,c
 23525  014FE2  ECEC  F0BC         	call	___xxtofl	;wreg free
 23526  014FE6  0060  F007  FFE6   	movff	btemp,postinc1
 23527  014FEC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23528  014FF2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23529  014FF8  0060  F013  FFE6   	movff	btemp+3,postinc1
 23530                           
 23531                           ;stkvar	_chan @ sp[(-8)+-1]
 23532  014FFE  0EF7               	movlw	-9
 23533  015000  50E3               	movf	plusw1,w,c
 23534  015002  6EE6               	movwf	postinc1,c
 23535  015004  EC86  F0DA         	call	_get_raw_result	;wreg free
 23536  015008  0060  F004  F00B   	movff	btemp,btemp+10
 23537  01500E  0060  F008  F00C   	movff	btemp+1,btemp+11
 23538  015014  500B               	movf	(btemp+10)^0,w,c
 23539  015016  6E05               	movwf	(btemp+4)^0,c
 23540  015018  500C               	movf	(btemp+11)^0,w,c
 23541  01501A  6E06               	movwf	(btemp+5)^0,c
 23542  01501C  6A07               	clrf	(btemp+6)^0,c
 23543  01501E  6A08               	clrf	(btemp+7)^0,c
 23544  015020  0060  F017  FFE6   	movff	btemp+4,postinc1
 23545  015026  0060  F01B  FFE6   	movff	btemp+5,postinc1
 23546  01502C  0060  F01F  FFE6   	movff	btemp+6,postinc1
 23547  015032  0060  F023  FFE6   	movff	btemp+7,postinc1
 23548  015038  0E00               	movlw	0
 23549  01503A  6EE6               	movwf	postinc1,c
 23550  01503C  ECEC  F0BC         	call	___xxtofl	;wreg free
 23551  015040  0060  F007  FFE6   	movff	btemp,postinc1
 23552  015046  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23553  01504C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23554  015052  0060  F013  FFE6   	movff	btemp+3,postinc1
 23555  015058  EC51  F0D5         	call	___flsub	;wreg free
 23556  01505C  0060  F007  FFE6   	movff	btemp,postinc1
 23557  015062  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23558  015068  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23559  01506E  0060  F013  FFE6   	movff	btemp+3,postinc1
 23560  015074  ECED  F098         	call	___flmul	;wreg free
 23561  015078  D13E               	goto	l1772
 23562  01507A                     l10040:
 23563                           
 23564                           ;daq.c: 110:    if (0b0000100000000000 >> chan & 0x1) {
 23565                           ;stkvar	_chan @ sp[(0)+-1]
 23566  01507A  0EFF               	movlw	-1
 23567  01507C  006F FF8C  F00C    	movff	plusw1,btemp+11
 23568  015082  0E00               	movlw	0
 23569  015084  6E09               	movwf	(btemp+8)^0,c
 23570  015086  0E08               	movlw	8
 23571  015088  6E0A               	movwf	(btemp+9)^0,c
 23572  01508A  2A0C               	incf	(btemp+11)^0,f,c
 23573  01508C  D003               	goto	u9134
 23574  01508E                     u9135:
 23575  01508E  340A               	rlcf	(btemp+9)^0,w,c
 23576  015090  320A               	rrcf	(btemp+9)^0,f,c
 23577  015092  3209               	rrcf	(btemp+8)^0,f,c
 23578  015094                     u9134:
 23579  015094  2E0C               	decfsz	(btemp+11)^0,f,c
 23580  015096  D7FB               	goto	u9135
 23581  015098  A009               	btfss	(btemp+8)^0,0,c
 23582  01509A  D008               	goto	l10048
 23583                           
 23584                           ;daq.c: 111:     return 25.0;
 23585  01509C  0E00               	movlw	0
 23586  01509E  6E01               	movwf	btemp^0,c
 23587  0150A0  0E00               	movlw	0
 23588  0150A2  6E02               	movwf	(btemp+1)^0,c
 23589  0150A4  0EC8               	movlw	200
 23590  0150A6  6E03               	movwf	(btemp+2)^0,c
 23591  0150A8  0E41               	movlw	65
 23592  0150AA  D113               	goto	L27
 23593  0150AC                     l10048:
 23594                           
 23595                           ;daq.c: 113:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 23596  0150AC  0E00               	movlw	0
 23597  0150AE  6EE6               	movwf	postinc1,c
 23598  0150B0  0E00               	movlw	0
 23599  0150B2  6EE6               	movwf	postinc1,c
 23600  0150B4  0E7A               	movlw	122
 23601  0150B6  6EE6               	movwf	postinc1,c
 23602  0150B8  0E44               	movlw	68
 23603  0150BA  6EE6               	movwf	postinc1,c
 23604  0150BC  0E61               	movlw	97
 23605  0150BE  6EE6               	movwf	postinc1,c
 23606  0150C0  0E03               	movlw	3
 23607  0150C2  6EE6               	movwf	postinc1,c
 23608  0150C4  0E84               	movlw	132
 23609  0150C6  6EE6               	movwf	postinc1,c
 23610  0150C8  0E40               	movlw	64
 23611  0150CA  6EE6               	movwf	postinc1,c
 23612                           
 23613                           ;stkvar	_chan @ sp[(-8)+-1]
 23614  0150CC  0EF7               	movlw	-9
 23615  0150CE  50E3               	movf	plusw1,w,c
 23616  0150D0  6EE6               	movwf	postinc1,c
 23617  0150D2  EC86  F0DA         	call	_get_raw_result	;wreg free
 23618  0150D6  0060  F004  F00B   	movff	btemp,btemp+10
 23619  0150DC  0060  F008  F00C   	movff	btemp+1,btemp+11
 23620  0150E2  500B               	movf	(btemp+10)^0,w,c
 23621  0150E4  6E05               	movwf	(btemp+4)^0,c
 23622  0150E6  500C               	movf	(btemp+11)^0,w,c
 23623  0150E8  6E06               	movwf	(btemp+5)^0,c
 23624  0150EA  6A07               	clrf	(btemp+6)^0,c
 23625  0150EC  6A08               	clrf	(btemp+7)^0,c
 23626  0150EE  0060  F017  FFE6   	movff	btemp+4,postinc1
 23627  0150F4  0060  F01B  FFE6   	movff	btemp+5,postinc1
 23628  0150FA  0060  F01F  FFE6   	movff	btemp+6,postinc1
 23629  015100  0060  F023  FFE6   	movff	btemp+7,postinc1
 23630  015106  0E00               	movlw	0
 23631  015108  6EE6               	movwf	postinc1,c
 23632  01510A  ECEC  F0BC         	call	___xxtofl	;wreg free
 23633  01510E  0060  F007  FFE6   	movff	btemp,postinc1
 23634  015114  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23635  01511A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23636  015120  0060  F013  FFE6   	movff	btemp+3,postinc1
 23637  015126  ECED  F098         	call	___flmul	;wreg free
 23638  01512A  0060  F007  FFE6   	movff	btemp,postinc1
 23639  015130  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23640  015136  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23641  01513C  0060  F013  FFE6   	movff	btemp+3,postinc1
 23642  015142  EC6B  F0A4         	call	___fldiv	;wreg free
 23643  015146  D0D7               	goto	l1772
 23644  015148                     l10052:
 23645                           
 23646                           ;daq.c: 118:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 23647                           ;stkvar	_chan @ sp[(0)+-1]
 23648  015148  0EFF               	movlw	-1
 23649  01514A  006F FF8C  F00C    	movff	plusw1,btemp+11
 23650  015150  0E03               	movlw	3
 23651  015152  6E09               	movwf	(btemp+8)^0,c
 23652  015154  0E00               	movlw	0
 23653  015156  6E0A               	movwf	(btemp+9)^0,c
 23654  015158  2A0C               	incf	(btemp+11)^0,f,c
 23655  01515A  D003               	goto	u9154
 23656  01515C                     u9155:
 23657  01515C  340A               	rlcf	(btemp+9)^0,w,c
 23658  01515E  320A               	rrcf	(btemp+9)^0,f,c
 23659  015160  3209               	rrcf	(btemp+8)^0,f,c
 23660  015162                     u9154:
 23661  015162  2E0C               	decfsz	(btemp+11)^0,f,c
 23662  015164  D7FB               	goto	u9155
 23663  015166  B009               	btfsc	(btemp+8)^0,0,c
 23664  015168  D011               	goto	u9180
 23665                           
 23666                           ;stkvar	_chan @ sp[(0)+-1]
 23667  01516A  0EFF               	movlw	-1
 23668  01516C  006F FF8C  F00C    	movff	plusw1,btemp+11
 23669  015172  0E00               	movlw	0
 23670  015174  6E09               	movwf	(btemp+8)^0,c
 23671  015176  0E08               	movlw	8
 23672  015178  6E0A               	movwf	(btemp+9)^0,c
 23673  01517A  2A0C               	incf	(btemp+11)^0,f,c
 23674  01517C  D003               	goto	u9174
 23675  01517E                     u9175:
 23676  01517E  340A               	rlcf	(btemp+9)^0,w,c
 23677  015180  320A               	rrcf	(btemp+9)^0,f,c
 23678  015182  3209               	rrcf	(btemp+8)^0,f,c
 23679  015184                     u9174:
 23680  015184  2E0C               	decfsz	(btemp+11)^0,f,c
 23681  015186  D7FB               	goto	u9175
 23682  015188  A009               	btfss	(btemp+8)^0,0,c
 23683  01518A  D04E               	goto	l10060
 23684  01518C                     u9180:
 23685                           
 23686                           ;daq.c: 119:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 23687  01518C  0E00               	movlw	0
 23688  01518E  6EE6               	movwf	postinc1,c
 23689  015190  0E00               	movlw	0
 23690  015192  6EE6               	movwf	postinc1,c
 23691  015194  0E7A               	movlw	122
 23692  015196  6EE6               	movwf	postinc1,c
 23693  015198  0E44               	movlw	68
 23694  01519A  6EE6               	movwf	postinc1,c
 23695  01519C  0E00               	movlw	0
 23696  01519E  6EE6               	movwf	postinc1,c
 23697  0151A0  0E00               	movlw	0
 23698  0151A2  6EE6               	movwf	postinc1,c
 23699  0151A4  0E20               	movlw	32
 23700  0151A6  6EE6               	movwf	postinc1,c
 23701  0151A8  0E3F               	movlw	63
 23702  0151AA  6EE6               	movwf	postinc1,c
 23703                           
 23704                           ;stkvar	_chan @ sp[(-8)+-1]
 23705  0151AC  0EF7               	movlw	-9
 23706  0151AE  50E3               	movf	plusw1,w,c
 23707  0151B0  6EE6               	movwf	postinc1,c
 23708  0151B2  EC86  F0DA         	call	_get_raw_result	;wreg free
 23709  0151B6  0060  F004  F00B   	movff	btemp,btemp+10
 23710  0151BC  0060  F008  F00C   	movff	btemp+1,btemp+11
 23711  0151C2  500B               	movf	(btemp+10)^0,w,c
 23712  0151C4  6E05               	movwf	(btemp+4)^0,c
 23713  0151C6  500C               	movf	(btemp+11)^0,w,c
 23714  0151C8  6E06               	movwf	(btemp+5)^0,c
 23715  0151CA  6A07               	clrf	(btemp+6)^0,c
 23716  0151CC  6A08               	clrf	(btemp+7)^0,c
 23717  0151CE  0060  F017  FFE6   	movff	btemp+4,postinc1
 23718  0151D4  0060  F01B  FFE6   	movff	btemp+5,postinc1
 23719  0151DA  0060  F01F  FFE6   	movff	btemp+6,postinc1
 23720  0151E0  0060  F023  FFE6   	movff	btemp+7,postinc1
 23721  0151E6  0E00               	movlw	0
 23722  0151E8  6EE6               	movwf	postinc1,c
 23723  0151EA  ECEC  F0BC         	call	___xxtofl	;wreg free
 23724  0151EE  0060  F007  FFE6   	movff	btemp,postinc1
 23725  0151F4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23726  0151FA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23727  015200  0060  F013  FFE6   	movff	btemp+3,postinc1
 23728  015206  ECED  F098         	call	___flmul	;wreg free
 23729  01520A  0060  F007  FFE6   	movff	btemp,postinc1
 23730  015210  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23731  015216  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23732  01521C  0060  F013  FFE6   	movff	btemp+3,postinc1
 23733  015222  EC6B  F0A4         	call	___fldiv	;wreg free
 23734  015226  D067               	goto	l1772
 23735  015228                     l10060:
 23736                           
 23737                           ;daq.c: 121:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 23738  015228  0E00               	movlw	0
 23739  01522A  6EE6               	movwf	postinc1,c
 23740  01522C  0E00               	movlw	0
 23741  01522E  6EE6               	movwf	postinc1,c
 23742  015230  0E7A               	movlw	122
 23743  015232  6EE6               	movwf	postinc1,c
 23744  015234  0E44               	movlw	68
 23745  015236  6EE6               	movwf	postinc1,c
 23746  015238  0E61               	movlw	97
 23747  01523A  6EE6               	movwf	postinc1,c
 23748  01523C  0E03               	movlw	3
 23749  01523E  6EE6               	movwf	postinc1,c
 23750  015240  0E84               	movlw	132
 23751  015242  6EE6               	movwf	postinc1,c
 23752  015244  0E40               	movlw	64
 23753  015246  6EE6               	movwf	postinc1,c
 23754                           
 23755                           ;stkvar	_chan @ sp[(-8)+-1]
 23756  015248  0EF7               	movlw	-9
 23757  01524A  50E3               	movf	plusw1,w,c
 23758  01524C  6EE6               	movwf	postinc1,c
 23759  01524E  EC86  F0DA         	call	_get_raw_result	;wreg free
 23760  015252  0060  F004  F00B   	movff	btemp,btemp+10
 23761  015258  0060  F008  F00C   	movff	btemp+1,btemp+11
 23762  01525E  500B               	movf	(btemp+10)^0,w,c
 23763  015260  6E05               	movwf	(btemp+4)^0,c
 23764  015262  500C               	movf	(btemp+11)^0,w,c
 23765  015264  6E06               	movwf	(btemp+5)^0,c
 23766  015266  6A07               	clrf	(btemp+6)^0,c
 23767  015268  6A08               	clrf	(btemp+7)^0,c
 23768  01526A  0060  F017  FFE6   	movff	btemp+4,postinc1
 23769  015270  0060  F01B  FFE6   	movff	btemp+5,postinc1
 23770  015276  0060  F01F  FFE6   	movff	btemp+6,postinc1
 23771  01527C  0060  F023  FFE6   	movff	btemp+7,postinc1
 23772  015282  0E00               	movlw	0
 23773  015284  6EE6               	movwf	postinc1,c
 23774  015286  ECEC  F0BC         	call	___xxtofl	;wreg free
 23775  01528A  0060  F007  FFE6   	movff	btemp,postinc1
 23776  015290  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23777  015296  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23778  01529C  0060  F013  FFE6   	movff	btemp+3,postinc1
 23779  0152A2  ECED  F098         	call	___flmul	;wreg free
 23780  0152A6  0060  F007  FFE6   	movff	btemp,postinc1
 23781  0152AC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23782  0152B2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23783  0152B8  0060  F013  FFE6   	movff	btemp+3,postinc1
 23784  0152BE  EC6B  F0A4         	call	___fldiv	;wreg free
 23785  0152C2  D019               	goto	l1772
 23786  0152C4                     l10066:
 23787                           
 23788                           ;daq.c: 124:   return 0.0;
 23789  0152C4  0E00               	movlw	0
 23790  0152C6  6E01               	movwf	btemp^0,c
 23791  0152C8  0E00               	movlw	0
 23792  0152CA  6E02               	movwf	(btemp+1)^0,c
 23793  0152CC  0E00               	movlw	0
 23794  0152CE  6E03               	movwf	(btemp+2)^0,c
 23795  0152D0  0E00               	movlw	0
 23796  0152D2                     L27:
 23797  0152D2  6E04               	movwf	(btemp+3)^0,c
 23798  0152D4  D010               	goto	l1772
 23799  0152D6                     l10074:
 23800                           
 23801                           ;stkvar	_to_what @ sp[(0)+-2]
 23802  0152D6  0EFE               	movlw	-2
 23803  0152D8  50E3               	movf	plusw1,w,c
 23804  0152DA  6E0B               	movwf	(btemp+10)^0,c
 23805  0152DC  6A0C               	clrf	(btemp+11)^0,c
 23806                           
 23807                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23808                           ; Switch size 1, requested type "simple"
 23809                           ; Number of cases is 1, Range of values is 0 to 0
 23810                           ; switch strategies available:
 23811                           ; Name         Instructions Cycles
 23812                           ; simple_byte            4     3 (average)
 23813                           ;	Chosen strategy is simple_byte
 23814  0152DE  500C               	movf	(btemp+11)^0,w,c
 23815  0152E0  0A00               	xorlw	0	; case 0
 23816  0152E2  A4D8               	btfss	status,2,c
 23817  0152E4  D7EF               	goto	l10066
 23818                           
 23819                           ; Switch size 1, requested type "simple"
 23820                           ; Number of cases is 2, Range of values is 0 to 1
 23821                           ; switch strategies available:
 23822                           ; Name         Instructions Cycles
 23823                           ; simple_byte            7     4 (average)
 23824                           ;	Chosen strategy is simple_byte
 23825  0152E6  500B               	movf	(btemp+10)^0,w,c
 23826  0152E8  0A00               	xorlw	0	; case 0
 23827  0152EA  B4D8               	btfsc	status,2,c
 23828  0152EC  D5B2               	goto	l10020
 23829  0152EE  0A01               	xorlw	1	; case 1
 23830  0152F0  B4D8               	btfsc	status,2,c
 23831  0152F2  D72A               	goto	l10052
 23832  0152F4  D7E7               	goto	l10066
 23833  0152F6                     l1772:
 23834                           
 23835                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 23836  0152F6  52E5               	movf	postdec1,f,c
 23837  0152F8  52E5               	movf	postdec1,f,c
 23838  0152FA  0012               	return		;funcret
 23839  0152FC                     __end_of_conv_raw_result:
 23840                           	opt callstack 0
 23841                           
 23842 ;; *************** function _nanf *****************
 23843 ;; Defined at:
 23844 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 23845 ;; Parameters:    Size  Location     Type
 23846 ;;  s               2  [STACK] PTR const unsigned char 
 23847 ;;		 -> STR_102(1), STR_64(1), 
 23848 ;; Auto vars:     Size  Location     Type
 23849 ;;  u               4  [STACK] struct .
 23850 ;; Return value:  Size  Location     Type
 23851 ;;                  4  [STACK] float 
 23852 ;; Registers used:
 23853 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 23854 ;; Tracked objects:
 23855 ;;		On entry : 0/39
 23856 ;;		On exit  : 0/0
 23857 ;;		Unchanged: 0/0
 23858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23863 ;;Total ram usage:        0 bytes
 23864 ;; Hardware stack levels used:    1
 23865 ;; Hardware stack levels required when called:   15
 23866 ;; This function calls:
 23867 ;;		Nothing
 23868 ;; This function is called by:
 23869 ;;		_conv_raw_result
 23870 ;; This function uses a reentrant model
 23871 ;;
 23872                           
 23873                           	psect	text95
 23874  01A6B6                     __ptext95:
 23875                           	opt callstack 0
 23876  01A6B6                     _nanf:
 23877                           	opt callstack 0
 23878                           
 23879                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23880  01A6B6  52E6               	movf	postinc1,f,c
 23881  01A6B8  52E6               	movf	postinc1,f,c
 23882  01A6BA  52E6               	movf	postinc1,f,c
 23883  01A6BC  52E6               	movf	postinc1,f,c
 23884                           
 23885                           ;incstack = 0
 23886  01A6BE  0EFF               	movlw	255
 23887  01A6C0  6E09               	movwf	(btemp+8)^0,c
 23888  01A6C2  0EFF               	movlw	255
 23889  01A6C4  6E0A               	movwf	(btemp+9)^0,c
 23890  01A6C6  0EFF               	movlw	255
 23891  01A6C8  6E0B               	movwf	(btemp+10)^0,c
 23892  01A6CA  0E7F               	movlw	127
 23893  01A6CC  6E0C               	movwf	(btemp+11)^0,c
 23894                           
 23895                           ;stkvar	_u @ sp[(-4)+0]
 23896  01A6CE  0EFC               	movlw	-4
 23897  01A6D0  0060  F027  FFE3   	movff	btemp+8,plusw1
 23898  01A6D6  0EFD               	movlw	-3
 23899  01A6D8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23900  01A6DE  0EFE               	movlw	-2
 23901  01A6E0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23902  01A6E6  0EFF               	movlw	-1
 23903  01A6E8  0060  F033  FFE3   	movff	btemp+11,plusw1
 23904                           
 23905                           ;stkvar	_u @ sp[(-4)+0]
 23906  01A6EE  0EFC               	movlw	-4
 23907  01A6F0  006F FF8C  F001    	movff	plusw1,btemp
 23908  01A6F6  0EFD               	movlw	-3
 23909  01A6F8  006F FF8C  F002    	movff	plusw1,btemp+1
 23910  01A6FE  0EFE               	movlw	-2
 23911  01A700  006F FF8C  F003    	movff	plusw1,btemp+2
 23912  01A706  0EFF               	movlw	-1
 23913  01A708  006F FF8C  F004    	movff	plusw1,btemp+3
 23914                           
 23915                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 23916  01A70E  0EFA               	movlw	250
 23917  01A710  26E1               	addwf	fsr1l,f,c
 23918  01A712  0EFF               	movlw	255
 23919  01A714  22E2               	addwfc	fsr1h,f,c
 23920  01A716  0012               	return		;funcret
 23921  01A718                     __end_of_nanf:
 23922                           	opt callstack 0
 23923                           
 23924 ;; *************** function _get_raw_result *****************
 23925 ;; Defined at:
 23926 ;;		line 87 in file "daq.c"
 23927 ;; Parameters:    Size  Location     Type
 23928 ;;  index           1  [STACK] const enum E16582
 23929 ;; Auto vars:     Size  Location     Type
 23930 ;;		None
 23931 ;; Return value:  Size  Location     Type
 23932 ;;                  2  [STACK] unsigned short 
 23933 ;; Registers used:
 23934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 23935 ;; Tracked objects:
 23936 ;;		On entry : 0/2
 23937 ;;		On exit  : 0/0
 23938 ;;		Unchanged: 0/0
 23939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23944 ;;Total ram usage:        0 bytes
 23945 ;; Hardware stack levels used:    1
 23946 ;; Hardware stack levels required when called:   15
 23947 ;; This function calls:
 23948 ;;		Nothing
 23949 ;; This function is called by:
 23950 ;;		_main
 23951 ;;		_conv_raw_result
 23952 ;; This function uses a reentrant model
 23953 ;;
 23954                           
 23955                           	psect	text96
 23956  01B50C                     __ptext96:
 23957                           	opt callstack 0
 23958  01B50C                     _get_raw_result:
 23959                           	opt callstack 13
 23960                           
 23961                           ;daq.c: 87: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 88: {;daq.c: 
      +                          89:  return R.raw_adc[index];
 23962                           ;stkvar	_index @ sp[(0)+-1]
 23963                           
 23964                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23965                           ;incstack = 0
 23966  01B50C  0EFF               	movlw	-1
 23967  01B50E  50E3               	movf	plusw1,w,c
 23968  01B510  0D02               	mullw	2
 23969  01B512  50F3               	movf	243,w,c
 23970  01B514  0FC4               	addlw	low _R
 23971  01B516  6ED9               	movwf	fsr2l,c
 23972  01B518  6ADA               	clrf	fsr2h,c
 23973  01B51A  006F FF78  F001    	movff	postinc2,btemp
 23974  01B520  006F FF74  F002    	movff	postdec2,btemp+1
 23975                           
 23976                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 23977  01B526  52E5               	movf	postdec1,f,c
 23978  01B528  0012               	return		;funcret
 23979  01B52A                     __end_of_get_raw_result:
 23980                           	opt callstack 0
 23981                           
 23982 ;; *************** function ___xxtofl *****************
 23983 ;; Defined at:
 23984 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 23985 ;; Parameters:    Size  Location     Type
 23986 ;;  sign            1  [STACK] unsigned char 
 23987 ;;  val             4  [STACK] long 
 23988 ;; Auto vars:     Size  Location     Type
 23989 ;;  arg             4  [STACK] unsigned long 
 23990 ;;  exp             1  [STACK] unsigned char 
 23991 ;; Return value:  Size  Location     Type
 23992 ;;                  4  [STACK] unsigned char 
 23993 ;; Registers used:
 23994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 23995 ;; Tracked objects:
 23996 ;;		On entry : 0/1
 23997 ;;		On exit  : 0/0
 23998 ;;		Unchanged: 0/0
 23999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24004 ;;Total ram usage:        0 bytes
 24005 ;; Hardware stack levels used:    1
 24006 ;; Hardware stack levels required when called:   15
 24007 ;; This function calls:
 24008 ;;		Nothing
 24009 ;; This function is called by:
 24010 ;;		_conv_raw_result
 24011 ;;		_init_bsoc
 24012 ;; This function uses a reentrant model
 24013 ;;
 24014                           
 24015                           	psect	text97
 24016  0179D8                     __ptext97:
 24017                           	opt callstack 0
 24018  0179D8                     ___xxtofl:
 24019                           	opt callstack 0
 24020                           
 24021                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24022  0179D8  0E05               	movlw	5
 24023  0179DA  26E1               	addwf	fsr1l,f,c
 24024  0179DC  0E00               	movlw	0
 24025  0179DE  22E2               	addwfc	fsr1h,f,c
 24026                           
 24027                           ;stkvar	_sign @ sp[(-5)+-1]
 24028                           
 24029                           ;incstack = 0
 24030  0179E0  0EFA               	movlw	-6
 24031  0179E2  50E3               	movf	plusw1,w,c
 24032  0179E4  B4D8               	btfsc	status,2,c
 24033  0179E6  D01D               	goto	l9556
 24034                           
 24035                           ;stkvar	_val @ sp[(-5)+-5]
 24036  0179E8  0EF9               	movlw	-7
 24037  0179EA  AEE3               	btfss	plusw1,7,c
 24038  0179EC  D01A               	goto	l9556
 24039                           
 24040                           ;stkvar	_val @ sp[(-5)+-5]
 24041  0179EE  0EF6               	movlw	-10
 24042  0179F0  006F FF8C  F009    	movff	plusw1,btemp+8
 24043  0179F6  0EF7               	movlw	-9
 24044  0179F8  006F FF8C  F00A    	movff	plusw1,btemp+9
 24045  0179FE  0EF8               	movlw	-8
 24046  017A00  006F FF8C  F00B    	movff	plusw1,btemp+10
 24047  017A06  0EF9               	movlw	-7
 24048  017A08  006F FF8C  F00C    	movff	plusw1,btemp+11
 24049  017A0E  1E09               	comf	(btemp+8)^0,f,c
 24050  017A10  1E0A               	comf	(btemp+9)^0,f,c
 24051  017A12  1E0B               	comf	(btemp+10)^0,f,c
 24052  017A14  1E0C               	comf	(btemp+11)^0,f,c
 24053  017A16  2A09               	incf	(btemp+8)^0,f,c
 24054  017A18  0E00               	movlw	0
 24055  017A1A  220A               	addwfc	(btemp+9)^0,f,c
 24056  017A1C  220B               	addwfc	(btemp+10)^0,f,c
 24057  017A1E  220C               	addwfc	(btemp+11)^0,f,c
 24058  017A20  D010               	goto	L28
 24059  017A22                     l9556:
 24060                           
 24061                           ;stkvar	_val @ sp[(-5)+-5]
 24062  017A22  0EF6               	movlw	-10
 24063  017A24  006F FF8C  F009    	movff	plusw1,btemp+8
 24064  017A2A  0EF7               	movlw	-9
 24065  017A2C  006F FF8C  F00A    	movff	plusw1,btemp+9
 24066  017A32  0EF8               	movlw	-8
 24067  017A34  006F FF8C  F00B    	movff	plusw1,btemp+10
 24068  017A3A  0EF9               	movlw	-7
 24069  017A3C  006F FF8C  F00C    	movff	plusw1,btemp+11
 24070  017A42                     L28:
 24071                           
 24072                           ;stkvar	_arg @ sp[(-5)+0]
 24073  017A42  0EFB               	movlw	-5
 24074  017A44  0060  F027  FFE3   	movff	btemp+8,plusw1
 24075  017A4A  0EFC               	movlw	-4
 24076  017A4C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24077  017A52  0EFD               	movlw	-3
 24078  017A54  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24079  017A5A  0EFE               	movlw	-2
 24080  017A5C  0060  F033  FFE3   	movff	btemp+11,plusw1
 24081                           
 24082                           ;stkvar	_val @ sp[(-5)+-5]
 24083  017A62  0EF6               	movlw	-10
 24084  017A64  50E3               	movf	plusw1,w,c
 24085  017A66  E113               	bnz	l9564
 24086  017A68  0EF7               	movlw	-9
 24087  017A6A  50E3               	movf	plusw1,w,c
 24088  017A6C  E110               	bnz	l9564
 24089  017A6E  0EF8               	movlw	-8
 24090  017A70  50E3               	movf	plusw1,w,c
 24091  017A72  E10D               	bnz	l9564
 24092  017A74  0EF9               	movlw	-7
 24093  017A76  50E3               	movf	plusw1,w,c
 24094  017A78  A4D8               	btfss	status,2,c
 24095  017A7A  D009               	goto	l9564
 24096  017A7C  0E00               	movlw	0
 24097  017A7E  6E01               	movwf	btemp^0,c
 24098  017A80  0E00               	movlw	0
 24099  017A82  6E02               	movwf	(btemp+1)^0,c
 24100  017A84  0E00               	movlw	0
 24101  017A86  6E03               	movwf	(btemp+2)^0,c
 24102  017A88  0E00               	movlw	0
 24103  017A8A  6E04               	movwf	(btemp+3)^0,c
 24104  017A8C  D0A2               	goto	l3013
 24105  017A8E                     l9564:
 24106  017A8E  0E96               	movlw	150
 24107  017A90  6E0C               	movwf	(btemp+11)^0,c
 24108                           
 24109                           ;stkvar	_exp @ sp[(-5)+4]
 24110  017A92  0EFF               	movlw	-1
 24111  017A94  0060  F033  FFE3   	movff	btemp+11,plusw1
 24112  017A9A  D00B               	goto	l9568
 24113  017A9C                     l9566:
 24114                           
 24115                           ;stkvar	_exp @ sp[(-5)+4]
 24116  017A9C  0EFF               	movlw	-1
 24117  017A9E  2AE3               	incf	plusw1,f,c
 24118                           
 24119                           ;stkvar	_arg @ sp[(-5)+0]
 24120  017AA0  90D8               	bcf	status,0,c
 24121  017AA2  0EFE               	movlw	-2
 24122  017AA4  32E3               	rrcf	plusw1,f,c
 24123  017AA6  0EFD               	movlw	-3
 24124  017AA8  32E3               	rrcf	plusw1,f,c
 24125  017AAA  0EFC               	movlw	-4
 24126  017AAC  32E3               	rrcf	plusw1,f,c
 24127  017AAE  0EFB               	movlw	-5
 24128  017AB0  32E3               	rrcf	plusw1,f,c
 24129  017AB2                     l9568:
 24130                           
 24131                           ;stkvar	_arg @ sp[(-5)+0]
 24132  017AB2  50E1               	movf	fsr1l,w,c
 24133  017AB4  0FFB               	addlw	-5
 24134  017AB6  6ED9               	movwf	fsr2l,c
 24135  017AB8  50E2               	movf	fsr1h,w,c
 24136  017ABA  6EDA               	movwf	fsr2h,c
 24137  017ABC  0EFF               	movlw	255
 24138  017ABE  22DA               	addwfc	fsr2h,f,c
 24139  017AC0  52DE               	movf	postinc2,f,c
 24140  017AC2  52DE               	movf	postinc2,f,c
 24141  017AC4  52DE               	movf	postinc2,f,c
 24142  017AC6  0EFE               	movlw	254
 24143  017AC8  14DD               	andwf	postdec2,w,c
 24144  017ACA  B4D8               	btfsc	status,2,c
 24145  017ACC  D018               	goto	l9576
 24146  017ACE  D7E6               	goto	l9566
 24147  017AD0                     l9570:
 24148                           
 24149                           ;stkvar	_exp @ sp[(-5)+4]
 24150  017AD0  0EFF               	movlw	-1
 24151  017AD2  2AE3               	incf	plusw1,f,c
 24152                           
 24153                           ;stkvar	_arg @ sp[(-5)+0]
 24154  017AD4  50E1               	movf	fsr1l,w,c
 24155  017AD6  0FFB               	addlw	-5
 24156  017AD8  6ED9               	movwf	fsr2l,c
 24157  017ADA  50E2               	movf	fsr1h,w,c
 24158  017ADC  6EDA               	movwf	fsr2h,c
 24159  017ADE  0EFF               	movlw	255
 24160  017AE0  22DA               	addwfc	fsr2h,f,c
 24161  017AE2  2ADE               	incf	postinc2,f,c
 24162  017AE4  0E00               	movlw	0
 24163  017AE6  22DE               	addwfc	postinc2,f,c
 24164  017AE8  22DE               	addwfc	postinc2,f,c
 24165  017AEA  22DE               	addwfc	postinc2,f,c
 24166                           
 24167                           ;stkvar	_arg @ sp[(-5)+0]
 24168  017AEC  90D8               	bcf	status,0,c
 24169  017AEE  0EFE               	movlw	-2
 24170  017AF0  32E3               	rrcf	plusw1,f,c
 24171  017AF2  0EFD               	movlw	-3
 24172  017AF4  32E3               	rrcf	plusw1,f,c
 24173  017AF6  0EFC               	movlw	-4
 24174  017AF8  32E3               	rrcf	plusw1,f,c
 24175  017AFA  0EFB               	movlw	-5
 24176  017AFC  32E3               	rrcf	plusw1,f,c
 24177  017AFE                     l9576:
 24178                           
 24179                           ;stkvar	_arg @ sp[(-5)+0]
 24180  017AFE  50E1               	movf	fsr1l,w,c
 24181  017B00  0FFB               	addlw	-5
 24182  017B02  6ED9               	movwf	fsr2l,c
 24183  017B04  50E2               	movf	fsr1h,w,c
 24184  017B06  6EDA               	movwf	fsr2h,c
 24185  017B08  0EFF               	movlw	255
 24186  017B0A  22DA               	addwfc	fsr2h,f,c
 24187  017B0C  52DE               	movf	postinc2,f,c
 24188  017B0E  52DE               	movf	postinc2,f,c
 24189  017B10  52DE               	movf	postinc2,f,c
 24190  017B12  0EFF               	movlw	255
 24191  017B14  14DD               	andwf	postdec2,w,c
 24192  017B16  B4D8               	btfsc	status,2,c
 24193  017B18  D00C               	goto	l9580
 24194  017B1A  D7DA               	goto	l9570
 24195  017B1C                     l9578:
 24196                           
 24197                           ;stkvar	_exp @ sp[(-5)+4]
 24198  017B1C  0EFF               	movlw	-1
 24199  017B1E  06E3               	decf	plusw1,f,c
 24200                           
 24201                           ;stkvar	_arg @ sp[(-5)+0]
 24202  017B20  90D8               	bcf	status,0,c
 24203  017B22  0EFB               	movlw	-5
 24204  017B24  36E3               	rlcf	plusw1,f,c
 24205  017B26  0EFC               	movlw	-4
 24206  017B28  36E3               	rlcf	plusw1,f,c
 24207  017B2A  0EFD               	movlw	-3
 24208  017B2C  36E3               	rlcf	plusw1,f,c
 24209  017B2E  0EFE               	movlw	-2
 24210  017B30  36E3               	rlcf	plusw1,f,c
 24211  017B32                     l9580:
 24212                           
 24213                           ;stkvar	_arg @ sp[(-5)+0]
 24214  017B32  0EFD               	movlw	-3
 24215  017B34  BEE3               	btfsc	plusw1,7,c
 24216  017B36  D007               	goto	u8920
 24217                           
 24218                           ;stkvar	_exp @ sp[(-5)+4]
 24219  017B38  0EFF               	movlw	-1
 24220  017B3A  006F FF8C  F001    	movff	plusw1,btemp
 24221  017B40  0E02               	movlw	2
 24222  017B42  6001               	cpfslt	btemp^0,c
 24223  017B44  D7EB               	goto	l9578
 24224  017B46                     u8920:
 24225                           
 24226                           ;stkvar	_exp @ sp[(-5)+4]
 24227  017B46  0EFF               	movlw	-1
 24228  017B48  B0E3               	btfsc	plusw1,0,c
 24229  017B4A  D002               	goto	l9588
 24230                           
 24231                           ;stkvar	_arg @ sp[(-5)+0]
 24232  017B4C  0EFD               	movlw	-3
 24233  017B4E  9EE3               	bcf	plusw1,7,c
 24234  017B50                     l9588:
 24235                           
 24236                           ;stkvar	_exp @ sp[(-5)+4]
 24237  017B50  50E1               	movf	fsr1l,w,c
 24238  017B52  0FFF               	addlw	-1
 24239  017B54  6ED9               	movwf	fsr2l,c
 24240  017B56  50E2               	movf	fsr1h,w,c
 24241  017B58  6EDA               	movwf	fsr2h,c
 24242  017B5A  0EFF               	movlw	255
 24243  017B5C  22DA               	addwfc	fsr2h,f,c
 24244  017B5E  90D8               	bcf	status,0,c
 24245  017B60  32DF               	rrcf	indf2,f,c
 24246                           
 24247                           ;stkvar	_exp @ sp[(-5)+4]
 24248  017B62  0EFF               	movlw	-1
 24249  017B64  006F FF8C  F00C    	movff	plusw1,btemp+11
 24250  017B6A  0060  F030  F005   	movff	btemp+11,btemp+4
 24251  017B70  6A06               	clrf	(btemp+5)^0,c
 24252  017B72  6A07               	clrf	(btemp+6)^0,c
 24253  017B74  6A08               	clrf	(btemp+7)^0,c
 24254  017B76  0060  F014  F008   	movff	btemp+4,btemp+7
 24255  017B7C  6A07               	clrf	(btemp+6)^0,c
 24256  017B7E  6A06               	clrf	(btemp+5)^0,c
 24257  017B80  6A05               	clrf	(btemp+4)^0,c
 24258                           
 24259                           ;stkvar	_arg @ sp[(-5)+0]
 24260  017B82  50E1               	movf	fsr1l,w,c
 24261  017B84  0FFB               	addlw	-5
 24262  017B86  6ED9               	movwf	fsr2l,c
 24263  017B88  50E2               	movf	fsr1h,w,c
 24264  017B8A  6EDA               	movwf	fsr2h,c
 24265  017B8C  0EFF               	movlw	255
 24266  017B8E  22DA               	addwfc	fsr2h,f,c
 24267  017B90  5005               	movf	(btemp+4)^0,w,c
 24268  017B92  12DE               	iorwf	postinc2,f,c
 24269  017B94  5006               	movf	(btemp+5)^0,w,c
 24270  017B96  12DE               	iorwf	postinc2,f,c
 24271  017B98  5007               	movf	(btemp+6)^0,w,c
 24272  017B9A  12DE               	iorwf	postinc2,f,c
 24273  017B9C  5008               	movf	(btemp+7)^0,w,c
 24274  017B9E  12DE               	iorwf	postinc2,f,c
 24275                           
 24276                           ;stkvar	_sign @ sp[(-5)+-1]
 24277  017BA0  0EFA               	movlw	-6
 24278  017BA2  50E3               	movf	plusw1,w,c
 24279  017BA4  B4D8               	btfsc	status,2,c
 24280  017BA6  D005               	goto	l9598
 24281                           
 24282                           ;stkvar	_val @ sp[(-5)+-5]
 24283  017BA8  0EF9               	movlw	-7
 24284  017BAA  AEE3               	btfss	plusw1,7,c
 24285  017BAC  D002               	goto	l9598
 24286                           
 24287                           ;stkvar	_arg @ sp[(-5)+0]
 24288  017BAE  0EFE               	movlw	-2
 24289  017BB0  8EE3               	bsf	plusw1,7,c
 24290  017BB2                     l9598:
 24291                           
 24292                           ;stkvar	_arg @ sp[(-5)+0]
 24293  017BB2  0EFB               	movlw	-5
 24294  017BB4  006F FF8C  F001    	movff	plusw1,btemp
 24295  017BBA  0EFC               	movlw	-4
 24296  017BBC  006F FF8C  F002    	movff	plusw1,btemp+1
 24297  017BC2  0EFD               	movlw	-3
 24298  017BC4  006F FF8C  F003    	movff	plusw1,btemp+2
 24299  017BCA  0EFE               	movlw	-2
 24300  017BCC  006F FF8C  F004    	movff	plusw1,btemp+3
 24301  017BD2                     l3013:
 24302                           
 24303                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 24304  017BD2  0EF6               	movlw	246
 24305  017BD4  26E1               	addwf	fsr1l,f,c
 24306  017BD6  0EFF               	movlw	255
 24307  017BD8  22E2               	addwfc	fsr1h,f,c
 24308  017BDA  0012               	return		;funcret
 24309  017BDC                     __end_of___xxtofl:
 24310                           	opt callstack 0
 24311                           
 24312 ;; *************** function ___fldiv *****************
 24313 ;; Defined at:
 24314 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 24315 ;; Parameters:    Size  Location     Type
 24316 ;;  b               4  [STACK] unsigned char 
 24317 ;;  a               4  [STACK] unsigned char 
 24318 ;; Auto vars:     Size  Location     Type
 24319 ;;  grs             4  [STACK] unsigned long 
 24320 ;;  rem             4  [STACK] unsigned long 
 24321 ;;  new_exp         2  [STACK] short 
 24322 ;;  aexp            1  [STACK] unsigned char 
 24323 ;;  bexp            1  [STACK] unsigned char 
 24324 ;;  sign            1  [STACK] unsigned char 
 24325 ;; Return value:  Size  Location     Type
 24326 ;;                  4  [STACK] unsigned char 
 24327 ;; Registers used:
 24328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 24329 ;; Tracked objects:
 24330 ;;		On entry : 0/1
 24331 ;;		On exit  : 0/0
 24332 ;;		Unchanged: 0/0
 24333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24338 ;;Total ram usage:        0 bytes
 24339 ;; Hardware stack levels used:    1
 24340 ;; Hardware stack levels required when called:   15
 24341 ;; This function calls:
 24342 ;;		Nothing
 24343 ;; This function is called by:
 24344 ;;		_conv_raw_result
 24345 ;;		_calc_bsoc
 24346 ;;		_init_bsoc
 24347 ;;		_esr_check
 24348 ;;		_efgtoa
 24349 ;; This function uses a reentrant model
 24350 ;;
 24351                           
 24352                           	psect	text98
 24353  0148D6                     __ptext98:
 24354                           	opt callstack 0
 24355  0148D6                     ___fldiv:
 24356                           	opt callstack 0
 24357                           
 24358                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 24359  0148D6  0E0D               	movlw	13
 24360  0148D8  26E1               	addwf	fsr1l,f,c
 24361  0148DA  0E00               	movlw	0
 24362  0148DC  22E2               	addwfc	fsr1h,f,c
 24363                           
 24364                           ;stkvar	_b @ sp[(-13)+-4]
 24365                           
 24366                           ;incstack = 0
 24367 ;; hardware stack exceeded
 24368  0148DE  0EF2               	movlw	242
 24369  0148E0  24E1               	addwf	fsr1l,w,c
 24370  0148E2  6ED9               	movwf	fsr2l,c
 24371  0148E4  0EFF               	movlw	255
 24372  0148E6  20E2               	addwfc	fsr1h,w,c
 24373  0148E8  6EDA               	movwf	fsr2h,c
 24374  0148EA  50DF               	movf	indf2,w,c
 24375  0148EC  6E0C               	movwf	(btemp+11)^0,c
 24376  0148EE  0E80               	movlw	128
 24377  0148F0  160C               	andwf	(btemp+11)^0,f,c
 24378                           
 24379                           ;stkvar	_sign @ sp[(-13)+12]
 24380  0148F2  0EFF               	movlw	-1
 24381  0148F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 24382                           
 24383                           ;stkvar	_b @ sp[(-13)+-4]
 24384  0148FA  0EF2               	movlw	242
 24385  0148FC  24E1               	addwf	fsr1l,w,c
 24386  0148FE  6ED9               	movwf	fsr2l,c
 24387  014900  0EFF               	movlw	255
 24388  014902  20E2               	addwfc	fsr1h,w,c
 24389  014904  6EDA               	movwf	fsr2h,c
 24390  014906  50DF               	movf	indf2,w,c
 24391  014908  6E0C               	movwf	(btemp+11)^0,c
 24392  01490A  90D8               	bcf	status,0,c
 24393  01490C  340C               	rlcf	(btemp+11)^0,w,c
 24394  01490E  6E0B               	movwf	(btemp+10)^0,c
 24395                           
 24396                           ;stkvar	_bexp @ sp[(-13)+11]
 24397  014910  0EFE               	movlw	-2
 24398  014912  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24399                           
 24400                           ;stkvar	_b @ sp[(-13)+-4]
 24401  014918  0EF1               	movlw	241
 24402  01491A  24E1               	addwf	fsr1l,w,c
 24403  01491C  6ED9               	movwf	fsr2l,c
 24404  01491E  0EFF               	movlw	255
 24405  014920  20E2               	addwfc	fsr1h,w,c
 24406  014922  6EDA               	movwf	fsr2h,c
 24407  014924  AEDF               	btfss	indf2,7,c
 24408  014926  D002               	goto	l7928
 24409                           
 24410                           ;stkvar	_bexp @ sp[(-13)+11]
 24411  014928  0EFE               	movlw	-2
 24412  01492A  80E3               	bsf	plusw1,0,c
 24413  01492C                     l7928:
 24414                           
 24415                           ;stkvar	_bexp @ sp[(-13)+11]
 24416  01492C  0EFE               	movlw	-2
 24417  01492E  50E3               	movf	plusw1,w,c
 24418  014930  B4D8               	btfsc	status,2,c
 24419  014932  D027               	goto	l7938
 24420                           
 24421                           ;stkvar	_bexp @ sp[(-13)+11]
 24422  014934  0EFE               	movlw	-2
 24423  014936  28E3               	incf	plusw1,w,c
 24424  014938  A4D8               	btfss	status,2,c
 24425  01493A  D018               	goto	l7934
 24426  01493C  0E00               	movlw	0
 24427  01493E  6E09               	movwf	(btemp+8)^0,c
 24428  014940  0E00               	movlw	0
 24429  014942  6E0A               	movwf	(btemp+9)^0,c
 24430  014944  0E00               	movlw	0
 24431  014946  6E0B               	movwf	(btemp+10)^0,c
 24432  014948  0E00               	movlw	0
 24433  01494A  6E0C               	movwf	(btemp+11)^0,c
 24434                           
 24435                           ;stkvar	_b @ sp[(-13)+-4]
 24436  01494C  0EEF               	movlw	-17
 24437  01494E  0060  F027  FFE3   	movff	btemp+8,plusw1
 24438  014954  0EF0               	movlw	-16
 24439  014956  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24440  01495C  0EF1               	movlw	-15
 24441  01495E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24442  014964  0EF2               	movlw	-14
 24443  014966  0060  F033  FFE3   	movff	btemp+11,plusw1
 24444  01496C                     l7934:
 24445                           
 24446                           ;stkvar	_b @ sp[(-13)+-4]
 24447  01496C  0EF1               	movlw	-15
 24448  01496E  8EE3               	bsf	plusw1,7,c
 24449                           
 24450                           ;stkvar	_b @ sp[(-13)+-4]
 24451  014970  0EF2               	movlw	242
 24452  014972  24E1               	addwf	fsr1l,w,c
 24453  014974  6ED9               	movwf	fsr2l,c
 24454  014976  0EFF               	movlw	255
 24455  014978  20E2               	addwfc	fsr1h,w,c
 24456  01497A  6EDA               	movwf	fsr2h,c
 24457  01497C  0E00               	movlw	0
 24458  01497E  6EDF               	movwf	indf2,c
 24459  014980  D018               	goto	l7940
 24460  014982                     l7938:
 24461  014982  0E00               	movlw	0
 24462  014984  6E09               	movwf	(btemp+8)^0,c
 24463  014986  0E00               	movlw	0
 24464  014988  6E0A               	movwf	(btemp+9)^0,c
 24465  01498A  0E00               	movlw	0
 24466  01498C  6E0B               	movwf	(btemp+10)^0,c
 24467  01498E  0E00               	movlw	0
 24468  014990  6E0C               	movwf	(btemp+11)^0,c
 24469                           
 24470                           ;stkvar	_b @ sp[(-13)+-4]
 24471  014992  0EEF               	movlw	-17
 24472  014994  0060  F027  FFE3   	movff	btemp+8,plusw1
 24473  01499A  0EF0               	movlw	-16
 24474  01499C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24475  0149A2  0EF1               	movlw	-15
 24476  0149A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24477  0149AA  0EF2               	movlw	-14
 24478  0149AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 24479  0149B2                     l7940:
 24480                           
 24481                           ;stkvar	_a @ sp[(-13)+-8]
 24482  0149B2  0EEE               	movlw	238
 24483  0149B4  24E1               	addwf	fsr1l,w,c
 24484  0149B6  6ED9               	movwf	fsr2l,c
 24485  0149B8  0EFF               	movlw	255
 24486  0149BA  20E2               	addwfc	fsr1h,w,c
 24487  0149BC  6EDA               	movwf	fsr2h,c
 24488  0149BE  50DF               	movf	indf2,w,c
 24489  0149C0  6E0C               	movwf	(btemp+11)^0,c
 24490  0149C2  0E80               	movlw	128
 24491  0149C4  160C               	andwf	(btemp+11)^0,f,c
 24492                           
 24493                           ;stkvar	_sign @ sp[(-13)+12]
 24494  0149C6  50E1               	movf	fsr1l,w,c
 24495  0149C8  0FFF               	addlw	-1
 24496  0149CA  6ED9               	movwf	fsr2l,c
 24497  0149CC  50E2               	movf	fsr1h,w,c
 24498  0149CE  6EDA               	movwf	fsr2h,c
 24499  0149D0  0EFF               	movlw	255
 24500  0149D2  22DA               	addwfc	fsr2h,f,c
 24501  0149D4  500C               	movf	(btemp+11)^0,w,c
 24502  0149D6  1ADF               	xorwf	indf2,f,c
 24503                           
 24504                           ;stkvar	_a @ sp[(-13)+-8]
 24505  0149D8  0EEE               	movlw	238
 24506  0149DA  24E1               	addwf	fsr1l,w,c
 24507  0149DC  6ED9               	movwf	fsr2l,c
 24508  0149DE  0EFF               	movlw	255
 24509  0149E0  20E2               	addwfc	fsr1h,w,c
 24510  0149E2  6EDA               	movwf	fsr2h,c
 24511  0149E4  50DF               	movf	indf2,w,c
 24512  0149E6  6E0C               	movwf	(btemp+11)^0,c
 24513  0149E8  90D8               	bcf	status,0,c
 24514  0149EA  340C               	rlcf	(btemp+11)^0,w,c
 24515  0149EC  6E0B               	movwf	(btemp+10)^0,c
 24516                           
 24517                           ;stkvar	_aexp @ sp[(-13)+10]
 24518  0149EE  0EFD               	movlw	-3
 24519  0149F0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24520                           
 24521                           ;stkvar	_a @ sp[(-13)+-8]
 24522  0149F6  0EED               	movlw	237
 24523  0149F8  24E1               	addwf	fsr1l,w,c
 24524  0149FA  6ED9               	movwf	fsr2l,c
 24525  0149FC  0EFF               	movlw	255
 24526  0149FE  20E2               	addwfc	fsr1h,w,c
 24527  014A00  6EDA               	movwf	fsr2h,c
 24528  014A02  AEDF               	btfss	indf2,7,c
 24529  014A04  D002               	goto	l7948
 24530                           
 24531                           ;stkvar	_aexp @ sp[(-13)+10]
 24532  014A06  0EFD               	movlw	-3
 24533  014A08  80E3               	bsf	plusw1,0,c
 24534  014A0A                     l7948:
 24535                           
 24536                           ;stkvar	_aexp @ sp[(-13)+10]
 24537  014A0A  0EFD               	movlw	-3
 24538  014A0C  50E3               	movf	plusw1,w,c
 24539  014A0E  B4D8               	btfsc	status,2,c
 24540  014A10  D027               	goto	l7958
 24541                           
 24542                           ;stkvar	_aexp @ sp[(-13)+10]
 24543  014A12  0EFD               	movlw	-3
 24544  014A14  28E3               	incf	plusw1,w,c
 24545  014A16  A4D8               	btfss	status,2,c
 24546  014A18  D018               	goto	l7954
 24547  014A1A  0E00               	movlw	0
 24548  014A1C  6E09               	movwf	(btemp+8)^0,c
 24549  014A1E  0E00               	movlw	0
 24550  014A20  6E0A               	movwf	(btemp+9)^0,c
 24551  014A22  0E00               	movlw	0
 24552  014A24  6E0B               	movwf	(btemp+10)^0,c
 24553  014A26  0E00               	movlw	0
 24554  014A28  6E0C               	movwf	(btemp+11)^0,c
 24555                           
 24556                           ;stkvar	_a @ sp[(-13)+-8]
 24557  014A2A  0EEB               	movlw	-21
 24558  014A2C  0060  F027  FFE3   	movff	btemp+8,plusw1
 24559  014A32  0EEC               	movlw	-20
 24560  014A34  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24561  014A3A  0EED               	movlw	-19
 24562  014A3C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24563  014A42  0EEE               	movlw	-18
 24564  014A44  0060  F033  FFE3   	movff	btemp+11,plusw1
 24565  014A4A                     l7954:
 24566                           
 24567                           ;stkvar	_a @ sp[(-13)+-8]
 24568  014A4A  0EED               	movlw	-19
 24569  014A4C  8EE3               	bsf	plusw1,7,c
 24570                           
 24571                           ;stkvar	_a @ sp[(-13)+-8]
 24572  014A4E  0EEE               	movlw	238
 24573  014A50  24E1               	addwf	fsr1l,w,c
 24574  014A52  6ED9               	movwf	fsr2l,c
 24575  014A54  0EFF               	movlw	255
 24576  014A56  20E2               	addwfc	fsr1h,w,c
 24577  014A58  6EDA               	movwf	fsr2h,c
 24578  014A5A  0E00               	movlw	0
 24579  014A5C  6EDF               	movwf	indf2,c
 24580  014A5E  D018               	goto	l7960
 24581  014A60                     l7958:
 24582  014A60  0E00               	movlw	0
 24583  014A62  6E09               	movwf	(btemp+8)^0,c
 24584  014A64  0E00               	movlw	0
 24585  014A66  6E0A               	movwf	(btemp+9)^0,c
 24586  014A68  0E00               	movlw	0
 24587  014A6A  6E0B               	movwf	(btemp+10)^0,c
 24588  014A6C  0E00               	movlw	0
 24589  014A6E  6E0C               	movwf	(btemp+11)^0,c
 24590                           
 24591                           ;stkvar	_a @ sp[(-13)+-8]
 24592  014A70  0EEB               	movlw	-21
 24593  014A72  0060  F027  FFE3   	movff	btemp+8,plusw1
 24594  014A78  0EEC               	movlw	-20
 24595  014A7A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24596  014A80  0EED               	movlw	-19
 24597  014A82  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24598  014A88  0EEE               	movlw	-18
 24599  014A8A  0060  F033  FFE3   	movff	btemp+11,plusw1
 24600  014A90                     l7960:
 24601                           
 24602                           ;stkvar	_a @ sp[(-13)+-8]
 24603  014A90  0EEB               	movlw	-21
 24604  014A92  50E3               	movf	plusw1,w,c
 24605  014A94  E139               	bnz	l7972
 24606  014A96  0EEC               	movlw	-20
 24607  014A98  50E3               	movf	plusw1,w,c
 24608  014A9A  E136               	bnz	l7972
 24609  014A9C  0EED               	movlw	-19
 24610  014A9E  50E3               	movf	plusw1,w,c
 24611  014AA0  E133               	bnz	l7972
 24612  014AA2  0EEE               	movlw	-18
 24613  014AA4  50E3               	movf	plusw1,w,c
 24614  014AA6  A4D8               	btfss	status,2,c
 24615  014AA8  D02F               	goto	l7972
 24616                           
 24617                           ;stkvar	_b @ sp[(-13)+-4]
 24618  014AAA  0EEF               	movlw	-17
 24619  014AAC  6AE3               	clrf	plusw1,c
 24620  014AAE  0EF0               	movlw	-16
 24621  014AB0  6AE3               	clrf	plusw1,c
 24622  014AB2  0EF1               	movlw	-15
 24623  014AB4  6AE3               	clrf	plusw1,c
 24624  014AB6  0EF2               	movlw	-14
 24625  014AB8  6AE3               	clrf	plusw1,c
 24626                           
 24627                           ;stkvar	_b @ sp[(-13)+-4]
 24628  014ABA  0EF1               	movlw	241
 24629  014ABC  24E1               	addwf	fsr1l,w,c
 24630  014ABE  6ED9               	movwf	fsr2l,c
 24631  014AC0  0EFF               	movlw	255
 24632  014AC2  20E2               	addwfc	fsr1h,w,c
 24633  014AC4  6EDA               	movwf	fsr2h,c
 24634  014AC6  0E80               	movlw	128
 24635  014AC8  12DE               	iorwf	postinc2,f,c
 24636  014ACA  0E7F               	movlw	127
 24637  014ACC  12DD               	iorwf	postdec2,f,c
 24638  014ACE                     l7966:
 24639                           
 24640                           ;stkvar	_sign @ sp[(-13)+12]
 24641  014ACE  0EFF               	movlw	-1
 24642  014AD0  006F FF8C  F00C    	movff	plusw1,btemp+11
 24643                           
 24644                           ;stkvar	_b @ sp[(-13)+-4]
 24645  014AD6  0EF2               	movlw	242
 24646  014AD8  24E1               	addwf	fsr1l,w,c
 24647  014ADA  6ED9               	movwf	fsr2l,c
 24648  014ADC  0EFF               	movlw	255
 24649  014ADE  20E2               	addwfc	fsr1h,w,c
 24650  014AE0  6EDA               	movwf	fsr2h,c
 24651  014AE2  500C               	movf	(btemp+11)^0,w,c
 24652  014AE4  12DF               	iorwf	indf2,f,c
 24653                           
 24654                           ;stkvar	_b @ sp[(-13)+-4]
 24655  014AE6  0EEF               	movlw	-17
 24656  014AE8  006F FF8C  F001    	movff	plusw1,btemp
 24657  014AEE  0EF0               	movlw	-16
 24658  014AF0  006F FF8C  F002    	movff	plusw1,btemp+1
 24659  014AF6  0EF1               	movlw	-15
 24660  014AF8  006F FF8C  F003    	movff	plusw1,btemp+2
 24661  014AFE  0EF2               	movlw	-14
 24662  014B00  006F FF8C  F004    	movff	plusw1,btemp+3
 24663  014B06  D19F               	goto	l2937
 24664  014B08                     l7972:
 24665                           
 24666                           ;stkvar	_bexp @ sp[(-13)+11]
 24667  014B08  0EFE               	movlw	-2
 24668  014B0A  50E3               	movf	plusw1,w,c
 24669  014B0C  A4D8               	btfss	status,2,c
 24670  014B0E  D009               	goto	l7980
 24671  014B10  0E00               	movlw	0
 24672  014B12  6E01               	movwf	btemp^0,c
 24673  014B14  0E00               	movlw	0
 24674  014B16  6E02               	movwf	(btemp+1)^0,c
 24675  014B18  0E00               	movlw	0
 24676  014B1A  6E03               	movwf	(btemp+2)^0,c
 24677  014B1C  0E00               	movlw	0
 24678  014B1E  6E04               	movwf	(btemp+3)^0,c
 24679  014B20  D192               	goto	l2937
 24680  014B22                     l7980:
 24681                           
 24682                           ;stkvar	_bexp @ sp[(-13)+11]
 24683  014B22  0EFE               	movlw	-2
 24684  014B24  50E3               	movf	plusw1,w,c
 24685  014B26  6E0B               	movwf	(btemp+10)^0,c
 24686  014B28  6A0C               	clrf	(btemp+11)^0,c
 24687                           
 24688                           ;stkvar	_aexp @ sp[(-13)+10]
 24689  014B2A  0EFD               	movlw	-3
 24690  014B2C  50E3               	movf	plusw1,w,c
 24691  014B2E  5E0B               	subwf	(btemp+10)^0,f,c
 24692  014B30  0E00               	movlw	0
 24693  014B32  5A0C               	subwfb	(btemp+11)^0,f,c
 24694  014B34  0E7F               	movlw	127
 24695  014B36  260B               	addwf	(btemp+10)^0,f,c
 24696  014B38  0E00               	movlw	0
 24697  014B3A  220C               	addwfc	(btemp+11)^0,f,c
 24698                           
 24699                           ;stkvar	_new_exp @ sp[(-13)+8]
 24700  014B3C  0EFB               	movlw	-5
 24701  014B3E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24702  014B44  0EFC               	movlw	-4
 24703  014B46  0060  F033  FFE3   	movff	btemp+11,plusw1
 24704                           
 24705                           ;stkvar	_b @ sp[(-13)+-4]
 24706  014B4C  0EEF               	movlw	-17
 24707  014B4E  006F FF8C  F009    	movff	plusw1,btemp+8
 24708  014B54  0EF0               	movlw	-16
 24709  014B56  006F FF8C  F00A    	movff	plusw1,btemp+9
 24710  014B5C  0EF1               	movlw	-15
 24711  014B5E  006F FF8C  F00B    	movff	plusw1,btemp+10
 24712  014B64  0EF2               	movlw	-14
 24713  014B66  006F FF8C  F00C    	movff	plusw1,btemp+11
 24714                           
 24715                           ;stkvar	_rem @ sp[(-13)+4]
 24716  014B6C  0EF7               	movlw	-9
 24717  014B6E  0060  F027  FFE3   	movff	btemp+8,plusw1
 24718  014B74  0EF8               	movlw	-8
 24719  014B76  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24720  014B7C  0EF9               	movlw	-7
 24721  014B7E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24722  014B84  0EFA               	movlw	-6
 24723  014B86  0060  F033  FFE3   	movff	btemp+11,plusw1
 24724                           
 24725                           ;stkvar	_b @ sp[(-13)+-4]
 24726  014B8C  0EEF               	movlw	-17
 24727  014B8E  6AE3               	clrf	plusw1,c
 24728  014B90  0EF0               	movlw	-16
 24729  014B92  6AE3               	clrf	plusw1,c
 24730  014B94  0EF1               	movlw	-15
 24731  014B96  6AE3               	clrf	plusw1,c
 24732  014B98  0EF2               	movlw	-14
 24733  014B9A  6AE3               	clrf	plusw1,c
 24734                           
 24735                           ;stkvar	_grs @ sp[(-13)+0]
 24736  014B9C  0EF3               	movlw	-13
 24737  014B9E  6AE3               	clrf	plusw1,c
 24738  014BA0  0EF4               	movlw	-12
 24739  014BA2  6AE3               	clrf	plusw1,c
 24740  014BA4  0EF5               	movlw	-11
 24741  014BA6  6AE3               	clrf	plusw1,c
 24742  014BA8  0EF6               	movlw	-10
 24743  014BAA  6AE3               	clrf	plusw1,c
 24744                           
 24745                           ;stkvar	_aexp @ sp[(-13)+10]
 24746  014BAC  0EFD               	movlw	-3
 24747  014BAE  6AE3               	clrf	plusw1,c
 24748  014BB0  D050               	goto	l8008
 24749  014BB2                     l7990:
 24750                           
 24751                           ;stkvar	_aexp @ sp[(-13)+10]
 24752  014BB2  0EFD               	movlw	-3
 24753  014BB4  50E3               	movf	plusw1,w,c
 24754  014BB6  B4D8               	btfsc	status,2,c
 24755  014BB8  D020               	goto	l8000
 24756                           
 24757                           ;stkvar	_rem @ sp[(-13)+4]
 24758  014BBA  90D8               	bcf	status,0,c
 24759  014BBC  0EF7               	movlw	-9
 24760  014BBE  36E3               	rlcf	plusw1,f,c
 24761  014BC0  0EF8               	movlw	-8
 24762  014BC2  36E3               	rlcf	plusw1,f,c
 24763  014BC4  0EF9               	movlw	-7
 24764  014BC6  36E3               	rlcf	plusw1,f,c
 24765  014BC8  0EFA               	movlw	-6
 24766  014BCA  36E3               	rlcf	plusw1,f,c
 24767                           
 24768                           ;stkvar	_b @ sp[(-13)+-4]
 24769  014BCC  90D8               	bcf	status,0,c
 24770  014BCE  0EEF               	movlw	-17
 24771  014BD0  36E3               	rlcf	plusw1,f,c
 24772  014BD2  0EF0               	movlw	-16
 24773  014BD4  36E3               	rlcf	plusw1,f,c
 24774  014BD6  0EF1               	movlw	-15
 24775  014BD8  36E3               	rlcf	plusw1,f,c
 24776  014BDA  0EF2               	movlw	-14
 24777  014BDC  36E3               	rlcf	plusw1,f,c
 24778                           
 24779                           ;stkvar	_grs @ sp[(-13)+0]
 24780  014BDE  0EF6               	movlw	-10
 24781  014BE0  AEE3               	btfss	plusw1,7,c
 24782  014BE2  D002               	goto	l7998
 24783                           
 24784                           ;stkvar	_b @ sp[(-13)+-4]
 24785  014BE4  0EEF               	movlw	-17
 24786  014BE6  80E3               	bsf	plusw1,0,c
 24787  014BE8                     l7998:
 24788                           
 24789                           ;stkvar	_grs @ sp[(-13)+0]
 24790  014BE8  90D8               	bcf	status,0,c
 24791  014BEA  0EF3               	movlw	-13
 24792  014BEC  36E3               	rlcf	plusw1,f,c
 24793  014BEE  0EF4               	movlw	-12
 24794  014BF0  36E3               	rlcf	plusw1,f,c
 24795  014BF2  0EF5               	movlw	-11
 24796  014BF4  36E3               	rlcf	plusw1,f,c
 24797  014BF6  0EF6               	movlw	-10
 24798  014BF8  36E3               	rlcf	plusw1,f,c
 24799  014BFA                     l8000:
 24800                           
 24801                           ;stkvar	_a @ sp[(-13)+-8]
 24802                           ;stkvar	_rem @ sp[(-13)+4]
 24803  014BFA  50E1               	movf	fsr1l,w,c
 24804  014BFC  0FF7               	addlw	-9
 24805  014BFE  6ED9               	movwf	fsr2l,c
 24806  014C00  50E2               	movf	fsr1h,w,c
 24807  014C02  6EDA               	movwf	fsr2h,c
 24808  014C04  0EFF               	movlw	255
 24809  014C06  22DA               	addwfc	fsr2h,f,c
 24810  014C08  0EEB               	movlw	-21
 24811  014C0A  50E3               	movf	plusw1,w,c
 24812  014C0C  5CDE               	subwf	postinc2,w,c
 24813  014C0E  0EEC               	movlw	-20
 24814  014C10  50E3               	movf	plusw1,w,c
 24815  014C12  58DE               	subwfb	postinc2,w,c
 24816  014C14  0EED               	movlw	-19
 24817  014C16  50E3               	movf	plusw1,w,c
 24818  014C18  58DE               	subwfb	postinc2,w,c
 24819  014C1A  0EEE               	movlw	-18
 24820  014C1C  50E3               	movf	plusw1,w,c
 24821  014C1E  58DE               	subwfb	postinc2,w,c
 24822  014C20  A0D8               	btfss	status,0,c
 24823  014C22  D015               	goto	l8006
 24824                           
 24825                           ;stkvar	_grs @ sp[(-13)+0]
 24826  014C24  0EF6               	movlw	-10
 24827  014C26  8CE3               	bsf	plusw1,6,c
 24828                           
 24829                           ;stkvar	_a @ sp[(-13)+-8]
 24830                           ;stkvar	_rem @ sp[(-13)+4]
 24831  014C28  50E1               	movf	fsr1l,w,c
 24832  014C2A  0FF7               	addlw	-9
 24833  014C2C  6ED9               	movwf	fsr2l,c
 24834  014C2E  50E2               	movf	fsr1h,w,c
 24835  014C30  6EDA               	movwf	fsr2h,c
 24836  014C32  0EFF               	movlw	255
 24837  014C34  22DA               	addwfc	fsr2h,f,c
 24838  014C36  0EEB               	movlw	-21
 24839  014C38  50E3               	movf	plusw1,w,c
 24840  014C3A  5EDE               	subwf	postinc2,f,c
 24841  014C3C  0EEC               	movlw	-20
 24842  014C3E  50E3               	movf	plusw1,w,c
 24843  014C40  5ADE               	subwfb	postinc2,f,c
 24844  014C42  0EED               	movlw	-19
 24845  014C44  50E3               	movf	plusw1,w,c
 24846  014C46  5ADE               	subwfb	postinc2,f,c
 24847  014C48  0EEE               	movlw	-18
 24848  014C4A  50E3               	movf	plusw1,w,c
 24849  014C4C  5ADE               	subwfb	postinc2,f,c
 24850  014C4E                     l8006:
 24851                           
 24852                           ;stkvar	_aexp @ sp[(-13)+10]
 24853  014C4E  0EFD               	movlw	-3
 24854  014C50  2AE3               	incf	plusw1,f,c
 24855  014C52                     l8008:
 24856                           
 24857                           ;stkvar	_aexp @ sp[(-13)+10]
 24858  014C52  0EFD               	movlw	-3
 24859  014C54  006F FF8C  F001    	movff	plusw1,btemp
 24860  014C5A  0E19               	movlw	25
 24861  014C5C  6401               	cpfsgt	btemp^0,c
 24862  014C5E  D7A9               	goto	l7990
 24863                           
 24864                           ;stkvar	_rem @ sp[(-13)+4]
 24865  014C60  0EF7               	movlw	-9
 24866  014C62  50E3               	movf	plusw1,w,c
 24867  014C64  E10A               	bnz	u6380
 24868  014C66  0EF8               	movlw	-8
 24869  014C68  50E3               	movf	plusw1,w,c
 24870  014C6A  E107               	bnz	u6380
 24871  014C6C  0EF9               	movlw	-7
 24872  014C6E  50E3               	movf	plusw1,w,c
 24873  014C70  E104               	bnz	u6380
 24874  014C72  0EFA               	movlw	-6
 24875  014C74  50E3               	movf	plusw1,w,c
 24876  014C76  B4D8               	btfsc	status,2,c
 24877  014C78  D024               	goto	l8024
 24878  014C7A                     u6380:
 24879                           
 24880                           ;stkvar	_grs @ sp[(-13)+0]
 24881  014C7A  0EF3               	movlw	-13
 24882  014C7C  80E3               	bsf	plusw1,0,c
 24883  014C7E  D021               	goto	l8024
 24884  014C80                     l8014:
 24885                           
 24886                           ;stkvar	_b @ sp[(-13)+-4]
 24887  014C80  90D8               	bcf	status,0,c
 24888  014C82  0EEF               	movlw	-17
 24889  014C84  36E3               	rlcf	plusw1,f,c
 24890  014C86  0EF0               	movlw	-16
 24891  014C88  36E3               	rlcf	plusw1,f,c
 24892  014C8A  0EF1               	movlw	-15
 24893  014C8C  36E3               	rlcf	plusw1,f,c
 24894  014C8E  0EF2               	movlw	-14
 24895  014C90  36E3               	rlcf	plusw1,f,c
 24896                           
 24897                           ;stkvar	_grs @ sp[(-13)+0]
 24898  014C92  0EF6               	movlw	-10
 24899  014C94  AEE3               	btfss	plusw1,7,c
 24900  014C96  D002               	goto	l8020
 24901                           
 24902                           ;stkvar	_b @ sp[(-13)+-4]
 24903  014C98  0EEF               	movlw	-17
 24904  014C9A  80E3               	bsf	plusw1,0,c
 24905  014C9C                     l8020:
 24906                           
 24907                           ;stkvar	_grs @ sp[(-13)+0]
 24908  014C9C  90D8               	bcf	status,0,c
 24909  014C9E  0EF3               	movlw	-13
 24910  014CA0  36E3               	rlcf	plusw1,f,c
 24911  014CA2  0EF4               	movlw	-12
 24912  014CA4  36E3               	rlcf	plusw1,f,c
 24913  014CA6  0EF5               	movlw	-11
 24914  014CA8  36E3               	rlcf	plusw1,f,c
 24915  014CAA  0EF6               	movlw	-10
 24916  014CAC  36E3               	rlcf	plusw1,f,c
 24917                           
 24918                           ;stkvar	_new_exp @ sp[(-13)+8]
 24919  014CAE  50E1               	movf	fsr1l,w,c
 24920  014CB0  0FFB               	addlw	-5
 24921  014CB2  6ED9               	movwf	fsr2l,c
 24922  014CB4  50E2               	movf	fsr1h,w,c
 24923  014CB6  6EDA               	movwf	fsr2h,c
 24924  014CB8  0EFF               	movlw	255
 24925  014CBA  22DA               	addwfc	fsr2h,f,c
 24926  014CBC  06DE               	decf	postinc2,f,c
 24927  014CBE  0E00               	movlw	0
 24928  014CC0  5ADD               	subwfb	postdec2,f,c
 24929  014CC2                     l8024:
 24930                           
 24931                           ;stkvar	_b @ sp[(-13)+-4]
 24932  014CC2  0EF1               	movlw	-15
 24933  014CC4  AEE3               	btfss	plusw1,7,c
 24934  014CC6  D7DC               	goto	l8014
 24935                           
 24936                           ;stkvar	_aexp @ sp[(-13)+10]
 24937  014CC8  0EFD               	movlw	-3
 24938  014CCA  6AE3               	clrf	plusw1,c
 24939                           
 24940                           ;stkvar	_grs @ sp[(-13)+0]
 24941  014CCC  0EF6               	movlw	-10
 24942  014CCE  AEE3               	btfss	plusw1,7,c
 24943  014CD0  D020               	goto	l8038
 24944                           
 24945                           ;stkvar	_grs @ sp[(-13)+0]
 24946  014CD2  50E1               	movf	fsr1l,w,c
 24947  014CD4  0FF3               	addlw	-13
 24948  014CD6  6ED9               	movwf	fsr2l,c
 24949  014CD8  50E2               	movf	fsr1h,w,c
 24950  014CDA  6EDA               	movwf	fsr2h,c
 24951  014CDC  0EFF               	movlw	255
 24952  014CDE  22DA               	addwfc	fsr2h,f,c
 24953  014CE0  0EFF               	movlw	255
 24954  014CE2  14DE               	andwf	postinc2,w,c
 24955  014CE4  6E09               	movwf	(btemp+8)^0,c
 24956  014CE6  0EFF               	movlw	255
 24957  014CE8  14DE               	andwf	postinc2,w,c
 24958  014CEA  6E0A               	movwf	(btemp+9)^0,c
 24959  014CEC  0EFF               	movlw	255
 24960  014CEE  14DE               	andwf	postinc2,w,c
 24961  014CF0  6E0B               	movwf	(btemp+10)^0,c
 24962  014CF2  0E7F               	movlw	127
 24963  014CF4  14DE               	andwf	postinc2,w,c
 24964  014CF6  6E0C               	movwf	(btemp+11)^0,c
 24965  014CF8  5009               	movf	(btemp+8)^0,w,c
 24966  014CFA  100A               	iorwf	(btemp+9)^0,w,c
 24967  014CFC  100B               	iorwf	(btemp+10)^0,w,c
 24968  014CFE  100C               	iorwf	(btemp+11)^0,w,c
 24969  014D00  B4D8               	btfsc	status,2,c
 24970  014D02  D004               	goto	l8034
 24971  014D04                     u6420:
 24972                           
 24973                           ;stkvar	_aexp @ sp[(-13)+10]
 24974  014D04  0EFD               	movlw	-3
 24975  014D06  6AE3               	clrf	plusw1,c
 24976  014D08  2AE3               	incf	plusw1,f,c
 24977  014D0A  D003               	goto	l8038
 24978  014D0C                     l8034:
 24979                           
 24980                           ;stkvar	_b @ sp[(-13)+-4]
 24981  014D0C  0EEF               	movlw	-17
 24982  014D0E  B0E3               	btfsc	plusw1,0,c
 24983  014D10  D7F9               	goto	u6420
 24984  014D12                     l8038:
 24985                           
 24986                           ;stkvar	_aexp @ sp[(-13)+10]
 24987  014D12  0EFD               	movlw	-3
 24988  014D14  50E3               	movf	plusw1,w,c
 24989  014D16  B4D8               	btfsc	status,2,c
 24990  014D18  D036               	goto	l8048
 24991                           
 24992                           ;stkvar	_b @ sp[(-13)+-4]
 24993  014D1A  50E1               	movf	fsr1l,w,c
 24994  014D1C  0FEF               	addlw	-17
 24995  014D1E  6ED9               	movwf	fsr2l,c
 24996  014D20  50E2               	movf	fsr1h,w,c
 24997  014D22  6EDA               	movwf	fsr2h,c
 24998  014D24  0EFF               	movlw	255
 24999  014D26  22DA               	addwfc	fsr2h,f,c
 25000  014D28  2ADE               	incf	postinc2,f,c
 25001  014D2A  0E00               	movlw	0
 25002  014D2C  22DE               	addwfc	postinc2,f,c
 25003  014D2E  22DE               	addwfc	postinc2,f,c
 25004  014D30  22DE               	addwfc	postinc2,f,c
 25005                           
 25006                           ;stkvar	_b @ sp[(-13)+-4]
 25007  014D32  0EF2               	movlw	-14
 25008  014D34  A0E3               	btfss	plusw1,0,c
 25009  014D36  D027               	goto	l8048
 25010  014D38  0E01               	movlw	1
 25011  014D3A  6E0C               	movwf	(btemp+11)^0,c
 25012                           
 25013                           ;stkvar	_b @ sp[(-13)+-4]
 25014  014D3C  50E1               	movf	fsr1l,w,c
 25015  014D3E  0FEF               	addlw	-17
 25016  014D40  6ED9               	movwf	fsr2l,c
 25017  014D42  50E2               	movf	fsr1h,w,c
 25018  014D44  6EDA               	movwf	fsr2h,c
 25019  014D46  0EFF               	movlw	255
 25020  014D48  22DA               	addwfc	fsr2h,f,c
 25021  014D4A  280C               	incf	(btemp+11)^0,w,c
 25022  014D4C  52DE               	movf	postinc2,f,c
 25023  014D4E  D008               	goto	u6460
 25024  014D50                     u6465:
 25025  014D50  52DE               	movf	postinc2,f,c
 25026  014D52  90D8               	bcf	status,0,c
 25027  014D54  BEDC               	btfsc	preinc2,7,c
 25028  014D56  80D8               	bsf	status,0,c
 25029  014D58  32DD               	rrcf	postdec2,f,c
 25030  014D5A  32DD               	rrcf	postdec2,f,c
 25031  014D5C  32DD               	rrcf	postdec2,f,c
 25032  014D5E  32DE               	rrcf	postinc2,f,c
 25033  014D60                     u6460:
 25034  014D60  2EE8               	decfsz	wreg,f,c
 25035  014D62  D7F6               	goto	u6465
 25036                           
 25037                           ;stkvar	_new_exp @ sp[(-13)+8]
 25038  014D64  0EFB               	movlw	-5
 25039  014D66  50E3               	movf	plusw1,w,c
 25040  014D68  0F01               	addlw	1
 25041  014D6A  6E01               	movwf	btemp^0,c
 25042  014D6C  0EFB               	movlw	-5
 25043  014D6E  0060  F007  FFE3   	movff	btemp,plusw1
 25044  014D74  6A01               	clrf	btemp^0,c
 25045  014D76  0EFC               	movlw	-4
 25046  014D78  50E3               	movf	plusw1,w,c
 25047  014D7A  2001               	addwfc	btemp^0,w,c
 25048  014D7C  6E01               	movwf	btemp^0,c
 25049  014D7E  0EFC               	movlw	-4
 25050  014D80  0060  F007  FFE3   	movff	btemp,plusw1
 25051  014D86                     l8048:
 25052                           
 25053                           ;stkvar	_new_exp @ sp[(-13)+8]
 25054  014D86  0EFC               	movlw	-4
 25055  014D88  BEE3               	btfsc	plusw1,7,c
 25056  014D8A  D01B               	goto	l8054
 25057  014D8C  0EFC               	movlw	-4
 25058  014D8E  50E3               	movf	plusw1,w,c
 25059  014D90  E104               	bnz	u6470
 25060  014D92  0EFB               	movlw	-5
 25061  014D94  28E3               	incf	plusw1,w,c
 25062  014D96  A0D8               	btfss	status,0,c
 25063  014D98  D014               	goto	l8054
 25064  014D9A                     u6470:
 25065  014D9A  0EFF               	movlw	255
 25066  014D9C  6E0B               	movwf	(btemp+10)^0,c
 25067  014D9E  0E00               	movlw	0
 25068  014DA0  6E0C               	movwf	(btemp+11)^0,c
 25069                           
 25070                           ;stkvar	_new_exp @ sp[(-13)+8]
 25071  014DA2  0EFB               	movlw	-5
 25072  014DA4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25073  014DAA  0EFC               	movlw	-4
 25074  014DAC  0060  F033  FFE3   	movff	btemp+11,plusw1
 25075                           
 25076                           ;stkvar	_b @ sp[(-13)+-4]
 25077  014DB2  0EEF               	movlw	-17
 25078  014DB4  6AE3               	clrf	plusw1,c
 25079  014DB6  0EF0               	movlw	-16
 25080  014DB8  6AE3               	clrf	plusw1,c
 25081  014DBA  0EF1               	movlw	-15
 25082  014DBC  6AE3               	clrf	plusw1,c
 25083  014DBE  0EF2               	movlw	-14
 25084  014DC0  6AE3               	clrf	plusw1,c
 25085  014DC2                     l8054:
 25086                           
 25087                           ;stkvar	_new_exp @ sp[(-13)+8]
 25088  014DC2  0EFC               	movlw	-4
 25089  014DC4  BEE3               	btfsc	plusw1,7,c
 25090  014DC6  D007               	goto	u6480
 25091  014DC8  0EFC               	movlw	-4
 25092  014DCA  50E3               	movf	plusw1,w,c
 25093  014DCC  E112               	bnz	l8060
 25094  014DCE  0EFB               	movlw	-5
 25095  014DD0  04E3               	decf	plusw1,w,c
 25096  014DD2  B0D8               	btfsc	status,0,c
 25097  014DD4  D00E               	goto	l8060
 25098  014DD6                     u6480:
 25099                           
 25100                           ;stkvar	_new_exp @ sp[(-13)+8]
 25101  014DD6  0EFB               	movlw	-5
 25102  014DD8  6AE3               	clrf	plusw1,c
 25103  014DDA  0EFC               	movlw	-4
 25104  014DDC  6AE3               	clrf	plusw1,c
 25105                           
 25106                           ;stkvar	_b @ sp[(-13)+-4]
 25107  014DDE  0EEF               	movlw	-17
 25108  014DE0  6AE3               	clrf	plusw1,c
 25109  014DE2  0EF0               	movlw	-16
 25110  014DE4  6AE3               	clrf	plusw1,c
 25111  014DE6  0EF1               	movlw	-15
 25112  014DE8  6AE3               	clrf	plusw1,c
 25113  014DEA  0EF2               	movlw	-14
 25114  014DEC  6AE3               	clrf	plusw1,c
 25115                           
 25116                           ;stkvar	_sign @ sp[(-13)+12]
 25117  014DEE  0EFF               	movlw	-1
 25118  014DF0  6AE3               	clrf	plusw1,c
 25119  014DF2                     l8060:
 25120                           
 25121                           ;stkvar	_new_exp @ sp[(-13)+8]
 25122                           ;stkvar	_bexp @ sp[(-13)+11]
 25123  014DF2  0EFB               	movlw	-5
 25124  014DF4  006F FF8C  F001    	movff	plusw1,btemp
 25125  014DFA  0EFE               	movlw	-2
 25126  014DFC  0060  F007  FFE3   	movff	btemp,plusw1
 25127                           
 25128                           ;stkvar	_bexp @ sp[(-13)+11]
 25129  014E02  0EFE               	movlw	-2
 25130  014E04  A0E3               	btfss	plusw1,0,c
 25131  014E06  D009               	goto	l8066
 25132                           
 25133                           ;stkvar	_b @ sp[(-13)+-4]
 25134  014E08  0EF1               	movlw	241
 25135  014E0A  24E1               	addwf	fsr1l,w,c
 25136  014E0C  6ED9               	movwf	fsr2l,c
 25137  014E0E  0EFF               	movlw	255
 25138  014E10  20E2               	addwfc	fsr1h,w,c
 25139  014E12  6EDA               	movwf	fsr2h,c
 25140  014E14  0E00               	movlw	0
 25141  014E16  8EDB               	bsf	plusw2,7,c
 25142  014E18  D008               	goto	l8068
 25143  014E1A                     l8066:
 25144                           
 25145                           ;stkvar	_b @ sp[(-13)+-4]
 25146  014E1A  0EF1               	movlw	241
 25147  014E1C  24E1               	addwf	fsr1l,w,c
 25148  014E1E  6ED9               	movwf	fsr2l,c
 25149  014E20  0EFF               	movlw	255
 25150  014E22  20E2               	addwfc	fsr1h,w,c
 25151  014E24  6EDA               	movwf	fsr2h,c
 25152  014E26  0E7F               	movlw	127
 25153  014E28  16DF               	andwf	indf2,f,c
 25154  014E2A                     l8068:
 25155                           
 25156                           ;stkvar	_b @ sp[(-13)+-4]
 25157  014E2A  0EF2               	movlw	242
 25158  014E2C  24E1               	addwf	fsr1l,w,c
 25159  014E2E  6ED9               	movwf	fsr2l,c
 25160  014E30  0EFF               	movlw	255
 25161  014E32  20E2               	addwfc	fsr1h,w,c
 25162  014E34  6EDA               	movwf	fsr2h,c
 25163                           
 25164                           ;stkvar	_bexp @ sp[(-13)+11]
 25165  014E36  0EFE               	movlw	-2
 25166  014E38  006F FF8C  F00C    	movff	plusw1,btemp+11
 25167  014E3E  90D8               	bcf	status,0,c
 25168  014E40  300C               	rrcf	(btemp+11)^0,w,c
 25169  014E42  6EDF               	movwf	indf2,c
 25170  014E44  D644               	goto	l7966
 25171  014E46                     l2937:
 25172                           
 25173                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 25174  014E46  0EEB               	movlw	235
 25175  014E48  26E1               	addwf	fsr1l,f,c
 25176  014E4A  0EFF               	movlw	255
 25177  014E4C  22E2               	addwfc	fsr1h,f,c
 25178  014E4E  0012               	return		;funcret
 25179  014E50                     __end_of___fldiv:
 25180                           	opt callstack 0
 25181                           
 25182 ;; *************** function ___flge *****************
 25183 ;; Defined at:
 25184 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 25185 ;; Parameters:    Size  Location     Type
 25186 ;;  ff1             4  [STACK] unsigned char 
 25187 ;;  ff2             4  [STACK] unsigned char 
 25188 ;; Auto vars:     Size  Location     Type
 25189 ;;		None
 25190 ;; Return value:  Size  Location     Type
 25191 ;;		None               void
 25192 ;; Registers used:
 25193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 25194 ;; Tracked objects:
 25195 ;;		On entry : 0/0
 25196 ;;		On exit  : 0/0
 25197 ;;		Unchanged: 0/0
 25198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25203 ;;Total ram usage:        0 bytes
 25204 ;; Hardware stack levels used:    1
 25205 ;; Hardware stack levels required when called:   15
 25206 ;; This function calls:
 25207 ;;		Nothing
 25208 ;; This function is called by:
 25209 ;;		_main
 25210 ;;		_calc_ror_data
 25211 ;;		_calc_bsoc
 25212 ;;		_efgtoa
 25213 ;; This function uses a reentrant model
 25214 ;;
 25215                           
 25216                           	psect	text99
 25217  018704                     __ptext99:
 25218                           	opt callstack 0
 25219  018704                     ___flge:
 25220                           	opt callstack 0
 25221                           
 25222                           ;stkvar	_ff1 @ sp[(0)+-4]
 25223                           
 25224                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25225                           ;incstack = 0
 25226 ;; hardware stack exceeded
 25227  018704  50E1               	movf	fsr1l,w,c
 25228  018706  0FFC               	addlw	-4
 25229  018708  6ED9               	movwf	fsr2l,c
 25230  01870A  50E2               	movf	fsr1h,w,c
 25231  01870C  6EDA               	movwf	fsr2h,c
 25232  01870E  0EFF               	movlw	255
 25233  018710  22DA               	addwfc	fsr2h,f,c
 25234  018712  0E00               	movlw	0
 25235  018714  14DE               	andwf	postinc2,w,c
 25236  018716  6E09               	movwf	(btemp+8)^0,c
 25237  018718  0E00               	movlw	0
 25238  01871A  14DE               	andwf	postinc2,w,c
 25239  01871C  6E0A               	movwf	(btemp+9)^0,c
 25240  01871E  0E80               	movlw	128
 25241  018720  14DE               	andwf	postinc2,w,c
 25242  018722  6E0B               	movwf	(btemp+10)^0,c
 25243  018724  0E7F               	movlw	127
 25244  018726  14DE               	andwf	postinc2,w,c
 25245  018728  6E0C               	movwf	(btemp+11)^0,c
 25246  01872A  5009               	movf	(btemp+8)^0,w,c
 25247  01872C  100A               	iorwf	(btemp+9)^0,w,c
 25248  01872E  100B               	iorwf	(btemp+10)^0,w,c
 25249  018730  100C               	iorwf	(btemp+11)^0,w,c
 25250  018732  A4D8               	btfss	status,2,c
 25251  018734  D008               	goto	l8342
 25252                           
 25253                           ;stkvar	_ff1 @ sp[(0)+-4]
 25254  018736  0EFC               	movlw	-4
 25255  018738  6AE3               	clrf	plusw1,c
 25256  01873A  0EFD               	movlw	-3
 25257  01873C  6AE3               	clrf	plusw1,c
 25258  01873E  0EFE               	movlw	-2
 25259  018740  6AE3               	clrf	plusw1,c
 25260  018742  0EFF               	movlw	-1
 25261  018744  6AE3               	clrf	plusw1,c
 25262  018746                     l8342:
 25263                           
 25264                           ;stkvar	_ff2 @ sp[(0)+-8]
 25265  018746  50E1               	movf	fsr1l,w,c
 25266  018748  0FF8               	addlw	-8
 25267  01874A  6ED9               	movwf	fsr2l,c
 25268  01874C  50E2               	movf	fsr1h,w,c
 25269  01874E  6EDA               	movwf	fsr2h,c
 25270  018750  0EFF               	movlw	255
 25271  018752  22DA               	addwfc	fsr2h,f,c
 25272  018754  0E00               	movlw	0
 25273  018756  14DE               	andwf	postinc2,w,c
 25274  018758  6E09               	movwf	(btemp+8)^0,c
 25275  01875A  0E00               	movlw	0
 25276  01875C  14DE               	andwf	postinc2,w,c
 25277  01875E  6E0A               	movwf	(btemp+9)^0,c
 25278  018760  0E80               	movlw	128
 25279  018762  14DE               	andwf	postinc2,w,c
 25280  018764  6E0B               	movwf	(btemp+10)^0,c
 25281  018766  0E7F               	movlw	127
 25282  018768  14DE               	andwf	postinc2,w,c
 25283  01876A  6E0C               	movwf	(btemp+11)^0,c
 25284  01876C  5009               	movf	(btemp+8)^0,w,c
 25285  01876E  100A               	iorwf	(btemp+9)^0,w,c
 25286  018770  100B               	iorwf	(btemp+10)^0,w,c
 25287  018772  100C               	iorwf	(btemp+11)^0,w,c
 25288  018774  A4D8               	btfss	status,2,c
 25289  018776  D008               	goto	l2618
 25290                           
 25291                           ;stkvar	_ff2 @ sp[(0)+-8]
 25292  018778  0EF8               	movlw	-8
 25293  01877A  6AE3               	clrf	plusw1,c
 25294  01877C  0EF9               	movlw	-7
 25295  01877E  6AE3               	clrf	plusw1,c
 25296  018780  0EFA               	movlw	-6
 25297  018782  6AE3               	clrf	plusw1,c
 25298  018784  0EFB               	movlw	-5
 25299  018786  6AE3               	clrf	plusw1,c
 25300  018788                     l2618:
 25301                           
 25302                           ;stkvar	_ff1 @ sp[(0)+-4]
 25303  018788  0EFF               	movlw	-1
 25304  01878A  AEE3               	btfss	plusw1,7,c
 25305  01878C  D024               	goto	l8348
 25306                           
 25307                           ;stkvar	_ff1 @ sp[(0)+-4]
 25308  01878E  0E00               	movlw	0
 25309  018790  6E09               	movwf	(btemp+8)^0,c
 25310  018792  0E00               	movlw	0
 25311  018794  6E0A               	movwf	(btemp+9)^0,c
 25312  018796  0E00               	movlw	0
 25313  018798  6E0B               	movwf	(btemp+10)^0,c
 25314  01879A  0E80               	movlw	128
 25315  01879C  6E0C               	movwf	(btemp+11)^0,c
 25316  01879E  0EFC               	movlw	-4
 25317  0187A0  50E3               	movf	plusw1,w,c
 25318  0187A2  5E09               	subwf	(btemp+8)^0,f,c
 25319  0187A4  0EFD               	movlw	-3
 25320  0187A6  50E3               	movf	plusw1,w,c
 25321  0187A8  5A0A               	subwfb	(btemp+9)^0,f,c
 25322  0187AA  0EFE               	movlw	-2
 25323  0187AC  50E3               	movf	plusw1,w,c
 25324  0187AE  5A0B               	subwfb	(btemp+10)^0,f,c
 25325  0187B0  0EFF               	movlw	-1
 25326  0187B2  50E3               	movf	plusw1,w,c
 25327  0187B4  5A0C               	subwfb	(btemp+11)^0,f,c
 25328                           
 25329                           ;stkvar	_ff1 @ sp[(0)+-4]
 25330  0187B6  0EFC               	movlw	-4
 25331  0187B8  0060  F027  FFE3   	movff	btemp+8,plusw1
 25332  0187BE  0EFD               	movlw	-3
 25333  0187C0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25334  0187C6  0EFE               	movlw	-2
 25335  0187C8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25336  0187CE  0EFF               	movlw	-1
 25337  0187D0  0060  F033  FFE3   	movff	btemp+11,plusw1
 25338  0187D6                     l8348:
 25339                           
 25340                           ;stkvar	_ff2 @ sp[(0)+-8]
 25341  0187D6  0EFB               	movlw	-5
 25342  0187D8  AEE3               	btfss	plusw1,7,c
 25343  0187DA  D024               	goto	l8352
 25344                           
 25345                           ;stkvar	_ff2 @ sp[(0)+-8]
 25346  0187DC  0E00               	movlw	0
 25347  0187DE  6E09               	movwf	(btemp+8)^0,c
 25348  0187E0  0E00               	movlw	0
 25349  0187E2  6E0A               	movwf	(btemp+9)^0,c
 25350  0187E4  0E00               	movlw	0
 25351  0187E6  6E0B               	movwf	(btemp+10)^0,c
 25352  0187E8  0E80               	movlw	128
 25353  0187EA  6E0C               	movwf	(btemp+11)^0,c
 25354  0187EC  0EF8               	movlw	-8
 25355  0187EE  50E3               	movf	plusw1,w,c
 25356  0187F0  5E09               	subwf	(btemp+8)^0,f,c
 25357  0187F2  0EF9               	movlw	-7
 25358  0187F4  50E3               	movf	plusw1,w,c
 25359  0187F6  5A0A               	subwfb	(btemp+9)^0,f,c
 25360  0187F8  0EFA               	movlw	-6
 25361  0187FA  50E3               	movf	plusw1,w,c
 25362  0187FC  5A0B               	subwfb	(btemp+10)^0,f,c
 25363  0187FE  0EFB               	movlw	-5
 25364  018800  50E3               	movf	plusw1,w,c
 25365  018802  5A0C               	subwfb	(btemp+11)^0,f,c
 25366                           
 25367                           ;stkvar	_ff2 @ sp[(0)+-8]
 25368  018804  0EF8               	movlw	-8
 25369  018806  0060  F027  FFE3   	movff	btemp+8,plusw1
 25370  01880C  0EF9               	movlw	-7
 25371  01880E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25372  018814  0EFA               	movlw	-6
 25373  018816  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25374  01881C  0EFB               	movlw	-5
 25375  01881E  0060  F033  FFE3   	movff	btemp+11,plusw1
 25376  018824                     l8352:
 25377                           
 25378                           ;stkvar	_ff1 @ sp[(0)+-4]
 25379  018824  0EFF               	movlw	-1
 25380  018826  7EE3               	btg	plusw1,7,c
 25381                           
 25382                           ;stkvar	_ff2 @ sp[(0)+-8]
 25383  018828  0EFB               	movlw	-5
 25384  01882A  7EE3               	btg	plusw1,7,c
 25385                           
 25386                           ;stkvar	_ff2 @ sp[(0)+-8]
 25387                           ;stkvar	_ff1 @ sp[(0)+-4]
 25388  01882C  50E1               	movf	fsr1l,w,c
 25389  01882E  0FFC               	addlw	-4
 25390  018830  6ED9               	movwf	fsr2l,c
 25391  018832  50E2               	movf	fsr1h,w,c
 25392  018834  6EDA               	movwf	fsr2h,c
 25393  018836  0EFF               	movlw	255
 25394  018838  22DA               	addwfc	fsr2h,f,c
 25395  01883A  0EF8               	movlw	-8
 25396  01883C  50E3               	movf	plusw1,w,c
 25397  01883E  5CDE               	subwf	postinc2,w,c
 25398  018840  0EF9               	movlw	-7
 25399  018842  50E3               	movf	plusw1,w,c
 25400  018844  58DE               	subwfb	postinc2,w,c
 25401  018846  0EFA               	movlw	-6
 25402  018848  50E3               	movf	plusw1,w,c
 25403  01884A  58DE               	subwfb	postinc2,w,c
 25404  01884C  0EFB               	movlw	-5
 25405  01884E  50E3               	movf	plusw1,w,c
 25406  018850  58DE               	subwfb	postinc2,w,c
 25407  018852  B0D8               	btfsc	status,0,c
 25408  018854  D002               	goto	l8360
 25409  018856  9001               	bcf	btemp& (0+255),0,c
 25410  018858  D001               	goto	l2625
 25411  01885A                     l8360:
 25412  01885A  8001               	bsf	btemp& (0+255),0,c
 25413  01885C                     l2625:
 25414                           
 25415                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 25416  01885C  0EF8               	movlw	248
 25417  01885E  26E1               	addwf	fsr1l,f,c
 25418  018860  0EFF               	movlw	255
 25419  018862  22E2               	addwfc	fsr1h,f,c
 25420  018864  0012               	return		;funcret
 25421  018866                     __end_of___flge:
 25422                           	opt callstack 0
 25423                           
 25424 ;; *************** function _calc_model_data *****************
 25425 ;; Defined at:
 25426 ;;		line 67 in file "mbmc.c"
 25427 ;; Parameters:    Size  Location     Type
 25428 ;;		None
 25429 ;; Auto vars:     Size  Location     Type
 25430 ;;		None
 25431 ;; Return value:  Size  Location     Type
 25432 ;;                  1  [STACK] void 
 25433 ;; Registers used:
 25434 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25435 ;; Tracked objects:
 25436 ;;		On entry : 0/0
 25437 ;;		On exit  : 3F/1
 25438 ;;		Unchanged: 0/0
 25439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25444 ;;Total ram usage:        0 bytes
 25445 ;; Hardware stack levels used:    1
 25446 ;; Hardware stack levels required when called:   18
 25447 ;; This function calls:
 25448 ;;		___fladd
 25449 ;;		___flmul
 25450 ;;		___flsub
 25451 ;;		_lp_filter
 25452 ;;		_start_bsoc
 25453 ;;		_stop_bsoc
 25454 ;; This function is called by:
 25455 ;;		_main
 25456 ;; This function uses a reentrant model
 25457 ;;
 25458                           
 25459                           	psect	text100
 25460  015B36                     __ptext100:
 25461                           	opt callstack 0
 25462  015B36                     _calc_model_data:
 25463                           	opt callstack 12
 25464                           
 25465                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 25466                           
 25467                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25468                           ;incstack = 0
 25469  015B36  EC96  F0DB         	call	_stop_bsoc	;wreg free
 25470                           
 25471                           ; BSR set to: 57
 25472                           ;mbmc.c: 72:  if (!V.calib) {
 25473  015B3A  0102               	movlb	2	; () banked
 25474  015B3C  51AC               	movf	(_V+172)& (0+255),w,b	;volatile
 25475  015B3E  A4D8               	btfss	status,2,c
 25476  015B40  D1C5               	goto	l10708
 25477                           
 25478                           ; BSR set to: 2
 25479                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 25480  015B42  C100  F144         	movff	_C,_C+68	;volatile
 25481  015B46  C101  F145         	movff	_C+1,_C+69	;volatile
 25482  015B4A  C102  F146         	movff	_C+2,_C+70	;volatile
 25483  015B4E  C103  F147         	movff	_C+3,_C+71	;volatile
 25484                           
 25485                           ; BSR set to: 2
 25486                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 25487  015B52  0060  F23B  FFE6   	movff	calc_model_data@bcror,postinc1
 25488  015B58  0060  F23F  FFE6   	movff	calc_model_data@bcror+1,postinc1
 25489  015B5E  0060  F243  FFE6   	movff	calc_model_data@bcror+2,postinc1
 25490  015B64  0060  F247  FFE6   	movff	calc_model_data@bcror+3,postinc1
 25491  015B6A  0060  F513  FFE6   	movff	_C+68,postinc1
 25492  015B70  0060  F517  FFE6   	movff	_C+69,postinc1
 25493  015B76  0060  F51B  FFE6   	movff	_C+70,postinc1
 25494  015B7C  0060  F51F  FFE6   	movff	_C+71,postinc1
 25495  015B82  EC51  F0D5         	call	___flsub	;wreg free
 25496  015B86  0060  F004  F16C   	movff	btemp,_C+108	;volatile
 25497  015B8C  0060  F008  F16D   	movff	btemp+1,_C+109	;volatile
 25498  015B92  0060  F00C  F16E   	movff	btemp+2,_C+110	;volatile
 25499  015B98  0060  F010  F16F   	movff	btemp+3,_C+111	;volatile
 25500                           
 25501                           ;mbmc.c: 75:   bcror = C.c_bat;
 25502  015B9E  C144  F08E         	movff	_C+68,calc_model_data@bcror	;volatile
 25503  015BA2  C145  F08F         	movff	_C+69,calc_model_data@bcror+1	;volatile
 25504  015BA6  C146  F090         	movff	_C+70,calc_model_data@bcror+2	;volatile
 25505  015BAA  C147  F091         	movff	_C+71,calc_model_data@bcror+3	;volatile
 25506                           
 25507                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 25508  015BAE  C104  F148         	movff	_C+4,_C+72	;volatile
 25509  015BB2  C105  F149         	movff	_C+5,_C+73	;volatile
 25510  015BB6  C106  F14A         	movff	_C+6,_C+74	;volatile
 25511  015BBA  C107  F14B         	movff	_C+7,_C+75	;volatile
 25512                           
 25513                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 25514  015BBE  C110  F154         	movff	_C+16,_C+84	;volatile
 25515  015BC2  C111  F155         	movff	_C+17,_C+85	;volatile
 25516  015BC6  C112  F156         	movff	_C+18,_C+86	;volatile
 25517  015BCA  C113  F157         	movff	_C+19,_C+87	;volatile
 25518                           
 25519                           ;mbmc.c: 78:   C.bv_ror = C.v_bat - bvror;
 25520  015BCE  0060  F24B  FFE6   	movff	calc_model_data@bvror,postinc1
 25521  015BD4  0060  F24F  FFE6   	movff	calc_model_data@bvror+1,postinc1
 25522  015BDA  0060  F253  FFE6   	movff	calc_model_data@bvror+2,postinc1
 25523  015BE0  0060  F257  FFE6   	movff	calc_model_data@bvror+3,postinc1
 25524  015BE6  0060  F553  FFE6   	movff	_C+84,postinc1
 25525  015BEC  0060  F557  FFE6   	movff	_C+85,postinc1
 25526  015BF2  0060  F55B  FFE6   	movff	_C+86,postinc1
 25527  015BF8  0060  F55F  FFE6   	movff	_C+87,postinc1
 25528  015BFE  EC51  F0D5         	call	___flsub	;wreg free
 25529  015C02  0060  F004  F168   	movff	btemp,_C+104	;volatile
 25530  015C08  0060  F008  F169   	movff	btemp+1,_C+105	;volatile
 25531  015C0E  0060  F00C  F16A   	movff	btemp+2,_C+106	;volatile
 25532  015C14  0060  F010  F16B   	movff	btemp+3,_C+107	;volatile
 25533                           
 25534                           ;mbmc.c: 79:   bvror = C.v_bat;
 25535  015C1A  C154  F092         	movff	_C+84,calc_model_data@bvror	;volatile
 25536  015C1E  C155  F093         	movff	_C+85,calc_model_data@bvror+1	;volatile
 25537  015C22  C156  F094         	movff	_C+86,calc_model_data@bvror+2	;volatile
 25538  015C26  C157  F095         	movff	_C+87,calc_model_data@bvror+3	;volatile
 25539                           
 25540                           ;mbmc.c: 80:   C.v_pv = C.calc[V_PV];
 25541  015C2A  C114  F150         	movff	_C+20,_C+80	;volatile
 25542  015C2E  C115  F151         	movff	_C+21,_C+81	;volatile
 25543  015C32  C116  F152         	movff	_C+22,_C+82	;volatile
 25544  015C36  C117  F153         	movff	_C+23,_C+83	;volatile
 25545                           
 25546                           ;mbmc.c: 81:   C.v_cc = C.calc[V_CC];
 25547  015C3A  C108  F14C         	movff	_C+8,_C+76	;volatile
 25548  015C3E  C109  F14D         	movff	_C+9,_C+77	;volatile
 25549  015C42  C10A  F14E         	movff	_C+10,_C+78	;volatile
 25550  015C46  C10B  F14F         	movff	_C+11,_C+79	;volatile
 25551                           
 25552                           ;mbmc.c: 82:   C.v_inverter = C.calc[V_INVERTER];
 25553  015C4A  C130  F164         	movff	_C+48,_C+100	;volatile
 25554  015C4E  C131  F165         	movff	_C+49,_C+101	;volatile
 25555  015C52  C132  F166         	movff	_C+50,_C+102	;volatile
 25556  015C56  C133  F167         	movff	_C+51,_C+103	;volatile
 25557                           
 25558                           ;mbmc.c: 83:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 25559  015C5A  0E01               	movlw	1
 25560  015C5C  6EE6               	movwf	postinc1,c
 25561  015C5E  0E10               	movlw	16
 25562  015C60  6EE6               	movwf	postinc1,c
 25563  015C62  0060  F403  FFE6   	movff	_C,postinc1
 25564  015C68  0060  F407  FFE6   	movff	_C+1,postinc1
 25565  015C6E  0060  F40B  FFE6   	movff	_C+2,postinc1
 25566  015C74  0060  F40F  FFE6   	movff	_C+3,postinc1
 25567  015C7A  0060  F413  FFE6   	movff	_C+4,postinc1
 25568  015C80  0060  F417  FFE6   	movff	_C+5,postinc1
 25569  015C86  0060  F41B  FFE6   	movff	_C+6,postinc1
 25570  015C8C  0060  F41F  FFE6   	movff	_C+7,postinc1
 25571  015C92  EC51  F0D5         	call	___flsub	;wreg free
 25572  015C96  0060  F007  FFE6   	movff	btemp,postinc1
 25573  015C9C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25574  015CA2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25575  015CA8  0060  F013  FFE6   	movff	btemp+3,postinc1
 25576  015CAE  ECEE  F0BE         	call	_lp_filter	;wreg free
 25577  015CB2  0060  F004  F140   	movff	btemp,_C+64	;volatile
 25578  015CB8  0060  F008  F141   	movff	btemp+1,_C+65	;volatile
 25579  015CBE  0060  F00C  F142   	movff	btemp+2,_C+66	;volatile
 25580  015CC4  0060  F010  F143   	movff	btemp+3,_C+67	;volatile
 25581                           
 25582                           ;mbmc.c: 84:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 25583  015CCA  0E01               	movlw	1
 25584  015CCC  6EE6               	movwf	postinc1,c
 25585  015CCE  0E11               	movlw	17
 25586  015CD0  6EE6               	movwf	postinc1,c
 25587  015CD2  0060  F553  FFE6   	movff	_C+84,postinc1
 25588  015CD8  0060  F557  FFE6   	movff	_C+85,postinc1
 25589  015CDE  0060  F55B  FFE6   	movff	_C+86,postinc1
 25590  015CE4  0060  F55F  FFE6   	movff	_C+87,postinc1
 25591  015CEA  0060  F503  FFE6   	movff	_C+64,postinc1
 25592  015CF0  0060  F507  FFE6   	movff	_C+65,postinc1
 25593  015CF6  0060  F50B  FFE6   	movff	_C+66,postinc1
 25594  015CFC  0060  F50F  FFE6   	movff	_C+67,postinc1
 25595  015D02  ECED  F098         	call	___flmul	;wreg free
 25596  015D06  0060  F007  FFE6   	movff	btemp,postinc1
 25597  015D0C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25598  015D12  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25599  015D18  0060  F013  FFE6   	movff	btemp+3,postinc1
 25600  015D1E  ECEE  F0BE         	call	_lp_filter	;wreg free
 25601  015D22  0060  F004  F170   	movff	btemp,_C+112	;volatile
 25602  015D28  0060  F008  F171   	movff	btemp+1,_C+113	;volatile
 25603  015D2E  0060  F00C  F172   	movff	btemp+2,_C+114	;volatile
 25604  015D34  0060  F010  F173   	movff	btemp+3,_C+115	;volatile
 25605                           
 25606                           ;mbmc.c: 85:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 25607  015D3A  0E01               	movlw	1
 25608  015D3C  6EE6               	movwf	postinc1,c
 25609  015D3E  0E12               	movlw	18
 25610  015D40  6EE6               	movwf	postinc1,c
 25611  015D42  0060  F543  FFE6   	movff	_C+80,postinc1
 25612  015D48  0060  F547  FFE6   	movff	_C+81,postinc1
 25613  015D4E  0060  F54B  FFE6   	movff	_C+82,postinc1
 25614  015D54  0060  F54F  FFE6   	movff	_C+83,postinc1
 25615  015D5A  0060  F523  FFE6   	movff	_C+72,postinc1
 25616  015D60  0060  F527  FFE6   	movff	_C+73,postinc1
 25617  015D66  0060  F52B  FFE6   	movff	_C+74,postinc1
 25618  015D6C  0060  F52F  FFE6   	movff	_C+75,postinc1
 25619  015D72  ECED  F098         	call	___flmul	;wreg free
 25620  015D76  0060  F007  FFE6   	movff	btemp,postinc1
 25621  015D7C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25622  015D82  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25623  015D88  0060  F013  FFE6   	movff	btemp+3,postinc1
 25624  015D8E  ECEE  F0BE         	call	_lp_filter	;wreg free
 25625  015D92  0060  F004  F178   	movff	btemp,_C+120	;volatile
 25626  015D98  0060  F008  F179   	movff	btemp+1,_C+121	;volatile
 25627  015D9E  0060  F00C  F17A   	movff	btemp+2,_C+122	;volatile
 25628  015DA4  0060  F010  F17B   	movff	btemp+3,_C+123	;volatile
 25629                           
 25630                           ;mbmc.c: 86:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 25631  015DAA  0E01               	movlw	1
 25632  015DAC  6EE6               	movwf	postinc1,c
 25633  015DAE  0E13               	movlw	19
 25634  015DB0  6EE6               	movwf	postinc1,c
 25635  015DB2  0E00               	movlw	0
 25636  015DB4  6EE6               	movwf	postinc1,c
 25637  015DB6  0E00               	movlw	0
 25638  015DB8  6EE6               	movwf	postinc1,c
 25639  015DBA  0E60               	movlw	96
 25640  015DBC  6EE6               	movwf	postinc1,c
 25641  015DBE  0EC1               	movlw	193
 25642  015DC0  6EE6               	movwf	postinc1,c
 25643  015DC2  0060  F593  FFE6   	movff	_C+100,postinc1
 25644  015DC8  0060  F597  FFE6   	movff	_C+101,postinc1
 25645  015DCE  0060  F59B  FFE6   	movff	_C+102,postinc1
 25646  015DD4  0060  F59F  FFE6   	movff	_C+103,postinc1
 25647  015DDA  0060  F503  FFE6   	movff	_C+64,postinc1
 25648  015DE0  0060  F507  FFE6   	movff	_C+65,postinc1
 25649  015DE6  0060  F50B  FFE6   	movff	_C+66,postinc1
 25650  015DEC  0060  F50F  FFE6   	movff	_C+67,postinc1
 25651  015DF2  ECED  F098         	call	___flmul	;wreg free
 25652  015DF6  0060  F007  FFE6   	movff	btemp,postinc1
 25653  015DFC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25654  015E02  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25655  015E08  0060  F013  FFE6   	movff	btemp+3,postinc1
 25656  015E0E  EC02  F09D         	call	___fladd	;wreg free
 25657  015E12  0060  F007  FFE6   	movff	btemp,postinc1
 25658  015E18  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25659  015E1E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25660  015E24  0060  F013  FFE6   	movff	btemp+3,postinc1
 25661  015E2A  ECEE  F0BE         	call	_lp_filter	;wreg free
 25662  015E2E  0060  F004  F174   	movff	btemp,_C+116	;volatile
 25663  015E34  0060  F008  F175   	movff	btemp+1,_C+117	;volatile
 25664  015E3A  0060  F00C  F176   	movff	btemp+2,_C+118	;volatile
 25665  015E40  0060  F010  F177   	movff	btemp+3,_C+119	;volatile
 25666                           
 25667                           ;mbmc.c: 87:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 25668  015E46  0E01               	movlw	1
 25669  015E48  6EE6               	movwf	postinc1,c
 25670  015E4A  0E14               	movlw	20
 25671  015E4C  6EE6               	movwf	postinc1,c
 25672  015E4E  0060  F553  FFE6   	movff	_C+84,postinc1
 25673  015E54  0060  F557  FFE6   	movff	_C+85,postinc1
 25674  015E5A  0060  F55B  FFE6   	movff	_C+86,postinc1
 25675  015E60  0060  F55F  FFE6   	movff	_C+87,postinc1
 25676  015E66  0060  F513  FFE6   	movff	_C+68,postinc1
 25677  015E6C  0060  F517  FFE6   	movff	_C+69,postinc1
 25678  015E72  0060  F51B  FFE6   	movff	_C+70,postinc1
 25679  015E78  0060  F51F  FFE6   	movff	_C+71,postinc1
 25680  015E7E  ECED  F098         	call	___flmul	;wreg free
 25681  015E82  0060  F007  FFE6   	movff	btemp,postinc1
 25682  015E88  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25683  015E8E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25684  015E94  0060  F013  FFE6   	movff	btemp+3,postinc1
 25685  015E9A  ECEE  F0BE         	call	_lp_filter	;wreg free
 25686  015E9E  0060  F004  F17C   	movff	btemp,_C+124	;volatile
 25687  015EA4  0060  F008  F17D   	movff	btemp+1,_C+125	;volatile
 25688  015EAA  0060  F00C  F17E   	movff	btemp+2,_C+126	;volatile
 25689  015EB0  0060  F010  F17F   	movff	btemp+3,_C+127	;volatile
 25690                           
 25691                           ;mbmc.c: 91:   if (C.p_inverter < 0.0)
 25692  015EB6  0101               	movlb	1	; () banked
 25693  015EB8  AF77               	btfss	(_C+119)& (0+255),7,b	;volatile
 25694  015EBA  D008               	goto	l10708
 25695                           
 25696                           ; BSR set to: 1
 25697                           ;mbmc.c: 92:    C.p_inverter = 0.0001;
 25698  015EBC  0E17               	movlw	23
 25699  015EBE  6F74               	movwf	(_C+116)& (0+255),b	;volatile
 25700  015EC0  0EB7               	movlw	183
 25701  015EC2  6F75               	movwf	(_C+117)& (0+255),b	;volatile
 25702  015EC4  0ED1               	movlw	209
 25703  015EC6  6F76               	movwf	(_C+118)& (0+255),b	;volatile
 25704  015EC8  0E38               	movlw	56
 25705  015ECA  6F77               	movwf	(_C+119)& (0+255),b	;volatile
 25706  015ECC                     l10708:
 25707                           
 25708                           ;mbmc.c: 94:  start_bsoc();
 25709  015ECC  EC38  F0DA         	call	_start_bsoc	;wreg free
 25710                           
 25711                           ; BSR set to: 57
 25712                           ;mbmc.c: 95:  C.update = 1;
 25713  015ED0  0E01               	movlw	1
 25714  015ED2  0101               	movlb	1	; () banked
 25715  015ED4  6FB0               	movwf	(_C+176)& (0+255),b	;volatile
 25716                           
 25717                           ; BSR set to: 1
 25718                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25719  015ED6  0012               	return		;funcret
 25720  015ED8                     __end_of_calc_model_data:
 25721                           	opt callstack 0
 25722                           
 25723 ;; *************** function _stop_bsoc *****************
 25724 ;; Defined at:
 25725 ;;		line 108 in file "bsoc.c"
 25726 ;; Parameters:    Size  Location     Type
 25727 ;;		None
 25728 ;; Auto vars:     Size  Location     Type
 25729 ;;		None
 25730 ;; Return value:  Size  Location     Type
 25731 ;;                  1  [STACK] void 
 25732 ;; Registers used:
 25733 ;;		None
 25734 ;; Tracked objects:
 25735 ;;		On entry : 0/0
 25736 ;;		On exit  : 3F/39
 25737 ;;		Unchanged: 0/0
 25738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25743 ;;Total ram usage:        0 bytes
 25744 ;; Hardware stack levels used:    1
 25745 ;; Hardware stack levels required when called:   15
 25746 ;; This function calls:
 25747 ;;		Nothing
 25748 ;; This function is called by:
 25749 ;;		_calc_model_data
 25750 ;; This function uses a reentrant model
 25751 ;;
 25752                           
 25753                           	psect	text101
 25754  01B72C                     __ptext101:
 25755                           	opt callstack 0
 25756  01B72C                     _stop_bsoc:
 25757                           	opt callstack 14
 25758                           
 25759                           ;bsoc.c: 111:  PIE6bits.TMR3IE = 0;
 25760                           
 25761                           ; BSR set to: 1
 25762                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25763                           ;incstack = 0
 25764  01B72C  0139               	movlb	57	; () banked
 25765  01B72E  9D96               	bcf	150,6,b	;volatile
 25766                           
 25767                           ; BSR set to: 57
 25768                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 25769  01B730  0012               	return		;funcret
 25770  01B732                     __end_of_stop_bsoc:
 25771                           	opt callstack 0
 25772                           
 25773 ;; *************** function _start_bsoc *****************
 25774 ;; Defined at:
 25775 ;;		line 99 in file "bsoc.c"
 25776 ;; Parameters:    Size  Location     Type
 25777 ;;		None
 25778 ;; Auto vars:     Size  Location     Type
 25779 ;;		None
 25780 ;; Return value:  Size  Location     Type
 25781 ;;                  1  [STACK] void 
 25782 ;; Registers used:
 25783 ;;		wreg, status,2, status,0, btemp+11
 25784 ;; Tracked objects:
 25785 ;;		On entry : 3C/2
 25786 ;;		On exit  : 3F/39
 25787 ;;		Unchanged: 0/0
 25788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25793 ;;Total ram usage:        0 bytes
 25794 ;; Hardware stack levels used:    1
 25795 ;; Hardware stack levels required when called:   15
 25796 ;; This function calls:
 25797 ;;		Nothing
 25798 ;; This function is called by:
 25799 ;;		_calc_model_data
 25800 ;; This function uses a reentrant model
 25801 ;;
 25802                           
 25803                           	psect	text102
 25804  01B470                     __ptext102:
 25805                           	opt callstack 0
 25806  01B470                     _start_bsoc:
 25807                           	opt callstack 14
 25808                           
 25809                           ;bsoc.c: 102:  PIE6bits.TMR3IE = 1;
 25810                           
 25811                           ; BSR set to: 57
 25812                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25813                           ;incstack = 0
 25814  01B470  0139               	movlb	57	; () banked
 25815  01B472  8D96               	bsf	150,6,b	;volatile
 25816                           
 25817                           ; BSR set to: 57
 25818  01B474  A4BE               	btfss	190,2,c	;volatile
 25819  01B476  D002               	goto	u9290
 25820  01B478  0E01               	movlw	1
 25821  01B47A  D001               	goto	u9296
 25822  01B47C                     u9290:
 25823  01B47C  0E00               	movlw	0
 25824  01B47E                     u9296:
 25825  01B47E  0AFF               	xorlw	255
 25826  01B480  6E0C               	movwf	(btemp+11)^0,c
 25827  01B482  460C               	rlncf	(btemp+11)^0,f,c
 25828  01B484  460C               	rlncf	(btemp+11)^0,f,c
 25829  01B486  50BE               	movf	190,w,c	;volatile
 25830  01B488  180C               	xorwf	(btemp+11)^0,w,c
 25831  01B48A  0BFB               	andlw	-5
 25832  01B48C  180C               	xorwf	(btemp+11)^0,w,c
 25833  01B48E  6EBE               	movwf	190,c	;volatile
 25834                           
 25835                           ; BSR set to: 57
 25836                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 25837  01B490  0012               	return		;funcret
 25838  01B492                     __end_of_start_bsoc:
 25839                           	opt callstack 0
 25840                           
 25841 ;; *************** function _lp_filter *****************
 25842 ;; Defined at:
 25843 ;;		line 29 in file "mbmc.c"
 25844 ;; Parameters:    Size  Location     Type
 25845 ;;  new             4  [STACK] const float 
 25846 ;;  bn              1  [STACK] const unsigned char 
 25847 ;;  slow            1  [STACK] const char 
 25848 ;; Auto vars:     Size  Location     Type
 25849 ;;  lp_speed        4  [STACK] float 
 25850 ;; Return value:  Size  Location     Type
 25851 ;;                  4  [STACK] float 
 25852 ;; Registers used:
 25853 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25854 ;; Tracked objects:
 25855 ;;		On entry : 0/2
 25856 ;;		On exit  : 0/0
 25857 ;;		Unchanged: 0/0
 25858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25863 ;;Total ram usage:        0 bytes
 25864 ;; Hardware stack levels used:    1
 25865 ;; Hardware stack levels required when called:   17
 25866 ;; This function calls:
 25867 ;;		___fladd
 25868 ;;		___flmul
 25869 ;;		___flsub
 25870 ;; This function is called by:
 25871 ;;		_main
 25872 ;;		_convert_adc_data
 25873 ;;		_calc_model_data
 25874 ;; This function uses a reentrant model
 25875 ;;
 25876                           
 25877                           	psect	text103
 25878  017DDC                     __ptext103:
 25879                           	opt callstack 0
 25880  017DDC                     _lp_filter:
 25881                           	opt callstack 0
 25882                           
 25883                           ; BSR set to: 57
 25884                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25885  017DDC  52E6               	movf	postinc1,f,c
 25886  017DDE  52E6               	movf	postinc1,f,c
 25887  017DE0  52E6               	movf	postinc1,f,c
 25888  017DE2  52E6               	movf	postinc1,f,c
 25889                           
 25890                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 25891                           ;stkvar	_bn @ sp[(-4)+-5]
 25892                           
 25893                           ;incstack = 0
 25894  017DE4  0EF7               	movlw	-9
 25895  017DE6  006F FF8C  F001    	movff	plusw1,btemp
 25896  017DEC  0E14               	movlw	20
 25897  017DEE  6401               	cpfsgt	btemp^0,c
 25898  017DF0  D011               	goto	l10098
 25899  017DF2                     u9200:
 25900                           
 25901                           ;mbmc.c: 35:   return new;
 25902                           ;stkvar	_new @ sp[(-4)+-4]
 25903  017DF2  0EF8               	movlw	-8
 25904  017DF4  006F FF8C  F001    	movff	plusw1,btemp
 25905  017DFA  0EF9               	movlw	-7
 25906  017DFC  006F FF8C  F002    	movff	plusw1,btemp+1
 25907  017E02  0EFA               	movlw	-6
 25908  017E04  006F FF8C  F003    	movff	plusw1,btemp+2
 25909  017E0A  0EFB               	movlw	-5
 25910  017E0C  006F FF8C  F004    	movff	plusw1,btemp+3
 25911  017E12  D0BD               	goto	l1823
 25912  017E14                     l10098:
 25913                           
 25914                           ;mbmc.c: 37:  if (slow == (-1)) {
 25915                           ;stkvar	_slow @ sp[(-4)+-6]
 25916  017E14  0EF6               	movlw	-10
 25917  017E16  28E3               	incf	plusw1,w,c
 25918  017E18  A4D8               	btfss	status,2,c
 25919  017E1A  D012               	goto	l10106
 25920                           
 25921                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 25922                           ;stkvar	_bn @ sp[(-4)+-5]
 25923  017E1C  0EF7               	movlw	-9
 25924  017E1E  50E3               	movf	plusw1,w,c
 25925  017E20  0D04               	mullw	4
 25926  017E22  0E00               	movlw	low lp_filter@smooth
 25927  017E24  24F3               	addwf	243,w,c
 25928  017E26  6ED9               	movwf	fsr2l,c
 25929  017E28  0E03               	movlw	high lp_filter@smooth
 25930  017E2A  20F4               	addwfc	prodh,w,c
 25931  017E2C  6EDA               	movwf	fsr2h,c
 25932  017E2E  0E00               	movlw	0
 25933  017E30  6EDE               	movwf	postinc2,c
 25934  017E32  0E00               	movlw	0
 25935  017E34  6EDE               	movwf	postinc2,c
 25936  017E36  0E00               	movlw	0
 25937  017E38  6EDE               	movwf	postinc2,c
 25938  017E3A  0E00               	movlw	0
 25939  017E3C  6EDD               	movwf	postdec2,c
 25940  017E3E  D7D9               	goto	u9200
 25941  017E40                     l10106:
 25942                           
 25943                           ;mbmc.c: 42:  if (slow) {
 25944                           ;stkvar	_slow @ sp[(-4)+-6]
 25945  017E40  0EF6               	movlw	-10
 25946  017E42  50E3               	movf	plusw1,w,c
 25947  017E44  B4D8               	btfsc	status,2,c
 25948  017E46  D006               	goto	l10110
 25949                           
 25950                           ;mbmc.c: 43:   lp_speed = 0.033;
 25951  017E48  0E02               	movlw	2
 25952  017E4A  6E09               	movwf	(btemp+8)^0,c
 25953  017E4C  0E2B               	movlw	43
 25954  017E4E  6E0A               	movwf	(btemp+9)^0,c
 25955  017E50  0E07               	movlw	7
 25956  017E52  D005               	goto	L29
 25957  017E54                     l10110:
 25958                           
 25959                           ;mbmc.c: 45:   lp_speed = 0.066;
 25960  017E54  0E02               	movlw	2
 25961  017E56  6E09               	movwf	(btemp+8)^0,c
 25962  017E58  0E2B               	movlw	43
 25963  017E5A  6E0A               	movwf	(btemp+9)^0,c
 25964  017E5C  0E87               	movlw	135
 25965  017E5E                     L29:
 25966  017E5E  6E0B               	movwf	(btemp+10)^0,c
 25967  017E60  0E3D               	movlw	61
 25968  017E62  6E0C               	movwf	(btemp+11)^0,c
 25969                           
 25970                           ;stkvar	_lp_speed @ sp[(-4)+0]
 25971  017E64  0EFC               	movlw	-4
 25972  017E66  0060  F027  FFE3   	movff	btemp+8,plusw1
 25973  017E6C  0EFD               	movlw	-3
 25974  017E6E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25975  017E74  0EFE               	movlw	-2
 25976  017E76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25977  017E7C  0EFF               	movlw	-1
 25978  017E7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 25979                           
 25980                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 25981                           ;stkvar	_bn @ sp[(-4)+-5]
 25982  017E84  0EF7               	movlw	-9
 25983  017E86  50E3               	movf	plusw1,w,c
 25984  017E88  0D04               	mullw	4
 25985  017E8A  0E00               	movlw	low lp_filter@smooth
 25986  017E8C  24F3               	addwf	243,w,c
 25987  017E8E  6ED9               	movwf	fsr2l,c
 25988  017E90  0E03               	movlw	high lp_filter@smooth
 25989  017E92  20F4               	addwfc	prodh,w,c
 25990  017E94  6EDA               	movwf	fsr2h,c
 25991  017E96  006F FF7B FFE6     	movff	postinc2,postinc1
 25992  017E9C  006F FF7B FFE6     	movff	postinc2,postinc1
 25993  017EA2  006F FF7B FFE6     	movff	postinc2,postinc1
 25994  017EA8  006F FF7B FFE6     	movff	postinc2,postinc1
 25995                           
 25996                           ;stkvar	_lp_speed @ sp[(-8)+0]
 25997  017EAE  0EF8               	movlw	-8
 25998  017EB0  006F FF8F FFE6     	movff	plusw1,postinc1
 25999  017EB6  006F FF8F FFE6     	movff	plusw1,postinc1
 26000  017EBC  006F FF8F FFE6     	movff	plusw1,postinc1
 26001  017EC2  006F FF8F FFE6     	movff	plusw1,postinc1
 26002                           
 26003                           ;stkvar	_bn @ sp[(-12)+-5]
 26004  017EC8  0EEF               	movlw	-17
 26005  017ECA  50E3               	movf	plusw1,w,c
 26006  017ECC  0D04               	mullw	4
 26007  017ECE  0E00               	movlw	low lp_filter@smooth
 26008  017ED0  24F3               	addwf	243,w,c
 26009  017ED2  6ED9               	movwf	fsr2l,c
 26010  017ED4  0E03               	movlw	high lp_filter@smooth
 26011  017ED6  20F4               	addwfc	prodh,w,c
 26012  017ED8  6EDA               	movwf	fsr2h,c
 26013  017EDA  006F FF7B FFE6     	movff	postinc2,postinc1
 26014  017EE0  006F FF7B FFE6     	movff	postinc2,postinc1
 26015  017EE6  006F FF7B FFE6     	movff	postinc2,postinc1
 26016  017EEC  006F FF7B FFE6     	movff	postinc2,postinc1
 26017                           
 26018                           ;stkvar	_new @ sp[(-16)+-4]
 26019  017EF2  0EEC               	movlw	-20
 26020  017EF4  006F FF8F FFE6     	movff	plusw1,postinc1
 26021  017EFA  006F FF8F FFE6     	movff	plusw1,postinc1
 26022  017F00  006F FF8F FFE6     	movff	plusw1,postinc1
 26023  017F06  006F FF8F FFE6     	movff	plusw1,postinc1
 26024  017F0C  EC51  F0D5         	call	___flsub	;wreg free
 26025  017F10  0060  F007  FFE6   	movff	btemp,postinc1
 26026  017F16  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26027  017F1C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26028  017F22  0060  F013  FFE6   	movff	btemp+3,postinc1
 26029  017F28  ECED  F098         	call	___flmul	;wreg free
 26030  017F2C  0060  F007  FFE6   	movff	btemp,postinc1
 26031  017F32  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26032  017F38  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26033  017F3E  0060  F013  FFE6   	movff	btemp+3,postinc1
 26034  017F44  EC02  F09D         	call	___fladd	;wreg free
 26035                           
 26036                           ;stkvar	_bn @ sp[(-4)+-5]
 26037  017F48  0EF7               	movlw	-9
 26038  017F4A  50E3               	movf	plusw1,w,c
 26039  017F4C  0D04               	mullw	4
 26040  017F4E  0E00               	movlw	low lp_filter@smooth
 26041  017F50  24F3               	addwf	243,w,c
 26042  017F52  6ED9               	movwf	fsr2l,c
 26043  017F54  0E03               	movlw	high lp_filter@smooth
 26044  017F56  20F4               	addwfc	prodh,w,c
 26045  017F58  6EDA               	movwf	fsr2h,c
 26046  017F5A  0060  F007  FFDE   	movff	btemp,postinc2
 26047  017F60  0060  F00B  FFDE   	movff	btemp+1,postinc2
 26048  017F66  0060  F00F  FFDE   	movff	btemp+2,postinc2
 26049  017F6C  0060  F013  FFDD   	movff	btemp+3,postdec2
 26050  017F72  52DD               	movf	postdec2,f,c
 26051  017F74  52DD               	movf	postdec2,f,c
 26052  017F76  006F FF78  F001    	movff	postinc2,btemp
 26053  017F7C  006F FF78  F002    	movff	postinc2,btemp+1
 26054  017F82  006F FF78  F003    	movff	postinc2,btemp+2
 26055  017F88  006F FF78  F004    	movff	postinc2,btemp+3
 26056  017F8E                     l1823:
 26057                           
 26058                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 26059  017F8E  0EF6               	movlw	246
 26060  017F90  26E1               	addwf	fsr1l,f,c
 26061  017F92  0EFF               	movlw	255
 26062  017F94  22E2               	addwfc	fsr1h,f,c
 26063  017F96  0012               	return		;funcret
 26064  017F98                     __end_of_lp_filter:
 26065                           	opt callstack 0
 26066                           
 26067 ;; *************** function ___flsub *****************
 26068 ;; Defined at:
 26069 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26070 ;; Parameters:    Size  Location     Type
 26071 ;;  b               4  [STACK] float 
 26072 ;;  a               4  [STACK] float 
 26073 ;; Auto vars:     Size  Location     Type
 26074 ;;		None
 26075 ;; Return value:  Size  Location     Type
 26076 ;;                  4  [STACK] float 
 26077 ;; Registers used:
 26078 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26079 ;; Tracked objects:
 26080 ;;		On entry : 0/0
 26081 ;;		On exit  : 0/0
 26082 ;;		Unchanged: 0/0
 26083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26088 ;;Total ram usage:        0 bytes
 26089 ;; Hardware stack levels used:    1
 26090 ;; Hardware stack levels required when called:   16
 26091 ;; This function calls:
 26092 ;;		___fladd
 26093 ;; This function is called by:
 26094 ;;		_conv_raw_result
 26095 ;;		_lp_filter
 26096 ;;		_calc_model_data
 26097 ;;		_calc_ror_data
 26098 ;;		_esr_check
 26099 ;;		_efgtoa
 26100 ;; This function uses a reentrant model
 26101 ;;
 26102                           
 26103                           	psect	text104
 26104  01AAA2                     __ptext104:
 26105                           	opt callstack 0
 26106  01AAA2                     ___flsub:
 26107                           	opt callstack 0
 26108                           
 26109                           ;stkvar	_a @ sp[(0)+-8]
 26110                           
 26111                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26112                           ;incstack = 0
 26113 ;; hardware stack exceeded
 26114  01AAA2  0EFB               	movlw	-5
 26115  01AAA4  7EE3               	btg	plusw1,7,c
 26116                           
 26117                           ;stkvar	_a @ sp[(0)+-8]
 26118  01AAA6  0EF8               	movlw	-8
 26119  01AAA8  006F FF8F FFE6     	movff	plusw1,postinc1
 26120  01AAAE  006F FF8F FFE6     	movff	plusw1,postinc1
 26121  01AAB4  006F FF8F FFE6     	movff	plusw1,postinc1
 26122  01AABA  006F FF8F FFE6     	movff	plusw1,postinc1
 26123                           
 26124                           ;stkvar	_b @ sp[(-4)+-4]
 26125  01AAC0  0EF8               	movlw	-8
 26126  01AAC2  006F FF8F FFE6     	movff	plusw1,postinc1
 26127  01AAC8  006F FF8F FFE6     	movff	plusw1,postinc1
 26128  01AACE  006F FF8F FFE6     	movff	plusw1,postinc1
 26129  01AAD4  006F FF8F FFE6     	movff	plusw1,postinc1
 26130  01AADA  EC02  F09D         	call	___fladd	;wreg free
 26131                           
 26132                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 26133  01AADE  0EF8               	movlw	248
 26134  01AAE0  26E1               	addwf	fsr1l,f,c
 26135  01AAE2  0EFF               	movlw	255
 26136  01AAE4  22E2               	addwfc	fsr1h,f,c
 26137  01AAE6  0012               	return		;funcret
 26138  01AAE8                     __end_of___flsub:
 26139                           	opt callstack 0
 26140                           
 26141 ;; *************** function ___fladd *****************
 26142 ;; Defined at:
 26143 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26144 ;; Parameters:    Size  Location     Type
 26145 ;;  b               4  [STACK] float 
 26146 ;;  a               4  [STACK] float 
 26147 ;; Auto vars:     Size  Location     Type
 26148 ;;  grs             1  [STACK] unsigned char 
 26149 ;;  bexp            1  [STACK] unsigned char 
 26150 ;;  aexp            1  [STACK] unsigned char 
 26151 ;;  signs           1  [STACK] unsigned char 
 26152 ;; Return value:  Size  Location     Type
 26153 ;;                  4  [STACK] unsigned char 
 26154 ;; Registers used:
 26155 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26156 ;; Tracked objects:
 26157 ;;		On entry : 0/0
 26158 ;;		On exit  : 0/0
 26159 ;;		Unchanged: 0/0
 26160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26165 ;;Total ram usage:        0 bytes
 26166 ;; Hardware stack levels used:    1
 26167 ;; Hardware stack levels required when called:   15
 26168 ;; This function calls:
 26169 ;;		Nothing
 26170 ;; This function is called by:
 26171 ;;		_main
 26172 ;;		_lp_filter
 26173 ;;		_calc_model_data
 26174 ;;		_calc_bsoc
 26175 ;;		_efgtoa
 26176 ;;		___flsub
 26177 ;; This function uses a reentrant model
 26178 ;;
 26179                           
 26180                           	psect	text105
 26181  013A04                     __ptext105:
 26182                           	opt callstack 0
 26183  013A04                     ___fladd:
 26184                           	opt callstack 0
 26185                           
 26186                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26187  013A04  52E6               	movf	postinc1,f,c
 26188  013A06  52E6               	movf	postinc1,f,c
 26189  013A08  52E6               	movf	postinc1,f,c
 26190  013A0A  52E6               	movf	postinc1,f,c
 26191                           
 26192                           ;stkvar	_b @ sp[(-4)+-4]
 26193                           
 26194                           ;incstack = 0
 26195 ;; hardware stack exceeded
 26196  013A0C  0EFB               	movlw	251
 26197  013A0E  24E1               	addwf	fsr1l,w,c
 26198  013A10  6ED9               	movwf	fsr2l,c
 26199  013A12  0EFF               	movlw	255
 26200  013A14  20E2               	addwfc	fsr1h,w,c
 26201  013A16  6EDA               	movwf	fsr2h,c
 26202  013A18  50DF               	movf	indf2,w,c
 26203  013A1A  6E0C               	movwf	(btemp+11)^0,c
 26204  013A1C  0E80               	movlw	128
 26205  013A1E  160C               	andwf	(btemp+11)^0,f,c
 26206                           
 26207                           ;stkvar	_signs @ sp[(-4)+3]
 26208  013A20  0EFF               	movlw	-1
 26209  013A22  0060  F033  FFE3   	movff	btemp+11,plusw1
 26210                           
 26211                           ;stkvar	_b @ sp[(-4)+-4]
 26212  013A28  0EFB               	movlw	251
 26213  013A2A  24E1               	addwf	fsr1l,w,c
 26214  013A2C  6ED9               	movwf	fsr2l,c
 26215  013A2E  0EFF               	movlw	255
 26216  013A30  20E2               	addwfc	fsr1h,w,c
 26217  013A32  6EDA               	movwf	fsr2h,c
 26218  013A34  50DF               	movf	indf2,w,c
 26219  013A36  6E0C               	movwf	(btemp+11)^0,c
 26220  013A38  90D8               	bcf	status,0,c
 26221  013A3A  340C               	rlcf	(btemp+11)^0,w,c
 26222  013A3C  6E0B               	movwf	(btemp+10)^0,c
 26223                           
 26224                           ;stkvar	_bexp @ sp[(-4)+1]
 26225  013A3E  0EFD               	movlw	-3
 26226  013A40  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26227                           
 26228                           ;stkvar	_b @ sp[(-4)+-4]
 26229  013A46  0EFA               	movlw	250
 26230  013A48  24E1               	addwf	fsr1l,w,c
 26231  013A4A  6ED9               	movwf	fsr2l,c
 26232  013A4C  0EFF               	movlw	255
 26233  013A4E  20E2               	addwfc	fsr1h,w,c
 26234  013A50  6EDA               	movwf	fsr2h,c
 26235  013A52  AEDF               	btfss	indf2,7,c
 26236  013A54  D002               	goto	l7492
 26237                           
 26238                           ;stkvar	_bexp @ sp[(-4)+1]
 26239  013A56  0EFD               	movlw	-3
 26240  013A58  80E3               	bsf	plusw1,0,c
 26241  013A5A                     l7492:
 26242                           
 26243                           ;stkvar	_bexp @ sp[(-4)+1]
 26244  013A5A  0EFD               	movlw	-3
 26245  013A5C  50E3               	movf	plusw1,w,c
 26246  013A5E  B4D8               	btfsc	status,2,c
 26247  013A60  D027               	goto	l7502
 26248                           
 26249                           ;stkvar	_bexp @ sp[(-4)+1]
 26250  013A62  0EFD               	movlw	-3
 26251  013A64  28E3               	incf	plusw1,w,c
 26252  013A66  A4D8               	btfss	status,2,c
 26253  013A68  D018               	goto	l7498
 26254  013A6A  0E00               	movlw	0
 26255  013A6C  6E09               	movwf	(btemp+8)^0,c
 26256  013A6E  0E00               	movlw	0
 26257  013A70  6E0A               	movwf	(btemp+9)^0,c
 26258  013A72  0E00               	movlw	0
 26259  013A74  6E0B               	movwf	(btemp+10)^0,c
 26260  013A76  0E00               	movlw	0
 26261  013A78  6E0C               	movwf	(btemp+11)^0,c
 26262                           
 26263                           ;stkvar	_b @ sp[(-4)+-4]
 26264  013A7A  0EF8               	movlw	-8
 26265  013A7C  0060  F027  FFE3   	movff	btemp+8,plusw1
 26266  013A82  0EF9               	movlw	-7
 26267  013A84  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26268  013A8A  0EFA               	movlw	-6
 26269  013A8C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26270  013A92  0EFB               	movlw	-5
 26271  013A94  0060  F033  FFE3   	movff	btemp+11,plusw1
 26272  013A9A                     l7498:
 26273                           
 26274                           ;stkvar	_b @ sp[(-4)+-4]
 26275  013A9A  0EFA               	movlw	-6
 26276  013A9C  8EE3               	bsf	plusw1,7,c
 26277                           
 26278                           ;stkvar	_b @ sp[(-4)+-4]
 26279  013A9E  0EFB               	movlw	251
 26280  013AA0  24E1               	addwf	fsr1l,w,c
 26281  013AA2  6ED9               	movwf	fsr2l,c
 26282  013AA4  0EFF               	movlw	255
 26283  013AA6  20E2               	addwfc	fsr1h,w,c
 26284  013AA8  6EDA               	movwf	fsr2h,c
 26285  013AAA  0E00               	movlw	0
 26286  013AAC  6EDF               	movwf	indf2,c
 26287  013AAE  D018               	goto	l7504
 26288  013AB0                     l7502:
 26289  013AB0  0E00               	movlw	0
 26290  013AB2  6E09               	movwf	(btemp+8)^0,c
 26291  013AB4  0E00               	movlw	0
 26292  013AB6  6E0A               	movwf	(btemp+9)^0,c
 26293  013AB8  0E00               	movlw	0
 26294  013ABA  6E0B               	movwf	(btemp+10)^0,c
 26295  013ABC  0E00               	movlw	0
 26296  013ABE  6E0C               	movwf	(btemp+11)^0,c
 26297                           
 26298                           ;stkvar	_b @ sp[(-4)+-4]
 26299  013AC0  0EF8               	movlw	-8
 26300  013AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 26301  013AC8  0EF9               	movlw	-7
 26302  013ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26303  013AD0  0EFA               	movlw	-6
 26304  013AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26305  013AD8  0EFB               	movlw	-5
 26306  013ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 26307  013AE0                     l7504:
 26308                           
 26309                           ;stkvar	_a @ sp[(-4)+-8]
 26310  013AE0  0EF7               	movlw	247
 26311  013AE2  24E1               	addwf	fsr1l,w,c
 26312  013AE4  6ED9               	movwf	fsr2l,c
 26313  013AE6  0EFF               	movlw	255
 26314  013AE8  20E2               	addwfc	fsr1h,w,c
 26315  013AEA  6EDA               	movwf	fsr2h,c
 26316  013AEC  50DF               	movf	indf2,w,c
 26317  013AEE  6E0C               	movwf	(btemp+11)^0,c
 26318  013AF0  0E80               	movlw	128
 26319  013AF2  160C               	andwf	(btemp+11)^0,f,c
 26320                           
 26321                           ;stkvar	_aexp @ sp[(-4)+2]
 26322  013AF4  0EFE               	movlw	-2
 26323  013AF6  0060  F033  FFE3   	movff	btemp+11,plusw1
 26324                           
 26325                           ;stkvar	_signs @ sp[(-4)+3]
 26326                           ;stkvar	_aexp @ sp[(-4)+2]
 26327  013AFC  50E1               	movf	fsr1l,w,c
 26328  013AFE  0FFE               	addlw	-2
 26329  013B00  6ED9               	movwf	fsr2l,c
 26330  013B02  50E2               	movf	fsr1h,w,c
 26331  013B04  6EDA               	movwf	fsr2h,c
 26332  013B06  0EFF               	movlw	255
 26333  013B08  22DA               	addwfc	fsr2h,f,c
 26334  013B0A  0EFF               	movlw	-1
 26335  013B0C  50E3               	movf	plusw1,w,c
 26336  013B0E  18DE               	xorwf	postinc2,w,c
 26337  013B10  B4D8               	btfsc	status,2,c
 26338  013B12  D002               	goto	l7510
 26339                           
 26340                           ;stkvar	_signs @ sp[(-4)+3]
 26341  013B14  0EFF               	movlw	-1
 26342  013B16  8CE3               	bsf	plusw1,6,c
 26343  013B18                     l7510:
 26344                           
 26345                           ;stkvar	_a @ sp[(-4)+-8]
 26346  013B18  0EF7               	movlw	247
 26347  013B1A  24E1               	addwf	fsr1l,w,c
 26348  013B1C  6ED9               	movwf	fsr2l,c
 26349  013B1E  0EFF               	movlw	255
 26350  013B20  20E2               	addwfc	fsr1h,w,c
 26351  013B22  6EDA               	movwf	fsr2h,c
 26352  013B24  50DF               	movf	indf2,w,c
 26353  013B26  6E0C               	movwf	(btemp+11)^0,c
 26354  013B28  90D8               	bcf	status,0,c
 26355  013B2A  340C               	rlcf	(btemp+11)^0,w,c
 26356  013B2C  6E0B               	movwf	(btemp+10)^0,c
 26357                           
 26358                           ;stkvar	_aexp @ sp[(-4)+2]
 26359  013B2E  0EFE               	movlw	-2
 26360  013B30  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26361                           
 26362                           ;stkvar	_a @ sp[(-4)+-8]
 26363  013B36  0EF6               	movlw	246
 26364  013B38  24E1               	addwf	fsr1l,w,c
 26365  013B3A  6ED9               	movwf	fsr2l,c
 26366  013B3C  0EFF               	movlw	255
 26367  013B3E  20E2               	addwfc	fsr1h,w,c
 26368  013B40  6EDA               	movwf	fsr2h,c
 26369  013B42  AEDF               	btfss	indf2,7,c
 26370  013B44  D002               	goto	l7516
 26371                           
 26372                           ;stkvar	_aexp @ sp[(-4)+2]
 26373  013B46  0EFE               	movlw	-2
 26374  013B48  80E3               	bsf	plusw1,0,c
 26375  013B4A                     l7516:
 26376                           
 26377                           ;stkvar	_aexp @ sp[(-4)+2]
 26378  013B4A  0EFE               	movlw	-2
 26379  013B4C  50E3               	movf	plusw1,w,c
 26380  013B4E  B4D8               	btfsc	status,2,c
 26381  013B50  D027               	goto	l7526
 26382                           
 26383                           ;stkvar	_aexp @ sp[(-4)+2]
 26384  013B52  0EFE               	movlw	-2
 26385  013B54  28E3               	incf	plusw1,w,c
 26386  013B56  A4D8               	btfss	status,2,c
 26387  013B58  D018               	goto	l7522
 26388  013B5A  0E00               	movlw	0
 26389  013B5C  6E09               	movwf	(btemp+8)^0,c
 26390  013B5E  0E00               	movlw	0
 26391  013B60  6E0A               	movwf	(btemp+9)^0,c
 26392  013B62  0E00               	movlw	0
 26393  013B64  6E0B               	movwf	(btemp+10)^0,c
 26394  013B66  0E00               	movlw	0
 26395  013B68  6E0C               	movwf	(btemp+11)^0,c
 26396                           
 26397                           ;stkvar	_a @ sp[(-4)+-8]
 26398  013B6A  0EF4               	movlw	-12
 26399  013B6C  0060  F027  FFE3   	movff	btemp+8,plusw1
 26400  013B72  0EF5               	movlw	-11
 26401  013B74  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26402  013B7A  0EF6               	movlw	-10
 26403  013B7C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26404  013B82  0EF7               	movlw	-9
 26405  013B84  0060  F033  FFE3   	movff	btemp+11,plusw1
 26406  013B8A                     l7522:
 26407                           
 26408                           ;stkvar	_a @ sp[(-4)+-8]
 26409  013B8A  0EF6               	movlw	-10
 26410  013B8C  8EE3               	bsf	plusw1,7,c
 26411                           
 26412                           ;stkvar	_a @ sp[(-4)+-8]
 26413  013B8E  0EF7               	movlw	247
 26414  013B90  24E1               	addwf	fsr1l,w,c
 26415  013B92  6ED9               	movwf	fsr2l,c
 26416  013B94  0EFF               	movlw	255
 26417  013B96  20E2               	addwfc	fsr1h,w,c
 26418  013B98  6EDA               	movwf	fsr2h,c
 26419  013B9A  0E00               	movlw	0
 26420  013B9C  6EDF               	movwf	indf2,c
 26421  013B9E  D018               	goto	l7528
 26422  013BA0                     l7526:
 26423  013BA0  0E00               	movlw	0
 26424  013BA2  6E09               	movwf	(btemp+8)^0,c
 26425  013BA4  0E00               	movlw	0
 26426  013BA6  6E0A               	movwf	(btemp+9)^0,c
 26427  013BA8  0E00               	movlw	0
 26428  013BAA  6E0B               	movwf	(btemp+10)^0,c
 26429  013BAC  0E00               	movlw	0
 26430  013BAE  6E0C               	movwf	(btemp+11)^0,c
 26431                           
 26432                           ;stkvar	_a @ sp[(-4)+-8]
 26433  013BB0  0EF4               	movlw	-12
 26434  013BB2  0060  F027  FFE3   	movff	btemp+8,plusw1
 26435  013BB8  0EF5               	movlw	-11
 26436  013BBA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26437  013BC0  0EF6               	movlw	-10
 26438  013BC2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26439  013BC8  0EF7               	movlw	-9
 26440  013BCA  0060  F033  FFE3   	movff	btemp+11,plusw1
 26441  013BD0                     l7528:
 26442                           
 26443                           ;stkvar	_bexp @ sp[(-4)+1]
 26444                           ;stkvar	_aexp @ sp[(-4)+2]
 26445  013BD0  50E1               	movf	fsr1l,w,c
 26446  013BD2  0FFE               	addlw	-2
 26447  013BD4  6ED9               	movwf	fsr2l,c
 26448  013BD6  50E2               	movf	fsr1h,w,c
 26449  013BD8  6EDA               	movwf	fsr2h,c
 26450  013BDA  0EFF               	movlw	255
 26451  013BDC  22DA               	addwfc	fsr2h,f,c
 26452  013BDE  0EFD               	movlw	-3
 26453  013BE0  50E3               	movf	plusw1,w,c
 26454  013BE2  5CDE               	subwf	postinc2,w,c
 26455  013BE4  B0D8               	btfsc	status,0,c
 26456  013BE6  D0A4               	goto	l7564
 26457                           
 26458                           ;stkvar	_signs @ sp[(-4)+3]
 26459  013BE8  0EFF               	movlw	-1
 26460  013BEA  ACE3               	btfss	plusw1,6,c
 26461  013BEC  D002               	goto	l7534
 26462                           
 26463                           ;stkvar	_signs @ sp[(-4)+3]
 26464  013BEE  0EFF               	movlw	-1
 26465  013BF0  7EE3               	btg	plusw1,7,c
 26466  013BF2                     l7534:
 26467                           
 26468                           ;stkvar	_bexp @ sp[(-4)+1]
 26469                           ;stkvar	_grs @ sp[(-4)+0]
 26470  013BF2  0EFD               	movlw	-3
 26471  013BF4  006F FF8C  F001    	movff	plusw1,btemp
 26472  013BFA  0EFC               	movlw	-4
 26473  013BFC  0060  F007  FFE3   	movff	btemp,plusw1
 26474                           
 26475                           ;stkvar	_aexp @ sp[(-4)+2]
 26476                           ;stkvar	_bexp @ sp[(-4)+1]
 26477  013C02  0EFE               	movlw	-2
 26478  013C04  006F FF8C  F001    	movff	plusw1,btemp
 26479  013C0A  0EFD               	movlw	-3
 26480  013C0C  0060  F007  FFE3   	movff	btemp,plusw1
 26481                           
 26482                           ;stkvar	_grs @ sp[(-4)+0]
 26483                           ;stkvar	_aexp @ sp[(-4)+2]
 26484  013C12  0EFC               	movlw	-4
 26485  013C14  006F FF8C  F001    	movff	plusw1,btemp
 26486  013C1A  0EFE               	movlw	-2
 26487  013C1C  0060  F007  FFE3   	movff	btemp,plusw1
 26488                           
 26489                           ;stkvar	_b @ sp[(-4)+-4]
 26490                           ;stkvar	_grs @ sp[(-4)+0]
 26491  013C22  0EF8               	movlw	-8
 26492  013C24  006F FF8C  F001    	movff	plusw1,btemp
 26493  013C2A  0EFC               	movlw	-4
 26494  013C2C  0060  F007  FFE3   	movff	btemp,plusw1
 26495                           
 26496                           ;stkvar	_a @ sp[(-4)+-8]
 26497                           ;stkvar	_b @ sp[(-4)+-4]
 26498  013C32  0EF4               	movlw	-12
 26499  013C34  006F FF8C  F001    	movff	plusw1,btemp
 26500  013C3A  0EF8               	movlw	-8
 26501  013C3C  0060  F007  FFE3   	movff	btemp,plusw1
 26502                           
 26503                           ;stkvar	_grs @ sp[(-4)+0]
 26504                           ;stkvar	_a @ sp[(-4)+-8]
 26505  013C42  0EFC               	movlw	-4
 26506  013C44  006F FF8C  F001    	movff	plusw1,btemp
 26507  013C4A  0EF4               	movlw	-12
 26508  013C4C  0060  F007  FFE3   	movff	btemp,plusw1
 26509                           
 26510                           ;stkvar	_b @ sp[(-4)+-4]
 26511  013C52  0EF9               	movlw	249
 26512  013C54  24E1               	addwf	fsr1l,w,c
 26513  013C56  6ED9               	movwf	fsr2l,c
 26514  013C58  0EFF               	movlw	255
 26515  013C5A  20E2               	addwfc	fsr1h,w,c
 26516  013C5C  6EDA               	movwf	fsr2h,c
 26517  013C5E  50DF               	movf	indf2,w,c
 26518  013C60  6E0C               	movwf	(btemp+11)^0,c
 26519                           
 26520                           ;stkvar	_grs @ sp[(-4)+0]
 26521  013C62  0EFC               	movlw	-4
 26522  013C64  0060  F033  FFE3   	movff	btemp+11,plusw1
 26523                           
 26524                           ;stkvar	_a @ sp[(-4)+-8]
 26525  013C6A  0EF5               	movlw	245
 26526  013C6C  24E1               	addwf	fsr1l,w,c
 26527  013C6E  6ED9               	movwf	fsr2l,c
 26528  013C70  0EFF               	movlw	255
 26529  013C72  20E2               	addwfc	fsr1h,w,c
 26530  013C74  6EDA               	movwf	fsr2h,c
 26531                           
 26532                           ;stkvar	_b @ sp[(-4)+-4]
 26533  013C76  0EF9               	movlw	249
 26534  013C78  24E1               	addwf	fsr1l,w,c
 26535  013C7A  6EE9               	movwf	fsr0l,c
 26536  013C7C  0EFF               	movlw	255
 26537  013C7E  20E2               	addwfc	fsr1h,w,c
 26538  013C80  6EEA               	movwf	fsr0h,c
 26539  013C82  006F FF7F FFEF     	movff	indf2,indf0
 26540                           
 26541                           ;stkvar	_grs @ sp[(-4)+0]
 26542                           ;stkvar	_a @ sp[(-4)+-8]
 26543  013C88  0EF5               	movlw	245
 26544  013C8A  24E1               	addwf	fsr1l,w,c
 26545  013C8C  6ED9               	movwf	fsr2l,c
 26546  013C8E  0EFF               	movlw	255
 26547  013C90  20E2               	addwfc	fsr1h,w,c
 26548  013C92  6EDA               	movwf	fsr2h,c
 26549  013C94  0EFC               	movlw	-4
 26550  013C96  006F FF8F FFDF     	movff	plusw1,indf2
 26551                           
 26552                           ;stkvar	_b @ sp[(-4)+-4]
 26553  013C9C  0EFA               	movlw	250
 26554  013C9E  24E1               	addwf	fsr1l,w,c
 26555  013CA0  6ED9               	movwf	fsr2l,c
 26556  013CA2  0EFF               	movlw	255
 26557  013CA4  20E2               	addwfc	fsr1h,w,c
 26558  013CA6  6EDA               	movwf	fsr2h,c
 26559  013CA8  50DF               	movf	indf2,w,c
 26560  013CAA  6E0C               	movwf	(btemp+11)^0,c
 26561                           
 26562                           ;stkvar	_grs @ sp[(-4)+0]
 26563  013CAC  0EFC               	movlw	-4
 26564  013CAE  0060  F033  FFE3   	movff	btemp+11,plusw1
 26565                           
 26566                           ;stkvar	_a @ sp[(-4)+-8]
 26567  013CB4  0EF6               	movlw	246
 26568  013CB6  24E1               	addwf	fsr1l,w,c
 26569  013CB8  6ED9               	movwf	fsr2l,c
 26570  013CBA  0EFF               	movlw	255
 26571  013CBC  20E2               	addwfc	fsr1h,w,c
 26572  013CBE  6EDA               	movwf	fsr2h,c
 26573                           
 26574                           ;stkvar	_b @ sp[(-4)+-4]
 26575  013CC0  0EFA               	movlw	250
 26576  013CC2  24E1               	addwf	fsr1l,w,c
 26577  013CC4  6EE9               	movwf	fsr0l,c
 26578  013CC6  0EFF               	movlw	255
 26579  013CC8  20E2               	addwfc	fsr1h,w,c
 26580  013CCA  6EEA               	movwf	fsr0h,c
 26581  013CCC  006F FF7F FFEF     	movff	indf2,indf0
 26582                           
 26583                           ;stkvar	_grs @ sp[(-4)+0]
 26584                           ;stkvar	_a @ sp[(-4)+-8]
 26585  013CD2  0EF6               	movlw	246
 26586  013CD4  24E1               	addwf	fsr1l,w,c
 26587  013CD6  6ED9               	movwf	fsr2l,c
 26588  013CD8  0EFF               	movlw	255
 26589  013CDA  20E2               	addwfc	fsr1h,w,c
 26590  013CDC  6EDA               	movwf	fsr2h,c
 26591  013CDE  0EFC               	movlw	-4
 26592  013CE0  006F FF8F FFDF     	movff	plusw1,indf2
 26593                           
 26594                           ;stkvar	_b @ sp[(-4)+-4]
 26595  013CE6  0EFB               	movlw	251
 26596  013CE8  24E1               	addwf	fsr1l,w,c
 26597  013CEA  6ED9               	movwf	fsr2l,c
 26598  013CEC  0EFF               	movlw	255
 26599  013CEE  20E2               	addwfc	fsr1h,w,c
 26600  013CF0  6EDA               	movwf	fsr2h,c
 26601  013CF2  50DF               	movf	indf2,w,c
 26602  013CF4  6E0C               	movwf	(btemp+11)^0,c
 26603                           
 26604                           ;stkvar	_grs @ sp[(-4)+0]
 26605  013CF6  0EFC               	movlw	-4
 26606  013CF8  0060  F033  FFE3   	movff	btemp+11,plusw1
 26607                           
 26608                           ;stkvar	_a @ sp[(-4)+-8]
 26609  013CFE  0EF7               	movlw	247
 26610  013D00  24E1               	addwf	fsr1l,w,c
 26611  013D02  6ED9               	movwf	fsr2l,c
 26612  013D04  0EFF               	movlw	255
 26613  013D06  20E2               	addwfc	fsr1h,w,c
 26614  013D08  6EDA               	movwf	fsr2h,c
 26615                           
 26616                           ;stkvar	_b @ sp[(-4)+-4]
 26617  013D0A  0EFB               	movlw	251
 26618  013D0C  24E1               	addwf	fsr1l,w,c
 26619  013D0E  6EE9               	movwf	fsr0l,c
 26620  013D10  0EFF               	movlw	255
 26621  013D12  20E2               	addwfc	fsr1h,w,c
 26622  013D14  6EEA               	movwf	fsr0h,c
 26623  013D16  006F FF7F FFEF     	movff	indf2,indf0
 26624                           
 26625                           ;stkvar	_grs @ sp[(-4)+0]
 26626                           ;stkvar	_a @ sp[(-4)+-8]
 26627  013D1C  0EF7               	movlw	247
 26628  013D1E  24E1               	addwf	fsr1l,w,c
 26629  013D20  6ED9               	movwf	fsr2l,c
 26630  013D22  0EFF               	movlw	255
 26631  013D24  20E2               	addwfc	fsr1h,w,c
 26632  013D26  6EDA               	movwf	fsr2h,c
 26633  013D28  0EFC               	movlw	-4
 26634  013D2A  006F FF8F FFDF     	movff	plusw1,indf2
 26635  013D30                     l7564:
 26636                           
 26637                           ;stkvar	_grs @ sp[(-4)+0]
 26638  013D30  0EFC               	movlw	-4
 26639  013D32  6AE3               	clrf	plusw1,c
 26640                           
 26641                           ;stkvar	_aexp @ sp[(-4)+2]
 26642  013D34  0EFE               	movlw	-2
 26643  013D36  50E3               	movf	plusw1,w,c
 26644  013D38  6E0B               	movwf	(btemp+10)^0,c
 26645  013D3A  6A0C               	clrf	(btemp+11)^0,c
 26646                           
 26647                           ;stkvar	_bexp @ sp[(-4)+1]
 26648  013D3C  0EFD               	movlw	-3
 26649  013D3E  50E3               	movf	plusw1,w,c
 26650  013D40  5E0B               	subwf	(btemp+10)^0,f,c
 26651  013D42  0E00               	movlw	0
 26652  013D44  5A0C               	subwfb	(btemp+11)^0,f,c
 26653  013D46  BE0C               	btfsc	(btemp+11)^0,7,c
 26654  013D48  D062               	goto	l7588
 26655  013D4A  500C               	movf	(btemp+11)^0,w,c
 26656  013D4C  E104               	bnz	u5340
 26657  013D4E  0E1A               	movlw	26
 26658  013D50  5C0B               	subwf	(btemp+10)^0,w,c
 26659  013D52  A0D8               	btfss	status,0,c
 26660  013D54  D05C               	goto	l7588
 26661  013D56                     u5340:
 26662                           
 26663                           ;stkvar	_b @ sp[(-4)+-4]
 26664  013D56  0EF8               	movlw	-8
 26665  013D58  50E3               	movf	plusw1,w,c
 26666  013D5A  E10A               	bnz	u5351
 26667  013D5C  0EF9               	movlw	-7
 26668  013D5E  50E3               	movf	plusw1,w,c
 26669  013D60  E107               	bnz	u5351
 26670  013D62  0EFA               	movlw	-6
 26671  013D64  50E3               	movf	plusw1,w,c
 26672  013D66  E104               	bnz	u5351
 26673  013D68  0EFB               	movlw	-5
 26674  013D6A  50E3               	movf	plusw1,w,c
 26675  013D6C  B4D8               	btfsc	status,2,c
 26676  013D6E  D003               	goto	u5350
 26677  013D70                     u5351:
 26678  013D70  6A0C               	clrf	(btemp+11)^0,c
 26679  013D72  2A0C               	incf	(btemp+11)^0,f,c
 26680  013D74  D001               	goto	u5368
 26681  013D76                     u5350:
 26682  013D76  6A0C               	clrf	(btemp+11)^0,c
 26683  013D78                     u5368:
 26684                           
 26685                           ;stkvar	_grs @ sp[(-4)+0]
 26686  013D78  0EFC               	movlw	-4
 26687  013D7A  0060  F033  FFE3   	movff	btemp+11,plusw1
 26688                           
 26689                           ;stkvar	_b @ sp[(-4)+-4]
 26690  013D80  0EF8               	movlw	-8
 26691  013D82  6AE3               	clrf	plusw1,c
 26692  013D84  0EF9               	movlw	-7
 26693  013D86  6AE3               	clrf	plusw1,c
 26694  013D88  0EFA               	movlw	-6
 26695  013D8A  6AE3               	clrf	plusw1,c
 26696  013D8C  0EFB               	movlw	-5
 26697  013D8E  6AE3               	clrf	plusw1,c
 26698                           
 26699                           ;stkvar	_aexp @ sp[(-4)+2]
 26700                           ;stkvar	_bexp @ sp[(-4)+1]
 26701  013D90  0EFE               	movlw	-2
 26702  013D92  006F FF8C  F001    	movff	plusw1,btemp
 26703  013D98  0EFD               	movlw	-3
 26704  013D9A  0060  F007  FFE3   	movff	btemp,plusw1
 26705  013DA0  D042               	goto	u5400
 26706  013DA2                     l7574:
 26707                           
 26708                           ;stkvar	_grs @ sp[(-4)+0]
 26709  013DA2  0EFC               	movlw	-4
 26710  013DA4  A0E3               	btfss	plusw1,0,c
 26711  013DA6  D00D               	goto	l7578
 26712                           
 26713                           ;stkvar	_grs @ sp[(-4)+0]
 26714  013DA8  0EFC               	movlw	-4
 26715  013DAA  006F FF8C  F00C    	movff	plusw1,btemp+11
 26716  013DB0  90D8               	bcf	status,0,c
 26717  013DB2  320C               	rrcf	(btemp+11)^0,f,c
 26718  013DB4  0E01               	movlw	1
 26719  013DB6  120C               	iorwf	(btemp+11)^0,f,c
 26720                           
 26721                           ;stkvar	_grs @ sp[(-4)+0]
 26722  013DB8  0EFC               	movlw	-4
 26723  013DBA  0060  F033  FFE3   	movff	btemp+11,plusw1
 26724  013DC0  D009               	goto	l7580
 26725  013DC2                     l7578:
 26726                           
 26727                           ;stkvar	_grs @ sp[(-4)+0]
 26728  013DC2  50E1               	movf	fsr1l,w,c
 26729  013DC4  0FFC               	addlw	-4
 26730  013DC6  6ED9               	movwf	fsr2l,c
 26731  013DC8  50E2               	movf	fsr1h,w,c
 26732  013DCA  6EDA               	movwf	fsr2h,c
 26733  013DCC  0EFF               	movlw	255
 26734  013DCE  22DA               	addwfc	fsr2h,f,c
 26735  013DD0  90D8               	bcf	status,0,c
 26736  013DD2  32DF               	rrcf	indf2,f,c
 26737  013DD4                     l7580:
 26738                           
 26739                           ;stkvar	_b @ sp[(-4)+-4]
 26740  013DD4  0EF8               	movlw	-8
 26741  013DD6  A0E3               	btfss	plusw1,0,c
 26742  013DD8  D002               	goto	l7584
 26743                           
 26744                           ;stkvar	_grs @ sp[(-4)+0]
 26745  013DDA  0EFC               	movlw	-4
 26746  013DDC  8EE3               	bsf	plusw1,7,c
 26747  013DDE                     l7584:
 26748  013DDE  0E01               	movlw	1
 26749  013DE0  6E0C               	movwf	(btemp+11)^0,c
 26750                           
 26751                           ;stkvar	_b @ sp[(-4)+-4]
 26752  013DE2  50E1               	movf	fsr1l,w,c
 26753  013DE4  0FF8               	addlw	-8
 26754  013DE6  6ED9               	movwf	fsr2l,c
 26755  013DE8  50E2               	movf	fsr1h,w,c
 26756  013DEA  6EDA               	movwf	fsr2h,c
 26757  013DEC  0EFF               	movlw	255
 26758  013DEE  22DA               	addwfc	fsr2h,f,c
 26759  013DF0  280C               	incf	(btemp+11)^0,w,c
 26760  013DF2  52DE               	movf	postinc2,f,c
 26761  013DF4  D008               	goto	u5390
 26762  013DF6                     u5395:
 26763  013DF6  52DE               	movf	postinc2,f,c
 26764  013DF8  90D8               	bcf	status,0,c
 26765  013DFA  BEDC               	btfsc	preinc2,7,c
 26766  013DFC  80D8               	bsf	status,0,c
 26767  013DFE  32DD               	rrcf	postdec2,f,c
 26768  013E00  32DD               	rrcf	postdec2,f,c
 26769  013E02  32DD               	rrcf	postdec2,f,c
 26770  013E04  32DE               	rrcf	postinc2,f,c
 26771  013E06                     u5390:
 26772  013E06  2EE8               	decfsz	wreg,f,c
 26773  013E08  D7F6               	goto	u5395
 26774                           
 26775                           ;stkvar	_bexp @ sp[(-4)+1]
 26776  013E0A  0EFD               	movlw	-3
 26777  013E0C  2AE3               	incf	plusw1,f,c
 26778  013E0E                     l7588:
 26779                           
 26780                           ;stkvar	_aexp @ sp[(-4)+2]
 26781                           ;stkvar	_bexp @ sp[(-4)+1]
 26782  013E0E  50E1               	movf	fsr1l,w,c
 26783  013E10  0FFD               	addlw	-3
 26784  013E12  6ED9               	movwf	fsr2l,c
 26785  013E14  50E2               	movf	fsr1h,w,c
 26786  013E16  6EDA               	movwf	fsr2h,c
 26787  013E18  0EFF               	movlw	255
 26788  013E1A  22DA               	addwfc	fsr2h,f,c
 26789  013E1C  0EFE               	movlw	-2
 26790  013E1E  50E3               	movf	plusw1,w,c
 26791  013E20  5CDE               	subwf	postinc2,w,c
 26792  013E22  A0D8               	btfss	status,0,c
 26793  013E24  D7BE               	goto	l7574
 26794  013E26                     u5400:
 26795                           
 26796                           ;stkvar	_signs @ sp[(-4)+3]
 26797  013E26  0EFF               	movlw	-1
 26798  013E28  BCE3               	btfsc	plusw1,6,c
 26799  013E2A  D066               	goto	l7616
 26800                           
 26801                           ;stkvar	_bexp @ sp[(-4)+1]
 26802  013E2C  0EFD               	movlw	-3
 26803  013E2E  50E3               	movf	plusw1,w,c
 26804  013E30  B4D8               	btfsc	status,2,c
 26805  013E32  D0F2               	goto	u5500
 26806                           
 26807                           ;stkvar	_a @ sp[(-4)+-8]
 26808                           ;stkvar	_b @ sp[(-4)+-4]
 26809  013E34  0EF8               	movlw	-8
 26810  013E36  50E3               	movf	plusw1,w,c
 26811  013E38  6E01               	movwf	btemp^0,c
 26812  013E3A  0EF4               	movlw	-12
 26813  013E3C  50E3               	movf	plusw1,w,c
 26814  013E3E  2601               	addwf	btemp^0,f,c
 26815  013E40  0EF8               	movlw	-8
 26816  013E42  0060  F007  FFE3   	movff	btemp,plusw1
 26817  013E48  0EF9               	movlw	-7
 26818  013E4A  50E3               	movf	plusw1,w,c
 26819  013E4C  6E01               	movwf	btemp^0,c
 26820  013E4E  0EF5               	movlw	-11
 26821  013E50  50E3               	movf	plusw1,w,c
 26822  013E52  2201               	addwfc	btemp^0,f,c
 26823  013E54  0EF9               	movlw	-7
 26824  013E56  0060  F007  FFE3   	movff	btemp,plusw1
 26825  013E5C  0EFA               	movlw	-6
 26826  013E5E  50E3               	movf	plusw1,w,c
 26827  013E60  6E01               	movwf	btemp^0,c
 26828  013E62  0EF6               	movlw	-10
 26829  013E64  50E3               	movf	plusw1,w,c
 26830  013E66  2201               	addwfc	btemp^0,f,c
 26831  013E68  0EFA               	movlw	-6
 26832  013E6A  0060  F007  FFE3   	movff	btemp,plusw1
 26833  013E70  0EFB               	movlw	-5
 26834  013E72  50E3               	movf	plusw1,w,c
 26835  013E74  6E01               	movwf	btemp^0,c
 26836  013E76  0EF7               	movlw	-9
 26837  013E78  50E3               	movf	plusw1,w,c
 26838  013E7A  2201               	addwfc	btemp^0,f,c
 26839  013E7C  0EFB               	movlw	-5
 26840  013E7E  0060  F007  FFE3   	movff	btemp,plusw1
 26841                           
 26842                           ;stkvar	_b @ sp[(-4)+-4]
 26843  013E84  0EFB               	movlw	-5
 26844  013E86  A0E3               	btfss	plusw1,0,c
 26845  013E88  D101               	goto	u5540
 26846                           
 26847                           ;stkvar	_grs @ sp[(-4)+0]
 26848  013E8A  0EFC               	movlw	-4
 26849  013E8C  A0E3               	btfss	plusw1,0,c
 26850  013E8E  D00D               	goto	l7606
 26851                           
 26852                           ;stkvar	_grs @ sp[(-4)+0]
 26853  013E90  0EFC               	movlw	-4
 26854  013E92  006F FF8C  F00C    	movff	plusw1,btemp+11
 26855  013E98  90D8               	bcf	status,0,c
 26856  013E9A  320C               	rrcf	(btemp+11)^0,f,c
 26857  013E9C  0E01               	movlw	1
 26858  013E9E  120C               	iorwf	(btemp+11)^0,f,c
 26859                           
 26860                           ;stkvar	_grs @ sp[(-4)+0]
 26861  013EA0  0EFC               	movlw	-4
 26862  013EA2  0060  F033  FFE3   	movff	btemp+11,plusw1
 26863  013EA8  D009               	goto	l7608
 26864  013EAA                     l7606:
 26865                           
 26866                           ;stkvar	_grs @ sp[(-4)+0]
 26867  013EAA  50E1               	movf	fsr1l,w,c
 26868  013EAC  0FFC               	addlw	-4
 26869  013EAE  6ED9               	movwf	fsr2l,c
 26870  013EB0  50E2               	movf	fsr1h,w,c
 26871  013EB2  6EDA               	movwf	fsr2h,c
 26872  013EB4  0EFF               	movlw	255
 26873  013EB6  22DA               	addwfc	fsr2h,f,c
 26874  013EB8  90D8               	bcf	status,0,c
 26875  013EBA  32DF               	rrcf	indf2,f,c
 26876  013EBC                     l7608:
 26877                           
 26878                           ;stkvar	_b @ sp[(-4)+-4]
 26879  013EBC  0EF8               	movlw	-8
 26880  013EBE  A0E3               	btfss	plusw1,0,c
 26881  013EC0  D002               	goto	l7612
 26882                           
 26883                           ;stkvar	_grs @ sp[(-4)+0]
 26884  013EC2  0EFC               	movlw	-4
 26885  013EC4  8EE3               	bsf	plusw1,7,c
 26886  013EC6                     l7612:
 26887  013EC6  0E01               	movlw	1
 26888  013EC8  6E0C               	movwf	(btemp+11)^0,c
 26889                           
 26890                           ;stkvar	_b @ sp[(-4)+-4]
 26891  013ECA  50E1               	movf	fsr1l,w,c
 26892  013ECC  0FF8               	addlw	-8
 26893  013ECE  6ED9               	movwf	fsr2l,c
 26894  013ED0  50E2               	movf	fsr1h,w,c
 26895  013ED2  6EDA               	movwf	fsr2h,c
 26896  013ED4  0EFF               	movlw	255
 26897  013ED6  22DA               	addwfc	fsr2h,f,c
 26898  013ED8  280C               	incf	(btemp+11)^0,w,c
 26899  013EDA  52DE               	movf	postinc2,f,c
 26900  013EDC  D008               	goto	u5460
 26901  013EDE                     u5465:
 26902  013EDE  52DE               	movf	postinc2,f,c
 26903  013EE0  90D8               	bcf	status,0,c
 26904  013EE2  BEDC               	btfsc	preinc2,7,c
 26905  013EE4  80D8               	bsf	status,0,c
 26906  013EE6  32DD               	rrcf	postdec2,f,c
 26907  013EE8  32DD               	rrcf	postdec2,f,c
 26908  013EEA  32DD               	rrcf	postdec2,f,c
 26909  013EEC  32DE               	rrcf	postinc2,f,c
 26910  013EEE                     u5460:
 26911  013EEE  2EE8               	decfsz	wreg,f,c
 26912  013EF0  D7F6               	goto	u5465
 26913                           
 26914                           ;stkvar	_bexp @ sp[(-4)+1]
 26915  013EF2  0EFD               	movlw	-3
 26916  013EF4  2AE3               	incf	plusw1,f,c
 26917  013EF6  D0CA               	goto	u5540
 26918  013EF8                     l7616:
 26919                           
 26920                           ;stkvar	_a @ sp[(-4)+-8]
 26921                           ;stkvar	_b @ sp[(-4)+-4]
 26922  013EF8  50E1               	movf	fsr1l,w,c
 26923  013EFA  0FF8               	addlw	-8
 26924  013EFC  6ED9               	movwf	fsr2l,c
 26925  013EFE  50E2               	movf	fsr1h,w,c
 26926  013F00  6EDA               	movwf	fsr2h,c
 26927  013F02  0EFF               	movlw	255
 26928  013F04  22DA               	addwfc	fsr2h,f,c
 26929  013F06  0EF4               	movlw	-12
 26930  013F08  50E3               	movf	plusw1,w,c
 26931  013F0A  5CDE               	subwf	postinc2,w,c
 26932  013F0C  0EF5               	movlw	-11
 26933  013F0E  50E3               	movf	plusw1,w,c
 26934  013F10  58DE               	subwfb	postinc2,w,c
 26935  013F12  0EF6               	movlw	-10
 26936  013F14  50E3               	movf	plusw1,w,c
 26937  013F16  58DE               	subwfb	postinc2,w,c
 26938  013F18  50DE               	movf	postinc2,w,c
 26939  013F1A  0A80               	xorlw	128
 26940  013F1C  6E01               	movwf	btemp^0,c
 26941  013F1E  0EF7               	movlw	-9
 26942  013F20  50E3               	movf	plusw1,w,c
 26943  013F22  0A80               	xorlw	128
 26944  013F24  5801               	subwfb	btemp^0,w,c
 26945  013F26  B0D8               	btfsc	status,0,c
 26946  013F28  D053               	goto	l7628
 26947                           
 26948                           ;stkvar	_b @ sp[(-4)+-4]
 26949                           ;stkvar	_a @ sp[(-4)+-8]
 26950  013F2A  0EF4               	movlw	-12
 26951  013F2C  006F FF8C  F009    	movff	plusw1,btemp+8
 26952  013F32  0EF5               	movlw	-11
 26953  013F34  006F FF8C  F00A    	movff	plusw1,btemp+9
 26954  013F3A  0EF6               	movlw	-10
 26955  013F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 26956  013F42  0EF7               	movlw	-9
 26957  013F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 26958  013F4A  0EF8               	movlw	-8
 26959  013F4C  50E3               	movf	plusw1,w,c
 26960  013F4E  5E09               	subwf	(btemp+8)^0,f,c
 26961  013F50  0EF9               	movlw	-7
 26962  013F52  50E3               	movf	plusw1,w,c
 26963  013F54  5A0A               	subwfb	(btemp+9)^0,f,c
 26964  013F56  0EFA               	movlw	-6
 26965  013F58  50E3               	movf	plusw1,w,c
 26966  013F5A  5A0B               	subwfb	(btemp+10)^0,f,c
 26967  013F5C  0EFB               	movlw	-5
 26968  013F5E  50E3               	movf	plusw1,w,c
 26969  013F60  5A0C               	subwfb	(btemp+11)^0,f,c
 26970  013F62  0EFF               	movlw	255
 26971  013F64  2409               	addwf	(btemp+8)^0,w,c
 26972  013F66  6E05               	movwf	(btemp+4)^0,c
 26973  013F68  0EFF               	movlw	255
 26974  013F6A  200A               	addwfc	(btemp+9)^0,w,c
 26975  013F6C  6E06               	movwf	(btemp+5)^0,c
 26976  013F6E  0EFF               	movlw	255
 26977  013F70  200B               	addwfc	(btemp+10)^0,w,c
 26978  013F72  6E07               	movwf	(btemp+6)^0,c
 26979  013F74  0EFF               	movlw	255
 26980  013F76  200C               	addwfc	(btemp+11)^0,w,c
 26981  013F78  6E08               	movwf	(btemp+7)^0,c
 26982                           
 26983                           ;stkvar	_b @ sp[(-4)+-4]
 26984  013F7A  0EF8               	movlw	-8
 26985  013F7C  0060  F017  FFE3   	movff	btemp+4,plusw1
 26986  013F82  0EF9               	movlw	-7
 26987  013F84  0060  F01B  FFE3   	movff	btemp+5,plusw1
 26988  013F8A  0EFA               	movlw	-6
 26989  013F8C  0060  F01F  FFE3   	movff	btemp+6,plusw1
 26990  013F92  0EFB               	movlw	-5
 26991  013F94  0060  F023  FFE3   	movff	btemp+7,plusw1
 26992                           
 26993                           ;stkvar	_signs @ sp[(-4)+3]
 26994  013F9A  0EFF               	movlw	-1
 26995  013F9C  7EE3               	btg	plusw1,7,c
 26996                           
 26997                           ;stkvar	_grs @ sp[(-4)+0]
 26998  013F9E  0EFC               	movlw	-4
 26999  013FA0  50E3               	movf	plusw1,w,c
 27000  013FA2  0800               	sublw	0
 27001  013FA4  6E0C               	movwf	(btemp+11)^0,c
 27002                           
 27003                           ;stkvar	_grs @ sp[(-4)+0]
 27004  013FA6  0EFC               	movlw	-4
 27005  013FA8  0060  F033  FFE3   	movff	btemp+11,plusw1
 27006                           
 27007                           ;stkvar	_grs @ sp[(-4)+0]
 27008  013FAE  0EFC               	movlw	-4
 27009  013FB0  50E3               	movf	plusw1,w,c
 27010  013FB2  A4D8               	btfss	status,2,c
 27011  013FB4  D020               	goto	l7630
 27012                           
 27013                           ;stkvar	_b @ sp[(-4)+-4]
 27014  013FB6  50E1               	movf	fsr1l,w,c
 27015  013FB8  0FF8               	addlw	-8
 27016  013FBA  6ED9               	movwf	fsr2l,c
 27017  013FBC  50E2               	movf	fsr1h,w,c
 27018  013FBE  6EDA               	movwf	fsr2h,c
 27019  013FC0  0EFF               	movlw	255
 27020  013FC2  22DA               	addwfc	fsr2h,f,c
 27021  013FC4  2ADE               	incf	postinc2,f,c
 27022  013FC6  0E00               	movlw	0
 27023  013FC8  22DE               	addwfc	postinc2,f,c
 27024  013FCA  22DE               	addwfc	postinc2,f,c
 27025  013FCC  22DE               	addwfc	postinc2,f,c
 27026  013FCE  D013               	goto	l7630
 27027  013FD0                     l7628:
 27028                           
 27029                           ;stkvar	_a @ sp[(-4)+-8]
 27030                           ;stkvar	_b @ sp[(-4)+-4]
 27031  013FD0  50E1               	movf	fsr1l,w,c
 27032  013FD2  0FF8               	addlw	-8
 27033  013FD4  6ED9               	movwf	fsr2l,c
 27034  013FD6  50E2               	movf	fsr1h,w,c
 27035  013FD8  6EDA               	movwf	fsr2h,c
 27036  013FDA  0EFF               	movlw	255
 27037  013FDC  22DA               	addwfc	fsr2h,f,c
 27038  013FDE  0EF4               	movlw	-12
 27039  013FE0  50E3               	movf	plusw1,w,c
 27040  013FE2  5EDE               	subwf	postinc2,f,c
 27041  013FE4  0EF5               	movlw	-11
 27042  013FE6  50E3               	movf	plusw1,w,c
 27043  013FE8  5ADE               	subwfb	postinc2,f,c
 27044  013FEA  0EF6               	movlw	-10
 27045  013FEC  50E3               	movf	plusw1,w,c
 27046  013FEE  5ADE               	subwfb	postinc2,f,c
 27047  013FF0  0EF7               	movlw	-9
 27048  013FF2  50E3               	movf	plusw1,w,c
 27049  013FF4  5ADE               	subwfb	postinc2,f,c
 27050  013FF6                     l7630:
 27051                           
 27052                           ;stkvar	_b @ sp[(-4)+-4]
 27053  013FF6  0EF8               	movlw	-8
 27054  013FF8  50E3               	movf	plusw1,w,c
 27055  013FFA  E145               	bnz	l7652
 27056  013FFC  0EF9               	movlw	-7
 27057  013FFE  50E3               	movf	plusw1,w,c
 27058  014000  E142               	bnz	l7652
 27059  014002  0EFA               	movlw	-6
 27060  014004  50E3               	movf	plusw1,w,c
 27061  014006  E13F               	bnz	l7652
 27062  014008  0EFB               	movlw	-5
 27063  01400A  50E3               	movf	plusw1,w,c
 27064  01400C  A4D8               	btfss	status,2,c
 27065  01400E  D03B               	goto	l7652
 27066                           
 27067                           ;stkvar	_grs @ sp[(-4)+0]
 27068  014010  0EFC               	movlw	-4
 27069  014012  50E3               	movf	plusw1,w,c
 27070  014014  A4D8               	btfss	status,2,c
 27071  014016  D037               	goto	l7652
 27072  014018                     u5500:
 27073  014018  0E00               	movlw	0
 27074  01401A  6E01               	movwf	btemp^0,c
 27075  01401C  0E00               	movlw	0
 27076  01401E  6E02               	movwf	(btemp+1)^0,c
 27077  014020  0E00               	movlw	0
 27078  014022  6E03               	movwf	(btemp+2)^0,c
 27079  014024  0E00               	movlw	0
 27080  014026  6E04               	movwf	(btemp+3)^0,c
 27081  014028  D0C6               	goto	l2892
 27082  01402A                     l7638:
 27083                           
 27084                           ;stkvar	_b @ sp[(-4)+-4]
 27085  01402A  90D8               	bcf	status,0,c
 27086  01402C  0EF8               	movlw	-8
 27087  01402E  36E3               	rlcf	plusw1,f,c
 27088  014030  0EF9               	movlw	-7
 27089  014032  36E3               	rlcf	plusw1,f,c
 27090  014034  0EFA               	movlw	-6
 27091  014036  36E3               	rlcf	plusw1,f,c
 27092  014038  0EFB               	movlw	-5
 27093  01403A  36E3               	rlcf	plusw1,f,c
 27094                           
 27095                           ;stkvar	_grs @ sp[(-4)+0]
 27096  01403C  0EFC               	movlw	-4
 27097  01403E  AEE3               	btfss	plusw1,7,c
 27098  014040  D002               	goto	l2904
 27099                           
 27100                           ;stkvar	_b @ sp[(-4)+-4]
 27101  014042  0EF8               	movlw	-8
 27102  014044  80E3               	bsf	plusw1,0,c
 27103  014046                     l2904:
 27104                           
 27105                           ;stkvar	_grs @ sp[(-4)+0]
 27106  014046  0EFC               	movlw	-4
 27107  014048  A0E3               	btfss	plusw1,0,c
 27108  01404A  D00E               	goto	l7646
 27109                           
 27110                           ;stkvar	_grs @ sp[(-4)+0]
 27111  01404C  0EFC               	movlw	-4
 27112  01404E  006F FF8C  F00C    	movff	plusw1,btemp+11
 27113  014054  90D8               	bcf	status,0,c
 27114  014056  340C               	rlcf	(btemp+11)^0,w,c
 27115  014058  6E0B               	movwf	(btemp+10)^0,c
 27116  01405A  0E01               	movlw	1
 27117  01405C  120B               	iorwf	(btemp+10)^0,f,c
 27118                           
 27119                           ;stkvar	_grs @ sp[(-4)+0]
 27120  01405E  0EFC               	movlw	-4
 27121  014060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27122  014066  D009               	goto	l7648
 27123  014068                     l7646:
 27124                           
 27125                           ;stkvar	_grs @ sp[(-4)+0]
 27126  014068  50E1               	movf	fsr1l,w,c
 27127  01406A  0FFC               	addlw	-4
 27128  01406C  6ED9               	movwf	fsr2l,c
 27129  01406E  50E2               	movf	fsr1h,w,c
 27130  014070  6EDA               	movwf	fsr2h,c
 27131  014072  0EFF               	movlw	255
 27132  014074  22DA               	addwfc	fsr2h,f,c
 27133  014076  90D8               	bcf	status,0,c
 27134  014078  36DF               	rlcf	indf2,f,c
 27135  01407A                     l7648:
 27136                           
 27137                           ;stkvar	_bexp @ sp[(-4)+1]
 27138  01407A  0EFD               	movlw	-3
 27139  01407C  50E3               	movf	plusw1,w,c
 27140  01407E  B4D8               	btfsc	status,2,c
 27141  014080  D002               	goto	l7652
 27142                           
 27143                           ;stkvar	_bexp @ sp[(-4)+1]
 27144  014082  0EFD               	movlw	-3
 27145  014084  06E3               	decf	plusw1,f,c
 27146  014086                     l7652:
 27147                           
 27148                           ;stkvar	_b @ sp[(-4)+-4]
 27149  014086  0EFA               	movlw	-6
 27150  014088  AEE3               	btfss	plusw1,7,c
 27151  01408A  D7CF               	goto	l7638
 27152  01408C                     u5540:
 27153                           
 27154                           ;stkvar	_aexp @ sp[(-4)+2]
 27155  01408C  0EFE               	movlw	-2
 27156  01408E  6AE3               	clrf	plusw1,c
 27157                           
 27158                           ;stkvar	_grs @ sp[(-4)+0]
 27159  014090  0EFC               	movlw	-4
 27160  014092  AEE3               	btfss	plusw1,7,c
 27161  014094  D00F               	goto	l7666
 27162                           
 27163                           ;stkvar	_grs @ sp[(-4)+0]
 27164  014096  0EFC               	movlw	-4
 27165  014098  006F FF8C  F00C    	movff	plusw1,btemp+11
 27166  01409E  0E7F               	movlw	127
 27167  0140A0  160C               	andwf	(btemp+11)^0,f,c
 27168  0140A2  B4D8               	btfsc	status,2,c
 27169  0140A4  D004               	goto	l7662
 27170  0140A6                     u5560:
 27171                           
 27172                           ;stkvar	_aexp @ sp[(-4)+2]
 27173  0140A6  0EFE               	movlw	-2
 27174  0140A8  6AE3               	clrf	plusw1,c
 27175  0140AA  2AE3               	incf	plusw1,f,c
 27176  0140AC  D003               	goto	l7666
 27177  0140AE                     l7662:
 27178                           
 27179                           ;stkvar	_b @ sp[(-4)+-4]
 27180  0140AE  0EF8               	movlw	-8
 27181  0140B0  B0E3               	btfsc	plusw1,0,c
 27182  0140B2  D7F9               	goto	u5560
 27183  0140B4                     l7666:
 27184                           
 27185                           ;stkvar	_aexp @ sp[(-4)+2]
 27186  0140B4  0EFE               	movlw	-2
 27187  0140B6  50E3               	movf	plusw1,w,c
 27188  0140B8  B4D8               	btfsc	status,2,c
 27189  0140BA  D02B               	goto	l7678
 27190                           
 27191                           ;stkvar	_b @ sp[(-4)+-4]
 27192  0140BC  50E1               	movf	fsr1l,w,c
 27193  0140BE  0FF8               	addlw	-8
 27194  0140C0  6ED9               	movwf	fsr2l,c
 27195  0140C2  50E2               	movf	fsr1h,w,c
 27196  0140C4  6EDA               	movwf	fsr2h,c
 27197  0140C6  0EFF               	movlw	255
 27198  0140C8  22DA               	addwfc	fsr2h,f,c
 27199  0140CA  2ADE               	incf	postinc2,f,c
 27200  0140CC  0E00               	movlw	0
 27201  0140CE  22DE               	addwfc	postinc2,f,c
 27202  0140D0  22DE               	addwfc	postinc2,f,c
 27203  0140D2  22DE               	addwfc	postinc2,f,c
 27204                           
 27205                           ;stkvar	_b @ sp[(-4)+-4]
 27206  0140D4  0EFB               	movlw	-5
 27207  0140D6  A0E3               	btfss	plusw1,0,c
 27208  0140D8  D01C               	goto	l7678
 27209  0140DA  0E01               	movlw	1
 27210  0140DC  6E0C               	movwf	(btemp+11)^0,c
 27211                           
 27212                           ;stkvar	_b @ sp[(-4)+-4]
 27213  0140DE  50E1               	movf	fsr1l,w,c
 27214  0140E0  0FF8               	addlw	-8
 27215  0140E2  6ED9               	movwf	fsr2l,c
 27216  0140E4  50E2               	movf	fsr1h,w,c
 27217  0140E6  6EDA               	movwf	fsr2h,c
 27218  0140E8  0EFF               	movlw	255
 27219  0140EA  22DA               	addwfc	fsr2h,f,c
 27220  0140EC  280C               	incf	(btemp+11)^0,w,c
 27221  0140EE  52DE               	movf	postinc2,f,c
 27222  0140F0  D008               	goto	u5600
 27223  0140F2                     u5605:
 27224  0140F2  52DE               	movf	postinc2,f,c
 27225  0140F4  90D8               	bcf	status,0,c
 27226  0140F6  BEDC               	btfsc	preinc2,7,c
 27227  0140F8  80D8               	bsf	status,0,c
 27228  0140FA  32DD               	rrcf	postdec2,f,c
 27229  0140FC  32DD               	rrcf	postdec2,f,c
 27230  0140FE  32DD               	rrcf	postdec2,f,c
 27231  014100  32DE               	rrcf	postinc2,f,c
 27232  014102                     u5600:
 27233  014102  2EE8               	decfsz	wreg,f,c
 27234  014104  D7F6               	goto	u5605
 27235                           
 27236                           ;stkvar	_bexp @ sp[(-4)+1]
 27237  014106  0EFD               	movlw	-3
 27238  014108  28E3               	incf	plusw1,w,c
 27239  01410A  B4D8               	btfsc	status,2,c
 27240  01410C  D002               	goto	l7678
 27241                           
 27242                           ;stkvar	_bexp @ sp[(-4)+1]
 27243  01410E  0EFD               	movlw	-3
 27244  014110  2AE3               	incf	plusw1,f,c
 27245  014112                     l7678:
 27246                           
 27247                           ;stkvar	_bexp @ sp[(-4)+1]
 27248  014112  0EFD               	movlw	-3
 27249  014114  28E3               	incf	plusw1,w,c
 27250  014116  B4D8               	btfsc	status,2,c
 27251  014118  D004               	goto	u5630
 27252                           
 27253                           ;stkvar	_bexp @ sp[(-4)+1]
 27254  01411A  0EFD               	movlw	-3
 27255  01411C  50E3               	movf	plusw1,w,c
 27256  01411E  A4D8               	btfss	status,2,c
 27257  014120  D00E               	goto	l7688
 27258  014122                     u5630:
 27259                           
 27260                           ;stkvar	_b @ sp[(-4)+-4]
 27261  014122  0EF8               	movlw	-8
 27262  014124  6AE3               	clrf	plusw1,c
 27263  014126  0EF9               	movlw	-7
 27264  014128  6AE3               	clrf	plusw1,c
 27265  01412A  0EFA               	movlw	-6
 27266  01412C  6AE3               	clrf	plusw1,c
 27267  01412E  0EFB               	movlw	-5
 27268  014130  6AE3               	clrf	plusw1,c
 27269                           
 27270                           ;stkvar	_bexp @ sp[(-4)+1]
 27271  014132  0EFD               	movlw	-3
 27272  014134  50E3               	movf	plusw1,w,c
 27273  014136  A4D8               	btfss	status,2,c
 27274  014138  D002               	goto	l7688
 27275                           
 27276                           ;stkvar	_signs @ sp[(-4)+3]
 27277  01413A  0EFF               	movlw	-1
 27278  01413C  6AE3               	clrf	plusw1,c
 27279  01413E                     l7688:
 27280                           
 27281                           ;stkvar	_bexp @ sp[(-4)+1]
 27282  01413E  0EFD               	movlw	-3
 27283  014140  A0E3               	btfss	plusw1,0,c
 27284  014142  D009               	goto	l7692
 27285                           
 27286                           ;stkvar	_b @ sp[(-4)+-4]
 27287  014144  0EFA               	movlw	250
 27288  014146  24E1               	addwf	fsr1l,w,c
 27289  014148  6ED9               	movwf	fsr2l,c
 27290  01414A  0EFF               	movlw	255
 27291  01414C  20E2               	addwfc	fsr1h,w,c
 27292  01414E  6EDA               	movwf	fsr2h,c
 27293  014150  0E00               	movlw	0
 27294  014152  8EDB               	bsf	plusw2,7,c
 27295  014154  D008               	goto	l7694
 27296  014156                     l7692:
 27297                           
 27298                           ;stkvar	_b @ sp[(-4)+-4]
 27299  014156  0EFA               	movlw	250
 27300  014158  24E1               	addwf	fsr1l,w,c
 27301  01415A  6ED9               	movwf	fsr2l,c
 27302  01415C  0EFF               	movlw	255
 27303  01415E  20E2               	addwfc	fsr1h,w,c
 27304  014160  6EDA               	movwf	fsr2h,c
 27305  014162  0E7F               	movlw	127
 27306  014164  16DF               	andwf	indf2,f,c
 27307  014166                     l7694:
 27308                           
 27309                           ;stkvar	_b @ sp[(-4)+-4]
 27310  014166  0EFB               	movlw	251
 27311  014168  24E1               	addwf	fsr1l,w,c
 27312  01416A  6ED9               	movwf	fsr2l,c
 27313  01416C  0EFF               	movlw	255
 27314  01416E  20E2               	addwfc	fsr1h,w,c
 27315  014170  6EDA               	movwf	fsr2h,c
 27316                           
 27317                           ;stkvar	_bexp @ sp[(-4)+1]
 27318  014172  0EFD               	movlw	-3
 27319  014174  006F FF8C  F00C    	movff	plusw1,btemp+11
 27320  01417A  90D8               	bcf	status,0,c
 27321  01417C  300C               	rrcf	(btemp+11)^0,w,c
 27322  01417E  6EDF               	movwf	indf2,c
 27323                           
 27324                           ;stkvar	_signs @ sp[(-4)+3]
 27325  014180  0EFF               	movlw	-1
 27326  014182  AEE3               	btfss	plusw1,7,c
 27327  014184  D008               	goto	l7700
 27328                           
 27329                           ;stkvar	_b @ sp[(-4)+-4]
 27330  014186  0EFB               	movlw	251
 27331  014188  24E1               	addwf	fsr1l,w,c
 27332  01418A  6ED9               	movwf	fsr2l,c
 27333  01418C  0EFF               	movlw	255
 27334  01418E  20E2               	addwfc	fsr1h,w,c
 27335  014190  6EDA               	movwf	fsr2h,c
 27336  014192  0E00               	movlw	0
 27337  014194  8EDB               	bsf	plusw2,7,c
 27338  014196                     l7700:
 27339                           
 27340                           ;stkvar	_b @ sp[(-4)+-4]
 27341  014196  0EF8               	movlw	-8
 27342  014198  006F FF8C  F001    	movff	plusw1,btemp
 27343  01419E  0EF9               	movlw	-7
 27344  0141A0  006F FF8C  F002    	movff	plusw1,btemp+1
 27345  0141A6  0EFA               	movlw	-6
 27346  0141A8  006F FF8C  F003    	movff	plusw1,btemp+2
 27347  0141AE  0EFB               	movlw	-5
 27348  0141B0  006F FF8C  F004    	movff	plusw1,btemp+3
 27349  0141B6                     l2892:
 27350                           
 27351                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 27352  0141B6  0EF4               	movlw	244
 27353  0141B8  26E1               	addwf	fsr1l,f,c
 27354  0141BA  0EFF               	movlw	255
 27355  0141BC  22E2               	addwfc	fsr1h,f,c
 27356  0141BE  0012               	return		;funcret
 27357  0141C0                     __end_of___fladd:
 27358                           	opt callstack 0
 27359                           
 27360 ;; *************** function ___flmul *****************
 27361 ;; Defined at:
 27362 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 27363 ;; Parameters:    Size  Location     Type
 27364 ;;  b               4  [STACK] unsigned char 
 27365 ;;  a               4  [STACK] unsigned char 
 27366 ;; Auto vars:     Size  Location     Type
 27367 ;;  prod            4  [STACK] struct .
 27368 ;;  grs             4  [STACK] unsigned long 
 27369 ;;  temp            2  [STACK] struct .
 27370 ;;  bexp            1  [STACK] unsigned char 
 27371 ;;  aexp            1  [STACK] unsigned char 
 27372 ;;  sign            1  [STACK] unsigned char 
 27373 ;; Return value:  Size  Location     Type
 27374 ;;                  4  [STACK] unsigned char 
 27375 ;; Registers used:
 27376 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27377 ;; Tracked objects:
 27378 ;;		On entry : 0/1
 27379 ;;		On exit  : 0/0
 27380 ;;		Unchanged: 0/0
 27381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27386 ;;Total ram usage:        0 bytes
 27387 ;; Hardware stack levels used:    1
 27388 ;; Hardware stack levels required when called:   15
 27389 ;; This function calls:
 27390 ;;		Nothing
 27391 ;; This function is called by:
 27392 ;;		_conv_raw_result
 27393 ;;		_lp_filter
 27394 ;;		_calc_model_data
 27395 ;;		_calc_bsoc
 27396 ;;		_init_bsoc
 27397 ;;		_efgtoa
 27398 ;; This function uses a reentrant model
 27399 ;;
 27400                           
 27401                           	psect	text106
 27402  0131DA                     __ptext106:
 27403                           	opt callstack 0
 27404  0131DA                     ___flmul:
 27405                           	opt callstack 0
 27406                           
 27407                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 27408  0131DA  0E0D               	movlw	13
 27409  0131DC  26E1               	addwf	fsr1l,f,c
 27410  0131DE  0E00               	movlw	0
 27411  0131E0  22E2               	addwfc	fsr1h,f,c
 27412                           
 27413                           ;stkvar	_b @ sp[(-13)+-4]
 27414                           
 27415                           ;incstack = 0
 27416 ;; hardware stack exceeded
 27417  0131E2  0EF2               	movlw	242
 27418  0131E4  24E1               	addwf	fsr1l,w,c
 27419  0131E6  6ED9               	movwf	fsr2l,c
 27420  0131E8  0EFF               	movlw	255
 27421  0131EA  20E2               	addwfc	fsr1h,w,c
 27422  0131EC  6EDA               	movwf	fsr2h,c
 27423  0131EE  50DF               	movf	indf2,w,c
 27424  0131F0  6E0C               	movwf	(btemp+11)^0,c
 27425  0131F2  0E80               	movlw	128
 27426  0131F4  160C               	andwf	(btemp+11)^0,f,c
 27427                           
 27428                           ;stkvar	_sign @ sp[(-13)+12]
 27429  0131F6  0EFF               	movlw	-1
 27430  0131F8  0060  F033  FFE3   	movff	btemp+11,plusw1
 27431                           
 27432                           ;stkvar	_b @ sp[(-13)+-4]
 27433  0131FE  0EF2               	movlw	242
 27434  013200  24E1               	addwf	fsr1l,w,c
 27435  013202  6ED9               	movwf	fsr2l,c
 27436  013204  0EFF               	movlw	255
 27437  013206  20E2               	addwfc	fsr1h,w,c
 27438  013208  6EDA               	movwf	fsr2h,c
 27439  01320A  50DF               	movf	indf2,w,c
 27440  01320C  6E0C               	movwf	(btemp+11)^0,c
 27441  01320E  90D8               	bcf	status,0,c
 27442  013210  340C               	rlcf	(btemp+11)^0,w,c
 27443  013212  6E0B               	movwf	(btemp+10)^0,c
 27444                           
 27445                           ;stkvar	_bexp @ sp[(-13)+10]
 27446  013214  0EFD               	movlw	-3
 27447  013216  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27448                           
 27449                           ;stkvar	_b @ sp[(-13)+-4]
 27450  01321C  0EF1               	movlw	241
 27451  01321E  24E1               	addwf	fsr1l,w,c
 27452  013220  6ED9               	movwf	fsr2l,c
 27453  013222  0EFF               	movlw	255
 27454  013224  20E2               	addwfc	fsr1h,w,c
 27455  013226  6EDA               	movwf	fsr2h,c
 27456  013228  AEDF               	btfss	indf2,7,c
 27457  01322A  D002               	goto	l8084
 27458                           
 27459                           ;stkvar	_bexp @ sp[(-13)+10]
 27460  01322C  0EFD               	movlw	-3
 27461  01322E  80E3               	bsf	plusw1,0,c
 27462  013230                     l8084:
 27463                           
 27464                           ;stkvar	_bexp @ sp[(-13)+10]
 27465  013230  0EFD               	movlw	-3
 27466  013232  50E3               	movf	plusw1,w,c
 27467  013234  B4D8               	btfsc	status,2,c
 27468  013236  D01F               	goto	l8092
 27469                           
 27470                           ;stkvar	_bexp @ sp[(-13)+10]
 27471  013238  0EFD               	movlw	-3
 27472  01323A  28E3               	incf	plusw1,w,c
 27473  01323C  A4D8               	btfss	status,2,c
 27474  01323E  D018               	goto	l8090
 27475  013240  0E00               	movlw	0
 27476  013242  6E09               	movwf	(btemp+8)^0,c
 27477  013244  0E00               	movlw	0
 27478  013246  6E0A               	movwf	(btemp+9)^0,c
 27479  013248  0E00               	movlw	0
 27480  01324A  6E0B               	movwf	(btemp+10)^0,c
 27481  01324C  0E00               	movlw	0
 27482  01324E  6E0C               	movwf	(btemp+11)^0,c
 27483                           
 27484                           ;stkvar	_b @ sp[(-13)+-4]
 27485  013250  0EEF               	movlw	-17
 27486  013252  0060  F027  FFE3   	movff	btemp+8,plusw1
 27487  013258  0EF0               	movlw	-16
 27488  01325A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27489  013260  0EF1               	movlw	-15
 27490  013262  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27491  013268  0EF2               	movlw	-14
 27492  01326A  0060  F033  FFE3   	movff	btemp+11,plusw1
 27493  013270                     l8090:
 27494                           
 27495                           ;stkvar	_b @ sp[(-13)+-4]
 27496  013270  0EF1               	movlw	-15
 27497  013272  8EE3               	bsf	plusw1,7,c
 27498  013274  D018               	goto	l8094
 27499  013276                     l8092:
 27500  013276  0E00               	movlw	0
 27501  013278  6E09               	movwf	(btemp+8)^0,c
 27502  01327A  0E00               	movlw	0
 27503  01327C  6E0A               	movwf	(btemp+9)^0,c
 27504  01327E  0E00               	movlw	0
 27505  013280  6E0B               	movwf	(btemp+10)^0,c
 27506  013282  0E00               	movlw	0
 27507  013284  6E0C               	movwf	(btemp+11)^0,c
 27508                           
 27509                           ;stkvar	_b @ sp[(-13)+-4]
 27510  013286  0EEF               	movlw	-17
 27511  013288  0060  F027  FFE3   	movff	btemp+8,plusw1
 27512  01328E  0EF0               	movlw	-16
 27513  013290  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27514  013296  0EF1               	movlw	-15
 27515  013298  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27516  01329E  0EF2               	movlw	-14
 27517  0132A0  0060  F033  FFE3   	movff	btemp+11,plusw1
 27518  0132A6                     l8094:
 27519                           
 27520                           ;stkvar	_a @ sp[(-13)+-8]
 27521  0132A6  0EEE               	movlw	238
 27522  0132A8  24E1               	addwf	fsr1l,w,c
 27523  0132AA  6ED9               	movwf	fsr2l,c
 27524  0132AC  0EFF               	movlw	255
 27525  0132AE  20E2               	addwfc	fsr1h,w,c
 27526  0132B0  6EDA               	movwf	fsr2h,c
 27527  0132B2  50DF               	movf	indf2,w,c
 27528  0132B4  6E0C               	movwf	(btemp+11)^0,c
 27529  0132B6  0E80               	movlw	128
 27530  0132B8  160C               	andwf	(btemp+11)^0,f,c
 27531                           
 27532                           ;stkvar	_sign @ sp[(-13)+12]
 27533  0132BA  50E1               	movf	fsr1l,w,c
 27534  0132BC  0FFF               	addlw	-1
 27535  0132BE  6ED9               	movwf	fsr2l,c
 27536  0132C0  50E2               	movf	fsr1h,w,c
 27537  0132C2  6EDA               	movwf	fsr2h,c
 27538  0132C4  0EFF               	movlw	255
 27539  0132C6  22DA               	addwfc	fsr2h,f,c
 27540  0132C8  500C               	movf	(btemp+11)^0,w,c
 27541  0132CA  1ADF               	xorwf	indf2,f,c
 27542                           
 27543                           ;stkvar	_a @ sp[(-13)+-8]
 27544  0132CC  0EEE               	movlw	238
 27545  0132CE  24E1               	addwf	fsr1l,w,c
 27546  0132D0  6ED9               	movwf	fsr2l,c
 27547  0132D2  0EFF               	movlw	255
 27548  0132D4  20E2               	addwfc	fsr1h,w,c
 27549  0132D6  6EDA               	movwf	fsr2h,c
 27550  0132D8  50DF               	movf	indf2,w,c
 27551  0132DA  6E0C               	movwf	(btemp+11)^0,c
 27552  0132DC  90D8               	bcf	status,0,c
 27553  0132DE  340C               	rlcf	(btemp+11)^0,w,c
 27554  0132E0  6E0B               	movwf	(btemp+10)^0,c
 27555                           
 27556                           ;stkvar	_aexp @ sp[(-13)+11]
 27557  0132E2  0EFE               	movlw	-2
 27558  0132E4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27559                           
 27560                           ;stkvar	_a @ sp[(-13)+-8]
 27561  0132EA  0EED               	movlw	237
 27562  0132EC  24E1               	addwf	fsr1l,w,c
 27563  0132EE  6ED9               	movwf	fsr2l,c
 27564  0132F0  0EFF               	movlw	255
 27565  0132F2  20E2               	addwfc	fsr1h,w,c
 27566  0132F4  6EDA               	movwf	fsr2h,c
 27567  0132F6  AEDF               	btfss	indf2,7,c
 27568  0132F8  D002               	goto	l8102
 27569                           
 27570                           ;stkvar	_aexp @ sp[(-13)+11]
 27571  0132FA  0EFE               	movlw	-2
 27572  0132FC  80E3               	bsf	plusw1,0,c
 27573  0132FE                     l8102:
 27574                           
 27575                           ;stkvar	_aexp @ sp[(-13)+11]
 27576  0132FE  0EFE               	movlw	-2
 27577  013300  50E3               	movf	plusw1,w,c
 27578  013302  B4D8               	btfsc	status,2,c
 27579  013304  D01F               	goto	l8110
 27580                           
 27581                           ;stkvar	_aexp @ sp[(-13)+11]
 27582  013306  0EFE               	movlw	-2
 27583  013308  28E3               	incf	plusw1,w,c
 27584  01330A  A4D8               	btfss	status,2,c
 27585  01330C  D018               	goto	l8108
 27586  01330E  0E00               	movlw	0
 27587  013310  6E09               	movwf	(btemp+8)^0,c
 27588  013312  0E00               	movlw	0
 27589  013314  6E0A               	movwf	(btemp+9)^0,c
 27590  013316  0E00               	movlw	0
 27591  013318  6E0B               	movwf	(btemp+10)^0,c
 27592  01331A  0E00               	movlw	0
 27593  01331C  6E0C               	movwf	(btemp+11)^0,c
 27594                           
 27595                           ;stkvar	_a @ sp[(-13)+-8]
 27596  01331E  0EEB               	movlw	-21
 27597  013320  0060  F027  FFE3   	movff	btemp+8,plusw1
 27598  013326  0EEC               	movlw	-20
 27599  013328  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27600  01332E  0EED               	movlw	-19
 27601  013330  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27602  013336  0EEE               	movlw	-18
 27603  013338  0060  F033  FFE3   	movff	btemp+11,plusw1
 27604  01333E                     l8108:
 27605                           
 27606                           ;stkvar	_a @ sp[(-13)+-8]
 27607  01333E  0EED               	movlw	-19
 27608  013340  8EE3               	bsf	plusw1,7,c
 27609  013342  D018               	goto	l8112
 27610  013344                     l8110:
 27611  013344  0E00               	movlw	0
 27612  013346  6E09               	movwf	(btemp+8)^0,c
 27613  013348  0E00               	movlw	0
 27614  01334A  6E0A               	movwf	(btemp+9)^0,c
 27615  01334C  0E00               	movlw	0
 27616  01334E  6E0B               	movwf	(btemp+10)^0,c
 27617  013350  0E00               	movlw	0
 27618  013352  6E0C               	movwf	(btemp+11)^0,c
 27619                           
 27620                           ;stkvar	_a @ sp[(-13)+-8]
 27621  013354  0EEB               	movlw	-21
 27622  013356  0060  F027  FFE3   	movff	btemp+8,plusw1
 27623  01335C  0EEC               	movlw	-20
 27624  01335E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27625  013364  0EED               	movlw	-19
 27626  013366  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27627  01336C  0EEE               	movlw	-18
 27628  01336E  0060  F033  FFE3   	movff	btemp+11,plusw1
 27629  013374                     l8112:
 27630                           
 27631                           ;stkvar	_aexp @ sp[(-13)+11]
 27632  013374  0EFE               	movlw	-2
 27633  013376  50E3               	movf	plusw1,w,c
 27634  013378  B4D8               	btfsc	status,2,c
 27635  01337A  D004               	goto	u6570
 27636                           
 27637                           ;stkvar	_bexp @ sp[(-13)+10]
 27638  01337C  0EFD               	movlw	-3
 27639  01337E  50E3               	movf	plusw1,w,c
 27640  013380  A4D8               	btfss	status,2,c
 27641  013382  D009               	goto	l8120
 27642  013384                     u6570:
 27643  013384  0E00               	movlw	0
 27644  013386  6E01               	movwf	btemp^0,c
 27645  013388  0E00               	movlw	0
 27646  01338A  6E02               	movwf	(btemp+1)^0,c
 27647  01338C  0E00               	movlw	0
 27648  01338E  6E03               	movwf	(btemp+2)^0,c
 27649  013390  0E00               	movlw	0
 27650  013392  6E04               	movwf	(btemp+3)^0,c
 27651  013394  D332               	goto	l2973
 27652  013396                     l8120:
 27653                           
 27654                           ;stkvar	_b @ sp[(-13)+-4]
 27655  013396  0EEF               	movlw	-17
 27656  013398  006F FF8C  F00C    	movff	plusw1,btemp+11
 27657                           
 27658                           ;stkvar	_a @ sp[(-13)+-8]
 27659  01339E  0EED               	movlw	237
 27660  0133A0  24E1               	addwf	fsr1l,w,c
 27661  0133A2  6ED9               	movwf	fsr2l,c
 27662  0133A4  0EFF               	movlw	255
 27663  0133A6  20E2               	addwfc	fsr1h,w,c
 27664  0133A8  6EDA               	movwf	fsr2h,c
 27665  0133AA  50DF               	movf	indf2,w,c
 27666  0133AC  020C               	mulwf	(btemp+11)^0,c
 27667                           
 27668                           ;stkvar	_temp @ sp[(-13)+8]
 27669  0133AE  0EFB               	movlw	-5
 27670  0133B0  006F FFCF FFE3     	movff	prodl,plusw1
 27671  0133B6  0EFC               	movlw	-4
 27672  0133B8  006F FFD3 FFE3     	movff	prodh,plusw1
 27673                           
 27674                           ;stkvar	_temp @ sp[(-13)+8]
 27675  0133BE  0EFB               	movlw	-5
 27676  0133C0  006F FF8C  F00C    	movff	plusw1,btemp+11
 27677  0133C6  0060  F030  F005   	movff	btemp+11,btemp+4
 27678  0133CC  6A06               	clrf	(btemp+5)^0,c
 27679  0133CE  6A07               	clrf	(btemp+6)^0,c
 27680  0133D0  6A08               	clrf	(btemp+7)^0,c
 27681                           
 27682                           ;stkvar	_grs @ sp[(-13)+4]
 27683  0133D2  0EF7               	movlw	-9
 27684  0133D4  0060  F017  FFE3   	movff	btemp+4,plusw1
 27685  0133DA  0EF8               	movlw	-8
 27686  0133DC  0060  F01B  FFE3   	movff	btemp+5,plusw1
 27687  0133E2  0EF9               	movlw	-7
 27688  0133E4  0060  F01F  FFE3   	movff	btemp+6,plusw1
 27689  0133EA  0EFA               	movlw	-6
 27690  0133EC  0060  F023  FFE3   	movff	btemp+7,plusw1
 27691                           
 27692                           ;stkvar	_temp @ sp[(-13)+8]
 27693  0133F2  0EFC               	movlw	252
 27694  0133F4  24E1               	addwf	fsr1l,w,c
 27695  0133F6  6ED9               	movwf	fsr2l,c
 27696  0133F8  0EFF               	movlw	255
 27697  0133FA  20E2               	addwfc	fsr1h,w,c
 27698  0133FC  6EDA               	movwf	fsr2h,c
 27699  0133FE  50DF               	movf	indf2,w,c
 27700  013400  6E0C               	movwf	(btemp+11)^0,c
 27701  013402  0060  F030  F005   	movff	btemp+11,btemp+4
 27702  013408  6A06               	clrf	(btemp+5)^0,c
 27703  01340A  6A07               	clrf	(btemp+6)^0,c
 27704  01340C  6A08               	clrf	(btemp+7)^0,c
 27705                           
 27706                           ;stkvar	_prod @ sp[(-13)+0]
 27707  01340E  0EF3               	movlw	-13
 27708  013410  0060  F017  FFE3   	movff	btemp+4,plusw1
 27709  013416  0EF4               	movlw	-12
 27710  013418  0060  F01B  FFE3   	movff	btemp+5,plusw1
 27711  01341E  0EF5               	movlw	-11
 27712  013420  0060  F01F  FFE3   	movff	btemp+6,plusw1
 27713  013426  0EF6               	movlw	-10
 27714  013428  0060  F023  FFE3   	movff	btemp+7,plusw1
 27715                           
 27716                           ;stkvar	_b @ sp[(-13)+-4]
 27717  01342E  0EF0               	movlw	240
 27718  013430  24E1               	addwf	fsr1l,w,c
 27719  013432  6ED9               	movwf	fsr2l,c
 27720  013434  0EFF               	movlw	255
 27721  013436  20E2               	addwfc	fsr1h,w,c
 27722  013438  6EDA               	movwf	fsr2h,c
 27723  01343A  50DF               	movf	indf2,w,c
 27724  01343C  6E0C               	movwf	(btemp+11)^0,c
 27725                           
 27726                           ;stkvar	_a @ sp[(-13)+-8]
 27727  01343E  0EEC               	movlw	236
 27728  013440  24E1               	addwf	fsr1l,w,c
 27729  013442  6ED9               	movwf	fsr2l,c
 27730  013444  0EFF               	movlw	255
 27731  013446  20E2               	addwfc	fsr1h,w,c
 27732  013448  6EDA               	movwf	fsr2h,c
 27733  01344A  50DF               	movf	indf2,w,c
 27734  01344C  020C               	mulwf	(btemp+11)^0,c
 27735                           
 27736                           ;stkvar	_temp @ sp[(-13)+8]
 27737  01344E  0EFB               	movlw	-5
 27738  013450  006F FFCF FFE3     	movff	prodl,plusw1
 27739  013456  0EFC               	movlw	-4
 27740  013458  006F FFD3 FFE3     	movff	prodh,plusw1
 27741                           
 27742                           ;stkvar	_grs @ sp[(-13)+4]
 27743  01345E  50E1               	movf	fsr1l,w,c
 27744  013460  0FF7               	addlw	-9
 27745  013462  6ED9               	movwf	fsr2l,c
 27746  013464  50E2               	movf	fsr1h,w,c
 27747  013466  6EDA               	movwf	fsr2h,c
 27748  013468  0EFF               	movlw	255
 27749  01346A  22DA               	addwfc	fsr2h,f,c
 27750                           
 27751                           ;stkvar	_temp @ sp[(-13)+8]
 27752  01346C  0EFB               	movlw	-5
 27753  01346E  50E3               	movf	plusw1,w,c
 27754  013470  26DE               	addwf	postinc2,f,c
 27755  013472  0E00               	movlw	0
 27756  013474  22DE               	addwfc	postinc2,f,c
 27757  013476  22DE               	addwfc	postinc2,f,c
 27758  013478  22DE               	addwfc	postinc2,f,c
 27759                           
 27760                           ;stkvar	_prod @ sp[(-13)+0]
 27761  01347A  50E1               	movf	fsr1l,w,c
 27762  01347C  0FF3               	addlw	-13
 27763  01347E  6ED9               	movwf	fsr2l,c
 27764  013480  50E2               	movf	fsr1h,w,c
 27765  013482  6EDA               	movwf	fsr2h,c
 27766  013484  0EFF               	movlw	255
 27767  013486  22DA               	addwfc	fsr2h,f,c
 27768                           
 27769                           ;stkvar	_temp @ sp[(-13)+8]
 27770  013488  0EFC               	movlw	252
 27771  01348A  24E1               	addwf	fsr1l,w,c
 27772  01348C  6EE9               	movwf	fsr0l,c
 27773  01348E  0EFF               	movlw	255
 27774  013490  20E2               	addwfc	fsr1h,w,c
 27775  013492  6EEA               	movwf	fsr0h,c
 27776  013494  50EF               	movf	indf0,w,c
 27777  013496  26DE               	addwf	postinc2,f,c
 27778  013498  0E00               	movlw	0
 27779  01349A  22DE               	addwfc	postinc2,f,c
 27780  01349C  22DE               	addwfc	postinc2,f,c
 27781  01349E  22DE               	addwfc	postinc2,f,c
 27782                           
 27783                           ;stkvar	_b @ sp[(-13)+-4]
 27784  0134A0  0EF1               	movlw	241
 27785  0134A2  24E1               	addwf	fsr1l,w,c
 27786  0134A4  6ED9               	movwf	fsr2l,c
 27787  0134A6  0EFF               	movlw	255
 27788  0134A8  20E2               	addwfc	fsr1h,w,c
 27789  0134AA  6EDA               	movwf	fsr2h,c
 27790  0134AC  50DF               	movf	indf2,w,c
 27791  0134AE  6E0C               	movwf	(btemp+11)^0,c
 27792                           
 27793                           ;stkvar	_a @ sp[(-13)+-8]
 27794  0134B0  0EEB               	movlw	-21
 27795  0134B2  50E3               	movf	plusw1,w,c
 27796  0134B4  020C               	mulwf	(btemp+11)^0,c
 27797                           
 27798                           ;stkvar	_temp @ sp[(-13)+8]
 27799  0134B6  0EFB               	movlw	-5
 27800  0134B8  006F FFCF FFE3     	movff	prodl,plusw1
 27801  0134BE  0EFC               	movlw	-4
 27802  0134C0  006F FFD3 FFE3     	movff	prodh,plusw1
 27803                           
 27804                           ;stkvar	_grs @ sp[(-13)+4]
 27805  0134C6  50E1               	movf	fsr1l,w,c
 27806  0134C8  0FF7               	addlw	-9
 27807  0134CA  6ED9               	movwf	fsr2l,c
 27808  0134CC  50E2               	movf	fsr1h,w,c
 27809  0134CE  6EDA               	movwf	fsr2h,c
 27810  0134D0  0EFF               	movlw	255
 27811  0134D2  22DA               	addwfc	fsr2h,f,c
 27812                           
 27813                           ;stkvar	_temp @ sp[(-13)+8]
 27814  0134D4  0EFB               	movlw	-5
 27815  0134D6  50E3               	movf	plusw1,w,c
 27816  0134D8  26DE               	addwf	postinc2,f,c
 27817  0134DA  0E00               	movlw	0
 27818  0134DC  22DE               	addwfc	postinc2,f,c
 27819  0134DE  22DE               	addwfc	postinc2,f,c
 27820  0134E0  22DE               	addwfc	postinc2,f,c
 27821                           
 27822                           ;stkvar	_prod @ sp[(-13)+0]
 27823  0134E2  50E1               	movf	fsr1l,w,c
 27824  0134E4  0FF3               	addlw	-13
 27825  0134E6  6ED9               	movwf	fsr2l,c
 27826  0134E8  50E2               	movf	fsr1h,w,c
 27827  0134EA  6EDA               	movwf	fsr2h,c
 27828  0134EC  0EFF               	movlw	255
 27829  0134EE  22DA               	addwfc	fsr2h,f,c
 27830                           
 27831                           ;stkvar	_temp @ sp[(-13)+8]
 27832  0134F0  0EFC               	movlw	252
 27833  0134F2  24E1               	addwf	fsr1l,w,c
 27834  0134F4  6EE9               	movwf	fsr0l,c
 27835  0134F6  0EFF               	movlw	255
 27836  0134F8  20E2               	addwfc	fsr1h,w,c
 27837  0134FA  6EEA               	movwf	fsr0h,c
 27838  0134FC  50EF               	movf	indf0,w,c
 27839  0134FE  26DE               	addwf	postinc2,f,c
 27840  013500  0E00               	movlw	0
 27841  013502  22DE               	addwfc	postinc2,f,c
 27842  013504  22DE               	addwfc	postinc2,f,c
 27843  013506  22DE               	addwfc	postinc2,f,c
 27844                           
 27845                           ;stkvar	_grs @ sp[(-13)+4]
 27846  013508  50E1               	movf	fsr1l,w,c
 27847  01350A  0FF7               	addlw	-9
 27848  01350C  6ED9               	movwf	fsr2l,c
 27849  01350E  50E2               	movf	fsr1h,w,c
 27850  013510  6EDA               	movwf	fsr2h,c
 27851  013512  0EFF               	movlw	255
 27852  013514  22DA               	addwfc	fsr2h,f,c
 27853  013516  0E08               	movlw	8
 27854  013518                     u6585:
 27855  013518  90D8               	bcf	status,0,c
 27856  01351A  36DE               	rlcf	postinc2,f,c
 27857  01351C  36DE               	rlcf	postinc2,f,c
 27858  01351E  36DE               	rlcf	postinc2,f,c
 27859  013520  36DD               	rlcf	postdec2,f,c
 27860  013522  52DD               	movf	postdec2,f,c
 27861  013524  52DD               	movf	postdec2,f,c
 27862  013526  2EE8               	decfsz	wreg,f,c
 27863  013528  D7F7               	goto	u6585
 27864                           
 27865                           ;stkvar	_b @ sp[(-13)+-4]
 27866  01352A  0EF0               	movlw	240
 27867  01352C  24E1               	addwf	fsr1l,w,c
 27868  01352E  6ED9               	movwf	fsr2l,c
 27869  013530  0EFF               	movlw	255
 27870  013532  20E2               	addwfc	fsr1h,w,c
 27871  013534  6EDA               	movwf	fsr2h,c
 27872  013536  50DF               	movf	indf2,w,c
 27873  013538  6E0C               	movwf	(btemp+11)^0,c
 27874                           
 27875                           ;stkvar	_a @ sp[(-13)+-8]
 27876  01353A  0EEB               	movlw	-21
 27877  01353C  50E3               	movf	plusw1,w,c
 27878  01353E  020C               	mulwf	(btemp+11)^0,c
 27879                           
 27880                           ;stkvar	_temp @ sp[(-13)+8]
 27881  013540  0EFB               	movlw	-5
 27882  013542  006F FFCF FFE3     	movff	prodl,plusw1
 27883  013548  0EFC               	movlw	-4
 27884  01354A  006F FFD3 FFE3     	movff	prodh,plusw1
 27885                           
 27886                           ;stkvar	_temp @ sp[(-13)+8]
 27887  013550  0EFB               	movlw	-5
 27888  013552  006F FF8C  F00B    	movff	plusw1,btemp+10
 27889  013558  0EFC               	movlw	-4
 27890  01355A  006F FF8C  F00C    	movff	plusw1,btemp+11
 27891                           
 27892                           ;stkvar	_grs @ sp[(-13)+4]
 27893  013560  50E1               	movf	fsr1l,w,c
 27894  013562  0FF7               	addlw	-9
 27895  013564  6ED9               	movwf	fsr2l,c
 27896  013566  50E2               	movf	fsr1h,w,c
 27897  013568  6EDA               	movwf	fsr2h,c
 27898  01356A  0EFF               	movlw	255
 27899  01356C  22DA               	addwfc	fsr2h,f,c
 27900  01356E  500B               	movf	(btemp+10)^0,w,c
 27901  013570  26DE               	addwf	postinc2,f,c
 27902  013572  500C               	movf	(btemp+11)^0,w,c
 27903  013574  22DE               	addwfc	postinc2,f,c
 27904  013576  0E00               	movlw	0
 27905  013578  22DE               	addwfc	postinc2,f,c
 27906  01357A  22DE               	addwfc	postinc2,f,c
 27907                           
 27908                           ;stkvar	_b @ sp[(-13)+-4]
 27909  01357C  0EEF               	movlw	-17
 27910  01357E  006F FF8C  F00C    	movff	plusw1,btemp+11
 27911                           
 27912                           ;stkvar	_a @ sp[(-13)+-8]
 27913  013584  0EEC               	movlw	236
 27914  013586  24E1               	addwf	fsr1l,w,c
 27915  013588  6ED9               	movwf	fsr2l,c
 27916  01358A  0EFF               	movlw	255
 27917  01358C  20E2               	addwfc	fsr1h,w,c
 27918  01358E  6EDA               	movwf	fsr2h,c
 27919  013590  50DF               	movf	indf2,w,c
 27920  013592  020C               	mulwf	(btemp+11)^0,c
 27921                           
 27922                           ;stkvar	_temp @ sp[(-13)+8]
 27923  013594  0EFB               	movlw	-5
 27924  013596  006F FFCF FFE3     	movff	prodl,plusw1
 27925  01359C  0EFC               	movlw	-4
 27926  01359E  006F FFD3 FFE3     	movff	prodh,plusw1
 27927                           
 27928                           ;stkvar	_temp @ sp[(-13)+8]
 27929  0135A4  0EFB               	movlw	-5
 27930  0135A6  006F FF8C  F00B    	movff	plusw1,btemp+10
 27931  0135AC  0EFC               	movlw	-4
 27932  0135AE  006F FF8C  F00C    	movff	plusw1,btemp+11
 27933                           
 27934                           ;stkvar	_grs @ sp[(-13)+4]
 27935  0135B4  50E1               	movf	fsr1l,w,c
 27936  0135B6  0FF7               	addlw	-9
 27937  0135B8  6ED9               	movwf	fsr2l,c
 27938  0135BA  50E2               	movf	fsr1h,w,c
 27939  0135BC  6EDA               	movwf	fsr2h,c
 27940  0135BE  0EFF               	movlw	255
 27941  0135C0  22DA               	addwfc	fsr2h,f,c
 27942  0135C2  500B               	movf	(btemp+10)^0,w,c
 27943  0135C4  26DE               	addwf	postinc2,f,c
 27944  0135C6  500C               	movf	(btemp+11)^0,w,c
 27945  0135C8  22DE               	addwfc	postinc2,f,c
 27946  0135CA  0E00               	movlw	0
 27947  0135CC  22DE               	addwfc	postinc2,f,c
 27948  0135CE  22DE               	addwfc	postinc2,f,c
 27949                           
 27950                           ;stkvar	_grs @ sp[(-13)+4]
 27951  0135D0  50E1               	movf	fsr1l,w,c
 27952  0135D2  0FF7               	addlw	-9
 27953  0135D4  6ED9               	movwf	fsr2l,c
 27954  0135D6  50E2               	movf	fsr1h,w,c
 27955  0135D8  6EDA               	movwf	fsr2h,c
 27956  0135DA  0EFF               	movlw	255
 27957  0135DC  22DA               	addwfc	fsr2h,f,c
 27958  0135DE  0E08               	movlw	8
 27959  0135E0                     u6595:
 27960  0135E0  90D8               	bcf	status,0,c
 27961  0135E2  36DE               	rlcf	postinc2,f,c
 27962  0135E4  36DE               	rlcf	postinc2,f,c
 27963  0135E6  36DE               	rlcf	postinc2,f,c
 27964  0135E8  36DD               	rlcf	postdec2,f,c
 27965  0135EA  52DD               	movf	postdec2,f,c
 27966  0135EC  52DD               	movf	postdec2,f,c
 27967  0135EE  2EE8               	decfsz	wreg,f,c
 27968  0135F0  D7F7               	goto	u6595
 27969                           
 27970                           ;stkvar	_b @ sp[(-13)+-4]
 27971  0135F2  0EEF               	movlw	-17
 27972  0135F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 27973                           
 27974                           ;stkvar	_a @ sp[(-13)+-8]
 27975  0135FA  0EEB               	movlw	-21
 27976  0135FC  50E3               	movf	plusw1,w,c
 27977  0135FE  020C               	mulwf	(btemp+11)^0,c
 27978                           
 27979                           ;stkvar	_temp @ sp[(-13)+8]
 27980  013600  0EFB               	movlw	-5
 27981  013602  006F FFCF FFE3     	movff	prodl,plusw1
 27982  013608  0EFC               	movlw	-4
 27983  01360A  006F FFD3 FFE3     	movff	prodh,plusw1
 27984                           
 27985                           ;stkvar	_temp @ sp[(-13)+8]
 27986  013610  0EFB               	movlw	-5
 27987  013612  006F FF8C  F00B    	movff	plusw1,btemp+10
 27988  013618  0EFC               	movlw	-4
 27989  01361A  006F FF8C  F00C    	movff	plusw1,btemp+11
 27990                           
 27991                           ;stkvar	_grs @ sp[(-13)+4]
 27992  013620  50E1               	movf	fsr1l,w,c
 27993  013622  0FF7               	addlw	-9
 27994  013624  6ED9               	movwf	fsr2l,c
 27995  013626  50E2               	movf	fsr1h,w,c
 27996  013628  6EDA               	movwf	fsr2h,c
 27997  01362A  0EFF               	movlw	255
 27998  01362C  22DA               	addwfc	fsr2h,f,c
 27999  01362E  500B               	movf	(btemp+10)^0,w,c
 28000  013630  26DE               	addwf	postinc2,f,c
 28001  013632  500C               	movf	(btemp+11)^0,w,c
 28002  013634  22DE               	addwfc	postinc2,f,c
 28003  013636  0E00               	movlw	0
 28004  013638  22DE               	addwfc	postinc2,f,c
 28005  01363A  22DE               	addwfc	postinc2,f,c
 28006                           
 28007                           ;stkvar	_b @ sp[(-13)+-4]
 28008  01363C  0EF0               	movlw	240
 28009  01363E  24E1               	addwf	fsr1l,w,c
 28010  013640  6ED9               	movwf	fsr2l,c
 28011  013642  0EFF               	movlw	255
 28012  013644  20E2               	addwfc	fsr1h,w,c
 28013  013646  6EDA               	movwf	fsr2h,c
 28014  013648  50DF               	movf	indf2,w,c
 28015  01364A  6E0C               	movwf	(btemp+11)^0,c
 28016                           
 28017                           ;stkvar	_a @ sp[(-13)+-8]
 28018  01364C  0EED               	movlw	237
 28019  01364E  24E1               	addwf	fsr1l,w,c
 28020  013650  6ED9               	movwf	fsr2l,c
 28021  013652  0EFF               	movlw	255
 28022  013654  20E2               	addwfc	fsr1h,w,c
 28023  013656  6EDA               	movwf	fsr2h,c
 28024  013658  50DF               	movf	indf2,w,c
 28025  01365A  020C               	mulwf	(btemp+11)^0,c
 28026                           
 28027                           ;stkvar	_temp @ sp[(-13)+8]
 28028  01365C  0EFB               	movlw	-5
 28029  01365E  006F FFCF FFE3     	movff	prodl,plusw1
 28030  013664  0EFC               	movlw	-4
 28031  013666  006F FFD3 FFE3     	movff	prodh,plusw1
 28032                           
 28033                           ;stkvar	_temp @ sp[(-13)+8]
 28034  01366C  0EFB               	movlw	-5
 28035  01366E  006F FF8C  F00B    	movff	plusw1,btemp+10
 28036  013674  0EFC               	movlw	-4
 28037  013676  006F FF8C  F00C    	movff	plusw1,btemp+11
 28038                           
 28039                           ;stkvar	_prod @ sp[(-13)+0]
 28040  01367C  50E1               	movf	fsr1l,w,c
 28041  01367E  0FF3               	addlw	-13
 28042  013680  6ED9               	movwf	fsr2l,c
 28043  013682  50E2               	movf	fsr1h,w,c
 28044  013684  6EDA               	movwf	fsr2h,c
 28045  013686  0EFF               	movlw	255
 28046  013688  22DA               	addwfc	fsr2h,f,c
 28047  01368A  500B               	movf	(btemp+10)^0,w,c
 28048  01368C  26DE               	addwf	postinc2,f,c
 28049  01368E  500C               	movf	(btemp+11)^0,w,c
 28050  013690  22DE               	addwfc	postinc2,f,c
 28051  013692  0E00               	movlw	0
 28052  013694  22DE               	addwfc	postinc2,f,c
 28053  013696  22DE               	addwfc	postinc2,f,c
 28054                           
 28055                           ;stkvar	_b @ sp[(-13)+-4]
 28056  013698  0EF1               	movlw	241
 28057  01369A  24E1               	addwf	fsr1l,w,c
 28058  01369C  6ED9               	movwf	fsr2l,c
 28059  01369E  0EFF               	movlw	255
 28060  0136A0  20E2               	addwfc	fsr1h,w,c
 28061  0136A2  6EDA               	movwf	fsr2h,c
 28062  0136A4  50DF               	movf	indf2,w,c
 28063  0136A6  6E0C               	movwf	(btemp+11)^0,c
 28064                           
 28065                           ;stkvar	_a @ sp[(-13)+-8]
 28066  0136A8  0EEC               	movlw	236
 28067  0136AA  24E1               	addwf	fsr1l,w,c
 28068  0136AC  6ED9               	movwf	fsr2l,c
 28069  0136AE  0EFF               	movlw	255
 28070  0136B0  20E2               	addwfc	fsr1h,w,c
 28071  0136B2  6EDA               	movwf	fsr2h,c
 28072  0136B4  50DF               	movf	indf2,w,c
 28073  0136B6  020C               	mulwf	(btemp+11)^0,c
 28074                           
 28075                           ;stkvar	_temp @ sp[(-13)+8]
 28076  0136B8  0EFB               	movlw	-5
 28077  0136BA  006F FFCF FFE3     	movff	prodl,plusw1
 28078  0136C0  0EFC               	movlw	-4
 28079  0136C2  006F FFD3 FFE3     	movff	prodh,plusw1
 28080                           
 28081                           ;stkvar	_temp @ sp[(-13)+8]
 28082  0136C8  0EFB               	movlw	-5
 28083  0136CA  006F FF8C  F00B    	movff	plusw1,btemp+10
 28084  0136D0  0EFC               	movlw	-4
 28085  0136D2  006F FF8C  F00C    	movff	plusw1,btemp+11
 28086                           
 28087                           ;stkvar	_prod @ sp[(-13)+0]
 28088  0136D8  50E1               	movf	fsr1l,w,c
 28089  0136DA  0FF3               	addlw	-13
 28090  0136DC  6ED9               	movwf	fsr2l,c
 28091  0136DE  50E2               	movf	fsr1h,w,c
 28092  0136E0  6EDA               	movwf	fsr2h,c
 28093  0136E2  0EFF               	movlw	255
 28094  0136E4  22DA               	addwfc	fsr2h,f,c
 28095  0136E6  500B               	movf	(btemp+10)^0,w,c
 28096  0136E8  26DE               	addwf	postinc2,f,c
 28097  0136EA  500C               	movf	(btemp+11)^0,w,c
 28098  0136EC  22DE               	addwfc	postinc2,f,c
 28099  0136EE  0E00               	movlw	0
 28100  0136F0  22DE               	addwfc	postinc2,f,c
 28101  0136F2  22DE               	addwfc	postinc2,f,c
 28102                           
 28103                           ;stkvar	_b @ sp[(-13)+-4]
 28104  0136F4  0EF1               	movlw	241
 28105  0136F6  24E1               	addwf	fsr1l,w,c
 28106  0136F8  6ED9               	movwf	fsr2l,c
 28107  0136FA  0EFF               	movlw	255
 28108  0136FC  20E2               	addwfc	fsr1h,w,c
 28109  0136FE  6EDA               	movwf	fsr2h,c
 28110  013700  50DF               	movf	indf2,w,c
 28111  013702  6E0C               	movwf	(btemp+11)^0,c
 28112                           
 28113                           ;stkvar	_a @ sp[(-13)+-8]
 28114  013704  0EED               	movlw	237
 28115  013706  24E1               	addwf	fsr1l,w,c
 28116  013708  6ED9               	movwf	fsr2l,c
 28117  01370A  0EFF               	movlw	255
 28118  01370C  20E2               	addwfc	fsr1h,w,c
 28119  01370E  6EDA               	movwf	fsr2h,c
 28120  013710  50DF               	movf	indf2,w,c
 28121  013712  020C               	mulwf	(btemp+11)^0,c
 28122                           
 28123                           ;stkvar	_temp @ sp[(-13)+8]
 28124  013714  0EFB               	movlw	-5
 28125  013716  006F FFCF FFE3     	movff	prodl,plusw1
 28126  01371C  0EFC               	movlw	-4
 28127  01371E  006F FFD3 FFE3     	movff	prodh,plusw1
 28128                           
 28129                           ;stkvar	_temp @ sp[(-13)+8]
 28130  013724  0EFB               	movlw	-5
 28131  013726  006F FF8C  F00B    	movff	plusw1,btemp+10
 28132  01372C  0EFC               	movlw	-4
 28133  01372E  006F FF8C  F00C    	movff	plusw1,btemp+11
 28134  013734  500B               	movf	(btemp+10)^0,w,c
 28135  013736  6E05               	movwf	(btemp+4)^0,c
 28136  013738  500C               	movf	(btemp+11)^0,w,c
 28137  01373A  6E06               	movwf	(btemp+5)^0,c
 28138  01373C  6A07               	clrf	(btemp+6)^0,c
 28139  01373E  6A08               	clrf	(btemp+7)^0,c
 28140  013740  0060  F01C  F008   	movff	btemp+6,btemp+7
 28141  013746  0060  F018  F007   	movff	btemp+5,btemp+6
 28142  01374C  0060  F014  F006   	movff	btemp+4,btemp+5
 28143  013752  6A05               	clrf	(btemp+4)^0,c
 28144                           
 28145                           ;stkvar	_prod @ sp[(-13)+0]
 28146  013754  50E1               	movf	fsr1l,w,c
 28147  013756  0FF3               	addlw	-13
 28148  013758  6ED9               	movwf	fsr2l,c
 28149  01375A  50E2               	movf	fsr1h,w,c
 28150  01375C  6EDA               	movwf	fsr2h,c
 28151  01375E  0EFF               	movlw	255
 28152  013760  22DA               	addwfc	fsr2h,f,c
 28153  013762  5005               	movf	(btemp+4)^0,w,c
 28154  013764  26DE               	addwf	postinc2,f,c
 28155  013766  5006               	movf	(btemp+5)^0,w,c
 28156  013768  22DE               	addwfc	postinc2,f,c
 28157  01376A  5007               	movf	(btemp+6)^0,w,c
 28158  01376C  22DE               	addwfc	postinc2,f,c
 28159  01376E  5008               	movf	(btemp+7)^0,w,c
 28160  013770  22DE               	addwfc	postinc2,f,c
 28161                           
 28162                           ;stkvar	_prod @ sp[(-13)+0]
 28163  013772  50E1               	movf	fsr1l,w,c
 28164  013774  0FF3               	addlw	-13
 28165  013776  6ED9               	movwf	fsr2l,c
 28166  013778  50E2               	movf	fsr1h,w,c
 28167  01377A  6EDA               	movwf	fsr2h,c
 28168  01377C  0EFF               	movlw	255
 28169  01377E  22DA               	addwfc	fsr2h,f,c
 28170                           
 28171                           ;stkvar	_grs @ sp[(-13)+4]
 28172  013780  0EFA               	movlw	250
 28173  013782  24E1               	addwf	fsr1l,w,c
 28174  013784  6EE9               	movwf	fsr0l,c
 28175  013786  0EFF               	movlw	255
 28176  013788  20E2               	addwfc	fsr1h,w,c
 28177  01378A  6EEA               	movwf	fsr0h,c
 28178  01378C  50EF               	movf	indf0,w,c
 28179  01378E  26DE               	addwf	postinc2,f,c
 28180  013790  0E00               	movlw	0
 28181  013792  22DE               	addwfc	postinc2,f,c
 28182  013794  22DE               	addwfc	postinc2,f,c
 28183  013796  22DE               	addwfc	postinc2,f,c
 28184                           
 28185                           ;stkvar	_grs @ sp[(-13)+4]
 28186  013798  50E1               	movf	fsr1l,w,c
 28187  01379A  0FF7               	addlw	-9
 28188  01379C  6ED9               	movwf	fsr2l,c
 28189  01379E  50E2               	movf	fsr1h,w,c
 28190  0137A0  6EDA               	movwf	fsr2h,c
 28191  0137A2  0EFF               	movlw	255
 28192  0137A4  22DA               	addwfc	fsr2h,f,c
 28193  0137A6  0E08               	movlw	8
 28194  0137A8                     u6605:
 28195  0137A8  90D8               	bcf	status,0,c
 28196  0137AA  36DE               	rlcf	postinc2,f,c
 28197  0137AC  36DE               	rlcf	postinc2,f,c
 28198  0137AE  36DE               	rlcf	postinc2,f,c
 28199  0137B0  36DD               	rlcf	postdec2,f,c
 28200  0137B2  52DD               	movf	postdec2,f,c
 28201  0137B4  52DD               	movf	postdec2,f,c
 28202  0137B6  2EE8               	decfsz	wreg,f,c
 28203  0137B8  D7F7               	goto	u6605
 28204  0137BA  0E82               	movlw	130
 28205  0137BC  6E0B               	movwf	(btemp+10)^0,c
 28206  0137BE  0EFF               	movlw	255
 28207  0137C0  6E0C               	movwf	(btemp+11)^0,c
 28208                           
 28209                           ;stkvar	_bexp @ sp[(-13)+10]
 28210  0137C2  0EFD               	movlw	-3
 28211  0137C4  50E3               	movf	plusw1,w,c
 28212  0137C6  6E09               	movwf	(btemp+8)^0,c
 28213  0137C8  6A0A               	clrf	(btemp+9)^0,c
 28214                           
 28215                           ;stkvar	_aexp @ sp[(-13)+11]
 28216  0137CA  0EFE               	movlw	-2
 28217  0137CC  50E3               	movf	plusw1,w,c
 28218  0137CE  2609               	addwf	(btemp+8)^0,f,c
 28219  0137D0  0E00               	movlw	0
 28220  0137D2  220A               	addwfc	(btemp+9)^0,f,c
 28221  0137D4  500B               	movf	(btemp+10)^0,w,c
 28222  0137D6  2609               	addwf	(btemp+8)^0,f,c
 28223  0137D8  500C               	movf	(btemp+11)^0,w,c
 28224  0137DA  220A               	addwfc	(btemp+9)^0,f,c
 28225                           
 28226                           ;stkvar	_temp @ sp[(-13)+8]
 28227  0137DC  0EFB               	movlw	-5
 28228  0137DE  0060  F027  FFE3   	movff	btemp+8,plusw1
 28229  0137E4  0EFC               	movlw	-4
 28230  0137E6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28231  0137EC  D021               	goto	l8182
 28232  0137EE                     l8172:
 28233                           
 28234                           ;stkvar	_prod @ sp[(-13)+0]
 28235  0137EE  90D8               	bcf	status,0,c
 28236  0137F0  0EF3               	movlw	-13
 28237  0137F2  36E3               	rlcf	plusw1,f,c
 28238  0137F4  0EF4               	movlw	-12
 28239  0137F6  36E3               	rlcf	plusw1,f,c
 28240  0137F8  0EF5               	movlw	-11
 28241  0137FA  36E3               	rlcf	plusw1,f,c
 28242  0137FC  0EF6               	movlw	-10
 28243  0137FE  36E3               	rlcf	plusw1,f,c
 28244                           
 28245                           ;stkvar	_grs @ sp[(-13)+4]
 28246  013800  0EFA               	movlw	-6
 28247  013802  AEE3               	btfss	plusw1,7,c
 28248  013804  D002               	goto	l8178
 28249                           
 28250                           ;stkvar	_prod @ sp[(-13)+0]
 28251  013806  0EF3               	movlw	-13
 28252  013808  80E3               	bsf	plusw1,0,c
 28253  01380A                     l8178:
 28254                           
 28255                           ;stkvar	_grs @ sp[(-13)+4]
 28256  01380A  90D8               	bcf	status,0,c
 28257  01380C  0EF7               	movlw	-9
 28258  01380E  36E3               	rlcf	plusw1,f,c
 28259  013810  0EF8               	movlw	-8
 28260  013812  36E3               	rlcf	plusw1,f,c
 28261  013814  0EF9               	movlw	-7
 28262  013816  36E3               	rlcf	plusw1,f,c
 28263  013818  0EFA               	movlw	-6
 28264  01381A  36E3               	rlcf	plusw1,f,c
 28265                           
 28266                           ;stkvar	_temp @ sp[(-13)+8]
 28267  01381C  50E1               	movf	fsr1l,w,c
 28268  01381E  0FFB               	addlw	-5
 28269  013820  6ED9               	movwf	fsr2l,c
 28270  013822  50E2               	movf	fsr1h,w,c
 28271  013824  6EDA               	movwf	fsr2h,c
 28272  013826  0EFF               	movlw	255
 28273  013828  22DA               	addwfc	fsr2h,f,c
 28274  01382A  06DE               	decf	postinc2,f,c
 28275  01382C  0E00               	movlw	0
 28276  01382E  5ADD               	subwfb	postdec2,f,c
 28277  013830                     l8182:
 28278                           
 28279                           ;stkvar	_prod @ sp[(-13)+0]
 28280  013830  0EF5               	movlw	-11
 28281  013832  AEE3               	btfss	plusw1,7,c
 28282  013834  D7DC               	goto	l8172
 28283                           
 28284                           ;stkvar	_aexp @ sp[(-13)+11]
 28285  013836  0EFE               	movlw	-2
 28286  013838  6AE3               	clrf	plusw1,c
 28287                           
 28288                           ;stkvar	_grs @ sp[(-13)+4]
 28289  01383A  0EFA               	movlw	-6
 28290  01383C  AEE3               	btfss	plusw1,7,c
 28291  01383E  D020               	goto	l8196
 28292                           
 28293                           ;stkvar	_grs @ sp[(-13)+4]
 28294  013840  50E1               	movf	fsr1l,w,c
 28295  013842  0FF7               	addlw	-9
 28296  013844  6ED9               	movwf	fsr2l,c
 28297  013846  50E2               	movf	fsr1h,w,c
 28298  013848  6EDA               	movwf	fsr2h,c
 28299  01384A  0EFF               	movlw	255
 28300  01384C  22DA               	addwfc	fsr2h,f,c
 28301  01384E  0EFF               	movlw	255
 28302  013850  14DE               	andwf	postinc2,w,c
 28303  013852  6E09               	movwf	(btemp+8)^0,c
 28304  013854  0EFF               	movlw	255
 28305  013856  14DE               	andwf	postinc2,w,c
 28306  013858  6E0A               	movwf	(btemp+9)^0,c
 28307  01385A  0EFF               	movlw	255
 28308  01385C  14DE               	andwf	postinc2,w,c
 28309  01385E  6E0B               	movwf	(btemp+10)^0,c
 28310  013860  0E7F               	movlw	127
 28311  013862  14DE               	andwf	postinc2,w,c
 28312  013864  6E0C               	movwf	(btemp+11)^0,c
 28313  013866  5009               	movf	(btemp+8)^0,w,c
 28314  013868  100A               	iorwf	(btemp+9)^0,w,c
 28315  01386A  100B               	iorwf	(btemp+10)^0,w,c
 28316  01386C  100C               	iorwf	(btemp+11)^0,w,c
 28317  01386E  B4D8               	btfsc	status,2,c
 28318  013870  D004               	goto	l8192
 28319  013872                     u6640:
 28320                           
 28321                           ;stkvar	_aexp @ sp[(-13)+11]
 28322  013872  0EFE               	movlw	-2
 28323  013874  6AE3               	clrf	plusw1,c
 28324  013876  2AE3               	incf	plusw1,f,c
 28325  013878  D003               	goto	l8196
 28326  01387A                     l8192:
 28327                           
 28328                           ;stkvar	_prod @ sp[(-13)+0]
 28329  01387A  0EF3               	movlw	-13
 28330  01387C  B0E3               	btfsc	plusw1,0,c
 28331  01387E  D7F9               	goto	u6640
 28332  013880                     l8196:
 28333                           
 28334                           ;stkvar	_aexp @ sp[(-13)+11]
 28335  013880  0EFE               	movlw	-2
 28336  013882  50E3               	movf	plusw1,w,c
 28337  013884  B4D8               	btfsc	status,2,c
 28338  013886  D036               	goto	l8206
 28339                           
 28340                           ;stkvar	_prod @ sp[(-13)+0]
 28341  013888  50E1               	movf	fsr1l,w,c
 28342  01388A  0FF3               	addlw	-13
 28343  01388C  6ED9               	movwf	fsr2l,c
 28344  01388E  50E2               	movf	fsr1h,w,c
 28345  013890  6EDA               	movwf	fsr2h,c
 28346  013892  0EFF               	movlw	255
 28347  013894  22DA               	addwfc	fsr2h,f,c
 28348  013896  2ADE               	incf	postinc2,f,c
 28349  013898  0E00               	movlw	0
 28350  01389A  22DE               	addwfc	postinc2,f,c
 28351  01389C  22DE               	addwfc	postinc2,f,c
 28352  01389E  22DE               	addwfc	postinc2,f,c
 28353                           
 28354                           ;stkvar	_prod @ sp[(-13)+0]
 28355  0138A0  0EF6               	movlw	-10
 28356  0138A2  A0E3               	btfss	plusw1,0,c
 28357  0138A4  D027               	goto	l8206
 28358  0138A6  0E01               	movlw	1
 28359  0138A8  6E0C               	movwf	(btemp+11)^0,c
 28360                           
 28361                           ;stkvar	_prod @ sp[(-13)+0]
 28362  0138AA  50E1               	movf	fsr1l,w,c
 28363  0138AC  0FF3               	addlw	-13
 28364  0138AE  6ED9               	movwf	fsr2l,c
 28365  0138B0  50E2               	movf	fsr1h,w,c
 28366  0138B2  6EDA               	movwf	fsr2h,c
 28367  0138B4  0EFF               	movlw	255
 28368  0138B6  22DA               	addwfc	fsr2h,f,c
 28369  0138B8  280C               	incf	(btemp+11)^0,w,c
 28370  0138BA  52DE               	movf	postinc2,f,c
 28371  0138BC  D008               	goto	u6680
 28372  0138BE                     u6685:
 28373  0138BE  52DE               	movf	postinc2,f,c
 28374  0138C0  90D8               	bcf	status,0,c
 28375  0138C2  BEDC               	btfsc	preinc2,7,c
 28376  0138C4  80D8               	bsf	status,0,c
 28377  0138C6  32DD               	rrcf	postdec2,f,c
 28378  0138C8  32DD               	rrcf	postdec2,f,c
 28379  0138CA  32DD               	rrcf	postdec2,f,c
 28380  0138CC  32DE               	rrcf	postinc2,f,c
 28381  0138CE                     u6680:
 28382  0138CE  2EE8               	decfsz	wreg,f,c
 28383  0138D0  D7F6               	goto	u6685
 28384                           
 28385                           ;stkvar	_temp @ sp[(-13)+8]
 28386  0138D2  0EFB               	movlw	-5
 28387  0138D4  50E3               	movf	plusw1,w,c
 28388  0138D6  0F01               	addlw	1
 28389  0138D8  6E01               	movwf	btemp^0,c
 28390  0138DA  0EFB               	movlw	-5
 28391  0138DC  0060  F007  FFE3   	movff	btemp,plusw1
 28392  0138E2  6A01               	clrf	btemp^0,c
 28393  0138E4  0EFC               	movlw	-4
 28394  0138E6  50E3               	movf	plusw1,w,c
 28395  0138E8  2001               	addwfc	btemp^0,w,c
 28396  0138EA  6E01               	movwf	btemp^0,c
 28397  0138EC  0EFC               	movlw	-4
 28398  0138EE  0060  F007  FFE3   	movff	btemp,plusw1
 28399  0138F4                     l8206:
 28400                           
 28401                           ;stkvar	_temp @ sp[(-13)+8]
 28402  0138F4  0EFC               	movlw	-4
 28403  0138F6  BEE3               	btfsc	plusw1,7,c
 28404  0138F8  D020               	goto	l8210
 28405  0138FA  0EFC               	movlw	-4
 28406  0138FC  50E3               	movf	plusw1,w,c
 28407  0138FE  E104               	bnz	u6690
 28408  013900  0EFB               	movlw	-5
 28409  013902  28E3               	incf	plusw1,w,c
 28410  013904  A0D8               	btfss	status,0,c
 28411  013906  D019               	goto	l8210
 28412  013908                     u6690:
 28413  013908  0E00               	movlw	0
 28414  01390A  6E09               	movwf	(btemp+8)^0,c
 28415  01390C  0E00               	movlw	0
 28416  01390E  6E0A               	movwf	(btemp+9)^0,c
 28417  013910  0E80               	movlw	128
 28418  013912  6E0B               	movwf	(btemp+10)^0,c
 28419  013914  0E7F               	movlw	127
 28420  013916  6E0C               	movwf	(btemp+11)^0,c
 28421                           
 28422                           ;stkvar	_prod @ sp[(-13)+0]
 28423  013918  0EF3               	movlw	-13
 28424  01391A  0060  F027  FFE3   	movff	btemp+8,plusw1
 28425  013920  0EF4               	movlw	-12
 28426  013922  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28427  013928  0EF5               	movlw	-11
 28428  01392A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28429  013930  0EF6               	movlw	-10
 28430  013932  0060  F033  FFE3   	movff	btemp+11,plusw1
 28431  013938  D044               	goto	l8226
 28432  01393A                     l8210:
 28433                           
 28434                           ;stkvar	_temp @ sp[(-13)+8]
 28435  01393A  0EFC               	movlw	-4
 28436  01393C  BEE3               	btfsc	plusw1,7,c
 28437  01393E  D007               	goto	u6700
 28438  013940  0EFC               	movlw	-4
 28439  013942  50E3               	movf	plusw1,w,c
 28440  013944  E10F               	bnz	l8216
 28441  013946  0EFB               	movlw	-5
 28442  013948  04E3               	decf	plusw1,w,c
 28443  01394A  B0D8               	btfsc	status,0,c
 28444  01394C  D00B               	goto	l8216
 28445  01394E                     u6700:
 28446                           
 28447                           ;stkvar	_prod @ sp[(-13)+0]
 28448  01394E  0EF3               	movlw	-13
 28449  013950  6AE3               	clrf	plusw1,c
 28450  013952  0EF4               	movlw	-12
 28451  013954  6AE3               	clrf	plusw1,c
 28452  013956  0EF5               	movlw	-11
 28453  013958  6AE3               	clrf	plusw1,c
 28454  01395A  0EF6               	movlw	-10
 28455  01395C  6AE3               	clrf	plusw1,c
 28456                           
 28457                           ;stkvar	_sign @ sp[(-13)+12]
 28458  01395E  0EFF               	movlw	-1
 28459  013960  6AE3               	clrf	plusw1,c
 28460  013962  D02F               	goto	l8226
 28461  013964                     l8216:
 28462                           
 28463                           ;stkvar	_temp @ sp[(-13)+8]
 28464                           ;stkvar	_bexp @ sp[(-13)+10]
 28465  013964  0EFB               	movlw	-5
 28466  013966  006F FF8C  F001    	movff	plusw1,btemp
 28467  01396C  0EFD               	movlw	-3
 28468  01396E  0060  F007  FFE3   	movff	btemp,plusw1
 28469                           
 28470                           ;stkvar	_prod @ sp[(-13)+0]
 28471  013974  50E1               	movf	fsr1l,w,c
 28472  013976  0FF3               	addlw	-13
 28473  013978  6ED9               	movwf	fsr2l,c
 28474  01397A  50E2               	movf	fsr1h,w,c
 28475  01397C  6EDA               	movwf	fsr2h,c
 28476  01397E  0EFF               	movlw	255
 28477  013980  22DA               	addwfc	fsr2h,f,c
 28478  013982  0EFF               	movlw	255
 28479  013984  16DE               	andwf	postinc2,f,c
 28480  013986  0EFF               	movlw	255
 28481  013988  16DE               	andwf	postinc2,f,c
 28482  01398A  0E7F               	movlw	127
 28483  01398C  16DE               	andwf	postinc2,f,c
 28484  01398E  0E00               	movlw	0
 28485  013990  16DE               	andwf	postinc2,f,c
 28486                           
 28487                           ;stkvar	_bexp @ sp[(-13)+10]
 28488  013992  0EFD               	movlw	-3
 28489  013994  A0E3               	btfss	plusw1,0,c
 28490  013996  D008               	goto	l8224
 28491                           
 28492                           ;stkvar	_prod @ sp[(-13)+0]
 28493  013998  0EF5               	movlw	245
 28494  01399A  24E1               	addwf	fsr1l,w,c
 28495  01399C  6ED9               	movwf	fsr2l,c
 28496  01399E  0EFF               	movlw	255
 28497  0139A0  20E2               	addwfc	fsr1h,w,c
 28498  0139A2  6EDA               	movwf	fsr2h,c
 28499  0139A4  0E00               	movlw	0
 28500  0139A6  8EDB               	bsf	plusw2,7,c
 28501  0139A8                     l8224:
 28502                           
 28503                           ;stkvar	_prod @ sp[(-13)+0]
 28504  0139A8  0EF6               	movlw	246
 28505  0139AA  24E1               	addwf	fsr1l,w,c
 28506  0139AC  6ED9               	movwf	fsr2l,c
 28507  0139AE  0EFF               	movlw	255
 28508  0139B0  20E2               	addwfc	fsr1h,w,c
 28509  0139B2  6EDA               	movwf	fsr2h,c
 28510                           
 28511                           ;stkvar	_bexp @ sp[(-13)+10]
 28512  0139B4  0EFD               	movlw	-3
 28513  0139B6  006F FF8C  F00C    	movff	plusw1,btemp+11
 28514  0139BC  90D8               	bcf	status,0,c
 28515  0139BE  300C               	rrcf	(btemp+11)^0,w,c
 28516  0139C0  6EDF               	movwf	indf2,c
 28517  0139C2                     l8226:
 28518                           
 28519                           ;stkvar	_sign @ sp[(-13)+12]
 28520  0139C2  0EFF               	movlw	-1
 28521  0139C4  006F FF8C  F00C    	movff	plusw1,btemp+11
 28522                           
 28523                           ;stkvar	_prod @ sp[(-13)+0]
 28524  0139CA  0EF6               	movlw	246
 28525  0139CC  24E1               	addwf	fsr1l,w,c
 28526  0139CE  6ED9               	movwf	fsr2l,c
 28527  0139D0  0EFF               	movlw	255
 28528  0139D2  20E2               	addwfc	fsr1h,w,c
 28529  0139D4  6EDA               	movwf	fsr2h,c
 28530  0139D6  500C               	movf	(btemp+11)^0,w,c
 28531  0139D8  12DF               	iorwf	indf2,f,c
 28532                           
 28533                           ;stkvar	_prod @ sp[(-13)+0]
 28534  0139DA  0EF3               	movlw	-13
 28535  0139DC  006F FF8C  F001    	movff	plusw1,btemp
 28536  0139E2  0EF4               	movlw	-12
 28537  0139E4  006F FF8C  F002    	movff	plusw1,btemp+1
 28538  0139EA  0EF5               	movlw	-11
 28539  0139EC  006F FF8C  F003    	movff	plusw1,btemp+2
 28540  0139F2  0EF6               	movlw	-10
 28541  0139F4  006F FF8C  F004    	movff	plusw1,btemp+3
 28542  0139FA                     l2973:
 28543                           
 28544                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 28545  0139FA  0EEB               	movlw	235
 28546  0139FC  26E1               	addwf	fsr1l,f,c
 28547  0139FE  0EFF               	movlw	255
 28548  013A00  22E2               	addwfc	fsr1h,f,c
 28549  013A02  0012               	return		;funcret
 28550  013A04                     __end_of___flmul:
 28551                           	opt callstack 0
 28552                           
 28553 ;; *************** function _SYSTEM_Initialize *****************
 28554 ;; Defined at:
 28555 ;;		line 50 in file "mcc_generated_files/mcc.c"
 28556 ;; Parameters:    Size  Location     Type
 28557 ;;		None
 28558 ;; Auto vars:     Size  Location     Type
 28559 ;;		None
 28560 ;; Return value:  Size  Location     Type
 28561 ;;                  1  [STACK] void 
 28562 ;; Registers used:
 28563 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 28564 ;; Tracked objects:
 28565 ;;		On entry : 0/0
 28566 ;;		On exit  : 3F/3C
 28567 ;;		Unchanged: 0/0
 28568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28573 ;;Total ram usage:        0 bytes
 28574 ;; Hardware stack levels used:    1
 28575 ;; Hardware stack levels required when called:   17
 28576 ;; This function calls:
 28577 ;;		_ADCC_Initialize
 28578 ;;		_CLKREF_Initialize
 28579 ;;		_DMA1_Initialize
 28580 ;;		_DMA2_Initialize
 28581 ;;		_EXT_INT_Initialize
 28582 ;;		_FVR_Initialize
 28583 ;;		_INTERRUPT_Initialize
 28584 ;;		_OSCILLATOR_Initialize
 28585 ;;		_PIN_MANAGER_Initialize
 28586 ;;		_PMD_Initialize
 28587 ;;		_PWM8_Initialize
 28588 ;;		_SPI1_Initialize
 28589 ;;		_TMR2_Initialize
 28590 ;;		_TMR3_Initialize
 28591 ;;		_TMR5_Initialize
 28592 ;;		_TMR6_Initialize
 28593 ;;		_UART1_Initialize
 28594 ;;		_UART2_Initialize
 28595 ;; This function is called by:
 28596 ;;		_main
 28597 ;; This function uses a reentrant model
 28598 ;;
 28599                           
 28600                           	psect	text107
 28601  01A9CA                     __ptext107:
 28602                           	opt callstack 0
 28603  01A9CA                     _SYSTEM_Initialize:
 28604                           	opt callstack 13
 28605                           
 28606                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 28607                           
 28608                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28609                           ;incstack = 0
 28610  01A9CA  ECC5  F0D2         	call	_INTERRUPT_Initialize	;wreg free
 28611                           
 28612                           ; BSR set to: 57
 28613                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 28614  01A9CE  EC14  F0DB         	call	_PMD_Initialize	;wreg free
 28615                           
 28616                           ; BSR set to: 57
 28617                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 28618  01A9D2  EC8D  F0D0         	call	_PIN_MANAGER_Initialize	;wreg free
 28619                           
 28620                           ; BSR set to: 58
 28621                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 28622  01A9D6  EC09  F0DB         	call	_OSCILLATOR_Initialize	;wreg free
 28623                           
 28624                           ; BSR set to: 57
 28625                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 28626  01A9DA  EC89  F0DB         	call	_FVR_Initialize	;wreg free
 28627                           
 28628                           ; BSR set to: 62
 28629                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 28630  01A9DE  EC5A  F0D2         	call	_ADCC_Initialize	;wreg free
 28631                           
 28632                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 28633  01A9E2  ECFE  F0DA         	call	_PWM8_Initialize	;wreg free
 28634                           
 28635                           ; BSR set to: 63
 28636                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 28637  01A9E6  ECE7  F0DA         	call	_TMR2_Initialize	;wreg free
 28638                           
 28639                           ; BSR set to: 57
 28640                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 28641  01A9EA  EC63  F0D7         	call	_EXT_INT_Initialize	;wreg free
 28642                           
 28643                           ; BSR set to: 57
 28644                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 28645  01A9EE  EC50  F0D8         	call	_TMR6_Initialize	;wreg free
 28646                           
 28647                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 28648  01A9F2  ECBA  F0D5         	call	_TMR3_Initialize	;wreg free
 28649                           
 28650                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 28651  01A9F6  EC97  F0D5         	call	_TMR5_Initialize	;wreg free
 28652                           
 28653                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 28654  01A9FA  EC74  F0D5         	call	_UART1_Initialize	;wreg free
 28655                           
 28656                           ; BSR set to: 57
 28657                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 28658  01A9FE  EC8C  F0D3         	call	_UART2_Initialize	;wreg free
 28659                           
 28660                           ; BSR set to: 57
 28661                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 28662  01AA02  ECF3  F0DA         	call	_SPI1_Initialize	;wreg free
 28663                           
 28664                           ; BSR set to: 61
 28665                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 28666  01AA06  ECE8  F0D3         	call	_DMA2_Initialize	;wreg free
 28667                           
 28668                           ; BSR set to: 59
 28669                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 28670  01AA0A  EC25  F0D2         	call	_DMA1_Initialize	;wreg free
 28671                           
 28672                           ; BSR set to: 59
 28673                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 28674  01AA0E  EC5D  F0DB         	call	_CLKREF_Initialize	;wreg free
 28675                           
 28676                           ; BSR set to: 60
 28677                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28678  01AA12  0012               	return		;funcret
 28679  01AA14                     __end_of_SYSTEM_Initialize:
 28680                           	opt callstack 0
 28681                           
 28682 ;; *************** function _UART2_Initialize *****************
 28683 ;; Defined at:
 28684 ;;		line 78 in file "mcc_generated_files/uart2.c"
 28685 ;; Parameters:    Size  Location     Type
 28686 ;;		None
 28687 ;; Auto vars:     Size  Location     Type
 28688 ;;		None
 28689 ;; Return value:  Size  Location     Type
 28690 ;;                  1  [STACK] void 
 28691 ;; Registers used:
 28692 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 28693 ;; Tracked objects:
 28694 ;;		On entry : 3F/39
 28695 ;;		On exit  : 3F/39
 28696 ;;		Unchanged: 0/0
 28697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28702 ;;Total ram usage:        0 bytes
 28703 ;; Hardware stack levels used:    1
 28704 ;; Hardware stack levels required when called:   16
 28705 ;; This function calls:
 28706 ;;		_UART2_SetRxInterruptHandler
 28707 ;;		_UART2_SetTxInterruptHandler
 28708 ;; This function is called by:
 28709 ;;		_SYSTEM_Initialize
 28710 ;; This function uses a reentrant model
 28711 ;;
 28712                           
 28713                           	psect	text108
 28714  01A718                     __ptext108:
 28715                           	opt callstack 0
 28716  01A718                     _UART2_Initialize:
 28717                           	opt callstack 13
 28718                           
 28719                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 28720                           
 28721                           ; BSR set to: 60
 28722                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28723                           ;incstack = 0
 28724  01A718  0139               	movlb	57	; () banked
 28725  01A71A  9596               	bcf	150,2,b	;volatile
 28726                           
 28727                           ; BSR set to: 57
 28728                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 28729  01A71C  0E2A               	movlw	low _UART2_Receive_ISR
 28730  01A71E  6EE6               	movwf	postinc1,c
 28731  01A720  0EB5               	movlw	high _UART2_Receive_ISR
 28732  01A722  6EE6               	movwf	postinc1,c
 28733  01A724  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 28734  01A726  6EE6               	movwf	postinc1,c
 28735  01A728  ECC9  F0D8         	call	_UART2_SetRxInterruptHandler	;wreg free
 28736                           
 28737                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 28738  01A72C  0139               	movlb	57	; () banked
 28739  01A72E  9796               	bcf	150,3,b	;volatile
 28740                           
 28741                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 28742  01A730  0E74               	movlw	low _UART2_Transmit_ISR
 28743  01A732  6EE6               	movwf	postinc1,c
 28744  01A734  0EB0               	movlw	high _UART2_Transmit_ISR
 28745  01A736  6EE6               	movwf	postinc1,c
 28746  01A738  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 28747  01A73A  6EE6               	movwf	postinc1,c
 28748  01A73C  ECB5  F0D8         	call	_UART2_SetTxInterruptHandler	;wreg free
 28749                           
 28750                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 28751  01A740  013D               	movlb	61	; () banked
 28752  01A742  6BD4               	clrf	212,b	;volatile
 28753                           
 28754                           ; BSR set to: 61
 28755                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 28756  01A744  6BD6               	clrf	214,b	;volatile
 28757                           
 28758                           ; BSR set to: 61
 28759                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 28760  01A746  6BD8               	clrf	216,b	;volatile
 28761                           
 28762                           ; BSR set to: 61
 28763                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 28764  01A748  0EB0               	movlw	176
 28765  01A74A  6FDA               	movwf	218,b	;volatile
 28766                           
 28767                           ; BSR set to: 61
 28768                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 28769  01A74C  0E80               	movlw	128
 28770  01A74E  6FDB               	movwf	219,b	;volatile
 28771                           
 28772                           ; BSR set to: 61
 28773                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 28774  01A750  6BDC               	clrf	220,b	;volatile
 28775                           
 28776                           ; BSR set to: 61
 28777                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 28778  01A752  0E82               	movlw	130
 28779  01A754  6FDD               	movwf	221,b	;volatile
 28780                           
 28781                           ; BSR set to: 61
 28782                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 28783  01A756  0E06               	movlw	6
 28784  01A758  6FDE               	movwf	222,b	;volatile
 28785                           
 28786                           ; BSR set to: 61
 28787                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 28788  01A75A  6BDF               	clrf	223,b	;volatile
 28789                           
 28790                           ; BSR set to: 61
 28791                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 28792  01A75C  6BE0               	clrf	224,b	;volatile
 28793                           
 28794                           ; BSR set to: 61
 28795                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 28796  01A75E  6BE1               	clrf	225,b	;volatile
 28797                           
 28798                           ; BSR set to: 61
 28799                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 28800  01A760  6BE2               	clrf	226,b	;volatile
 28801                           
 28802                           ; BSR set to: 61
 28803                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 28804  01A762  6A35               	clrf	_uart2TxHead^0,c	;volatile
 28805                           
 28806                           ; BSR set to: 61
 28807                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 28808  01A764  6A34               	clrf	_uart2TxTail^0,c	;volatile
 28809                           
 28810                           ; BSR set to: 61
 28811                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 28812  01A766  0E40               	movlw	64
 28813  01A768  6E33               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 28814                           
 28815                           ; BSR set to: 61
 28816                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 28817  01A76A  6A32               	clrf	_uart2RxHead^0,c	;volatile
 28818                           
 28819                           ; BSR set to: 61
 28820                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 28821  01A76C  6A31               	clrf	_uart2RxTail^0,c	;volatile
 28822                           
 28823                           ; BSR set to: 61
 28824                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 28825  01A76E  6A30               	clrf	_uart2RxCount^0,c	;volatile
 28826                           
 28827                           ; BSR set to: 61
 28828                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 28829  01A770  0139               	movlb	57	; () banked
 28830  01A772  8596               	bsf	150,2,b	;volatile
 28831                           
 28832                           ; BSR set to: 57
 28833                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 28834  01A774  0012               	return		;funcret
 28835  01A776                     __end_of_UART2_Initialize:
 28836                           	opt callstack 0
 28837                           
 28838 ;; *************** function _UART2_SetTxInterruptHandler *****************
 28839 ;; Defined at:
 28840 ;;		line 252 in file "mcc_generated_files/uart2.c"
 28841 ;; Parameters:    Size  Location     Type
 28842 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28843 ;;		 -> UART2_Transmit_ISR(1), 
 28844 ;; Auto vars:     Size  Location     Type
 28845 ;;		None
 28846 ;; Return value:  Size  Location     Type
 28847 ;;                  1  [STACK] void 
 28848 ;; Registers used:
 28849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28850 ;; Tracked objects:
 28851 ;;		On entry : 3F/39
 28852 ;;		On exit  : 0/0
 28853 ;;		Unchanged: 0/0
 28854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28859 ;;Total ram usage:        0 bytes
 28860 ;; Hardware stack levels used:    1
 28861 ;; Hardware stack levels required when called:   15
 28862 ;; This function calls:
 28863 ;;		Nothing
 28864 ;; This function is called by:
 28865 ;;		_UART2_Initialize
 28866 ;; This function uses a reentrant model
 28867 ;;
 28868                           
 28869                           	psect	text109
 28870  01B16A                     __ptext109:
 28871                           	opt callstack 0
 28872  01B16A                     _UART2_SetTxInterruptHandler:
 28873                           	opt callstack 13
 28874                           
 28875                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 28876                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28877                           
 28878                           ; BSR set to: 57
 28879                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28880                           ;incstack = 0
 28881  01B16A  50E1               	movf	fsr1l,w,c
 28882  01B16C  0FFD               	addlw	-3
 28883  01B16E  6ED9               	movwf	fsr2l,c
 28884  01B170  50E2               	movf	fsr1h,w,c
 28885  01B172  6EDA               	movwf	fsr2h,c
 28886  01B174  0EFF               	movlw	255
 28887  01B176  22DA               	addwfc	fsr2h,f,c
 28888  01B178  006F FF78  F0B4    	movff	postinc2,_UART2_TxInterruptHandler
 28889  01B17E  006F FF78  F0B5    	movff	postinc2,_UART2_TxInterruptHandler+1
 28890  01B184  006F FF74  F0B6    	movff	postdec2,_UART2_TxInterruptHandler+2
 28891                           
 28892                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 28893  01B18A  52E5               	movf	postdec1,f,c
 28894  01B18C  52E5               	movf	postdec1,f,c
 28895  01B18E  52E5               	movf	postdec1,f,c
 28896  01B190  0012               	return		;funcret
 28897  01B192                     __end_of_UART2_SetTxInterruptHandler:
 28898                           	opt callstack 0
 28899                           
 28900 ;; *************** function _UART2_SetRxInterruptHandler *****************
 28901 ;; Defined at:
 28902 ;;		line 248 in file "mcc_generated_files/uart2.c"
 28903 ;; Parameters:    Size  Location     Type
 28904 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28905 ;;		 -> UART2_Receive_ISR(1), 
 28906 ;; Auto vars:     Size  Location     Type
 28907 ;;		None
 28908 ;; Return value:  Size  Location     Type
 28909 ;;                  1  [STACK] void 
 28910 ;; Registers used:
 28911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28912 ;; Tracked objects:
 28913 ;;		On entry : 3F/39
 28914 ;;		On exit  : 0/0
 28915 ;;		Unchanged: 0/0
 28916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28921 ;;Total ram usage:        0 bytes
 28922 ;; Hardware stack levels used:    1
 28923 ;; Hardware stack levels required when called:   15
 28924 ;; This function calls:
 28925 ;;		Nothing
 28926 ;; This function is called by:
 28927 ;;		_UART2_Initialize
 28928 ;; This function uses a reentrant model
 28929 ;;
 28930                           
 28931                           	psect	text110
 28932  01B192                     __ptext110:
 28933                           	opt callstack 0
 28934  01B192                     _UART2_SetRxInterruptHandler:
 28935                           	opt callstack 13
 28936                           
 28937                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 28938                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28939                           
 28940                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28941                           ;incstack = 0
 28942  01B192  50E1               	movf	fsr1l,w,c
 28943  01B194  0FFD               	addlw	-3
 28944  01B196  6ED9               	movwf	fsr2l,c
 28945  01B198  50E2               	movf	fsr1h,w,c
 28946  01B19A  6EDA               	movwf	fsr2h,c
 28947  01B19C  0EFF               	movlw	255
 28948  01B19E  22DA               	addwfc	fsr2h,f,c
 28949  01B1A0  006F FF78  F0B7    	movff	postinc2,_UART2_RxInterruptHandler
 28950  01B1A6  006F FF78  F0B8    	movff	postinc2,_UART2_RxInterruptHandler+1
 28951  01B1AC  006F FF74  F0B9    	movff	postdec2,_UART2_RxInterruptHandler+2
 28952                           
 28953                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 28954  01B1B2  52E5               	movf	postdec1,f,c
 28955  01B1B4  52E5               	movf	postdec1,f,c
 28956  01B1B6  52E5               	movf	postdec1,f,c
 28957  01B1B8  0012               	return		;funcret
 28958  01B1BA                     __end_of_UART2_SetRxInterruptHandler:
 28959                           	opt callstack 0
 28960                           
 28961 ;; *************** function _UART1_Initialize *****************
 28962 ;; Defined at:
 28963 ;;		line 75 in file "mcc_generated_files/uart1.c"
 28964 ;; Parameters:    Size  Location     Type
 28965 ;;		None
 28966 ;; Auto vars:     Size  Location     Type
 28967 ;;		None
 28968 ;; Return value:  Size  Location     Type
 28969 ;;                  1  [STACK] void 
 28970 ;; Registers used:
 28971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 28972 ;; Tracked objects:
 28973 ;;		On entry : 0/39
 28974 ;;		On exit  : 3F/39
 28975 ;;		Unchanged: 0/0
 28976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28981 ;;Total ram usage:        0 bytes
 28982 ;; Hardware stack levels used:    1
 28983 ;; Hardware stack levels required when called:   16
 28984 ;; This function calls:
 28985 ;;		_UART1_SetRxInterruptHandler
 28986 ;; This function is called by:
 28987 ;;		_SYSTEM_Initialize
 28988 ;; This function uses a reentrant model
 28989 ;;
 28990                           
 28991                           	psect	text111
 28992  01AAE8                     __ptext111:
 28993                           	opt callstack 0
 28994  01AAE8                     _UART1_Initialize:
 28995                           	opt callstack 13
 28996                           
 28997                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 28998                           
 28999                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29000                           ;incstack = 0
 29001  01AAE8  0139               	movlb	57	; () banked
 29002  01AAEA  9793               	bcf	147,3,b	;volatile
 29003                           
 29004                           ; BSR set to: 57
 29005                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 29006  01AAEC  0E64               	movlw	low _UART1_Receive_ISR
 29007  01AAEE  6EE6               	movwf	postinc1,c
 29008  01AAF0  0EB5               	movlw	high _UART1_Receive_ISR
 29009  01AAF2  6EE6               	movwf	postinc1,c
 29010  01AAF4  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 29011  01AAF6  6EE6               	movwf	postinc1,c
 29012  01AAF8  ECDD  F0D8         	call	_UART1_SetRxInterruptHandler	;wreg free
 29013                           
 29014                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 29015  01AAFC  013D               	movlb	61	; () banked
 29016  01AAFE  6BEC               	clrf	236,b	;volatile
 29017                           
 29018                           ; BSR set to: 61
 29019                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 29020  01AB00  6BED               	clrf	237,b	;volatile
 29021                           
 29022                           ; BSR set to: 61
 29023                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 29024  01AB02  6BEE               	clrf	238,b	;volatile
 29025                           
 29026                           ; BSR set to: 61
 29027                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 29028  01AB04  6BEF               	clrf	239,b	;volatile
 29029                           
 29030                           ; BSR set to: 61
 29031                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 29032  01AB06  6BF0               	clrf	240,b	;volatile
 29033                           
 29034                           ; BSR set to: 61
 29035                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 29036  01AB08  6BF1               	clrf	241,b	;volatile
 29037                           
 29038                           ; BSR set to: 61
 29039                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 29040  01AB0A  0EB0               	movlw	176
 29041  01AB0C  6FF2               	movwf	242,b	;volatile
 29042                           
 29043                           ; BSR set to: 61
 29044                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 29045  01AB0E  0E80               	movlw	128
 29046  01AB10  6FF3               	movwf	243,b	;volatile
 29047                           
 29048                           ; BSR set to: 61
 29049                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 29050  01AB12  6BF4               	clrf	244,b	;volatile
 29051                           
 29052                           ; BSR set to: 61
 29053                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 29054  01AB14  0E8A               	movlw	138
 29055  01AB16  6FF5               	movwf	245,b	;volatile
 29056                           
 29057                           ; BSR set to: 61
 29058                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 29059  01AB18  6BF6               	clrf	246,b	;volatile
 29060                           
 29061                           ; BSR set to: 61
 29062                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 29063  01AB1A  6BF7               	clrf	247,b	;volatile
 29064                           
 29065                           ; BSR set to: 61
 29066                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 29067  01AB1C  6BF8               	clrf	248,b	;volatile
 29068                           
 29069                           ; BSR set to: 61
 29070                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 29071  01AB1E  6BF9               	clrf	249,b	;volatile
 29072                           
 29073                           ; BSR set to: 61
 29074                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 29075  01AB20  6BFA               	clrf	250,b	;volatile
 29076                           
 29077                           ; BSR set to: 61
 29078                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 29079  01AB22  6A38               	clrf	_uart1RxHead^0,c	;volatile
 29080                           
 29081                           ; BSR set to: 61
 29082                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 29083  01AB24  6A37               	clrf	_uart1RxTail^0,c	;volatile
 29084                           
 29085                           ; BSR set to: 61
 29086                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 29087  01AB26  6A36               	clrf	_uart1RxCount^0,c	;volatile
 29088                           
 29089                           ; BSR set to: 61
 29090                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 29091  01AB28  0139               	movlb	57	; () banked
 29092  01AB2A  8793               	bsf	147,3,b	;volatile
 29093                           
 29094                           ; BSR set to: 57
 29095                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 29096  01AB2C  0012               	return		;funcret
 29097  01AB2E                     __end_of_UART1_Initialize:
 29098                           	opt callstack 0
 29099                           
 29100 ;; *************** function _UART1_SetRxInterruptHandler *****************
 29101 ;; Defined at:
 29102 ;;		line 207 in file "mcc_generated_files/uart1.c"
 29103 ;; Parameters:    Size  Location     Type
 29104 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29105 ;;		 -> UART1_Receive_ISR(1), 
 29106 ;; Auto vars:     Size  Location     Type
 29107 ;;		None
 29108 ;; Return value:  Size  Location     Type
 29109 ;;                  1  [STACK] void 
 29110 ;; Registers used:
 29111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29112 ;; Tracked objects:
 29113 ;;		On entry : 3F/39
 29114 ;;		On exit  : 0/0
 29115 ;;		Unchanged: 0/0
 29116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29121 ;;Total ram usage:        0 bytes
 29122 ;; Hardware stack levels used:    1
 29123 ;; Hardware stack levels required when called:   15
 29124 ;; This function calls:
 29125 ;;		Nothing
 29126 ;; This function is called by:
 29127 ;;		_UART1_Initialize
 29128 ;; This function uses a reentrant model
 29129 ;;
 29130                           
 29131                           	psect	text112
 29132  01B1BA                     __ptext112:
 29133                           	opt callstack 0
 29134  01B1BA                     _UART1_SetRxInterruptHandler:
 29135                           	opt callstack 13
 29136                           
 29137                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 29138                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29139                           
 29140                           ; BSR set to: 57
 29141                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29142                           ;incstack = 0
 29143  01B1BA  50E1               	movf	fsr1l,w,c
 29144  01B1BC  0FFD               	addlw	-3
 29145  01B1BE  6ED9               	movwf	fsr2l,c
 29146  01B1C0  50E2               	movf	fsr1h,w,c
 29147  01B1C2  6EDA               	movwf	fsr2h,c
 29148  01B1C4  0EFF               	movlw	255
 29149  01B1C6  22DA               	addwfc	fsr2h,f,c
 29150  01B1C8  006F FF78  F0B1    	movff	postinc2,_UART1_RxInterruptHandler
 29151  01B1CE  006F FF78  F0B2    	movff	postinc2,_UART1_RxInterruptHandler+1
 29152  01B1D4  006F FF74  F0B3    	movff	postdec2,_UART1_RxInterruptHandler+2
 29153                           
 29154                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29155  01B1DA  52E5               	movf	postdec1,f,c
 29156  01B1DC  52E5               	movf	postdec1,f,c
 29157  01B1DE  52E5               	movf	postdec1,f,c
 29158  01B1E0  0012               	return		;funcret
 29159  01B1E2                     __end_of_UART1_SetRxInterruptHandler:
 29160                           	opt callstack 0
 29161                           
 29162 ;; *************** function _TMR6_Initialize *****************
 29163 ;; Defined at:
 29164 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 29165 ;; Parameters:    Size  Location     Type
 29166 ;;		None
 29167 ;; Auto vars:     Size  Location     Type
 29168 ;;		None
 29169 ;; Return value:  Size  Location     Type
 29170 ;;                  1  [STACK] void 
 29171 ;; Registers used:
 29172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29173 ;; Tracked objects:
 29174 ;;		On entry : 3F/39
 29175 ;;		On exit  : 0/0
 29176 ;;		Unchanged: 0/0
 29177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29182 ;;Total ram usage:        0 bytes
 29183 ;; Hardware stack levels used:    1
 29184 ;; Hardware stack levels required when called:   16
 29185 ;; This function calls:
 29186 ;;		_TMR6_SetInterruptHandler
 29187 ;; This function is called by:
 29188 ;;		_SYSTEM_Initialize
 29189 ;; This function uses a reentrant model
 29190 ;;
 29191                           
 29192                           	psect	text113
 29193  01B0A0                     __ptext113:
 29194                           	opt callstack 0
 29195  01B0A0                     _TMR6_Initialize:
 29196                           	opt callstack 13
 29197                           
 29198                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 29199                           
 29200                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29201                           ;incstack = 0
 29202  01B0A0  0E01               	movlw	1
 29203  01B0A2  6E96               	movwf	150,c	;volatile
 29204                           
 29205                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 29206  01B0A4  6A95               	clrf	149,c	;volatile
 29207                           
 29208                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 29209  01B0A6  6A97               	clrf	151,c	;volatile
 29210                           
 29211                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 29212  01B0A8  0E7C               	movlw	124
 29213  01B0AA  6E93               	movwf	147,c	;volatile
 29214                           
 29215                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 29216  01B0AC  6A92               	clrf	146,c	;volatile
 29217                           
 29218                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 29219  01B0AE  0139               	movlb	57	; () banked
 29220  01B0B0  91A9               	bcf	169,0,b	;volatile
 29221                           
 29222                           ; BSR set to: 57
 29223                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 29224  01B0B2  8199               	bsf	153,0,b	;volatile
 29225                           
 29226                           ; BSR set to: 57
 29227                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 29228  01B0B4  0E7C               	movlw	low _TMR6_DefaultInterruptHandler
 29229  01B0B6  6EE6               	movwf	postinc1,c
 29230  01B0B8  0EA9               	movlw	high _TMR6_DefaultInterruptHandler
 29231  01B0BA  6EE6               	movwf	postinc1,c
 29232  01B0BC  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 29233  01B0BE  6EE6               	movwf	postinc1,c
 29234  01B0C0  ECF1  F0D8         	call	_TMR6_SetInterruptHandler	;wreg free
 29235                           
 29236                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 29237  01B0C4  0EE0               	movlw	224
 29238  01B0C6  6E94               	movwf	148,c	;volatile
 29239                           
 29240                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29241  01B0C8  0012               	return		;funcret
 29242  01B0CA                     __end_of_TMR6_Initialize:
 29243                           	opt callstack 0
 29244                           
 29245 ;; *************** function _TMR6_SetInterruptHandler *****************
 29246 ;; Defined at:
 29247 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 29248 ;; Parameters:    Size  Location     Type
 29249 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29250 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 29251 ;; Auto vars:     Size  Location     Type
 29252 ;;		None
 29253 ;; Return value:  Size  Location     Type
 29254 ;;                  1  [STACK] void 
 29255 ;; Registers used:
 29256 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29257 ;; Tracked objects:
 29258 ;;		On entry : 3F/39
 29259 ;;		On exit  : 0/0
 29260 ;;		Unchanged: 0/0
 29261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29266 ;;Total ram usage:        0 bytes
 29267 ;; Hardware stack levels used:    1
 29268 ;; Hardware stack levels required when called:   15
 29269 ;; This function calls:
 29270 ;;		Nothing
 29271 ;; This function is called by:
 29272 ;;		_TMR6_Initialize
 29273 ;; This function uses a reentrant model
 29274 ;;
 29275                           
 29276                           	psect	text114
 29277  01B1E2                     __ptext114:
 29278                           	opt callstack 0
 29279  01B1E2                     _TMR6_SetInterruptHandler:
 29280                           	opt callstack 13
 29281                           
 29282                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 29283                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29284                           
 29285                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29286                           ;incstack = 0
 29287  01B1E2  50E1               	movf	fsr1l,w,c
 29288  01B1E4  0FFD               	addlw	-3
 29289  01B1E6  6ED9               	movwf	fsr2l,c
 29290  01B1E8  50E2               	movf	fsr1h,w,c
 29291  01B1EA  6EDA               	movwf	fsr2h,c
 29292  01B1EC  0EFF               	movlw	255
 29293  01B1EE  22DA               	addwfc	fsr2h,f,c
 29294  01B1F0  006F FF78  F0A8    	movff	postinc2,_TMR6_InterruptHandler
 29295  01B1F6  006F FF78  F0A9    	movff	postinc2,_TMR6_InterruptHandler+1
 29296  01B1FC  006F FF74  F0AA    	movff	postdec2,_TMR6_InterruptHandler+2
 29297                           
 29298                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29299  01B202  52E5               	movf	postdec1,f,c
 29300  01B204  52E5               	movf	postdec1,f,c
 29301  01B206  52E5               	movf	postdec1,f,c
 29302  01B208  0012               	return		;funcret
 29303  01B20A                     __end_of_TMR6_SetInterruptHandler:
 29304                           	opt callstack 0
 29305                           
 29306 ;; *************** function _TMR5_Initialize *****************
 29307 ;; Defined at:
 29308 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 29309 ;; Parameters:    Size  Location     Type
 29310 ;;		None
 29311 ;; Auto vars:     Size  Location     Type
 29312 ;;		None
 29313 ;; Return value:  Size  Location     Type
 29314 ;;                  1  [STACK] void 
 29315 ;; Registers used:
 29316 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 29317 ;; Tracked objects:
 29318 ;;		On entry : 0/39
 29319 ;;		On exit  : 0/0
 29320 ;;		Unchanged: 0/0
 29321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29326 ;;Total ram usage:        0 bytes
 29327 ;; Hardware stack levels used:    1
 29328 ;; Hardware stack levels required when called:   16
 29329 ;; This function calls:
 29330 ;;		_TMR5_SetInterruptHandler
 29331 ;; This function is called by:
 29332 ;;		_SYSTEM_Initialize
 29333 ;; This function uses a reentrant model
 29334 ;;
 29335                           
 29336                           	psect	text115
 29337  01AB2E                     __ptext115:
 29338                           	opt callstack 0
 29339  01AB2E                     _TMR5_Initialize:
 29340                           	opt callstack 13
 29341                           
 29342                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 29343                           
 29344                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29345                           ;incstack = 0
 29346  01AB2E  6A9B               	clrf	155,c	;volatile
 29347                           
 29348                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 29349  01AB30  6A9C               	clrf	156,c	;volatile
 29350                           
 29351                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 29352  01AB32  0E01               	movlw	1
 29353  01AB34  6E9D               	movwf	157,c	;volatile
 29354                           
 29355                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 29356  01AB36  0E63               	movlw	99
 29357  01AB38  6E99               	movwf	153,c	;volatile
 29358                           
 29359                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 29360  01AB3A  0EC0               	movlw	192
 29361  01AB3C  6E98               	movwf	152,c	;volatile
 29362                           
 29363                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 29364  01AB3E  5098               	movf	152,w,c	;volatile
 29365  01AB40  006F FE64  F001    	movff	16281,btemp	;volatile
 29366  01AB46  6A02               	clrf	(btemp+1)^0,c
 29367  01AB48  0060  F004  F002   	movff	btemp,btemp+1
 29368  01AB4E  6A01               	clrf	btemp^0,c
 29369  01AB50  1001               	iorwf	btemp^0,w,c
 29370  01AB52  6E2B               	movwf	_timer5ReloadVal^0,c	;volatile
 29371  01AB54  5002               	movf	(btemp+1)^0,w,c
 29372  01AB56  6E2C               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 29373                           
 29374                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 29375  01AB58  0139               	movlb	57	; () banked
 29376  01AB5A  9DA8               	bcf	168,6,b	;volatile
 29377                           
 29378                           ; BSR set to: 57
 29379                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 29380  01AB5C  8D98               	bsf	152,6,b	;volatile
 29381                           
 29382                           ; BSR set to: 57
 29383                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 29384  01AB5E  0EFA               	movlw	low _TMR5_DefaultInterruptHandler
 29385  01AB60  6EE6               	movwf	postinc1,c
 29386  01AB62  0EAE               	movlw	high _TMR5_DefaultInterruptHandler
 29387  01AB64  6EE6               	movwf	postinc1,c
 29388  01AB66  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 29389  01AB68  6EE6               	movwf	postinc1,c
 29390  01AB6A  EC05  F0D9         	call	_TMR5_SetInterruptHandler	;wreg free
 29391                           
 29392                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 29393  01AB6E  0E31               	movlw	49
 29394  01AB70  6E9A               	movwf	154,c	;volatile
 29395                           
 29396                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29397  01AB72  0012               	return		;funcret
 29398  01AB74                     __end_of_TMR5_Initialize:
 29399                           	opt callstack 0
 29400                           
 29401 ;; *************** function _TMR5_SetInterruptHandler *****************
 29402 ;; Defined at:
 29403 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 29404 ;; Parameters:    Size  Location     Type
 29405 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29406 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 29407 ;; Auto vars:     Size  Location     Type
 29408 ;;		None
 29409 ;; Return value:  Size  Location     Type
 29410 ;;                  1  [STACK] void 
 29411 ;; Registers used:
 29412 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29413 ;; Tracked objects:
 29414 ;;		On entry : 3F/39
 29415 ;;		On exit  : 0/0
 29416 ;;		Unchanged: 0/0
 29417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29422 ;;Total ram usage:        0 bytes
 29423 ;; Hardware stack levels used:    1
 29424 ;; Hardware stack levels required when called:   15
 29425 ;; This function calls:
 29426 ;;		Nothing
 29427 ;; This function is called by:
 29428 ;;		_TMR5_Initialize
 29429 ;; This function uses a reentrant model
 29430 ;;
 29431                           
 29432                           	psect	text116
 29433  01B20A                     __ptext116:
 29434                           	opt callstack 0
 29435  01B20A                     _TMR5_SetInterruptHandler:
 29436                           	opt callstack 13
 29437                           
 29438                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 29439                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29440                           
 29441                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29442                           ;incstack = 0
 29443  01B20A  50E1               	movf	fsr1l,w,c
 29444  01B20C  0FFD               	addlw	-3
 29445  01B20E  6ED9               	movwf	fsr2l,c
 29446  01B210  50E2               	movf	fsr1h,w,c
 29447  01B212  6EDA               	movwf	fsr2h,c
 29448  01B214  0EFF               	movlw	255
 29449  01B216  22DA               	addwfc	fsr2h,f,c
 29450  01B218  006F FF78  F0A5    	movff	postinc2,_TMR5_InterruptHandler
 29451  01B21E  006F FF78  F0A6    	movff	postinc2,_TMR5_InterruptHandler+1
 29452  01B224  006F FF74  F0A7    	movff	postdec2,_TMR5_InterruptHandler+2
 29453                           
 29454                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29455  01B22A  52E5               	movf	postdec1,f,c
 29456  01B22C  52E5               	movf	postdec1,f,c
 29457  01B22E  52E5               	movf	postdec1,f,c
 29458  01B230  0012               	return		;funcret
 29459  01B232                     __end_of_TMR5_SetInterruptHandler:
 29460                           	opt callstack 0
 29461                           
 29462 ;; *************** function _TMR3_Initialize *****************
 29463 ;; Defined at:
 29464 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 29465 ;; Parameters:    Size  Location     Type
 29466 ;;		None
 29467 ;; Auto vars:     Size  Location     Type
 29468 ;;		None
 29469 ;; Return value:  Size  Location     Type
 29470 ;;                  1  [STACK] void 
 29471 ;; Registers used:
 29472 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 29473 ;; Tracked objects:
 29474 ;;		On entry : 0/39
 29475 ;;		On exit  : 0/0
 29476 ;;		Unchanged: 0/0
 29477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29482 ;;Total ram usage:        0 bytes
 29483 ;; Hardware stack levels used:    1
 29484 ;; Hardware stack levels required when called:   16
 29485 ;; This function calls:
 29486 ;;		_TMR3_SetInterruptHandler
 29487 ;; This function is called by:
 29488 ;;		_SYSTEM_Initialize
 29489 ;; This function uses a reentrant model
 29490 ;;
 29491                           
 29492                           	psect	text117
 29493  01AB74                     __ptext117:
 29494                           	opt callstack 0
 29495  01AB74                     _TMR3_Initialize:
 29496                           	opt callstack 13
 29497                           
 29498                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 29499                           
 29500                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29501                           ;incstack = 0
 29502  01AB74  6AA7               	clrf	167,c	;volatile
 29503                           
 29504                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 29505  01AB76  6AA8               	clrf	168,c	;volatile
 29506                           
 29507                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 29508  01AB78  0E01               	movlw	1
 29509  01AB7A  6EA9               	movwf	169,c	;volatile
 29510                           
 29511                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 29512  01AB7C  0E3C               	movlw	60
 29513  01AB7E  6EA5               	movwf	165,c	;volatile
 29514                           
 29515                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 29516  01AB80  0EB0               	movlw	176
 29517  01AB82  6EA4               	movwf	164,c	;volatile
 29518                           
 29519                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 29520  01AB84  50A4               	movf	164,w,c	;volatile
 29521  01AB86  006F FE94  F001    	movff	16293,btemp	;volatile
 29522  01AB8C  6A02               	clrf	(btemp+1)^0,c
 29523  01AB8E  0060  F004  F002   	movff	btemp,btemp+1
 29524  01AB94  6A01               	clrf	btemp^0,c
 29525  01AB96  1001               	iorwf	btemp^0,w,c
 29526  01AB98  6E27               	movwf	_timer3ReloadVal^0,c	;volatile
 29527  01AB9A  5002               	movf	(btemp+1)^0,w,c
 29528  01AB9C  6E28               	movwf	(_timer3ReloadVal+1)^0,c	;volatile
 29529                           
 29530                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 29531  01AB9E  0139               	movlb	57	; () banked
 29532  01ABA0  9DA6               	bcf	166,6,b	;volatile
 29533                           
 29534                           ; BSR set to: 57
 29535                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 29536  01ABA2  8D96               	bsf	150,6,b	;volatile
 29537                           
 29538                           ; BSR set to: 57
 29539                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 29540  01ABA4  0E3C               	movlw	low _TMR3_DefaultInterruptHandler
 29541  01ABA6  6EE6               	movwf	postinc1,c
 29542  01ABA8  0EB7               	movlw	high _TMR3_DefaultInterruptHandler
 29543  01ABAA  6EE6               	movwf	postinc1,c
 29544  01ABAC  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 29545  01ABAE  6EE6               	movwf	postinc1,c
 29546  01ABB0  EC19  F0D9         	call	_TMR3_SetInterruptHandler	;wreg free
 29547                           
 29548                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 29549  01ABB4  0E31               	movlw	49
 29550  01ABB6  6EA6               	movwf	166,c	;volatile
 29551                           
 29552                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29553  01ABB8  0012               	return		;funcret
 29554  01ABBA                     __end_of_TMR3_Initialize:
 29555                           	opt callstack 0
 29556                           
 29557 ;; *************** function _TMR3_SetInterruptHandler *****************
 29558 ;; Defined at:
 29559 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 29560 ;; Parameters:    Size  Location     Type
 29561 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29562 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 29563 ;; Auto vars:     Size  Location     Type
 29564 ;;		None
 29565 ;; Return value:  Size  Location     Type
 29566 ;;                  1  [STACK] void 
 29567 ;; Registers used:
 29568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29569 ;; Tracked objects:
 29570 ;;		On entry : 0/1
 29571 ;;		On exit  : 0/0
 29572 ;;		Unchanged: 0/0
 29573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29578 ;;Total ram usage:        0 bytes
 29579 ;; Hardware stack levels used:    1
 29580 ;; Hardware stack levels required when called:   15
 29581 ;; This function calls:
 29582 ;;		Nothing
 29583 ;; This function is called by:
 29584 ;;		_TMR3_Initialize
 29585 ;;		_init_bsoc
 29586 ;; This function uses a reentrant model
 29587 ;;
 29588                           
 29589                           	psect	text118
 29590  01B232                     __ptext118:
 29591                           	opt callstack 0
 29592  01B232                     _TMR3_SetInterruptHandler:
 29593                           	opt callstack 14
 29594                           
 29595                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 29596                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29597                           
 29598                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29599                           ;incstack = 0
 29600  01B232  50E1               	movf	fsr1l,w,c
 29601  01B234  0FFD               	addlw	-3
 29602  01B236  6ED9               	movwf	fsr2l,c
 29603  01B238  50E2               	movf	fsr1h,w,c
 29604  01B23A  6EDA               	movwf	fsr2h,c
 29605  01B23C  0EFF               	movlw	255
 29606  01B23E  22DA               	addwfc	fsr2h,f,c
 29607  01B240  006F FF78  F0A2    	movff	postinc2,_TMR3_InterruptHandler
 29608  01B246  006F FF78  F0A3    	movff	postinc2,_TMR3_InterruptHandler+1
 29609  01B24C  006F FF74  F0A4    	movff	postdec2,_TMR3_InterruptHandler+2
 29610                           
 29611                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29612  01B252  52E5               	movf	postdec1,f,c
 29613  01B254  52E5               	movf	postdec1,f,c
 29614  01B256  52E5               	movf	postdec1,f,c
 29615  01B258  0012               	return		;funcret
 29616  01B25A                     __end_of_TMR3_SetInterruptHandler:
 29617                           	opt callstack 0
 29618                           
 29619 ;; *************** function _TMR2_Initialize *****************
 29620 ;; Defined at:
 29621 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 29622 ;; Parameters:    Size  Location     Type
 29623 ;;		None
 29624 ;; Auto vars:     Size  Location     Type
 29625 ;;		None
 29626 ;; Return value:  Size  Location     Type
 29627 ;;                  1  [STACK] void 
 29628 ;; Registers used:
 29629 ;;		wreg, status,2
 29630 ;; Tracked objects:
 29631 ;;		On entry : 3F/3F
 29632 ;;		On exit  : 3F/39
 29633 ;;		Unchanged: 0/0
 29634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29639 ;;Total ram usage:        0 bytes
 29640 ;; Hardware stack levels used:    1
 29641 ;; Hardware stack levels required when called:   15
 29642 ;; This function calls:
 29643 ;;		Nothing
 29644 ;; This function is called by:
 29645 ;;		_SYSTEM_Initialize
 29646 ;; This function uses a reentrant model
 29647 ;;
 29648                           
 29649                           	psect	text119
 29650  01B5CE                     __ptext119:
 29651                           	opt callstack 0
 29652  01B5CE                     _TMR2_Initialize:
 29653                           	opt callstack 14
 29654                           
 29655                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 29656                           
 29657                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29658                           ;incstack = 0
 29659  01B5CE  0E01               	movlw	1
 29660  01B5D0  6EAE               	movwf	174,c	;volatile
 29661                           
 29662                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 29663  01B5D2  6AAD               	clrf	173,c	;volatile
 29664                           
 29665                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 29666  01B5D4  6AAF               	clrf	175,c	;volatile
 29667                           
 29668                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 29669  01B5D6  0E63               	movlw	99
 29670  01B5D8  6EAB               	movwf	171,c	;volatile
 29671                           
 29672                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 29673  01B5DA  6AAA               	clrf	170,c	;volatile
 29674                           
 29675                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 29676  01B5DC  0139               	movlb	57	; () banked
 29677  01B5DE  95A4               	bcf	164,2,b	;volatile
 29678                           
 29679                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 29680  01B5E0  0EC0               	movlw	192
 29681  01B5E2  6EAC               	movwf	172,c	;volatile
 29682                           
 29683                           ; BSR set to: 57
 29684                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29685  01B5E4  0012               	return		;funcret
 29686  01B5E6                     __end_of_TMR2_Initialize:
 29687                           	opt callstack 0
 29688                           
 29689 ;; *************** function _SPI1_Initialize *****************
 29690 ;; Defined at:
 29691 ;;		line 64 in file "mcc_generated_files/spi1.c"
 29692 ;; Parameters:    Size  Location     Type
 29693 ;;		None
 29694 ;; Auto vars:     Size  Location     Type
 29695 ;;		None
 29696 ;; Return value:  Size  Location     Type
 29697 ;;                  1  [STACK] void 
 29698 ;; Registers used:
 29699 ;;		wreg, status,2
 29700 ;; Tracked objects:
 29701 ;;		On entry : 3F/39
 29702 ;;		On exit  : 3F/3D
 29703 ;;		Unchanged: 0/0
 29704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29709 ;;Total ram usage:        0 bytes
 29710 ;; Hardware stack levels used:    1
 29711 ;; Hardware stack levels required when called:   15
 29712 ;; This function calls:
 29713 ;;		Nothing
 29714 ;; This function is called by:
 29715 ;;		_SYSTEM_Initialize
 29716 ;; This function uses a reentrant model
 29717 ;;
 29718                           
 29719                           	psect	text120
 29720  01B5E6                     __ptext120:
 29721                           	opt callstack 0
 29722  01B5E6                     _SPI1_Initialize:
 29723                           	opt callstack 14
 29724                           
 29725                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 29726                           
 29727                           ; BSR set to: 57
 29728                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29729                           ;incstack = 0
 29730  01B5E6  0E40               	movlw	64
 29731  01B5E8  013D               	movlb	61	; () banked
 29732  01B5EA  6F15               	movwf	21,b	;volatile
 29733                           
 29734                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 29735  01B5EC  0E03               	movlw	3
 29736  01B5EE  6F16               	movwf	22,b	;volatile
 29737                           
 29738                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 29739  01B5F0  0E4F               	movlw	79
 29740  01B5F2  6F19               	movwf	25,b	;volatile
 29741                           
 29742                           ; BSR set to: 61
 29743                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 29744  01B5F4  6B1C               	clrf	28,b	;volatile
 29745                           
 29746                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 29747  01B5F6  0E83               	movlw	131
 29748  01B5F8  6F14               	movwf	20,b	;volatile
 29749                           
 29750                           ; BSR set to: 61
 29751                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29752  01B5FA  0012               	return		;funcret
 29753  01B5FC                     __end_of_SPI1_Initialize:
 29754                           	opt callstack 0
 29755                           
 29756 ;; *************** function _PWM8_Initialize *****************
 29757 ;; Defined at:
 29758 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 29759 ;; Parameters:    Size  Location     Type
 29760 ;;		None
 29761 ;; Auto vars:     Size  Location     Type
 29762 ;;		None
 29763 ;; Return value:  Size  Location     Type
 29764 ;;                  1  [STACK] void 
 29765 ;; Registers used:
 29766 ;;		wreg, status,2
 29767 ;; Tracked objects:
 29768 ;;		On entry : 0/3E
 29769 ;;		On exit  : 3F/3F
 29770 ;;		Unchanged: 0/0
 29771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29776 ;;Total ram usage:        0 bytes
 29777 ;; Hardware stack levels used:    1
 29778 ;; Hardware stack levels required when called:   15
 29779 ;; This function calls:
 29780 ;;		Nothing
 29781 ;; This function is called by:
 29782 ;;		_SYSTEM_Initialize
 29783 ;; This function uses a reentrant model
 29784 ;;
 29785                           
 29786                           	psect	text121
 29787  01B5FC                     __ptext121:
 29788                           	opt callstack 0
 29789  01B5FC                     _PWM8_Initialize:
 29790                           	opt callstack 14
 29791                           
 29792                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 29793                           
 29794                           ; BSR set to: 61
 29795                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29796                           ;incstack = 0
 29797  01B5FC  0E80               	movlw	128
 29798  01B5FE  6E62               	movwf	98,c	;volatile
 29799                           
 29800                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 29801  01B600  6A61               	clrf	97,c	;volatile
 29802                           
 29803                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 29804  01B602  0E40               	movlw	64
 29805  01B604  6E60               	movwf	96,c	;volatile
 29806                           
 29807                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 29808  01B606  013F               	movlb	63	; () banked
 29809  01B608  515F               	movf	95,w,b	;volatile
 29810  01B60A  0B3F               	andlw	-193
 29811  01B60C  0940               	iorlw	64
 29812  01B60E  6F5F               	movwf	95,b	;volatile
 29813                           
 29814                           ; BSR set to: 63
 29815                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29816  01B610  0012               	return		;funcret
 29817  01B612                     __end_of_PWM8_Initialize:
 29818                           	opt callstack 0
 29819                           
 29820 ;; *************** function _PMD_Initialize *****************
 29821 ;; Defined at:
 29822 ;;		line 90 in file "mcc_generated_files/mcc.c"
 29823 ;; Parameters:    Size  Location     Type
 29824 ;;		None
 29825 ;; Auto vars:     Size  Location     Type
 29826 ;;		None
 29827 ;; Return value:  Size  Location     Type
 29828 ;;                  1  [STACK] void 
 29829 ;; Registers used:
 29830 ;;		None
 29831 ;; Tracked objects:
 29832 ;;		On entry : 3F/39
 29833 ;;		On exit  : 3F/39
 29834 ;;		Unchanged: 0/0
 29835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29840 ;;Total ram usage:        0 bytes
 29841 ;; Hardware stack levels used:    1
 29842 ;; Hardware stack levels required when called:   15
 29843 ;; This function calls:
 29844 ;;		Nothing
 29845 ;; This function is called by:
 29846 ;;		_SYSTEM_Initialize
 29847 ;; This function uses a reentrant model
 29848 ;;
 29849                           
 29850                           	psect	text122
 29851  01B628                     __ptext122:
 29852                           	opt callstack 0
 29853  01B628                     _PMD_Initialize:
 29854                           	opt callstack 14
 29855                           
 29856                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 29857                           
 29858                           ; BSR set to: 63
 29859                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29860                           ;incstack = 0
 29861  01B628  0139               	movlb	57	; () banked
 29862  01B62A  6BC0               	clrf	192,b	;volatile
 29863                           
 29864                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 29865  01B62C  6BC1               	clrf	193,b	;volatile
 29866                           
 29867                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 29868  01B62E  6BC2               	clrf	194,b	;volatile
 29869                           
 29870                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 29871  01B630  6BC3               	clrf	195,b	;volatile
 29872                           
 29873                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 29874  01B632  6BC4               	clrf	196,b	;volatile
 29875                           
 29876                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 29877  01B634  6BC5               	clrf	197,b	;volatile
 29878                           
 29879                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 29880  01B636  6BC6               	clrf	198,b	;volatile
 29881                           
 29882                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 29883  01B638  6BC7               	clrf	199,b	;volatile
 29884                           
 29885                           ; BSR set to: 57
 29886                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 29887  01B63A  0012               	return		;funcret
 29888  01B63C                     __end_of_PMD_Initialize:
 29889                           	opt callstack 0
 29890                           
 29891 ;; *************** function _PIN_MANAGER_Initialize *****************
 29892 ;; Defined at:
 29893 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 29894 ;; Parameters:    Size  Location     Type
 29895 ;;		None
 29896 ;; Auto vars:     Size  Location     Type
 29897 ;;		None
 29898 ;; Return value:  Size  Location     Type
 29899 ;;                  1  [STACK] void 
 29900 ;; Registers used:
 29901 ;;		wreg, status,2
 29902 ;; Tracked objects:
 29903 ;;		On entry : 3F/39
 29904 ;;		On exit  : 3F/3A
 29905 ;;		Unchanged: 0/0
 29906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29911 ;;Total ram usage:        0 bytes
 29912 ;; Hardware stack levels used:    1
 29913 ;; Hardware stack levels required when called:   15
 29914 ;; This function calls:
 29915 ;;		Nothing
 29916 ;; This function is called by:
 29917 ;;		_SYSTEM_Initialize
 29918 ;; This function uses a reentrant model
 29919 ;;
 29920                           
 29921                           	psect	text123
 29922  01A11A                     __ptext123:
 29923                           	opt callstack 0
 29924  01A11A                     _PIN_MANAGER_Initialize:
 29925                           	opt callstack 14
 29926                           
 29927                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 29928                           
 29929                           ; BSR set to: 57
 29930                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29931                           ;incstack = 0
 29932  01A11A  0E07               	movlw	7
 29933  01A11C  6EBE               	movwf	190,c	;volatile
 29934                           
 29935                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 29936  01A11E  0E80               	movlw	128
 29937  01A120  6EBD               	movwf	189,c	;volatile
 29938                           
 29939                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 29940  01A122  6ABA               	clrf	186,c	;volatile
 29941                           
 29942                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 29943  01A124  6ABF               	clrf	191,c	;volatile
 29944                           
 29945                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 29946  01A126  6ABB               	clrf	187,c	;volatile
 29947                           
 29948                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 29949  01A128  0E07               	movlw	7
 29950  01A12A  6EBC               	movwf	188,c	;volatile
 29951                           
 29952                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 29953  01A12C  6AC6               	clrf	198,c	;volatile
 29954                           
 29955                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 29956  01A12E  0E0F               	movlw	15
 29957  01A130  6EC7               	movwf	199,c	;volatile
 29958                           
 29959                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 29960  01A132  68C2               	setf	194,c	;volatile
 29961                           
 29962                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 29963  01A134  0EBF               	movlw	191
 29964  01A136  6EC3               	movwf	195,c	;volatile
 29965                           
 29966                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 29967  01A138  0E90               	movlw	144
 29968  01A13A  6EC4               	movwf	196,c	;volatile
 29969                           
 29970                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 29971  01A13C  0E0C               	movlw	12
 29972  01A13E  6EC5               	movwf	197,c	;volatile
 29973                           
 29974                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 29975  01A140  013A               	movlb	58	; () banked
 29976  01A142  6B70               	clrf	112,b	;volatile
 29977                           
 29978                           ; BSR set to: 58
 29979                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 29980  01A144  6B60               	clrf	96,b	;volatile
 29981                           
 29982                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 29983  01A146  0E3C               	movlw	60
 29984  01A148  6F50               	movwf	80,b	;volatile
 29985                           
 29986                           ; BSR set to: 58
 29987                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 29988  01A14A  6B80               	clrf	128,b	;volatile
 29989                           
 29990                           ; BSR set to: 58
 29991                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 29992  01A14C  6B90               	clrf	144,b	;volatile
 29993                           
 29994                           ; BSR set to: 58
 29995                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 29996  01A14E  6940               	setf	64,b	;volatile
 29997                           
 29998                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 29999  01A150  0E0C               	movlw	12
 30000  01A152  6F71               	movwf	113,b	;volatile
 30001                           
 30002                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 30003  01A154  0E0F               	movlw	15
 30004  01A156  6F91               	movwf	145,b	;volatile
 30005                           
 30006                           ; BSR set to: 58
 30007                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 30008  01A158  6B81               	clrf	129,b	;volatile
 30009                           
 30010                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 30011  01A15A  0E83               	movlw	131
 30012  01A15C  6F51               	movwf	81,b	;volatile
 30013                           
 30014                           ; BSR set to: 58
 30015                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 30016  01A15E  6B41               	clrf	65,b	;volatile
 30017                           
 30018                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 30019  01A160  0E97               	movlw	151
 30020  01A162  6F61               	movwf	97,b	;volatile
 30021                           
 30022                           ; BSR set to: 58
 30023                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 30024  01A164  6B82               	clrf	130,b	;volatile
 30025                           
 30026                           ; BSR set to: 58
 30027                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 30028  01A166  6B92               	clrf	146,b	;volatile
 30029                           
 30030                           ; BSR set to: 58
 30031                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 30032  01A168  6B42               	clrf	66,b	;volatile
 30033                           
 30034                           ; BSR set to: 58
 30035                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 30036  01A16A  6B52               	clrf	82,b	;volatile
 30037                           
 30038                           ; BSR set to: 58
 30039                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 30040  01A16C  6B62               	clrf	98,b	;volatile
 30041                           
 30042                           ; BSR set to: 58
 30043                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 30044  01A16E  6B72               	clrf	114,b	;volatile
 30045                           
 30046                           ; BSR set to: 58
 30047                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 30048  01A170  6943               	setf	67,b	;volatile
 30049                           
 30050                           ; BSR set to: 58
 30051                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 30052  01A172  6953               	setf	83,b	;volatile
 30053                           
 30054                           ; BSR set to: 58
 30055                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 30056  01A174  6963               	setf	99,b	;volatile
 30057                           
 30058                           ; BSR set to: 58
 30059                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 30060  01A176  6973               	setf	115,b	;volatile
 30061                           
 30062                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 30063  01A178  0E07               	movlw	7
 30064  01A17A  6F83               	movwf	131,b	;volatile
 30065                           
 30066                           ; BSR set to: 58
 30067                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 30068  01A17C  6993               	setf	147,b	;volatile
 30069                           
 30070                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 30071  01A17E  0E0F               	movlw	15
 30072  01A180  6FE8               	movwf	232,b	;volatile
 30073                           
 30074                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 30075  01A182  0E13               	movlw	19
 30076  01A184  6FDE               	movwf	222,b	;volatile
 30077                           
 30078                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 30079  01A186  0E16               	movlw	22
 30080  01A188  6F0E               	movwf	14,b	;volatile
 30081                           
 30082                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 30083  01A18A  0E1E               	movlw	30
 30084  01A18C  6F13               	movwf	19,b	;volatile
 30085                           
 30086                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 30087  01A18E  0E08               	movlw	8
 30088  01A190  6FC0               	movwf	192,b	;volatile
 30089                           
 30090                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 30091  01A192  0E10               	movlw	16
 30092  01A194  6F19               	movwf	25,b	;volatile
 30093                           
 30094                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 30095  01A196  0E09               	movlw	9
 30096  01A198  6FC1               	movwf	193,b	;volatile
 30097                           
 30098                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 30099  01A19A  0E1F               	movlw	31
 30100  01A19C  6F15               	movwf	21,b	;volatile
 30101                           
 30102                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 30103  01A19E  0E13               	movlw	19
 30104  01A1A0  6F16               	movwf	22,b	;volatile
 30105                           
 30106                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 30107  01A1A2  0E17               	movlw	23
 30108  01A1A4  6FE5               	movwf	229,b	;volatile
 30109                           
 30110                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 30111  01A1A6  0E14               	movlw	20
 30112  01A1A8  6FDF               	movwf	223,b	;volatile
 30113                           
 30114                           ; BSR set to: 58
 30115                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 30116  01A1AA  0012               	return		;funcret
 30117  01A1AC                     __end_of_PIN_MANAGER_Initialize:
 30118                           	opt callstack 0
 30119                           
 30120 ;; *************** function _OSCILLATOR_Initialize *****************
 30121 ;; Defined at:
 30122 ;;		line 72 in file "mcc_generated_files/mcc.c"
 30123 ;; Parameters:    Size  Location     Type
 30124 ;;		None
 30125 ;; Auto vars:     Size  Location     Type
 30126 ;;		None
 30127 ;; Return value:  Size  Location     Type
 30128 ;;                  1  [STACK] void 
 30129 ;; Registers used:
 30130 ;;		wreg, status,2
 30131 ;; Tracked objects:
 30132 ;;		On entry : 3F/3A
 30133 ;;		On exit  : 3F/39
 30134 ;;		Unchanged: 0/0
 30135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30140 ;;Total ram usage:        0 bytes
 30141 ;; Hardware stack levels used:    1
 30142 ;; Hardware stack levels required when called:   15
 30143 ;; This function calls:
 30144 ;;		Nothing
 30145 ;; This function is called by:
 30146 ;;		_SYSTEM_Initialize
 30147 ;; This function uses a reentrant model
 30148 ;;
 30149                           
 30150                           	psect	text124
 30151  01B612                     __ptext124:
 30152                           	opt callstack 0
 30153  01B612                     _OSCILLATOR_Initialize:
 30154                           	opt callstack 14
 30155                           
 30156                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 30157                           
 30158                           ; BSR set to: 58
 30159                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30160                           ;incstack = 0
 30161  01B612  0E20               	movlw	32
 30162  01B614  0139               	movlb	57	; () banked
 30163  01B616  6FD9               	movwf	217,b	;volatile
 30164                           
 30165                           ; BSR set to: 57
 30166                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 30167  01B618  6BDB               	clrf	219,b	;volatile
 30168                           
 30169                           ; BSR set to: 57
 30170                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 30171  01B61A  6BDD               	clrf	221,b	;volatile
 30172                           
 30173                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 30174  01B61C  0E02               	movlw	2
 30175  01B61E  6FDF               	movwf	223,b	;volatile
 30176                           
 30177                           ; BSR set to: 57
 30178                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 30179  01B620  6BDE               	clrf	222,b	;volatile
 30180  01B622                     l169:
 30181                           
 30182                           ; BSR set to: 57
 30183                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 30184  01B622  B1DC               	btfsc	220,0,b	;volatile
 30185  01B624  0012               	return	
 30186  01B626  D7FD               	goto	l169
 30187  01B628                     __end_of_OSCILLATOR_Initialize:
 30188                           	opt callstack 0
 30189                           
 30190 ;; *************** function _INTERRUPT_Initialize *****************
 30191 ;; Defined at:
 30192 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 30193 ;; Parameters:    Size  Location     Type
 30194 ;;		None
 30195 ;; Auto vars:     Size  Location     Type
 30196 ;;  state           1  [STACK] _Bool 
 30197 ;; Return value:  Size  Location     Type
 30198 ;;                  1  [STACK] void 
 30199 ;; Registers used:
 30200 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 30201 ;; Tracked objects:
 30202 ;;		On entry : 0/0
 30203 ;;		On exit  : 3F/39
 30204 ;;		Unchanged: 0/0
 30205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30210 ;;Total ram usage:        0 bytes
 30211 ;; Hardware stack levels used:    1
 30212 ;; Hardware stack levels required when called:   15
 30213 ;; This function calls:
 30214 ;;		Nothing
 30215 ;; This function is called by:
 30216 ;;		_SYSTEM_Initialize
 30217 ;; This function uses a reentrant model
 30218 ;;
 30219                           
 30220                           	psect	text125
 30221  01A58A                     __ptext125:
 30222                           	opt callstack 0
 30223  01A58A                     _INTERRUPT_Initialize:
 30224                           	opt callstack 0
 30225                           
 30226                           ; BSR set to: 57
 30227                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30228  01A58A  52E6               	movf	postinc1,f,c
 30229                           
 30230                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 30231                           
 30232                           ;incstack = 0
 30233  01A58C  8AD2               	bsf	210,5,c	;volatile
 30234                           
 30235                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 30236  01A58E  AED2               	btfss	16338,7,c	;volatile
 30237  01A590  D003               	goto	u8960
 30238  01A592  6A0C               	clrf	(btemp+11)^0,c
 30239  01A594  2A0C               	incf	(btemp+11)^0,f,c
 30240  01A596  D001               	goto	u8978
 30241  01A598                     u8960:
 30242  01A598  6A0C               	clrf	(btemp+11)^0,c
 30243  01A59A                     u8978:
 30244                           
 30245                           ;stkvar	_state @ sp[(-1)+0]
 30246  01A59A  0EFF               	movlw	-1
 30247  01A59C  0060  F033  FFE3   	movff	btemp+11,plusw1
 30248                           
 30249                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 30250  01A5A2  9ED2               	bcf	16338,7,c	;volatile
 30251                           
 30252                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 30253  01A5A4  0E55               	movlw	85
 30254  01A5A6  6ED4               	movwf	212,c	;volatile
 30255                           
 30256                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 30257  01A5A8  0EAA               	movlw	170
 30258  01A5AA  6ED4               	movwf	212,c	;volatile
 30259                           
 30260                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 30261  01A5AC  90D4               	bcf	212,0,c	;volatile
 30262                           
 30263                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 30264  01A5AE  0138               	movlb	56	; () banked
 30265  01A5B0  6B9F               	clrf	159,b	;volatile
 30266                           
 30267                           ; BSR set to: 56
 30268                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 30269  01A5B2  6B9E               	clrf	158,b	;volatile
 30270                           
 30271                           ; BSR set to: 56
 30272                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 30273  01A5B4  0E08               	movlw	8
 30274  01A5B6  6F9D               	movwf	157,b	;volatile
 30275                           
 30276                           ; BSR set to: 56
 30277                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 30278  01A5B8  0E55               	movlw	85
 30279  01A5BA  6ED4               	movwf	212,c	;volatile
 30280                           
 30281                           ; BSR set to: 56
 30282                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 30283  01A5BC  0EAA               	movlw	170
 30284  01A5BE  6ED4               	movwf	212,c	;volatile
 30285                           
 30286                           ; BSR set to: 56
 30287                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 30288  01A5C0  80D4               	bsf	212,0,c	;volatile
 30289                           
 30290                           ; BSR set to: 56
 30291                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 30292                           ;stkvar	_state @ sp[(-1)+0]
 30293  01A5C2  0EFF               	movlw	-1
 30294  01A5C4  B0E3               	btfsc	plusw1,0,c
 30295  01A5C6  D002               	bra	u8985
 30296  01A5C8  9ED2               	bcf	16338,7,c	;volatile
 30297  01A5CA  D001               	bra	u8986
 30298  01A5CC                     u8985:
 30299  01A5CC  8ED2               	bsf	16338,7,c	;volatile
 30300  01A5CE                     u8986:
 30301                           
 30302                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 30303  01A5CE  0139               	movlb	57	; () banked
 30304  01A5D0  8782               	bsf	130,3,b	;volatile
 30305                           
 30306                           ; BSR set to: 57
 30307                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 30308  01A5D2  8382               	bsf	130,1,b	;volatile
 30309                           
 30310                           ; BSR set to: 57
 30311                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 30312  01A5D4  8182               	bsf	130,0,b	;volatile
 30313                           
 30314                           ; BSR set to: 57
 30315                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 30316  01A5D6  8582               	bsf	130,2,b	;volatile
 30317                           
 30318                           ; BSR set to: 57
 30319                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 30320  01A5D8  8786               	bsf	134,3,b	;volatile
 30321                           
 30322                           ; BSR set to: 57
 30323                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 30324  01A5DA  8586               	bsf	134,2,b	;volatile
 30325                           
 30326                           ; BSR set to: 57
 30327                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 30328  01A5DC  8783               	bsf	131,3,b	;volatile
 30329                           
 30330                           ; BSR set to: 57
 30331                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 30332  01A5DE  8181               	bsf	129,0,b	;volatile
 30333                           
 30334                           ; BSR set to: 57
 30335                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 30336  01A5E0  9185               	bcf	133,0,b	;volatile
 30337                           
 30338                           ; BSR set to: 57
 30339                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 30340  01A5E2  8189               	bsf	137,0,b	;volatile
 30341                           
 30342                           ; BSR set to: 57
 30343                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 30344  01A5E4  9D88               	bcf	136,6,b	;volatile
 30345                           
 30346                           ; BSR set to: 57
 30347                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 30348  01A5E6  9D86               	bcf	134,6,b	;volatile
 30349                           
 30350                           ; BSR set to: 57
 30351                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 30352  01A5E8  8581               	bsf	129,2,b	;volatile
 30353                           
 30354                           ; BSR set to: 57
 30355                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 30356  01A5EA  8781               	bsf	129,3,b	;volatile
 30357                           
 30358                           ; BSR set to: 57
 30359                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 30360  01A5EC  52E5               	movf	postdec1,f,c
 30361  01A5EE  0012               	return		;funcret
 30362  01A5F0                     __end_of_INTERRUPT_Initialize:
 30363                           	opt callstack 0
 30364                           
 30365 ;; *************** function _FVR_Initialize *****************
 30366 ;; Defined at:
 30367 ;;		line 58 in file "mcc_generated_files/fvr.c"
 30368 ;; Parameters:    Size  Location     Type
 30369 ;;		None
 30370 ;; Auto vars:     Size  Location     Type
 30371 ;;		None
 30372 ;; Return value:  Size  Location     Type
 30373 ;;                  1  [STACK] void 
 30374 ;; Registers used:
 30375 ;;		wreg, status,2
 30376 ;; Tracked objects:
 30377 ;;		On entry : 3F/39
 30378 ;;		On exit  : 3F/3E
 30379 ;;		Unchanged: 0/0
 30380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30385 ;;Total ram usage:        0 bytes
 30386 ;; Hardware stack levels used:    1
 30387 ;; Hardware stack levels required when called:   15
 30388 ;; This function calls:
 30389 ;;		Nothing
 30390 ;; This function is called by:
 30391 ;;		_SYSTEM_Initialize
 30392 ;; This function uses a reentrant model
 30393 ;;
 30394                           
 30395                           	psect	text126
 30396  01B712                     __ptext126:
 30397                           	opt callstack 0
 30398  01B712                     _FVR_Initialize:
 30399                           	opt callstack 14
 30400                           
 30401                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 30402                           
 30403                           ; BSR set to: 57
 30404                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30405                           ;incstack = 0
 30406  01B712  0EAF               	movlw	175
 30407  01B714  013E               	movlb	62	; () banked
 30408  01B716  6FC1               	movwf	193,b	;volatile
 30409                           
 30410                           ; BSR set to: 62
 30411                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 30412  01B718  0012               	return		;funcret
 30413  01B71A                     __end_of_FVR_Initialize:
 30414                           	opt callstack 0
 30415                           
 30416 ;; *************** function _EXT_INT_Initialize *****************
 30417 ;; Defined at:
 30418 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 30419 ;; Parameters:    Size  Location     Type
 30420 ;;		None
 30421 ;; Auto vars:     Size  Location     Type
 30422 ;;		None
 30423 ;; Return value:  Size  Location     Type
 30424 ;;                  1  [STACK] void 
 30425 ;; Registers used:
 30426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30427 ;; Tracked objects:
 30428 ;;		On entry : 3F/39
 30429 ;;		On exit  : 3F/39
 30430 ;;		Unchanged: 0/0
 30431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30436 ;;Total ram usage:        0 bytes
 30437 ;; Hardware stack levels used:    1
 30438 ;; Hardware stack levels required when called:   16
 30439 ;; This function calls:
 30440 ;;		_INT0_SetInterruptHandler
 30441 ;;		_INT1_SetInterruptHandler
 30442 ;; This function is called by:
 30443 ;;		_SYSTEM_Initialize
 30444 ;; This function uses a reentrant model
 30445 ;;
 30446                           
 30447                           	psect	text127
 30448  01AEC6                     __ptext127:
 30449                           	opt callstack 0
 30450  01AEC6                     _EXT_INT_Initialize:
 30451                           	opt callstack 13
 30452                           
 30453                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 30454                           
 30455                           ; BSR set to: 62
 30456                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30457                           ;incstack = 0
 30458  01AEC6  0139               	movlb	57	; () banked
 30459  01AEC8  91A1               	bcf	161,0,b	;volatile
 30460                           
 30461                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 30462  01AECA  90D2               	bcf	210,0,c	;volatile
 30463                           
 30464                           ; BSR set to: 57
 30465                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 30466  01AECC  0E3E               	movlw	low _INT0_DefaultInterruptHandler
 30467  01AECE  6EE6               	movwf	postinc1,c
 30468  01AED0  0EB7               	movlw	high _INT0_DefaultInterruptHandler
 30469  01AED2  6EE6               	movwf	postinc1,c
 30470  01AED4  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 30471  01AED6  6EE6               	movwf	postinc1,c
 30472  01AED8  EC41  F0D9         	call	_INT0_SetInterruptHandler	;wreg free
 30473                           
 30474                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 30475  01AEDC  0139               	movlb	57	; () banked
 30476  01AEDE  8191               	bsf	145,0,b	;volatile
 30477                           
 30478                           ; BSR set to: 57
 30479                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 30480  01AEE0  91A5               	bcf	165,0,b	;volatile
 30481                           
 30482                           ; BSR set to: 57
 30483                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 30484  01AEE2  92D2               	bcf	210,1,c	;volatile
 30485                           
 30486                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 30487  01AEE4  0E3A               	movlw	low _INT1_DefaultInterruptHandler
 30488  01AEE6  6EE6               	movwf	postinc1,c
 30489  01AEE8  0EB7               	movlw	high _INT1_DefaultInterruptHandler
 30490  01AEEA  6EE6               	movwf	postinc1,c
 30491  01AEEC  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 30492  01AEEE  6EE6               	movwf	postinc1,c
 30493  01AEF0  EC2D  F0D9         	call	_INT1_SetInterruptHandler	;wreg free
 30494                           
 30495                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 30496  01AEF4  0139               	movlb	57	; () banked
 30497  01AEF6  8195               	bsf	149,0,b	;volatile
 30498                           
 30499                           ; BSR set to: 57
 30500                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 30501  01AEF8  0012               	return		;funcret
 30502  01AEFA                     __end_of_EXT_INT_Initialize:
 30503                           	opt callstack 0
 30504                           
 30505 ;; *************** function _INT1_SetInterruptHandler *****************
 30506 ;; Defined at:
 30507 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 30508 ;; Parameters:    Size  Location     Type
 30509 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30510 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 30511 ;; Auto vars:     Size  Location     Type
 30512 ;;		None
 30513 ;; Return value:  Size  Location     Type
 30514 ;;                  1  [STACK] void 
 30515 ;; Registers used:
 30516 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30517 ;; Tracked objects:
 30518 ;;		On entry : 3F/39
 30519 ;;		On exit  : 0/0
 30520 ;;		Unchanged: 0/0
 30521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30526 ;;Total ram usage:        0 bytes
 30527 ;; Hardware stack levels used:    1
 30528 ;; Hardware stack levels required when called:   15
 30529 ;; This function calls:
 30530 ;;		Nothing
 30531 ;; This function is called by:
 30532 ;;		_EXT_INT_Initialize
 30533 ;;		_start_switch_handler
 30534 ;; This function uses a reentrant model
 30535 ;;
 30536                           
 30537                           	psect	text128
 30538  01B25A                     __ptext128:
 30539                           	opt callstack 0
 30540  01B25A                     _INT1_SetInterruptHandler:
 30541                           	opt callstack 14
 30542                           
 30543                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 30544                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30545                           
 30546                           ; BSR set to: 57
 30547                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30548                           ;incstack = 0
 30549  01B25A  50E1               	movf	fsr1l,w,c
 30550  01B25C  0FFD               	addlw	-3
 30551  01B25E  6ED9               	movwf	fsr2l,c
 30552  01B260  50E2               	movf	fsr1h,w,c
 30553  01B262  6EDA               	movwf	fsr2h,c
 30554  01B264  0EFF               	movlw	255
 30555  01B266  22DA               	addwfc	fsr2h,f,c
 30556  01B268  006F FF78  F0BA    	movff	postinc2,_INT1_InterruptHandler
 30557  01B26E  006F FF78  F0BB    	movff	postinc2,_INT1_InterruptHandler+1
 30558  01B274  006F FF74  F0BC    	movff	postdec2,_INT1_InterruptHandler+2
 30559                           
 30560                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30561  01B27A  52E5               	movf	postdec1,f,c
 30562  01B27C  52E5               	movf	postdec1,f,c
 30563  01B27E  52E5               	movf	postdec1,f,c
 30564  01B280  0012               	return		;funcret
 30565  01B282                     __end_of_INT1_SetInterruptHandler:
 30566                           	opt callstack 0
 30567                           
 30568 ;; *************** function _INT0_SetInterruptHandler *****************
 30569 ;; Defined at:
 30570 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 30571 ;; Parameters:    Size  Location     Type
 30572 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30573 ;;		 -> INT0_DefaultInterruptHandler(1), 
 30574 ;; Auto vars:     Size  Location     Type
 30575 ;;		None
 30576 ;; Return value:  Size  Location     Type
 30577 ;;                  1  [STACK] void 
 30578 ;; Registers used:
 30579 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30580 ;; Tracked objects:
 30581 ;;		On entry : 3F/39
 30582 ;;		On exit  : 0/0
 30583 ;;		Unchanged: 0/0
 30584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30589 ;;Total ram usage:        0 bytes
 30590 ;; Hardware stack levels used:    1
 30591 ;; Hardware stack levels required when called:   15
 30592 ;; This function calls:
 30593 ;;		Nothing
 30594 ;; This function is called by:
 30595 ;;		_EXT_INT_Initialize
 30596 ;; This function uses a reentrant model
 30597 ;;
 30598                           
 30599                           	psect	text129
 30600  01B282                     __ptext129:
 30601                           	opt callstack 0
 30602  01B282                     _INT0_SetInterruptHandler:
 30603                           	opt callstack 13
 30604                           
 30605                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 30606                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30607                           
 30608                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30609                           ;incstack = 0
 30610  01B282  50E1               	movf	fsr1l,w,c
 30611  01B284  0FFD               	addlw	-3
 30612  01B286  6ED9               	movwf	fsr2l,c
 30613  01B288  50E2               	movf	fsr1h,w,c
 30614  01B28A  6EDA               	movwf	fsr2h,c
 30615  01B28C  0EFF               	movlw	255
 30616  01B28E  22DA               	addwfc	fsr2h,f,c
 30617  01B290  006F FF78  F0BD    	movff	postinc2,_INT0_InterruptHandler
 30618  01B296  006F FF78  F0BE    	movff	postinc2,_INT0_InterruptHandler+1
 30619  01B29C  006F FF74  F0BF    	movff	postdec2,_INT0_InterruptHandler+2
 30620                           
 30621                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30622  01B2A2  52E5               	movf	postdec1,f,c
 30623  01B2A4  52E5               	movf	postdec1,f,c
 30624  01B2A6  52E5               	movf	postdec1,f,c
 30625  01B2A8  0012               	return		;funcret
 30626  01B2AA                     __end_of_INT0_SetInterruptHandler:
 30627                           	opt callstack 0
 30628                           
 30629 ;; *************** function _DMA2_Initialize *****************
 30630 ;; Defined at:
 30631 ;;		line 61 in file "mcc_generated_files/dma2.c"
 30632 ;; Parameters:    Size  Location     Type
 30633 ;;		None
 30634 ;; Auto vars:     Size  Location     Type
 30635 ;;		None
 30636 ;; Return value:  Size  Location     Type
 30637 ;;                  1  [STACK] void 
 30638 ;; Registers used:
 30639 ;;		wreg, status,2
 30640 ;; Tracked objects:
 30641 ;;		On entry : 3F/3D
 30642 ;;		On exit  : 3F/3B
 30643 ;;		Unchanged: 0/0
 30644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30649 ;;Total ram usage:        0 bytes
 30650 ;; Hardware stack levels used:    1
 30651 ;; Hardware stack levels required when called:   15
 30652 ;; This function calls:
 30653 ;;		Nothing
 30654 ;; This function is called by:
 30655 ;;		_SYSTEM_Initialize
 30656 ;; This function uses a reentrant model
 30657 ;;
 30658                           
 30659                           	psect	text130
 30660  01A7D0                     __ptext130:
 30661                           	opt callstack 0
 30662  01A7D0                     _DMA2_Initialize:
 30663                           	opt callstack 14
 30664                           
 30665                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 30666                           
 30667                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30668                           ;incstack = 0
 30669  01A7D0  0E00               	movlw	0
 30670  01A7D2  013B               	movlb	59	; () banked
 30671  01A7D4  6FD9               	movwf	217,b	;volatile
 30672  01A7D6  0E10               	movlw	16
 30673  01A7D8  6FDA               	movwf	218,b	;volatile
 30674  01A7DA  0E00               	movlw	0
 30675  01A7DC  6FDB               	movwf	219,b	;volatile
 30676                           
 30677                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 30678  01A7DE  0E3F               	movlw	63
 30679  01A7E0  6FD1               	movwf	209,b	;volatile
 30680  01A7E2  0EBB               	movlw	187
 30681  01A7E4  6FD0               	movwf	208,b	;volatile
 30682                           
 30683                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 30684  01A7E6  0E03               	movlw	3
 30685  01A7E8  6FDD               	movwf	221,b	;volatile
 30686                           
 30687                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 30688  01A7EA  0E00               	movlw	0
 30689  01A7EC  6FD8               	movwf	216,b	;volatile
 30690  01A7EE  0E01               	movlw	1
 30691  01A7F0  6FD7               	movwf	215,b	;volatile
 30692                           
 30693                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 30694  01A7F2  0E00               	movlw	0
 30695  01A7F4  6FCF               	movwf	207,b	;volatile
 30696  01A7F6  0E01               	movlw	1
 30697  01A7F8  6FCE               	movwf	206,b	;volatile
 30698                           
 30699                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 30700  01A7FA  0E1C               	movlw	28
 30701  01A7FC  6FDF               	movwf	223,b	;volatile
 30702                           
 30703                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 30704  01A7FE  0E3D               	movlw	61
 30705  01A800  6FDE               	movwf	222,b	;volatile
 30706                           
 30707                           ; BSR set to: 59
 30708                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 30709  01A802  0139               	movlb	57	; () banked
 30710  01A804  97A5               	bcf	165,3,b	;volatile
 30711                           
 30712                           ; BSR set to: 57
 30713                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 30714  01A806  95A5               	bcf	165,2,b	;volatile
 30715                           
 30716                           ; BSR set to: 57
 30717                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 30718  01A808  9BA5               	bcf	165,5,b	;volatile
 30719                           
 30720                           ; BSR set to: 57
 30721                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 30722  01A80A  99A5               	bcf	165,4,b	;volatile
 30723                           
 30724                           ; BSR set to: 57
 30725                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 30726  01A80C  9795               	bcf	149,3,b	;volatile
 30727                           
 30728                           ; BSR set to: 57
 30729                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 30730  01A80E  9595               	bcf	149,2,b	;volatile
 30731                           
 30732                           ; BSR set to: 57
 30733                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 30734  01A810  9B95               	bcf	149,5,b	;volatile
 30735                           
 30736                           ; BSR set to: 57
 30737                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 30738  01A812  9995               	bcf	149,4,b	;volatile
 30739  01A814  9ED2               	bcf	16338,7,c	;# 
 30740  01A816  0139               	banksel	14831	;# 
 30741  01A818  0E55               	movlw	85	;# 
 30742  01A81A  6FEF               	movwf	14831,b	;# 
 30743  01A81C  0EAA               	movlw	170	;# 
 30744  01A81E  6FEF               	movwf	14831,b	;# 
 30745  01A820  81EF               	bsf	14831,0,b	;# 
 30746  01A822  8ED2               	bsf	16338,7,c	;# 
 30747                           
 30748                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 30749  01A824  013B               	movlb	59	; () banked
 30750  01A826  6BDC               	clrf	220,b	;volatile
 30751                           
 30752                           ; BSR set to: 59
 30753                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30754  01A828  0012               	return		;funcret
 30755  01A82A                     __end_of_DMA2_Initialize:
 30756                           	opt callstack 0
 30757                           
 30758 ;; *************** function _DMA1_Initialize *****************
 30759 ;; Defined at:
 30760 ;;		line 86 in file "mcc_generated_files/dma1.c"
 30761 ;; Parameters:    Size  Location     Type
 30762 ;;		None
 30763 ;; Auto vars:     Size  Location     Type
 30764 ;;		None
 30765 ;; Return value:  Size  Location     Type
 30766 ;;                  1  [STACK] void 
 30767 ;; Registers used:
 30768 ;;		wreg, status,2
 30769 ;; Tracked objects:
 30770 ;;		On entry : 3F/3B
 30771 ;;		On exit  : 3F/3B
 30772 ;;		Unchanged: 0/0
 30773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30778 ;;Total ram usage:        0 bytes
 30779 ;; Hardware stack levels used:    1
 30780 ;; Hardware stack levels required when called:   15
 30781 ;; This function calls:
 30782 ;;		Nothing
 30783 ;; This function is called by:
 30784 ;;		_SYSTEM_Initialize
 30785 ;; This function uses a reentrant model
 30786 ;;
 30787                           
 30788                           	psect	text131
 30789  01A44A                     __ptext131:
 30790                           	opt callstack 0
 30791  01A44A                     _DMA1_Initialize:
 30792                           	opt callstack 14
 30793                           
 30794                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 30795                           
 30796                           ; BSR set to: 59
 30797                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30798                           ;incstack = 0
 30799  01A44A  0E00               	movlw	0
 30800  01A44C  013B               	movlb	59	; () banked
 30801  01A44E  6FF9               	movwf	249,b	;volatile
 30802  01A450  0E10               	movlw	16
 30803  01A452  6FFA               	movwf	250,b	;volatile
 30804  01A454  0E00               	movlw	0
 30805  01A456  6FFB               	movwf	251,b	;volatile
 30806                           
 30807                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 30808  01A458  0E3D               	movlw	61
 30809  01A45A  6FF1               	movwf	241,b	;volatile
 30810  01A45C  0E11               	movlw	17
 30811  01A45E  6FF0               	movwf	240,b	;volatile
 30812                           
 30813                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 30814  01A460  0E03               	movlw	3
 30815  01A462  6FFD               	movwf	253,b	;volatile
 30816                           
 30817                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 30818  01A464  0E00               	movlw	0
 30819  01A466  6FF8               	movwf	248,b	;volatile
 30820  01A468  0E01               	movlw	1
 30821  01A46A  6FF7               	movwf	247,b	;volatile
 30822                           
 30823                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 30824  01A46C  0E00               	movlw	0
 30825  01A46E  6FEF               	movwf	239,b	;volatile
 30826  01A470  0E01               	movlw	1
 30827  01A472  6FEE               	movwf	238,b	;volatile
 30828                           
 30829                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 30830  01A474  0E15               	movlw	21
 30831  01A476  6FFF               	movwf	255,b	;volatile
 30832                           
 30833                           ; BSR set to: 59
 30834                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 30835  01A478  6BFE               	clrf	254,b	;volatile
 30836                           
 30837                           ; BSR set to: 59
 30838                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 30839  01A47A  0139               	movlb	57	; () banked
 30840  01A47C  93A2               	bcf	162,1,b	;volatile
 30841                           
 30842                           ; BSR set to: 57
 30843                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 30844  01A47E  91A2               	bcf	162,0,b	;volatile
 30845                           
 30846                           ; BSR set to: 57
 30847                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 30848  01A480  97A2               	bcf	162,3,b	;volatile
 30849                           
 30850                           ; BSR set to: 57
 30851                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 30852  01A482  95A2               	bcf	162,2,b	;volatile
 30853                           
 30854                           ; BSR set to: 57
 30855                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 30856  01A484  8392               	bsf	146,1,b	;volatile
 30857                           
 30858                           ; BSR set to: 57
 30859                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 30860  01A486  8192               	bsf	146,0,b	;volatile
 30861                           
 30862                           ; BSR set to: 57
 30863                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 30864  01A488  8792               	bsf	146,3,b	;volatile
 30865                           
 30866                           ; BSR set to: 57
 30867                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 30868  01A48A  8592               	bsf	146,2,b	;volatile
 30869                           
 30870                           ; BSR set to: 57
 30871                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 30872  01A48C  6BF1               	clrf	241,b	;volatile
 30873                           
 30874                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 30875  01A48E  0E01               	movlw	1
 30876  01A490  6FF2               	movwf	242,b	;volatile
 30877                           
 30878                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 30879  01A492  0E04               	movlw	4
 30880  01A494  6FF3               	movwf	243,b	;volatile
 30881                           
 30882                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 30883  01A496  0E02               	movlw	2
 30884  01A498  6FF4               	movwf	244,b	;volatile
 30885                           
 30886                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 30887  01A49A  0E03               	movlw	3
 30888  01A49C  6FF7               	movwf	247,b	;volatile
 30889  01A49E  9ED2               	bcf	16338,7,c	;# 
 30890  01A4A0  0139               	banksel	14831	;# 
 30891  01A4A2  0E55               	movlw	85	;# 
 30892  01A4A4  6FEF               	movwf	14831,b	;# 
 30893  01A4A6  0EAA               	movlw	170	;# 
 30894  01A4A8  6FEF               	movwf	14831,b	;# 
 30895  01A4AA  81EF               	bsf	14831,0,b	;# 
 30896  01A4AC  8ED2               	bsf	16338,7,c	;# 
 30897                           
 30898                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 30899  01A4AE  013B               	movlb	59	; () banked
 30900  01A4B0  6BFC               	clrf	252,b	;volatile
 30901                           
 30902                           ; BSR set to: 59
 30903                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30904  01A4B2  0012               	return		;funcret
 30905  01A4B4                     __end_of_DMA1_Initialize:
 30906                           	opt callstack 0
 30907                           
 30908 ;; *************** function _CLKREF_Initialize *****************
 30909 ;; Defined at:
 30910 ;;		line 58 in file "mcc_generated_files/clkref.c"
 30911 ;; Parameters:    Size  Location     Type
 30912 ;;		None
 30913 ;; Auto vars:     Size  Location     Type
 30914 ;;		None
 30915 ;; Return value:  Size  Location     Type
 30916 ;;                  1  [STACK] void 
 30917 ;; Registers used:
 30918 ;;		wreg, status,2
 30919 ;; Tracked objects:
 30920 ;;		On entry : 3F/3B
 30921 ;;		On exit  : 3F/3C
 30922 ;;		Unchanged: 0/0
 30923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30928 ;;Total ram usage:        0 bytes
 30929 ;; Hardware stack levels used:    1
 30930 ;; Hardware stack levels required when called:   15
 30931 ;; This function calls:
 30932 ;;		Nothing
 30933 ;; This function is called by:
 30934 ;;		_SYSTEM_Initialize
 30935 ;; This function uses a reentrant model
 30936 ;;
 30937                           
 30938                           	psect	text132
 30939  01B6BA                     __ptext132:
 30940                           	opt callstack 0
 30941  01B6BA                     _CLKREF_Initialize:
 30942                           	opt callstack 14
 30943                           
 30944                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 30945                           
 30946                           ; BSR set to: 59
 30947                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30948                           ;incstack = 0
 30949  01B6BA  013C               	movlb	60	; () banked
 30950  01B6BC  6BE6               	clrf	230,b	;volatile
 30951                           
 30952                           ; BSR set to: 60
 30953                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 30954  01B6BE  0E94               	movlw	148
 30955  01B6C0  6FE5               	movwf	229,b	;volatile
 30956                           
 30957                           ; BSR set to: 60
 30958                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 30959  01B6C2  0012               	return		;funcret
 30960  01B6C4                     __end_of_CLKREF_Initialize:
 30961                           	opt callstack 0
 30962                           
 30963 ;; *************** function _ADCC_Initialize *****************
 30964 ;; Defined at:
 30965 ;;		line 65 in file "mcc_generated_files/adcc.c"
 30966 ;; Parameters:    Size  Location     Type
 30967 ;;		None
 30968 ;; Auto vars:     Size  Location     Type
 30969 ;;		None
 30970 ;; Return value:  Size  Location     Type
 30971 ;;                  1  [STACK] void 
 30972 ;; Registers used:
 30973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 30974 ;; Tracked objects:
 30975 ;;		On entry : 3F/3E
 30976 ;;		On exit  : 0/0
 30977 ;;		Unchanged: 0/0
 30978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30983 ;;Total ram usage:        0 bytes
 30984 ;; Hardware stack levels used:    1
 30985 ;; Hardware stack levels required when called:   16
 30986 ;; This function calls:
 30987 ;;		_ADCC_SetADIInterruptHandler
 30988 ;;		_ADCC_SetADTIInterruptHandler
 30989 ;; This function is called by:
 30990 ;;		_SYSTEM_Initialize
 30991 ;; This function uses a reentrant model
 30992 ;;
 30993                           
 30994                           	psect	text133
 30995  01A4B4                     __ptext133:
 30996                           	opt callstack 0
 30997  01A4B4                     _ADCC_Initialize:
 30998                           	opt callstack 13
 30999                           
 31000                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 31001                           
 31002                           ; BSR set to: 60
 31003                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31004                           ;incstack = 0
 31005  01A4B4  013E               	movlb	62	; () banked
 31006  01A4B6  6BDE               	clrf	222,b	;volatile
 31007                           
 31008                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 31009  01A4B8  6BDF               	clrf	223,b	;volatile
 31010                           
 31011                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 31012  01A4BA  6BE0               	clrf	224,b	;volatile
 31013                           
 31014                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 31015  01A4BC  6BE1               	clrf	225,b	;volatile
 31016                           
 31017                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 31018  01A4BE  6BE4               	clrf	228,b	;volatile
 31019                           
 31020                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 31021  01A4C0  6BE5               	clrf	229,b	;volatile
 31022                           
 31023                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 31024  01A4C2  6BEA               	clrf	234,b	;volatile
 31025                           
 31026                           ; BSR set to: 62
 31027                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 31028  01A4C4  0E40               	movlw	64
 31029  01A4C6  6FEC               	movwf	236,b	;volatile
 31030                           
 31031                           ; BSR set to: 62
 31032                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 31033  01A4C8  6BF1               	clrf	241,b	;volatile
 31034                           
 31035                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 31036  01A4CA  0E20               	movlw	32
 31037  01A4CC  6FF3               	movwf	243,b	;volatile
 31038                           
 31039                           ; BSR set to: 62
 31040                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 31041  01A4CE  6BF4               	clrf	244,b	;volatile
 31042                           
 31043                           ; BSR set to: 62
 31044                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 31045  01A4D0  6BF5               	clrf	245,b	;volatile
 31046                           
 31047                           ; BSR set to: 62
 31048                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 31049  01A4D2  6BF6               	clrf	246,b	;volatile
 31050                           
 31051                           ; BSR set to: 62
 31052                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 31053  01A4D4  6BF7               	clrf	247,b	;volatile
 31054                           
 31055                           ; BSR set to: 62
 31056                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 31057  01A4D6  6BF9               	clrf	249,b	;volatile
 31058                           
 31059                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 31060  01A4D8  0E5B               	movlw	91
 31061  01A4DA  6FFA               	movwf	250,b	;volatile
 31062                           
 31063                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 31064  01A4DC  0E27               	movlw	39
 31065  01A4DE  6FFB               	movwf	251,b	;volatile
 31066                           
 31067                           ; BSR set to: 62
 31068                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 31069  01A4E0  6BFC               	clrf	252,b	;volatile
 31070                           
 31071                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 31072  01A4E2  0E02               	movlw	2
 31073  01A4E4  6FFD               	movwf	253,b	;volatile
 31074                           
 31075                           ; BSR set to: 62
 31076                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 31077  01A4E6  6BFE               	clrf	254,b	;volatile
 31078                           
 31079                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 31080  01A4E8  0E07               	movlw	7
 31081  01A4EA  6FFF               	movwf	255,b	;volatile
 31082                           
 31083                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 31084  01A4EC  0E84               	movlw	132
 31085  01A4EE  6FF8               	movwf	248,b	;volatile
 31086                           
 31087                           ; BSR set to: 62
 31088                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 31089  01A4F0  0139               	movlb	57	; () banked
 31090  01A4F2  95A1               	bcf	161,2,b	;volatile
 31091                           
 31092                           ; BSR set to: 57
 31093                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 31094  01A4F4  8591               	bsf	145,2,b	;volatile
 31095                           
 31096                           ; BSR set to: 57
 31097                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 31098  01A4F6  0E40               	movlw	low _ADCC_DefaultInterruptHandler
 31099  01A4F8  6EE6               	movwf	postinc1,c
 31100  01A4FA  0EB7               	movlw	high _ADCC_DefaultInterruptHandler
 31101  01A4FC  6EE6               	movwf	postinc1,c
 31102  01A4FE  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31103  01A500  6EE6               	movwf	postinc1,c
 31104  01A502  EC69  F0D9         	call	_ADCC_SetADIInterruptHandler	;wreg free
 31105                           
 31106                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 31107  01A506  0139               	movlb	57	; () banked
 31108  01A508  97A1               	bcf	161,3,b	;volatile
 31109                           
 31110                           ; BSR set to: 57
 31111                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 31112  01A50A  8791               	bsf	145,3,b	;volatile
 31113                           
 31114                           ; BSR set to: 57
 31115                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 31116  01A50C  0E40               	movlw	low _ADCC_DefaultInterruptHandler
 31117  01A50E  6EE6               	movwf	postinc1,c
 31118  01A510  0EB7               	movlw	high _ADCC_DefaultInterruptHandler
 31119  01A512  6EE6               	movwf	postinc1,c
 31120  01A514  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31121  01A516  6EE6               	movwf	postinc1,c
 31122  01A518  EC55  F0D9         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 31123                           
 31124                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31125  01A51C  0012               	return		;funcret
 31126  01A51E                     __end_of_ADCC_Initialize:
 31127                           	opt callstack 0
 31128                           
 31129 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 31130 ;; Defined at:
 31131 ;;		line 336 in file "mcc_generated_files/adcc.c"
 31132 ;; Parameters:    Size  Location     Type
 31133 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31134 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 31135 ;; Auto vars:     Size  Location     Type
 31136 ;;		None
 31137 ;; Return value:  Size  Location     Type
 31138 ;;                  1  [STACK] void 
 31139 ;; Registers used:
 31140 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31141 ;; Tracked objects:
 31142 ;;		On entry : 0/0
 31143 ;;		On exit  : 0/0
 31144 ;;		Unchanged: 0/0
 31145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31150 ;;Total ram usage:        0 bytes
 31151 ;; Hardware stack levels used:    1
 31152 ;; Hardware stack levels required when called:   15
 31153 ;; This function calls:
 31154 ;;		Nothing
 31155 ;; This function is called by:
 31156 ;;		_ADCC_Initialize
 31157 ;;		_start_adc_scan
 31158 ;; This function uses a reentrant model
 31159 ;;
 31160                           
 31161                           	psect	text134
 31162  01B2AA                     __ptext134:
 31163                           	opt callstack 0
 31164  01B2AA                     _ADCC_SetADTIInterruptHandler:
 31165                           	opt callstack 14
 31166                           
 31167                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 31168                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31169                           
 31170                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31171                           ;incstack = 0
 31172  01B2AA  50E1               	movf	fsr1l,w,c
 31173  01B2AC  0FFD               	addlw	-3
 31174  01B2AE  6ED9               	movwf	fsr2l,c
 31175  01B2B0  50E2               	movf	fsr1h,w,c
 31176  01B2B2  6EDA               	movwf	fsr2h,c
 31177  01B2B4  0EFF               	movlw	255
 31178  01B2B6  22DA               	addwfc	fsr2h,f,c
 31179  01B2B8  006F FF78  F0AB    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 31180  01B2BE  006F FF78  F0AC    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 31181  01B2C4  006F FF74  F0AD    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 31182                           
 31183                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 31184  01B2CA  52E5               	movf	postdec1,f,c
 31185  01B2CC  52E5               	movf	postdec1,f,c
 31186  01B2CE  52E5               	movf	postdec1,f,c
 31187  01B2D0  0012               	return		;funcret
 31188  01B2D2                     __end_of_ADCC_SetADTIInterruptHandler:
 31189                           	opt callstack 0
 31190                           
 31191 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 31192 ;; Defined at:
 31193 ;;		line 323 in file "mcc_generated_files/adcc.c"
 31194 ;; Parameters:    Size  Location     Type
 31195 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31196 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 31197 ;; Auto vars:     Size  Location     Type
 31198 ;;		None
 31199 ;; Return value:  Size  Location     Type
 31200 ;;                  1  [STACK] void 
 31201 ;; Registers used:
 31202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31203 ;; Tracked objects:
 31204 ;;		On entry : 6/0
 31205 ;;		On exit  : 0/0
 31206 ;;		Unchanged: 0/0
 31207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31212 ;;Total ram usage:        0 bytes
 31213 ;; Hardware stack levels used:    1
 31214 ;; Hardware stack levels required when called:   15
 31215 ;; This function calls:
 31216 ;;		Nothing
 31217 ;; This function is called by:
 31218 ;;		_ADCC_Initialize
 31219 ;;		_start_adc_scan
 31220 ;; This function uses a reentrant model
 31221 ;;
 31222                           
 31223                           	psect	text135
 31224  01B2D2                     __ptext135:
 31225                           	opt callstack 0
 31226  01B2D2                     _ADCC_SetADIInterruptHandler:
 31227                           	opt callstack 14
 31228                           
 31229                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 31230                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31231                           
 31232                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31233                           ;incstack = 0
 31234  01B2D2  50E1               	movf	fsr1l,w,c
 31235  01B2D4  0FFD               	addlw	-3
 31236  01B2D6  6ED9               	movwf	fsr2l,c
 31237  01B2D8  50E2               	movf	fsr1h,w,c
 31238  01B2DA  6EDA               	movwf	fsr2h,c
 31239  01B2DC  0EFF               	movlw	255
 31240  01B2DE  22DA               	addwfc	fsr2h,f,c
 31241  01B2E0  006F FF78  F0AE    	movff	postinc2,_ADCC_ADI_InterruptHandler
 31242  01B2E6  006F FF78  F0AF    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 31243  01B2EC  006F FF74  F0B0    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 31244                           
 31245                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 31246  01B2F2  52E5               	movf	postdec1,f,c
 31247  01B2F4  52E5               	movf	postdec1,f,c
 31248  01B2F6  52E5               	movf	postdec1,f,c
 31249  01B2F8  0012               	return		;funcret
 31250  01B2FA                     __end_of_ADCC_SetADIInterruptHandler:
 31251                           	opt callstack 0
 31252                           
 31253 ;; *************** function _INT1_ISR *****************
 31254 ;; Defined at:
 31255 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 31256 ;; Parameters:    Size  Location     Type
 31257 ;;		None
 31258 ;; Auto vars:     Size  Location     Type
 31259 ;;		None
 31260 ;; Return value:  Size  Location     Type
 31261 ;;                  1    wreg      void 
 31262 ;; Registers used:
 31263 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31264 ;; Tracked objects:
 31265 ;;		On entry : 0/0
 31266 ;;		On exit  : 0/0
 31267 ;;		Unchanged: 0/0
 31268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31271 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31272 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31273 ;;Total ram usage:        4 bytes
 31274 ;; Hardware stack levels used:    1
 31275 ;; Hardware stack levels required when called:    5
 31276 ;; This function calls:
 31277 ;;		_INT1_CallBack
 31278 ;; This function is called by:
 31279 ;;		Interrupt level 1
 31280 ;; This function uses a non-reentrant model
 31281 ;;
 31282                           
 31283                           	psect	text136
 31284  01AD40                     __ptext136:
 31285                           	opt callstack 0
 31286  01AD40                     _INT1_ISR:
 31287                           	opt callstack 12
 31288                           
 31289                           ;incstack = 0
 31290  01AD40  006F FF60  F03F    	movff	status,??_INT1_ISR
 31291  01AD46  0060  F004  F040   	movff	btemp,??_INT1_ISR+1
 31292  01AD4C  0060  F02C  F041   	movff	btemp+10,??_INT1_ISR+2
 31293  01AD52  0060  F030  F042   	movff	btemp+11,??_INT1_ISR+3
 31294  01AD58  EE16  F061         	lfsr	1,___intlo_sp
 31295                           
 31296                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 31297  01AD5C  0139               	movlb	57	; () banked
 31298  01AD5E  91A5               	bcf	165,0,b	;volatile
 31299                           
 31300                           ; BSR set to: 57
 31301                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 31302  01AD60  ECDE  F0D9         	call	_INT1_CallBack	;wreg free
 31303  01AD64  0060  F108  F00C   	movff	??_INT1_ISR+3,btemp+11
 31304  01AD6A  0060  F104  F00B   	movff	??_INT1_ISR+2,btemp+10
 31305  01AD70  0060  F100  F001   	movff	??_INT1_ISR+1,btemp
 31306  01AD76  0060  F0FF  FFD8   	movff	??_INT1_ISR,status
 31307  01AD7C  0011               	retfie		f
 31308  01AD7E                     __end_of_INT1_ISR:
 31309                           	opt callstack 0
 31310                           
 31311 ;; *************** function _INT1_CallBack *****************
 31312 ;; Defined at:
 31313 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 31314 ;; Parameters:    Size  Location     Type
 31315 ;;		None
 31316 ;; Auto vars:     Size  Location     Type
 31317 ;;		None
 31318 ;; Return value:  Size  Location     Type
 31319 ;;                  1  [STACK] void 
 31320 ;; Registers used:
 31321 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31322 ;; Tracked objects:
 31323 ;;		On entry : 3F/39
 31324 ;;		On exit  : 0/0
 31325 ;;		Unchanged: 0/0
 31326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31331 ;;Total ram usage:        0 bytes
 31332 ;; Hardware stack levels used:    1
 31333 ;; Hardware stack levels required when called:    4
 31334 ;; This function calls:
 31335 ;;		Absolute function
 31336 ;;		_INT1_DefaultInterruptHandler
 31337 ;;		_switch_handler
 31338 ;; This function is called by:
 31339 ;;		_INT1_ISR
 31340 ;; This function uses a reentrant model
 31341 ;;
 31342                           
 31343                           	psect	text137
 31344  01B3BC                     __ptext137:
 31345                           	opt callstack 0
 31346  01B3BC                     _INT1_CallBack:
 31347                           	opt callstack 12
 31348                           
 31349                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 31350                           
 31351                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31352                           ;incstack = 0
 31353  01B3BC  0100               	movlb	0	; () banked
 31354  01B3BE  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 31355  01B3C0  11BB               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 31356  01B3C2  11BC               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 31357  01B3C4  B4D8               	btfsc	status,2,c
 31358  01B3C6  0012               	return	
 31359                           
 31360                           ; BSR set to: 0
 31361                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 31362  01B3C8  D801               	call	u957_28
 31363  01B3CA  0012               	return	
 31364  01B3CC                     u957_28:
 31365  01B3CC  0005               	push	
 31366  01B3CE  6EFA               	movwf	pclath,c
 31367  01B3D0  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 31368  01B3D2  6EFD               	movwf	tosl,c
 31369  01B3D4  51BB               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 31370  01B3D6  6EFE               	movwf	tosh,c
 31371  01B3D8  51BC               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 31372  01B3DA  6EFF               	movwf	tosu,c
 31373  01B3DC  50FA               	movf	pclath,w,c
 31374  01B3DE  0012               	return		;indir
 31375  01B3E0                     __end_of_INT1_CallBack:
 31376                           	opt callstack 0
 31377                           
 31378 ;; *************** function _INT1_DefaultInterruptHandler *****************
 31379 ;; Defined at:
 31380 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 31381 ;; Parameters:    Size  Location     Type
 31382 ;;		None
 31383 ;; Auto vars:     Size  Location     Type
 31384 ;;		None
 31385 ;; Return value:  Size  Location     Type
 31386 ;;                  1  [STACK] void 
 31387 ;; Registers used:
 31388 ;;		None
 31389 ;; Tracked objects:
 31390 ;;		On entry : 3F/0
 31391 ;;		On exit  : 0/0
 31392 ;;		Unchanged: 0/0
 31393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31398 ;;Total ram usage:        0 bytes
 31399 ;; Hardware stack levels used:    1
 31400 ;; Hardware stack levels required when called:    3
 31401 ;; This function calls:
 31402 ;;		Nothing
 31403 ;; This function is called by:
 31404 ;;		_EXT_INT_Initialize
 31405 ;;		_INT1_CallBack
 31406 ;; This function uses a reentrant model
 31407 ;;
 31408                           
 31409                           	psect	text138
 31410  01B73A                     __ptext138:
 31411                           	opt callstack 0
 31412  01B73A                     _INT1_DefaultInterruptHandler:
 31413                           	opt callstack 12
 31414                           
 31415                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31416                           
 31417                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31418                           ;incstack = 0
 31419  01B73A  0012               	return		;funcret
 31420  01B73C                     __end_of_INT1_DefaultInterruptHandler:
 31421                           	opt callstack 0
 31422                           
 31423 ;; *************** function _switch_handler *****************
 31424 ;; Defined at:
 31425 ;;		line 58 in file "dio.c"
 31426 ;; Parameters:    Size  Location     Type
 31427 ;;		None
 31428 ;; Auto vars:     Size  Location     Type
 31429 ;;  i               1  [STACK] unsigned char 
 31430 ;;  sw_value        1  [STACK] unsigned char 
 31431 ;; Return value:  Size  Location     Type
 31432 ;;                  1  [STACK] void 
 31433 ;; Registers used:
 31434 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 31435 ;; Tracked objects:
 31436 ;;		On entry : 3F/0
 31437 ;;		On exit  : 0/0
 31438 ;;		Unchanged: 0/0
 31439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31444 ;;Total ram usage:        0 bytes
 31445 ;; Hardware stack levels used:    1
 31446 ;; Hardware stack levels required when called:    3
 31447 ;; This function calls:
 31448 ;;		Nothing
 31449 ;; This function is called by:
 31450 ;;		_start_switch_handler
 31451 ;;		_INT1_CallBack
 31452 ;; This function uses a reentrant model
 31453 ;;
 31454                           
 31455                           	psect	text139
 31456  018C58                     __ptext139:
 31457                           	opt callstack 0
 31458  018C58                     _switch_handler:
 31459                           	opt callstack 0
 31460                           
 31461                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31462  018C58  52E6               	movf	postinc1,f,c
 31463  018C5A  52E6               	movf	postinc1,f,c
 31464                           
 31465                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 31466                           ;stkvar	_i @ sp[(-2)+0]
 31467                           
 31468                           ;incstack = 0
 31469  018C5C  0EFE               	movlw	-2
 31470  018C5E  6AE3               	clrf	plusw1,c
 31471  018C60  9EBD               	bcf	189,7,c	;volatile
 31472                           
 31473                           ;dio.c: 72:  __nop();
 31474  018C62  F000               	nop	
 31475                           
 31476                           ;dio.c: 73:  __nop();
 31477  018C64  F000               	nop	
 31478                           
 31479                           ;dio.c: 74:  __nop();
 31480  018C66  F000               	nop	
 31481  018C68  D019               	goto	l10228
 31482  018C6A                     l10216:
 31483                           
 31484                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 31485  018C6A  A6CF               	btfss	207,3,c	;volatile
 31486  018C6C  D011               	goto	u933_20
 31487  018C6E  D00D               	goto	u933_21
 31488  018C70                     u930_28:
 31489                           
 31490                           ;stkvar	_sw_value @ sp[(-2)+1]
 31491  018C70  0EFF               	movlw	-1
 31492  018C72  0060  F033  FFE3   	movff	btemp+11,plusw1
 31493                           
 31494                           ;dio.c: 80:    break;
 31495  018C78  D027               	goto	l10230
 31496  018C7A                     l10218:
 31497                           
 31498                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 31499  018C7A  A4CF               	btfss	207,2,c	;volatile
 31500  018C7C  D009               	goto	u933_20
 31501  018C7E  D005               	goto	u933_21
 31502  018C80                     l10220:
 31503                           
 31504                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 31505  018C80  A2CF               	btfss	207,1,c	;volatile
 31506  018C82  D006               	goto	u933_20
 31507  018C84  D002               	goto	u933_21
 31508  018C86                     l10222:
 31509                           
 31510                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 31511  018C86  A0CF               	btfss	207,0,c	;volatile
 31512  018C88  D003               	goto	u933_20
 31513  018C8A                     u933_21:
 31514  018C8A  6A0C               	clrf	(btemp+11)^0,c
 31515  018C8C  2A0C               	incf	(btemp+11)^0,f,c
 31516  018C8E  D7F0               	goto	u930_28
 31517  018C90                     u933_20:
 31518  018C90  6A0C               	clrf	(btemp+11)^0,c
 31519  018C92  D7EE               	goto	u930_28
 31520  018C94                     l10224:
 31521                           
 31522                           ;dio.c: 91:    sw_value = 1;
 31523                           ;stkvar	_sw_value @ sp[(-2)+1]
 31524  018C94  0EFF               	movlw	-1
 31525  018C96  6AE3               	clrf	plusw1,c
 31526  018C98  2AE3               	incf	plusw1,f,c
 31527                           
 31528                           ;dio.c: 92:    break;
 31529  018C9A  D016               	goto	l10230
 31530  018C9C                     l10228:
 31531                           
 31532                           ;stkvar	_i @ sp[(-2)+0]
 31533  018C9C  0EFE               	movlw	-2
 31534  018C9E  50E3               	movf	plusw1,w,c
 31535  018CA0  6E0B               	movwf	(btemp+10)^0,c
 31536  018CA2  6A0C               	clrf	(btemp+11)^0,c
 31537                           
 31538                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31539                           ; Switch size 1, requested type "simple"
 31540                           ; Number of cases is 1, Range of values is 0 to 0
 31541                           ; switch strategies available:
 31542                           ; Name         Instructions Cycles
 31543                           ; simple_byte            4     3 (average)
 31544                           ;	Chosen strategy is simple_byte
 31545  018CA4  500C               	movf	(btemp+11)^0,w,c
 31546  018CA6  0A00               	xorlw	0	; case 0
 31547  018CA8  A4D8               	btfss	status,2,c
 31548  018CAA  D7F4               	goto	l10224
 31549                           
 31550                           ; Switch size 1, requested type "simple"
 31551                           ; Number of cases is 4, Range of values is 0 to 3
 31552                           ; switch strategies available:
 31553                           ; Name         Instructions Cycles
 31554                           ; simple_byte           13     7 (average)
 31555                           ;	Chosen strategy is simple_byte
 31556  018CAC  500B               	movf	(btemp+10)^0,w,c
 31557  018CAE  0A00               	xorlw	0	; case 0
 31558  018CB0  B4D8               	btfsc	status,2,c
 31559  018CB2  D7E9               	goto	l10222
 31560  018CB4  0A01               	xorlw	1	; case 1
 31561  018CB6  B4D8               	btfsc	status,2,c
 31562  018CB8  D7E3               	goto	l10220
 31563  018CBA  0A03               	xorlw	3	; case 2
 31564  018CBC  B4D8               	btfsc	status,2,c
 31565  018CBE  D7DD               	goto	l10218
 31566  018CC0  0A01               	xorlw	1	; case 3
 31567  018CC2  B4D8               	btfsc	status,2,c
 31568  018CC4  D7D2               	goto	l10216
 31569  018CC6  D7E6               	goto	l10224
 31570  018CC8                     l10230:
 31571                           
 31572                           ;dio.c: 96:   if (sw_value) {
 31573                           ;stkvar	_sw_value @ sp[(-2)+1]
 31574  018CC8  0EFF               	movlw	-1
 31575  018CCA  50E3               	movf	plusw1,w,c
 31576  018CCC  B4D8               	btfsc	status,2,c
 31577  018CCE  D018               	goto	l10236
 31578                           
 31579                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 31580                           ;stkvar	_i @ sp[(-2)+0]
 31581  018CD0  0EFE               	movlw	-2
 31582  018CD2  50E3               	movf	plusw1,w,c
 31583  018CD4  0D05               	mullw	5
 31584  018CD6  0EBD               	movlw	low _S
 31585  018CD8  24F3               	addwf	243,w,c
 31586  018CDA  6ED9               	movwf	fsr2l,c
 31587  018CDC  0E02               	movlw	high _S
 31588  018CDE  20F4               	addwfc	prodh,w,c
 31589  018CE0  6EDA               	movwf	fsr2h,c
 31590  018CE2  04DE               	decf	postinc2,w,c
 31591  018CE4  A4D8               	btfss	status,2,c
 31592  018CE6  D049               	goto	l10244
 31593                           
 31594                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 31595                           ;stkvar	_i @ sp[(-2)+0]
 31596  018CE8  0EFE               	movlw	-2
 31597  018CEA  50E3               	movf	plusw1,w,c
 31598  018CEC  0D05               	mullw	5
 31599  018CEE  0EBD               	movlw	low _S
 31600  018CF0  24F3               	addwf	243,w,c
 31601  018CF2  6ED9               	movwf	fsr2l,c
 31602  018CF4  0E02               	movlw	high _S
 31603  018CF6  20F4               	addwfc	prodh,w,c
 31604  018CF8  6EDA               	movwf	fsr2h,c
 31605  018CFA  0E00               	movlw	0
 31606  018CFC  6EDF               	movwf	indf2,c
 31607  018CFE  D03D               	goto	l10244
 31608  018D00                     l10236:
 31609                           
 31610                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 31611                           ;stkvar	_i @ sp[(-2)+0]
 31612  018D00  0EFE               	movlw	-2
 31613  018D02  50E3               	movf	plusw1,w,c
 31614  018D04  0D05               	mullw	5
 31615  018D06  0EBD               	movlw	low _S
 31616  018D08  24F3               	addwf	243,w,c
 31617  018D0A  6ED9               	movwf	fsr2l,c
 31618  018D0C  0E02               	movlw	high _S
 31619  018D0E  20F4               	addwfc	prodh,w,c
 31620  018D10  6EDA               	movwf	fsr2h,c
 31621  018D12  50DF               	movf	indf2,w,c
 31622  018D14  A4D8               	btfss	status,2,c
 31623  018D16  D031               	goto	l10244
 31624                           
 31625                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 31626                           ;stkvar	_i @ sp[(-2)+0]
 31627  018D18  0EFE               	movlw	-2
 31628  018D1A  50E3               	movf	plusw1,w,c
 31629  018D1C  0D05               	mullw	5
 31630  018D1E  0EBD               	movlw	low _S
 31631  018D20  24F3               	addwf	243,w,c
 31632  018D22  6ED9               	movwf	fsr2l,c
 31633  018D24  0E02               	movlw	high _S
 31634  018D26  20F4               	addwfc	prodh,w,c
 31635  018D28  6EDA               	movwf	fsr2h,c
 31636  018D2A  0E01               	movlw	1
 31637  018D2C  6EDF               	movwf	indf2,c
 31638                           
 31639                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 31640  018D2E  EE20  F2B9         	lfsr	2,_V+185	;volatile
 31641                           
 31642                           ;stkvar	_i @ sp[(-2)+0]
 31643  018D32  0EFE               	movlw	-2
 31644  018D34  50E3               	movf	plusw1,w,c
 31645  018D36  0D05               	mullw	5
 31646  018D38  0EBE               	movlw	low (_S+1)
 31647  018D3A  24F3               	addwf	243,w,c
 31648  018D3C  6EE9               	movwf	fsr0l,c
 31649  018D3E  0E02               	movlw	high (_S+1)
 31650  018D40  20F4               	addwfc	prodh,w,c
 31651  018D42  6EEA               	movwf	fsr0h,c
 31652  018D44  006F FF7B FFEE     	movff	postinc2,postinc0
 31653  018D4A  006F FF7B FFEE     	movff	postinc2,postinc0
 31654  018D50  006F FF7B FFEE     	movff	postinc2,postinc0
 31655  018D56  006F FF7B FFEE     	movff	postinc2,postinc0
 31656                           
 31657                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 31658                           ;stkvar	_i @ sp[(-2)+0]
 31659  018D5C  0EFE               	movlw	-2
 31660  018D5E  006F FF8C  F00C    	movff	plusw1,btemp+11
 31661  018D64  0E01               	movlw	1
 31662  018D66  6E0B               	movwf	(btemp+10)^0,c
 31663  018D68  2A0C               	incf	(btemp+11)^0,f,c
 31664  018D6A  D002               	goto	u937_24
 31665  018D6C                     u937_25:
 31666  018D6C  90D8               	bcf	status,0,c
 31667  018D6E  360B               	rlcf	(btemp+10)^0,f,c
 31668  018D70                     u937_24:
 31669  018D70  2E0C               	decfsz	(btemp+11)^0,f,c
 31670  018D72  D7FC               	goto	u937_25
 31671  018D74  500B               	movf	(btemp+10)^0,w,c
 31672  018D76  0102               	movlb	2	; () banked
 31673  018D78  13E5               	iorwf	(_S+40)& (0+255),f,b	;volatile
 31674  018D7A                     l10244:
 31675                           
 31676                           ;dio.c: 107:  } while (++i < 4);
 31677                           ;stkvar	_i @ sp[(-2)+0]
 31678  018D7A  0EFE               	movlw	-2
 31679  018D7C  2AE3               	incf	plusw1,f,c
 31680  018D7E  0EFE               	movlw	-2
 31681  018D80  006F FF8C  F001    	movff	plusw1,btemp
 31682  018D86  0E03               	movlw	3
 31683  018D88  6401               	cpfsgt	btemp^0,c
 31684  018D8A  D788               	goto	l10228
 31685                           
 31686                           ;dio.c: 116:  do { LATDbits.LATD7 = 1; } while(0);
 31687  018D8C  8EBD               	bsf	189,7,c	;volatile
 31688                           
 31689                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 31690  018D8E  52E5               	movf	postdec1,f,c
 31691  018D90  52E5               	movf	postdec1,f,c
 31692  018D92  0012               	return		;funcret
 31693  018D94                     __end_of_switch_handler:
 31694                           	opt callstack 0
 31695                           
 31696 ;; *************** function _TMR5_ISR *****************
 31697 ;; Defined at:
 31698 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 31699 ;; Parameters:    Size  Location     Type
 31700 ;;		None
 31701 ;; Auto vars:     Size  Location     Type
 31702 ;;		None
 31703 ;; Return value:  Size  Location     Type
 31704 ;;                  1    wreg      void 
 31705 ;; Registers used:
 31706 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 31707 ;; Tracked objects:
 31708 ;;		On entry : 0/0
 31709 ;;		On exit  : 0/0
 31710 ;;		Unchanged: 0/0
 31711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31714 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31715 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31716 ;;Total ram usage:        4 bytes
 31717 ;; Hardware stack levels used:    1
 31718 ;; Hardware stack levels required when called:    5
 31719 ;; This function calls:
 31720 ;;		_TMR5_CallBack
 31721 ;;		_TMR5_WriteTimer
 31722 ;; This function is called by:
 31723 ;;		Interrupt level 1
 31724 ;; This function uses a non-reentrant model
 31725 ;;
 31726                           
 31727                           	psect	text140
 31728  01A82C                     __ptext140:
 31729                           	opt callstack 0
 31730  01A82C                     _TMR5_ISR:
 31731                           	opt callstack 12
 31732                           
 31733                           ;incstack = 0
 31734  01A82C  006F FF60  F045    	movff	status,??_TMR5_ISR+2
 31735  01A832  0060  F030  F046   	movff	btemp+11,??_TMR5_ISR+3
 31736  01A838  EE16  F061         	lfsr	1,___intlo_sp
 31737                           
 31738                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 31739  01A83C  0139               	movlb	57	; () banked
 31740  01A83E  9DA8               	bcf	168,6,b	;volatile
 31741                           
 31742                           ; BSR set to: 57
 31743                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 31744  01A840  0060  F0AF  FFE6   	movff	_timer5ReloadVal,postinc1
 31745  01A846  0060  F0B3  FFE6   	movff	_timer5ReloadVal+1,postinc1
 31746  01A84C  EC60  F0D6         	call	_TMR5_WriteTimer	;wreg free
 31747                           
 31748                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 31749  01A850  0102               	movlb	2	; () banked
 31750  01A852  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
 31751  01A854  6E43               	movwf	??_TMR5_ISR^0,c
 31752  01A856  6A44               	clrf	(??_TMR5_ISR+1)^0,c
 31753  01A858  0E05               	movlw	5
 31754  01A85A  2643               	addwf	??_TMR5_ISR^0,f,c
 31755  01A85C  0E00               	movlw	0
 31756  01A85E  2244               	addwfc	(??_TMR5_ISR+1)^0,f,c
 31757  01A860  4A29               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 31758  01A862  2A2A               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 31759  01A864  5043               	movf	??_TMR5_ISR^0,w,c
 31760  01A866  5C29               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 31761  01A868  5044               	movf	(??_TMR5_ISR+1)^0,w,c
 31762  01A86A  582A               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 31763  01A86C  A0D8               	btfss	status,0,c
 31764  01A86E  D004               	goto	i1l1017
 31765                           
 31766                           ; BSR set to: 2
 31767                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 31768  01A870  ECF0  F0D9         	call	_TMR5_CallBack	;wreg free
 31769                           
 31770                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 31771  01A874  6A29               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 31772  01A876  6A2A               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 31773  01A878                     i1l1017:
 31774  01A878  0060  F118  F00C   	movff	??_TMR5_ISR+3,btemp+11
 31775  01A87E  0060  F117  FFD8   	movff	??_TMR5_ISR+2,status
 31776  01A884  0011               	retfie		f
 31777  01A886                     __end_of_TMR5_ISR:
 31778                           	opt callstack 0
 31779                           
 31780 ;; *************** function _TMR5_WriteTimer *****************
 31781 ;; Defined at:
 31782 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 31783 ;; Parameters:    Size  Location     Type
 31784 ;;  timerVal        2  [STACK] unsigned short 
 31785 ;; Auto vars:     Size  Location     Type
 31786 ;;		None
 31787 ;; Return value:  Size  Location     Type
 31788 ;;                  1  [STACK] void 
 31789 ;; Registers used:
 31790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 31791 ;; Tracked objects:
 31792 ;;		On entry : 3F/39
 31793 ;;		On exit  : 0/0
 31794 ;;		Unchanged: 0/0
 31795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31800 ;;Total ram usage:        0 bytes
 31801 ;; Hardware stack levels used:    1
 31802 ;; Hardware stack levels required when called:    3
 31803 ;; This function calls:
 31804 ;;		Nothing
 31805 ;; This function is called by:
 31806 ;;		_TMR5_ISR
 31807 ;; This function uses a reentrant model
 31808 ;;
 31809                           
 31810                           	psect	text141
 31811  01ACC0                     __ptext141:
 31812                           	opt callstack 0
 31813  01ACC0                     _TMR5_WriteTimer:
 31814                           	opt callstack 13
 31815                           
 31816                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 31817                           
 31818                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31819                           ;incstack = 0
 31820  01ACC0  A49A               	btfss	154,2,c	;volatile
 31821  01ACC2  D00F               	goto	l10428
 31822                           
 31823                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 31824  01ACC4  909A               	bcf	154,0,c	;volatile
 31825                           
 31826                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 31827                           ;stkvar	_timerVal @ sp[(0)+-2]
 31828  01ACC6  0EFF               	movlw	255
 31829  01ACC8  24E1               	addwf	fsr1l,w,c
 31830  01ACCA  6ED9               	movwf	fsr2l,c
 31831  01ACCC  0EFF               	movlw	255
 31832  01ACCE  20E2               	addwfc	fsr1h,w,c
 31833  01ACD0  6EDA               	movwf	fsr2h,c
 31834  01ACD2  50DF               	movf	indf2,w,c
 31835  01ACD4  6E99               	movwf	153,c	;volatile
 31836                           
 31837                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 31838                           ;stkvar	_timerVal @ sp[(0)+-2]
 31839  01ACD6  0EFE               	movlw	-2
 31840  01ACD8  006F FF8F FF98     	movff	plusw1,16280	;volatile
 31841                           
 31842                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 31843  01ACDE  809A               	bsf	154,0,c	;volatile
 31844                           
 31845                           ;mcc_generated_files/tmr5.c: 142:  } else {
 31846  01ACE0  D00C               	goto	l1000
 31847  01ACE2                     l10428:
 31848                           
 31849                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 31850                           ;stkvar	_timerVal @ sp[(0)+-2]
 31851  01ACE2  0EFF               	movlw	255
 31852  01ACE4  24E1               	addwf	fsr1l,w,c
 31853  01ACE6  6ED9               	movwf	fsr2l,c
 31854  01ACE8  0EFF               	movlw	255
 31855  01ACEA  20E2               	addwfc	fsr1h,w,c
 31856  01ACEC  6EDA               	movwf	fsr2h,c
 31857  01ACEE  50DF               	movf	indf2,w,c
 31858  01ACF0  6E99               	movwf	153,c	;volatile
 31859                           
 31860                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 31861                           ;stkvar	_timerVal @ sp[(0)+-2]
 31862  01ACF2  0EFE               	movlw	-2
 31863  01ACF4  006F FF8F FF98     	movff	plusw1,16280	;volatile
 31864  01ACFA                     l1000:
 31865                           
 31866                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 31867  01ACFA  52E5               	movf	postdec1,f,c
 31868  01ACFC  52E5               	movf	postdec1,f,c
 31869  01ACFE  0012               	return		;funcret
 31870  01AD00                     __end_of_TMR5_WriteTimer:
 31871                           	opt callstack 0
 31872                           
 31873 ;; *************** function _TMR5_CallBack *****************
 31874 ;; Defined at:
 31875 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 31876 ;; Parameters:    Size  Location     Type
 31877 ;;		None
 31878 ;; Auto vars:     Size  Location     Type
 31879 ;;		None
 31880 ;; Return value:  Size  Location     Type
 31881 ;;                  1  [STACK] void 
 31882 ;; Registers used:
 31883 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 31884 ;; Tracked objects:
 31885 ;;		On entry : 3F/2
 31886 ;;		On exit  : 0/0
 31887 ;;		Unchanged: 0/0
 31888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31893 ;;Total ram usage:        0 bytes
 31894 ;; Hardware stack levels used:    1
 31895 ;; Hardware stack levels required when called:    4
 31896 ;; This function calls:
 31897 ;;		Absolute function
 31898 ;;		_TMR5_DefaultInterruptHandler
 31899 ;; This function is called by:
 31900 ;;		_TMR5_ISR
 31901 ;; This function uses a reentrant model
 31902 ;;
 31903                           
 31904                           	psect	text142
 31905  01B3E0                     __ptext142:
 31906                           	opt callstack 0
 31907  01B3E0                     _TMR5_CallBack:
 31908                           	opt callstack 12
 31909                           
 31910                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 31911                           
 31912                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31913                           ;incstack = 0
 31914  01B3E0  0100               	movlb	0	; () banked
 31915  01B3E2  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 31916  01B3E4  11A6               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 31917  01B3E6  11A7               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 31918  01B3E8  B4D8               	btfsc	status,2,c
 31919  01B3EA  0012               	return	
 31920                           
 31921                           ; BSR set to: 0
 31922                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 31923  01B3EC  D801               	call	u966_28
 31924  01B3EE  0012               	return	
 31925  01B3F0                     u966_28:
 31926  01B3F0  0005               	push	
 31927  01B3F2  6EFA               	movwf	pclath,c
 31928  01B3F4  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 31929  01B3F6  6EFD               	movwf	tosl,c
 31930  01B3F8  51A6               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 31931  01B3FA  6EFE               	movwf	tosh,c
 31932  01B3FC  51A7               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 31933  01B3FE  6EFF               	movwf	tosu,c
 31934  01B400  50FA               	movf	pclath,w,c
 31935  01B402  0012               	return		;indir
 31936  01B404                     __end_of_TMR5_CallBack:
 31937                           	opt callstack 0
 31938                           
 31939 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 31940 ;; Defined at:
 31941 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 31942 ;; Parameters:    Size  Location     Type
 31943 ;;		None
 31944 ;; Auto vars:     Size  Location     Type
 31945 ;;		None
 31946 ;; Return value:  Size  Location     Type
 31947 ;;                  1  [STACK] void 
 31948 ;; Registers used:
 31949 ;;		wreg, status,2, status,0, btemp+11
 31950 ;; Tracked objects:
 31951 ;;		On entry : 3F/0
 31952 ;;		On exit  : 3F/2
 31953 ;;		Unchanged: 0/0
 31954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31959 ;;Total ram usage:        0 bytes
 31960 ;; Hardware stack levels used:    1
 31961 ;; Hardware stack levels required when called:    3
 31962 ;; This function calls:
 31963 ;;		Nothing
 31964 ;; This function is called by:
 31965 ;;		_TMR5_Initialize
 31966 ;;		_TMR5_CallBack
 31967 ;; This function uses a reentrant model
 31968 ;;
 31969                           
 31970                           	psect	text143
 31971  01AEFA                     __ptext143:
 31972                           	opt callstack 0
 31973  01AEFA                     _TMR5_DefaultInterruptHandler:
 31974                           	opt callstack 12
 31975                           
 31976                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 31977                           
 31978                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31979                           ;incstack = 0
 31980  01AEFA  A0BE               	btfss	190,0,c	;volatile
 31981  01AEFC  D002               	goto	u902_20
 31982  01AEFE  0E01               	movlw	1
 31983  01AF00  D001               	goto	u902_26
 31984  01AF02                     u902_20:
 31985  01AF02  0E00               	movlw	0
 31986  01AF04                     u902_26:
 31987  01AF04  0AFF               	xorlw	255
 31988  01AF06  6E0C               	movwf	(btemp+11)^0,c
 31989  01AF08  50BE               	movf	190,w,c	;volatile
 31990  01AF0A  180C               	xorwf	(btemp+11)^0,w,c
 31991  01AF0C  0BFE               	andlw	-2
 31992  01AF0E  180C               	xorwf	(btemp+11)^0,w,c
 31993  01AF10  6EBE               	movwf	190,c	;volatile
 31994                           
 31995                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 31996  01AF12  0E01               	movlw	1
 31997  01AF14  0102               	movlb	2	; () banked
 31998  01AF16  27B9               	addwf	(_V+185)& (0+255),f,b	;volatile
 31999  01AF18  0E00               	movlw	0
 32000  01AF1A  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 32001  01AF1C  23BB               	addwfc	(_V+187)& (0+255),f,b	;volatile
 32002  01AF1E  23BC               	addwfc	(_V+188)& (0+255),f,b	;volatile
 32003                           
 32004                           ; BSR set to: 2
 32005                           ;mcc_generated_files/tmr5.c: 201:  V.ticks++;
 32006  01AF20  0E01               	movlw	1
 32007  01AF22  2781               	addwf	(_V+129)& (0+255),f,b	;volatile
 32008  01AF24  0E00               	movlw	0
 32009  01AF26  2382               	addwfc	(_V+130)& (0+255),f,b	;volatile
 32010  01AF28  2383               	addwfc	(_V+131)& (0+255),f,b	;volatile
 32011  01AF2A  2384               	addwfc	(_V+132)& (0+255),f,b	;volatile
 32012                           
 32013                           ; BSR set to: 2
 32014                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32015  01AF2C  0012               	return		;funcret
 32016  01AF2E                     __end_of_TMR5_DefaultInterruptHandler:
 32017                           	opt callstack 0
 32018                           
 32019 ;; *************** function _TMR3_ISR *****************
 32020 ;; Defined at:
 32021 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 32022 ;; Parameters:    Size  Location     Type
 32023 ;;		None
 32024 ;; Auto vars:     Size  Location     Type
 32025 ;;		None
 32026 ;; Return value:  Size  Location     Type
 32027 ;;                  1    wreg      void 
 32028 ;; Registers used:
 32029 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 32030 ;; Tracked objects:
 32031 ;;		On entry : 0/0
 32032 ;;		On exit  : 3F/0
 32033 ;;		Unchanged: 0/0
 32034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32037 ;;      Temps:          0       0       0       0      25       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32038 ;;      Totals:         0       0       0       0      25       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32039 ;;Total ram usage:       25 bytes
 32040 ;; Hardware stack levels used:    1
 32041 ;; Hardware stack levels required when called:   14
 32042 ;; This function calls:
 32043 ;;		_TMR3_CallBack
 32044 ;;		_TMR3_WriteTimer
 32045 ;; This function is called by:
 32046 ;;		Interrupt level 1
 32047 ;; This function uses a non-reentrant model
 32048 ;;
 32049                           
 32050                           	psect	text144
 32051  018868                     __ptext144:
 32052                           	opt callstack 0
 32053  018868                     _TMR3_ISR:
 32054                           	opt callstack 3
 32055                           
 32056                           ; BSR set to: 2
 32057                           ;incstack = 0
 32058  018868  006F FF60  F3E4    	movff	status,??_TMR3_ISR
 32059  01886E  006F FFD8  F3E5    	movff	tblptrl,??_TMR3_ISR+1
 32060  018874  006F FFDC  F3E6    	movff	tblptrh,??_TMR3_ISR+2
 32061  01887A  006F FFE0  F3E7    	movff	tblptru,??_TMR3_ISR+3
 32062  018880  006F FFD4  F3E8    	movff	tablat,??_TMR3_ISR+4
 32063  018886  0060  F004  F3E9   	movff	btemp,??_TMR3_ISR+5
 32064  01888C  0060  F008  F3EA   	movff	btemp+1,??_TMR3_ISR+6
 32065  018892  0060  F00C  F3EB   	movff	btemp+2,??_TMR3_ISR+7
 32066  018898  0060  F010  F3EC   	movff	btemp+3,??_TMR3_ISR+8
 32067  01889E  0060  F014  F3ED   	movff	btemp+4,??_TMR3_ISR+9
 32068  0188A4  0060  F018  F3EE   	movff	btemp+5,??_TMR3_ISR+10
 32069  0188AA  0060  F01C  F3EF   	movff	btemp+6,??_TMR3_ISR+11
 32070  0188B0  0060  F020  F3F0   	movff	btemp+7,??_TMR3_ISR+12
 32071  0188B6  0060  F024  F3F1   	movff	btemp+8,??_TMR3_ISR+13
 32072  0188BC  0060  F028  F3F2   	movff	btemp+9,??_TMR3_ISR+14
 32073  0188C2  0060  F02C  F3F3   	movff	btemp+10,??_TMR3_ISR+15
 32074  0188C8  0060  F030  F3F4   	movff	btemp+11,??_TMR3_ISR+16
 32075  0188CE  0060  F044  F3F5   	movff	btemp+16,??_TMR3_ISR+17
 32076  0188D4  0060  F048  F3F6   	movff	btemp+17,??_TMR3_ISR+18
 32077  0188DA  0060  F04C  F3F7   	movff	btemp+18,??_TMR3_ISR+19
 32078  0188E0  0060  F050  F3F8   	movff	btemp+19,??_TMR3_ISR+20
 32079  0188E6  0060  F054  F3F9   	movff	btemp+20,??_TMR3_ISR+21
 32080  0188EC  0060  F058  F3FA   	movff	btemp+21,??_TMR3_ISR+22
 32081  0188F2  0060  F05C  F3FB   	movff	btemp+22,??_TMR3_ISR+23
 32082  0188F8  0060  F060  F3FC   	movff	btemp+23,??_TMR3_ISR+24
 32083  0188FE  EE16  F061         	lfsr	1,___intlo_sp
 32084                           
 32085                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 32086  018902  0139               	movlb	57	; () banked
 32087  018904  9DA6               	bcf	166,6,b	;volatile
 32088                           
 32089                           ; BSR set to: 57
 32090                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 32091  018906  0060  F09F  FFE6   	movff	_timer3ReloadVal,postinc1
 32092  01890C  0060  F0A3  FFE6   	movff	_timer3ReloadVal+1,postinc1
 32093  018912  EC80  F0D6         	call	_TMR3_WriteTimer	;wreg free
 32094                           
 32095                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 32096  018916  0100               	movlb	0	; () banked
 32097  018918  4BC2               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 32098  01891A  2BC3               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 32099  01891C  51C3               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 32100  01891E  E104               	bnz	i1u1205_20
 32101  018920  0E28               	movlw	40
 32102  018922  5DC2               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 32103  018924  A0D8               	btfss	status,0,c
 32104  018926  D005               	goto	i1l1205
 32105  018928                     i1u1205_20:
 32106                           
 32107                           ; BSR set to: 0
 32108                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 32109  018928  EC02  F0DA         	call	_TMR3_CallBack	;wreg free
 32110                           
 32111                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 32112  01892C  0100               	movlb	0	; () banked
 32113  01892E  6BC2               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 32114  018930  6BC3               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 32115  018932                     i1l1205:
 32116                           
 32117                           ; BSR set to: 0
 32118  018932  0060  FFF0  F018   	movff	??_TMR3_ISR+24,btemp+23
 32119  018938  0060  FFEC  F017   	movff	??_TMR3_ISR+23,btemp+22
 32120  01893E  0060  FFE8  F016   	movff	??_TMR3_ISR+22,btemp+21
 32121  018944  0060  FFE4  F015   	movff	??_TMR3_ISR+21,btemp+20
 32122  01894A  0060  FFE0  F014   	movff	??_TMR3_ISR+20,btemp+19
 32123  018950  0060  FFDC  F013   	movff	??_TMR3_ISR+19,btemp+18
 32124  018956  0060  FFD8  F012   	movff	??_TMR3_ISR+18,btemp+17
 32125  01895C  0060  FFD4  F011   	movff	??_TMR3_ISR+17,btemp+16
 32126  018962  0060  FFD0  F00C   	movff	??_TMR3_ISR+16,btemp+11
 32127  018968  0060  FFCC  F00B   	movff	??_TMR3_ISR+15,btemp+10
 32128  01896E  0060  FFC8  F00A   	movff	??_TMR3_ISR+14,btemp+9
 32129  018974  0060  FFC4  F009   	movff	??_TMR3_ISR+13,btemp+8
 32130  01897A  0060  FFC0  F008   	movff	??_TMR3_ISR+12,btemp+7
 32131  018980  0060  FFBC  F007   	movff	??_TMR3_ISR+11,btemp+6
 32132  018986  0060  FFB8  F006   	movff	??_TMR3_ISR+10,btemp+5
 32133  01898C  0060  FFB4  F005   	movff	??_TMR3_ISR+9,btemp+4
 32134  018992  0060  FFB0  F004   	movff	??_TMR3_ISR+8,btemp+3
 32135  018998  0060  FFAC  F003   	movff	??_TMR3_ISR+7,btemp+2
 32136  01899E  0060  FFA8  F002   	movff	??_TMR3_ISR+6,btemp+1
 32137  0189A4  0060  FFA4  F001   	movff	??_TMR3_ISR+5,btemp
 32138  0189AA  0060  FFA3  FFF5   	movff	??_TMR3_ISR+4,tablat
 32139  0189B0  0060  FF9F  FFF8   	movff	??_TMR3_ISR+3,tblptru
 32140  0189B6  0060  FF9B  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 32141  0189BC  0060  FF97  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 32142  0189C2  0060  FF93  FFD8   	movff	??_TMR3_ISR,status
 32143  0189C8  0011               	retfie		f
 32144  0189CA                     __end_of_TMR3_ISR:
 32145                           	opt callstack 0
 32146                           
 32147 ;; *************** function _TMR3_WriteTimer *****************
 32148 ;; Defined at:
 32149 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 32150 ;; Parameters:    Size  Location     Type
 32151 ;;  timerVal        2  [STACK] unsigned short 
 32152 ;; Auto vars:     Size  Location     Type
 32153 ;;		None
 32154 ;; Return value:  Size  Location     Type
 32155 ;;                  1  [STACK] void 
 32156 ;; Registers used:
 32157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 32158 ;; Tracked objects:
 32159 ;;		On entry : 3F/39
 32160 ;;		On exit  : 0/0
 32161 ;;		Unchanged: 0/0
 32162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32167 ;;Total ram usage:        0 bytes
 32168 ;; Hardware stack levels used:    1
 32169 ;; Hardware stack levels required when called:    3
 32170 ;; This function calls:
 32171 ;;		Nothing
 32172 ;; This function is called by:
 32173 ;;		_TMR3_ISR
 32174 ;; This function uses a reentrant model
 32175 ;;
 32176                           
 32177                           	psect	text145
 32178  01AD00                     __ptext145:
 32179                           	opt callstack 0
 32180  01AD00                     _TMR3_WriteTimer:
 32181                           	opt callstack 13
 32182                           
 32183                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 32184                           
 32185                           ; BSR set to: 0
 32186                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32187                           ;incstack = 0
 32188  01AD00  A4A6               	btfss	166,2,c	;volatile
 32189  01AD02  D00F               	goto	l10446
 32190                           
 32191                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 32192  01AD04  90A6               	bcf	166,0,c	;volatile
 32193                           
 32194                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 32195                           ;stkvar	_timerVal @ sp[(0)+-2]
 32196  01AD06  0EFF               	movlw	255
 32197  01AD08  24E1               	addwf	fsr1l,w,c
 32198  01AD0A  6ED9               	movwf	fsr2l,c
 32199  01AD0C  0EFF               	movlw	255
 32200  01AD0E  20E2               	addwfc	fsr1h,w,c
 32201  01AD10  6EDA               	movwf	fsr2h,c
 32202  01AD12  50DF               	movf	indf2,w,c
 32203  01AD14  6EA5               	movwf	165,c	;volatile
 32204                           
 32205                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 32206                           ;stkvar	_timerVal @ sp[(0)+-2]
 32207  01AD16  0EFE               	movlw	-2
 32208  01AD18  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 32209                           
 32210                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 32211  01AD1E  80A6               	bsf	166,0,c	;volatile
 32212                           
 32213                           ;mcc_generated_files/tmr3.c: 141:     }
 32214  01AD20  D00C               	goto	l1188
 32215  01AD22                     l10446:
 32216                           
 32217                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 32218                           ;stkvar	_timerVal @ sp[(0)+-2]
 32219  01AD22  0EFF               	movlw	255
 32220  01AD24  24E1               	addwf	fsr1l,w,c
 32221  01AD26  6ED9               	movwf	fsr2l,c
 32222  01AD28  0EFF               	movlw	255
 32223  01AD2A  20E2               	addwfc	fsr1h,w,c
 32224  01AD2C  6EDA               	movwf	fsr2h,c
 32225  01AD2E  50DF               	movf	indf2,w,c
 32226  01AD30  6EA5               	movwf	165,c	;volatile
 32227                           
 32228                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 32229                           ;stkvar	_timerVal @ sp[(0)+-2]
 32230  01AD32  0EFE               	movlw	-2
 32231  01AD34  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 32232  01AD3A                     l1188:
 32233                           
 32234                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 32235  01AD3A  52E5               	movf	postdec1,f,c
 32236  01AD3C  52E5               	movf	postdec1,f,c
 32237  01AD3E  0012               	return		;funcret
 32238  01AD40                     __end_of_TMR3_WriteTimer:
 32239                           	opt callstack 0
 32240                           
 32241 ;; *************** function _TMR3_CallBack *****************
 32242 ;; Defined at:
 32243 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 32244 ;; Parameters:    Size  Location     Type
 32245 ;;		None
 32246 ;; Auto vars:     Size  Location     Type
 32247 ;;		None
 32248 ;; Return value:  Size  Location     Type
 32249 ;;                  1  [STACK] void 
 32250 ;; Registers used:
 32251 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 32252 ;; Tracked objects:
 32253 ;;		On entry : 3F/0
 32254 ;;		On exit  : 0/0
 32255 ;;		Unchanged: 0/0
 32256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32261 ;;Total ram usage:        0 bytes
 32262 ;; Hardware stack levels used:    1
 32263 ;; Hardware stack levels required when called:   13
 32264 ;; This function calls:
 32265 ;;		Absolute function
 32266 ;;		_TMR3_DefaultInterruptHandler
 32267 ;;		_calc_bsoc
 32268 ;; This function is called by:
 32269 ;;		_TMR3_ISR
 32270 ;; This function uses a reentrant model
 32271 ;;
 32272                           
 32273                           	psect	text146
 32274  01B404                     __ptext146:
 32275                           	opt callstack 0
 32276  01B404                     _TMR3_CallBack:
 32277                           	opt callstack 3
 32278                           
 32279                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 32280                           
 32281                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32282                           ;incstack = 0
 32283  01B404  0100               	movlb	0	; () banked
 32284  01B406  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 32285  01B408  11A3               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 32286  01B40A  11A4               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 32287  01B40C  B4D8               	btfsc	status,2,c
 32288  01B40E  0012               	return	
 32289                           
 32290                           ; BSR set to: 0
 32291                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 32292  01B410  D801               	call	u1196_28
 32293  01B412  0012               	return	
 32294  01B414                     u1196_28:
 32295  01B414  0005               	push	
 32296  01B416  6EFA               	movwf	pclath,c
 32297  01B418  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 32298  01B41A  6EFD               	movwf	tosl,c
 32299  01B41C  51A3               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 32300  01B41E  6EFE               	movwf	tosh,c
 32301  01B420  51A4               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 32302  01B422  6EFF               	movwf	tosu,c
 32303  01B424  50FA               	movf	pclath,w,c
 32304  01B426  0012               	return		;indir
 32305  01B428                     __end_of_TMR3_CallBack:
 32306                           	opt callstack 0
 32307                           
 32308 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 32309 ;; Defined at:
 32310 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 32311 ;; Parameters:    Size  Location     Type
 32312 ;;		None
 32313 ;; Auto vars:     Size  Location     Type
 32314 ;;		None
 32315 ;; Return value:  Size  Location     Type
 32316 ;;                  1  [STACK] void 
 32317 ;; Registers used:
 32318 ;;		None
 32319 ;; Tracked objects:
 32320 ;;		On entry : 3F/0
 32321 ;;		On exit  : 0/0
 32322 ;;		Unchanged: 0/0
 32323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32328 ;;Total ram usage:        0 bytes
 32329 ;; Hardware stack levels used:    1
 32330 ;; Hardware stack levels required when called:    3
 32331 ;; This function calls:
 32332 ;;		Nothing
 32333 ;; This function is called by:
 32334 ;;		_TMR3_Initialize
 32335 ;;		_TMR3_CallBack
 32336 ;; This function uses a reentrant model
 32337 ;;
 32338                           
 32339                           	psect	text147
 32340  01B73C                     __ptext147:
 32341                           	opt callstack 0
 32342  01B73C                     _TMR3_DefaultInterruptHandler:
 32343                           	opt callstack 12
 32344                           
 32345                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32346                           
 32347                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32348                           ;incstack = 0
 32349  01B73C  0012               	return		;funcret
 32350  01B73E                     __end_of_TMR3_DefaultInterruptHandler:
 32351                           	opt callstack 0
 32352                           
 32353 ;; *************** function _calc_bsoc *****************
 32354 ;; Defined at:
 32355 ;;		line 39 in file "bsoc.c"
 32356 ;; Parameters:    Size  Location     Type
 32357 ;;		None
 32358 ;; Auto vars:     Size  Location     Type
 32359 ;;  log_ptr         2  [STACK] PTR unsigned char 
 32360 ;;		 -> port_data(512), 
 32361 ;; Return value:  Size  Location     Type
 32362 ;;                  1  [STACK] void 
 32363 ;; Registers used:
 32364 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 32365 ;; Tracked objects:
 32366 ;;		On entry : 3F/0
 32367 ;;		On exit  : 3F/1
 32368 ;;		Unchanged: 0/0
 32369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32374 ;;Total ram usage:        0 bytes
 32375 ;; Hardware stack levels used:    1
 32376 ;; Hardware stack levels required when called:   12
 32377 ;; This function calls:
 32378 ;;		_StartTimer
 32379 ;;		___fladd
 32380 ;;		___fldiv
 32381 ;;		___flge
 32382 ;;		___flmul
 32383 ;;		___flneg
 32384 ;;		___fltol
 32385 ;;		_port_data_dma_ptr
 32386 ;;		_send_port_data_dma
 32387 ;;		_sprintf
 32388 ;;		_strlen
 32389 ;; This function is called by:
 32390 ;;		_init_bsoc
 32391 ;;		_TMR3_CallBack
 32392 ;; This function uses a reentrant model
 32393 ;;
 32394                           
 32395                           	psect	text148
 32396  0141C0                     __ptext148:
 32397                           	opt callstack 0
 32398  0141C0                     _calc_bsoc:
 32399                           	opt callstack 0
 32400                           
 32401                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32402  0141C0  52E6               	movf	postinc1,f,c
 32403  0141C2  52E6               	movf	postinc1,f,c
 32404                           
 32405                           ;incstack = 0
 32406                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 43:  do { LATEbits.LATE1 = 1; } while(0);
 32407  0141C4  82BE               	bsf	190,1,c	;volatile
 32408                           
 32409                           ;bsoc.c: 45:  C.dynamic_ah += (C.c_bat / 3600.0);
 32410  0141C6  0E00               	movlw	0
 32411  0141C8  6EE6               	movwf	postinc1,c
 32412  0141CA  0E00               	movlw	0
 32413  0141CC  6EE6               	movwf	postinc1,c
 32414  0141CE  0E61               	movlw	97
 32415  0141D0  6EE6               	movwf	postinc1,c
 32416  0141D2  0E45               	movlw	69
 32417  0141D4  6EE6               	movwf	postinc1,c
 32418  0141D6  0060  F513  FFE6   	movff	_C+68,postinc1
 32419  0141DC  0060  F517  FFE6   	movff	_C+69,postinc1
 32420  0141E2  0060  F51B  FFE6   	movff	_C+70,postinc1
 32421  0141E8  0060  F51F  FFE6   	movff	_C+71,postinc1
 32422  0141EE  EC6B  F0A4         	call	___fldiv	;wreg free
 32423  0141F2  0060  F007  FFE6   	movff	btemp,postinc1
 32424  0141F8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32425  0141FE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32426  014204  0060  F013  FFE6   	movff	btemp+3,postinc1
 32427  01420A  0060  F633  FFE6   	movff	_C+140,postinc1
 32428  014210  0060  F637  FFE6   	movff	_C+141,postinc1
 32429  014216  0060  F63B  FFE6   	movff	_C+142,postinc1
 32430  01421C  0060  F63F  FFE6   	movff	_C+143,postinc1
 32431  014222  EC02  F09D         	call	___fladd	;wreg free
 32432  014226  0060  F004  F18C   	movff	btemp,_C+140	;volatile
 32433  01422C  0060  F008  F18D   	movff	btemp+1,_C+141	;volatile
 32434  014232  0060  F00C  F18E   	movff	btemp+2,_C+142	;volatile
 32435  014238  0060  F010  F18F   	movff	btemp+3,_C+143	;volatile
 32436                           
 32437                           ;bsoc.c: 46:  if (C.dynamic_ah > (C.bank_ah))
 32438  01423E  0060  F633  FFE6   	movff	_C+140,postinc1
 32439  014244  0060  F637  FFE6   	movff	_C+141,postinc1
 32440  01424A  0060  F63B  FFE6   	movff	_C+142,postinc1
 32441  014250  0060  F63F  FFE6   	movff	_C+143,postinc1
 32442  014256  0060  F623  FFE6   	movff	_C+136,postinc1
 32443  01425C  0060  F627  FFE6   	movff	_C+137,postinc1
 32444  014262  0060  F62B  FFE6   	movff	_C+138,postinc1
 32445  014268  0060  F62F  FFE6   	movff	_C+139,postinc1
 32446  01426E  EC82  F0C3         	call	___flge	;wreg free
 32447  014272  B001               	btfsc	btemp& (0+255),0,c
 32448  014274  D008               	goto	l12358
 32449                           
 32450                           ;bsoc.c: 47:   C.dynamic_ah = C.bank_ah;
 32451  014276  C188  F18C         	movff	_C+136,_C+140	;volatile
 32452  01427A  C189  F18D         	movff	_C+137,_C+141	;volatile
 32453  01427E  C18A  F18E         	movff	_C+138,_C+142	;volatile
 32454  014282  C18B  F18F         	movff	_C+139,_C+143	;volatile
 32455  014286                     l12358:
 32456                           
 32457                           ;bsoc.c: 48:  if (C.dynamic_ah < 0.1)
 32458  014286  0ECD               	movlw	205
 32459  014288  6EE6               	movwf	postinc1,c
 32460  01428A  0ECC               	movlw	204
 32461  01428C  6EE6               	movwf	postinc1,c
 32462  01428E  0ECC               	movlw	204
 32463  014290  6EE6               	movwf	postinc1,c
 32464  014292  0E3D               	movlw	61
 32465  014294  6EE6               	movwf	postinc1,c
 32466  014296  0060  F633  FFE6   	movff	_C+140,postinc1
 32467  01429C  0060  F637  FFE6   	movff	_C+141,postinc1
 32468  0142A2  0060  F63B  FFE6   	movff	_C+142,postinc1
 32469  0142A8  0060  F63F  FFE6   	movff	_C+143,postinc1
 32470  0142AE  EC82  F0C3         	call	___flge	;wreg free
 32471  0142B2  B001               	btfsc	btemp& (0+255),0,c
 32472  0142B4  D009               	goto	l12362
 32473                           
 32474                           ;bsoc.c: 49:   C.dynamic_ah = 0.1;
 32475  0142B6  0ECD               	movlw	205
 32476  0142B8  0101               	movlb	1	; () banked
 32477  0142BA  6F8C               	movwf	(_C+140)& (0+255),b	;volatile
 32478  0142BC  0ECC               	movlw	204
 32479  0142BE  6F8D               	movwf	(_C+141)& (0+255),b	;volatile
 32480  0142C0  0ECC               	movlw	204
 32481  0142C2  6F8E               	movwf	(_C+142)& (0+255),b	;volatile
 32482  0142C4  0E3D               	movlw	61
 32483  0142C6  6F8F               	movwf	(_C+143)& (0+255),b	;volatile
 32484  0142C8                     l12362:
 32485                           
 32486                           ;bsoc.c: 51:  C.pv_ah += (C.c_pv / 3600.0);
 32487  0142C8  0E00               	movlw	0
 32488  0142CA  6EE6               	movwf	postinc1,c
 32489  0142CC  0E00               	movlw	0
 32490  0142CE  6EE6               	movwf	postinc1,c
 32491  0142D0  0E61               	movlw	97
 32492  0142D2  6EE6               	movwf	postinc1,c
 32493  0142D4  0E45               	movlw	69
 32494  0142D6  6EE6               	movwf	postinc1,c
 32495  0142D8  0060  F523  FFE6   	movff	_C+72,postinc1
 32496  0142DE  0060  F527  FFE6   	movff	_C+73,postinc1
 32497  0142E4  0060  F52B  FFE6   	movff	_C+74,postinc1
 32498  0142EA  0060  F52F  FFE6   	movff	_C+75,postinc1
 32499  0142F0  EC6B  F0A4         	call	___fldiv	;wreg free
 32500  0142F4  0060  F007  FFE6   	movff	btemp,postinc1
 32501  0142FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32502  014300  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32503  014306  0060  F013  FFE6   	movff	btemp+3,postinc1
 32504  01430C  0060  F643  FFE6   	movff	_C+144,postinc1
 32505  014312  0060  F647  FFE6   	movff	_C+145,postinc1
 32506  014318  0060  F64B  FFE6   	movff	_C+146,postinc1
 32507  01431E  0060  F64F  FFE6   	movff	_C+147,postinc1
 32508  014324  EC02  F09D         	call	___fladd	;wreg free
 32509  014328  0060  F004  F190   	movff	btemp,_C+144	;volatile
 32510  01432E  0060  F008  F191   	movff	btemp+1,_C+145	;volatile
 32511  014334  0060  F00C  F192   	movff	btemp+2,_C+146	;volatile
 32512  01433A  0060  F010  F193   	movff	btemp+3,_C+147	;volatile
 32513                           
 32514                           ;bsoc.c: 52:  C.pvkw += (C.p_pv / 3600.0);
 32515  014340  0E00               	movlw	0
 32516  014342  6EE6               	movwf	postinc1,c
 32517  014344  0E00               	movlw	0
 32518  014346  6EE6               	movwf	postinc1,c
 32519  014348  0E61               	movlw	97
 32520  01434A  6EE6               	movwf	postinc1,c
 32521  01434C  0E45               	movlw	69
 32522  01434E  6EE6               	movwf	postinc1,c
 32523  014350  0060  F5E3  FFE6   	movff	_C+120,postinc1
 32524  014356  0060  F5E7  FFE6   	movff	_C+121,postinc1
 32525  01435C  0060  F5EB  FFE6   	movff	_C+122,postinc1
 32526  014362  0060  F5EF  FFE6   	movff	_C+123,postinc1
 32527  014368  EC6B  F0A4         	call	___fldiv	;wreg free
 32528  01436C  0060  F007  FFE6   	movff	btemp,postinc1
 32529  014372  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32530  014378  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32531  01437E  0060  F013  FFE6   	movff	btemp+3,postinc1
 32532  014384  0060  F683  FFE6   	movff	_C+160,postinc1
 32533  01438A  0060  F687  FFE6   	movff	_C+161,postinc1
 32534  014390  0060  F68B  FFE6   	movff	_C+162,postinc1
 32535  014396  0060  F68F  FFE6   	movff	_C+163,postinc1
 32536  01439C  EC02  F09D         	call	___fladd	;wreg free
 32537  0143A0  0060  F004  F1A0   	movff	btemp,_C+160	;volatile
 32538  0143A6  0060  F008  F1A1   	movff	btemp+1,_C+161	;volatile
 32539  0143AC  0060  F00C  F1A2   	movff	btemp+2,_C+162	;volatile
 32540  0143B2  0060  F010  F1A3   	movff	btemp+3,_C+163	;volatile
 32541                           
 32542                           ;bsoc.c: 53:  C.invkw += (C.p_inverter / 3600.0);
 32543  0143B8  0E00               	movlw	0
 32544  0143BA  6EE6               	movwf	postinc1,c
 32545  0143BC  0E00               	movlw	0
 32546  0143BE  6EE6               	movwf	postinc1,c
 32547  0143C0  0E61               	movlw	97
 32548  0143C2  6EE6               	movwf	postinc1,c
 32549  0143C4  0E45               	movlw	69
 32550  0143C6  6EE6               	movwf	postinc1,c
 32551  0143C8  0060  F5D3  FFE6   	movff	_C+116,postinc1
 32552  0143CE  0060  F5D7  FFE6   	movff	_C+117,postinc1
 32553  0143D4  0060  F5DB  FFE6   	movff	_C+118,postinc1
 32554  0143DA  0060  F5DF  FFE6   	movff	_C+119,postinc1
 32555  0143E0  EC6B  F0A4         	call	___fldiv	;wreg free
 32556  0143E4  0060  F007  FFE6   	movff	btemp,postinc1
 32557  0143EA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32558  0143F0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32559  0143F6  0060  F013  FFE6   	movff	btemp+3,postinc1
 32560  0143FC  0060  F693  FFE6   	movff	_C+164,postinc1
 32561  014402  0060  F697  FFE6   	movff	_C+165,postinc1
 32562  014408  0060  F69B  FFE6   	movff	_C+166,postinc1
 32563  01440E  0060  F69F  FFE6   	movff	_C+167,postinc1
 32564  014414  EC02  F09D         	call	___fladd	;wreg free
 32565  014418  0060  F004  F1A4   	movff	btemp,_C+164	;volatile
 32566  01441E  0060  F008  F1A5   	movff	btemp+1,_C+165	;volatile
 32567  014424  0060  F00C  F1A6   	movff	btemp+2,_C+166	;volatile
 32568  01442A  0060  F010  F1A7   	movff	btemp+3,_C+167	;volatile
 32569                           
 32570                           ;bsoc.c: 54:  C.loadkw += (C.p_load / 3600.0);
 32571  014430  0E00               	movlw	0
 32572  014432  6EE6               	movwf	postinc1,c
 32573  014434  0E00               	movlw	0
 32574  014436  6EE6               	movwf	postinc1,c
 32575  014438  0E61               	movlw	97
 32576  01443A  6EE6               	movwf	postinc1,c
 32577  01443C  0E45               	movlw	69
 32578  01443E  6EE6               	movwf	postinc1,c
 32579  014440  0060  F5C3  FFE6   	movff	_C+112,postinc1
 32580  014446  0060  F5C7  FFE6   	movff	_C+113,postinc1
 32581  01444C  0060  F5CB  FFE6   	movff	_C+114,postinc1
 32582  014452  0060  F5CF  FFE6   	movff	_C+115,postinc1
 32583  014458  EC6B  F0A4         	call	___fldiv	;wreg free
 32584  01445C  0060  F007  FFE6   	movff	btemp,postinc1
 32585  014462  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32586  014468  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32587  01446E  0060  F013  FFE6   	movff	btemp+3,postinc1
 32588  014474  0060  F6A3  FFE6   	movff	_C+168,postinc1
 32589  01447A  0060  F6A7  FFE6   	movff	_C+169,postinc1
 32590  014480  0060  F6AB  FFE6   	movff	_C+170,postinc1
 32591  014486  0060  F6AF  FFE6   	movff	_C+171,postinc1
 32592  01448C  EC02  F09D         	call	___fladd	;wreg free
 32593  014490  0060  F004  F1A8   	movff	btemp,_C+168	;volatile
 32594  014496  0060  F008  F1A9   	movff	btemp+1,_C+169	;volatile
 32595  01449C  0060  F00C  F1AA   	movff	btemp+2,_C+170	;volatile
 32596  0144A2  0060  F010  F1AB   	movff	btemp+3,_C+171	;volatile
 32597                           
 32598                           ;bsoc.c: 55:  if (C.p_bat > 0.0)
 32599  0144A8  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32600  0144AE  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32601  0144B4  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32602  0144BA  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32603  0144C0  0E00               	movlw	0
 32604  0144C2  6EE6               	movwf	postinc1,c
 32605  0144C4  0E00               	movlw	0
 32606  0144C6  6EE6               	movwf	postinc1,c
 32607  0144C8  0E00               	movlw	0
 32608  0144CA  6EE6               	movwf	postinc1,c
 32609  0144CC  0E00               	movlw	0
 32610  0144CE  6EE6               	movwf	postinc1,c
 32611  0144D0  EC82  F0C3         	call	___flge	;wreg free
 32612  0144D4  B001               	btfsc	btemp& (0+255),0,c
 32613  0144D6  D03C               	goto	l12374
 32614                           
 32615                           ;bsoc.c: 56:   C.bkwi += (C.p_bat / 3600.0);
 32616  0144D8  0E00               	movlw	0
 32617  0144DA  6EE6               	movwf	postinc1,c
 32618  0144DC  0E00               	movlw	0
 32619  0144DE  6EE6               	movwf	postinc1,c
 32620  0144E0  0E61               	movlw	97
 32621  0144E2  6EE6               	movwf	postinc1,c
 32622  0144E4  0E45               	movlw	69
 32623  0144E6  6EE6               	movwf	postinc1,c
 32624  0144E8  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32625  0144EE  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32626  0144F4  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32627  0144FA  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32628  014500  EC6B  F0A4         	call	___fldiv	;wreg free
 32629  014504  0060  F007  FFE6   	movff	btemp,postinc1
 32630  01450A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32631  014510  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32632  014516  0060  F013  FFE6   	movff	btemp+3,postinc1
 32633  01451C  0060  F663  FFE6   	movff	_C+152,postinc1
 32634  014522  0060  F667  FFE6   	movff	_C+153,postinc1
 32635  014528  0060  F66B  FFE6   	movff	_C+154,postinc1
 32636  01452E  0060  F66F  FFE6   	movff	_C+155,postinc1
 32637  014534  EC02  F09D         	call	___fladd	;wreg free
 32638  014538  0060  F004  F198   	movff	btemp,_C+152	;volatile
 32639  01453E  0060  F008  F199   	movff	btemp+1,_C+153	;volatile
 32640  014544  0060  F00C  F19A   	movff	btemp+2,_C+154	;volatile
 32641  01454A  0060  F010  F19B   	movff	btemp+3,_C+155	;volatile
 32642  014550                     l12374:
 32643                           
 32644                           ;bsoc.c: 57:  if (C.p_bat < 0.0)
 32645  014550  0101               	movlb	1	; () banked
 32646  014552  AF7F               	btfss	(_C+127)& (0+255),7,b	;volatile
 32647  014554  D03C               	goto	l12378
 32648                           
 32649                           ; BSR set to: 1
 32650                           ;bsoc.c: 58:   C.bkwo += (C.p_bat / 3600.0);
 32651  014556  0E00               	movlw	0
 32652  014558  6EE6               	movwf	postinc1,c
 32653  01455A  0E00               	movlw	0
 32654  01455C  6EE6               	movwf	postinc1,c
 32655  01455E  0E61               	movlw	97
 32656  014560  6EE6               	movwf	postinc1,c
 32657  014562  0E45               	movlw	69
 32658  014564  6EE6               	movwf	postinc1,c
 32659  014566  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32660  01456C  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32661  014572  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32662  014578  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32663  01457E  EC6B  F0A4         	call	___fldiv	;wreg free
 32664  014582  0060  F007  FFE6   	movff	btemp,postinc1
 32665  014588  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32666  01458E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32667  014594  0060  F013  FFE6   	movff	btemp+3,postinc1
 32668  01459A  0060  F673  FFE6   	movff	_C+156,postinc1
 32669  0145A0  0060  F677  FFE6   	movff	_C+157,postinc1
 32670  0145A6  0060  F67B  FFE6   	movff	_C+158,postinc1
 32671  0145AC  0060  F67F  FFE6   	movff	_C+159,postinc1
 32672  0145B2  EC02  F09D         	call	___fladd	;wreg free
 32673  0145B6  0060  F004  F19C   	movff	btemp,_C+156	;volatile
 32674  0145BC  0060  F008  F19D   	movff	btemp+1,_C+157	;volatile
 32675  0145C2  0060  F00C  F19E   	movff	btemp+2,_C+158	;volatile
 32676  0145C8  0060  F010  F19F   	movff	btemp+3,_C+159	;volatile
 32677  0145CE                     l12378:
 32678                           
 32679                           ;bsoc.c: 60:  C.soc = ((uint16_t) ((C.dynamic_ah / C.bank_ah)*100.0) + 1);
 32680  0145CE  0E00               	movlw	0
 32681  0145D0  6EE6               	movwf	postinc1,c
 32682  0145D2  0E00               	movlw	0
 32683  0145D4  6EE6               	movwf	postinc1,c
 32684  0145D6  0EC8               	movlw	200
 32685  0145D8  6EE6               	movwf	postinc1,c
 32686  0145DA  0E42               	movlw	66
 32687  0145DC  6EE6               	movwf	postinc1,c
 32688  0145DE  0060  F623  FFE6   	movff	_C+136,postinc1
 32689  0145E4  0060  F627  FFE6   	movff	_C+137,postinc1
 32690  0145EA  0060  F62B  FFE6   	movff	_C+138,postinc1
 32691  0145F0  0060  F62F  FFE6   	movff	_C+139,postinc1
 32692  0145F6  0060  F633  FFE6   	movff	_C+140,postinc1
 32693  0145FC  0060  F637  FFE6   	movff	_C+141,postinc1
 32694  014602  0060  F63B  FFE6   	movff	_C+142,postinc1
 32695  014608  0060  F63F  FFE6   	movff	_C+143,postinc1
 32696  01460E  EC6B  F0A4         	call	___fldiv	;wreg free
 32697  014612  0060  F007  FFE6   	movff	btemp,postinc1
 32698  014618  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32699  01461E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32700  014624  0060  F013  FFE6   	movff	btemp+3,postinc1
 32701  01462A  ECED  F098         	call	___flmul	;wreg free
 32702  01462E  0060  F007  FFE6   	movff	btemp,postinc1
 32703  014634  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32704  01463A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32705  014640  0060  F013  FFE6   	movff	btemp+3,postinc1
 32706  014646  EC11  F0C2         	call	___fltol	;wreg free
 32707  01464A  0060  F004  F00B   	movff	btemp,btemp+10
 32708  014650  0060  F008  F00C   	movff	btemp+1,btemp+11
 32709  014656  0E01               	movlw	1
 32710  014658  240B               	addwf	(btemp+10)^0,w,c
 32711  01465A  0101               	movlb	1	; () banked
 32712  01465C  6FAE               	movwf	(_C+174)& (0+255),b	;volatile
 32713  01465E  0E00               	movlw	0
 32714  014660  200C               	addwfc	(btemp+11)^0,w,c
 32715  014662  6FAF               	movwf	(_C+175)& (0+255),b	;volatile
 32716                           
 32717                           ; BSR set to: 1
 32718                           ;bsoc.c: 61:  if (C.soc > 100)
 32719  014664  51AF               	movf	(_C+175)& (0+255),w,b	;volatile
 32720  014666  E104               	bnz	u1192_20
 32721  014668  0E65               	movlw	101
 32722  01466A  5DAE               	subwf	(_C+174)& (0+255),w,b	;volatile
 32723  01466C  A0D8               	btfss	status,0,c
 32724  01466E  D004               	goto	l12384
 32725  014670                     u1192_20:
 32726                           
 32727                           ; BSR set to: 1
 32728                           ;bsoc.c: 62:   C.soc = 100;
 32729  014670  0E00               	movlw	0
 32730  014672  6FAF               	movwf	(_C+175)& (0+255),b	;volatile
 32731  014674  0E64               	movlw	100
 32732  014676  6FAE               	movwf	(_C+174)& (0+255),b	;volatile
 32733  014678                     l12384:
 32734                           
 32735                           ; BSR set to: 1
 32736                           ;bsoc.c: 64:  if (C.c_bat < 0.0) {
 32737  014678  AF47               	btfss	(_C+71)& (0+255),7,b	;volatile
 32738  01467A  D043               	goto	l12388
 32739                           
 32740                           ; BSR set to: 1
 32741                           ;bsoc.c: 65:   C.runtime = (uint16_t) (-(C.dynamic_ah / C.c_bat));
 32742  01467C  0060  F513  FFE6   	movff	_C+68,postinc1
 32743  014682  0060  F517  FFE6   	movff	_C+69,postinc1
 32744  014688  0060  F51B  FFE6   	movff	_C+70,postinc1
 32745  01468E  0060  F51F  FFE6   	movff	_C+71,postinc1
 32746  014694  0060  F633  FFE6   	movff	_C+140,postinc1
 32747  01469A  0060  F637  FFE6   	movff	_C+141,postinc1
 32748  0146A0  0060  F63B  FFE6   	movff	_C+142,postinc1
 32749  0146A6  0060  F63F  FFE6   	movff	_C+143,postinc1
 32750  0146AC  EC6B  F0A4         	call	___fldiv	;wreg free
 32751  0146B0  0060  F007  FFE6   	movff	btemp,postinc1
 32752  0146B6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32753  0146BC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32754  0146C2  0060  F013  FFE6   	movff	btemp+3,postinc1
 32755  0146C8  EC0A  F0D5         	call	___flneg	;wreg free
 32756  0146CC  0060  F007  FFE6   	movff	btemp,postinc1
 32757  0146D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32758  0146D8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32759  0146DE  0060  F013  FFE6   	movff	btemp+3,postinc1
 32760  0146E4  EC11  F0C2         	call	___fltol	;wreg free
 32761  0146E8  0060  F004  F00B   	movff	btemp,btemp+10
 32762  0146EE  0060  F008  F00C   	movff	btemp+1,btemp+11
 32763  0146F4  0060  F02C  F1AC   	movff	btemp+10,_C+172	;volatile
 32764  0146FA  0060  F030  F1AD   	movff	btemp+11,_C+173	;volatile
 32765                           
 32766                           ;bsoc.c: 66:  } else {
 32767  014700  D004               	goto	l12390
 32768  014702                     l12388:
 32769                           
 32770                           ; BSR set to: 1
 32771                           ;bsoc.c: 67:   C.runtime = 120;
 32772  014702  0E00               	movlw	0
 32773  014704  6FAD               	movwf	(_C+173)& (0+255),b	;volatile
 32774  014706  0E78               	movlw	120
 32775  014708  6FAC               	movwf	(_C+172)& (0+255),b	;volatile
 32776  01470A                     l12390:
 32777                           
 32778                           ;bsoc.c: 69:  if (C.runtime > 120)
 32779  01470A  0101               	movlb	1	; () banked
 32780  01470C  51AD               	movf	(_C+173)& (0+255),w,b	;volatile
 32781  01470E  E104               	bnz	u1194_20
 32782  014710  0E79               	movlw	121
 32783  014712  5DAC               	subwf	(_C+172)& (0+255),w,b	;volatile
 32784  014714  A0D8               	btfss	status,0,c
 32785  014716  D004               	goto	l12394
 32786  014718                     u1194_20:
 32787                           
 32788                           ; BSR set to: 1
 32789                           ;bsoc.c: 70:   C.runtime = 120;
 32790  014718  0E00               	movlw	0
 32791  01471A  6FAD               	movwf	(_C+173)& (0+255),b	;volatile
 32792  01471C  0E78               	movlw	120
 32793  01471E  6FAC               	movwf	(_C+172)& (0+255),b	;volatile
 32794  014720                     l12394:
 32795                           
 32796                           ; BSR set to: 1
 32797                           ;bsoc.c: 72:  V.lowint_count++;
 32798  014720  0E01               	movlw	1
 32799  014722  0102               	movlb	2	; () banked
 32800  014724  27B1               	addwf	(_V+177)& (0+255),f,b	;volatile
 32801  014726  0E00               	movlw	0
 32802  014728  23B2               	addwfc	(_V+178)& (0+255),f,b	;volatile
 32803  01472A  23B3               	addwfc	(_V+179)& (0+255),f,b	;volatile
 32804  01472C  23B4               	addwfc	(_V+180)& (0+255),f,b	;volatile
 32805                           
 32806                           ; BSR set to: 2
 32807                           ;bsoc.c: 74:  log_ptr = port_data_dma_ptr();
 32808  01472E  EC62  F0DB         	call	_port_data_dma_ptr	;wreg free
 32809                           
 32810                           ;stkvar	_log_ptr @ sp[(-2)+0]
 32811  014732  0EFF               	movlw	-1
 32812  014734  0060  F00B  FFE3   	movff	btemp+1,plusw1
 32813  01473A  0EFE               	movlw	-2
 32814  01473C  0060  F007  FFE3   	movff	btemp,plusw1
 32815                           
 32816                           ;bsoc.c: 75:  sprintf((char*) log_ptr, " %lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4.3f,%4.3f,%
      +                          4.3f,%4.3f,%4.3f,%4.3d,%4.3d,%2.6f\r\n",
 32817  014742  0060  F613  FFE6   	movff	_C+132,postinc1
 32818  014748  0060  F617  FFE6   	movff	_C+133,postinc1
 32819  01474E  0060  F61B  FFE6   	movff	_C+134,postinc1
 32820  014754  0060  F61F  FFE6   	movff	_C+135,postinc1
 32821  01475A  0060  F6B3  FFE6   	movff	_C+172,postinc1
 32822  014760  0060  F6B7  FFE6   	movff	_C+173,postinc1
 32823  014766  0060  F6BB  FFE6   	movff	_C+174,postinc1
 32824  01476C  0060  F6BF  FFE6   	movff	_C+175,postinc1
 32825  014772  0060  F643  FFE6   	movff	_C+144,postinc1
 32826  014778  0060  F647  FFE6   	movff	_C+145,postinc1
 32827  01477E  0060  F64B  FFE6   	movff	_C+146,postinc1
 32828  014784  0060  F64F  FFE6   	movff	_C+147,postinc1
 32829  01478A  0060  F633  FFE6   	movff	_C+140,postinc1
 32830  014790  0060  F637  FFE6   	movff	_C+141,postinc1
 32831  014796  0060  F63B  FFE6   	movff	_C+142,postinc1
 32832  01479C  0060  F63F  FFE6   	movff	_C+143,postinc1
 32833  0147A2  0060  F5D3  FFE6   	movff	_C+116,postinc1
 32834  0147A8  0060  F5D7  FFE6   	movff	_C+117,postinc1
 32835  0147AE  0060  F5DB  FFE6   	movff	_C+118,postinc1
 32836  0147B4  0060  F5DF  FFE6   	movff	_C+119,postinc1
 32837  0147BA  0060  F5C3  FFE6   	movff	_C+112,postinc1
 32838  0147C0  0060  F5C7  FFE6   	movff	_C+113,postinc1
 32839  0147C6  0060  F5CB  FFE6   	movff	_C+114,postinc1
 32840  0147CC  0060  F5CF  FFE6   	movff	_C+115,postinc1
 32841  0147D2  0060  F5E3  FFE6   	movff	_C+120,postinc1
 32842  0147D8  0060  F5E7  FFE6   	movff	_C+121,postinc1
 32843  0147DE  0060  F5EB  FFE6   	movff	_C+122,postinc1
 32844  0147E4  0060  F5EF  FFE6   	movff	_C+123,postinc1
 32845  0147EA  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32846  0147F0  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32847  0147F6  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32848  0147FC  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32849  014802  0060  F593  FFE6   	movff	_C+100,postinc1
 32850  014808  0060  F597  FFE6   	movff	_C+101,postinc1
 32851  01480E  0060  F59B  FFE6   	movff	_C+102,postinc1
 32852  014814  0060  F59F  FFE6   	movff	_C+103,postinc1
 32853  01481A  0060  F533  FFE6   	movff	_C+76,postinc1
 32854  014820  0060  F537  FFE6   	movff	_C+77,postinc1
 32855  014826  0060  F53B  FFE6   	movff	_C+78,postinc1
 32856  01482C  0060  F53F  FFE6   	movff	_C+79,postinc1
 32857  014832  0060  F543  FFE6   	movff	_C+80,postinc1
 32858  014838  0060  F547  FFE6   	movff	_C+81,postinc1
 32859  01483E  0060  F54B  FFE6   	movff	_C+82,postinc1
 32860  014844  0060  F54F  FFE6   	movff	_C+83,postinc1
 32861  01484A  0060  F553  FFE6   	movff	_C+84,postinc1
 32862  014850  0060  F557  FFE6   	movff	_C+85,postinc1
 32863  014856  0060  F55B  FFE6   	movff	_C+86,postinc1
 32864  01485C  0060  F55F  FFE6   	movff	_C+87,postinc1
 32865  014862  0060  FA07  FFE6   	movff	_V+129,postinc1
 32866  014868  0060  FA0B  FFE6   	movff	_V+130,postinc1
 32867  01486E  0060  FA0F  FFE6   	movff	_V+131,postinc1
 32868  014874  0060  FA13  FFE6   	movff	_V+132,postinc1
 32869  01487A  0E67               	movlw	low STR_65
 32870  01487C  6EE6               	movwf	postinc1,c
 32871  01487E  0EFC               	movlw	high STR_65
 32872  014880  6EE6               	movwf	postinc1,c
 32873                           
 32874                           ;stkvar	_log_ptr @ sp[(-56)+0]
 32875  014882  0EC8               	movlw	-56
 32876  014884  006F FF8F FFE6     	movff	plusw1,postinc1
 32877  01488A  006F FF8F FFE6     	movff	plusw1,postinc1
 32878  014890  0E38               	movlw	56
 32879  014892  6EE6               	movwf	postinc1,c
 32880  014894  EC18  F0CA         	call	_sprintf	;wreg free
 32881                           
 32882                           ; BSR set to: 0
 32883                           ;bsoc.c: 81:  StartTimer(TMR_DISPLAY, 125);
 32884  014898  0E7D               	movlw	125
 32885  01489A  6EE6               	movwf	postinc1,c
 32886  01489C  0E00               	movlw	0
 32887  01489E  6EE6               	movwf	postinc1,c
 32888  0148A0  0E0A               	movlw	10
 32889  0148A2  6EE6               	movwf	postinc1,c
 32890  0148A4  EC20  F0D6         	call	_StartTimer	;wreg free
 32891                           
 32892                           ;bsoc.c: 82:  send_port_data_dma(strlen((char*) log_ptr));
 32893                           ;stkvar	_log_ptr @ sp[(-2)+0]
 32894  0148A8  0EFE               	movlw	-2
 32895  0148AA  006F FF8F FFE6     	movff	plusw1,postinc1
 32896  0148B0  006F FF8F FFE6     	movff	plusw1,postinc1
 32897  0148B6  EC5E  F0CF         	call	_strlen	;wreg free
 32898  0148BA  0060  F007  FFE6   	movff	btemp,postinc1
 32899  0148C0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32900  0148C6  EC95  F0D4         	call	_send_port_data_dma	;wreg free
 32901                           
 32902                           ; BSR set to: 59
 32903                           ;bsoc.c: 83:  C.update = 0;
 32904  0148CA  0101               	movlb	1	; () banked
 32905  0148CC  6BB0               	clrf	(_C+176)& (0+255),b	;volatile
 32906                           
 32907                           ; BSR set to: 1
 32908  0148CE  92BE               	bcf	190,1,c	;volatile
 32909                           
 32910                           ; BSR set to: 1
 32911                           ; _calc_bsoc: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 32912  0148D0  52E5               	movf	postdec1,f,c
 32913  0148D2  52E5               	movf	postdec1,f,c
 32914  0148D4  0012               	return		;funcret
 32915  0148D6                     __end_of_calc_bsoc:
 32916                           	opt callstack 0
 32917                           
 32918 ;; *************** function _send_port_data_dma *****************
 32919 ;; Defined at:
 32920 ;;		line 258 in file "eadog.c"
 32921 ;; Parameters:    Size  Location     Type
 32922 ;;  dsize           2  [STACK] unsigned short 
 32923 ;; Auto vars:     Size  Location     Type
 32924 ;;		None
 32925 ;; Return value:  Size  Location     Type
 32926 ;;                  1  [STACK] void 
 32927 ;; Registers used:
 32928 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 32929 ;; Tracked objects:
 32930 ;;		On entry : 0/0
 32931 ;;		On exit  : 3F/3B
 32932 ;;		Unchanged: 0/0
 32933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32938 ;;Total ram usage:        0 bytes
 32939 ;; Hardware stack levels used:    1
 32940 ;; Hardware stack levels required when called:    3
 32941 ;; This function calls:
 32942 ;;		Nothing
 32943 ;; This function is called by:
 32944 ;;		_calc_bsoc
 32945 ;; This function uses a reentrant model
 32946 ;;
 32947                           
 32948                           	psect	text149
 32949  01A92A                     __ptext149:
 32950                           	opt callstack 0
 32951  01A92A                     _send_port_data_dma:
 32952                           	opt callstack 11
 32953                           
 32954                           ;eadog.c: 258: void send_port_data_dma(uint16_t dsize);eadog.c: 259: {;eadog.c: 260:  if
      +                           (dsize > 512)
 32955                           ;stkvar	_dsize @ sp[(0)+-2]
 32956                           
 32957                           ; BSR set to: 1
 32958                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32959                           ;incstack = 0
 32960  01A92A  0EFE               	movlw	-2
 32961  01A92C  04E3               	decf	plusw1,w,c
 32962  01A92E  0EFF               	movlw	-1
 32963  01A930  006F FF8C  F001    	movff	plusw1,btemp
 32964  01A936  0E02               	movlw	2
 32965  01A938  5A01               	subwfb	btemp^0,f,c
 32966  01A93A  A0D8               	btfss	status,0,c
 32967  01A93C  D00C               	goto	l9528
 32968                           
 32969                           ;eadog.c: 261:   dsize = 512;
 32970  01A93E  0E00               	movlw	0
 32971  01A940  6E0B               	movwf	(btemp+10)^0,c
 32972  01A942  0E02               	movlw	2
 32973  01A944  6E0C               	movwf	(btemp+11)^0,c
 32974                           
 32975                           ;stkvar	_dsize @ sp[(0)+-2]
 32976  01A946  0EFE               	movlw	-2
 32977  01A948  0060  F02F  FFE3   	movff	btemp+10,plusw1
 32978  01A94E  0EFF               	movlw	-1
 32979  01A950  0060  F033  FFE3   	movff	btemp+11,plusw1
 32980  01A956                     l9528:
 32981                           
 32982                           ;eadog.c: 263:  DMA2CON0bits.EN = 0;
 32983  01A956  013B               	movlb	59	; () banked
 32984  01A958  9FDC               	bcf	220,7,b	;volatile
 32985                           
 32986                           ; BSR set to: 59
 32987                           ;eadog.c: 264:  DMA2SSZ = dsize;
 32988                           ;stkvar	_dsize @ sp[(0)+-2]
 32989  01A95A  0EFE               	movlw	-2
 32990  01A95C  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 32991  01A962  0EFF               	movlw	-1
 32992  01A964  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 32993                           
 32994                           ; BSR set to: 59
 32995                           ;eadog.c: 265:  DMA2DSZ = 1;
 32996  01A96A  0E00               	movlw	0
 32997  01A96C  6FCF               	movwf	207,b	;volatile
 32998  01A96E  0E01               	movlw	1
 32999  01A970  6FCE               	movwf	206,b	;volatile
 33000                           
 33001                           ; BSR set to: 59
 33002                           ;eadog.c: 266:  DMA2CON0bits.EN = 1;
 33003  01A972  8FDC               	bsf	220,7,b	;volatile
 33004                           
 33005                           ; BSR set to: 59
 33006                           ;eadog.c: 267:  DMA2CON0bits.DMA2SIRQEN = 1;
 33007  01A974  8DDC               	bsf	220,6,b	;volatile
 33008                           
 33009                           ; BSR set to: 59
 33010                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 33011  01A976  52E5               	movf	postdec1,f,c
 33012  01A978  52E5               	movf	postdec1,f,c
 33013  01A97A  0012               	return		;funcret
 33014  01A97C                     __end_of_send_port_data_dma:
 33015                           	opt callstack 0
 33016                           
 33017 ;; *************** function _port_data_dma_ptr *****************
 33018 ;; Defined at:
 33019 ;;		line 273 in file "eadog.c"
 33020 ;; Parameters:    Size  Location     Type
 33021 ;;		None
 33022 ;; Auto vars:     Size  Location     Type
 33023 ;;		None
 33024 ;; Return value:  Size  Location     Type
 33025 ;;                  2  [STACK] PTR unsigned char 
 33026 ;; Registers used:
 33027 ;;		wreg, status,2, status,0, btemp, btemp+1
 33028 ;; Tracked objects:
 33029 ;;		On entry : 3F/2
 33030 ;;		On exit  : 0/0
 33031 ;;		Unchanged: 0/0
 33032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33037 ;;Total ram usage:        0 bytes
 33038 ;; Hardware stack levels used:    1
 33039 ;; Hardware stack levels required when called:    3
 33040 ;; This function calls:
 33041 ;;		Nothing
 33042 ;; This function is called by:
 33043 ;;		_calc_bsoc
 33044 ;; This function uses a reentrant model
 33045 ;;
 33046                           
 33047                           	psect	text150
 33048  01B6C4                     __ptext150:
 33049                           	opt callstack 0
 33050  01B6C4                     _port_data_dma_ptr:
 33051                           	opt callstack 11
 33052                           
 33053                           ;eadog.c: 275:  return port_data;
 33054                           
 33055                           ; BSR set to: 59
 33056                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33057                           ;incstack = 0
 33058  01B6C4  0EFF               	movlw	low _port_data
 33059  01B6C6  6E01               	movwf	btemp^0,c
 33060  01B6C8  0E05               	movlw	high _port_data
 33061  01B6CA  6E02               	movwf	(btemp+1)^0,c
 33062                           
 33063                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33064  01B6CC  0012               	return		;funcret
 33065  01B6CE                     __end_of_port_data_dma_ptr:
 33066                           	opt callstack 0
 33067                           
 33068 ;; *************** function _INT0_ISR *****************
 33069 ;; Defined at:
 33070 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 33071 ;; Parameters:    Size  Location     Type
 33072 ;;		None
 33073 ;; Auto vars:     Size  Location     Type
 33074 ;;		None
 33075 ;; Return value:  Size  Location     Type
 33076 ;;                  1    wreg      void 
 33077 ;; Registers used:
 33078 ;;		wreg, status,2, status,0, pclath, tosl
 33079 ;; Tracked objects:
 33080 ;;		On entry : 0/0
 33081 ;;		On exit  : 0/0
 33082 ;;		Unchanged: 0/0
 33083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33088 ;;Total ram usage:        0 bytes
 33089 ;; Hardware stack levels used:    1
 33090 ;; Hardware stack levels required when called:    2
 33091 ;; This function calls:
 33092 ;;		_INT0_CallBack
 33093 ;; This function is called by:
 33094 ;;		Interrupt level 2
 33095 ;; This function uses a non-reentrant model
 33096 ;;
 33097                           
 33098                           	psect	text151
 33099  01B69C                     __ptext151:
 33100                           	opt callstack 0
 33101  01B69C                     _INT0_ISR:
 33102                           	opt callstack 3
 33103                           
 33104                           ;incstack = 0
 33105  01B69C  EE14  F0C2         	lfsr	1,___inthi_sp
 33106                           
 33107                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 33108  01B6A0  0139               	movlb	57	; () banked
 33109  01B6A2  91A1               	bcf	161,0,b	;volatile
 33110                           
 33111                           ; BSR set to: 57
 33112                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 33113  01B6A4  EC14  F0DA         	call	_INT0_CallBack	;wreg free
 33114  01B6A8  0011               	retfie		f
 33115  01B6AA                     __end_of_INT0_ISR:
 33116                           	opt callstack 0
 33117                           
 33118 ;; *************** function _INT0_CallBack *****************
 33119 ;; Defined at:
 33120 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 33121 ;; Parameters:    Size  Location     Type
 33122 ;;		None
 33123 ;; Auto vars:     Size  Location     Type
 33124 ;;		None
 33125 ;; Return value:  Size  Location     Type
 33126 ;;                  1  [STACK] void 
 33127 ;; Registers used:
 33128 ;;		wreg, status,2, status,0, pclath, tosl
 33129 ;; Tracked objects:
 33130 ;;		On entry : 3F/39
 33131 ;;		On exit  : 0/0
 33132 ;;		Unchanged: 0/0
 33133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33138 ;;Total ram usage:        0 bytes
 33139 ;; Hardware stack levels used:    1
 33140 ;; Hardware stack levels required when called:    1
 33141 ;; This function calls:
 33142 ;;		Absolute function
 33143 ;;		_INT0_DefaultInterruptHandler
 33144 ;; This function is called by:
 33145 ;;		_INT0_ISR
 33146 ;; This function uses a reentrant model
 33147 ;;
 33148                           
 33149                           	psect	text152
 33150  01B428                     __ptext152:
 33151                           	opt callstack 0
 33152  01B428                     _INT0_CallBack:
 33153                           	opt callstack 3
 33154                           
 33155                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 33156                           
 33157                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33158                           ;incstack = 0
 33159  01B428  0100               	movlb	0	; () banked
 33160  01B42A  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 33161  01B42C  11BE               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 33162  01B42E  11BF               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 33163  01B430  B4D8               	btfsc	status,2,c
 33164  01B432  0012               	return	
 33165                           
 33166                           ; BSR set to: 0
 33167                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 33168  01B434  D801               	call	u955_48
 33169  01B436  0012               	return	
 33170  01B438                     u955_48:
 33171  01B438  0005               	push	
 33172  01B43A  6EFA               	movwf	pclath,c
 33173  01B43C  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 33174  01B43E  6EFD               	movwf	tosl,c
 33175  01B440  51BE               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 33176  01B442  6EFE               	movwf	tosh,c
 33177  01B444  51BF               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 33178  01B446  6EFF               	movwf	tosu,c
 33179  01B448  50FA               	movf	pclath,w,c
 33180  01B44A  0012               	return		;indir
 33181  01B44C                     __end_of_INT0_CallBack:
 33182                           	opt callstack 0
 33183                           
 33184 ;; *************** function _INT0_DefaultInterruptHandler *****************
 33185 ;; Defined at:
 33186 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 33187 ;; Parameters:    Size  Location     Type
 33188 ;;		None
 33189 ;; Auto vars:     Size  Location     Type
 33190 ;;		None
 33191 ;; Return value:  Size  Location     Type
 33192 ;;                  1  [STACK] void 
 33193 ;; Registers used:
 33194 ;;		None
 33195 ;; Tracked objects:
 33196 ;;		On entry : 3F/0
 33197 ;;		On exit  : 0/0
 33198 ;;		Unchanged: 0/0
 33199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33204 ;;Total ram usage:        0 bytes
 33205 ;; Hardware stack levels used:    1
 33206 ;; This function calls:
 33207 ;;		Nothing
 33208 ;; This function is called by:
 33209 ;;		_EXT_INT_Initialize
 33210 ;;		_INT0_CallBack
 33211 ;; This function uses a reentrant model
 33212 ;;
 33213                           
 33214                           	psect	text153
 33215  01B73E                     __ptext153:
 33216                           	opt callstack 0
 33217  01B73E                     _INT0_DefaultInterruptHandler:
 33218                           	opt callstack 3
 33219                           
 33220                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33221                           
 33222                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33223                           ;incstack = 0
 33224  01B73E  0012               	return		;funcret
 33225  01B740                     __end_of_INT0_DefaultInterruptHandler:
 33226                           	opt callstack 0
 33227                           
 33228 ;; *************** function _Default_ISR *****************
 33229 ;; Defined at:
 33230 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 33231 ;; Parameters:    Size  Location     Type
 33232 ;;		None
 33233 ;; Auto vars:     Size  Location     Type
 33234 ;;		None
 33235 ;; Return value:  Size  Location     Type
 33236 ;;                  1    wreg      void 
 33237 ;; Registers used:
 33238 ;;		None
 33239 ;; Tracked objects:
 33240 ;;		On entry : 0/0
 33241 ;;		On exit  : 0/0
 33242 ;;		Unchanged: 0/0
 33243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33248 ;;Total ram usage:        0 bytes
 33249 ;; Hardware stack levels used:    1
 33250 ;; This function calls:
 33251 ;;		Nothing
 33252 ;; This function is called by:
 33253 ;;		Interrupt level 2
 33254 ;; This function uses a non-reentrant model
 33255 ;;
 33256                           
 33257                           	psect	text154
 33258  01B734                     __ptext154:
 33259                           	opt callstack 0
 33260  01B734                     _Default_ISR:
 33261                           	opt callstack 5
 33262                           
 33263                           ;incstack = 0
 33264  01B734  EE14  F0C2         	lfsr	1,___inthi_sp
 33265  01B738  0011               	retfie		f
 33266  01B73A                     __end_of_Default_ISR:
 33267                           	opt callstack 0
 33268                           
 33269 ;; *************** function _ADCC_ISR *****************
 33270 ;; Defined at:
 33271 ;;		line 314 in file "mcc_generated_files/adcc.c"
 33272 ;; Parameters:    Size  Location     Type
 33273 ;;		None
 33274 ;; Auto vars:     Size  Location     Type
 33275 ;;		None
 33276 ;; Return value:  Size  Location     Type
 33277 ;;                  1    wreg      void 
 33278 ;; Registers used:
 33279 ;;		wreg, status,2, status,0, pclath, tosl
 33280 ;; Tracked objects:
 33281 ;;		On entry : 0/0
 33282 ;;		On exit  : 0/0
 33283 ;;		Unchanged: 0/0
 33284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33289 ;;Total ram usage:        0 bytes
 33290 ;; Hardware stack levels used:    1
 33291 ;; Hardware stack levels required when called:    1
 33292 ;; This function calls:
 33293 ;;		Absolute function
 33294 ;;		_ADCC_DefaultInterruptHandler
 33295 ;;		_adc_int_handler
 33296 ;; This function is called by:
 33297 ;;		Interrupt level 2
 33298 ;; This function uses a non-reentrant model
 33299 ;;
 33300                           
 33301                           	psect	text155
 33302  01B048                     __ptext155:
 33303                           	opt callstack 0
 33304  01B048                     _ADCC_ISR:
 33305                           	opt callstack 4
 33306                           
 33307                           ;incstack = 0
 33308  01B048  EE14  F0C2         	lfsr	1,___inthi_sp
 33309                           
 33310                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 33311  01B04C  0139               	movlb	57	; () banked
 33312  01B04E  95A1               	bcf	161,2,b	;volatile
 33313                           
 33314                           ; BSR set to: 57
 33315                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 33316  01B050  0100               	movlb	0	; () banked
 33317  01B052  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 33318  01B054  11AF               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 33319  01B056  11B0               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 33320  01B058  B4D8               	btfsc	status,2,c
 33321  01B05A  0011               	retfie		f
 33322                           
 33323                           ; BSR set to: 0
 33324                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 33325  01B05C  D801               	call	i2u998_48
 33326  01B05E  0011               	retfie		f
 33327  01B060                     i2u998_48:
 33328  01B060  0005               	push	
 33329  01B062  6EFA               	movwf	pclath,c
 33330  01B064  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 33331  01B066  6EFD               	movwf	tosl,c
 33332  01B068  51AF               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 33333  01B06A  6EFE               	movwf	tosh,c
 33334  01B06C  51B0               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 33335  01B06E  6EFF               	movwf	tosu,c
 33336  01B070  50FA               	movf	pclath,w,c
 33337  01B072  0012               	return		;indir
 33338  01B074                     __end_of_ADCC_ISR:
 33339                           	opt callstack 0
 33340                           
 33341 ;; *************** function _adc_int_t_handler *****************
 33342 ;; Defined at:
 33343 ;;		line 143 in file "daq.c"
 33344 ;; Parameters:    Size  Location     Type
 33345 ;;		None
 33346 ;; Auto vars:     Size  Location     Type
 33347 ;;		None
 33348 ;; Return value:  Size  Location     Type
 33349 ;;                  1  [STACK] void 
 33350 ;; Registers used:
 33351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 33352 ;; Tracked objects:
 33353 ;;		On entry : 3F/0
 33354 ;;		On exit  : 1/0
 33355 ;;		Unchanged: 0/0
 33356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33361 ;;Total ram usage:        0 bytes
 33362 ;; Hardware stack levels used:    1
 33363 ;; Hardware stack levels required when called:    1
 33364 ;; This function calls:
 33365 ;;		_ADCC_DischargeSampleCapacitor
 33366 ;;		_ADCC_StartConversion
 33367 ;; This function is called by:
 33368 ;;		_start_adc_scan
 33369 ;;		_ADCC_ThresholdISR
 33370 ;; This function uses a reentrant model
 33371 ;;
 33372                           
 33373                           	psect	text156
 33374  01A3CC                     __ptext156:
 33375                           	opt callstack 0
 33376  01A3CC                     _adc_int_t_handler:
 33377                           	opt callstack 3
 33378                           
 33379                           ;daq.c: 148:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 33380                           
 33381                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33382                           ;incstack = 0
 33383  01A3CC  013E               	movlb	62	; () banked
 33384  01A3CE  51E6               	movf	230,w,b	;volatile
 33385  01A3D0  006F FB9C  F001    	movff	16103,btemp	;volatile
 33386  01A3D6  6A02               	clrf	(btemp+1)^0,c
 33387  01A3D8  0060  F004  F002   	movff	btemp,btemp+1
 33388  01A3DE  6A01               	clrf	btemp^0,c
 33389  01A3E0  2601               	addwf	btemp^0,f,c
 33390  01A3E2  0E00               	movlw	0
 33391  01A3E4  2202               	addwfc	(btemp+1)^0,f,c
 33392  01A3E6  0100               	movlb	0	; () banked
 33393  01A3E8  51E8               	movf	(_R+36)& (0+255),w,b	;volatile
 33394  01A3EA  0D02               	mullw	2
 33395  01A3EC  50F3               	movf	243,w,c
 33396  01A3EE  0FC4               	addlw	low _R
 33397  01A3F0  6ED9               	movwf	fsr2l,c
 33398  01A3F2  6ADA               	clrf	fsr2h,c
 33399  01A3F4  0060  F007  FFDE   	movff	btemp,postinc2
 33400  01A3FA  0060  F00B  FFDD   	movff	btemp+1,postdec2
 33401  01A400                     l10814:
 33402                           
 33403                           ;daq.c: 150:   if (++R.scan_index > 0XD) {
 33404  01A400  0100               	movlb	0	; () banked
 33405  01A402  2BE8               	incf	(_R+36)& (0+255),f,b	;volatile
 33406  01A404  0E0D               	movlw	13
 33407  01A406  65E8               	cpfsgt	(_R+36)& (0+255),b	;volatile
 33408  01A408  D003               	goto	l10820
 33409                           
 33410                           ; BSR set to: 0
 33411                           ;daq.c: 151:    R.done = 1;
 33412  01A40A  0E01               	movlw	1
 33413  01A40C  6FEB               	movwf	(_R+39)& (0+255),b	;volatile
 33414  01A40E  0012               	return	
 33415  01A410                     l10820:
 33416                           
 33417                           ; BSR set to: 0
 33418                           ;daq.c: 157:  } while (!((R.scan_select >> R.scan_index) &0x1));
 33419  01A410  0060  F3A0  F00C   	movff	_R+36,btemp+11	;volatile
 33420  01A416  EE20  F0E9         	lfsr	2,_R+37	;volatile
 33421  01A41A  006F FF78  F009    	movff	postinc2,btemp+8
 33422  01A420  006F FF74  F00A    	movff	postdec2,btemp+9
 33423  01A426  2A0C               	incf	(btemp+11)^0,f,c
 33424  01A428  D003               	goto	u995_44
 33425  01A42A                     u995_45:
 33426  01A42A  90D8               	bcf	status,0,c
 33427  01A42C  320A               	rrcf	(btemp+9)^0,f,c
 33428  01A42E  3209               	rrcf	(btemp+8)^0,f,c
 33429  01A430                     u995_44:
 33430  01A430  2E0C               	decfsz	(btemp+11)^0,f,c
 33431  01A432  D7FB               	goto	u995_45
 33432  01A434  A009               	btfss	(btemp+8)^0,0,c
 33433  01A436  D7E4               	goto	l10814
 33434                           
 33435                           ;daq.c: 158:  ADCC_DischargeSampleCapacitor();
 33436  01A438  EC79  F0DB         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 33437                           
 33438                           ; BSR set to: 62
 33439                           ;daq.c: 159:  ADCC_StartConversion(R.scan_index & 0xf);
 33440  01A43C  0100               	movlb	0	; () banked
 33441  01A43E  51E8               	movf	(_R+36)& (0+255),w,b	;volatile
 33442  01A440  0B0F               	andlw	15
 33443  01A442  6EE6               	movwf	postinc1,c
 33444  01A444  EC1E  F0DB         	call	_ADCC_StartConversion	;wreg free
 33445                           
 33446                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33447  01A448  0012               	return		;funcret
 33448  01A44A                     __end_of_adc_int_t_handler:
 33449                           	opt callstack 0
 33450                           
 33451 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 33452 ;; Defined at:
 33453 ;;		line 339 in file "mcc_generated_files/adcc.c"
 33454 ;; Parameters:    Size  Location     Type
 33455 ;;		None
 33456 ;; Auto vars:     Size  Location     Type
 33457 ;;		None
 33458 ;; Return value:  Size  Location     Type
 33459 ;;                  1  [STACK] void 
 33460 ;; Registers used:
 33461 ;;		None
 33462 ;; Tracked objects:
 33463 ;;		On entry : 3F/0
 33464 ;;		On exit  : 0/0
 33465 ;;		Unchanged: 0/0
 33466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33471 ;;Total ram usage:        0 bytes
 33472 ;; Hardware stack levels used:    1
 33473 ;; This function calls:
 33474 ;;		Nothing
 33475 ;; This function is called by:
 33476 ;;		_ADCC_Initialize
 33477 ;;		_ADCC_ISR
 33478 ;;		_ADCC_ThresholdISR
 33479 ;; This function uses a reentrant model
 33480 ;;
 33481                           
 33482                           	psect	text157
 33483  01B740                     __ptext157:
 33484                           	opt callstack 0
 33485  01B740                     _ADCC_DefaultInterruptHandler:
 33486                           	opt callstack 4
 33487                           
 33488                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33489                           
 33490                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33491                           ;incstack = 0
 33492  01B740  0012               	return		;funcret
 33493  01B742                     __end_of_ADCC_DefaultInterruptHandler:
 33494                           	opt callstack 0
 33495                           
 33496 ;; *************** function _adc_int_handler *****************
 33497 ;; Defined at:
 33498 ;;		line 133 in file "daq.c"
 33499 ;; Parameters:    Size  Location     Type
 33500 ;;		None
 33501 ;; Auto vars:     Size  Location     Type
 33502 ;;		None
 33503 ;; Return value:  Size  Location     Type
 33504 ;;                  1  [STACK] void 
 33505 ;; Registers used:
 33506 ;;		None
 33507 ;; Tracked objects:
 33508 ;;		On entry : 3F/0
 33509 ;;		On exit  : 0/0
 33510 ;;		Unchanged: 0/0
 33511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33516 ;;Total ram usage:        0 bytes
 33517 ;; Hardware stack levels used:    1
 33518 ;; This function calls:
 33519 ;;		Nothing
 33520 ;; This function is called by:
 33521 ;;		_start_adc_scan
 33522 ;;		_ADCC_ISR
 33523 ;; This function uses a reentrant model
 33524 ;;
 33525                           
 33526                           	psect	text158
 33527  01B742                     __ptext158:
 33528                           	opt callstack 0
 33529  01B742                     _adc_int_handler:
 33530                           	opt callstack 4
 33531                           
 33532                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33533                           
 33534                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33535                           ;incstack = 0
 33536  01B742  0012               	return		;funcret
 33537  01B744                     __end_of_adc_int_handler:
 33538                           	opt callstack 0
 33539                           
 33540 ;; *************** function _ADCC_ThresholdISR *****************
 33541 ;; Defined at:
 33542 ;;		line 327 in file "mcc_generated_files/adcc.c"
 33543 ;; Parameters:    Size  Location     Type
 33544 ;;		None
 33545 ;; Auto vars:     Size  Location     Type
 33546 ;;		None
 33547 ;; Return value:  Size  Location     Type
 33548 ;;                  1    wreg      void 
 33549 ;; Registers used:
 33550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 33551 ;; Tracked objects:
 33552 ;;		On entry : 0/0
 33553 ;;		On exit  : 0/0
 33554 ;;		Unchanged: 0/0
 33555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33558 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33559 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33560 ;;Total ram usage:        5 bytes
 33561 ;; Hardware stack levels used:    1
 33562 ;; Hardware stack levels required when called:    2
 33563 ;; This function calls:
 33564 ;;		Absolute function
 33565 ;;		_ADCC_DefaultInterruptHandler
 33566 ;;		_adc_int_t_handler
 33567 ;; This function is called by:
 33568 ;;		Interrupt level 2
 33569 ;; This function uses a non-reentrant model
 33570 ;;
 33571                           
 33572                           	psect	text159
 33573  01A520                     __ptext159:
 33574                           	opt callstack 0
 33575  01A520                     _ADCC_ThresholdISR:
 33576                           	opt callstack 3
 33577                           
 33578                           ;incstack = 0
 33579  01A520  0060  F004  F039   	movff	btemp,??_ADCC_ThresholdISR
 33580  01A526  0060  F008  F03A   	movff	btemp+1,??_ADCC_ThresholdISR+1
 33581  01A52C  0060  F024  F03B   	movff	btemp+8,??_ADCC_ThresholdISR+2
 33582  01A532  0060  F028  F03C   	movff	btemp+9,??_ADCC_ThresholdISR+3
 33583  01A538  0060  F030  F03D   	movff	btemp+11,??_ADCC_ThresholdISR+4
 33584  01A53E  EE14  F0C2         	lfsr	1,___inthi_sp
 33585                           
 33586                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 33587  01A542  0139               	movlb	57	; () banked
 33588  01A544  97A1               	bcf	161,3,b	;volatile
 33589                           
 33590                           ; BSR set to: 57
 33591                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 33592  01A546  0100               	movlb	0	; () banked
 33593  01A548  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 33594  01A54A  11AC               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 33595  01A54C  11AD               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 33596  01A54E  B4D8               	btfsc	status,2,c
 33597  01A550  D00C               	goto	i2u1000_49
 33598                           
 33599                           ; BSR set to: 0
 33600                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 33601  01A552  D801               	call	i2u1000_48
 33602  01A554  D00A               	goto	i2u1000_49
 33603  01A556                     i2u1000_48:
 33604  01A556  0005               	push	
 33605  01A558  6EFA               	movwf	pclath,c
 33606  01A55A  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 33607  01A55C  6EFD               	movwf	tosl,c
 33608  01A55E  51AC               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 33609  01A560  6EFE               	movwf	tosh,c
 33610  01A562  51AD               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 33611  01A564  6EFF               	movwf	tosu,c
 33612  01A566  50FA               	movf	pclath,w,c
 33613  01A568  0012               	return		;indir
 33614  01A56A                     i2u1000_49:
 33615  01A56A  0060  F0F4  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 33616  01A570  0060  F0F0  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 33617  01A576  0060  F0EC  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 33618  01A57C  0060  F0E8  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 33619  01A582  0060  F0E4  F001   	movff	??_ADCC_ThresholdISR,btemp
 33620  01A588  0011               	retfie		f
 33621  01A58A                     __end_of_ADCC_ThresholdISR:
 33622                           	opt callstack 0
 33623                           
 33624 ;; *************** function _UART1_rx_vect_isr *****************
 33625 ;; Defined at:
 33626 ;;		line 181 in file "mcc_generated_files/uart1.c"
 33627 ;; Parameters:    Size  Location     Type
 33628 ;;		None
 33629 ;; Auto vars:     Size  Location     Type
 33630 ;;		None
 33631 ;; Return value:  Size  Location     Type
 33632 ;;                  1    wreg      void 
 33633 ;; Registers used:
 33634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 33635 ;; Tracked objects:
 33636 ;;		On entry : 0/0
 33637 ;;		On exit  : 0/0
 33638 ;;		Unchanged: 0/0
 33639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33644 ;;Total ram usage:        0 bytes
 33645 ;; Hardware stack levels used:    1
 33646 ;; Hardware stack levels required when called:    1
 33647 ;; This function calls:
 33648 ;;		Absolute function
 33649 ;;		_UART1_Receive_ISR
 33650 ;; This function is called by:
 33651 ;;		Interrupt level 2
 33652 ;; This function uses a non-reentrant model
 33653 ;;
 33654                           
 33655                           	psect	text160
 33656  01B2FC                     __ptext160:
 33657                           	opt callstack 0
 33658  01B2FC                     _UART1_rx_vect_isr:
 33659                           	opt callstack 4
 33660                           
 33661                           ;incstack = 0
 33662  01B2FC  EE14  F0C2         	lfsr	1,___inthi_sp
 33663                           
 33664                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 33665  01B300  0100               	movlb	0	; () banked
 33666  01B302  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 33667  01B304  11B2               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 33668  01B306  11B3               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 33669  01B308  B4D8               	btfsc	status,2,c
 33670  01B30A  0011               	retfie		f
 33671                           
 33672                           ; BSR set to: 0
 33673                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 33674  01B30C  D801               	call	i2u1002_48
 33675  01B30E  0011               	retfie		f
 33676  01B310                     i2u1002_48:
 33677  01B310  0005               	push	
 33678  01B312  6EFA               	movwf	pclath,c
 33679  01B314  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 33680  01B316  6EFD               	movwf	tosl,c
 33681  01B318  51B2               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 33682  01B31A  6EFE               	movwf	tosh,c
 33683  01B31C  51B3               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 33684  01B31E  6EFF               	movwf	tosu,c
 33685  01B320  50FA               	movf	pclath,w,c
 33686  01B322  0012               	return		;indir
 33687  01B324                     __end_of_UART1_rx_vect_isr:
 33688                           	opt callstack 0
 33689                           
 33690 ;; *************** function _UART1_Receive_ISR *****************
 33691 ;; Defined at:
 33692 ;;		line 192 in file "mcc_generated_files/uart1.c"
 33693 ;; Parameters:    Size  Location     Type
 33694 ;;		None
 33695 ;; Auto vars:     Size  Location     Type
 33696 ;;		None
 33697 ;; Return value:  Size  Location     Type
 33698 ;;                  1  [STACK] void 
 33699 ;; Registers used:
 33700 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33701 ;; Tracked objects:
 33702 ;;		On entry : 3F/0
 33703 ;;		On exit  : 0/0
 33704 ;;		Unchanged: 0/0
 33705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33710 ;;Total ram usage:        0 bytes
 33711 ;; Hardware stack levels used:    1
 33712 ;; This function calls:
 33713 ;;		Nothing
 33714 ;; This function is called by:
 33715 ;;		_UART1_Initialize
 33716 ;;		_UART1_rx_vect_isr
 33717 ;; This function uses a reentrant model
 33718 ;;
 33719                           
 33720                           	psect	text161
 33721  01B564                     __ptext161:
 33722                           	opt callstack 0
 33723  01B564                     _UART1_Receive_ISR:
 33724                           	opt callstack 4
 33725                           
 33726                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 33727                           
 33728                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33729                           ;incstack = 0
 33730  01B564  5038               	movf	_uart1RxHead^0,w,c
 33731  01B566  0F6C               	addlw	low _uart1RxBuffer
 33732  01B568  6ED9               	movwf	fsr2l,c
 33733  01B56A  6ADA               	clrf	fsr2h,c
 33734  01B56C  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 33735  01B572  2A38               	incf	_uart1RxHead^0,f,c	;volatile
 33736                           
 33737                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 33738  01B574  0E07               	movlw	7
 33739  01B576  6438               	cpfsgt	_uart1RxHead^0,c
 33740  01B578  D001               	goto	l10390
 33741                           
 33742                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 33743  01B57A  6A38               	clrf	_uart1RxHead^0,c	;volatile
 33744  01B57C                     l10390:
 33745                           
 33746                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 33747  01B57C  2A36               	incf	_uart1RxCount^0,f,c	;volatile
 33748                           
 33749                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33750  01B57E  0012               	return		;funcret
 33751  01B580                     __end_of_UART1_Receive_ISR:
 33752                           	opt callstack 0
 33753                           
 33754 ;; *************** function _UART2_tx_vect_isr *****************
 33755 ;; Defined at:
 33756 ;;		line 195 in file "mcc_generated_files/uart2.c"
 33757 ;; Parameters:    Size  Location     Type
 33758 ;;		None
 33759 ;; Auto vars:     Size  Location     Type
 33760 ;;		None
 33761 ;; Return value:  Size  Location     Type
 33762 ;;                  1    wreg      void 
 33763 ;; Registers used:
 33764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 33765 ;; Tracked objects:
 33766 ;;		On entry : 0/0
 33767 ;;		On exit  : 0/0
 33768 ;;		Unchanged: 0/0
 33769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33774 ;;Total ram usage:        0 bytes
 33775 ;; Hardware stack levels used:    1
 33776 ;; Hardware stack levels required when called:    1
 33777 ;; This function calls:
 33778 ;;		Absolute function
 33779 ;;		_UART2_Transmit_ISR
 33780 ;; This function is called by:
 33781 ;;		Interrupt level 2
 33782 ;; This function uses a non-reentrant model
 33783 ;;
 33784                           
 33785                           	psect	text162
 33786  01B324                     __ptext162:
 33787                           	opt callstack 0
 33788  01B324                     _UART2_tx_vect_isr:
 33789                           	opt callstack 4
 33790                           
 33791                           ;incstack = 0
 33792  01B324  EE14  F0C2         	lfsr	1,___inthi_sp
 33793                           
 33794                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 33795  01B328  0100               	movlb	0	; () banked
 33796  01B32A  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 33797  01B32C  11B5               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 33798  01B32E  11B6               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 33799  01B330  B4D8               	btfsc	status,2,c
 33800  01B332  0011               	retfie		f
 33801                           
 33802                           ; BSR set to: 0
 33803                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 33804  01B334  D801               	call	i2u1004_48
 33805  01B336  0011               	retfie		f
 33806  01B338                     i2u1004_48:
 33807  01B338  0005               	push	
 33808  01B33A  6EFA               	movwf	pclath,c
 33809  01B33C  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 33810  01B33E  6EFD               	movwf	tosl,c
 33811  01B340  51B5               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 33812  01B342  6EFE               	movwf	tosh,c
 33813  01B344  51B6               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 33814  01B346  6EFF               	movwf	tosu,c
 33815  01B348  50FA               	movf	pclath,w,c
 33816  01B34A  0012               	return		;indir
 33817  01B34C                     __end_of_UART2_tx_vect_isr:
 33818                           	opt callstack 0
 33819                           
 33820 ;; *************** function _UART2_Transmit_ISR *****************
 33821 ;; Defined at:
 33822 ;;		line 213 in file "mcc_generated_files/uart2.c"
 33823 ;; Parameters:    Size  Location     Type
 33824 ;;		None
 33825 ;; Auto vars:     Size  Location     Type
 33826 ;;		None
 33827 ;; Return value:  Size  Location     Type
 33828 ;;                  1  [STACK] void 
 33829 ;; Registers used:
 33830 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33831 ;; Tracked objects:
 33832 ;;		On entry : 3F/0
 33833 ;;		On exit  : 3B/39
 33834 ;;		Unchanged: 0/0
 33835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33840 ;;Total ram usage:        0 bytes
 33841 ;; Hardware stack levels used:    1
 33842 ;; This function calls:
 33843 ;;		Nothing
 33844 ;; This function is called by:
 33845 ;;		_UART2_Initialize
 33846 ;;		_UART2_tx_vect_isr
 33847 ;; This function uses a reentrant model
 33848 ;;
 33849                           
 33850                           	psect	text163
 33851  01B074                     __ptext163:
 33852                           	opt callstack 0
 33853  01B074                     _UART2_Transmit_ISR:
 33854                           	opt callstack 4
 33855                           
 33856                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 33857                           
 33858                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33859                           ;incstack = 0
 33860  01B074  0E40               	movlw	64
 33861  01B076  6033               	cpfslt	_uart2TxBufferRemaining^0,c
 33862  01B078  D010               	goto	l673
 33863                           
 33864                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 33865  01B07A  0E54               	movlw	low _uart2TxBuffer
 33866  01B07C  2434               	addwf	_uart2TxTail^0,w,c	;volatile
 33867  01B07E  6ED9               	movwf	fsr2l,c
 33868  01B080  6ADA               	clrf	fsr2h,c
 33869  01B082  0E03               	movlw	high _uart2TxBuffer
 33870  01B084  22DA               	addwfc	fsr2h,f,c
 33871  01B086  50DF               	movf	indf2,w,c
 33872  01B088  013D               	movlb	61	; () banked
 33873  01B08A  6FD2               	movwf	210,b	;volatile
 33874                           
 33875                           ; BSR set to: 61
 33876  01B08C  2A34               	incf	_uart2TxTail^0,f,c	;volatile
 33877                           
 33878                           ; BSR set to: 61
 33879                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 33880  01B08E  0E3F               	movlw	63
 33881  01B090  6434               	cpfsgt	_uart2TxTail^0,c
 33882  01B092  D001               	goto	l10402
 33883                           
 33884                           ; BSR set to: 61
 33885                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 33886  01B094  6A34               	clrf	_uart2TxTail^0,c	;volatile
 33887  01B096                     l10402:
 33888                           
 33889                           ; BSR set to: 61
 33890                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 33891  01B096  2A33               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 33892                           
 33893                           ;mcc_generated_files/uart2.c: 224:     }
 33894  01B098  0012               	return	
 33895  01B09A                     l673:
 33896                           
 33897                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 33898  01B09A  0139               	movlb	57	; () banked
 33899  01B09C  9796               	bcf	150,3,b	;volatile
 33900                           
 33901                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 33902  01B09E  0012               	return		;funcret
 33903  01B0A0                     __end_of_UART2_Transmit_ISR:
 33904                           	opt callstack 0
 33905                           
 33906 ;; *************** function _UART2_rx_vect_isr *****************
 33907 ;; Defined at:
 33908 ;;		line 203 in file "mcc_generated_files/uart2.c"
 33909 ;; Parameters:    Size  Location     Type
 33910 ;;		None
 33911 ;; Auto vars:     Size  Location     Type
 33912 ;;		None
 33913 ;; Return value:  Size  Location     Type
 33914 ;;                  1    wreg      void 
 33915 ;; Registers used:
 33916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 33917 ;; Tracked objects:
 33918 ;;		On entry : 0/0
 33919 ;;		On exit  : 0/0
 33920 ;;		Unchanged: 0/0
 33921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33926 ;;Total ram usage:        0 bytes
 33927 ;; Hardware stack levels used:    1
 33928 ;; Hardware stack levels required when called:    1
 33929 ;; This function calls:
 33930 ;;		Absolute function
 33931 ;;		_UART2_Receive_ISR
 33932 ;; This function is called by:
 33933 ;;		Interrupt level 2
 33934 ;; This function uses a non-reentrant model
 33935 ;;
 33936                           
 33937                           	psect	text164
 33938  01B34C                     __ptext164:
 33939                           	opt callstack 0
 33940  01B34C                     _UART2_rx_vect_isr:
 33941                           	opt callstack 4
 33942                           
 33943                           ;incstack = 0
 33944  01B34C  EE14  F0C2         	lfsr	1,___inthi_sp
 33945                           
 33946                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 33947  01B350  0100               	movlb	0	; () banked
 33948  01B352  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 33949  01B354  11B8               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 33950  01B356  11B9               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 33951  01B358  B4D8               	btfsc	status,2,c
 33952  01B35A  0011               	retfie		f
 33953                           
 33954                           ; BSR set to: 0
 33955                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 33956  01B35C  D801               	call	i2u1006_48
 33957  01B35E  0011               	retfie		f
 33958  01B360                     i2u1006_48:
 33959  01B360  0005               	push	
 33960  01B362  6EFA               	movwf	pclath,c
 33961  01B364  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 33962  01B366  6EFD               	movwf	tosl,c
 33963  01B368  51B8               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 33964  01B36A  6EFE               	movwf	tosh,c
 33965  01B36C  51B9               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 33966  01B36E  6EFF               	movwf	tosu,c
 33967  01B370  50FA               	movf	pclath,w,c
 33968  01B372  0012               	return		;indir
 33969  01B374                     __end_of_UART2_rx_vect_isr:
 33970                           	opt callstack 0
 33971                           
 33972 ;; *************** function _UART2_Receive_ISR *****************
 33973 ;; Defined at:
 33974 ;;		line 233 in file "mcc_generated_files/uart2.c"
 33975 ;; Parameters:    Size  Location     Type
 33976 ;;		None
 33977 ;; Auto vars:     Size  Location     Type
 33978 ;;		None
 33979 ;; Return value:  Size  Location     Type
 33980 ;;                  1  [STACK] void 
 33981 ;; Registers used:
 33982 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33983 ;; Tracked objects:
 33984 ;;		On entry : 3F/0
 33985 ;;		On exit  : 0/0
 33986 ;;		Unchanged: 0/0
 33987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33992 ;;Total ram usage:        0 bytes
 33993 ;; Hardware stack levels used:    1
 33994 ;; This function calls:
 33995 ;;		Nothing
 33996 ;; This function is called by:
 33997 ;;		_UART2_Initialize
 33998 ;;		_UART2_rx_vect_isr
 33999 ;; This function uses a reentrant model
 34000 ;;
 34001                           
 34002                           	psect	text165
 34003  01B52A                     __ptext165:
 34004                           	opt callstack 0
 34005  01B52A                     _UART2_Receive_ISR:
 34006                           	opt callstack 4
 34007                           
 34008                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 34009                           
 34010                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34011                           ;incstack = 0
 34012  01B52A  0E00               	movlw	low _uart2RxBuffer
 34013  01B52C  2432               	addwf	_uart2RxHead^0,w,c	;volatile
 34014  01B52E  6ED9               	movwf	fsr2l,c
 34015  01B530  6ADA               	clrf	fsr2h,c
 34016  01B532  0E05               	movlw	high _uart2RxBuffer
 34017  01B534  22DA               	addwfc	fsr2h,f,c
 34018  01B536  006F F743 FFDF     	movff	15824,indf2	;volatile
 34019  01B53C  2A32               	incf	_uart2RxHead^0,f,c	;volatile
 34020                           
 34021                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 34022  01B53E  2832               	incf	_uart2RxHead^0,w,c
 34023  01B540  B4D8               	btfsc	status,2,c
 34024                           
 34025                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 34026  01B542  6A32               	clrf	_uart2RxHead^0,c	;volatile
 34027                           
 34028                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 34029  01B544  2A30               	incf	_uart2RxCount^0,f,c	;volatile
 34030                           
 34031                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34032  01B546  0012               	return		;funcret
 34033  01B548                     __end_of_UART2_Receive_ISR:
 34034                           	opt callstack 0
 34035                           
 34036 ;; *************** function _TMR6_ISR *****************
 34037 ;; Defined at:
 34038 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 34039 ;; Parameters:    Size  Location     Type
 34040 ;;		None
 34041 ;; Auto vars:     Size  Location     Type
 34042 ;;		None
 34043 ;; Return value:  Size  Location     Type
 34044 ;;                  1    wreg      void 
 34045 ;; Registers used:
 34046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 34047 ;; Tracked objects:
 34048 ;;		On entry : 0/0
 34049 ;;		On exit  : 0/0
 34050 ;;		Unchanged: 0/0
 34051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34054 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34055 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34056 ;;Total ram usage:        1 bytes
 34057 ;; Hardware stack levels used:    1
 34058 ;; Hardware stack levels required when called:    2
 34059 ;; This function calls:
 34060 ;;		_TMR6_CallBack
 34061 ;; This function is called by:
 34062 ;;		Interrupt level 2
 34063 ;; This function uses a non-reentrant model
 34064 ;;
 34065                           
 34066                           	psect	text166
 34067  01B59C                     __ptext166:
 34068                           	opt callstack 0
 34069  01B59C                     _TMR6_ISR:
 34070                           	opt callstack 3
 34071                           
 34072                           ;incstack = 0
 34073  01B59C  0060  F004  F03E   	movff	btemp,??_TMR6_ISR
 34074  01B5A2  EE14  F0C2         	lfsr	1,___inthi_sp
 34075                           
 34076                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 34077  01B5A6  0139               	movlb	57	; () banked
 34078  01B5A8  91A9               	bcf	169,0,b	;volatile
 34079                           
 34080                           ; BSR set to: 57
 34081                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 34082  01B5AA  EC26  F0DA         	call	_TMR6_CallBack	;wreg free
 34083  01B5AE  0060  F0F8  F001   	movff	??_TMR6_ISR,btemp
 34084  01B5B4  0011               	retfie		f
 34085  01B5B6                     __end_of_TMR6_ISR:
 34086                           	opt callstack 0
 34087                           
 34088 ;; *************** function _TMR6_CallBack *****************
 34089 ;; Defined at:
 34090 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 34091 ;; Parameters:    Size  Location     Type
 34092 ;;		None
 34093 ;; Auto vars:     Size  Location     Type
 34094 ;;		None
 34095 ;; Return value:  Size  Location     Type
 34096 ;;                  1  [STACK] void 
 34097 ;; Registers used:
 34098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 34099 ;; Tracked objects:
 34100 ;;		On entry : 3F/39
 34101 ;;		On exit  : 0/0
 34102 ;;		Unchanged: 0/0
 34103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34108 ;;Total ram usage:        0 bytes
 34109 ;; Hardware stack levels used:    1
 34110 ;; Hardware stack levels required when called:    1
 34111 ;; This function calls:
 34112 ;;		Absolute function
 34113 ;;		_TMR6_DefaultInterruptHandler
 34114 ;; This function is called by:
 34115 ;;		_TMR6_ISR
 34116 ;; This function uses a reentrant model
 34117 ;;
 34118                           
 34119                           	psect	text167
 34120  01B44C                     __ptext167:
 34121                           	opt callstack 0
 34122  01B44C                     _TMR6_CallBack:
 34123                           	opt callstack 3
 34124                           
 34125                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 34126                           
 34127                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34128                           ;incstack = 0
 34129  01B44C  0100               	movlb	0	; () banked
 34130  01B44E  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 34131  01B450  11A9               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 34132  01B452  11AA               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 34133  01B454  B4D8               	btfsc	status,2,c
 34134  01B456  0012               	return	
 34135                           
 34136                           ; BSR set to: 0
 34137                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 34138  01B458  D801               	call	u963_48
 34139  01B45A  0012               	return	
 34140  01B45C                     u963_48:
 34141  01B45C  0005               	push	
 34142  01B45E  6EFA               	movwf	pclath,c
 34143  01B460  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 34144  01B462  6EFD               	movwf	tosl,c
 34145  01B464  51A9               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 34146  01B466  6EFE               	movwf	tosh,c
 34147  01B468  51AA               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 34148  01B46A  6EFF               	movwf	tosu,c
 34149  01B46C  50FA               	movf	pclath,w,c
 34150  01B46E  0012               	return		;indir
 34151  01B470                     __end_of_TMR6_CallBack:
 34152                           	opt callstack 0
 34153                           
 34154 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 34155 ;; Defined at:
 34156 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 34157 ;; Parameters:    Size  Location     Type
 34158 ;;		None
 34159 ;; Auto vars:     Size  Location     Type
 34160 ;;  i               1  [STACK] unsigned char 
 34161 ;; Return value:  Size  Location     Type
 34162 ;;                  1  [STACK] void 
 34163 ;; Registers used:
 34164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 34165 ;; Tracked objects:
 34166 ;;		On entry : 3F/0
 34167 ;;		On exit  : 0/0
 34168 ;;		Unchanged: 0/0
 34169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34174 ;;Total ram usage:        0 bytes
 34175 ;; Hardware stack levels used:    1
 34176 ;; This function calls:
 34177 ;;		Nothing
 34178 ;; This function is called by:
 34179 ;;		_TMR6_Initialize
 34180 ;;		_TMR6_CallBack
 34181 ;; This function uses a reentrant model
 34182 ;;
 34183                           
 34184                           	psect	text168
 34185  01A97C                     __ptext168:
 34186                           	opt callstack 0
 34187  01A97C                     _TMR6_DefaultInterruptHandler:
 34188                           	opt callstack 0
 34189                           
 34190                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34191  01A97C  52E6               	movf	postinc1,f,c
 34192                           
 34193                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 34194                           ;stkvar	_i @ sp[(-1)+0]
 34195                           
 34196                           ;incstack = 0
 34197  01A97E  0EFF               	movlw	-1
 34198  01A980  6AE3               	clrf	plusw1,c
 34199  01A982                     l9970:
 34200                           
 34201                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 34202                           ;stkvar	_i @ sp[(-1)+0]
 34203  01A982  0EFF               	movlw	-1
 34204  01A984  50E3               	movf	plusw1,w,c
 34205  01A986  0D02               	mullw	2
 34206  01A988  0EE6               	movlw	low _tickCount
 34207  01A98A  24F3               	addwf	243,w,c
 34208  01A98C  6ED9               	movwf	fsr2l,c
 34209  01A98E  0E02               	movlw	high _tickCount
 34210  01A990  20F4               	addwfc	prodh,w,c
 34211  01A992  6EDA               	movwf	fsr2h,c
 34212  01A994  50DE               	movf	postinc2,w,c
 34213  01A996  10DE               	iorwf	postinc2,w,c
 34214  01A998  B4D8               	btfsc	status,2,c
 34215  01A99A  D00C               	goto	l9974
 34216                           
 34217                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 34218                           ;stkvar	_i @ sp[(-1)+0]
 34219  01A99C  0EFF               	movlw	-1
 34220  01A99E  50E3               	movf	plusw1,w,c
 34221  01A9A0  0D02               	mullw	2
 34222  01A9A2  0EE6               	movlw	low _tickCount
 34223  01A9A4  24F3               	addwf	243,w,c
 34224  01A9A6  6ED9               	movwf	fsr2l,c
 34225  01A9A8  0E02               	movlw	high _tickCount
 34226  01A9AA  20F4               	addwfc	prodh,w,c
 34227  01A9AC  6EDA               	movwf	fsr2h,c
 34228  01A9AE  06DE               	decf	postinc2,f,c
 34229  01A9B0  0E00               	movlw	0
 34230  01A9B2  5ADD               	subwfb	postdec2,f,c
 34231  01A9B4                     l9974:
 34232                           
 34233                           ;mcc_generated_files/tmr6.c: 207:  }
 34234                           ;stkvar	_i @ sp[(-1)+0]
 34235  01A9B4  0EFF               	movlw	-1
 34236  01A9B6  2AE3               	incf	plusw1,f,c
 34237                           
 34238                           ;stkvar	_i @ sp[(-1)+0]
 34239  01A9B8  0EFF               	movlw	-1
 34240  01A9BA  006F FF8C  F001    	movff	plusw1,btemp
 34241  01A9C0  0E0C               	movlw	12
 34242  01A9C2  6401               	cpfsgt	btemp^0,c
 34243  01A9C4  D7DE               	goto	l9970
 34244                           
 34245                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34246  01A9C6  52E5               	movf	postdec1,f,c
 34247  01A9C8  0012               	return		;funcret
 34248  01A9CA                     __end_of_TMR6_DefaultInterruptHandler:
 34249                           	opt callstack 0
 34250                           
 34251 ;; *************** function _DMA1_DMASCNT_ISR *****************
 34252 ;; Defined at:
 34253 ;;		line 126 in file "mcc_generated_files/dma1.c"
 34254 ;; Parameters:    Size  Location     Type
 34255 ;;		None
 34256 ;; Auto vars:     Size  Location     Type
 34257 ;;		None
 34258 ;; Return value:  Size  Location     Type
 34259 ;;                  1    wreg      void 
 34260 ;; Registers used:
 34261 ;;		None
 34262 ;; Tracked objects:
 34263 ;;		On entry : 0/0
 34264 ;;		On exit  : 3F/0
 34265 ;;		Unchanged: 0/0
 34266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34271 ;;Total ram usage:        0 bytes
 34272 ;; Hardware stack levels used:    1
 34273 ;; This function calls:
 34274 ;;		Nothing
 34275 ;; This function is called by:
 34276 ;;		Interrupt level 2
 34277 ;; This function uses a non-reentrant model
 34278 ;;
 34279                           
 34280                           	psect	text169
 34281  01B6AC                     __ptext169:
 34282                           	opt callstack 0
 34283  01B6AC                     _DMA1_DMASCNT_ISR:
 34284                           	opt callstack 5
 34285                           
 34286                           ;incstack = 0
 34287  01B6AC  EE14  F0C2         	lfsr	1,___inthi_sp
 34288                           
 34289                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 34290  01B6B0  0139               	movlb	57	; () banked
 34291  01B6B2  91A2               	bcf	162,0,b	;volatile
 34292                           
 34293                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 34294  01B6B4  0100               	movlb	0	; () banked
 34295  01B6B6  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 34296                           
 34297                           ; BSR set to: 0
 34298  01B6B8  0011               	retfie		f
 34299  01B6BA                     __end_of_DMA1_DMASCNT_ISR:
 34300                           	opt callstack 0
 34301                           
 34302 ;; *************** function _DMA1_DMADCNT_ISR *****************
 34303 ;; Defined at:
 34304 ;;		line 134 in file "mcc_generated_files/dma1.c"
 34305 ;; Parameters:    Size  Location     Type
 34306 ;;		None
 34307 ;; Auto vars:     Size  Location     Type
 34308 ;;		None
 34309 ;; Return value:  Size  Location     Type
 34310 ;;                  1    wreg      void 
 34311 ;; Registers used:
 34312 ;;		None
 34313 ;; Tracked objects:
 34314 ;;		On entry : 0/0
 34315 ;;		On exit  : 3F/39
 34316 ;;		Unchanged: 0/0
 34317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34322 ;;Total ram usage:        0 bytes
 34323 ;; Hardware stack levels used:    1
 34324 ;; This function calls:
 34325 ;;		Nothing
 34326 ;; This function is called by:
 34327 ;;		Interrupt level 2
 34328 ;; This function uses a non-reentrant model
 34329 ;;
 34330                           
 34331                           	psect	text170
 34332  01B6D0                     __ptext170:
 34333                           	opt callstack 0
 34334  01B6D0                     _DMA1_DMADCNT_ISR:
 34335                           	opt callstack 5
 34336                           
 34337                           ; BSR set to: 0
 34338                           ;incstack = 0
 34339  01B6D0  EE14  F0C2         	lfsr	1,___inthi_sp
 34340                           
 34341                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 34342  01B6D4  0139               	movlb	57	; () banked
 34343  01B6D6  93A2               	bcf	162,1,b	;volatile
 34344                           
 34345                           ; BSR set to: 57
 34346  01B6D8  0011               	retfie		f
 34347  01B6DA                     __end_of_DMA1_DMADCNT_ISR:
 34348                           	opt callstack 0
 34349                           
 34350 ;; *************** function _DMA1_DMAA_ISR *****************
 34351 ;; Defined at:
 34352 ;;		line 144 in file "mcc_generated_files/dma1.c"
 34353 ;; Parameters:    Size  Location     Type
 34354 ;;		None
 34355 ;; Auto vars:     Size  Location     Type
 34356 ;;		None
 34357 ;; Return value:  Size  Location     Type
 34358 ;;                  1    wreg      void 
 34359 ;; Registers used:
 34360 ;;		None
 34361 ;; Tracked objects:
 34362 ;;		On entry : 0/0
 34363 ;;		On exit  : 3F/39
 34364 ;;		Unchanged: 0/0
 34365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34370 ;;Total ram usage:        0 bytes
 34371 ;; Hardware stack levels used:    1
 34372 ;; This function calls:
 34373 ;;		Nothing
 34374 ;; This function is called by:
 34375 ;;		Interrupt level 2
 34376 ;; This function uses a non-reentrant model
 34377 ;;
 34378                           
 34379                           	psect	text171
 34380  01B6DC                     __ptext171:
 34381                           	opt callstack 0
 34382  01B6DC                     _DMA1_DMAA_ISR:
 34383                           	opt callstack 5
 34384                           
 34385                           ; BSR set to: 57
 34386                           ;incstack = 0
 34387  01B6DC  EE14  F0C2         	lfsr	1,___inthi_sp
 34388                           
 34389                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 34390  01B6E0  0139               	movlb	57	; () banked
 34391  01B6E2  97A2               	bcf	162,3,b	;volatile
 34392                           
 34393                           ; BSR set to: 57
 34394  01B6E4  0011               	retfie		f
 34395  01B6E6                     __end_of_DMA1_DMAA_ISR:
 34396                           	opt callstack 0
 34397                           
 34398 ;; *************** function _DMA1_DMAOR_ISR *****************
 34399 ;; Defined at:
 34400 ;;		line 155 in file "mcc_generated_files/dma1.c"
 34401 ;; Parameters:    Size  Location     Type
 34402 ;;		None
 34403 ;; Auto vars:     Size  Location     Type
 34404 ;;		None
 34405 ;; Return value:  Size  Location     Type
 34406 ;;                  1    wreg      void 
 34407 ;; Registers used:
 34408 ;;		None
 34409 ;; Tracked objects:
 34410 ;;		On entry : 0/0
 34411 ;;		On exit  : 3F/39
 34412 ;;		Unchanged: 0/0
 34413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34418 ;;Total ram usage:        0 bytes
 34419 ;; Hardware stack levels used:    1
 34420 ;; This function calls:
 34421 ;;		Nothing
 34422 ;; This function is called by:
 34423 ;;		Interrupt level 2
 34424 ;; This function uses a non-reentrant model
 34425 ;;
 34426                           
 34427                           	psect	text172
 34428  01B6E8                     __ptext172:
 34429                           	opt callstack 0
 34430  01B6E8                     _DMA1_DMAOR_ISR:
 34431                           	opt callstack 5
 34432                           
 34433                           ; BSR set to: 57
 34434                           ;incstack = 0
 34435  01B6E8  EE14  F0C2         	lfsr	1,___inthi_sp
 34436                           
 34437                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 34438  01B6EC  0139               	movlb	57	; () banked
 34439  01B6EE  95A2               	bcf	162,2,b	;volatile
 34440                           
 34441                           ; BSR set to: 57
 34442  01B6F0  0011               	retfie		f
 34443  01B6F2                     __end_of_DMA1_DMAOR_ISR:
 34444                           	opt callstack 0
 34445                           
 34446                           ;
 34447                           ; Interrupt Vector Table @ 0x8
 34448                           ;
 34449                           
 34450                           	psect	ivt0x8
 34451  000008                     __pivt0x8:
 34452                           	opt callstack 0
 34453  000008                     ivt0x8_base:
 34454                           	opt callstack 0
 34455                           
 34456                           ; Vector 0 : SWINT
 34457  000008  6DCD               	dw	_Default_ISR shr (0+2)
 34458                           
 34459                           ; Vector 1 : HLVD
 34460  00000A  6DCD               	dw	_Default_ISR shr (0+2)
 34461                           
 34462                           ; Vector 2 : OSF
 34463  00000C  6DCD               	dw	_Default_ISR shr (0+2)
 34464                           
 34465                           ; Vector 3 : CSW
 34466  00000E  6DCD               	dw	_Default_ISR shr (0+2)
 34467                           
 34468                           ; Vector 4 : NVM
 34469  000010  6DCD               	dw	_Default_ISR shr (0+2)
 34470                           
 34471                           ; Vector 5 : SCAN
 34472  000012  6DCD               	dw	_Default_ISR shr (0+2)
 34473                           
 34474                           ; Vector 6 : CRC
 34475  000014  6DCD               	dw	_Default_ISR shr (0+2)
 34476                           
 34477                           ; Vector 7 : IOC
 34478  000016  6DCD               	dw	_Default_ISR shr (0+2)
 34479                           
 34480                           ; Vector 8 : INT0
 34481  000018  6DA7               	dw	_INT0_ISR shr (0+2)
 34482                           
 34483                           ; Vector 9 : ZCD
 34484  00001A  6DCD               	dw	_Default_ISR shr (0+2)
 34485                           
 34486                           ; Vector 10 : AD
 34487  00001C  6C12               	dw	_ADCC_ISR shr (0+2)
 34488                           
 34489                           ; Vector 11 : ADT
 34490  00001E  6948               	dw	_ADCC_ThresholdISR shr (0+2)
 34491                           
 34492                           ; Vector 12 : CMP1
 34493  000020  6DCD               	dw	_Default_ISR shr (0+2)
 34494                           
 34495                           ; Vector 13 : SMT1
 34496  000022  6DCD               	dw	_Default_ISR shr (0+2)
 34497                           
 34498                           ; Vector 14 : SMT1PRA
 34499  000024  6DCD               	dw	_Default_ISR shr (0+2)
 34500                           
 34501                           ; Vector 15 : SMT1PRW
 34502  000026  6DCD               	dw	_Default_ISR shr (0+2)
 34503                           
 34504                           ; Vector 16 : DMA1SCNT
 34505  000028  6DAB               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 34506                           
 34507                           ; Vector 17 : DMA1DCNT
 34508  00002A  6DB4               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 34509                           
 34510                           ; Vector 18 : DMA1OR
 34511  00002C  6DBA               	dw	_DMA1_DMAOR_ISR shr (0+2)
 34512                           
 34513                           ; Vector 19 : DMA1A
 34514  00002E  6DB7               	dw	_DMA1_DMAA_ISR shr (0+2)
 34515                           
 34516                           ; Vector 20 : SPI1RX
 34517  000030  6DCD               	dw	_Default_ISR shr (0+2)
 34518                           
 34519                           ; Vector 21 : SPI1TX
 34520  000032  6DCD               	dw	_Default_ISR shr (0+2)
 34521                           
 34522                           ; Vector 22 : SPI1
 34523  000034  6DCD               	dw	_Default_ISR shr (0+2)
 34524                           
 34525                           ; Vector 23 : I2C1RX
 34526  000036  6DCD               	dw	_Default_ISR shr (0+2)
 34527                           
 34528                           ; Vector 24 : I2C1TX
 34529  000038  6DCD               	dw	_Default_ISR shr (0+2)
 34530                           
 34531                           ; Vector 25 : I2C1
 34532  00003A  6DCD               	dw	_Default_ISR shr (0+2)
 34533                           
 34534                           ; Vector 26 : I2C1E
 34535  00003C  6DCD               	dw	_Default_ISR shr (0+2)
 34536                           
 34537                           ; Vector 27 : U1RX
 34538  00003E  6CBF               	dw	_UART1_rx_vect_isr shr (0+2)
 34539                           
 34540                           ; Vector 28 : U1TX
 34541  000040  6DCD               	dw	_Default_ISR shr (0+2)
 34542                           
 34543                           ; Vector 29 : U1E
 34544  000042  6DCD               	dw	_Default_ISR shr (0+2)
 34545                           
 34546                           ; Vector 30 : U1
 34547  000044  6DCD               	dw	_Default_ISR shr (0+2)
 34548                           
 34549                           ; Vector 31 : TMR0
 34550  000046  6DCD               	dw	_Default_ISR shr (0+2)
 34551                           
 34552                           ; Vector 32 : TMR1
 34553  000048  6DCD               	dw	_Default_ISR shr (0+2)
 34554                           
 34555                           ; Vector 33 : TMR1G
 34556  00004A  6DCD               	dw	_Default_ISR shr (0+2)
 34557                           
 34558                           ; Vector 34 : TMR2
 34559  00004C  6DCD               	dw	_Default_ISR shr (0+2)
 34560                           
 34561                           ; Vector 35 : CCP1
 34562  00004E  6DCD               	dw	_Default_ISR shr (0+2)
 34563                           
 34564                           ; Vector 36 : Undefined
 34565  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 34566                           
 34567                           ; Vector 37 : NCO1
 34568  000052  6DCD               	dw	_Default_ISR shr (0+2)
 34569                           
 34570                           ; Vector 38 : CWG1
 34571  000054  6DCD               	dw	_Default_ISR shr (0+2)
 34572                           
 34573                           ; Vector 39 : CLC1
 34574  000056  6DCD               	dw	_Default_ISR shr (0+2)
 34575                           
 34576                           ; Vector 40 : INT1
 34577  000058  6B50               	dw	_INT1_ISR shr (0+2)
 34578                           
 34579                           ; Vector 41 : CMP2
 34580  00005A  6DCD               	dw	_Default_ISR shr (0+2)
 34581                           
 34582                           ; Vector 42 : DMA2SCNT
 34583  00005C  6DCD               	dw	_Default_ISR shr (0+2)
 34584                           
 34585                           ; Vector 43 : DMA2DCNT
 34586  00005E  6DCD               	dw	_Default_ISR shr (0+2)
 34587                           
 34588                           ; Vector 44 : DMA2OR
 34589  000060  6DCD               	dw	_Default_ISR shr (0+2)
 34590                           
 34591                           ; Vector 45 : DMA2A
 34592  000062  6DCD               	dw	_Default_ISR shr (0+2)
 34593                           
 34594                           ; Vector 46 : I2C2RX
 34595  000064  6DCD               	dw	_Default_ISR shr (0+2)
 34596                           
 34597                           ; Vector 47 : I2C2TX
 34598  000066  6DCD               	dw	_Default_ISR shr (0+2)
 34599                           
 34600                           ; Vector 48 : I2C2
 34601  000068  6DCD               	dw	_Default_ISR shr (0+2)
 34602                           
 34603                           ; Vector 49 : I2C2E
 34604  00006A  6DCD               	dw	_Default_ISR shr (0+2)
 34605                           
 34606                           ; Vector 50 : U2RX
 34607  00006C  6CD3               	dw	_UART2_rx_vect_isr shr (0+2)
 34608                           
 34609                           ; Vector 51 : U2TX
 34610  00006E  6CC9               	dw	_UART2_tx_vect_isr shr (0+2)
 34611                           
 34612                           ; Vector 52 : U2E
 34613  000070  6DCD               	dw	_Default_ISR shr (0+2)
 34614                           
 34615                           ; Vector 53 : U2
 34616  000072  6DCD               	dw	_Default_ISR shr (0+2)
 34617                           
 34618                           ; Vector 54 : TMR3
 34619  000074  621A               	dw	_TMR3_ISR shr (0+2)
 34620                           
 34621                           ; Vector 55 : TMR3G
 34622  000076  6DCD               	dw	_Default_ISR shr (0+2)
 34623                           
 34624                           ; Vector 56 : TMR4
 34625  000078  6DCD               	dw	_Default_ISR shr (0+2)
 34626                           
 34627                           ; Vector 57 : CCP2
 34628  00007A  6DCD               	dw	_Default_ISR shr (0+2)
 34629                           
 34630                           ; Vector 58 : Undefined
 34631  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 34632                           
 34633                           ; Vector 59 : CWG2
 34634  00007E  6DCD               	dw	_Default_ISR shr (0+2)
 34635                           
 34636                           ; Vector 60 : CLC2
 34637  000080  6DCD               	dw	_Default_ISR shr (0+2)
 34638                           
 34639                           ; Vector 61 : INT2
 34640  000082  6DCD               	dw	_Default_ISR shr (0+2)
 34641                           
 34642                           ; Vector 62 : Undefined
 34643  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 34644                           
 34645                           ; Vector 63 : Undefined
 34646  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 34647                           
 34648                           ; Vector 64 : Undefined
 34649  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 34650                           
 34651                           ; Vector 65 : Undefined
 34652  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 34653                           
 34654                           ; Vector 66 : Undefined
 34655  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 34656                           
 34657                           ; Vector 67 : Undefined
 34658  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 34659                           
 34660                           ; Vector 68 : Undefined
 34661  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 34662                           
 34663                           ; Vector 69 : Undefined
 34664  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 34665                           
 34666                           ; Vector 70 : TMR5
 34667  000094  6A0B               	dw	_TMR5_ISR shr (0+2)
 34668                           
 34669                           ; Vector 71 : TMR5G
 34670  000096  6DCD               	dw	_Default_ISR shr (0+2)
 34671                           
 34672                           ; Vector 72 : TMR6
 34673  000098  6D67               	dw	_TMR6_ISR shr (0+2)
 34674                           
 34675                           ; Vector 73 : CCP3
 34676  00009A  6DCD               	dw	_Default_ISR shr (0+2)
 34677                           
 34678                           ; Vector 74 : CWG3
 34679  00009C  6DCD               	dw	_Default_ISR shr (0+2)
 34680                           
 34681                           ; Vector 75 : CLC3
 34682  00009E  6DCD               	dw	_Default_ISR shr (0+2)
 34683                           
 34684                           ; Vector 76 : Undefined
 34685  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 34686                           
 34687                           ; Vector 77 : Undefined
 34688  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 34689                           
 34690                           ; Vector 78 : Undefined
 34691  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 34692                           
 34693                           ; Vector 79 : Undefined
 34694  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 34695                           
 34696                           ; Vector 80 : CCP4
 34697  0000A8  6DCD               	dw	_Default_ISR shr (0+2)
 34698                           
 34699                           ; Vector 81 : CLC4
 34700  0000AA  6DCD               	dw	_Default_ISR shr (0+2)
 34701  0000AC                     ivt0x8_undefint:
 34702                           	opt callstack 0
 34703  0000AC  00FF               	reset	
 34704                           
 34705                           	psect	text173
 34706  000000                     __ptext173:
 34707                           	opt callstack 0
 34708                           
 34709                           	psect	rparam
 34710  0000                     
 34711                           	psect	temp
 34712  000001                     btemp:
 34713                           	opt callstack 0
 34714  000001                     	ds	32
 34715  0000                     wtemp0	set	btemp
 34716  0000                     wtemp1	set	btemp+2
 34717  0000                     wtemp2	set	btemp+4
 34718  0000                     wtemp3	set	btemp+6
 34719  0000                     wtemp4	set	btemp+8
 34720  0000                     wtemp5	set	btemp+10
 34721  0000                     wtemp8	set	btemp+1
 34722  0000                     ttemp0	set	btemp
 34723  0000                     ttemp1	set	btemp+3
 34724  0000                     ttemp2	set	btemp+6
 34725  0000                     ttemp3	set	btemp+9
 34726  0000                     ttemp5	set	btemp+1
 34727  0000                     ttemp6	set	btemp+4
 34728  0000                     ttemp7	set	btemp+8
 34729  0000                     ltemp0	set	btemp
 34730  0000                     ltemp1	set	btemp+4
 34731  0000                     ltemp2	set	btemp+8
 34732  0000                     lltemp0	set	btemp
 34733  0000                     lltemp1	set	btemp+8
 34734  0000                     lltemp2	set	btemp+16
 34735  0000                     lltemp3	set	btemp+24
 34736                           tosu	equ	0x3FFF
 34737                           tosh	equ	0x3FFE
 34738                           tosl	equ	0x3FFD
 34739                           stkptr	equ	0x3FFC
 34740                           pclatu	equ	0x3FFB
 34741                           pclath	equ	0x3FFA
 34742                           pcl	equ	0x3FF9
 34743                           tblptru	equ	0x3FF8
 34744                           tblptrh	equ	0x3FF7
 34745                           tblptrl	equ	0x3FF6
 34746                           tablat	equ	0x3FF5
 34747                           prodh	equ	0x3FF4
 34748                           prodl	equ	0x3FF3
 34749                           indf0	equ	0x3FEF
 34750                           postinc0	equ	0x3FEE
 34751                           postdec0	equ	0x3FED
 34752                           preinc0	equ	0x3FEC
 34753                           plusw0	equ	0x3FEB
 34754                           fsr0h	equ	0x3FEA
 34755                           fsr0l	equ	0x3FE9
 34756                           wreg	equ	0x3FE8
 34757                           indf1	equ	0x3FE7
 34758                           postinc1	equ	0x3FE6
 34759                           postdec1	equ	0x3FE5
 34760                           preinc1	equ	0x3FE4
 34761                           plusw1	equ	0x3FE3
 34762                           fsr1h	equ	0x3FE2
 34763                           fsr1l	equ	0x3FE1
 34764                           bsr	equ	0x3FE0
 34765                           indf2	equ	0x3FDF
 34766                           postinc2	equ	0x3FDE
 34767                           postdec2	equ	0x3FDD
 34768                           preinc2	equ	0x3FDC
 34769                           plusw2	equ	0x3FDB
 34770                           fsr2h	equ	0x3FDA
 34771                           fsr2l	equ	0x3FD9
 34772                           status	equ	0x3FD8


Data Sizes:
    Strings     920
    Constant    492
    Data        1002
    BSS         1106
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     14      38
    BANK0           160      0     154
    BANK1           256      0     255
    BANK2           256      0     256
    BANK3           256     25     253
    BANK4           256      0     134
    BANK5           256      0     255
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_102(CODE[1]), STR_64(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_99(CODE[3]), STR_95(CODE[3]), STR_90(CODE[3]), STR_85(CODE[3]), 
		 -> STR_80(CODE[3]), STR_76(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_99(CODE[3]), STR_95(CODE[3]), STR_90(CODE[3]), STR_85(CODE[3]), 
		 -> STR_80(CODE[3]), STR_76(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 85
		 -> ct(STACK[3]), STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), 
		 -> STR_61(CODE[19]), STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), 
		 -> STR_57(CODE[19]), STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), 
		 -> STR_53(CODE[15]), STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), 
		 -> STR_49(CODE[19]), STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), 
		 -> STR_43(CODE[3]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[22]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    l	PTR const unsigned char  size(2) Largest target is 85
		 -> ct(STACK[3]), STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), 
		 -> STR_61(CODE[19]), STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), 
		 -> STR_57(CODE[19]), STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), 
		 -> STR_53(CODE[15]), STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), 
		 -> STR_49(CODE[19]), STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), 
		 -> STR_43(CODE[3]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[22]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> spin(CODE[120]), STR_47(CODE[9]), STR_46(CODE[12]), D.lcd(BIGRAM[288]), 
		 -> D(BIGRAM[290]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[6]), 
		 -> V(BANK2[189]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> spin(CODE[120]), STR_47(CODE[9]), STR_46(CODE[12]), D.lcd(BIGRAM[288]), 
		 -> D(BIGRAM[290]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[6]), 
		 -> V(BANK2[189]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_71(CODE[4]), STR_70(CODE[4]), STR_67(CODE[4]), STR_66(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_71(CODE[4]), STR_70(CODE[4]), STR_67(CODE[4]), STR_66(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[22]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[189]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[189]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5970_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[189]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[22]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[22]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 85
		 -> STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[22]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_47(CODE[9]), STR_46(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_3(CODE[6]), 
		 -> V(BANK2[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_47(CODE[9]), STR_46(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_3(CODE[6]), 
		 -> V(BANK2[189]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_47(CODE[9]), 
		 -> STR_46(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), 
		 -> STR_3(CODE[6]), V(BANK2[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4481tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_47(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_46(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[189]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[189]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1995spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1995spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0  373597
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                _eaDogM_WriteCommand
                          _esr_check
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8321
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         4     0      4      22
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            5     4      1    8646
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31190
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  186232
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   92863
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            66    10     56   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   62814
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   62550
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31159
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (2) _fabsf                                                8     4      4      47
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (3) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                             10 COMRAM     4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   35433
                                              0 BANK3     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   35343
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           2     2      0   35343
                         _StartTimer
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            66    10     56   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     322      69        9.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      86      13       52.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100     19      FD      11       98.8%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      E      26       1       60.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     541      58        0.0%
DATA                 0      0     863       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Dec 14 16:56:56 2019

                     _SPI1_Exchange8bit B4B2                __end_of_set_display_info B50C  
                                     _C 0100                                       _D 07FF  
                                     _H 00F3                                       _P 009E  
                                     _R 00C4                                       _S 02BD  
                                     _T FB4B                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler B232            __end_of_start_switch_handler B4B2  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FC53                  __end_of_FVR_Initialize B71A  
                           __CFG_LVP$ON 000000                                     l169 B622  
                                   l807 B4C0                                     l673 B09A  
                                   _GIE 01FE97                                     _abs AA5C  
                                   _pad 90FE                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize B5CE                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack B428                       _update_adc_result AD7E  
                         __CFG_BBEN$OFF 000000                   __size_of_Volts_to_SOC 0092  
                         _INT1_CallBack B3BC                            __CFG_ZCD$OFF 000000  
                                  l1000 ACFA                                    l1320 12A2  
                                  l3013 7BD2                                    l2118 53DA  
                                  l2039 657E                                    l1336 1890  
                                  l2154 123A                                    l2322 31D0  
                                  l1354 21EC                                    l1346 1930  
                                  l1338 1896                                    l1435 A780  
                       _timer3ReloadVal 0027                                    l1188 AD3A  
                                  l3044 AA9C                                    l3036 8124  
                                  l2236 6C9E                                    l1348 1AB6  
                                  l1349 1CB8                                    l1710 B508  
                                  l2183 066A                                    l3144 8FDC  
                                  l2272 57C0                                    l2257 65CC  
                                  l2098 915A                                    l3075 735C  
                                  l3411 77BC                                    l1653 ADD4  
                                  l2614 9A92                                    l2198 0B1A  
                                  l1670 931E                                    l1662 7878  
                                  l1823 7F8E                                    l1575 9E0E  
                                  l1663 79D4                                    l2625 885C  
                                  l2618 8788                                    l3426 A3C2  
                                  l1594 AE3E                                    l1579 A112  
                                  l1772 52F6                                    l2652 858A  
                                  l1926 A238                    _ADCC_StartConversion B63C  
                                  l3439 A33E                                    l1935 9638  
                                  l2904 4046                                    l1864 9832  
                                  l8000 4BFA                                    l2937 4E46  
                                  l2892 41B6                                    l8020 4C9C  
                                  l2973 39FA                                    l8110 3344  
                                  l8102 32FE                                    l8014 4C80  
                                  l8006 4C4E                                    l8120 3396  
                                  l8112 3374                                    l8024 4CC2  
                                  l8008 4C52                                    l8210 393A  
                                  l8034 4D0C                                    l8108 333E  
                                  l8060 4DF2                                    l8300 9030  
                                  l8206 38F4                                    l7510 3B18  
                                  l7502 3AB0                                    l8054 4DC2  
                                  l8038 4D12                                    l8310 90B0  
                                  l8224 39A8                                    l8216 3964  
                                  l7504 3AE0                                    l8048 4D86  
                                  l8226 39C2                                    l8090 3270  
                                  l7522 3B8A                                    l8066 4E1A  
                                  l8330 9A5C                                    l8402 8522  
                                  l8172 37EE                                    l8092 3276  
                                  l8084 3230                                    l7700 4196  
                                  l7612 3EC6                                    l7516 3B4A  
                                  l8068 4E2A                                    l9108 734C  
                                  l8252 8A04                                    l8404 8538  
                                  l9124 762E                                    l8182 3830  
                                  l8094 32A6                                    l7630 3FF6  
                                  l7606 3EAA                                    l7534 3BF2  
                                  l7526 3BA0                                    l8342 8746  
                                  l8246 89EE                                    l8318 90E4  
                                  l8334 9A90                                    l8326 9A1A  
                                  l9126 769A                                    l8430 824E  
                                  l8192 387A                                    l7608 3EBC  
                                  l7616 3EF8                                    l7528 3BD0  
                                  l8360 885A                                    l8352 8824  
                                  l9072 710C                                    l7464 9EE2  
                                  l8280 8AFE                                    l8272 8ACA  
                                  l8178 380A                                    l9090 71E6  
                                  l9082 71A2                                    l9074 712E  
                                  l7466 9F04                                    l8258 8A24  
                                  l7810 61AC                                    l8418 817C  
                                  l8450 8BFE                                    l8442 8B52  
                                  l8196 3880                                    l7652 4086  
                                  l7628 3FD0                                    l7580 3DD4  
                                  l7564 3D30                                    l7492 3A5A  
                                  l8348 87D6                                    l9092 720A  
                                  l7900 744C                                    l8292 9006  
                                  l7804 6114                                    l7662 40AE  
                                  l7646 4068                                    l7638 402A  
                                  l7574 3DA2                                    l9094 7248  
                                  l7734 AA8C                                    l7814 621A  
                                  l7806 6164                                    l7648 407A  
                                  l7584 3DDE                                    l9088 71CE  
                                  l8296 9018                                    l8368 AA32  
                                  l7752 80C6                                    l7832 A32E  
                                  l9520 B02E                                    l7666 40B4  
                                  l7578 3DC2                                    l7498 3A9A  
                                  l8466 A91A                                    l9098 72B0  
                                  l8394 84F6                                    l8378 8474  
                                  l7692 4156                                    l7588 3E0E  
                                  l7940 49B2                                    l7860 6F6E  
                                  l7908 74F8                                    l8396 8512  
                                  l7748 80C2                                    l7694 4166  
                                  l7678 4112                                    l7934 496C  
                                  l7854 6F28                                    l7758 811C  
                                  l7790 5FF6                                    l9528 A956  
                                  l7688 413E                                    l7960 4A90  
                                  l7928 492C                                    l7872 7040  
                                  l7848 6ED4                                    l7776 A3B2  
                                  l7954 4A4A                                    l7938 4982  
                                  l9570 7AD0                                    l9378 B162  
                                  l9466 AE48                                    l7980 4B22  
                                  l7972 4B08                                    l7948 4A0A  
                                  l9580 7B32                                    l9564 7A8E  
                                  l9556 7A22                                    l7892 73C4  
                                  l7990 4BB2                                    l7966 4ACE  
                                  l7958 4A60                                    l9566 7A9C  
                                  l9576 7AFE                                    l9568 7AB2  
                                  l9578 7B1C                                    l9588 7B50  
                                  l7998 4BE8                                    l9598 7BB2  
                                  STR_1 FF51                                    STR_2 FFA3  
                                  STR_3 FFD1                                    l9970 A982  
                                  STR_4 FF1E                                    STR_5 FDF1  
                                  STR_6 FDF1                                    STR_7 FDF1  
                                  l9974 A9B4                                    STR_8 FF0C  
                                  STR_9 FD08                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u5200 9F32                                    u6010 AFE2  
                                  u6020 AFE4                                    u6110 7078  
                                  u5230 AFB2                                    u5207 9F24  
                                  u5400 3E26                                    u6040 6ECE  
                                  u6200 7478                                    u5240 AFB4  
                                  u6130 70CA                                    _T6PR 003F93  
                                  u5500 4018                                    u5340 3D56  
                                  u6060 6F24                                    u6220 7530  
                                  u7020 8540                                    _PMD0 0039C0  
                                  _PMD1 0039C1                                    u5350 3D76  
                                  u7110 8B4C                                    _PMD2 0039C2  
                                  u5351 3D70                                    u6071 6F2E  
                                  _PMD3 0039C3                                    u5600 4102  
                                  u6080 6F68                                    u6240 7582  
                                  u6160 73BE                                    u7040 856A  
                                  u7120 8B7E                                    _PMD4 0039C4  
                                  _PMD5 0039C5                                    u6090 6F9A  
                                  _PMD6 0039C6                                    u7051 813C  
                                  _PMD7 0039C7                                    u5540 408C  
                                  u5460 3EEE                                    u6420 4D04  
                                  u6180 7414                                    u7060 8176  
                                  u7140 8C36                                    u5605 40F2  
                                  u5630 4122                                    u5390 3E06  
                                  u6190 7446                                    u7070 81A8  
                                  u5560 40A6                                    u5368 3D78  
                                  u7160 A8F6                                    u5800 8116  
                                  u5465 3EDE                                    u7170 A916  
                                  u5730 AA70                                    u7090 8286  
                                  u5395 3DF6                                    u6700 394E  
                                  u6460 4D60                                    u6380 4C7A  
                                  u5740 8046                                    u6605 37A8  
                                  u6470 4D9A                                    u8310 719E  
                                  u5910 60BA                                    u5830 A370  
                                  u5670 AF82                                    u6640 3872  
                                  u9200 7DF2                                    u6480 4DD6  
                                  u5840 A372                                    u5680 AF84  
                                  u6465 4D50                                    u5745 803C  
                                  u6570 3384                                    u9114 4EBE  
                                  u8330 72F6                                    u5930 6192  
                                  u9115 4EB8                                    u5915 60B0  
                                  u9035 B668                                    u8340 72F8  
                                  u6820 905C                                    u5860 5F8E  
                                  u8420 7762                                    u9036 B66A  
                                  u9045 B658                                    u9134 5094  
                                  u6750 8A50                                    u5790 8114  
                                  u5870 5FDA                                    u8430 7790  
                                  u9046 B65A                                    u9135 508E  
                                  u5935 6188                                    u6680 38CE  
                                  u6840 90D0                                    u5960 ABF2  
                                  u9400 A1DE                                    u6585 3518  
                                  u5785 80F6                                    u5865 5F84  
                                  u8425 775C                                    u6690 3908  
                                  u9154 5162                                    u9074 4E6C  
                                  u6770 8AEA                                    u5970 ABF4  
                                  u6595 35E0                                    u9155 515C  
                                  u9075 4E66                                    u8427 774E  
                                  u9180 518C                                    u6940 AA2E  
                                  u8380 76C8                                    u5980 A2EC  
                                  u6685 38BE                                    u8437 7782  
                                  u9174 5184                                    u9094 4E9C  
                                  u6950 8454                                    u5990 A2EE  
                                  u9430 A224                                    u9175 517E  
                                  u9095 4E96                                    u5895 6014  
                                  u6880 9A8C                                    u6960 8468  
                                  u5896 601A                                    u5897 6028  
                                  u9290 B47C                                    u6970 84A2  
                                  u9418 A1E0                                    u6955 844A  
                                  u8387 76BA                                    u8815 AC2E  
                                  u6975 8498                                    u9296 B47E  
                                  u8920 7B46                                    u9448 A226  
                                  _PLLR 01CEE0                                    u8960 A598  
                                  u8985 A5CC                                    u8986 A5CE  
                                  u8978 A59A                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR B074  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0394  
                                  _cp_h FC63                                    _cp_l FC5F  
                                  _atoi 70F2                                    _ctoa A23C  
                                  _main 1244                                    _dtoa 52FC  
                                  _nanf A6B6                                    _seed 01F7  
                                  _prec 0023                                    _nout 00C0  
                                  _spin FBDB                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 6BB4                                    btemp 0001  
                                  _utoa 6588                                    _xtoa 577C  
                __end_of_check_adc_scan B702                           ___fpclassifyf 7F98  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 002B  
             __end_of_SPI1_Exchange8bit B4D0               __size_of_clear_hid_pflags 0024  
                       _TMR3_Initialize AB74             __size_of_set_load_relay_one 0010  
           __size_of_set_load_relay_two 0010                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr B2FC                            ___param_bank 000000  
                    ?_UART1_rx_vect_isr 0039                        __end_of_INT0_ISR B6AA  
                      __end_of_INT1_ISR AD7E          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma 9E16           __end_of_OSCILLATOR_Initialize B628  
                                 l10020 4E52                                   l10110 7E54  
                                 l10040 507A                                   l10106 7E40  
                                 l10026 4E82                                   l10220 8C80  
                                 l10060 5228                                   l10052 5148  
                                 l10036 4FA0                                   l10222 8C86  
                                 l10230 8CC8                                   l10224 8C94  
                                 l10216 8C6A                                   l10048 50AC  
                                 l10144 ADEA                                   l12000 5A02  
                                 l10402 B096                                   l10218 8C7A  
                                 l10066 52C4                                   l10074 52D6  
                                 l10330 A066                                   l10244 8D7A  
                                 l10236 8D00                                   l10228 8C9C  
                                 l12110 27CA                                   l12102 26DE  
                                 l10326 9FFE                                   l12016 5AEC  
                                 l10256 A1F2                                   l10098 7E14  
                                 l11402 9FAC                                   l12202 2FC6  
                                 l12114 281E                                   l12050 2310  
                                 l10186 AD9E                                   l10610 638A  
                                 l10602 635E                                   l10428 ACE2  
                                 l11412 9152                                   l12052 234A  
                                 l10604 6362                                   l10390 B57C  
                                 l10446 AD22                                   l10542 83FC  
                                 l11422 91EA                                   l11414 9164  
                                 l11510 5414                                   l11502 53CA  
                                 l12222 3158                                   l12134 2A30  
                                 l12126 2978                                   l12054 2360  
                                 l10630 640C                                   l10622 63E4  
                                 l10614 6396                                   l10550 984E  
                                 l11408 912A                                   l11600 0258  
                                 l12216 30FE                                   l12072 2492  
                                 l12232 317C                                   l11418 91A0  
                                 l11514 5432                                   l11610 02FC  
                                 l12226 315C                                   l12138 2A64  
                                 l12074 24CC                                   l11450 6A1E  
                                 l10714 9546                                   l10820 A410  
                                 l10708 5ECC                                   l11524 5644  
                                 l11428 994C                                   l12092 2646  
                                 l12076 24E2                                   l11444 6960  
                                 l10652 6554                                   l10556 98F4  
                                 l10814 A400                                   l11630 0406  
                                 l12158 2BC4                                   l12318 9236  
                                 l10582 62D8                                   l10726 95A2  
                                 l11544 56F6                                   l11720 0A48  
                                 l11632 0470                                   l12168 2C72  
                                 l11464 6B36                                   l11456 6A88  
                                 l12272 9E6E                                   l12504 7848  
                                 l10664 9B60                                   l10736 9612  
                                 l12362 42C8                                   l10754 ACB8  
                                 l11386 8EF2                                   l11730 0B34  
                                 l11706 0926                                   l11626 0396  
                                 l11618 032A                                   l11562 00AC  
                                 l12178 2D94                                   l10594 632A  
                                 l10578 62B6                                   l11476 A25A  
                                 l11548 5732                                   l11660 0594  
                                 l11652 057C                                   l11636 04D2  
                                 l12188 2E4A                                   l10668 9B9E  
                                 l10588 62FA                                   PRLOCK 0039EF  
                                 l12390 470A                                   l12374 4550  
                                 l12358 4286                                   l11398 9F6E  
                                 l11478 A286                                   l11806 0FD6  
                                 l11670 0602                                   l11654 058E  
                                 l11574 00F0                                   l11582 0146  
                                 l11902 6E32                                   l12286 9CEC  
                                 l12518 7970                                   l10598 6336  
                                 l12710 1922                                   l12702 18FC  
                                 l12384 4678                                   l11808 0FF0  
                                 l11744 0C32                                   l11728 0B12  
                                 l11648 0554                                   l11592 01EA  
                                 l12288 9D2E                                   l12624 146E  
                                 l12394 4720                                   l12378 45CE  
                                 l11818 1092                                   l11690 06F0  
                                 l11594 0216                                   l12722 1E9A  
                                 l12388 4702                                   l11844 119A  
                                 l11828 10E2                                   l11756 0CBA  
                                 l11764 0D24                                   l11772 0D90  
                                 l11780 0EA2                                   l11668 05F6  
                                 l11596 022C                                   l11924 6618  
                                 l11916 65BC                                   l12572 12AA  
                                 l11686 06B8                                   l11934 680E  
                                 l12726 1EFC                                   l12670 16C6  
                                 l12574 12BC                                   l12566 1284  
                                 l11792 0F3A                                   l11696 077A  
                                 l11880 6CD4                                   l11864 6C20  
                                 l12736 2078                                   l12752 2110  
                                 l12680 175C                                   l12568 128C  
                                 l11962 57EA                                   l12770 217E  
                                 l12762 2154                                   l12738 20A2  
                                 l12690 18C8                                   l11884 6D10  
                                 l11956 57B0                                   l12780 21C2  
                                 l12748 20EC                                   l11894 6DCA  
                                 l12790 221A                                   l11888 6D40  
                                 l11992 597C                                   l11976 5886  
                                 l11968 5826                                   l12776 219C  
                                 l12768 2166                                   l12688 189A  
                                 l11898 6DF6                         __end_of___aodiv 70F2  
                          _Volts_to_SOC 9FF6                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 41C0  
                                 _ADCLK 003EFF                         __end_of___aomod 75A6  
                                 _ADPCH 003EF1                         __end_of___fldiv 4E50  
                                 _ADREF 003EFD                         __end_of___awdiv 8B18  
                       __end_of___flneg AA5C                                   STR_10 FD35  
                                 STR_11 FD4B                                   STR_12 FF2F  
                                 STR_21 FF62                                   STR_13 FF40  
                                 STR_14 FF73                                   STR_30 FEE6  
                                 STR_22 FE9A                                   STR_23 FEC0  
                                 STR_31 FE28                                   STR_15 FD61  
                                 STR_40 FF84                                   STR_24 FEAD  
                                 STR_32 FE3B                                   STR_16 FD1F  
                                 STR_41 FF84                                   STR_25 FE61  
                                 STR_33 FE4E                                   STR_17 FCBC  
                         __CFG_WDTE$OFF 000000                                   STR_42 FF62  
                                 STR_50 FFBE                                   STR_26 FE87  
                                 STR_34 FD9F                                   STR_18 FCD6  
                                 STR_51 FFBE                                   STR_43 FFFC  
                                 STR_19 FF84                                   STR_27 FE74  
                                 STR_35 FDDB                                   STR_44 FFF9  
                                 STR_52 FF94                                   STR_28 FEF9  
                                 STR_36 FD8B                         __end_of___awmod 90FE  
                                 STR_53 FF94                                   STR_29 FED3  
                                 STR_37 FD77                                   STR_54 FF94  
                                 STR_70 FFDB                                   STR_46 FFB2  
                                 STR_38 FDB3                                   STR_71 FFE3  
                                 STR_47 FFC8                                   STR_39 FDC7  
                                 STR_55 FCF0                                   STR_64 FCBB  
                                 STR_80 FFF0                                   STR_48 FE02  
                                 _ADRPT 003EEC                                   STR_49 FE02  
                                 STR_57 FE15                                   STR_65 FC67  
                                 STR_90 FFF3                                   STR_74 FFEA  
                                 STR_66 FFD7                                   STR_58 FDEF  
                                 STR_83 FFED                                   STR_67 FFDF  
                                 STR_76 FFEA                                   STR_85 FFED  
                                 STR_93 FFF6                                   STR_78 FFF0  
                                 STR_95 FFF6                                   STR_88 FFF3  
                       __end_of___flmul 3A04                                   STR_97 FFE7  
                                 STR_99 FFE7                         __end_of___flsub AAE8  
                       __end_of___fltol 8594                                   u10310 8EE6  
                                 u11110 10B8                                   u10330 8F62  
                                 u11130 116E                                   u11050 0EE4  
                                 u11210 6D36                                   u11140 1170  
                                 u11220 6D7C                                   u11301 6850  
                                 u10510 539E                                   u11310 6866  
                                 u12030 79C0                                   u12110 178A  
                                 u11311 6864                                   u10600 56B6  
                                 u11320 687A                                   u11400 58D4  
                                 u12040 79C2                                   u12200 20F6  
                                 u10530 53B0                                   u11250 6E58  
                                 u11330 687E                                   u10450 6BAA  
                                 u12210 2108                                   u11227 6D6E  
                       __end_of___lodiv 82AE                                   u10620 56CC  
                                 u10700 0196                                   u11500 5A7C  
                                 u11420 5932                                   u10550 5400  
                                 u10390 99C6                                   u11270 65A2  
                                 u11430 5934                                   u11350 5796  
                                 u12206 20F8                                   u10560 5658  
                                 u10480 532C                                   u12216 210A  
                                 u10490 532E                                   u10810 0562  
                                 u10730 02A6                                   u11450 59FE  
                                 u11610 252A                                   u12090 158C  
                                 _U1P1H 003DED                                   u10571 5688  
                                 u10580 569E                                   u10740 02A8  
                                 u10660 00DA                                   u11460 5A1E  
                                 u11380 587E                                   u11700 28A6  
                                 u11620 252C                                   _U1P2H 003DEF  
                                 u10581 569C                                   u10397 99B8  
                                 u10590 56B2                                   u11390 58D2  
                                 u11630 2552                                   u12190 20DC  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 u11471 5A4E                                   u11455 59E0  
                                 _T3CLK 003FA9                                   u10840 05C6  
                                 u11480 5A64                                   u11800 2E9E  
                                 u11560 23A8                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   u11481 5A62  
                                 u10690 0194                                   u11490 5A78  
                                 u11730 2B1E                                   u11570 23AA  
                                 _U1P3L 003DF0                                   u10780 050E  
                                 u11820 304E                                   u11740 2B20  
                                 u11580 23D0                                   u12196 20DE  
                                 u10950 0A18                                   _U2P1L 003DD4  
                                 u10880 0648                                   u11680 2732  
                                 u11840 9E4E                                   _T3CON 003FA6  
                                 _U2P2L 003DD6                                   _U2P3L 003DD8  
                                 _T5CLK 003F9D                         __end_of___lomod 8C58  
                                 _T2HLT 003FAD                                   _T5CON 003F9A  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 00AB  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 003E  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR3H 003FA5                                   _TMR5H 003F99  
                                 _TMR3L 003FA4                                   _TMR5L 003F98  
             __end_of_update_adc_result ADB8                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR B734  
               __size_of_clear_adc_scan 0006       __size_of_TMR3_SetInterruptHandler 0028  
     __size_of_TMR6_SetInterruptHandler 0028                           __CFG_WRTB$OFF 000000  
                      __end_of_TMR3_ISR 89CA                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR A886  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR B5B6  
                          _DMA1CON1bits 003BFD                                   _fabsf 9C12  
                                 _flags 0025                __size_of_calc_model_data 03A2  
                          _DMA2CON0bits 003BDC                            _DMA2CON1bits 003BDD  
                                 _fputc 8EC2              __size_of_send_lcd_cmd_long 0028  
                       __end_of_isalpha ABFE                                   _fputs 9F5E  
                       __end_of_isdigit AFEE                         __end_of_ivln2_h FC5F  
                    __CFG_MCLRE$EXTMCLR 000000                                   _srand AE92  
                                 _width 0021                                   _putch B580  
                       __end_of_islower AF8E                         __end_of_isspace A92A  
              _INT1_SetInterruptHandler B25A                         __end_of_isupper AFBE  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0001                                   ltemp1 0005  
                                 ltemp2 0009                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0001                                   ttemp1 0004  
                                 ttemp2 0007                                   ttemp3 000A  
                                 ttemp5 0002                                   ttemp6 0005  
                                 ttemp7 0009                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler B1E2             _UART1_SetRxInterruptHandler B1BA  
                                 wtemp0 0001                                   wtemp1 0003  
                                 wtemp2 0005                                   wtemp3 0007  
                                 wtemp4 0009                                   wtemp5 000B  
                                 wtemp8 0002                         __end_of_sprintf 953A  
                       __end_of_tolower A3CC                         __end_of_strncmp 77C6  
                       __end_of_toupper A348               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr B324                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize AB2E                   __end_of_ringBufS_init B142  
                       __initialization 9322                       _UART2_rx_vect_isr B34C  
                          __end_of_cp_h FC67                            __end_of_cp_l FC63  
                          __end_of_atoi 7366                            __end_of_ctoa A2C4  
                          __end_of_main 222E                            __end_of_dtoa 577C  
                          __end_of_nanf A718                            __end_of_spin FC53  
                          __end_of_stoa 6E72                            __end_of_utoa 68C8  
                          __end_of_xtoa 5B36                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0039                 __end_of_TMR2_Initialize B5E6  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button ACC0  
              _TMR5_SetInterruptHandler B20A                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E                   _TMR3_InterruptHandler 00A2  
                     _port_data_dma_ptr B6C4                      esr_check@esr_state 002D  
                   ??_UART2_rx_vect_isr 003E                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize B0A0                         _PWM8_Initialize B5FC  
                      _UART1_Initialize AAE8                       _UART2_tx_vect_isr B324  
                    _UART2_Transmit_ISR B074                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan A5F0                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue ABFE                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0039  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _T3GATE 003FA8  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _T3GCON 003FA7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  i1l1017 A878  
                                _RB6PPS 003A0E                                  i1l1205 8932  
                  _start_switch_handler B492                                  _RC5PPS 003A15  
                                _ODCONA 003A42                                  _ODCONB 003A52  
                                _ODCONC 003A62                                  _RC6PPS 003A16  
                                _ODCOND 003A72                                  _ODCONE 003A82  
                                _ODCONF 003A92                 __end_of_TMR3_Initialize ABBA  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright B68C                                  _SCANPR 0039F7  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  u902_20 AF02  
                                u902_26 AF04                                  u930_28 8C70  
                                u933_20 8C90                                  u933_21 8C8A  
                                u937_24 8D70                                  u937_25 8D6C  
                  __size_of_hid_display 0102                                  u963_48 B45C  
                                u955_48 B438                                  u957_28 B3CC  
                                u966_28 B3F0                                  u995_44 A430  
                                u995_45 A42A                        __end_of___xxtofl 7BDC  
 __end_of_ADCC_DischargeSampleCapacitor B6FA  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor B6F2                __end_of_send_lcd_cmd_dma A8D8  
                       _TMR3_WriteTimer AD00                     ??_UART2_tx_vect_isr 003E  
             __end_of_UART2_rx_vect_isr B374              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize B6BA                        _UART2_Initialize A718  
                                _WaitMs AE26                         _conv_raw_result 4E50  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 8704                                  ___fleq 99D8  
                     _ADCC_ThresholdISR A520                          __CFG_STVREN$ON 000000  
                        _ringBufS_flush A088                                  _efgtoa 0000  
                                _floorf 5ED8                      ?_ADCC_ThresholdISR 0039  
                                _memset 68C8                    __size_of_help_button 0038  
                                clear_0 93B6                                  clear_1 93CA  
                                clear_2 93DC                                  clear_3 93E8  
                                clear_4 93F4                                  clear_5 9400  
                                clear_6 940C                                  clear_7 9418  
             __end_of_port_data_dma_ptr B6CE                                  _printf A654  
                    _eaDogM_WriteString 9E16                                  _strcpy 9904  
                             ?_ADCC_ISR 0039                                  _strlen 9EBC  
                    __size_of_TimerDone 0028                            __pdataBIGRAM 05FF  
                       _ADCC_Initialize A4B4                          _PMD_Initialize B628  
            __size_of_update_adc_result 003A               __end_of_UART2_tx_vect_isr B34C  
                                lltemp0 0001                                  lltemp1 0009  
                                lltemp2 0011                                  lltemp3 0019  
                   ??_ADCC_ThresholdISR 0039                  __end_of_start_adc_scan A654  
                          __mediumconst FA7A                                  preinc2 003FDC  
                __size_of_init_port_dma 0030                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay A7D0                        __end_of_spinners 9904  
                      __end_of_vfprintf 9D6C                              _StartTimer AC40  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize AB74  
                     _SYSTEM_Initialize A9CA                              __accesstop 0060  
               __end_of__initialization 942A                               ?_INT0_ISR 0039  
                             ?_INT1_ISR 0039                    __end_of_display_help B712  
                  __end_of_display_info B70A               __end_of_CLKREF_Initialize B6C4  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0028  
                       _TMR5_WriteTimer ACC0                   _set_temp_display_help B66E  
                      _clear_hid_pflags B398                   __end_of_TMR3_CallBack B428  
             __end_of_ADCC_ThresholdISR A58A                      __size_of_calc_bsoc 0716  
                __end_of_ringBufS_flush A11A                          __pcstackCOMRAM 0039  
                            ___inthi_sp 10C2                              ___intlo_sp 1861  
                          __pidataBANK0 ADF0                            __pidataBANK1 963C  
                          __pidataBANK2 9A9C             __size_of_send_port_data_dma 0052  
                         __end_of_fabsf 9CC0                               ?_TMR3_ISR 0039  
                             ?_TMR5_ISR 0039                               ?_TMR6_ISR 0039  
                        ivt0x8_undefint 00AC                           __end_of_fputc 8FE6  
                         __end_of_fputs 9FF6                           __end_of_srand AEC6  
                 __end_of_TMR5_CallBack B404                           __end_of_putch B59A  
               __end_of_PWM8_Initialize B612                 __end_of_TMR6_Initialize B0CA  
                     _adc_int_t_handler A3CC                  __end_of_PMD_Initialize B63C  
                            __end_of_bp FC5B                              ??_ADCC_ISR 0039  
                 __end_of_TMR6_CallBack B470             __size_of_EXT_INT_Initialize 0034  
                __size_of_calc_ror_data 0174                           _DMA1_DMAA_ISR B6DC  
                 TMR3_ISR@CountCallBack 00C2                          _clear_adc_scan B71A  
                    __size_of_hid_input 0090                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 00B7               __end_of_SYSTEM_Initialize AA14  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
               __end_of_TMR3_WriteTimer AD40                              __pbssBANK0 0060  
                            __pbssBANK1 01F7                              __pbssBANK2 02BD  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            __pbssBANK5 0500                              _check_help 77C6  
               __end_of_conv_raw_result 52FC                      __size_of_esr_check 0344  
                 _INT0_InterruptHandler 00BD                              ??_INT0_ISR 0039  
                            ??_INT1_ISR 003F                       __end_of_TimerDone B16A  
                      _DMA1_DMADCNT_ISR B6D0                      __size_of_init_bsoc 0170  
            __size_of_UART2_rx_vect_isr 0028                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01BC                           _init_port_dma AF2E  
                 __end_of_wait_lcd_done B564        __end_of_TMR3_SetInterruptHandler B25A  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler B20A  
                            ??_TMR3_ISR 03E4                 __end_of_ADCC_Initialize A51E  
                            ??_TMR5_ISR 0043               __end_of_adc_int_t_handler A44A  
                            ??_TMR6_ISR 003E                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9    __end_of_ADCC_SetADTIInterruptHandler B2D2  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler B2AA  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
            __size_of_port_data_dma_ptr 000A                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR B564  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan B720                          ?_DMA1_DMAA_ISR 0039  
                      _DMA1_DMASCNT_ISR B6AC                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001E                                 _U1ERRIR 003DF9  
                               _U2ERRIE 003DE2                                 _U2ERRIR 003DE1  
                               u1192_20 4670                                 u1194_20 4718  
                               u1196_28 B414                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0039              __size_of_UART2_tx_vect_isr 0028  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0FAC  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                     __end_of_calc_bsoc 48D6                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch B01C                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer AD00                 __size_of_switch_handler 013C  
                    __size_of_stop_bsoc 0006              __end_of_set_load_relay_one B66E  
            __end_of_set_load_relay_two B65E       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                           _calc_ror_data 82AE  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 006A                           _mode_lamp_dim B5B6  
                               __Lparam 0000                __end_of_UART1_Initialize AB2E  
                     __end_of_hid_input A23C                         __size_of_WaitMs 0036  
                       __size_of___flge 0162                         __size_of___fleq 00C4  
                               ___aodiv 6E72                                 ___fladd 3A04  
                               ___aomod 7366                                 ___fldiv 48D6  
                               ___awdiv 89CA                                 ___flneg AA14  
                               ___awmod 8FE6                                 ___flmul 31DA  
                               ___flsub AAA2                                 ___fltol 8422  
                               ___lodiv 812E                                 ___lomod 8B18  
             __end_of_UART1_Receive_ISR B580                         __size_of_efgtoa 1244  
                       __size_of_floorf 036C                    __end_of_init_display 981E  
                               __pcinit 9322                __end_of_mode_lamp_bright B69A  
                       __size_of_memset 02EC                __size_of_adc_int_handler 0002  
                   _eaDogM_WriteCommand B67E                                 __ramtop 2000  
                               __ptext0 1244                                 __ptext1 B374  
                               __ptext2 B492                                 __ptext3 AE92  
                               __ptext4 981E                                 __ptext5 AF2E  
                               __ptext6 9734                                 __ptext7 B0CA  
                               __ptext8 B0F2                                 __ptext9 B4B2  
                     __end_of_esr_check 6588                       _UART2_Receive_ISR B52A  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize B612                                 us614999 70DC  
                               us710999 8298                            __size_of_abs 0046  
                               us625999 7594                                 us715999 8C48  
                          __size_of_pad 0114                       __end_of_init_bsoc 8704  
                               _isalpha ABBA                                 _isdigit AFBE  
                               _ivln2_h FC5B                               _T3CONbits 003FA6  
                               _mode_sw 002F                       __end_of_lp_filter 7F98  
                               _islower AF5E                                 _isspace A8D8  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
              __end_of_UART2_Initialize A776                                 _isupper AF8E  
            __size_of_SYSTEM_Initialize 004A                                 _sprintf 9430  
                               _tolower A348                   __size_of_display_help 0008  
                               _utctime 0096                   __size_of_display_info 0008  
                               _strncmp 75A6                                 _toupper A2C4  
                  end_of_initialization 942A               __size_of_convert_adc_data 00B8  
                    _check_enter_button AC80                               i1u1205_20 8928  
                             i2u1000_48 A556                               i2u1000_49 A56A  
   __end_of_UART2_SetRxInterruptHandler B1BA             _UART2_SetRxInterruptHandler B192  
                             i2u1002_48 B310                               i2u1004_48 B338  
                             i2u1006_48 B360                       __end_of_set_vterm B4EE  
                     __end_of_vfpfcnvrt 31DA                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 007E                     __size_of_StartTimer 0040  
                     __end_of_start_lcd B72C               __end_of_UART2_Receive_ISR B548  
                        wdtdelay@dcount 009A                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 003F                   _INT1_InterruptHandler 00BA  
                             _PORTBbits 003FCB                       __end_of_stop_bsoc B732  
              _TMR3_SetInterruptHandler B232                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler B1E2                            _display_help B70A  
                 _TMR5_InterruptHandler 00A5                            _display_info B702  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags B3BC  
                     __size_of_ADCC_ISR 002C     __end_of_ADCC_SetADIInterruptHandler B2FA  
           _ADCC_SetADIInterruptHandler B2D2                              _update_lcd 9212  
                       _calc_model_data 5B36                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                              _static_soc B374  
                       _DMA1_Initialize A44A                              _start_bsoc B470  
                       _SPI1_Initialize B5E6                   __end_of_get_vterm_ptr B01C  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs AE5C            __end_of_INTERRUPT_Initialize A5F0  
                            _vterm_dump 8D94                          __end_of___flge 8866  
                        __end_of___fleq 9A9C    __end_of_INT0_DefaultInterruptHandler B740  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler B73E  
            __size_of_UART1_Receive_ISR 001C                         _DMA2_Initialize A7D0  
                         __pidataBIGRAM 7BDC                          __end_of_efgtoa 1244  
                     __size_of_TMR3_ISR 0162                       __size_of_TMR5_ISR 005A  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 6244             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 007A                          __end_of_memset 6BB4  
                        __end_of_printf A6B6                __end_of_DMA1_DMADCNT_ISR B6DA  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack B44C  
                        __end_of_strcpy 99D8                          __end_of_strlen 9F5E  
                   start_initialization 9322    __end_of_TMR5_DefaultInterruptHandler AF2E  
 __size_of_TMR5_DefaultInterruptHandler 0034            _TMR5_DefaultInterruptHandler AEFA  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs AAA2  
                 __end_of_INT1_CallBack B3E0               __size_of_set_display_info 001E  
                           __end_of_pad 9212                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd B11A                          _switch_handler 8C58  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 006C                   __end_of___fpclassifyf 812E  
                         _uart2RxBuffer 0500                __end_of_DMA1_DMASCNT_ISR B6BA  
                         _uart2TxBuffer 0354                          _DMA1_DMAOR_ISR B6E8  
                   __end_of_hid_display 963C              __end_of_send_port_data_dma A97C  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone B142  
                         _ringBufS_init B11A                             __pdataBANK0 00C4  
                           __pdataBANK1 0100                             __pdataBANK2 0200  
            __size_of_UART2_Receive_ISR 001E                     __size_of_get_switch 002C  
            __end_of_EXT_INT_Initialize AEFA                 __end_of_calc_model_data 5ED8  
                   __end_of_help_button ADF0         __end_of_eaDogM_WriteStringAtPos AE92  
                   __end_of_BVSOC_TABLE FB4B                    calc_model_data@bcror 008E  
                           __pbssBIGRAM 07FF                 __end_of_DMA1_Initialize A4B4  
                  calc_model_data@bvror 0092                             __pbssCOMRAM 0021  
      __end_of_INT0_SetInterruptHandler B2AA                           __pcstackBANK3 03E4  
              __size_of_TMR2_Initialize 0018                  __size_of_TMR3_CallBack 0024  
                __end_of_switch_handler 8D94                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize B5FC                _UART1_RxInterruptHandler 00B1  
              _UART2_TxInterruptHandler 00B4                               __end_of_T FBDB  
                      _convert_adc_data 9B5A                               _calc_bsoc 41C0  
             __size_of_ringBufS_put_dma 00AA                            _init_display 9734  
                __end_of_DMA1_DMAOR_ISR B6F2                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 00A8                      calc_ror_data@bcror 0086  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize A82A  
                    calc_ror_data@bvror 008A                  _PIN_MANAGER_Initialize A11A  
              __size_of_TMR3_Initialize 0046                    __end_of_wait_lcd_set B726  
                         __pmediumconst FA7A                               __ptext100 5B36  
                             __ptext101 B72C                               __ptext110 B192  
                             __ptext102 B470                               __ptext111 AAE8  
                             __ptext103 7DDC                               __ptext120 B5E6  
                             __ptext112 B1BA                               __ptext104 AAA2  
                             __ptext121 B5FC                               __ptext113 B0A0  
                             __ptext105 3A04                               __ptext130 A7D0  
                             __ptext122 B628                               __ptext114 B1E2  
                             __ptext106 31DA                               __ptext131 A44A  
                             __ptext123 A11A                               __ptext115 AB2E  
                             __ptext107 A9CA                               __ptext140 A82C  
                             __ptext132 B6BA                               __ptext124 B612  
                             __ptext116 B20A                               __ptext108 A718  
                             __ptext141 ACC0                               __ptext133 A4B4  
                             __ptext125 A58A                               __ptext117 AB74  
                             __ptext109 B16A                               __ptext150 B6C4  
                             __ptext142 B3E0                               __ptext134 B2AA  
                             __ptext126 B712                               __ptext118 B232  
                             __ptext151 B69C                               __ptext143 AEFA  
                             __ptext135 B2D2                               __ptext127 AEC6  
                             __ptext119 B5CE                               __ptext160 B2FC  
                             __ptext152 B428                               __ptext144 8868  
                             __ptext136 AD40                               __ptext128 B25A  
                             __ptext161 B564                               __ptext153 B73E  
                             __ptext145 AD00                               __ptext137 B3BC  
                             __ptext129 B282                               __ptext170 B6D0  
                             __ptext162 B324                               __ptext154 B734  
                             __ptext146 B404                               __ptext138 B73A  
                             __ptext171 B6DC                               __ptext163 B074  
                             __ptext155 B048                               __ptext147 B73C  
                             __ptext139 8C58                               __ptext172 B6E8  
                             __ptext164 B34C                               __ptext156 A3CC  
                             __ptext148 41C0                               __ptext173 0000  
                             __ptext165 B52A                               __ptext157 B740  
                             __ptext149 A92A                               __ptext166 B59C  
                             __ptext158 B742                               __ptext167 B44C  
                             __ptext159 A520                               __ptext168 A97C  
                             __ptext169 B6AC                               _hid_input A1AC  
                    __end_of_StartTimer AC80                      _set_load_relay_one B65E  
                    _set_load_relay_two B64E                       __size_of_wdtdelay 005A  
                     __size_of_spinners 00E6                       __size_of_vfprintf 00AC  
                              _ADCC_ISR B048                  __CFG_BBSIZE$BBSIZE_512 000000  
                             fabsf@F463 007E                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                               _esr_check 6244  
               __size_of_get_raw_result 001E                          __size_of_fabsf 00AE  
                             _init_bsoc 8594                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 7DDC  
                           _hid_display 953A                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize A58A  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0039                                _INT0_ISR B69C  
                              _INT1_ISR AD40                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 02E6                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                               _ring_buf1 0443  
                             _ring_buf2 0400                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                         _TMR3_CallBack B404                                _PIR5bits 0039A5  
                              _PIR6bits 0039A6                                _PIR8bits 0039A8  
                              _PIR9bits 0039A9                __size_of_TMR5_Initialize 0046  
                              i2u998_48 B060                               _set_vterm B4D0  
                   __size_of_update_lcd 0110                             _help_button ADB8  
                              _TMR3_ISR 8868                             _BVSOC_TABLE FA7B  
                              _TMR5_ISR A82C                                _TMR6_ISR B59C  
                             _port_data 05FF                     __size_of_static_soc 0024  
                             _vfpfcnvrt 222E                            _SPI1INTFbits 003D1A  
                   __size_of_start_bsoc 0022                           _TMR5_CallBack B3E0  
                            _ADCON0bits 003EF8                      __end_of_check_help 79D8  
                             _start_lcd B726                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 0052                           _TMR6_CallBack B44C  
                 __size_of_send_lcd_cmd 0028       __size_of_TMR5_SetInterruptHandler 0028  
                             _stop_bsoc B72C                        _set_display_info B4EE  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 9336  
                             copy_data1 935C                               copy_data2 937E  
                             copy_data3 93A0                _INT0_SetInterruptHandler B282  
                   __size_of_vterm_dump 012E     __end_of_UART2_SetTxInterruptHandler B192  
           _UART2_SetTxInterruptHandler B16A                            _uart1RxCount 0036  
                          _uart2RxCount 0030                                __Hrparam 0000  
      __size_of_eaDogM_WriteStringAtPos 0036                 __CFG_RSTOSC$EXTOSC_4PLL 000000  
              __size_of_TMR3_WriteTimer 0040                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 04AC                           _wait_lcd_done B548  
                          _send_lcd_cmd B0F2                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC                        __size_of___aomod 0240  
                       _adc_int_handler B742                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                      __size_of___lodiv 0180                        __size_of___lomod 0140  
                    __end_of_get_switch B048                   __end_of_DMA1_DMAA_ISR B6E6  
                    ___fpclassifyf@F463 0082    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0300                                ___xxtofl 79D8  
                     ?_DMA1_DMADCNT_ISR 0039             __size_of_check_enter_button 0040  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand B68C  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 003F  
                              __ptext10 B11A                                __ptext11 8594  
                              __ptext20 B6F2                                __ptext12 9FF6  
                              __ptext21 B71A                                __ptext13 953A  
                              __ptext30 9430                                __ptext22 B6FA  
                              __ptext14 A1AC                                __ptext31 AFEE  
                              __ptext23 B64E                                __ptext15 B01C  
                              __ptext40 B726                                __ptext32 AE26  
                              __ptext24 B65E                                __ptext16 6244  
                              __ptext41 A088                                __ptext33 9212  
                              __ptext25 B67E                                __ptext17 AD7E  
                              __ptext50 6588                                __ptext42 68C8  
                              __ptext34 AE5C                                __ptext26 9B5A  
                              __ptext18 A5F0                                __ptext51 8B18  
                              __ptext43 A654                                __ptext35 A886  
                              __ptext27 B398                                __ptext19 B63C  
                              __ptext60 7F98                                __ptext52 812E  
                              __ptext44 9CC0                                __ptext36 B548  
                              __ptext28 77C6                                __ptext61 8422  
                              __ptext53 75A6                                __ptext45 222E  
                              __ptext37 A776                                __ptext29 8D94  
                              __ptext70 A23C                                __ptext62 AA14  
                              __ptext54 6BB4                                __ptext46 577C  
                              __ptext38 9E16                                __ptext71 90FE  
                              __ptext63 99D8                                __ptext55 0000  
                              __ptext47 A2C4                                __ptext39 B720  
                              __ptext80 B4D0                                __ptext72 9EBC  
                              __ptext64 8FE6                                __ptext56 A348  
                              __ptext48 AF5E                                __ptext81 B66E  
                              __ptext73 9F5E                                __ptext65 89CA  
                              __ptext57 AF8E                                __ptext49 ABBA  
                              __ptext90 B70A                                __ptext82 B4EE  
                              __ptext74 8EC2                                __ptext66 52FC  
                              __ptext58 9904                                __ptext91 AC80  
                              __ptext83 B5B6                                __ptext75 B580  
                              __ptext67 AA5C                                __ptext59 5ED8  
                              __ptext92 82AE                                __ptext84 B68C  
                              __ptext76 9D6C                                __ptext68 7366  
                              __ptext93 9C12                                __ptext85 ABFE  
                              __ptext77 70F2                                __ptext69 6E72  
                              __ptext94 4E50                                __ptext86 ADB8  
                              __ptext78 A8D8                                __ptext95 A6B6  
                              __ptext87 B142                                __ptext79 AFBE  
                              __ptext96 B50C                                __ptext88 AC40  
                              __ptext97 79D8                                __ptext89 B702  
                              __ptext98 48D6                                __ptext99 8704  
                      __size_of_isupper 0030                                us1116999 6BC6  
                              us1047999 5316                                us1128999 65EE  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                              us1137999 57FC                        __size_of_strncmp 0220  
                      __size_of_toupper 0084                        _ringBufS_put_dma 9D6C  
                  __end_of_Volts_to_SOC A088                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 0FEA  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_utoa 0340                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0039  
                 __end_of_init_port_dma AF5E                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 00AE  
                             stoa@F1166 00EC                      ??_DMA1_DMASCNT_ISR 003F  
          __end_of_ADCC_StartConversion B64E                                _spi_link 0060  
                              _wdtdelay A776              __end_of_UART2_Transmit_ISR B0A0  
                              _spinners 981E                                _vfprintf 9CC0  
              __end_of_convert_adc_data 9C12              __end_of_PWM8_LoadDutyValue AC40  
  __end_of_TMR3_DefaultInterruptHandler B73E   __size_of_TMR3_DefaultInterruptHandler 0002  
          _TMR3_DefaultInterruptHandler B73C    __end_of_INT1_DefaultInterruptHandler B73C  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler B73A  
                    _send_port_data_dma A92A                           ??_Default_ISR 0039  
                           _uart1RxHead 0038                  __size_of_get_vterm_ptr 002E  
                           _uart2RxHead 0032                             _uart1RxTail 0037  
                        _get_raw_result B50C                             _uart2TxHead 0035  
                           _uart2RxTail 0031                               spinners@s 0074  
                           _uart2TxTail 0034                            _wait_lcd_set B720  
                      Volts_to_SOC@slot 002E                      _EXT_INT_Initialize AEC6  
  __end_of_TMR6_DefaultInterruptHandler A9CA   __size_of_TMR6_DefaultInterruptHandler 004E  
          _TMR6_DefaultInterruptHandler A97C    __end_of_ADCC_DefaultInterruptHandler B742  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler B740  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long B0CA          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help B67E                   __end_of_calc_ror_data 8422  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString 9EBC  
                 __end_of_mode_lamp_dim B5CE                 __end_of_adc_int_handler B744  
                __size_of_INT0_CallBack 0024                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0024  
                    __end_of_update_lcd 9322                  _uart2TxBufferRemaining 0033  
                    __end_of_static_soc B398                      __end_of_start_bsoc B492  
                        _FVR_Initialize B712                  __end_of_get_raw_result B52A  
                      _send_lcd_cmd_dma A886                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 0029        __end_of_INT1_SetInterruptHandler B282  
             __size_of_UART1_Initialize 0046                        ??_DMA1_DMAOR_ISR 003F  
             __end_of_send_lcd_cmd_long B0F2                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR B73A          __end_of_PIN_MANAGER_Initialize A1AC  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 8EC2  
               _eaDogM_WriteStringAtPos AE5C                           _get_vterm_ptr AFEE  
                        _check_adc_scan B6FA               __size_of_UART2_Initialize 005E  
