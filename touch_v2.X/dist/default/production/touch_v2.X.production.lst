

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Nov  2 18:45:11 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1,inline
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1,inline
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1,inline
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1,inline
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1
   107                           	psect	text87,global,reloc=4,class=CODE,delta=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1
   111                           	psect	text91,global,reloc=4,class=CODE,delta=1
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1
   114                           	psect	text94,global,reloc=4,class=CODE,delta=1
   115                           	psect	text95,global,reloc=2,class=CODE,delta=1
   116                           	psect	text96,global,reloc=2,class=CODE,delta=1
   117                           	psect	text97,global,reloc=4,class=CODE,delta=1
   118                           	psect	text98,global,reloc=4,class=CODE,delta=1
   119                           	psect	text99,global,reloc=2,class=CODE,delta=1
   120                           	psect	text100,global,reloc=2,class=CODE,delta=1
   121                           	psect	text101,global,reloc=2,class=CODE,delta=1
   122                           	psect	text102,global,reloc=4,class=CODE,delta=1
   123                           	psect	text103,global,reloc=4,class=CODE,delta=1
   124                           	psect	text104,global,reloc=2,class=CODE,delta=1
   125                           	psect	text105,global,reloc=4,class=CODE,delta=1
   126                           	psect	text106,global,reloc=2,class=CODE,delta=1
   127                           	psect	text107,global,reloc=4,class=CODE,delta=1
   128                           	psect	text108,global,reloc=2,class=CODE,delta=1
   129                           	psect	text109,global,reloc=4,class=CODE,delta=1
   130                           	psect	text110,global,reloc=2,class=CODE,delta=1
   131                           	psect	text111,global,reloc=4,class=CODE,delta=1
   132                           	psect	text112,global,reloc=2,class=CODE,delta=1
   133                           	psect	text113,global,reloc=2,class=CODE,delta=1
   134                           	psect	text114,global,reloc=4,class=CODE,delta=1
   135                           	psect	text115,global,reloc=4,class=CODE,delta=1
   136                           	psect	text116,global,reloc=4,class=CODE,delta=1
   137                           	psect	text117,global,reloc=4,class=CODE,delta=1
   138                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   139                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   140                           	psect	text118,global,reloc=4,class=CODE,delta=1
   141                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
   142                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   143  0000                     
   144                           ; Version 2.10
   145                           ; Generated 31/07/2019 GMT
   146                           ; 
   147                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   148                           ; All rights reserved.
   149                           ; 
   150                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   151                           ; 
   152                           ; Redistribution and use in source and binary forms, with or without modification, are
   153                           ; permitted provided that the following conditions are met:
   154                           ; 
   155                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   156                           ;        conditions and the following disclaimer.
   157                           ; 
   158                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   159                           ;        of conditions and the following disclaimer in the documentation and/or other
   160                           ;        materials provided with the distribution.
   161                           ; 
   162                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   163                           ;        software without specific prior written permission.
   164                           ; 
   165                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   166                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   167                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   168                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   169                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   170                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   171                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   172                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   173                           ; 
   174                           ; 
   175                           ; Code-generator required, PIC18F57K42 Definitions
   176                           ; 
   177                           ; SFR Addresses
   178  0000                     
   179 ;;_mode	offset	0
   180 ;;_channel	offset=-1 (param)
   181 ;;_s	offset=-2 (param)
   182 ;;_cmd	offset=-1 (param)
   183 ;;_cmd	offset=-1 (param)
   184 ;;_data	offset=-1 (param)
   185 ;;__this	offset=-2 (param)
   186 ;;_index	offset=-1 (param)
   187 ;;_cmd	offset=-1 (param)
   188 ;;_flipper	offset=-1 (param)
   189 ;;_f	offset	0
   190 ;;_ap	offset	6
   191 ;;_s	offset=-3 (param)
   192 ;;_fmt	offset=-5 (param)
   193 ;;_line	offset=-1 (param)
   194 ;;_vterm	offset=-2 (param)
   195 ;;_numMilliseconds	offset=-2 (param)
   196 ;;_vterm	offset=-1 (param)
   197 ;;_r	offset=-1 (param)
   198 ;;_c	offset=-2 (param)
   199 ;;_strPtr	offset=-4 (param)
   200 ;;_strPtr	offset=-1 (param)
   201 ;;_delay	offset=-4 (param)
   202 ;;_strPtr	offset=-2 (param)
   203 ;;__this	offset=-2 (param)
   204 ;;_clearBuffer	offset=-3 (param)
   205 ;;_s	offset	0
   206 ;;_k	offset	2
   207 ;;_dest	offset=-2 (param)
   208 ;;_c	offset=-4 (param)
   209 ;;_n	offset=-6 (param)
   210 ;;_ap	offset	0
   211 ;;_fmt	offset=-3 (param)
   212 ;;_cfmt	offset	0
   213 ;;_fp	offset=-2 (param)
   214 ;;_fmt	offset=-4 (param)
   215 ;;_ap	offset=-6 (param)
   216 ;;_llu	offset	0
   217 ;;_ll	offset	8
   218 ;;_cp	offset	16
   219 ;;_c	offset	18
   220 ;;_fp	offset=-2 (param)
   221 ;;_fmt	offset=-4 (param)
   222 ;;_ap	offset=-6 (param)
   223 ;;_xtoa$4005	offset	0
   224 ;;_xtoa$4004	offset	2
   225 ;;_n	offset	4
   226 ;;_c	offset	12
   227 ;;_i	offset	14
   228 ;;_w	offset	16
   229 ;;_p	offset	18
   230 ;;_fp	offset=-2 (param)
   231 ;;_d	offset=-10 (param)
   232 ;;_x	offset=-11 (param)
   233 ;;_toupper$4565	offset	0
   234 ;;_c	offset=-2 (param)
   235 ;;_c	offset=-2 (param)
   236 ;;_c	offset=-2 (param)
   237 ;;_c	offset=-2 (param)
   238 ;;_nuls	offset	0
   239 ;;_l	offset	7
   240 ;;_p	offset	9
   241 ;;_cp	offset	11
   242 ;;_w	offset	13
   243 ;;_i	offset	15
   244 ;;_fp	offset=-2 (param)
   245 ;;_s	offset=-4 (param)
   246 ;;_dtoa$3984	offset	0
   247 ;;_n	offset	2
   248 ;;_i	offset	10
   249 ;;_s	offset	12
   250 ;;_w	offset	14
   251 ;;_p	offset	16
   252 ;;_fp	offset=-2 (param)
   253 ;;_d	offset=-10 (param)
   254 ;;_a	offset=-2 (param)
   255 ;;_sign	offset	0
   256 ;;_counter	offset	1
   257 ;;_dividend	offset=-8 (param)
   258 ;;_divisor	offset=-16 (param)
   259 ;;_quotient	offset	0
   260 ;;_sign	offset	8
   261 ;;_counter	offset	9
   262 ;;_dividend	offset=-8 (param)
   263 ;;_divisor	offset=-16 (param)
   264 ;;_w	offset	0
   265 ;;_fp	offset=-2 (param)
   266 ;;_c	offset=-3 (param)
   267 ;;_w	offset	0
   268 ;;_i	offset	2
   269 ;;_fp	offset=-2 (param)
   270 ;;_buf	offset=-3 (param)
   271 ;;_p	offset=-5 (param)
   272 ;;_a	offset	0
   273 ;;_s	offset=-2 (param)
   274 ;;_i	offset	0
   275 ;;_c	offset	2
   276 ;;_s	offset=-1 (param)
   277 ;;_fp	offset=-3 (param)
   278 ;;_c	offset=-2 (param)
   279 ;;_fp	offset=-4 (param)
   280 ;;_c	offset=-1 (param)
   281 ;;__this	offset=-2 (param)
   282 ;;_c	offset=-3 (param)
   283 ;;_vterm	offset=-1 (param)
   284 ;;_new_response_info	offset=-1 (param)
   285 ;;_new_response_info	offset=-1 (param)
   286 ;;_level	offset=-2 (param)
   287 ;;_dutyValue	offset=-2 (param)
   288 ;;_timer	offset=-1 (param)
   289 ;;_timer	offset=-1 (param)
   290 ;;_count	offset=-3 (param)
   291 ;;_InterruptHandler	offset=-3 (param)
   292 ;;_InterruptHandler	offset=-3 (param)
   293 ;;_InterruptHandler	offset=-3 (param)
   294 ;;_InterruptHandler	offset=-3 (param)
   295 ;;_InterruptHandler	offset=-3 (param)
   296 ;;_InterruptHandler	offset=-3 (param)
   297 ;;_state	offset	0
   298 ;;_InterruptHandler	offset=-3 (param)
   299 ;;_InterruptHandler	offset=-3 (param)
   300 ;;_InterruptHandler	offset=-3 (param)
   301 ;;_InterruptHandler	offset=-3 (param)
   302 ;;_timerVal	offset=-2 (param)
   303 ;;_channel	offset=-1 (param)
   304 ;;_i	offset	0
   305                           
   306                           	psect	idataBANK0
   307  013832                     __pidataBANK0:
   308                           	opt callstack 0
   309                           
   310                           ;initializer for stoa@F1144
   311  013832  28                 	db	40
   312  013833  6E                 	db	110
   313  013834  75                 	db	117
   314  013835  6C                 	db	108
   315  013836  6C                 	db	108
   316  013837  29                 	db	41
   317  013838  00                 	db	0
   318                           
   319                           ;initializer for _port_data
   320  013839  FF                 	db	255
   321  01383A  00                 	db	0
   322  01383B  FF                 	db	255
   323  01383C  00                 	db	0
   324  01383D  FF                 	db	255
   325  01383E  00                 	db	0
   326  01383F  FF                 	db	255
   327  013840  00                 	db	0
   328  013841  FF                 	db	255
   329  013842  00                 	db	0
   330  013843  FF                 	db	255
   331  013844  00                 	db	0
   332  013845  FF                 	db	255
   333  013846  00                 	db	0
   334  013847  FF                 	db	255
   335  013848  00                 	db	0
   336                           
   337                           	psect	idataBANK1
   338  012326                     __pidataBANK1:
   339                           	opt callstack 0
   340                           
   341                           ;initializer for _V
   342  012326  00                 	db	0
   343  012327  00                 	db	0
   344  012328  00                 	db	0
   345  012329  00                 	db	0
   346  01232A  00                 	db	0
   347  01232B  00                 	db	0
   348  01232C  00                 	db	0
   349  01232D  00                 	db	0
   350  01232E  00                 	db	0
   351  01232F  00                 	db	0
   352  012330  00                 	db	0
   353  012331  00                 	db	0
   354  012332  00                 	db	0
   355  012333  00                 	db	0
   356  012334  00                 	db	0
   357  012335  00                 	db	0
   358  012336  00                 	db	0
   359  012337  00                 	db	0
   360  012338  00                 	db	0
   361  012339  00                 	db	0
   362  01233A  00                 	db	0
   363  01233B  00                 	db	0
   364  01233C  00                 	db	0
   365  01233D  00                 	db	0
   366  01233E  00                 	db	0
   367  01233F  00                 	db	0
   368  012340  00                 	db	0
   369  012341  00                 	db	0
   370  012342  00                 	db	0
   371  012343  00                 	db	0
   372  012344  00                 	db	0
   373  012345  00                 	db	0
   374  012346  00                 	db	0
   375  012347  00                 	db	0
   376  012348  00                 	db	0
   377  012349  00                 	db	0
   378  01234A  00                 	db	0
   379  01234B  00                 	db	0
   380  01234C  00                 	db	0
   381  01234D  00                 	db	0
   382  01234E  00                 	db	0
   383  01234F  00                 	db	0
   384  012350  00                 	db	0
   385  012351  00                 	db	0
   386  012352  00                 	db	0
   387  012353  00                 	db	0
   388  012354  00                 	db	0
   389  012355  00                 	db	0
   390  012356  00                 	db	0
   391  012357  00                 	db	0
   392  012358  00                 	db	0
   393  012359  00                 	db	0
   394  01235A  00                 	db	0
   395  01235B  00                 	db	0
   396  01235C  00                 	db	0
   397  01235D  00                 	db	0
   398  01235E  00                 	db	0
   399  01235F  00                 	db	0
   400  012360  00                 	db	0
   401  012361  00                 	db	0
   402  012362  00                 	db	0
   403  012363  00                 	db	0
   404  012364  00                 	db	0
   405  012365  00                 	db	0
   406  012366  00                 	db	0
   407  012367  00                 	db	0
   408  012368  00                 	db	0
   409  012369  00                 	db	0
   410  01236A  00                 	db	0
   411  01236B  00                 	db	0
   412  01236C  00                 	db	0
   413  01236D  00                 	db	0
   414  01236E  00                 	db	0
   415  01236F  00                 	db	0
   416  012370  00                 	db	0
   417  012371  00                 	db	0
   418  012372  00                 	db	0
   419  012373  00                 	db	0
   420  012374  00                 	db	0
   421  012375  00                 	db	0
   422  012376  00                 	db	0
   423  012377  00                 	db	0
   424  012378  00                 	db	0
   425  012379  00                 	db	0
   426  01237A  00                 	db	0
   427  01237B  00                 	db	0
   428  01237C  00                 	db	0
   429  01237D  00                 	db	0
   430  01237E  00                 	db	0
   431  01237F  00                 	db	0
   432  012380  00                 	db	0
   433  012381  00                 	db	0
   434  012382  00                 	db	0
   435  012383  00                 	db	0
   436  012384  00                 	db	0
   437  012385  00                 	db	0
   438  012386  00                 	db	0
   439  012387  00                 	db	0
   440  012388  00                 	db	0
   441  012389  00                 	db	0
   442  01238A  00                 	db	0
   443  01238B  00                 	db	0
   444  01238C  00                 	db	0
   445  01238D  00                 	db	0
   446  01238E  00                 	db	0
   447  01238F  00                 	db	0
   448  012390  00                 	db	0
   449  012391  00                 	db	0
   450  012392  00                 	db	0
   451  012393  00                 	db	0
   452  012394  00                 	db	0
   453  012395  00                 	db	0
   454  012396  00                 	db	0
   455  012397  00                 	db	0
   456  012398  00                 	db	0
   457  012399  00                 	db	0
   458  01239A  00                 	db	0
   459  01239B  00                 	db	0
   460  01239C  00                 	db	0
   461  01239D  00                 	db	0
   462  01239E  00                 	db	0
   463  01239F  00                 	db	0
   464  0123A0  00                 	db	0
   465  0123A1  00                 	db	0
   466  0123A2  00                 	db	0
   467  0123A3  00                 	db	0
   468  0123A4  00                 	db	0
   469  0123A5  00                 	db	0
   470  0123A6  00                 	db	0
   471  0123A7  0000               	dw	0
   472  0123A9  0000               	dw	0
   473  0123AB  0000               	dw	0
   474  0123AD  0000               	dw	0
   475  0123AF  0000               	dw	0
   476  0123B1  0000               	dw	0
   477  0123B3  00                 	db	0
   478  0123B4  00                 	db	0
   479  0123B5  00                 	db	0
   480  0123B6  00                 	db	0
   481  0123B7  00                 	db	0
   482  0123B8  00                 	db	0
   483  0123B9  00                 	db	0
   484  0123BA  00                 	db	0
   485  0123BB  0000               	dw	0
   486  0123BD  0000               	dw	0
   487  0123BF  0000               	dw	0
   488  0123C1  0000               	dw	0
   489  0123C3  0000               	dw	0
   490  0123C5  0000               	dw	0
   491  0123C7  0000               	dw	0
   492  0123C9  0000               	dw	0
   493  0123CB  0000               	dw	0
   494  0123CD  00                 	db	0
   495  0123CE  00                 	db	0
   496  0123CF  00                 	db	0
   497  0123D0  00                 	db	0
   498  0123D1  00                 	db	0
   499  0123D2  00                 	db	0
   500  0123D3  00                 	db	0
   501  0123D4  00                 	db	0
   502  0123D5  00                 	db	0
   503  0123D6  00                 	db	0
   504  0123D7  00                 	db	0
   505  0123D8  00                 	db	0
   506  0123D9  0000               	dw	0
   507  0123DB  0000               	dw	0
   508  0123DD  01                 	db	1
   509  0123DE  00                 	db	0
   510  0123DF  01                 	db	1
   511  0123E0  00                 	db	0
   512  0123E1  2D                 	db	45
   513  0123E2  00                 	db	0
   514                           
   515                           	psect	mediumconst
   516  00FE80                     __pmediumconst:
   517                           	opt callstack 0
   518  00FE80  00                 	db	0
   519  00FE81                     _T:
   520                           	opt callstack 0
   521  00FE81  63                 	db	99
   522  00FE82  6F                 	db	111
   523  00FE83  6D                 	db	109
   524  00FE84  6D                 	db	109
   525  00FE85  61                 	db	97
   526  00FE86  6E                 	db	110
   527  00FE87  64                 	db	100
   528  00FE88  73                 	db	115
   529  00FE89  20                 	db	32
   530  00FE8A  31                 	db	49
   531  00FE8B  00                 	db	0
   532  00FE8C  00                 	db	0
   533  00FE8D  00                 	db	0
   534  00FE8E  00                 	db	0
   535  00FE8F  00                 	db	0
   536  00FE90  00                 	db	0
   537  00FE91  00                 	db	0
   538  00FE92  00                 	db	0
   539  00FE93  64                 	db	100
   540  00FE94  69                 	db	105
   541  00FE95  73                 	db	115
   542  00FE96  70                 	db	112
   543  00FE97  6C                 	db	108
   544  00FE98  61                 	db	97
   545  00FE99  79                 	db	121
   546  00FE9A  73                 	db	115
   547  00FE9B  20                 	db	32
   548  00FE9C  31                 	db	49
   549  00FE9D  00                 	db	0
   550  00FE9E  00                 	db	0
   551  00FE9F  00                 	db	0
   552  00FEA0  00                 	db	0
   553  00FEA1  00                 	db	0
   554  00FEA2  00                 	db	0
   555  00FEA3  00                 	db	0
   556  00FEA4  00                 	db	0
   557  00FEA5  63                 	db	99
   558  00FEA6  6F                 	db	111
   559  00FEA7  6D                 	db	109
   560  00FEA8  6D                 	db	109
   561  00FEA9  61                 	db	97
   562  00FEAA  6E                 	db	110
   563  00FEAB  64                 	db	100
   564  00FEAC  73                 	db	115
   565  00FEAD  20                 	db	32
   566  00FEAE  32                 	db	50
   567  00FEAF  00                 	db	0
   568  00FEB0  00                 	db	0
   569  00FEB1  00                 	db	0
   570  00FEB2  00                 	db	0
   571  00FEB3  00                 	db	0
   572  00FEB4  00                 	db	0
   573  00FEB5  00                 	db	0
   574  00FEB6  00                 	db	0
   575  00FEB7  64                 	db	100
   576  00FEB8  69                 	db	105
   577  00FEB9  73                 	db	115
   578  00FEBA  70                 	db	112
   579  00FEBB  6C                 	db	108
   580  00FEBC  61                 	db	97
   581  00FEBD  79                 	db	121
   582  00FEBE  73                 	db	115
   583  00FEBF  20                 	db	32
   584  00FEC0  32                 	db	50
   585  00FEC1  00                 	db	0
   586  00FEC2  00                 	db	0
   587  00FEC3  00                 	db	0
   588  00FEC4  00                 	db	0
   589  00FEC5  00                 	db	0
   590  00FEC6  00                 	db	0
   591  00FEC7  00                 	db	0
   592  00FEC8  00                 	db	0
   593  00FEC9  63                 	db	99
   594  00FECA  6F                 	db	111
   595  00FECB  6D                 	db	109
   596  00FECC  6D                 	db	109
   597  00FECD  61                 	db	97
   598  00FECE  6E                 	db	110
   599  00FECF  64                 	db	100
   600  00FED0  73                 	db	115
   601  00FED1  20                 	db	32
   602  00FED2  33                 	db	51
   603  00FED3  00                 	db	0
   604  00FED4  00                 	db	0
   605  00FED5  00                 	db	0
   606  00FED6  00                 	db	0
   607  00FED7  00                 	db	0
   608  00FED8  00                 	db	0
   609  00FED9  00                 	db	0
   610  00FEDA  00                 	db	0
   611  00FEDB  64                 	db	100
   612  00FEDC  69                 	db	105
   613  00FEDD  73                 	db	115
   614  00FEDE  70                 	db	112
   615  00FEDF  6C                 	db	108
   616  00FEE0  61                 	db	97
   617  00FEE1  79                 	db	121
   618  00FEE2  73                 	db	115
   619  00FEE3  20                 	db	32
   620  00FEE4  33                 	db	51
   621  00FEE5  00                 	db	0
   622  00FEE6  00                 	db	0
   623  00FEE7  00                 	db	0
   624  00FEE8  00                 	db	0
   625  00FEE9  00                 	db	0
   626  00FEEA  00                 	db	0
   627  00FEEB  00                 	db	0
   628  00FEEC  00                 	db	0
   629  00FEED  63                 	db	99
   630  00FEEE  6F                 	db	111
   631  00FEEF  6D                 	db	109
   632  00FEF0  6D                 	db	109
   633  00FEF1  61                 	db	97
   634  00FEF2  6E                 	db	110
   635  00FEF3  64                 	db	100
   636  00FEF4  73                 	db	115
   637  00FEF5  20                 	db	32
   638  00FEF6  34                 	db	52
   639  00FEF7  00                 	db	0
   640  00FEF8  00                 	db	0
   641  00FEF9  00                 	db	0
   642  00FEFA  00                 	db	0
   643  00FEFB  00                 	db	0
   644  00FEFC  00                 	db	0
   645  00FEFD  00                 	db	0
   646  00FEFE  00                 	db	0
   647  00FEFF  64                 	db	100
   648  00FF00  69                 	db	105
   649  00FF01  73                 	db	115
   650  00FF02  70                 	db	112
   651  00FF03  6C                 	db	108
   652  00FF04  61                 	db	97
   653  00FF05  79                 	db	121
   654  00FF06  73                 	db	115
   655  00FF07  20                 	db	32
   656  00FF08  34                 	db	52
   657  00FF09  00                 	db	0
   658  00FF0A  00                 	db	0
   659  00FF0B  00                 	db	0
   660  00FF0C  00                 	db	0
   661  00FF0D  00                 	db	0
   662  00FF0E  00                 	db	0
   663  00FF0F  00                 	db	0
   664  00FF10  00                 	db	0
   665  00FF11                     __end_of_T:
   666                           	opt callstack 0
   667  0000                     _IVTADL	set	14493
   668  0000                     _IVTADH	set	14494
   669  0000                     _IVTADU	set	14495
   670  0000                     _PIR4bits	set	14756
   671  0000                     _PIE8bits	set	14744
   672  0000                     _PIR8bits	set	14760
   673  0000                     _SCANPR	set	14839
   674  0000                     _DMA2PR	set	14836
   675  0000                     _DMA1PR	set	14835
   676  0000                     _MAINPR	set	14834
   677  0000                     _ISRPR	set	14833
   678  0000                     _PIE2bits	set	14738
   679  0000                     _PIR2bits	set	14754
   680  0000                     _PIE9bits	set	14745
   681  0000                     _PIR9bits	set	14761
   682  0000                     _PIE6bits	set	14742
   683  0000                     _PIE3bits	set	14739
   684  0000                     _PMD7	set	14791
   685  0000                     _PMD6	set	14790
   686  0000                     _PMD5	set	14789
   687  0000                     _PMD4	set	14788
   688  0000                     _PMD3	set	14787
   689  0000                     _PMD2	set	14786
   690  0000                     _PMD1	set	14785
   691  0000                     _PMD0	set	14784
   692  0000                     _OSCTUNE	set	14814
   693  0000                     _OSCFRQ	set	14815
   694  0000                     _OSCEN	set	14813
   695  0000                     _OSCCON3	set	14811
   696  0000                     _OSCCON1	set	14809
   697  0000                     _IPR8bits	set	14728
   698  0000                     _IPR9bits	set	14729
   699  0000                     _IPR5bits	set	14725
   700  0000                     _IPR1bits	set	14721
   701  0000                     _IPR3bits	set	14723
   702  0000                     _IPR6bits	set	14726
   703  0000                     _IPR2bits	set	14722
   704  0000                     _PIE5bits	set	14741
   705  0000                     _PIE1bits	set	14737
   706  0000                     _PIR5bits	set	14757
   707  0000                     _PIR1bits	set	14753
   708  0000                     _PLLR	set	118496
   709  0000                     _SPI1SDIPPS	set	15071
   710  0000                     _U1RXPPS	set	15077
   711  0000                     _RC6PPS	set	14870
   712  0000                     _RC5PPS	set	14869
   713  0000                     _INT1PPS	set	15041
   714  0000                     _RD1PPS	set	14873
   715  0000                     _INT0PPS	set	15040
   716  0000                     _RC3PPS	set	14867
   717  0000                     _RB6PPS	set	14862
   718  0000                     _SPI1SCKPPS	set	15070
   719  0000                     _U2RXPPS	set	15080
   720  0000                     _SLRCONF	set	14995
   721  0000                     _SLRCONE	set	14979
   722  0000                     _SLRCOND	set	14963
   723  0000                     _SLRCONC	set	14947
   724  0000                     _SLRCONB	set	14931
   725  0000                     _SLRCONA	set	14915
   726  0000                     _ODCOND	set	14962
   727  0000                     _ODCONC	set	14946
   728  0000                     _ODCONB	set	14930
   729  0000                     _ODCONA	set	14914
   730  0000                     _ODCONF	set	14994
   731  0000                     _ODCONE	set	14978
   732  0000                     _WPUC	set	14945
   733  0000                     _WPUA	set	14913
   734  0000                     _WPUB	set	14929
   735  0000                     _WPUE	set	14977
   736  0000                     _WPUF	set	14993
   737  0000                     _WPUD	set	14961
   738  0000                     _ANSELA	set	14912
   739  0000                     _ANSELF	set	14992
   740  0000                     _ANSELE	set	14976
   741  0000                     _ANSELB	set	14928
   742  0000                     _ANSELC	set	14944
   743  0000                     _ANSELD	set	14960
   744  0000                     _DMA2SSA	set	15321
   745  0000                     _DMA1SSA	set	15353
   746  0000                     _DMA2DSZ	set	15310
   747  0000                     _DMA2SSZ	set	15319
   748  0000                     _DMA2DSA	set	15312
   749  0000                     _DMA1DSZ	set	15342
   750  0000                     _DMA1SSZ	set	15351
   751  0000                     _DMA1DSA	set	15344
   752  0000                     _DMA1CON0bits	set	15356
   753  0000                     _DMA1CON1bits	set	15357
   754  0000                     _DMA2CON0	set	15324
   755  0000                     _DMA2AIRQ	set	15326
   756  0000                     _DMA2SIRQ	set	15327
   757  0000                     _DMA2CON1	set	15325
   758  0000                     _DMA1CON0	set	15356
   759  0000                     _DMA1AIRQ	set	15358
   760  0000                     _DMA1SIRQ	set	15359
   761  0000                     _DMA1CON1	set	15357
   762  0000                     _CLKRCON	set	15589
   763  0000                     _CLKRCLK	set	15590
   764  0000                     _SPI1INTFbits	set	15642
   765  0000                     _SPI1RXB	set	15632
   766  0000                     _SPI1TXB	set	15633
   767  0000                     _SPI1TCNTL	set	15634
   768  0000                     _SPI1CON0	set	15636
   769  0000                     _SPI1CLK	set	15644
   770  0000                     _SPI1BAUD	set	15641
   771  0000                     _SPI1CON2	set	15638
   772  0000                     _SPI1CON1	set	15637
   773  0000                     _U2RXB	set	15824
   774  0000                     _U2TXB	set	15826
   775  0000                     _U2ERRIE	set	15842
   776  0000                     _U2ERRIR	set	15841
   777  0000                     _U2UIR	set	15840
   778  0000                     _U2FIFO	set	15839
   779  0000                     _U2BRGH	set	15838
   780  0000                     _U2BRGL	set	15837
   781  0000                     _U2CON2	set	15836
   782  0000                     _U2CON1	set	15835
   783  0000                     _U2CON0	set	15834
   784  0000                     _U2P3L	set	15832
   785  0000                     _U2P2L	set	15830
   786  0000                     _U2P1L	set	15828
   787  0000                     _U1RXB	set	15848
   788  0000                     _U1TXB	set	15850
   789  0000                     _U1ERRIE	set	15866
   790  0000                     _U1ERRIR	set	15865
   791  0000                     _U1UIR	set	15864
   792  0000                     _U1FIFO	set	15863
   793  0000                     _U1BRGH	set	15862
   794  0000                     _U1BRGL	set	15861
   795  0000                     _U1CON2	set	15860
   796  0000                     _U1CON1	set	15859
   797  0000                     _U1CON0	set	15858
   798  0000                     _U1P3H	set	15857
   799  0000                     _U1P3L	set	15856
   800  0000                     _U1P2H	set	15855
   801  0000                     _U1P2L	set	15854
   802  0000                     _U1P1H	set	15853
   803  0000                     _U1P1L	set	15852
   804  0000                     _FVRCON	set	16065
   805  0000                     _ADFLTRL	set	16102
   806  0000                     _ADFLTRH	set	16103
   807  0000                     _ADCON0bits	set	16120
   808  0000                     _ADCON0	set	16120
   809  0000                     _ADCLK	set	16127
   810  0000                     _ADACT	set	16126
   811  0000                     _ADREF	set	16125
   812  0000                     _ADSTAT	set	16124
   813  0000                     _ADCON3	set	16123
   814  0000                     _ADCON2	set	16122
   815  0000                     _ADCON1	set	16121
   816  0000                     _ADPREH	set	16119
   817  0000                     _ADPREL	set	16118
   818  0000                     _ADCAP	set	16117
   819  0000                     _ADACQH	set	16116
   820  0000                     _ADACQL	set	16115
   821  0000                     _ADPCH	set	16113
   822  0000                     _ADRPT	set	16108
   823  0000                     _ADACCU	set	16106
   824  0000                     _ADSTPTH	set	16101
   825  0000                     _ADSTPTL	set	16100
   826  0000                     _ADUTHH	set	16097
   827  0000                     _ADUTHL	set	16096
   828  0000                     _ADLTHH	set	16095
   829  0000                     _ADLTHL	set	16094
   830  0000                     _CCPTMRS1bits	set	16223
   831  0000                     _LATCbits	set	16316
   832  0000                     _LATDbits	set	16317
   833  0000                     _PORTBbits	set	16331
   834  0000                     _T2CON	set	16300
   835  0000                     _T2TMR	set	16298
   836  0000                     _T2PR	set	16299
   837  0000                     _T2RST	set	16303
   838  0000                     _T2HLT	set	16301
   839  0000                     _T2CLKCON	set	16302
   840  0000                     _PWM8DCL	set	16224
   841  0000                     _PWM8DCH	set	16225
   842  0000                     _PWM8CON	set	16226
   843  0000                     _LATEbits	set	16318
   844  0000                     _T5CONbits	set	16282
   845  0000                     _T5CON	set	16282
   846  0000                     _TMR5L	set	16280
   847  0000                     _TMR5H	set	16281
   848  0000                     _T5CLK	set	16285
   849  0000                     _T5GATE	set	16284
   850  0000                     _T5GCON	set	16283
   851  0000                     _T6CON	set	16276
   852  0000                     _T6TMR	set	16274
   853  0000                     _T6PR	set	16275
   854  0000                     _T6RST	set	16279
   855  0000                     _T6HLT	set	16277
   856  0000                     _T6CLKCON	set	16278
   857  0000                     _TRISD	set	16325
   858  0000                     _TRISC	set	16324
   859  0000                     _TRISB	set	16323
   860  0000                     _TRISA	set	16322
   861  0000                     _TRISF	set	16327
   862  0000                     _TRISE	set	16326
   863  0000                     _LATC	set	16316
   864  0000                     _LATB	set	16315
   865  0000                     _LATF	set	16319
   866  0000                     _LATA	set	16314
   867  0000                     _LATD	set	16317
   868  0000                     _LATE	set	16318
   869  0000                     _IVTLOCKbits	set	16340
   870  0000                     _IVTLOCK	set	16340
   871  0000                     _INTCON0bits	set	16338
   872  0000                     _GIE	set	130711
   873  00FF11                     
   874                           ; BSR set to: 57
   875  00FF11  20                 	db	32
   876  00FF12  4D                 	db	77	;'M'
   877  00FF13  65                 	db	101	;'e'
   878  00FF14  73                 	db	115	;'s'
   879  00FF15  67                 	db	103	;'g'
   880  00FF16  20                 	db	32
   881  00FF17  25                 	db	37
   882  00FF18  64                 	db	100	;'d'
   883  00FF19  20                 	db	32
   884  00FF1A  53                 	db	83	;'S'
   885  00FF1B  74                 	db	116	;'t'
   886  00FF1C  61                 	db	97	;'a'
   887  00FF1D  63                 	db	99	;'c'
   888  00FF1E  6B                 	db	107	;'k'
   889  00FF1F  20                 	db	32
   890  00FF20  25                 	db	37
   891  00FF21  64                 	db	100	;'d'
   892  00FF22  20                 	db	32
   893  00FF23  20                 	db	32
   894  00FF24  20                 	db	32
   895  00FF25  20                 	db	32
   896  00FF26  20                 	db	32
   897  00FF27  20                 	db	32
   898  00FF28  00                 	db	0
   899  00FF29                     STR_25:
   900                           
   901                           ; BSR set to: 57
   902  00FF29  20                 	db	32
   903  00FF2A  20                 	db	32
   904  00FF2B  20                 	db	32
   905  00FF2C  20                 	db	32
   906  00FF2D  20                 	db	32
   907  00FF2E  20                 	db	32
   908  00FF2F  20                 	db	32
   909  00FF30  20                 	db	32
   910  00FF31  20                 	db	32
   911  00FF32  20                 	db	32
   912  00FF33  20                 	db	32
   913  00FF34  20                 	db	32
   914  00FF35  20                 	db	32
   915  00FF36  20                 	db	32
   916  00FF37  20                 	db	32
   917  00FF38  20                 	db	32
   918  00FF39  20                 	db	32
   919  00FF3A  20                 	db	32
   920  00FF3B  00                 	db	0
   921  00FF3C                     STR_15:
   922                           
   923                           ; BSR set to: 57
   924  00FF3C  48                 	db	72	;'H'
   925  00FF3D  45                 	db	69	;'E'
   926  00FF3E  4C                 	db	76	;'L'
   927  00FF3F  50                 	db	80	;'P'
   928  00FF40  20                 	db	32
   929  00FF41  25                 	db	37
   930  00FF42  73                 	db	115	;'s'
   931  00FF43  20                 	db	32
   932  00FF44  20                 	db	32
   933  00FF45  20                 	db	32
   934  00FF46  20                 	db	32
   935  00FF47  20                 	db	32
   936  00FF48  20                 	db	32
   937  00FF49  20                 	db	32
   938  00FF4A  20                 	db	32
   939  00FF4B  20                 	db	32
   940  00FF4C  20                 	db	32
   941  00FF4D  20                 	db	32
   942  00FF4E  00                 	db	0
   943  00FF4F                     
   944                           ; BSR set to: 57
   945  00FF4F  44                 	db	68	;'D'
   946  00FF50  49                 	db	73	;'I'
   947  00FF51  53                 	db	83	;'S'
   948  00FF52  50                 	db	80	;'P'
   949  00FF53  4C                 	db	76	;'L'
   950  00FF54  41                 	db	65	;'A'
   951  00FF55  59                 	db	89	;'Y'
   952  00FF56  20                 	db	32
   953  00FF57  25                 	db	37
   954  00FF58  73                 	db	115	;'s'
   955  00FF59  20                 	db	32
   956  00FF5A  20                 	db	32
   957  00FF5B  20                 	db	32
   958  00FF5C  20                 	db	32
   959  00FF5D  20                 	db	32
   960  00FF5E  20                 	db	32
   961  00FF5F  20                 	db	32
   962  00FF60  20                 	db	32
   963  00FF61  00                 	db	0
   964  00FF62                     STR_9:
   965                           
   966                           ; BSR set to: 57
   967  00FF62  25                 	db	37
   968  00FF63  64                 	db	100	;'d'
   969  00FF64  20                 	db	32
   970  00FF65  25                 	db	37
   971  00FF66  64                 	db	100	;'d'
   972  00FF67  2C                 	db	44
   973  00FF68  20                 	db	32
   974  00FF69  25                 	db	37
   975  00FF6A  64                 	db	100	;'d'
   976  00FF6B  20                 	db	32
   977  00FF6C  25                 	db	37
   978  00FF6D  64                 	db	100	;'d'
   979  00FF6E  20                 	db	32
   980  00FF6F  20                 	db	32
   981  00FF70  20                 	db	32
   982  00FF71  20                 	db	32
   983  00FF72  23                 	db	35
   984  00FF73  00                 	db	0
   985  00FF74                     STR_8:
   986                           
   987                           ; BSR set to: 57
   988  00FF74  20                 	db	32
   989  00FF75  56                 	db	86	;'V'
   990  00FF76  54                 	db	84	;'T'
   991  00FF77  45                 	db	69	;'E'
   992  00FF78  52                 	db	82	;'R'
   993  00FF79  4D                 	db	77	;'M'
   994  00FF7A  20                 	db	32
   995  00FF7B  23                 	db	35
   996  00FF7C  32                 	db	50	;'2'
   997  00FF7D  20                 	db	32
   998  00FF7E  20                 	db	32
   999  00FF7F  20                 	db	32
  1000  00FF80  20                 	db	32
  1001  00FF81  20                 	db	32
  1002  00FF82  20                 	db	32
  1003  00FF83  20                 	db	32
  1004  00FF84  00                 	db	0
  1005  00FF85                     STR_4:
  1006                           
  1007                           ; BSR set to: 57
  1008  00FF85  20                 	db	32
  1009  00FF86  4E                 	db	78	;'N'
  1010  00FF87  53                 	db	83	;'S'
  1011  00FF88  41                 	db	65	;'A'
  1012  00FF89  53                 	db	83	;'S'
  1013  00FF8A  50                 	db	80	;'P'
  1014  00FF8B  4F                 	db	79	;'O'
  1015  00FF8C  4F                 	db	79	;'O'
  1016  00FF8D  4B                 	db	75	;'K'
  1017  00FF8E  20                 	db	32
  1018  00FF8F  20                 	db	32
  1019  00FF90  20                 	db	32
  1020  00FF91  20                 	db	32
  1021  00FF92  20                 	db	32
  1022  00FF93  20                 	db	32
  1023  00FF94  20                 	db	32
  1024  00FF95  00                 	db	0
  1025  00FF96                     STR_1:
  1026                           
  1027                           ; BSR set to: 57
  1028  00FF96  20                 	db	32
  1029  00FF97  4D                 	db	77	;'M'
  1030  00FF98  42                 	db	66	;'B'
  1031  00FF99  4D                 	db	77	;'M'
  1032  00FF9A  43                 	db	67	;'C'
  1033  00FF9B  20                 	db	32
  1034  00FF9C  53                 	db	83	;'S'
  1035  00FF9D  4F                 	db	79	;'O'
  1036  00FF9E  4C                 	db	76	;'L'
  1037  00FF9F  41                 	db	65	;'A'
  1038  00FFA0  52                 	db	82	;'R'
  1039  00FFA1  4D                 	db	77	;'M'
  1040  00FFA2  4F                 	db	79	;'O'
  1041  00FFA3  4E                 	db	78	;'N'
  1042  00FFA4  20                 	db	32
  1043  00FFA5  20                 	db	32
  1044  00FFA6  00                 	db	0
  1045  00FFA7                     STR_5:
  1046                           
  1047                           ; BSR set to: 57
  1048  00FFA7  20                 	db	32
  1049  00FFA8  53                 	db	83	;'S'
  1050  00FFA9  45                 	db	69	;'E'
  1051  00FFAA  51                 	db	81	;'Q'
  1052  00FFAB  55                 	db	85	;'U'
  1053  00FFAC  45                 	db	69	;'E'
  1054  00FFAD  4E                 	db	78	;'N'
  1055  00FFAE  43                 	db	67	;'C'
  1056  00FFAF  45                 	db	69	;'E'
  1057  00FFB0  20                 	db	32
  1058  00FFB1  54                 	db	84	;'T'
  1059  00FFB2  45                 	db	69	;'E'
  1060  00FFB3  53                 	db	83	;'S'
  1061  00FFB4  54                 	db	84	;'T'
  1062  00FFB5  20                 	db	32
  1063  00FFB6  20                 	db	32
  1064  00FFB7  00                 	db	0
  1065  00FFB8                     STR_19:
  1066                           
  1067                           ; BSR set to: 57
  1068  00FFB8  76                 	db	118	;'v'
  1069  00FFB9  74                 	db	116	;'t'
  1070  00FFBA  65                 	db	101	;'e'
  1071  00FFBB  72                 	db	114	;'r'
  1072  00FFBC  6D                 	db	109	;'m'
  1073  00FFBD  20                 	db	32
  1074  00FFBE  25                 	db	37
  1075  00FFBF  78                 	db	120	;'x'
  1076  00FFC0  3A                 	db	58	;':'
  1077  00FFC1  25                 	db	37
  1078  00FFC2  78                 	db	120	;'x'
  1079  00FFC3  20                 	db	32
  1080  00FFC4  20                 	db	32
  1081  00FFC5  20                 	db	32
  1082  00FFC6  00                 	db	0
  1083  00FFC7                     STR_2:
  1084                           
  1085                           ; BSR set to: 57
  1086  00FFC7  20                 	db	32
  1087  00FFC8  56                 	db	86	;'V'
  1088  00FFC9  65                 	db	101	;'e'
  1089  00FFCA  72                 	db	114	;'r'
  1090  00FFCB  73                 	db	115	;'s'
  1091  00FFCC  69                 	db	105	;'i'
  1092  00FFCD  6F                 	db	111	;'o'
  1093  00FFCE  6E                 	db	110	;'n'
  1094  00FFCF  20                 	db	32
  1095  00FFD0  25                 	db	37
  1096  00FFD1  73                 	db	115	;'s'
  1097  00FFD2  20                 	db	32
  1098  00FFD3  20                 	db	32
  1099  00FFD4  20                 	db	32
  1100  00FFD5  00                 	db	0
  1101  00FFD6                     STR_13:
  1102                           
  1103                           ; BSR set to: 57
  1104  00FFD6  4E                 	db	78	;'N'
  1105  00FFD7  6F                 	db	111	;'o'
  1106  00FFD8  76                 	db	118	;'v'
  1107  00FFD9  20                 	db	32
  1108  00FFDA  20                 	db	32
  1109  00FFDB  32                 	db	50	;'2'
  1110  00FFDC  20                 	db	32
  1111  00FFDD  32                 	db	50	;'2'
  1112  00FFDE  30                 	db	48	;'0'
  1113  00FFDF  31                 	db	49	;'1'
  1114  00FFE0  39                 	db	57	;'9'
  1115  00FFE1  00                 	db	0
  1116  00FFE2                     STR_17:
  1117                           
  1118                           ; BSR set to: 57
  1119  00FFE2  25                 	db	37
  1120  00FFE3  73                 	db	115	;'s'
  1121  00FFE4  20                 	db	32
  1122  00FFE5  20                 	db	32
  1123  00FFE6  20                 	db	32
  1124  00FFE7  20                 	db	32
  1125  00FFE8  20                 	db	32
  1126  00FFE9  20                 	db	32
  1127  00FFEA  20                 	db	32
  1128  00FFEB  00                 	db	0
  1129  00FFEC                     STR_14:
  1130                           
  1131                           ; BSR set to: 57
  1132  00FFEC  31                 	db	49	;'1'
  1133  00FFED  31                 	db	49	;'1'
  1134  00FFEE  3A                 	db	58	;':'
  1135  00FFEF  34                 	db	52	;'4'
  1136  00FFF0  35                 	db	53	;'5'
  1137  00FFF1  3A                 	db	58	;':'
  1138  00FFF2  30                 	db	48	;'0'
  1139  00FFF3  37                 	db	55	;'7'
  1140  00FFF4  00                 	db	0
  1141  00FFF5                     STR_3:
  1142                           
  1143                           ; BSR set to: 57
  1144  00FFF5  30                 	db	48	;'0'
  1145  00FFF6  2E                 	db	46
  1146  00FFF7  36                 	db	54	;'6'
  1147  00FFF8  00                 	db	0
  1148  00FFF9                     STR_11:
  1149                           
  1150                           ; BSR set to: 57
  1151  00FFF9  25                 	db	37
  1152  00FFFA  63                 	db	99	;'c'
  1153  00FFFB  00                 	db	0
  1154  00FFFC                     STR_10:
  1155                           
  1156                           ; BSR set to: 57
  1157  00FFFC  25                 	db	37
  1158  00FFFD  73                 	db	115	;'s'
  1159  00FFFE  00                 	db	0
  1160  0000                     
  1161                           ; #config settings
  1162  00FFFF  00                 	db	0	; dummy byte at the end
  1163  0000                     
  1164                           	psect	cinit
  1165  0123E4                     __pcinit:
  1166                           	opt callstack 0
  1167  0123E4                     start_initialization:
  1168                           	opt callstack 0
  1169  0123E4                     __initialization:
  1170                           	opt callstack 0
  1171                           
  1172                           ; Initialize objects allocated to BANK1 (189 bytes)
  1173                           ; load TBLPTR registers with __pidataBANK1
  1174  0123E4  0E26               	movlw	low __pidataBANK1
  1175  0123E6  6EF6               	movwf	tblptrl,c
  1176  0123E8  0E23               	movlw	high __pidataBANK1
  1177  0123EA  6EF7               	movwf	tblptrh,c
  1178  0123EC  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1179  0123EE  6EF8               	movwf	tblptru,c
  1180  0123F0  EE00  F100         	lfsr	0,__pdataBANK1
  1181  0123F4  EE20 F0BD          	lfsr	2,189
  1182  0123F8                     copy_data0:
  1183  0123F8  0009               	tblrd		*+
  1184  0123FA  006F FFD7 FFEE     	movff	tablat,postinc0
  1185  012400  50DD               	movf	postdec2,w,c
  1186  012402  50D9               	movf	fsr2l,w,c
  1187  012404  E1F9               	bnz	copy_data0
  1188                           
  1189                           ; Initialize objects allocated to BANK0 (23 bytes)
  1190                           ; load TBLPTR registers with __pidataBANK0
  1191  012406  0E32               	movlw	low __pidataBANK0
  1192  012408  6EF6               	movwf	tblptrl,c
  1193  01240A  0E38               	movlw	high __pidataBANK0
  1194  01240C  6EF7               	movwf	tblptrh,c
  1195  01240E  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1196  012410  6EF8               	movwf	tblptru,c
  1197  012412  EE00  F0D5         	lfsr	0,__pdataBANK0
  1198  012416  EE20 F017          	lfsr	2,23
  1199  01241A                     copy_data1:
  1200  01241A  0009               	tblrd		*+
  1201  01241C  006F FFD7 FFEE     	movff	tablat,postinc0
  1202  012422  50DD               	movf	postdec2,w,c
  1203  012424  50D9               	movf	fsr2l,w,c
  1204  012426  E1F9               	bnz	copy_data1
  1205                           
  1206                           ; Clear objects allocated to BANK5 (255 bytes)
  1207  012428  EE01  F100         	lfsr	0,__pbssBANK5
  1208  01242C  EE20 F0FF          	lfsr	2,255
  1209  012430                     clear_0:
  1210  012430  6AEE               	clrf	postinc0,c
  1211  012432  50DD               	movf	postdec2,w,c
  1212  012434  50D9               	movf	fsr2l,w,c
  1213  012436  E1FC               	bnz	clear_0
  1214  012438  50DA               	movf	fsr2h,w,c
  1215  01243A  E1FA               	bnz	clear_0
  1216                           
  1217                           ; Clear objects allocated to BANK4 (255 bytes)
  1218  01243C  EE01  F000         	lfsr	0,__pbssBANK4
  1219  012440  EE20 F0FF          	lfsr	2,255
  1220  012444                     clear_1:
  1221  012444  6AEE               	clrf	postinc0,c
  1222  012446  50DD               	movf	postdec2,w,c
  1223  012448  50D9               	movf	fsr2l,w,c
  1224  01244A  E1FC               	bnz	clear_1
  1225  01244C  50DA               	movf	fsr2h,w,c
  1226  01244E  E1FA               	bnz	clear_1
  1227                           
  1228                           ; Clear objects allocated to BANK3 (218 bytes)
  1229  012450  EE00  F300         	lfsr	0,__pbssBANK3
  1230  012454  0EDA               	movlw	218
  1231  012456                     clear_2:
  1232  012456  6AEE               	clrf	postinc0,c
  1233  012458  06E8               	decf	wreg,f,c
  1234  01245A  E1FD               	bnz	clear_2
  1235                           
  1236                           ; Clear objects allocated to BANK2 (198 bytes)
  1237  01245C  EE00  F200         	lfsr	0,__pbssBANK2
  1238  012460  0EC6               	movlw	198
  1239  012462                     clear_3:
  1240  012462  6AEE               	clrf	postinc0,c
  1241  012464  06E8               	decf	wreg,f,c
  1242  012466  E1FD               	bnz	clear_3
  1243                           
  1244                           ; Clear objects allocated to BANK1 (64 bytes)
  1245  012468  EE00  F1BD         	lfsr	0,__pbssBANK1
  1246  01246C  0E40               	movlw	64
  1247  01246E                     clear_4:
  1248  01246E  6AEE               	clrf	postinc0,c
  1249  012470  06E8               	decf	wreg,f,c
  1250  012472  E1FD               	bnz	clear_4
  1251                           
  1252                           ; Clear objects allocated to BANK0 (117 bytes)
  1253  012474  EE00  F060         	lfsr	0,__pbssBANK0
  1254  012478  0E75               	movlw	117
  1255  01247A                     clear_5:
  1256  01247A  6AEE               	clrf	postinc0,c
  1257  01247C  06E8               	decf	wreg,f,c
  1258  01247E  E1FD               	bnz	clear_5
  1259                           
  1260                           ; Clear objects allocated to COMRAM (52 bytes)
  1261  012480  EE00  F001         	lfsr	0,__pbssCOMRAM
  1262  012484  0E34               	movlw	52
  1263  012486                     clear_6:
  1264  012486  6AEE               	clrf	postinc0,c
  1265  012488  06E8               	decf	wreg,f,c
  1266  01248A  E1FD               	bnz	clear_6
  1267                           
  1268                           ;
  1269                           ; Setup IVTBASE
  1270                           ;
  1271  01248C  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1272  01248E  6ED5               	movwf	213,c
  1273  012490  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1274  012492  6ED6               	movwf	214,c
  1275  012494  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1276  012496  6ED7               	movwf	215,c
  1277  012498                     end_of_initialization:
  1278                           	opt callstack 0
  1279  012498                     __end_of__initialization:
  1280                           	opt callstack 0
  1281  012498  0100               	movlb	0
  1282  01249A  EF84  F086         	goto	_main	;jump to C main() function
  1283                           
  1284                           	psect	bssCOMRAM
  1285  000001                     __pbssCOMRAM:
  1286                           	opt callstack 0
  1287  000001                     _TMR6_InterruptHandler:
  1288                           	opt callstack 0
  1289  000001                     	ds	3
  1290  000004                     _ADCC_ADTI_InterruptHandler:
  1291                           	opt callstack 0
  1292  000004                     	ds	3
  1293  000007                     _ADCC_ADI_InterruptHandler:
  1294                           	opt callstack 0
  1295  000007                     	ds	3
  1296  00000A                     _UART1_TxInterruptHandler:
  1297                           	opt callstack 0
  1298  00000A                     	ds	3
  1299  00000D                     _UART1_RxInterruptHandler:
  1300                           	opt callstack 0
  1301  00000D                     	ds	3
  1302  000010                     _UART2_TxInterruptHandler:
  1303                           	opt callstack 0
  1304  000010                     	ds	3
  1305  000013                     _UART2_RxInterruptHandler:
  1306                           	opt callstack 0
  1307  000013                     	ds	3
  1308  000016                     _INT1_InterruptHandler:
  1309                           	opt callstack 0
  1310  000016                     	ds	3
  1311  000019                     _INT0_InterruptHandler:
  1312                           	opt callstack 0
  1313  000019                     	ds	3
  1314  00001C                     _nout:
  1315                           	opt callstack 0
  1316  00001C                     	ds	2
  1317  00001E                     _width:
  1318                           	opt callstack 0
  1319  00001E                     	ds	2
  1320  000020                     _prec:
  1321                           	opt callstack 0
  1322  000020                     	ds	2
  1323  000022                     _flags:
  1324                           	opt callstack 0
  1325  000022                     	ds	2
  1326  000024                     TMR5_ISR@CountCallBack:
  1327                           	opt callstack 0
  1328  000024                     	ds	2
  1329  000026                     _timer5ReloadVal:
  1330                           	opt callstack 0
  1331  000026                     	ds	2
  1332  000028                     _mode_sw:
  1333                           	opt callstack 0
  1334  000028                     	ds	1
  1335  000029                     _uart2RxCount:
  1336                           	opt callstack 0
  1337  000029                     	ds	1
  1338  00002A                     _uart2RxTail:
  1339                           	opt callstack 0
  1340  00002A                     	ds	1
  1341  00002B                     _uart2RxHead:
  1342                           	opt callstack 0
  1343  00002B                     	ds	1
  1344  00002C                     _uart2TxBufferRemaining:
  1345                           	opt callstack 0
  1346  00002C                     	ds	1
  1347  00002D                     _uart2TxTail:
  1348                           	opt callstack 0
  1349  00002D                     	ds	1
  1350  00002E                     _uart2TxHead:
  1351                           	opt callstack 0
  1352  00002E                     	ds	1
  1353  00002F                     _uart1RxCount:
  1354                           	opt callstack 0
  1355  00002F                     	ds	1
  1356  000030                     _uart1RxTail:
  1357                           	opt callstack 0
  1358  000030                     	ds	1
  1359  000031                     _uart1RxHead:
  1360                           	opt callstack 0
  1361  000031                     	ds	1
  1362  000032                     _uart1TxBufferRemaining:
  1363                           	opt callstack 0
  1364  000032                     	ds	1
  1365  000033                     _uart1TxTail:
  1366                           	opt callstack 0
  1367  000033                     	ds	1
  1368  000034                     _uart1TxHead:
  1369                           	opt callstack 0
  1370  000034                     	ds	1
  1371                           
  1372                           	psect	bssBANK0
  1373  000060                     __pbssBANK0:
  1374                           	opt callstack 0
  1375  000060                     _R:
  1376                           	opt callstack 0
  1377  000060                     	ds	34
  1378  000082                     _tickCount:
  1379                           	opt callstack 0
  1380  000082                     	ds	24
  1381  00009A                     _spi_link:
  1382                           	opt callstack 0
  1383  00009A                     	ds	12
  1384  0000A6                     wdtdelay@dcount:
  1385                           	opt callstack 0
  1386  0000A6                     	ds	4
  1387  0000AA                     _TMR5_InterruptHandler:
  1388                           	opt callstack 0
  1389  0000AA                     	ds	3
  1390  0000AD                     _dbuf:
  1391                           	opt callstack 0
  1392  0000AD                     	ds	32
  1393  0000CD                     _seed:
  1394                           	opt callstack 0
  1395  0000CD                     	ds	8
  1396                           
  1397                           	psect	dataBANK0
  1398  0000D5                     __pdataBANK0:
  1399                           	opt callstack 0
  1400  0000D5                     stoa@F1144:
  1401                           	opt callstack 0
  1402  0000D5                     	ds	7
  1403  0000DC                     _port_data:
  1404                           	opt callstack 0
  1405  0000DC                     	ds	16
  1406                           
  1407                           	psect	bssBANK1
  1408  0001BD                     __pbssBANK1:
  1409                           	opt callstack 0
  1410  0001BD                     _uart1TxBuffer:
  1411                           	opt callstack 0
  1412  0001BD                     	ds	64
  1413                           
  1414                           	psect	dataBANK1
  1415  000100                     __pdataBANK1:
  1416                           	opt callstack 0
  1417  000100                     _V:
  1418                           	opt callstack 0
  1419  000100                     	ds	189
  1420                           
  1421                           	psect	bssBANK2
  1422  000200                     __pbssBANK2:
  1423                           	opt callstack 0
  1424  000200                     _uart2TxBuffer:
  1425                           	opt callstack 0
  1426  000200                     	ds	64
  1427  000240                     _ring_buf2:
  1428                           	opt callstack 0
  1429  000240                     	ds	67
  1430  000283                     _ring_buf1:
  1431                           	opt callstack 0
  1432  000283                     	ds	67
  1433                           
  1434                           	psect	bssBANK3
  1435  000300                     __pbssBANK3:
  1436                           	opt callstack 0
  1437  000300                     _D:
  1438                           	opt callstack 0
  1439  000300                     	ds	218
  1440                           
  1441                           	psect	bssBANK4
  1442  000400                     __pbssBANK4:
  1443                           	opt callstack 0
  1444  000400                     _uart1RxBuffer:
  1445                           	opt callstack 0
  1446  000400                     	ds	255
  1447                           
  1448                           	psect	bssBANK5
  1449  000500                     __pbssBANK5:
  1450                           	opt callstack 0
  1451  000500                     _uart2RxBuffer:
  1452                           	opt callstack 0
  1453  000500                     	ds	255
  1454                           
  1455                           	psect	cstackBANK0
  1456  0000EC                     __pcstackBANK0:
  1457                           	opt callstack 0
  1458  0000EC                     ??_TMR6_ISR:
  1459                           
  1460                           ; 1 bytes @ 0x0
  1461  0000EC                     	ds	1
  1462  0000ED                     ??_TMR5_ISR:
  1463                           
  1464                           ; 1 bytes @ 0x1
  1465  0000ED                     	ds	4
  1466                           
  1467                           	psect	cstackCOMRAM
  1468  000055                     __pcstackCOMRAM:
  1469                           	opt callstack 0
  1470  000055                     ??_ADCC_ISR:
  1471  000055                     
  1472                           ; 1 bytes @ 0x0
  1473  000055                     	ds	1
  1474  000056                     ??_ADCC_ThresholdISR:
  1475                           
  1476                           ; 1 bytes @ 0x1
  1477  000056                     	ds	5
  1478                           
  1479 ;;
  1480 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1481 ;;
  1482 ;; *************** function _main *****************
  1483 ;; Defined at:
  1484 ;;		line 148 in file "main.c"
  1485 ;; Parameters:    Size  Location     Type
  1486 ;;		None
  1487 ;; Auto vars:     Size  Location     Type
  1488 ;;  mode            1  [STACK] enum E17005
  1489 ;; Return value:  Size  Location     Type
  1490 ;;                  1  [STACK] void 
  1491 ;; Registers used:
  1492 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  1493 ;; Tracked objects:
  1494 ;;		On entry : 0/0
  1495 ;;		On exit  : 7/3
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1502 ;;Total ram usage:        0 bytes
  1503 ;; Hardware stack levels required when called:   19
  1504 ;; This function calls:
  1505 ;;		_SYSTEM_Initialize
  1506 ;;		_StartTimer
  1507 ;;		_TimerDone
  1508 ;;		_WaitMs
  1509 ;;		_check_adc_scan
  1510 ;;		_check_help
  1511 ;;		_clear_adc_scan
  1512 ;;		_eaDogM_WriteCommand
  1513 ;;		_get_raw_result
  1514 ;;		_get_vterm_ptr
  1515 ;;		_init_display
  1516 ;;		_mode_lamp_dim
  1517 ;;		_set_display_info
  1518 ;;		_set_vterm
  1519 ;;		_sprintf
  1520 ;;		_srand
  1521 ;;		_start_adc_scan
  1522 ;;		_update_lcd
  1523 ;; This function is called by:
  1524 ;;		Startup code after reset
  1525 ;; This function uses a reentrant model
  1526 ;;
  1527                           
  1528                           	psect	text0
  1529  010D08                     __ptext0:
  1530                           	opt callstack 0
  1531  010D08                     _main:
  1532                           	opt callstack 0
  1533                           
  1534                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1535  010D08  52E6               	movf	postinc1,f,c
  1536                           
  1537                           ;main.c: 150:  UI_STATES mode;;main.c: 153:  SYSTEM_Initialize();
  1538                           
  1539                           ;incstack = 0
  1540  010D0A  ECA6  F097         	call	_SYSTEM_Initialize	;wreg free
  1541                           
  1542                           ; BSR set to: 60
  1543                           ;main.c: 156:  (INTCON0bits.GIEH = 1);
  1544  010D0E  8ED2               	bsf	210,7,c	;volatile
  1545                           
  1546                           ; BSR set to: 60
  1547                           ;main.c: 159:  (INTCON0bits.GIEL = 1);
  1548  010D10  8CD2               	bsf	210,6,c	;volatile
  1549                           
  1550                           ; BSR set to: 60
  1551                           ;main.c: 161:  V.ui_state = UI_STATE_INIT;
  1552  010D12  0101               	movlb	1	; () banked
  1553  010D14  6B00               	clrf	_V& (0+255),b	;volatile
  1554                           
  1555                           ; BSR set to: 1
  1556                           ;main.c: 166:  WaitMs(300);
  1557  010D16  0E2C               	movlw	44
  1558  010D18  6EE6               	movwf	postinc1,c
  1559  010D1A  0E01               	movlw	1
  1560  010D1C  6EE6               	movwf	postinc1,c
  1561  010D1E  ECC8  F098         	call	_WaitMs	;wreg free
  1562                           
  1563                           ;main.c: 167:  if (PORTBbits.RB0) {
  1564  010D22  A0CB               	btfss	203,0,c	;volatile
  1565  010D24  D004               	goto	l6395
  1566                           
  1567                           ;main.c: 168:   mode = UI_STATE_HOST;
  1568                           ;stkvar	_mode @ sp[(-1)+0]
  1569  010D26  0EFF               	movlw	-1
  1570  010D28  6AE3               	clrf	plusw1,c
  1571  010D2A  2AE3               	incf	plusw1,f,c
  1572                           
  1573                           ;main.c: 169:  } else {
  1574  010D2C  D004               	goto	l6397
  1575  010D2E                     l6395:
  1576                           
  1577                           ;main.c: 170:   mode = UI_STATE_LOG;
  1578                           ;stkvar	_mode @ sp[(-1)+0]
  1579  010D2E  0EFF               	movlw	-1
  1580  010D30  6AE3               	clrf	plusw1,c
  1581  010D32  80E3               	bsf	plusw1,0,c
  1582  010D34  82E3               	bsf	plusw1,1,c	;indir
  1583  010D36                     l6397:
  1584                           
  1585                           ;main.c: 173:  if (mode == UI_STATE_HOST) {
  1586                           ;stkvar	_mode @ sp[(-1)+0]
  1587  010D36  0EFF               	movlw	-1
  1588  010D38  04E3               	decf	plusw1,w,c
  1589  010D3A  A4D8               	btfss	status,2,c
  1590  010D3C  D007               	goto	l1236
  1591                           
  1592                           ;main.c: 174:   do { LATDbits.LATD0 = 1; } while(0);
  1593  010D3E  80BD               	bsf	189,0,c	;volatile
  1594                           
  1595                           ;main.c: 175:   V.mode_pwm = 70;
  1596  010D40  0E00               	movlw	0
  1597  010D42  0101               	movlb	1	; () banked
  1598  010D44  6FA0               	movwf	(_V+160)& (0+255),b	;volatile
  1599  010D46  0E46               	movlw	70
  1600  010D48  6F9F               	movwf	(_V+159)& (0+255),b	;volatile
  1601                           
  1602                           ;main.c: 176:  } else {
  1603  010D4A  D004               	goto	l6401
  1604  010D4C                     l1236:
  1605  010D4C  90BD               	bcf	189,0,c	;volatile
  1606                           
  1607                           ;main.c: 178:   V.mode_pwm = 0;
  1608  010D4E  0101               	movlb	1	; () banked
  1609  010D50  6B9F               	clrf	(_V+159)& (0+255),b	;volatile
  1610  010D52  6BA0               	clrf	(_V+160)& (0+255),b	;volatile
  1611  010D54                     l6401:
  1612                           
  1613                           ; BSR set to: 1
  1614                           ;main.c: 180:  mode_lamp_dim(V.mode_pwm);
  1615  010D54  0060  F67F  FFE6   	movff	_V+159,postinc1
  1616  010D5A  0060  F683  FFE6   	movff	_V+160,postinc1
  1617  010D60  EC01  F09C         	call	_mode_lamp_dim	;wreg free
  1618  010D64  D0CB               	goto	l6443
  1619  010D66                     l6403:
  1620                           
  1621                           ; BSR set to: 1
  1622                           ;main.c: 191:    init_display();
  1623  010D66  EC1E  F091         	call	_init_display	;wreg free
  1624                           
  1625                           ; BSR set to: 61
  1626                           ;main.c: 192:    eaDogM_WriteCommand(0b00001100);
  1627  010D6A  0E0C               	movlw	12
  1628  010D6C  6EE6               	movwf	postinc1,c
  1629  010D6E  EC61  F09C         	call	_eaDogM_WriteCommand	;wreg free
  1630                           
  1631                           ; BSR set to: 0
  1632                           ;main.c: 194:    V.ui_state = mode;
  1633                           ;stkvar	_mode @ sp[(-1)+0]
  1634  010D72  0EFF               	movlw	-1
  1635  010D74  006F FF8C  F100    	movff	plusw1,_V	;volatile
  1636                           
  1637                           ; BSR set to: 0
  1638                           ;main.c: 195:    srand(1957);
  1639  010D7A  0EA5               	movlw	165
  1640  010D7C  6EE6               	movwf	postinc1,c
  1641  010D7E  0E07               	movlw	7
  1642  010D80  6EE6               	movwf	postinc1,c
  1643  010D82  ECFE  F098         	call	_srand	;wreg free
  1644                           
  1645                           ; BSR set to: 0
  1646                           ;main.c: 196:    set_vterm(0);
  1647  010D86  0E00               	movlw	0
  1648  010D88  6EE6               	movwf	postinc1,c
  1649  010D8A  ECCC  F09B         	call	_set_vterm	;wreg free
  1650                           
  1651                           ; BSR set to: 3
  1652                           ;main.c: 197:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  1653  010D8E  0E96               	movlw	low STR_1
  1654  010D90  6EE6               	movwf	postinc1,c
  1655  010D92  0EFF               	movlw	high STR_1
  1656  010D94  6EE6               	movwf	postinc1,c
  1657  010D96  0E00               	movlw	0
  1658  010D98  6EE6               	movwf	postinc1,c
  1659  010D9A  0E00               	movlw	0
  1660  010D9C  6EE6               	movwf	postinc1,c
  1661  010D9E  EC62  F099         	call	_get_vterm_ptr	;wreg free
  1662  010DA2  0060  F0D7  FFE6   	movff	btemp,postinc1
  1663  010DA8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1664  010DAE  0E04               	movlw	4
  1665  010DB0  6EE6               	movwf	postinc1,c
  1666  010DB2  EC15  F090         	call	_sprintf	;wreg free
  1667                           
  1668                           ;main.c: 198:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.6");
  1669  010DB6  0EF5               	movlw	low STR_3
  1670  010DB8  6EE6               	movwf	postinc1,c
  1671  010DBA  0EFF               	movlw	high STR_3
  1672  010DBC  6EE6               	movwf	postinc1,c
  1673  010DBE  0EC7               	movlw	low STR_2
  1674  010DC0  6EE6               	movwf	postinc1,c
  1675  010DC2  0EFF               	movlw	high STR_2
  1676  010DC4  6EE6               	movwf	postinc1,c
  1677  010DC6  0E00               	movlw	0
  1678  010DC8  6EE6               	movwf	postinc1,c
  1679  010DCA  0E01               	movlw	1
  1680  010DCC  6EE6               	movwf	postinc1,c
  1681  010DCE  EC62  F099         	call	_get_vterm_ptr	;wreg free
  1682  010DD2  0060  F0D7  FFE6   	movff	btemp,postinc1
  1683  010DD8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1684  010DDE  0E06               	movlw	6
  1685  010DE0  6EE6               	movwf	postinc1,c
  1686  010DE2  EC15  F090         	call	_sprintf	;wreg free
  1687                           
  1688                           ;main.c: 199:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  1689  010DE6  0E85               	movlw	low STR_4
  1690  010DE8  6EE6               	movwf	postinc1,c
  1691  010DEA  0EFF               	movlw	high STR_4
  1692  010DEC  6EE6               	movwf	postinc1,c
  1693  010DEE  0E00               	movlw	0
  1694  010DF0  6EE6               	movwf	postinc1,c
  1695  010DF2  0E02               	movlw	2
  1696  010DF4  6EE6               	movwf	postinc1,c
  1697  010DF6  EC62  F099         	call	_get_vterm_ptr	;wreg free
  1698  010DFA  0060  F0D7  FFE6   	movff	btemp,postinc1
  1699  010E00  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1700  010E06  0E04               	movlw	4
  1701  010E08  6EE6               	movwf	postinc1,c
  1702  010E0A  EC15  F090         	call	_sprintf	;wreg free
  1703                           
  1704                           ;main.c: 200:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  1705  010E0E  0EA7               	movlw	low STR_5
  1706  010E10  6EE6               	movwf	postinc1,c
  1707  010E12  0EFF               	movlw	high STR_5
  1708  010E14  6EE6               	movwf	postinc1,c
  1709  010E16  0E02               	movlw	2
  1710  010E18  6EE6               	movwf	postinc1,c
  1711  010E1A  0E00               	movlw	0
  1712  010E1C  6EE6               	movwf	postinc1,c
  1713  010E1E  EC62  F099         	call	_get_vterm_ptr	;wreg free
  1714  010E22  0060  F0D7  FFE6   	movff	btemp,postinc1
  1715  010E28  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1716  010E2E  0E04               	movlw	4
  1717  010E30  6EE6               	movwf	postinc1,c
  1718  010E32  EC15  F090         	call	_sprintf	;wreg free
  1719                           
  1720                           ;main.c: 201:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.6");
  1721  010E36  0EF5               	movlw	low STR_3
  1722  010E38  6EE6               	movwf	postinc1,c
  1723  010E3A  0EFF               	movlw	high STR_3
  1724  010E3C  6EE6               	movwf	postinc1,c
  1725  010E3E  0EC7               	movlw	low STR_2
  1726  010E40  6EE6               	movwf	postinc1,c
  1727  010E42  0EFF               	movlw	high STR_2
  1728  010E44  6EE6               	movwf	postinc1,c
  1729  010E46  0E02               	movlw	2
  1730  010E48  6EE6               	movwf	postinc1,c
  1731  010E4A  0E01               	movlw	1
  1732  010E4C  6EE6               	movwf	postinc1,c
  1733  010E4E  EC62  F099         	call	_get_vterm_ptr	;wreg free
  1734  010E52  0060  F0D7  FFE6   	movff	btemp,postinc1
  1735  010E58  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1736  010E5E  0E06               	movlw	6
  1737  010E60  6EE6               	movwf	postinc1,c
  1738  010E62  EC15  F090         	call	_sprintf	;wreg free
  1739                           
  1740                           ;main.c: 202:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  1741  010E66  0E74               	movlw	low STR_8
  1742  010E68  6EE6               	movwf	postinc1,c
  1743  010E6A  0EFF               	movlw	high STR_8
  1744  010E6C  6EE6               	movwf	postinc1,c
  1745  010E6E  0E02               	movlw	2
  1746  010E70  6EE6               	movwf	postinc1,c
  1747  010E72  0E02               	movlw	2
  1748  010E74  6EE6               	movwf	postinc1,c
  1749  010E76  EC62  F099         	call	_get_vterm_ptr	;wreg free
  1750  010E7A  0060  F0D7  FFE6   	movff	btemp,postinc1
  1751  010E80  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1752  010E86  0E04               	movlw	4
  1753  010E88  6EE6               	movwf	postinc1,c
  1754  010E8A  EC15  F090         	call	_sprintf	;wreg free
  1755                           
  1756                           ;main.c: 203:    update_lcd(0);
  1757  010E8E  0E00               	movlw	0
  1758  010E90  6EE6               	movwf	postinc1,c
  1759  010E92  EC8E  F08F         	call	_update_lcd	;wreg free
  1760                           
  1761                           ;main.c: 204:    WaitMs(3000);
  1762  010E96  0EB8               	movlw	184
  1763  010E98  6EE6               	movwf	postinc1,c
  1764  010E9A  0E0B               	movlw	11
  1765  010E9C  6EE6               	movwf	postinc1,c
  1766  010E9E  ECC8  F098         	call	_WaitMs	;wreg free
  1767                           
  1768                           ;main.c: 205:    StartTimer(TMR_DISPLAY, 100);
  1769  010EA2  0E64               	movlw	100
  1770  010EA4  6EE6               	movwf	postinc1,c
  1771  010EA6  0E00               	movlw	0
  1772  010EA8  6EE6               	movwf	postinc1,c
  1773  010EAA  0E0A               	movlw	10
  1774  010EAC  6EE6               	movwf	postinc1,c
  1775  010EAE  EC72  F098         	call	_StartTimer	;wreg free
  1776                           
  1777                           ;main.c: 206:    StartTimer(TMR_ADC, 200);
  1778  010EB2  0EC8               	movlw	200
  1779  010EB4  6EE6               	movwf	postinc1,c
  1780  010EB6  0E00               	movlw	0
  1781  010EB8  6EE6               	movwf	postinc1,c
  1782  010EBA  0E01               	movlw	1
  1783  010EBC  6EE6               	movwf	postinc1,c
  1784  010EBE  EC72  F098         	call	_StartTimer	;wreg free
  1785                           
  1786                           ;main.c: 207:    StartTimer(TMR_INFO, 3000);
  1787  010EC2  0EB8               	movlw	184
  1788  010EC4  6EE6               	movwf	postinc1,c
  1789  010EC6  0E0B               	movlw	11
  1790  010EC8  6EE6               	movwf	postinc1,c
  1791  010ECA  0E07               	movlw	7
  1792  010ECC  6EE6               	movwf	postinc1,c
  1793  010ECE  EC72  F098         	call	_StartTimer	;wreg free
  1794                           
  1795                           ;main.c: 208:    StartTimer(TMR_FLIPPER, 1500);
  1796  010ED2  0EDC               	movlw	220
  1797  010ED4  6EE6               	movwf	postinc1,c
  1798  010ED6  0E05               	movlw	5
  1799  010ED8  6EE6               	movwf	postinc1,c
  1800  010EDA  0E0B               	movlw	11
  1801  010EDC  6EE6               	movwf	postinc1,c
  1802  010EDE  EC72  F098         	call	_StartTimer	;wreg free
  1803                           
  1804                           ;main.c: 209:    StartTimer(TMR_HELPDIS, 3000);
  1805  010EE2  0EB8               	movlw	184
  1806  010EE4  6EE6               	movwf	postinc1,c
  1807  010EE6  0E0B               	movlw	11
  1808  010EE8  6EE6               	movwf	postinc1,c
  1809  010EEA  0E09               	movlw	9
  1810  010EEC  6EE6               	movwf	postinc1,c
  1811  010EEE  EC72  F098         	call	_StartTimer	;wreg free
  1812                           
  1813                           ;main.c: 211:    start_adc_scan();
  1814  010EF2  EC0D  F096         	call	_start_adc_scan	;wreg free
  1815                           
  1816                           ;main.c: 213:    break;
  1817  010EF6  D016               	goto	l6445
  1818  010EF8                     l1245:
  1819                           
  1820                           ; BSR set to: 1
  1821                           ;main.c: 220:    V.ui_state = UI_STATE_INIT;
  1822  010EF8  6B00               	clrf	_V& (0+255),b	;volatile
  1823                           
  1824                           ;main.c: 221:    break;
  1825  010EFA  D014               	goto	l6445
  1826  010EFC                     l6443:
  1827  010EFC  0101               	movlb	1	; () banked
  1828  010EFE  5100               	movf	_V& (0+255),w,b	;volatile
  1829  010F00  6E3F               	movwf	(btemp+10)^0,c
  1830  010F02  6A40               	clrf	(btemp+11)^0,c
  1831                           
  1832                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1833                           ; Switch size 1, requested type "simple"
  1834                           ; Number of cases is 1, Range of values is 0 to 0
  1835                           ; switch strategies available:
  1836                           ; Name         Instructions Cycles
  1837                           ; simple_byte            4     3 (average)
  1838                           ;	Chosen strategy is simple_byte
  1839  010F04  5040               	movf	(btemp+11)^0,w,c
  1840  010F06  0A00               	xorlw	0	; case 0
  1841  010F08  A4D8               	btfss	status,2,c
  1842  010F0A  D7F6               	goto	l1245
  1843                           
  1844                           ; BSR set to: 1
  1845                           ; Switch size 1, requested type "simple"
  1846                           ; Number of cases is 4, Range of values is 0 to 4
  1847                           ; switch strategies available:
  1848                           ; Name         Instructions Cycles
  1849                           ; simple_byte           13     7 (average)
  1850                           ;	Chosen strategy is simple_byte
  1851  010F0C  503F               	movf	(btemp+10)^0,w,c
  1852  010F0E  0A00               	xorlw	0	; case 0
  1853  010F10  B4D8               	btfsc	status,2,c
  1854  010F12  D729               	goto	l6403
  1855  010F14  0A01               	xorlw	1	; case 1
  1856  010F16  B4D8               	btfsc	status,2,c
  1857  010F18  D005               	goto	l6445
  1858  010F1A  0A02               	xorlw	2	; case 3
  1859  010F1C  B4D8               	btfsc	status,2,c
  1860  010F1E  D002               	goto	l6445
  1861  010F20  0A07               	xorlw	7	; case 4
  1862  010F22  D7EA               	goto	l1245
  1863  010F24                     l6445:
  1864                           
  1865                           ;main.c: 224:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  1866  010F24  0E01               	movlw	1
  1867  010F26  6EE6               	movwf	postinc1,c
  1868  010F28  EC0D  F09B         	call	_TimerDone	;wreg free
  1869  010F2C  5035               	movf	btemp^0,w,c
  1870  010F2E  B4D8               	btfsc	status,2,c
  1871  010F30  D011               	goto	l6455
  1872  010F32  ECA5  F09C         	call	_check_adc_scan	;wreg free
  1873  010F36  5035               	movf	btemp^0,w,c
  1874  010F38  B4D8               	btfsc	status,2,c
  1875  010F3A  D00C               	goto	l6455
  1876                           
  1877                           ;main.c: 225:    clear_adc_scan();
  1878  010F3C  ECAD  F09C         	call	_clear_adc_scan	;wreg free
  1879                           
  1880                           ; BSR set to: 0
  1881                           ;main.c: 226:    start_adc_scan();
  1882  010F40  EC0D  F096         	call	_start_adc_scan	;wreg free
  1883                           
  1884                           ;main.c: 227:    StartTimer(TMR_ADC, 200);
  1885  010F44  0EC8               	movlw	200
  1886  010F46  6EE6               	movwf	postinc1,c
  1887  010F48  0E00               	movlw	0
  1888  010F4A  6EE6               	movwf	postinc1,c
  1889  010F4C  0E01               	movlw	1
  1890  010F4E  6EE6               	movwf	postinc1,c
  1891  010F50  EC72  F098         	call	_StartTimer	;wreg free
  1892  010F54                     l6455:
  1893                           
  1894                           ;main.c: 234:   if (TimerDone(TMR_DISPLAY)) {
  1895                           
  1896                           ;main.c: 230:   if (V.ticks) {
  1897  010F54  0E0A               	movlw	10
  1898  010F56  6EE6               	movwf	postinc1,c
  1899  010F58  EC0D  F09B         	call	_TimerDone	;wreg free
  1900  010F5C  5035               	movf	btemp^0,w,c
  1901  010F5E  B4D8               	btfsc	status,2,c
  1902  010F60  D053               	goto	l6469
  1903                           
  1904                           ;main.c: 235:    if (TimerDone(TMR_HELPDIS)) {
  1905  010F62  0E09               	movlw	9
  1906  010F64  6EE6               	movwf	postinc1,c
  1907  010F66  EC0D  F09B         	call	_TimerDone	;wreg free
  1908  010F6A  5035               	movf	btemp^0,w,c
  1909  010F6C  B4D8               	btfsc	status,2,c
  1910  010F6E  D004               	goto	l6463
  1911                           
  1912                           ;main.c: 236:     set_display_info(DIS_STR);
  1913  010F70  0E00               	movlw	0
  1914  010F72  6EE6               	movwf	postinc1,c
  1915  010F74  EC82  F09B         	call	_set_display_info	;wreg free
  1916  010F78                     l6463:
  1917                           
  1918                           ;main.c: 238:    sprintf(get_vterm_ptr(1, 0), "%d %d, %d %d    #", get_raw_result(C_BATT
      +                          ), get_raw_result(C_PV), get_raw_result(V_CC), get_raw_result(V_BAT));
  1919  010F78  0E04               	movlw	4
  1920  010F7A  6EE6               	movwf	postinc1,c
  1921  010F7C  EC73  F09B         	call	_get_raw_result	;wreg free
  1922  010F80  0060  F0D7  FFE6   	movff	btemp,postinc1
  1923  010F86  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1924  010F8C  0E02               	movlw	2
  1925  010F8E  6EE6               	movwf	postinc1,c
  1926  010F90  EC73  F09B         	call	_get_raw_result	;wreg free
  1927  010F94  0060  F0D7  FFE6   	movff	btemp,postinc1
  1928  010F9A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1929  010FA0  0E01               	movlw	1
  1930  010FA2  6EE6               	movwf	postinc1,c
  1931  010FA4  EC73  F09B         	call	_get_raw_result	;wreg free
  1932  010FA8  0060  F0D7  FFE6   	movff	btemp,postinc1
  1933  010FAE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1934  010FB4  0E00               	movlw	0
  1935  010FB6  6EE6               	movwf	postinc1,c
  1936  010FB8  EC73  F09B         	call	_get_raw_result	;wreg free
  1937  010FBC  0060  F0D7  FFE6   	movff	btemp,postinc1
  1938  010FC2  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1939  010FC8  0E62               	movlw	low STR_9
  1940  010FCA  6EE6               	movwf	postinc1,c
  1941  010FCC  0EFF               	movlw	high STR_9
  1942  010FCE  6EE6               	movwf	postinc1,c
  1943  010FD0  0E00               	movlw	0
  1944  010FD2  6EE6               	movwf	postinc1,c
  1945  010FD4  0E01               	movlw	1
  1946  010FD6  6EE6               	movwf	postinc1,c
  1947  010FD8  EC62  F099         	call	_get_vterm_ptr	;wreg free
  1948  010FDC  0060  F0D7  FFE6   	movff	btemp,postinc1
  1949  010FE2  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1950  010FE8  0E0C               	movlw	12
  1951  010FEA  6EE6               	movwf	postinc1,c
  1952  010FEC  EC15  F090         	call	_sprintf	;wreg free
  1953                           
  1954                           ;main.c: 239:    StartTimer(TMR_DISPLAY, 100);
  1955  010FF0  0E64               	movlw	100
  1956  010FF2  6EE6               	movwf	postinc1,c
  1957  010FF4  0E00               	movlw	0
  1958  010FF6  6EE6               	movwf	postinc1,c
  1959  010FF8  0E0A               	movlw	10
  1960  010FFA  6EE6               	movwf	postinc1,c
  1961  010FFC  EC72  F098         	call	_StartTimer	;wreg free
  1962                           
  1963                           ;main.c: 240:    update_lcd(0);
  1964  011000  0E00               	movlw	0
  1965  011002  6EE6               	movwf	postinc1,c
  1966  011004  EC8E  F08F         	call	_update_lcd	;wreg free
  1967  011008                     l6469:
  1968                           
  1969                           ;main.c: 246:   check_help(V.flipper);
  1970  011008  0101               	movlb	1	; () banked
  1971  01100A  51BC               	movf	(_V+188)& (0+255),w,b	;volatile
  1972  01100C  6EE6               	movwf	postinc1,c
  1973  01100E  EC5C  F08D         	call	_check_help	;wreg free
  1974                           
  1975                           ;main.c: 251:   if (V.set_sequ) {
  1976  011012  0101               	movlb	1	; () banked
  1977  011014  A7A7               	btfss	(_V+167)& (0+255),3,b	;volatile
  1978  011016  D772               	goto	l6443
  1979                           
  1980                           ; BSR set to: 1
  1981                           ;main.c: 252:    if (TimerDone(TMR_INFO)) {
  1982  011018  0E07               	movlw	7
  1983  01101A  6EE6               	movwf	postinc1,c
  1984  01101C  EC0D  F09B         	call	_TimerDone	;wreg free
  1985  011020  5035               	movf	btemp^0,w,c
  1986  011022  B4D8               	btfsc	status,2,c
  1987  011024  D00B               	goto	l6481
  1988                           
  1989                           ;main.c: 253:     V.set_sequ = 0;
  1990  011026  0101               	movlb	1	; () banked
  1991  011028  97A7               	bcf	(_V+167)& (0+255),3,b	;volatile
  1992                           
  1993                           ; BSR set to: 1
  1994                           ;main.c: 254:     set_vterm(0);
  1995  01102A  0E00               	movlw	0
  1996  01102C  6EE6               	movwf	postinc1,c
  1997  01102E  ECCC  F09B         	call	_set_vterm	;wreg free
  1998                           
  1999                           ; BSR set to: 3
  2000                           ;main.c: 255:     update_lcd(0);
  2001  011032  0E00               	movlw	0
  2002  011034  6EE6               	movwf	postinc1,c
  2003  011036  EC8E  F08F         	call	_update_lcd	;wreg free
  2004                           
  2005                           ;main.c: 256:    } else {
  2006  01103A  D760               	goto	l6443
  2007  01103C                     l6481:
  2008                           
  2009                           ;main.c: 257:     set_vterm(2);
  2010  01103C  0E02               	movlw	2
  2011  01103E  6EE6               	movwf	postinc1,c
  2012  011040  ECCC  F09B         	call	_set_vterm	;wreg free
  2013                           
  2014                           ; BSR set to: 3
  2015                           ;main.c: 258:     update_lcd(2);
  2016  011044  0E02               	movlw	2
  2017  011046  6EE6               	movwf	postinc1,c
  2018  011048  EC8E  F08F         	call	_update_lcd	;wreg free
  2019  01104C  D757               	goto	l6443
  2020  01104E                     __end_of_main:
  2021                           	opt callstack 0
  2022                           
  2023 ;; *************** function _start_adc_scan *****************
  2024 ;; Defined at:
  2025 ;;		line 29 in file "daq.c"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;		None
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;		None
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  1  [STACK] _Bool 
  2032 ;; Registers used:
  2033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/3
  2036 ;;		On exit  : 1/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2043 ;;Total ram usage:        0 bytes
  2044 ;; Hardware stack levels used:    1
  2045 ;; Hardware stack levels required when called:    7
  2046 ;; This function calls:
  2047 ;;		_ADCC_SetADIInterruptHandler
  2048 ;;		_ADCC_SetADTIInterruptHandler
  2049 ;;		_ADCC_StartConversion
  2050 ;; This function is called by:
  2051 ;;		_main
  2052 ;; This function uses a reentrant model
  2053 ;;
  2054                           
  2055                           	psect	text1
  2056  012C1A                     __ptext1:
  2057                           	opt callstack 0
  2058  012C1A                     _start_adc_scan:
  2059                           	opt callstack 23
  2060                           
  2061                           ;daq.c: 31:  if (R.done)
  2062                           
  2063                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2064                           ;incstack = 0
  2065  012C1A  0100               	movlb	0	; () banked
  2066  012C1C  5181               	movf	(_R+33)& (0+255),w,b	;volatile
  2067  012C1E  A4D8               	btfss	status,2,c
  2068  012C20  0012               	return	
  2069                           
  2070                           ; BSR set to: 0
  2071                           ;daq.c: 34:  R.scan_index = 0;
  2072  012C22  6B7E               	clrf	(_R+30)& (0+255),b	;volatile
  2073                           
  2074                           ; BSR set to: 0
  2075                           ;daq.c: 35:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  2076  012C24  013A               	movlb	58	; () banked
  2077  012C26  5140               	movf	64,w,b	;volatile
  2078  012C28  006E F940  F035    	movff	14928,btemp	;volatile
  2079  012C2E  6A36               	clrf	(btemp+1)^0,c
  2080  012C30  0060  F0D4  F036   	movff	btemp,btemp+1
  2081  012C36  6A35               	clrf	btemp^0,c
  2082  012C38  2635               	addwf	btemp^0,f,c
  2083  012C3A  0E00               	movlw	0
  2084  012C3C  2236               	addwfc	(btemp+1)^0,f,c
  2085  012C3E  0E77               	movlw	119
  2086  012C40  1435               	andwf	btemp^0,w,c
  2087  012C42  0100               	movlb	0	; () banked
  2088  012C44  6F7F               	movwf	(_R+31)& (0+255),b	;volatile
  2089  012C46  0E3C               	movlw	60
  2090  012C48  1436               	andwf	(btemp+1)^0,w,c
  2091  012C4A  6F80               	movwf	(_R+32)& (0+255),b	;volatile
  2092                           
  2093                           ; BSR set to: 0
  2094                           ;daq.c: 36:  ADCC_SetADIInterruptHandler(adc_int_handler);
  2095  012C4C  0E22               	movlw	low _adc_int_handler
  2096  012C4E  6EE6               	movwf	postinc1,c
  2097  012C50  0E37               	movlw	high _adc_int_handler
  2098  012C52  6EE6               	movwf	postinc1,c
  2099  012C54  0E01               	movlw	low (_adc_int_handler shr (0+16))
  2100  012C56  6EE6               	movwf	postinc1,c
  2101  012C58  ECAA  F09A         	call	_ADCC_SetADIInterruptHandler	;wreg free
  2102                           
  2103                           ;daq.c: 37:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  2104  012C5C  0E38               	movlw	low _adc_int_t_handler
  2105  012C5E  6EE6               	movwf	postinc1,c
  2106  012C60  0E27               	movlw	high _adc_int_t_handler
  2107  012C62  6EE6               	movwf	postinc1,c
  2108  012C64  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  2109  012C66  6EE6               	movwf	postinc1,c
  2110  012C68  EC96  F09A         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  2111                           
  2112                           ;daq.c: 38:  ADCC_StartConversion(R.scan_index & 0xf);
  2113  012C6C  0100               	movlb	0	; () banked
  2114  012C6E  517E               	movf	(_R+30)& (0+255),w,b	;volatile
  2115  012C70  0B0F               	andlw	15
  2116  012C72  6EE6               	movwf	postinc1,c
  2117  012C74  EC50  F09C         	call	_ADCC_StartConversion	;wreg free
  2118                           
  2119                           ; BSR set to: 62
  2120  012C78  82BE               	bsf	190,1,c	;volatile
  2121                           
  2122                           ; BSR set to: 62
  2123  012C7A  84BE               	bsf	190,2,c	;volatile
  2124                           
  2125                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  2126  012C7C  0012               	return		;funcret
  2127  012C7E                     __end_of_start_adc_scan:
  2128                           	opt callstack 0
  2129                           
  2130 ;; *************** function _ADCC_StartConversion *****************
  2131 ;; Defined at:
  2132 ;;		line 128 in file "mcc_generated_files/adcc.c"
  2133 ;; Parameters:    Size  Location     Type
  2134 ;;  channel         1  [STACK] enum E16136
  2135 ;; Auto vars:     Size  Location     Type
  2136 ;;		None
  2137 ;; Return value:  Size  Location     Type
  2138 ;;                  1  [STACK] void 
  2139 ;; Registers used:
  2140 ;;		fsr1l, fsr1h
  2141 ;; Tracked objects:
  2142 ;;		On entry : 3F/0
  2143 ;;		On exit  : 3F/3E
  2144 ;;		Unchanged: 0/0
  2145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2150 ;;Total ram usage:        0 bytes
  2151 ;; Hardware stack levels used:    1
  2152 ;; Hardware stack levels required when called:    6
  2153 ;; This function calls:
  2154 ;;		Nothing
  2155 ;; This function is called by:
  2156 ;;		_start_adc_scan
  2157 ;;		_adc_int_t_handler
  2158 ;; This function uses a reentrant model
  2159 ;;
  2160                           
  2161                           	psect	text2
  2162  0138A0                     __ptext2:
  2163                           	opt callstack 0
  2164  0138A0                     _ADCC_StartConversion:
  2165                           	opt callstack 6
  2166                           
  2167                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  2168                           ;stkvar	_channel @ sp[(0)+-1]
  2169                           
  2170                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2171                           ;incstack = 0
  2172  0138A0  0EFF               	movlw	-1
  2173  0138A2  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  2174                           
  2175                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  2176  0138A8  013E               	movlb	62	; () banked
  2177  0138AA  8FF8               	bsf	248,7,b	;volatile
  2178                           
  2179                           ; BSR set to: 62
  2180                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  2181  0138AC  81F8               	bsf	248,0,b	;volatile
  2182                           
  2183                           ; BSR set to: 62
  2184                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  2185  0138AE  52E5               	movf	postdec1,f,c
  2186  0138B0  0012               	return		;funcret
  2187  0138B2                     __end_of_ADCC_StartConversion:
  2188                           	opt callstack 0
  2189                           
  2190 ;; *************** function _srand *****************
  2191 ;; Defined at:
  2192 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;  s               2  [STACK] unsigned int 
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;		None
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1  [STACK] void 
  2199 ;; Registers used:
  2200 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  2201 ;; Tracked objects:
  2202 ;;		On entry : 3F/0
  2203 ;;		On exit  : 3F/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2210 ;;Total ram usage:        0 bytes
  2211 ;; Hardware stack levels used:    1
  2212 ;; Hardware stack levels required when called:    6
  2213 ;; This function calls:
  2214 ;;		Nothing
  2215 ;; This function is called by:
  2216 ;;		_main
  2217 ;; This function uses a reentrant model
  2218 ;;
  2219                           
  2220                           	psect	text3
  2221  0131FC                     __ptext3:
  2222                           	opt callstack 0
  2223  0131FC                     _srand:
  2224                           	opt callstack 24
  2225                           
  2226                           ;stkvar	_s @ sp[(0)+-2]
  2227                           
  2228                           ; BSR set to: 62
  2229                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2230                           ;incstack = 0
  2231  0131FC  0EFE               	movlw	-2
  2232  0131FE  50E3               	movf	plusw1,w,c
  2233  013200  0FFF               	addlw	255
  2234  013202  6E3F               	movwf	(btemp+10)^0,c
  2235  013204  0EFF               	movlw	-1
  2236  013206  006F FF8C  F040    	movff	plusw1,btemp+11
  2237  01320C  0EFF               	movlw	255
  2238  01320E  2240               	addwfc	(btemp+11)^0,f,c
  2239  013210  0060  F0FC  F0CD   	movff	btemp+10,_seed
  2240  013216  0060  F100  F0CE   	movff	btemp+11,_seed+1
  2241  01321C  0100               	movlb	0	; () banked
  2242  01321E  6BCF               	clrf	(_seed+2)& (0+255),b
  2243  013220  6BD0               	clrf	(_seed+3)& (0+255),b
  2244  013222  6BD1               	clrf	(_seed+4)& (0+255),b
  2245  013224  6BD2               	clrf	(_seed+5)& (0+255),b
  2246  013226  6BD3               	clrf	(_seed+6)& (0+255),b
  2247  013228  6BD4               	clrf	(_seed+7)& (0+255),b
  2248                           
  2249                           ; BSR set to: 0
  2250                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  2251  01322A  52E5               	movf	postdec1,f,c
  2252  01322C  52E5               	movf	postdec1,f,c
  2253  01322E  0012               	return		;funcret
  2254  013230                     __end_of_srand:
  2255                           	opt callstack 0
  2256                           
  2257 ;; *************** function _init_display *****************
  2258 ;; Defined at:
  2259 ;;		line 37 in file "eadog.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;		None
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;		None
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  1  [STACK] void 
  2266 ;; Registers used:
  2267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/1
  2270 ;;		On exit  : 3F/3D
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2277 ;;Total ram usage:        0 bytes
  2278 ;; Hardware stack levels used:    1
  2279 ;; Hardware stack levels required when called:    8
  2280 ;; This function calls:
  2281 ;;		_ringBufS_init
  2282 ;;		_send_lcd_cmd
  2283 ;;		_send_lcd_cmd_long
  2284 ;;		_wdtdelay
  2285 ;; This function is called by:
  2286 ;;		_main
  2287 ;; This function uses a reentrant model
  2288 ;;
  2289                           
  2290                           	psect	text4
  2291  01223C                     __ptext4:
  2292                           	opt callstack 0
  2293  01223C                     _init_display:
  2294                           	opt callstack 22
  2295                           
  2296                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  2297                           
  2298                           ; BSR set to: 0
  2299                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2300                           ;incstack = 0
  2301  01223C  0E83               	movlw	low _ring_buf1
  2302  01223E  0100               	movlb	0	; () banked
  2303  012240  6FA0               	movwf	(_spi_link+6)& (0+255),b	;volatile
  2304  012242  0E02               	movlw	high _ring_buf1
  2305  012244  6FA1               	movwf	(_spi_link+7)& (0+255),b	;volatile
  2306                           
  2307                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  2308  012246  0E40               	movlw	low _ring_buf2
  2309  012248  6F9E               	movwf	(_spi_link+4)& (0+255),b	;volatile
  2310  01224A  0E02               	movlw	high _ring_buf2
  2311  01224C  6F9F               	movwf	(_spi_link+5)& (0+255),b	;volatile
  2312                           
  2313                           ; BSR set to: 0
  2314                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  2315  01224E  0060  F283  FFE6   	movff	_spi_link+6,postinc1
  2316  012254  0060  F287  FFE6   	movff	_spi_link+7,postinc1
  2317  01225A  ECE2  F099         	call	_ringBufS_init	;wreg free
  2318                           
  2319                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  2320  01225E  0060  F27B  FFE6   	movff	_spi_link+4,postinc1
  2321  012264  0060  F27F  FFE6   	movff	_spi_link+5,postinc1
  2322  01226A  ECE2  F099         	call	_ringBufS_init	;wreg free
  2323                           
  2324                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  2325  01226E  84BE               	bsf	190,2,c	;volatile
  2326  012270  84BC               	bsf	188,2,c	;volatile
  2327                           
  2328                           ;eadog.c: 46:  wdtdelay(350000);
  2329  012272  0E30               	movlw	48
  2330  012274  6EE6               	movwf	postinc1,c
  2331  012276  0E57               	movlw	87
  2332  012278  6EE6               	movwf	postinc1,c
  2333  01227A  0E05               	movlw	5
  2334  01227C  6EE6               	movwf	postinc1,c
  2335  01227E  0E00               	movlw	0
  2336  012280  6EE6               	movwf	postinc1,c
  2337  012282  EC00  F097         	call	_wdtdelay	;wreg free
  2338                           
  2339                           ; BSR set to: 0
  2340                           ;eadog.c: 47:  send_lcd_cmd(0x39);
  2341  012286  0E39               	movlw	57
  2342  012288  6EE6               	movwf	postinc1,c
  2343  01228A  ECCE  F099         	call	_send_lcd_cmd	;wreg free
  2344                           
  2345                           ; BSR set to: 0
  2346                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
  2347  01228E  0E1D               	movlw	29
  2348  012290  6EE6               	movwf	postinc1,c
  2349  012292  ECCE  F099         	call	_send_lcd_cmd	;wreg free
  2350                           
  2351                           ; BSR set to: 0
  2352                           ;eadog.c: 49:  send_lcd_cmd(0x50);
  2353  012296  0E50               	movlw	80
  2354  012298  6EE6               	movwf	postinc1,c
  2355  01229A  ECCE  F099         	call	_send_lcd_cmd	;wreg free
  2356                           
  2357                           ; BSR set to: 0
  2358                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
  2359  01229E  0E6C               	movlw	108
  2360  0122A0  6EE6               	movwf	postinc1,c
  2361  0122A2  ECCE  F099         	call	_send_lcd_cmd	;wreg free
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;eadog.c: 51:  send_lcd_cmd(0x76);
  2365  0122A6  0E76               	movlw	118
  2366  0122A8  6EE6               	movwf	postinc1,c
  2367  0122AA  ECCE  F099         	call	_send_lcd_cmd	;wreg free
  2368                           
  2369                           ; BSR set to: 0
  2370                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
  2371  0122AE  0E38               	movlw	56
  2372  0122B0  6EE6               	movwf	postinc1,c
  2373  0122B2  ECBA  F099         	call	_send_lcd_cmd_long	;wreg free
  2374                           
  2375                           ; BSR set to: 0
  2376                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
  2377  0122B6  0E0F               	movlw	15
  2378  0122B8  6EE6               	movwf	postinc1,c
  2379  0122BA  ECCE  F099         	call	_send_lcd_cmd	;wreg free
  2380                           
  2381                           ; BSR set to: 0
  2382                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
  2383  0122BE  0E01               	movlw	1
  2384  0122C0  6EE6               	movwf	postinc1,c
  2385  0122C2  ECBA  F099         	call	_send_lcd_cmd_long	;wreg free
  2386                           
  2387                           ; BSR set to: 0
  2388                           ;eadog.c: 55:  send_lcd_cmd(0x02);
  2389  0122C6  0E02               	movlw	2
  2390  0122C8  6EE6               	movwf	postinc1,c
  2391  0122CA  ECCE  F099         	call	_send_lcd_cmd	;wreg free
  2392                           
  2393                           ; BSR set to: 0
  2394                           ;eadog.c: 56:  send_lcd_cmd(0x06);
  2395  0122CE  0E06               	movlw	6
  2396  0122D0  6EE6               	movwf	postinc1,c
  2397  0122D2  ECCE  F099         	call	_send_lcd_cmd	;wreg free
  2398                           
  2399                           ; BSR set to: 0
  2400                           ;eadog.c: 57:  wdtdelay(30);
  2401  0122D6  0E1E               	movlw	30
  2402  0122D8  6EE6               	movwf	postinc1,c
  2403  0122DA  0E00               	movlw	0
  2404  0122DC  6EE6               	movwf	postinc1,c
  2405  0122DE  0E00               	movlw	0
  2406  0122E0  6EE6               	movwf	postinc1,c
  2407  0122E2  0E00               	movlw	0
  2408  0122E4  6EE6               	movwf	postinc1,c
  2409  0122E6  EC00  F097         	call	_wdtdelay	;wreg free
  2410                           
  2411                           ; BSR set to: 0
  2412                           ;eadog.c: 58:  SPI1CON2 = 0x02;
  2413  0122EA  0E02               	movlw	2
  2414  0122EC  013D               	movlb	61	; () banked
  2415  0122EE  6F16               	movwf	22,b	;volatile
  2416                           
  2417                           ; BSR set to: 61
  2418                           ;eadog.c: 59:  SPI1CON1 = 0x40;
  2419  0122F0  0E40               	movlw	64
  2420  0122F2  6F15               	movwf	21,b	;volatile
  2421                           
  2422                           ; BSR set to: 61
  2423                           ;eadog.c: 60:  SPI1CON0 = 0x83;
  2424  0122F4  0E83               	movlw	131
  2425  0122F6  6F14               	movwf	20,b	;volatile
  2426                           
  2427                           ; BSR set to: 61
  2428                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
  2429  0122F8  931A               	bcf	26,1,b	;volatile
  2430                           
  2431                           ; BSR set to: 61
  2432                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
  2433  0122FA  0E3F               	movlw	-193
  2434  0122FC  013B               	movlb	59	; () banked
  2435  0122FE  17FD               	andwf	253,f,b	;volatile
  2436                           
  2437                           ; BSR set to: 59
  2438                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
  2439  012300  9BFD               	bcf	253,5,b	;volatile
  2440                           
  2441                           ; BSR set to: 59
  2442                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
  2443  012302  51FD               	movf	253,w,b	;volatile
  2444  012304  0BF9               	andlw	-7
  2445  012306  0902               	iorlw	2
  2446  012308  6FFD               	movwf	253,b	;volatile
  2447                           
  2448                           ; BSR set to: 59
  2449                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
  2450  01230A  0EE7               	movlw	-25
  2451  01230C  17FD               	andwf	253,f,b	;volatile
  2452                           
  2453                           ; BSR set to: 59
  2454                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
  2455  01230E  81FD               	bsf	253,0,b	;volatile
  2456                           
  2457                           ; BSR set to: 59
  2458                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
  2459  012310  0E83               	movlw	low _ring_buf1
  2460  012312  6FF9               	movwf	249,b	;volatile
  2461  012314  0E02               	movlw	high _ring_buf1
  2462  012316  6FFA               	movwf	250,b	;volatile
  2463  012318  0E00               	movlw	low (_ring_buf1 shr (0+16))
  2464  01231A  6FFB               	movwf	251,b	;volatile
  2465                           
  2466                           ; BSR set to: 59
  2467                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
  2468  01231C  9BFC               	bcf	252,5,b	;volatile
  2469                           
  2470                           ; BSR set to: 59
  2471                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
  2472  01231E  013D               	movlb	61	; () banked
  2473  012320  831A               	bsf	26,1,b	;volatile
  2474                           
  2475                           ; BSR set to: 61
  2476                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
  2477  012322  94BE               	bcf	190,2,c	;volatile
  2478                           
  2479                           ; BSR set to: 61
  2480                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  2481  012324  0012               	return		;funcret
  2482  012326                     __end_of_init_display:
  2483                           	opt callstack 0
  2484                           
  2485 ;; *************** function _send_lcd_cmd_long *****************
  2486 ;; Defined at:
  2487 ;;		line 114 in file "eadog.c"
  2488 ;; Parameters:    Size  Location     Type
  2489 ;;  cmd             1  [STACK] const unsigned char 
  2490 ;; Auto vars:     Size  Location     Type
  2491 ;;		None
  2492 ;; Return value:  Size  Location     Type
  2493 ;;                  1  [STACK] void 
  2494 ;; Registers used:
  2495 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  2496 ;; Tracked objects:
  2497 ;;		On entry : 3F/0
  2498 ;;		On exit  : 3F/0
  2499 ;;		Unchanged: 0/0
  2500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2505 ;;Total ram usage:        0 bytes
  2506 ;; Hardware stack levels used:    1
  2507 ;; Hardware stack levels required when called:    7
  2508 ;; This function calls:
  2509 ;;		_SPI1_Exchange8bit
  2510 ;;		_wdtdelay
  2511 ;; This function is called by:
  2512 ;;		_init_display
  2513 ;; This function uses a reentrant model
  2514 ;;
  2515                           
  2516                           	psect	text5
  2517  013374                     __ptext5:
  2518                           	opt callstack 0
  2519  013374                     _send_lcd_cmd_long:
  2520                           	opt callstack 22
  2521                           
  2522                           ; BSR set to: 61
  2523                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2524                           ;incstack = 0
  2525                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
  2526  013374  92BC               	bcf	188,1,c	;volatile
  2527                           
  2528                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
  2529  013376  94BC               	bcf	188,2,c	;volatile
  2530                           
  2531                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
  2532                           ;stkvar	_cmd @ sp[(0)+-1]
  2533  013378  0EFF               	movlw	-1
  2534  01337A  50E3               	movf	plusw1,w,c
  2535  01337C  6EE6               	movwf	postinc1,c
  2536  01337E  EC64  F09B         	call	_SPI1_Exchange8bit	;wreg free
  2537                           
  2538                           ; BSR set to: 57
  2539                           ;eadog.c: 119:  wdtdelay(800);
  2540  013382  0E20               	movlw	32
  2541  013384  6EE6               	movwf	postinc1,c
  2542  013386  0E03               	movlw	3
  2543  013388  6EE6               	movwf	postinc1,c
  2544  01338A  0E00               	movlw	0
  2545  01338C  6EE6               	movwf	postinc1,c
  2546  01338E  0E00               	movlw	0
  2547  013390  6EE6               	movwf	postinc1,c
  2548  013392  EC00  F097         	call	_wdtdelay	;wreg free
  2549                           
  2550                           ; BSR set to: 0
  2551  013396  82BC               	bsf	188,1,c	;volatile
  2552                           
  2553                           ; BSR set to: 0
  2554                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  2555  013398  52E5               	movf	postdec1,f,c
  2556  01339A  0012               	return		;funcret
  2557  01339C                     __end_of_send_lcd_cmd_long:
  2558                           	opt callstack 0
  2559                           
  2560 ;; *************** function _send_lcd_cmd *****************
  2561 ;; Defined at:
  2562 ;;		line 102 in file "eadog.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;  cmd             1  [STACK] const unsigned char 
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;		None
  2567 ;; Return value:  Size  Location     Type
  2568 ;;                  1  [STACK] void 
  2569 ;; Registers used:
  2570 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  2571 ;; Tracked objects:
  2572 ;;		On entry : 3F/0
  2573 ;;		On exit  : 3F/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2580 ;;Total ram usage:        0 bytes
  2581 ;; Hardware stack levels used:    1
  2582 ;; Hardware stack levels required when called:    7
  2583 ;; This function calls:
  2584 ;;		_SPI1_Exchange8bit
  2585 ;;		_wdtdelay
  2586 ;; This function is called by:
  2587 ;;		_init_display
  2588 ;; This function uses a reentrant model
  2589 ;;
  2590                           
  2591                           	psect	text6
  2592  01339C                     __ptext6:
  2593                           	opt callstack 0
  2594  01339C                     _send_lcd_cmd:
  2595                           	opt callstack 22
  2596                           
  2597                           ; BSR set to: 0
  2598                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2599                           ;incstack = 0
  2600                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  2601  01339C  92BC               	bcf	188,1,c	;volatile
  2602                           
  2603                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
  2604  01339E  94BC               	bcf	188,2,c	;volatile
  2605                           
  2606                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
  2607                           ;stkvar	_cmd @ sp[(0)+-1]
  2608  0133A0  0EFF               	movlw	-1
  2609  0133A2  50E3               	movf	plusw1,w,c
  2610  0133A4  6EE6               	movwf	postinc1,c
  2611  0133A6  EC64  F09B         	call	_SPI1_Exchange8bit	;wreg free
  2612                           
  2613                           ; BSR set to: 57
  2614                           ;eadog.c: 107:  wdtdelay(30);
  2615  0133AA  0E1E               	movlw	30
  2616  0133AC  6EE6               	movwf	postinc1,c
  2617  0133AE  0E00               	movlw	0
  2618  0133B0  6EE6               	movwf	postinc1,c
  2619  0133B2  0E00               	movlw	0
  2620  0133B4  6EE6               	movwf	postinc1,c
  2621  0133B6  0E00               	movlw	0
  2622  0133B8  6EE6               	movwf	postinc1,c
  2623  0133BA  EC00  F097         	call	_wdtdelay	;wreg free
  2624                           
  2625                           ; BSR set to: 0
  2626  0133BE  82BC               	bsf	188,1,c	;volatile
  2627                           
  2628                           ; BSR set to: 0
  2629                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  2630  0133C0  52E5               	movf	postdec1,f,c
  2631  0133C2  0012               	return		;funcret
  2632  0133C4                     __end_of_send_lcd_cmd:
  2633                           	opt callstack 0
  2634                           
  2635 ;; *************** function _SPI1_Exchange8bit *****************
  2636 ;; Defined at:
  2637 ;;		line 79 in file "mcc_generated_files/spi1.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;  data            1  [STACK] unsigned char 
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;		None
  2642 ;; Return value:  Size  Location     Type
  2643 ;;                  1  [STACK] unsigned char 
  2644 ;; Registers used:
  2645 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  2646 ;; Tracked objects:
  2647 ;;		On entry : 0/0
  2648 ;;		On exit  : 3F/39
  2649 ;;		Unchanged: 0/0
  2650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2655 ;;Total ram usage:        0 bytes
  2656 ;; Hardware stack levels used:    1
  2657 ;; Hardware stack levels required when called:    6
  2658 ;; This function calls:
  2659 ;;		Nothing
  2660 ;; This function is called by:
  2661 ;;		_send_lcd_cmd
  2662 ;;		_send_lcd_cmd_long
  2663 ;; This function uses a reentrant model
  2664 ;;
  2665                           
  2666                           	psect	text7
  2667  0136C8                     __ptext7:
  2668                           	opt callstack 0
  2669  0136C8                     _SPI1_Exchange8bit:
  2670                           	opt callstack 22
  2671                           
  2672                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  2673                           
  2674                           ; BSR set to: 0
  2675                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2676                           ;incstack = 0
  2677  0136C8  0E01               	movlw	1
  2678  0136CA  013D               	movlb	61	; () banked
  2679  0136CC  6F12               	movwf	18,b	;volatile
  2680                           
  2681                           ; BSR set to: 61
  2682                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  2683                           ;stkvar	_data @ sp[(0)+-1]
  2684  0136CE  0EFF               	movlw	-1
  2685  0136D0  006F FF8F FD11     	movff	plusw1,15633	;volatile
  2686  0136D6                     l835:
  2687                           
  2688                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  2689  0136D6  0139               	movlb	57	; () banked
  2690  0136D8  A9A2               	btfss	162,4,b	;volatile
  2691  0136DA  D7FD               	goto	l835
  2692                           
  2693                           ; BSR set to: 57
  2694                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  2695  0136DC  006F F440  F035    	movff	15632,btemp	;volatile
  2696                           
  2697                           ; BSR set to: 57
  2698                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  2699  0136E2  52E5               	movf	postdec1,f,c
  2700  0136E4  0012               	return		;funcret
  2701  0136E6                     __end_of_SPI1_Exchange8bit:
  2702                           	opt callstack 0
  2703                           
  2704 ;; *************** function _ringBufS_init *****************
  2705 ;; Defined at:
  2706 ;;		line 22 in file "ringbufs.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;  _this           2  [STACK] PTR volatile struct ring
  2709 ;;		 -> ring_buf2(67), ring_buf1(67), 
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;		None
  2712 ;; Return value:  Size  Location     Type
  2713 ;;                  1  [STACK] void 
  2714 ;; Registers used:
  2715 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2725 ;;Total ram usage:        0 bytes
  2726 ;; Hardware stack levels used:    1
  2727 ;; Hardware stack levels required when called:    7
  2728 ;; This function calls:
  2729 ;;		_memset
  2730 ;; This function is called by:
  2731 ;;		_init_display
  2732 ;; This function uses a reentrant model
  2733 ;;
  2734                           
  2735                           	psect	text8
  2736  0133C4                     __ptext8:
  2737                           	opt callstack 0
  2738  0133C4                     _ringBufS_init:
  2739                           	opt callstack 22
  2740                           
  2741                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  2742                           
  2743                           ; BSR set to: 57
  2744                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2745                           ;incstack = 0
  2746  0133C4  0E43               	movlw	67
  2747  0133C6  6EE6               	movwf	postinc1,c
  2748  0133C8  0E00               	movlw	0
  2749  0133CA  6EE6               	movwf	postinc1,c
  2750  0133CC  0E00               	movlw	0
  2751  0133CE  6EE6               	movwf	postinc1,c
  2752  0133D0  0E00               	movlw	0
  2753  0133D2  6EE6               	movwf	postinc1,c
  2754                           
  2755                           ;stkvar	__this @ sp[(-4)+-2]
  2756  0133D4  0EFA               	movlw	-6
  2757  0133D6  006F FF8F FFE6     	movff	plusw1,postinc1
  2758  0133DC  006F FF8F FFE6     	movff	plusw1,postinc1
  2759  0133E2  EC27  F088         	call	_memset	;wreg free
  2760                           
  2761                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  2762  0133E6  52E5               	movf	postdec1,f,c
  2763  0133E8  52E5               	movf	postdec1,f,c
  2764  0133EA  0012               	return		;funcret
  2765  0133EC                     __end_of_ringBufS_init:
  2766                           	opt callstack 0
  2767                           
  2768 ;; *************** function _get_raw_result *****************
  2769 ;; Defined at:
  2770 ;;		line 63 in file "daq.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;  index           1  [STACK] enum E16136
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;		None
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  2  [STACK] unsigned short 
  2777 ;; Registers used:
  2778 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/2
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2788 ;;Total ram usage:        0 bytes
  2789 ;; Hardware stack levels used:    1
  2790 ;; Hardware stack levels required when called:    6
  2791 ;; This function calls:
  2792 ;;		Nothing
  2793 ;; This function is called by:
  2794 ;;		_main
  2795 ;; This function uses a reentrant model
  2796 ;;
  2797                           
  2798                           	psect	text9
  2799  0136E6                     __ptext9:
  2800                           	opt callstack 0
  2801  0136E6                     _get_raw_result:
  2802                           	opt callstack 24
  2803                           
  2804                           ;daq.c: 63: adc_result_t get_raw_result(adcc_channel_t index);daq.c: 64: {;daq.c: 65:  r
      +                          eturn R.raw_adc[index];
  2805                           ;stkvar	_index @ sp[(0)+-1]
  2806                           
  2807                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2808                           ;incstack = 0
  2809  0136E6  0EFF               	movlw	-1
  2810  0136E8  50E3               	movf	plusw1,w,c
  2811  0136EA  0D02               	mullw	2
  2812  0136EC  50F3               	movf	243,w,c
  2813  0136EE  0F60               	addlw	low _R
  2814  0136F0  6ED9               	movwf	fsr2l,c
  2815  0136F2  6ADA               	clrf	fsr2h,c
  2816  0136F4  006F FF78  F035    	movff	postinc2,btemp
  2817  0136FA  006F FF74  F036    	movff	postdec2,btemp+1
  2818                           
  2819                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  2820  013700  52E5               	movf	postdec1,f,c
  2821  013702  0012               	return		;funcret
  2822  013704                     __end_of_get_raw_result:
  2823                           	opt callstack 0
  2824                           
  2825 ;; *************** function _eaDogM_WriteCommand *****************
  2826 ;; Defined at:
  2827 ;;		line 160 in file "eadog.c"
  2828 ;; Parameters:    Size  Location     Type
  2829 ;;  cmd             1  [STACK] const unsigned char 
  2830 ;; Auto vars:     Size  Location     Type
  2831 ;;		None
  2832 ;; Return value:  Size  Location     Type
  2833 ;;                  1  [STACK] void 
  2834 ;; Registers used:
  2835 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  2836 ;; Tracked objects:
  2837 ;;		On entry : 3F/3D
  2838 ;;		On exit  : 3F/0
  2839 ;;		Unchanged: 0/0
  2840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2845 ;;Total ram usage:        0 bytes
  2846 ;; Hardware stack levels used:    1
  2847 ;; Hardware stack levels required when called:   16
  2848 ;; This function calls:
  2849 ;;		_send_lcd_cmd_dma
  2850 ;; This function is called by:
  2851 ;;		_main
  2852 ;; This function uses a reentrant model
  2853 ;;
  2854                           
  2855                           	psect	text10
  2856  0138C2                     __ptext10:
  2857                           	opt callstack 0
  2858  0138C2                     _eaDogM_WriteCommand:
  2859                           	opt callstack 14
  2860                           
  2861                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
  2862                           ;stkvar	_cmd @ sp[(0)+-1]
  2863                           
  2864                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2865                           ;incstack = 0
  2866  0138C2  0EFF               	movlw	-1
  2867  0138C4  50E3               	movf	plusw1,w,c
  2868  0138C6  6EE6               	movwf	postinc1,c
  2869  0138C8  EC5A  F097         	call	_send_lcd_cmd_dma	;wreg free
  2870                           
  2871                           ; BSR set to: 0
  2872                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  2873  0138CC  52E5               	movf	postdec1,f,c
  2874  0138CE  0012               	return		;funcret
  2875  0138D0                     __end_of_eaDogM_WriteCommand:
  2876                           	opt callstack 0
  2877                           
  2878 ;; *************** function _clear_adc_scan *****************
  2879 ;; Defined at:
  2880 ;;		line 55 in file "daq.c"
  2881 ;; Parameters:    Size  Location     Type
  2882 ;;		None
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;		None
  2885 ;; Return value:  Size  Location     Type
  2886 ;;                  1  [STACK] void 
  2887 ;; Registers used:
  2888 ;;		None
  2889 ;; Tracked objects:
  2890 ;;		On entry : 0/2
  2891 ;;		On exit  : 3F/0
  2892 ;;		Unchanged: 0/0
  2893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2898 ;;Total ram usage:        0 bytes
  2899 ;; Hardware stack levels used:    1
  2900 ;; Hardware stack levels required when called:    6
  2901 ;; This function calls:
  2902 ;;		Nothing
  2903 ;; This function is called by:
  2904 ;;		_main
  2905 ;; This function uses a reentrant model
  2906 ;;
  2907                           
  2908                           	psect	text11
  2909  01395A                     __ptext11:
  2910                           	opt callstack 0
  2911  01395A                     _clear_adc_scan:
  2912                           	opt callstack 24
  2913                           
  2914                           ;daq.c: 57:  R.done = 0;
  2915                           
  2916                           ; BSR set to: 0
  2917                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2918                           ;incstack = 0
  2919  01395A  0100               	movlb	0	; () banked
  2920  01395C  6B81               	clrf	(_R+33)& (0+255),b	;volatile
  2921                           
  2922                           ; BSR set to: 0
  2923                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  2924  01395E  0012               	return		;funcret
  2925  013960                     __end_of_clear_adc_scan:
  2926                           	opt callstack 0
  2927                           
  2928 ;; *************** function _check_help *****************
  2929 ;; Defined at:
  2930 ;;		line 40 in file "mconfig.c"
  2931 ;; Parameters:    Size  Location     Type
  2932 ;;  flipper         1  [STACK] _Bool 
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;		None
  2935 ;; Return value:  Size  Location     Type
  2936 ;;                  1  [STACK] void 
  2937 ;; Registers used:
  2938 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  2939 ;; Tracked objects:
  2940 ;;		On entry : 3F/1
  2941 ;;		On exit  : 0/0
  2942 ;;		Unchanged: 0/0
  2943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2948 ;;Total ram usage:        0 bytes
  2949 ;; Hardware stack levels used:    1
  2950 ;; Hardware stack levels required when called:   18
  2951 ;; This function calls:
  2952 ;;		_StartTimer
  2953 ;;		_TimerDone
  2954 ;;		_display_help
  2955 ;;		_display_info
  2956 ;;		_get_vterm_ptr
  2957 ;;		_help_button
  2958 ;;		_mode_lamp_bright
  2959 ;;		_mode_lamp_dim
  2960 ;;		_set_display_info
  2961 ;;		_set_temp_display_help
  2962 ;;		_set_vterm
  2963 ;;		_sprintf
  2964 ;;		_update_lcd
  2965 ;;		_vterm_dump
  2966 ;; This function is called by:
  2967 ;;		_main
  2968 ;; This function uses a reentrant model
  2969 ;;
  2970                           
  2971                           	psect	text12
  2972  011AB8                     __ptext12:
  2973                           	opt callstack 0
  2974  011AB8                     _check_help:
  2975                           	opt callstack 12
  2976                           
  2977                           ;mconfig.c: 40: void check_help(_Bool flipper);mconfig.c: 41: {;mconfig.c: 45:  if (help
      +                          _button() && display_info() != DIS_HELP) {
  2978                           
  2979                           ; BSR set to: 0
  2980                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2981                           ;incstack = 0
  2982  011AB8  EC90  F098         	call	_help_button	;wreg free
  2983  011ABC  5035               	movf	btemp^0,w,c
  2984  011ABE  B4D8               	btfsc	status,2,c
  2985  011AC0  D0D0               	goto	l6327
  2986  011AC2  EC9D  F09C         	call	_display_info	;wreg free
  2987  011AC6  0435               	decf	btemp^0,w,c
  2988  011AC8  B4D8               	btfsc	status,2,c
  2989  011ACA  D0CB               	goto	l6327
  2990                           
  2991                           ;mconfig.c: 46:   StartTimer(TMR_FLIPPER, 1500);
  2992  011ACC  0EDC               	movlw	220
  2993  011ACE  6EE6               	movwf	postinc1,c
  2994  011AD0  0E05               	movlw	5
  2995  011AD2  6EE6               	movwf	postinc1,c
  2996  011AD4  0E0B               	movlw	11
  2997  011AD6  6EE6               	movwf	postinc1,c
  2998  011AD8  EC72  F098         	call	_StartTimer	;wreg free
  2999                           
  3000                           ;mconfig.c: 47:   if (V.debug)
  3001  011ADC  0101               	movlb	1	; () banked
  3002  011ADE  BBA8               	btfsc	(_V+168)& (0+255),5,b	;volatile
  3003                           
  3004                           ; BSR set to: 1
  3005                           ;mconfig.c: 48:    vterm_dump();
  3006  011AE0  EC65  F08E         	call	_vterm_dump	;wreg free
  3007                           
  3008                           ;mconfig.c: 50:   set_vterm(1);
  3009  011AE4  0E01               	movlw	1
  3010  011AE6  6EE6               	movwf	postinc1,c
  3011  011AE8  ECCC  F09B         	call	_set_vterm	;wreg free
  3012                           
  3013                           ; BSR set to: 3
  3014                           ;mconfig.c: 51:   set_temp_display_help(display_info());
  3015  011AEC  EC9D  F09C         	call	_display_info	;wreg free
  3016  011AF0  5035               	movf	btemp^0,w,c
  3017  011AF2  6EE6               	movwf	postinc1,c
  3018  011AF4  EC59  F09C         	call	_set_temp_display_help	;wreg free
  3019                           
  3020                           ; BSR set to: 1
  3021                           ;mconfig.c: 52:   set_display_info(DIS_HELP);
  3022  011AF8  0E01               	movlw	1
  3023  011AFA  6EE6               	movwf	postinc1,c
  3024  011AFC  EC82  F09B         	call	_set_display_info	;wreg free
  3025                           
  3026                           ;mconfig.c: 53:   if (flipper) {
  3027                           ;stkvar	_flipper @ sp[(0)+-1]
  3028  011B00  0EFF               	movlw	-1
  3029  011B02  50E3               	movf	plusw1,w,c
  3030  011B04  B4D8               	btfsc	status,2,c
  3031  011B06  D019               	goto	l6315
  3032                           
  3033                           ;mconfig.c: 54:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  3034  011B08  0ED6               	movlw	low STR_13
  3035  011B0A  6EE6               	movwf	postinc1,c
  3036  011B0C  0EFF               	movlw	high STR_13
  3037  011B0E  6EE6               	movwf	postinc1,c
  3038  011B10  0E3C               	movlw	low STR_15
  3039  011B12  6EE6               	movwf	postinc1,c
  3040  011B14  0EFF               	movlw	high STR_15
  3041  011B16  6EE6               	movwf	postinc1,c
  3042  011B18  0E01               	movlw	1
  3043  011B1A  6EE6               	movwf	postinc1,c
  3044  011B1C  0E00               	movlw	0
  3045  011B1E  6EE6               	movwf	postinc1,c
  3046  011B20  EC62  F099         	call	_get_vterm_ptr	;wreg free
  3047  011B24  0060  F0D7  FFE6   	movff	btemp,postinc1
  3048  011B2A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3049  011B30  0E06               	movlw	6
  3050  011B32  6EE6               	movwf	postinc1,c
  3051  011B34  EC15  F090         	call	_sprintf	;wreg free
  3052                           
  3053                           ;mconfig.c: 55:   } else {
  3054  011B38  D018               	goto	l1547
  3055  011B3A                     l6315:
  3056                           
  3057                           ;mconfig.c: 56:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  3058  011B3A  0EEC               	movlw	low STR_14
  3059  011B3C  6EE6               	movwf	postinc1,c
  3060  011B3E  0EFF               	movlw	high STR_14
  3061  011B40  6EE6               	movwf	postinc1,c
  3062  011B42  0E3C               	movlw	low STR_15
  3063  011B44  6EE6               	movwf	postinc1,c
  3064  011B46  0EFF               	movlw	high STR_15
  3065  011B48  6EE6               	movwf	postinc1,c
  3066  011B4A  0E01               	movlw	1
  3067  011B4C  6EE6               	movwf	postinc1,c
  3068  011B4E  0E00               	movlw	0
  3069  011B50  6EE6               	movwf	postinc1,c
  3070  011B52  EC62  F099         	call	_get_vterm_ptr	;wreg free
  3071  011B56  0060  F0D7  FFE6   	movff	btemp,postinc1
  3072  011B5C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3073  011B62  0E06               	movlw	6
  3074  011B64  6EE6               	movwf	postinc1,c
  3075  011B66  EC15  F090         	call	_sprintf	;wreg free
  3076  011B6A                     l1547:
  3077                           
  3078                           ;mconfig.c: 58:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  3079  011B6A  0101               	movlb	1	; () banked
  3080  011B6C  31A9               	rrcf	(_V+169)& (0+255),w,b	;volatile
  3081  011B6E  32E8               	rrcf	wreg,f,c
  3082  011B70  32E8               	rrcf	wreg,f,c
  3083  011B72  0B03               	andlw	3
  3084  011B74  0D24               	mullw	36
  3085  011B76  0E12               	movlw	18
  3086  011B78  26F3               	addwf	243,f,c
  3087  011B7A  0E00               	movlw	0
  3088  011B7C  22F4               	addwfc	244,f,c
  3089  011B7E  0E81               	movlw	low _T
  3090  011B80  6E3F               	movwf	(btemp+10)^0,c
  3091  011B82  0EFE               	movlw	high _T
  3092  011B84  6E40               	movwf	(btemp+11)^0,c
  3093  011B86  50F3               	movf	243,w,c
  3094  011B88  263F               	addwf	(btemp+10)^0,f,c
  3095  011B8A  50F4               	movf	244,w,c
  3096  011B8C  2240               	addwfc	(btemp+11)^0,f,c
  3097  011B8E  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  3098  011B94  0060  F103  FFE6   	movff	btemp+11,postinc1
  3099  011B9A  0EE2               	movlw	low STR_17
  3100  011B9C  6EE6               	movwf	postinc1,c
  3101  011B9E  0EFF               	movlw	high STR_17
  3102  011BA0  6EE6               	movwf	postinc1,c
  3103  011BA2  0E01               	movlw	1
  3104  011BA4  6EE6               	movwf	postinc1,c
  3105  011BA6  0E01               	movlw	1
  3106  011BA8  6EE6               	movwf	postinc1,c
  3107  011BAA  EC62  F099         	call	_get_vterm_ptr	;wreg free
  3108  011BAE  0060  F0D7  FFE6   	movff	btemp,postinc1
  3109  011BB4  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3110  011BBA  0E06               	movlw	6
  3111  011BBC  6EE6               	movwf	postinc1,c
  3112  011BBE  EC15  F090         	call	_sprintf	;wreg free
  3113                           
  3114                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  3115  011BC2  0101               	movlb	1	; () banked
  3116  011BC4  31A9               	rrcf	(_V+169)& (0+255),w,b	;volatile
  3117  011BC6  32E8               	rrcf	wreg,f,c
  3118  011BC8  32E8               	rrcf	wreg,f,c
  3119  011BCA  0B03               	andlw	3
  3120  011BCC  0D24               	mullw	36
  3121  011BCE  0E81               	movlw	low _T
  3122  011BD0  6E3F               	movwf	(btemp+10)^0,c
  3123  011BD2  0EFE               	movlw	high _T
  3124  011BD4  6E40               	movwf	(btemp+11)^0,c
  3125  011BD6  50F3               	movf	243,w,c
  3126  011BD8  263F               	addwf	(btemp+10)^0,f,c
  3127  011BDA  50F4               	movf	244,w,c
  3128  011BDC  2240               	addwfc	(btemp+11)^0,f,c
  3129  011BDE  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  3130  011BE4  0060  F103  FFE6   	movff	btemp+11,postinc1
  3131  011BEA  0EE2               	movlw	low STR_17
  3132  011BEC  6EE6               	movwf	postinc1,c
  3133  011BEE  0EFF               	movlw	high STR_17
  3134  011BF0  6EE6               	movwf	postinc1,c
  3135  011BF2  0E01               	movlw	1
  3136  011BF4  6EE6               	movwf	postinc1,c
  3137  011BF6  0E02               	movlw	2
  3138  011BF8  6EE6               	movwf	postinc1,c
  3139  011BFA  EC62  F099         	call	_get_vterm_ptr	;wreg free
  3140  011BFE  0060  F0D7  FFE6   	movff	btemp,postinc1
  3141  011C04  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3142  011C0A  0E06               	movlw	6
  3143  011C0C  6EE6               	movwf	postinc1,c
  3144  011C0E  EC15  F090         	call	_sprintf	;wreg free
  3145                           
  3146                           ;mconfig.c: 60:   V.help_id++;
  3147  011C12  EE20  F1A9         	lfsr	2,_V+169	;volatile
  3148  011C16  30DF               	rrcf	223,w,c
  3149  011C18  6E40               	movwf	(btemp+11)^0,c
  3150  011C1A  3240               	rrcf	(btemp+11)^0,f,c
  3151  011C1C  3040               	rrcf	(btemp+11)^0,w,c
  3152  011C1E  0B03               	andlw	3
  3153  011C20  6E40               	movwf	(btemp+11)^0,c
  3154  011C22  2A40               	incf	(btemp+11)^0,f,c
  3155  011C24  3640               	rlcf	(btemp+11)^0,f,c
  3156  011C26  3640               	rlcf	(btemp+11)^0,f,c
  3157  011C28  3640               	rlcf	(btemp+11)^0,f,c
  3158  011C2A  50DF               	movf	223,w,c
  3159  011C2C  1840               	xorwf	(btemp+11)^0,w,c
  3160  011C2E  0BE7               	andlw	-25
  3161  011C30  1840               	xorwf	(btemp+11)^0,w,c
  3162  011C32  6EDF               	movwf	223,c
  3163                           
  3164                           ;mconfig.c: 61:   StartTimer(TMR_HELPDIS, 3000);
  3165  011C34  0EB8               	movlw	184
  3166  011C36  6EE6               	movwf	postinc1,c
  3167  011C38  0E0B               	movlw	11
  3168  011C3A  6EE6               	movwf	postinc1,c
  3169  011C3C  0E09               	movlw	9
  3170  011C3E  6EE6               	movwf	postinc1,c
  3171  011C40  EC72  F098         	call	_StartTimer	;wreg free
  3172                           
  3173                           ;mconfig.c: 62:   StartTimer(TMR_INFO, 3000);
  3174  011C44  0EB8               	movlw	184
  3175  011C46  6EE6               	movwf	postinc1,c
  3176  011C48  0E0B               	movlw	11
  3177  011C4A  6EE6               	movwf	postinc1,c
  3178  011C4C  0E07               	movlw	7
  3179  011C4E  6EE6               	movwf	postinc1,c
  3180  011C50  EC72  F098         	call	_StartTimer	;wreg free
  3181                           
  3182                           ;mconfig.c: 63:   mode_lamp_bright();
  3183  011C54  EC68  F09C         	call	_mode_lamp_bright	;wreg free
  3184                           
  3185                           ;mconfig.c: 64:   update_lcd(1);
  3186  011C58  0E01               	movlw	1
  3187  011C5A  6EE6               	movwf	postinc1,c
  3188  011C5C  EC8E  F08F         	call	_update_lcd	;wreg free
  3189                           
  3190                           ;mconfig.c: 65:  } else {
  3191  011C60  D032               	goto	l1551
  3192  011C62                     l6327:
  3193                           
  3194                           ;mconfig.c: 66:   if (TimerDone(TMR_HELPDIS)) {
  3195  011C62  0E09               	movlw	9
  3196  011C64  6EE6               	movwf	postinc1,c
  3197  011C66  EC0D  F09B         	call	_TimerDone	;wreg free
  3198  011C6A  5035               	movf	btemp^0,w,c
  3199  011C6C  B4D8               	btfsc	status,2,c
  3200  011C6E  D02B               	goto	l1551
  3201                           
  3202                           ;mconfig.c: 67:    set_vterm(0);
  3203  011C70  0E00               	movlw	0
  3204  011C72  6EE6               	movwf	postinc1,c
  3205  011C74  ECCC  F09B         	call	_set_vterm	;wreg free
  3206                           
  3207                           ; BSR set to: 3
  3208                           ;mconfig.c: 68:    V.help = 0;
  3209  011C78  0101               	movlb	1	; () banked
  3210  011C7A  9DA8               	bcf	(_V+168)& (0+255),6,b	;volatile
  3211                           
  3212                           ; BSR set to: 1
  3213                           ;mconfig.c: 69:    set_display_info(display_help());
  3214  011C7C  ECA1  F09C         	call	_display_help	;wreg free
  3215  011C80  5035               	movf	btemp^0,w,c
  3216  011C82  6EE6               	movwf	postinc1,c
  3217  011C84  EC82  F09B         	call	_set_display_info	;wreg free
  3218                           
  3219                           ;mconfig.c: 70:    mode_lamp_dim(V.mode_pwm);
  3220  011C88  0060  F67F  FFE6   	movff	_V+159,postinc1
  3221  011C8E  0060  F683  FFE6   	movff	_V+160,postinc1
  3222  011C94  EC01  F09C         	call	_mode_lamp_dim	;wreg free
  3223                           
  3224                           ;mconfig.c: 71:    if (TimerDone(TMR_FLIPPER)) {
  3225  011C98  0E0B               	movlw	11
  3226  011C9A  6EE6               	movwf	postinc1,c
  3227  011C9C  EC0D  F09B         	call	_TimerDone	;wreg free
  3228  011CA0  5035               	movf	btemp^0,w,c
  3229  011CA2  B4D8               	btfsc	status,2,c
  3230  011CA4  D010               	goto	l1551
  3231                           
  3232                           ;mconfig.c: 72:     V.flipper = !V.flipper;
  3233  011CA6  0101               	movlb	1	; () banked
  3234  011CA8  51BC               	movf	(_V+188)& (0+255),w,b	;volatile
  3235  011CAA  A4D8               	btfss	status,2,c
  3236  011CAC  D002               	goto	u4260
  3237  011CAE  0E01               	movlw	1
  3238  011CB0  D001               	goto	u4270
  3239  011CB2                     u4260:
  3240  011CB2  0E00               	movlw	0
  3241  011CB4                     u4270:
  3242  011CB4  6FBC               	movwf	(_V+188)& (0+255),b	;volatile
  3243                           
  3244                           ; BSR set to: 1
  3245                           ;mconfig.c: 73:     StartTimer(TMR_FLIPPER, 1500);
  3246  011CB6  0EDC               	movlw	220
  3247  011CB8  6EE6               	movwf	postinc1,c
  3248  011CBA  0E05               	movlw	5
  3249  011CBC  6EE6               	movwf	postinc1,c
  3250  011CBE  0E0B               	movlw	11
  3251  011CC0  6EE6               	movwf	postinc1,c
  3252  011CC2  EC72  F098         	call	_StartTimer	;wreg free
  3253  011CC6                     l1551:
  3254                           
  3255                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  3256  011CC6  52E5               	movf	postdec1,f,c
  3257  011CC8  0012               	return		;funcret
  3258  011CCA                     __end_of_check_help:
  3259                           	opt callstack 0
  3260                           
  3261 ;; *************** function _vterm_dump *****************
  3262 ;; Defined at:
  3263 ;;		line 118 in file "mconfig.c"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;		None
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;		None
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  1  [STACK] void 
  3270 ;; Registers used:
  3271 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  3272 ;; Tracked objects:
  3273 ;;		On entry : 3F/1
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3281 ;;Total ram usage:        0 bytes
  3282 ;; Hardware stack levels used:    1
  3283 ;; Hardware stack levels required when called:   17
  3284 ;; This function calls:
  3285 ;;		_WaitMs
  3286 ;;		_eaDogM_WriteStringAtPos
  3287 ;;		_get_vterm_ptr
  3288 ;;		_sprintf
  3289 ;;		_wait_lcd_done
  3290 ;; This function is called by:
  3291 ;;		_check_help
  3292 ;; This function uses a reentrant model
  3293 ;;
  3294                           
  3295                           	psect	text13
  3296  011CCA                     __ptext13:
  3297                           	opt callstack 0
  3298  011CCA                     _vterm_dump:
  3299                           	opt callstack 12
  3300                           
  3301                           ;mconfig.c: 120:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  3302                           
  3303                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3304                           ;incstack = 0
  3305  011CCA  0E01               	movlw	1
  3306  011CCC  6EE6               	movwf	postinc1,c
  3307  011CCE  0E00               	movlw	0
  3308  011CD0  6EE6               	movwf	postinc1,c
  3309  011CD2  EC62  F099         	call	_get_vterm_ptr	;wreg free
  3310  011CD6  0060  F0D7  FFE6   	movff	btemp,postinc1
  3311  011CDC  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3312  011CE2  0E00               	movlw	0
  3313  011CE4  6EE6               	movwf	postinc1,c
  3314  011CE6  0E00               	movlw	0
  3315  011CE8  6EE6               	movwf	postinc1,c
  3316  011CEA  EC62  F099         	call	_get_vterm_ptr	;wreg free
  3317  011CEE  0060  F0D7  FFE6   	movff	btemp,postinc1
  3318  011CF4  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3319  011CFA  0EB8               	movlw	low STR_19
  3320  011CFC  6EE6               	movwf	postinc1,c
  3321  011CFE  0EFF               	movlw	high STR_19
  3322  011D00  6EE6               	movwf	postinc1,c
  3323  011D02  0E01               	movlw	low (_V+1)
  3324  011D04  6EE6               	movwf	postinc1,c
  3325  011D06  0E01               	movlw	high (_V+1)
  3326  011D08  6EE6               	movwf	postinc1,c
  3327  011D0A  0E08               	movlw	8
  3328  011D0C  6EE6               	movwf	postinc1,c
  3329  011D0E  EC15  F090         	call	_sprintf	;wreg free
  3330                           
  3331                           ;mconfig.c: 121:  wait_lcd_done();
  3332  011D12  ECBE  F09B         	call	_wait_lcd_done	;wreg free
  3333                           
  3334                           ; BSR set to: 0
  3335                           ;mconfig.c: 122:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  3336  011D16  0E01               	movlw	low (_V+1)
  3337  011D18  6EE6               	movwf	postinc1,c
  3338  011D1A  0E01               	movlw	high (_V+1)
  3339  011D1C  6EE6               	movwf	postinc1,c
  3340  011D1E  0E00               	movlw	0
  3341  011D20  6EE6               	movwf	postinc1,c
  3342  011D22  0E00               	movlw	0
  3343  011D24  6EE6               	movwf	postinc1,c
  3344  011D26  ECE3  F098         	call	_eaDogM_WriteStringAtPos	;wreg free
  3345                           
  3346                           ; BSR set to: 59
  3347                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  3348  011D2A  0E01               	movlw	1
  3349  011D2C  6EE6               	movwf	postinc1,c
  3350  011D2E  0E01               	movlw	1
  3351  011D30  6EE6               	movwf	postinc1,c
  3352  011D32  EC62  F099         	call	_get_vterm_ptr	;wreg free
  3353  011D36  0060  F0D7  FFE6   	movff	btemp,postinc1
  3354  011D3C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3355  011D42  0E00               	movlw	0
  3356  011D44  6EE6               	movwf	postinc1,c
  3357  011D46  0E01               	movlw	1
  3358  011D48  6EE6               	movwf	postinc1,c
  3359  011D4A  EC62  F099         	call	_get_vterm_ptr	;wreg free
  3360  011D4E  0060  F0D7  FFE6   	movff	btemp,postinc1
  3361  011D54  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3362  011D5A  0EB8               	movlw	low STR_19
  3363  011D5C  6EE6               	movwf	postinc1,c
  3364  011D5E  0EFF               	movlw	high STR_19
  3365  011D60  6EE6               	movwf	postinc1,c
  3366  011D62  0E01               	movlw	low (_V+1)
  3367  011D64  6EE6               	movwf	postinc1,c
  3368  011D66  0E01               	movlw	high (_V+1)
  3369  011D68  6EE6               	movwf	postinc1,c
  3370  011D6A  0E08               	movlw	8
  3371  011D6C  6EE6               	movwf	postinc1,c
  3372  011D6E  EC15  F090         	call	_sprintf	;wreg free
  3373                           
  3374                           ;mconfig.c: 124:  wait_lcd_done();
  3375  011D72  ECBE  F09B         	call	_wait_lcd_done	;wreg free
  3376                           
  3377                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  3378  011D76  0E01               	movlw	low (_V+1)
  3379  011D78  6EE6               	movwf	postinc1,c
  3380  011D7A  0E01               	movlw	high (_V+1)
  3381  011D7C  6EE6               	movwf	postinc1,c
  3382  011D7E  0E00               	movlw	0
  3383  011D80  6EE6               	movwf	postinc1,c
  3384  011D82  0E01               	movlw	1
  3385  011D84  6EE6               	movwf	postinc1,c
  3386  011D86  ECE3  F098         	call	_eaDogM_WriteStringAtPos	;wreg free
  3387                           
  3388                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  3389  011D8A  0E01               	movlw	1
  3390  011D8C  6EE6               	movwf	postinc1,c
  3391  011D8E  0E02               	movlw	2
  3392  011D90  6EE6               	movwf	postinc1,c
  3393  011D92  EC62  F099         	call	_get_vterm_ptr	;wreg free
  3394  011D96  0060  F0D7  FFE6   	movff	btemp,postinc1
  3395  011D9C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3396  011DA2  0E00               	movlw	0
  3397  011DA4  6EE6               	movwf	postinc1,c
  3398  011DA6  0E02               	movlw	2
  3399  011DA8  6EE6               	movwf	postinc1,c
  3400  011DAA  EC62  F099         	call	_get_vterm_ptr	;wreg free
  3401  011DAE  0060  F0D7  FFE6   	movff	btemp,postinc1
  3402  011DB4  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3403  011DBA  0EB8               	movlw	low STR_19
  3404  011DBC  6EE6               	movwf	postinc1,c
  3405  011DBE  0EFF               	movlw	high STR_19
  3406  011DC0  6EE6               	movwf	postinc1,c
  3407  011DC2  0E01               	movlw	low (_V+1)
  3408  011DC4  6EE6               	movwf	postinc1,c
  3409  011DC6  0E01               	movlw	high (_V+1)
  3410  011DC8  6EE6               	movwf	postinc1,c
  3411  011DCA  0E08               	movlw	8
  3412  011DCC  6EE6               	movwf	postinc1,c
  3413  011DCE  EC15  F090         	call	_sprintf	;wreg free
  3414                           
  3415                           ;mconfig.c: 127:  wait_lcd_done();
  3416  011DD2  ECBE  F09B         	call	_wait_lcd_done	;wreg free
  3417                           
  3418                           ; BSR set to: 0
  3419                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  3420  011DD6  0E01               	movlw	low (_V+1)
  3421  011DD8  6EE6               	movwf	postinc1,c
  3422  011DDA  0E01               	movlw	high (_V+1)
  3423  011DDC  6EE6               	movwf	postinc1,c
  3424  011DDE  0E00               	movlw	0
  3425  011DE0  6EE6               	movwf	postinc1,c
  3426  011DE2  0E02               	movlw	2
  3427  011DE4  6EE6               	movwf	postinc1,c
  3428  011DE6  ECE3  F098         	call	_eaDogM_WriteStringAtPos	;wreg free
  3429                           
  3430                           ; BSR set to: 59
  3431                           ;mconfig.c: 129:  WaitMs(3000);
  3432  011DEA  0EB8               	movlw	184
  3433  011DEC  6EE6               	movwf	postinc1,c
  3434  011DEE  0E0B               	movlw	11
  3435  011DF0  6EE6               	movwf	postinc1,c
  3436  011DF2  ECC8  F098         	call	_WaitMs	;wreg free
  3437                           
  3438                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  3439  011DF6  0012               	return		;funcret
  3440  011DF8                     __end_of_vterm_dump:
  3441                           	opt callstack 0
  3442                           
  3443 ;; *************** function _sprintf *****************
  3444 ;; Defined at:
  3445 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;  s               2  [STACK] PTR unsigned char 
  3448 ;;		 -> D.lcd(216), D(218), V(189), 
  3449 ;;  fmt             2  [STACK] PTR const unsigned char 
  3450 ;;		 -> STR_30(3), STR_29(3), STR_28(19), STR_27(19), 
  3451 ;;		 -> STR_26(19), STR_25(19), STR_24(19), STR_23(19), 
  3452 ;;		 -> STR_22(24), STR_21(15), STR_20(15), STR_19(15), 
  3453 ;;		 -> STR_18(10), STR_17(10), STR_16(19), STR_15(19), 
  3454 ;;		 -> STR_9(18), STR_8(17), STR_6(15), STR_5(17), 
  3455 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;  f               6  [STACK] struct _IO_FILE
  3458 ;;  ap              2  [STACK] PTR void [1]
  3459 ;;		 -> ?_printf(2), ?_sprintf(2), 
  3460 ;;  ret             2    0        int 
  3461 ;; Return value:  Size  Location     Type
  3462 ;;                  2  [STACK] int 
  3463 ;; Registers used:
  3464 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  3465 ;; Tracked objects:
  3466 ;;		On entry : 0/3
  3467 ;;		On exit  : 0/0
  3468 ;;		Unchanged: 0/0
  3469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3474 ;;Total ram usage:        0 bytes
  3475 ;; Hardware stack levels used:    1
  3476 ;; Hardware stack levels required when called:   14
  3477 ;; This function calls:
  3478 ;;		_vfprintf
  3479 ;; This function is called by:
  3480 ;;		_main
  3481 ;;		_check_help
  3482 ;;		_vterm_dump
  3483 ;; This function uses a reentrant model
  3484 ;;
  3485                           
  3486                           	psect	text14
  3487  01202A                     __ptext14:
  3488                           	opt callstack 0
  3489  01202A                     _sprintf:
  3490                           	opt callstack 0
  3491                           
  3492                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3493  01202A  0E08               	movlw	8
  3494  01202C  26E1               	addwf	fsr1l,f,c
  3495  01202E  0E00               	movlw	0
  3496  012030  22E2               	addwfc	fsr1h,f,c
  3497                           
  3498                           ;incstack = 0
  3499  012032  0EFE               	movlw	254
  3500  012034  6E3F               	movwf	(btemp+10)^0,c
  3501  012036  0EFF               	movlw	255
  3502  012038  6E40               	movwf	(btemp+11)^0,c
  3503                           
  3504                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  3505  01203A  0EF5               	movlw	245
  3506  01203C  24E1               	addwf	fsr1l,w,c
  3507  01203E  6E3D               	movwf	(btemp+8)^0,c
  3508  012040  0EFF               	movlw	255
  3509  012042  20E2               	addwfc	fsr1h,w,c
  3510  012044  6E3E               	movwf	(btemp+9)^0,c
  3511  012046  503F               	movf	(btemp+10)^0,w,c
  3512  012048  263D               	addwf	(btemp+8)^0,f,c
  3513  01204A  5040               	movf	(btemp+11)^0,w,c
  3514  01204C  223E               	addwfc	(btemp+9)^0,f,c
  3515                           
  3516                           ;stkvar	_ap @ sp[(-8)+6]
  3517  01204E  0EFF               	movlw	-1
  3518  012050  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  3519  012056  0EFE               	movlw	-2
  3520  012058  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  3521                           
  3522                           ;stkvar	_s @ sp[(-8)+-3]
  3523  01205E  0EF5               	movlw	-11
  3524  012060  006F FF8C  F03F    	movff	plusw1,btemp+10
  3525  012066  0EF6               	movlw	-10
  3526  012068  006F FF8C  F040    	movff	plusw1,btemp+11
  3527                           
  3528                           ;stkvar	_f @ sp[(-8)+0]
  3529  01206E  0EF9               	movlw	-7
  3530  012070  0060  F103  FFE3   	movff	btemp+11,plusw1
  3531  012076  0EF8               	movlw	-8
  3532  012078  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  3533                           
  3534                           ;stkvar	_f @ sp[(-8)+0]
  3535  01207E  0EFA               	movlw	250
  3536  012080  24E1               	addwf	fsr1l,w,c
  3537  012082  6ED9               	movwf	fsr2l,c
  3538  012084  0EFF               	movlw	255
  3539  012086  20E2               	addwfc	fsr1h,w,c
  3540  012088  6EDA               	movwf	fsr2h,c
  3541  01208A  0E00               	movlw	0
  3542  01208C  6EDE               	movwf	postinc2,c
  3543  01208E  0E00               	movlw	0
  3544  012090  6EDD               	movwf	postdec2,c
  3545                           
  3546                           ;stkvar	_f @ sp[(-8)+0]
  3547  012092  0EFC               	movlw	252
  3548  012094  24E1               	addwf	fsr1l,w,c
  3549  012096  6ED9               	movwf	fsr2l,c
  3550  012098  0EFF               	movlw	255
  3551  01209A  20E2               	addwfc	fsr1h,w,c
  3552  01209C  6EDA               	movwf	fsr2h,c
  3553  01209E  0E00               	movlw	0
  3554  0120A0  6EDE               	movwf	postinc2,c
  3555  0120A2  0E00               	movlw	0
  3556  0120A4  6EDD               	movwf	postdec2,c
  3557                           
  3558                           ;stkvar	_ap @ sp[(-8)+6]
  3559  0120A6  0EFE               	movlw	254
  3560  0120A8  24E1               	addwf	fsr1l,w,c
  3561  0120AA  6E35               	movwf	btemp^0,c
  3562  0120AC  0EFF               	movlw	255
  3563  0120AE  20E2               	addwfc	fsr1h,w,c
  3564  0120B0  6E36               	movwf	(btemp+1)^0,c
  3565  0120B2  0060  F0D7  FFE6   	movff	btemp,postinc1
  3566  0120B8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3567                           
  3568                           ;stkvar	_fmt @ sp[(-10)+-5]
  3569  0120BE  0EF1               	movlw	-15
  3570  0120C0  006F FF8F FFE6     	movff	plusw1,postinc1
  3571  0120C6  006F FF8F FFE6     	movff	plusw1,postinc1
  3572                           
  3573                           ;stkvar	_f @ sp[(-12)+0]
  3574  0120CC  0EF4               	movlw	244
  3575  0120CE  24E1               	addwf	fsr1l,w,c
  3576  0120D0  6E35               	movwf	btemp^0,c
  3577  0120D2  0EFF               	movlw	255
  3578  0120D4  20E2               	addwfc	fsr1h,w,c
  3579  0120D6  6E36               	movwf	(btemp+1)^0,c
  3580  0120D8  0060  F0D7  FFE6   	movff	btemp,postinc1
  3581  0120DE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3582  0120E4  ECA4  F092         	call	_vfprintf	;wreg free
  3583                           
  3584                           ;stkvar	_f @ sp[(-8)+0]
  3585  0120E8  0EFA               	movlw	250
  3586  0120EA  24E1               	addwf	fsr1l,w,c
  3587  0120EC  6ED9               	movwf	fsr2l,c
  3588  0120EE  0EFF               	movlw	255
  3589  0120F0  20E2               	addwfc	fsr1h,w,c
  3590  0120F2  6EDA               	movwf	fsr2h,c
  3591  0120F4  006F FF78  F03F    	movff	postinc2,btemp+10
  3592  0120FA  006F FF74  F040    	movff	postdec2,btemp+11
  3593                           
  3594                           ;stkvar	_s @ sp[(-8)+-3]
  3595  012100  0EF5               	movlw	-11
  3596  012102  006F FF8C  F03D    	movff	plusw1,btemp+8
  3597  012108  0EF6               	movlw	-10
  3598  01210A  006F FF8C  F03E    	movff	plusw1,btemp+9
  3599  012110  503F               	movf	(btemp+10)^0,w,c
  3600  012112  243D               	addwf	(btemp+8)^0,w,c
  3601  012114  6ED9               	movwf	fsr2l,c
  3602  012116  5040               	movf	(btemp+11)^0,w,c
  3603  012118  203E               	addwfc	(btemp+9)^0,w,c
  3604  01211A  6EDA               	movwf	fsr2h,c
  3605  01211C  0E00               	movlw	0
  3606  01211E  6EDF               	movwf	indf2,c
  3607                           
  3608                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 4, vargsize = 0
  3609  012120  0EF8               	movlw	248
  3610  012122  26E1               	addwf	fsr1l,f,c
  3611  012124  0EFF               	movlw	255
  3612  012126  22E2               	addwfc	fsr1h,f,c
  3613  012128  52E5               	movf	postdec1,f,c
  3614  01212A  50E7               	movf	indf1,w,c
  3615  01212C  5EE1               	subwf	fsr1l,f,c
  3616  01212E  0E00               	movlw	0
  3617  012130  5AE2               	subwfb	fsr1h,f,c
  3618  012132  0012               	return		;funcret
  3619  012134                     __end_of_sprintf:
  3620                           	opt callstack 0
  3621                           
  3622 ;; *************** function _get_vterm_ptr *****************
  3623 ;; Defined at:
  3624 ;;		line 113 in file "mconfig.c"
  3625 ;; Parameters:    Size  Location     Type
  3626 ;;  line            1  [STACK] unsigned char 
  3627 ;;  vterm           1  [STACK] unsigned char 
  3628 ;; Auto vars:     Size  Location     Type
  3629 ;;		None
  3630 ;; Return value:  Size  Location     Type
  3631 ;;                  2  [STACK] PTR unsigned char 
  3632 ;; Registers used:
  3633 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  3634 ;; Tracked objects:
  3635 ;;		On entry : 0/3
  3636 ;;		On exit  : 0/0
  3637 ;;		Unchanged: 0/0
  3638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3643 ;;Total ram usage:        0 bytes
  3644 ;; Hardware stack levels used:    1
  3645 ;; Hardware stack levels required when called:    6
  3646 ;; This function calls:
  3647 ;;		Nothing
  3648 ;; This function is called by:
  3649 ;;		_main
  3650 ;;		_check_help
  3651 ;;		_vterm_dump
  3652 ;; This function uses a reentrant model
  3653 ;;
  3654                           
  3655                           	psect	text15
  3656  0132C4                     __ptext15:
  3657                           	opt callstack 0
  3658  0132C4                     _get_vterm_ptr:
  3659                           	opt callstack 24
  3660                           
  3661                           ;mconfig.c: 113: char * get_vterm_ptr(uint8_t line, uint8_t vterm);mconfig.c: 114: {;mco
      +                          nfig.c: 115:  return D.lcd[vterm & 0x03][line & 0x03];
  3662                           ;stkvar	_vterm @ sp[(0)+-2]
  3663                           
  3664                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3665                           ;incstack = 0
  3666  0132C4  0EFE               	movlw	-2
  3667  0132C6  50E3               	movf	plusw1,w,c
  3668  0132C8  0B03               	andlw	3
  3669  0132CA  0D36               	mullw	54
  3670  0132CC  0E00               	movlw	low _D
  3671  0132CE  6E35               	movwf	btemp^0,c
  3672  0132D0  0E03               	movlw	high _D
  3673  0132D2  6E36               	movwf	(btemp+1)^0,c
  3674  0132D4  50F3               	movf	243,w,c
  3675  0132D6  2635               	addwf	btemp^0,f,c
  3676  0132D8  50F4               	movf	244,w,c
  3677  0132DA  2236               	addwfc	(btemp+1)^0,f,c
  3678                           
  3679                           ;stkvar	_line @ sp[(0)+-1]
  3680  0132DC  0EFF               	movlw	-1
  3681  0132DE  50E3               	movf	plusw1,w,c
  3682  0132E0  0B03               	andlw	3
  3683  0132E2  0D12               	mullw	18
  3684  0132E4  50F3               	movf	243,w,c
  3685  0132E6  2635               	addwf	btemp^0,f,c
  3686  0132E8  50F4               	movf	244,w,c
  3687  0132EA  2236               	addwfc	(btemp+1)^0,f,c
  3688                           
  3689                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  3690  0132EC  52E5               	movf	postdec1,f,c
  3691  0132EE  52E5               	movf	postdec1,f,c
  3692  0132F0  0012               	return		;funcret
  3693  0132F2                     __end_of_get_vterm_ptr:
  3694                           	opt callstack 0
  3695                           
  3696 ;; *************** function _WaitMs *****************
  3697 ;; Defined at:
  3698 ;;		line 32 in file "timers.c"
  3699 ;; Parameters:    Size  Location     Type
  3700 ;;  numMilliseco    2  [STACK] const unsigned short 
  3701 ;; Auto vars:     Size  Location     Type
  3702 ;;		None
  3703 ;; Return value:  Size  Location     Type
  3704 ;;                  1  [STACK] void 
  3705 ;; Registers used:
  3706 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3707 ;; Tracked objects:
  3708 ;;		On entry : 5/1
  3709 ;;		On exit  : 0/0
  3710 ;;		Unchanged: 0/0
  3711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3716 ;;Total ram usage:        0 bytes
  3717 ;; Hardware stack levels used:    1
  3718 ;; Hardware stack levels required when called:    7
  3719 ;; This function calls:
  3720 ;;		_StartTimer
  3721 ;;		_TimerDone
  3722 ;; This function is called by:
  3723 ;;		_main
  3724 ;;		_vterm_dump
  3725 ;; This function uses a reentrant model
  3726 ;;
  3727                           
  3728                           	psect	text16
  3729  013190                     __ptext16:
  3730                           	opt callstack 0
  3731  013190                     _WaitMs:
  3732                           	opt callstack 21
  3733                           
  3734                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  3735                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  3736                           
  3737                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3738                           ;incstack = 0
  3739  013190  0EFE               	movlw	-2
  3740  013192  006F FF8F FFE6     	movff	plusw1,postinc1
  3741  013198  006F FF8F FFE6     	movff	plusw1,postinc1
  3742  01319E  0E00               	movlw	0
  3743  0131A0  6EE6               	movwf	postinc1,c
  3744  0131A2  EC72  F098         	call	_StartTimer	;wreg free
  3745                           
  3746                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  3747  0131A6  D005               	goto	l4809
  3748  0131A8                     l1477:
  3749                           
  3750                           ;timers.c: 36:   __nop();
  3751  0131A8  F000               	nop	
  3752                           
  3753                           ;timers.c: 37:   __nop();
  3754  0131AA  F000               	nop	
  3755                           
  3756                           ;timers.c: 38:   __nop();
  3757  0131AC  F000               	nop	
  3758                           
  3759                           ;timers.c: 39:   __nop();
  3760  0131AE  F000               	nop	
  3761  0131B0  0004               	clrwdt		;# 
  3762  0131B2                     l4809:
  3763                           
  3764                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  3765  0131B2  0E00               	movlw	0
  3766  0131B4  6EE6               	movwf	postinc1,c
  3767  0131B6  EC0D  F09B         	call	_TimerDone	;wreg free
  3768  0131BA  5035               	movf	btemp^0,w,c
  3769  0131BC  B4D8               	btfsc	status,2,c
  3770  0131BE  D7F4               	goto	l1477
  3771                           
  3772                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  3773  0131C0  52E5               	movf	postdec1,f,c
  3774  0131C2  52E5               	movf	postdec1,f,c
  3775  0131C4  0012               	return		;funcret
  3776  0131C6                     __end_of_WaitMs:
  3777                           	opt callstack 0
  3778                           
  3779 ;; *************** function _update_lcd *****************
  3780 ;; Defined at:
  3781 ;;		line 82 in file "mconfig.c"
  3782 ;; Parameters:    Size  Location     Type
  3783 ;;  vterm           1  [STACK] unsigned char 
  3784 ;; Auto vars:     Size  Location     Type
  3785 ;;		None
  3786 ;; Return value:  Size  Location     Type
  3787 ;;                  1  [STACK] unsigned char 
  3788 ;; Registers used:
  3789 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  3790 ;; Tracked objects:
  3791 ;;		On entry : 0/3
  3792 ;;		On exit  : 7/3
  3793 ;;		Unchanged: 0/0
  3794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3799 ;;Total ram usage:        0 bytes
  3800 ;; Hardware stack levels used:    1
  3801 ;; Hardware stack levels required when called:   17
  3802 ;; This function calls:
  3803 ;;		_eaDogM_WriteStringAtPos
  3804 ;;		_wait_lcd_done
  3805 ;; This function is called by:
  3806 ;;		_main
  3807 ;;		_check_help
  3808 ;; This function uses a reentrant model
  3809 ;;
  3810                           
  3811                           	psect	text17
  3812  011F1C                     __ptext17:
  3813                           	opt callstack 0
  3814  011F1C                     _update_lcd:
  3815                           	opt callstack 13
  3816                           
  3817                           ;mconfig.c: 82: uint8_t update_lcd(uint8_t vterm);mconfig.c: 83: {;mconfig.c: 84:  vterm
      +                           = vterm & 0x03;
  3818                           ;stkvar	_vterm @ sp[(0)+-1]
  3819                           
  3820                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3821                           ;incstack = 0
  3822  011F1C  0EFF               	movlw	-1
  3823  011F1E  006F FF8C  F035    	movff	plusw1,btemp
  3824  011F24  0E03               	movlw	3
  3825  011F26  1635               	andwf	btemp^0,f,c
  3826  011F28  0EFF               	movlw	-1
  3827  011F2A  0060  F0D7  FFE3   	movff	btemp,plusw1
  3828                           
  3829                           ;mconfig.c: 86:  if (D.vterm >= 1 && vterm == 0)
  3830  011F30  0103               	movlb	3	; () banked
  3831  011F32  A1D8               	btfss	(_D+216)& (0+255),0,b
  3832  011F34  D004               	goto	l6199
  3833                           
  3834                           ; BSR set to: 3
  3835                           ;stkvar	_vterm @ sp[(0)+-1]
  3836  011F36  0EFF               	movlw	-1
  3837  011F38  50E3               	movf	plusw1,w,c
  3838  011F3A  B4D8               	btfsc	status,2,c
  3839  011F3C  D074               	goto	l1555
  3840  011F3E                     l6199:
  3841                           
  3842                           ; BSR set to: 3
  3843                           ;mconfig.c: 89:  D.lcd[vterm][0][16] = 0;
  3844                           ;stkvar	_vterm @ sp[(0)+-1]
  3845  011F3E  0EFF               	movlw	-1
  3846  011F40  50E3               	movf	plusw1,w,c
  3847  011F42  0D36               	mullw	54
  3848  011F44  0E10               	movlw	low (_D+16)
  3849  011F46  24F3               	addwf	243,w,c
  3850  011F48  6ED9               	movwf	fsr2l,c
  3851  011F4A  0E03               	movlw	high (_D+16)
  3852  011F4C  20F4               	addwfc	prodh,w,c
  3853  011F4E  6EDA               	movwf	fsr2h,c
  3854  011F50  0E00               	movlw	0
  3855  011F52  6EDF               	movwf	indf2,c
  3856                           
  3857                           ;mconfig.c: 90:  D.lcd[vterm][1][16] = 0;
  3858                           ;stkvar	_vterm @ sp[(0)+-1]
  3859  011F54  0EFF               	movlw	-1
  3860  011F56  50E3               	movf	plusw1,w,c
  3861  011F58  0D36               	mullw	54
  3862  011F5A  0E22               	movlw	low (_D+34)
  3863  011F5C  24F3               	addwf	243,w,c
  3864  011F5E  6ED9               	movwf	fsr2l,c
  3865  011F60  0E03               	movlw	high (_D+34)
  3866  011F62  20F4               	addwfc	prodh,w,c
  3867  011F64  6EDA               	movwf	fsr2h,c
  3868  011F66  0E00               	movlw	0
  3869  011F68  6EDF               	movwf	indf2,c
  3870                           
  3871                           ;mconfig.c: 91:  D.lcd[vterm][2][16] = 0;
  3872                           ;stkvar	_vterm @ sp[(0)+-1]
  3873  011F6A  0EFF               	movlw	-1
  3874  011F6C  50E3               	movf	plusw1,w,c
  3875  011F6E  0D36               	mullw	54
  3876  011F70  0E34               	movlw	low (_D+52)
  3877  011F72  24F3               	addwf	243,w,c
  3878  011F74  6ED9               	movwf	fsr2l,c
  3879  011F76  0E03               	movlw	high (_D+52)
  3880  011F78  20F4               	addwfc	prodh,w,c
  3881  011F7A  6EDA               	movwf	fsr2h,c
  3882  011F7C  0E00               	movlw	0
  3883  011F7E  6EDF               	movwf	indf2,c
  3884                           
  3885                           ; BSR set to: 3
  3886                           ;mconfig.c: 92:  wait_lcd_done();
  3887  011F80  ECBE  F09B         	call	_wait_lcd_done	;wreg free
  3888                           
  3889                           ; BSR set to: 0
  3890                           ;mconfig.c: 93:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  3891                           ;stkvar	_vterm @ sp[(0)+-1]
  3892  011F84  0EFF               	movlw	-1
  3893  011F86  50E3               	movf	plusw1,w,c
  3894  011F88  0D36               	mullw	54
  3895  011F8A  0E00               	movlw	low _D
  3896  011F8C  6E3F               	movwf	(btemp+10)^0,c
  3897  011F8E  0E03               	movlw	high _D
  3898  011F90  6E40               	movwf	(btemp+11)^0,c
  3899  011F92  50F3               	movf	243,w,c
  3900  011F94  263F               	addwf	(btemp+10)^0,f,c
  3901  011F96  50F4               	movf	244,w,c
  3902  011F98  2240               	addwfc	(btemp+11)^0,f,c
  3903  011F9A  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  3904  011FA0  0060  F103  FFE6   	movff	btemp+11,postinc1
  3905  011FA6  0E00               	movlw	0
  3906  011FA8  6EE6               	movwf	postinc1,c
  3907  011FAA  0E00               	movlw	0
  3908  011FAC  6EE6               	movwf	postinc1,c
  3909  011FAE  ECE3  F098         	call	_eaDogM_WriteStringAtPos	;wreg free
  3910                           
  3911                           ; BSR set to: 59
  3912                           ;mconfig.c: 94:  wait_lcd_done();
  3913  011FB2  ECBE  F09B         	call	_wait_lcd_done	;wreg free
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;mconfig.c: 95:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  3917                           ;stkvar	_vterm @ sp[(0)+-1]
  3918  011FB6  0EFF               	movlw	-1
  3919  011FB8  50E3               	movf	plusw1,w,c
  3920  011FBA  0D36               	mullw	54
  3921  011FBC  0E00               	movlw	low _D
  3922  011FBE  6E3F               	movwf	(btemp+10)^0,c
  3923  011FC0  0E03               	movlw	high _D
  3924  011FC2  6E40               	movwf	(btemp+11)^0,c
  3925  011FC4  0E12               	movlw	18
  3926  011FC6  263F               	addwf	(btemp+10)^0,f,c
  3927  011FC8  0E00               	movlw	0
  3928  011FCA  2240               	addwfc	(btemp+11)^0,f,c
  3929  011FCC  50F3               	movf	243,w,c
  3930  011FCE  263F               	addwf	(btemp+10)^0,f,c
  3931  011FD0  50F4               	movf	244,w,c
  3932  011FD2  2240               	addwfc	(btemp+11)^0,f,c
  3933  011FD4  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  3934  011FDA  0060  F103  FFE6   	movff	btemp+11,postinc1
  3935  011FE0  0E00               	movlw	0
  3936  011FE2  6EE6               	movwf	postinc1,c
  3937  011FE4  0E01               	movlw	1
  3938  011FE6  6EE6               	movwf	postinc1,c
  3939  011FE8  ECE3  F098         	call	_eaDogM_WriteStringAtPos	;wreg free
  3940                           
  3941                           ; BSR set to: 59
  3942                           ;mconfig.c: 96:  wait_lcd_done();
  3943  011FEC  ECBE  F09B         	call	_wait_lcd_done	;wreg free
  3944                           
  3945                           ; BSR set to: 0
  3946                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  3947                           ;stkvar	_vterm @ sp[(0)+-1]
  3948  011FF0  0EFF               	movlw	-1
  3949  011FF2  50E3               	movf	plusw1,w,c
  3950  011FF4  0D36               	mullw	54
  3951  011FF6  0E00               	movlw	low _D
  3952  011FF8  6E3F               	movwf	(btemp+10)^0,c
  3953  011FFA  0E03               	movlw	high _D
  3954  011FFC  6E40               	movwf	(btemp+11)^0,c
  3955  011FFE  0E24               	movlw	36
  3956  012000  263F               	addwf	(btemp+10)^0,f,c
  3957  012002  0E00               	movlw	0
  3958  012004  2240               	addwfc	(btemp+11)^0,f,c
  3959  012006  50F3               	movf	243,w,c
  3960  012008  263F               	addwf	(btemp+10)^0,f,c
  3961  01200A  50F4               	movf	244,w,c
  3962  01200C  2240               	addwfc	(btemp+11)^0,f,c
  3963  01200E  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  3964  012014  0060  F103  FFE6   	movff	btemp+11,postinc1
  3965  01201A  0E00               	movlw	0
  3966  01201C  6EE6               	movwf	postinc1,c
  3967  01201E  0E02               	movlw	2
  3968  012020  6EE6               	movwf	postinc1,c
  3969  012022  ECE3  F098         	call	_eaDogM_WriteStringAtPos	;wreg free
  3970  012026                     l1555:
  3971                           
  3972                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  3973  012026  52E5               	movf	postdec1,f,c
  3974  012028  0012               	return		;funcret
  3975  01202A                     __end_of_update_lcd:
  3976                           	opt callstack 0
  3977                           
  3978 ;; *************** function _eaDogM_WriteStringAtPos *****************
  3979 ;; Defined at:
  3980 ;;		line 252 in file "eadog.c"
  3981 ;; Parameters:    Size  Location     Type
  3982 ;;  r               1  [STACK] const unsigned char 
  3983 ;;  c               1  [STACK] const unsigned char 
  3984 ;;  strPtr          2  [STACK] PTR unsigned char 
  3985 ;;		 -> D.lcd(216), D(218), V(189), 
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;		None
  3988 ;; Return value:  Size  Location     Type
  3989 ;;                  1  [STACK] void 
  3990 ;; Registers used:
  3991 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  3992 ;; Tracked objects:
  3993 ;;		On entry : 3F/0
  3994 ;;		On exit  : 3F/3B
  3995 ;;		Unchanged: 0/0
  3996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4001 ;;Total ram usage:        0 bytes
  4002 ;; Hardware stack levels used:    1
  4003 ;; Hardware stack levels required when called:   16
  4004 ;; This function calls:
  4005 ;;		_eaDogM_WriteString
  4006 ;;		_send_lcd_cmd_dma
  4007 ;; This function is called by:
  4008 ;;		_update_lcd
  4009 ;;		_vterm_dump
  4010 ;; This function uses a reentrant model
  4011 ;;
  4012                           
  4013                           	psect	text18
  4014  0131C6                     __ptext18:
  4015                           	opt callstack 0
  4016  0131C6                     _eaDogM_WriteStringAtPos:
  4017                           	opt callstack 13
  4018                           
  4019                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  4020                           ;stkvar	_c @ sp[(0)+-2]
  4021                           
  4022                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4023                           ;incstack = 0
  4024  0131C6  0EFE               	movlw	-2
  4025  0131C8  006F FF8C  F040    	movff	plusw1,btemp+11
  4026                           
  4027                           ;stkvar	_r @ sp[(0)+-1]
  4028  0131CE  0EFF               	movlw	-1
  4029  0131D0  50E3               	movf	plusw1,w,c
  4030  0131D2  0D10               	mullw	16
  4031  0131D4  50F3               	movf	243,w,c
  4032  0131D6  2440               	addwf	(btemp+11)^0,w,c
  4033  0131D8  0F80               	addlw	128
  4034  0131DA  6EE6               	movwf	postinc1,c
  4035  0131DC  EC5A  F097         	call	_send_lcd_cmd_dma	;wreg free
  4036                           
  4037                           ; BSR set to: 0
  4038                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
  4039                           ;stkvar	_strPtr @ sp[(0)+-4]
  4040  0131E0  0EFC               	movlw	-4
  4041  0131E2  006F FF8F FFE6     	movff	plusw1,postinc1
  4042  0131E8  006F FF8F FFE6     	movff	plusw1,postinc1
  4043  0131EE  ECF8  F092         	call	_eaDogM_WriteString	;wreg free
  4044                           
  4045                           ; BSR set to: 59
  4046                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  4047  0131F2  52E5               	movf	postdec1,f,c
  4048  0131F4  52E5               	movf	postdec1,f,c
  4049  0131F6  52E5               	movf	postdec1,f,c
  4050  0131F8  52E5               	movf	postdec1,f,c
  4051  0131FA  0012               	return		;funcret
  4052  0131FC                     __end_of_eaDogM_WriteStringAtPos:
  4053                           	opt callstack 0
  4054                           
  4055 ;; *************** function _send_lcd_cmd_dma *****************
  4056 ;; Defined at:
  4057 ;;		line 205 in file "eadog.c"
  4058 ;; Parameters:    Size  Location     Type
  4059 ;;  strPtr          1  [STACK] unsigned char 
  4060 ;; Auto vars:     Size  Location     Type
  4061 ;;		None
  4062 ;; Return value:  Size  Location     Type
  4063 ;;                  1  [STACK] void 
  4064 ;; Registers used:
  4065 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  4066 ;; Tracked objects:
  4067 ;;		On entry : 0/3D
  4068 ;;		On exit  : 3F/0
  4069 ;;		Unchanged: 0/0
  4070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4075 ;;Total ram usage:        0 bytes
  4076 ;; Hardware stack levels used:    1
  4077 ;; Hardware stack levels required when called:   15
  4078 ;; This function calls:
  4079 ;;		_printf
  4080 ;;		_ringBufS_flush
  4081 ;;		_start_lcd
  4082 ;;		_wait_lcd_done
  4083 ;;		_wait_lcd_set
  4084 ;; This function is called by:
  4085 ;;		_eaDogM_WriteCommand
  4086 ;;		_eaDogM_WriteStringAtPos
  4087 ;; This function uses a reentrant model
  4088 ;;
  4089                           
  4090                           	psect	text19
  4091  012EB4                     __ptext19:
  4092                           	opt callstack 0
  4093  012EB4                     _send_lcd_cmd_dma:
  4094                           	opt callstack 13
  4095                           
  4096                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 208:  wait
      +                          _lcd_set();
  4097                           
  4098                           ; BSR set to: 59
  4099                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4100                           ;incstack = 0
  4101  012EB4  ECB0  F09C         	call	_wait_lcd_set	;wreg free
  4102                           
  4103                           ; BSR set to: 0
  4104                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
  4105  012EB8  0E00               	movlw	0
  4106  012EBA  6EE6               	movwf	postinc1,c
  4107  012EBC  0060  F283  FFE6   	movff	_spi_link+6,postinc1
  4108  012EC2  0060  F287  FFE6   	movff	_spi_link+7,postinc1
  4109  012EC8  ECE7  F093         	call	_ringBufS_flush	;wreg free
  4110  012ECC  92BC               	bcf	188,1,c	;volatile
  4111  012ECE  94BC               	bcf	188,2,c	;volatile
  4112                           
  4113                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
  4114  012ED0  013B               	movlb	59	; () banked
  4115  012ED2  9FFC               	bcf	252,7,b	;volatile
  4116                           
  4117                           ; BSR set to: 59
  4118                           ;eadog.c: 214:  DMA1SSZ = 1;
  4119  012ED4  0E00               	movlw	0
  4120  012ED6  6FF8               	movwf	248,b	;volatile
  4121  012ED8  0E01               	movlw	1
  4122  012EDA  6FF7               	movwf	247,b	;volatile
  4123                           
  4124                           ; BSR set to: 59
  4125                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
  4126  012EDC  8FFC               	bsf	252,7,b	;volatile
  4127                           
  4128                           ; BSR set to: 59
  4129                           ;eadog.c: 216:  printf("%c", strPtr);
  4130                           ;stkvar	_strPtr @ sp[(0)+-1]
  4131  012EDE  0EFF               	movlw	-1
  4132  012EE0  50E3               	movf	plusw1,w,c
  4133  012EE2  6EE6               	movwf	postinc1,c
  4134  012EE4  0E00               	movlw	0
  4135  012EE6  6EE6               	movwf	postinc1,c
  4136  012EE8  0EF9               	movlw	low STR_11
  4137  012EEA  6EE6               	movwf	postinc1,c
  4138  012EEC  0EFF               	movlw	high STR_11
  4139  012EEE  6EE6               	movwf	postinc1,c
  4140  012EF0  0E04               	movlw	4
  4141  012EF2  6EE6               	movwf	postinc1,c
  4142  012EF4  EC71  F096         	call	_printf	;wreg free
  4143                           
  4144                           ;eadog.c: 217:  start_lcd();
  4145  012EF8  ECB3  F09C         	call	_start_lcd	;wreg free
  4146                           
  4147                           ; BSR set to: 59
  4148                           ;eadog.c: 218:  wait_lcd_done();
  4149  012EFC  ECBE  F09B         	call	_wait_lcd_done	;wreg free
  4150                           
  4151                           ; BSR set to: 0
  4152  012F00  82BC               	bsf	188,1,c	;volatile
  4153                           
  4154                           ; BSR set to: 0
  4155                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  4156  012F02  52E5               	movf	postdec1,f,c
  4157  012F04  0012               	return		;funcret
  4158  012F06                     __end_of_send_lcd_cmd_dma:
  4159                           	opt callstack 0
  4160                           
  4161 ;; *************** function _wait_lcd_done *****************
  4162 ;; Defined at:
  4163 ;;		line 141 in file "eadog.c"
  4164 ;; Parameters:    Size  Location     Type
  4165 ;;		None
  4166 ;; Auto vars:     Size  Location     Type
  4167 ;;		None
  4168 ;; Return value:  Size  Location     Type
  4169 ;;                  1  [STACK] void 
  4170 ;; Registers used:
  4171 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4172 ;; Tracked objects:
  4173 ;;		On entry : 0/1
  4174 ;;		On exit  : 3F/0
  4175 ;;		Unchanged: 0/0
  4176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4181 ;;Total ram usage:        0 bytes
  4182 ;; Hardware stack levels used:    1
  4183 ;; Hardware stack levels required when called:    7
  4184 ;; This function calls:
  4185 ;;		_wdtdelay
  4186 ;; This function is called by:
  4187 ;;		_send_lcd_cmd_dma
  4188 ;;		_update_lcd
  4189 ;;		_vterm_dump
  4190 ;; This function uses a reentrant model
  4191 ;;
  4192                           
  4193                           	psect	text20
  4194  01377C                     __ptext20:
  4195                           	opt callstack 0
  4196  01377C                     _wait_lcd_done:
  4197                           	opt callstack 22
  4198                           
  4199                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
  4200                           
  4201                           ; BSR set to: 0
  4202                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4203                           ;incstack = 0
  4204  01377C  0100               	movlb	0	; () banked
  4205  01377E  B79A               	btfsc	_spi_link& (0+255),3,b	;volatile
  4206  013780  D7FD               	goto	_wait_lcd_done
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;eadog.c: 144:  wdtdelay(50);
  4210  013782  0E32               	movlw	50
  4211  013784  6EE6               	movwf	postinc1,c
  4212  013786  0E00               	movlw	0
  4213  013788  6EE6               	movwf	postinc1,c
  4214  01378A  0E00               	movlw	0
  4215  01378C  6EE6               	movwf	postinc1,c
  4216  01378E  0E00               	movlw	0
  4217  013790  6EE6               	movwf	postinc1,c
  4218  013792  EC00  F097         	call	_wdtdelay	;wreg free
  4219                           
  4220                           ; BSR set to: 0
  4221                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  4222  013796  0012               	return		;funcret
  4223  013798                     __end_of_wait_lcd_done:
  4224                           	opt callstack 0
  4225                           
  4226 ;; *************** function _wdtdelay *****************
  4227 ;; Defined at:
  4228 ;;		line 22 in file "eadog.c"
  4229 ;; Parameters:    Size  Location     Type
  4230 ;;  delay           4  [STACK] const unsigned long 
  4231 ;; Auto vars:     Size  Location     Type
  4232 ;;		None
  4233 ;; Return value:  Size  Location     Type
  4234 ;;                  1  [STACK] void 
  4235 ;; Registers used:
  4236 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4237 ;; Tracked objects:
  4238 ;;		On entry : 0/0
  4239 ;;		On exit  : 3F/0
  4240 ;;		Unchanged: 0/0
  4241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4246 ;;Total ram usage:        0 bytes
  4247 ;; Hardware stack levels used:    1
  4248 ;; Hardware stack levels required when called:    6
  4249 ;; This function calls:
  4250 ;;		Nothing
  4251 ;; This function is called by:
  4252 ;;		_init_display
  4253 ;;		_send_lcd_cmd
  4254 ;;		_send_lcd_cmd_long
  4255 ;;		_wait_lcd_done
  4256 ;; This function uses a reentrant model
  4257 ;;
  4258                           
  4259                           	psect	text21
  4260  012E00                     __ptext21:
  4261                           	opt callstack 0
  4262  012E00                     _wdtdelay:
  4263                           	opt callstack 22
  4264                           
  4265                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  4266                           
  4267                           ; BSR set to: 0
  4268                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4269                           ;incstack = 0
  4270  012E00  0100               	movlb	0	; () banked
  4271  012E02  6BA6               	clrf	wdtdelay@dcount& (0+255),b
  4272  012E04  6BA7               	clrf	(wdtdelay@dcount+1)& (0+255),b
  4273  012E06  6BA8               	clrf	(wdtdelay@dcount+2)& (0+255),b
  4274  012E08  6BA9               	clrf	(wdtdelay@dcount+3)& (0+255),b
  4275  012E0A                     l1322:
  4276                           
  4277                           ; BSR set to: 0
  4278                           ;eadog.c: 27:   __nop();
  4279  012E0A  F000               	nop	
  4280  012E0C  0004               	clrwdt		;# 
  4281                           
  4282                           ;eadog.c: 29:  };
  4283  012E0E  0E01               	movlw	1
  4284  012E10  0100               	movlb	0	; () banked
  4285  012E12  27A6               	addwf	wdtdelay@dcount& (0+255),f,b
  4286  012E14  0E00               	movlw	0
  4287  012E16  23A7               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  4288  012E18  23A8               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  4289  012E1A  23A9               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  4290                           
  4291                           ; BSR set to: 0
  4292                           ;stkvar	_delay @ sp[(0)+-4]
  4293  012E1C  0EFC               	movlw	-4
  4294  012E1E  006F FF8C  F035    	movff	plusw1,btemp
  4295  012E24  51A6               	movf	wdtdelay@dcount& (0+255),w,b
  4296  012E26  5C35               	subwf	btemp^0,w,c
  4297  012E28  0EFD               	movlw	-3
  4298  012E2A  006F FF8C  F035    	movff	plusw1,btemp
  4299  012E30  51A7               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  4300  012E32  5835               	subwfb	btemp^0,w,c
  4301  012E34  0EFE               	movlw	-2
  4302  012E36  006F FF8C  F035    	movff	plusw1,btemp
  4303  012E3C  51A8               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  4304  012E3E  5835               	subwfb	btemp^0,w,c
  4305  012E40  0EFF               	movlw	-1
  4306  012E42  006F FF8C  F035    	movff	plusw1,btemp
  4307  012E48  51A9               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  4308  012E4A  5835               	subwfb	btemp^0,w,c
  4309  012E4C  B0D8               	btfsc	status,0,c
  4310  012E4E  D7DD               	goto	l1322
  4311                           
  4312                           ; BSR set to: 0
  4313                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  4314  012E50  52E5               	movf	postdec1,f,c
  4315  012E52  52E5               	movf	postdec1,f,c
  4316  012E54  52E5               	movf	postdec1,f,c
  4317  012E56  52E5               	movf	postdec1,f,c
  4318  012E58  0012               	return		;funcret
  4319  012E5A                     __end_of_wdtdelay:
  4320                           	opt callstack 0
  4321                           
  4322 ;; *************** function _eaDogM_WriteString *****************
  4323 ;; Defined at:
  4324 ;;		line 184 in file "eadog.c"
  4325 ;; Parameters:    Size  Location     Type
  4326 ;;  strPtr          2  [STACK] PTR unsigned char 
  4327 ;;		 -> D.lcd(216), D(218), V(189), 
  4328 ;; Auto vars:     Size  Location     Type
  4329 ;;		None
  4330 ;; Return value:  Size  Location     Type
  4331 ;;                  1  [STACK] void 
  4332 ;; Registers used:
  4333 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  4334 ;; Tracked objects:
  4335 ;;		On entry : 3F/0
  4336 ;;		On exit  : 3F/3B
  4337 ;;		Unchanged: 0/0
  4338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4343 ;;Total ram usage:        0 bytes
  4344 ;; Hardware stack levels used:    1
  4345 ;; Hardware stack levels required when called:   15
  4346 ;; This function calls:
  4347 ;;		_printf
  4348 ;;		_ringBufS_flush
  4349 ;;		_start_lcd
  4350 ;;		_strlen
  4351 ;;		_wait_lcd_set
  4352 ;; This function is called by:
  4353 ;;		_eaDogM_WriteStringAtPos
  4354 ;; This function uses a reentrant model
  4355 ;;
  4356                           
  4357                           	psect	text22
  4358  0125F0                     __ptext22:
  4359                           	opt callstack 0
  4360  0125F0                     _eaDogM_WriteString:
  4361                           	opt callstack 13
  4362                           
  4363                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 187:  wait
      +                          _lcd_set();
  4364                           
  4365                           ; BSR set to: 0
  4366                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4367                           ;incstack = 0
  4368  0125F0  ECB0  F09C         	call	_wait_lcd_set	;wreg free
  4369                           
  4370                           ; BSR set to: 0
  4371                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
  4372  0125F4  0E00               	movlw	0
  4373  0125F6  6EE6               	movwf	postinc1,c
  4374  0125F8  0060  F283  FFE6   	movff	_spi_link+6,postinc1
  4375  0125FE  0060  F287  FFE6   	movff	_spi_link+7,postinc1
  4376  012604  ECE7  F093         	call	_ringBufS_flush	;wreg free
  4377  012608  94BC               	bcf	188,2,c	;volatile
  4378                           
  4379                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  4380                           ;stkvar	_strPtr @ sp[(0)+-2]
  4381  01260A  0EFE               	movlw	-2
  4382  01260C  006F FF8F FFE6     	movff	plusw1,postinc1
  4383  012612  006F FF8F FFE6     	movff	plusw1,postinc1
  4384  012618  EC4B  F093         	call	_strlen	;wreg free
  4385  01261C  5036               	movf	(btemp+1)^0,w,c
  4386  01261E  E104               	bnz	u4170
  4387  012620  0E41               	movlw	65
  4388  012622  5C35               	subwf	btemp^0,w,c
  4389  012624  A0D8               	btfss	status,0,c
  4390  012626  D010               	goto	l6163
  4391  012628                     u4170:
  4392                           
  4393                           ;stkvar	_strPtr @ sp[(0)+-2]
  4394  012628  0EFE               	movlw	-2
  4395  01262A  006F FF8C  F03F    	movff	plusw1,btemp+10
  4396  012630  0EFF               	movlw	-1
  4397  012632  006F FF8C  F040    	movff	plusw1,btemp+11
  4398  012638  0E40               	movlw	64
  4399  01263A  243F               	addwf	(btemp+10)^0,w,c
  4400  01263C  6ED9               	movwf	fsr2l,c
  4401  01263E  0E00               	movlw	0
  4402  012640  2040               	addwfc	(btemp+11)^0,w,c
  4403  012642  6EDA               	movwf	fsr2h,c
  4404  012644  0E00               	movlw	0
  4405  012646  6EDF               	movwf	indf2,c
  4406  012648                     l6163:
  4407                           
  4408                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
  4409  012648  013B               	movlb	59	; () banked
  4410  01264A  9FFC               	bcf	252,7,b	;volatile
  4411                           
  4412                           ; BSR set to: 59
  4413                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
  4414                           ;stkvar	_strPtr @ sp[(0)+-2]
  4415  01264C  0EFE               	movlw	-2
  4416  01264E  006F FF8F FFE6     	movff	plusw1,postinc1
  4417  012654  006F FF8F FFE6     	movff	plusw1,postinc1
  4418  01265A  EC4B  F093         	call	_strlen	;wreg free
  4419  01265E  0060  F0D7  FBF7   	movff	btemp,15351	;volatile
  4420  012664  0060  F0DB  FBF8   	movff	btemp+1,15352	;volatile
  4421                           
  4422                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
  4423  01266A  013B               	movlb	59	; () banked
  4424  01266C  8FFC               	bsf	252,7,b	;volatile
  4425                           
  4426                           ; BSR set to: 59
  4427                           ;eadog.c: 195:  printf("%s", strPtr);
  4428                           ;stkvar	_strPtr @ sp[(0)+-2]
  4429  01266E  0EFE               	movlw	-2
  4430  012670  006F FF8F FFE6     	movff	plusw1,postinc1
  4431  012676  006F FF8F FFE6     	movff	plusw1,postinc1
  4432  01267C  0EFC               	movlw	low STR_10
  4433  01267E  6EE6               	movwf	postinc1,c
  4434  012680  0EFF               	movlw	high STR_10
  4435  012682  6EE6               	movwf	postinc1,c
  4436  012684  0E04               	movlw	4
  4437  012686  6EE6               	movwf	postinc1,c
  4438  012688  EC71  F096         	call	_printf	;wreg free
  4439                           
  4440                           ;eadog.c: 196:  start_lcd();
  4441  01268C  ECB3  F09C         	call	_start_lcd	;wreg free
  4442                           
  4443                           ; BSR set to: 59
  4444                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  4445  012690  52E5               	movf	postdec1,f,c
  4446  012692  52E5               	movf	postdec1,f,c
  4447  012694  0012               	return		;funcret
  4448  012696                     __end_of_eaDogM_WriteString:
  4449                           	opt callstack 0
  4450                           
  4451 ;; *************** function _wait_lcd_set *****************
  4452 ;; Defined at:
  4453 ;;		line 131 in file "eadog.c"
  4454 ;; Parameters:    Size  Location     Type
  4455 ;;		None
  4456 ;; Auto vars:     Size  Location     Type
  4457 ;;		None
  4458 ;; Return value:  Size  Location     Type
  4459 ;;                  1  [STACK] void 
  4460 ;; Registers used:
  4461 ;;		None
  4462 ;; Tracked objects:
  4463 ;;		On entry : 0/3D
  4464 ;;		On exit  : 3F/0
  4465 ;;		Unchanged: 0/0
  4466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4471 ;;Total ram usage:        0 bytes
  4472 ;; Hardware stack levels used:    1
  4473 ;; Hardware stack levels required when called:    6
  4474 ;; This function calls:
  4475 ;;		Nothing
  4476 ;; This function is called by:
  4477 ;;		_eaDogM_WriteString
  4478 ;;		_send_lcd_cmd_dma
  4479 ;; This function uses a reentrant model
  4480 ;;
  4481                           
  4482                           	psect	text23
  4483  013960                     __ptext23:
  4484                           	opt callstack 0
  4485  013960                     _wait_lcd_set:
  4486                           	opt callstack 21
  4487                           
  4488                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
  4489                           
  4490                           ; BSR set to: 59
  4491                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4492                           ;incstack = 0
  4493  013960  0100               	movlb	0	; () banked
  4494  013962  879A               	bsf	_spi_link& (0+255),3,b	;volatile
  4495                           
  4496                           ; BSR set to: 0
  4497                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  4498  013964  0012               	return		;funcret
  4499  013966                     __end_of_wait_lcd_set:
  4500                           	opt callstack 0
  4501                           
  4502 ;; *************** function _start_lcd *****************
  4503 ;; Defined at:
  4504 ;;		line 126 in file "eadog.c"
  4505 ;; Parameters:    Size  Location     Type
  4506 ;;		None
  4507 ;; Auto vars:     Size  Location     Type
  4508 ;;		None
  4509 ;; Return value:  Size  Location     Type
  4510 ;;                  1  [STACK] void 
  4511 ;; Registers used:
  4512 ;;		None
  4513 ;; Tracked objects:
  4514 ;;		On entry : 0/3B
  4515 ;;		On exit  : 3F/3B
  4516 ;;		Unchanged: 0/0
  4517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4522 ;;Total ram usage:        0 bytes
  4523 ;; Hardware stack levels used:    1
  4524 ;; Hardware stack levels required when called:    6
  4525 ;; This function calls:
  4526 ;;		Nothing
  4527 ;; This function is called by:
  4528 ;;		_eaDogM_WriteString
  4529 ;;		_send_lcd_cmd_dma
  4530 ;; This function uses a reentrant model
  4531 ;;
  4532                           
  4533                           	psect	text24
  4534  013966                     __ptext24:
  4535                           	opt callstack 0
  4536  013966                     _start_lcd:
  4537                           	opt callstack 21
  4538                           
  4539                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
  4540                           
  4541                           ; BSR set to: 0
  4542                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4543                           ;incstack = 0
  4544  013966  013B               	movlb	59	; () banked
  4545  013968  8DFC               	bsf	252,6,b	;volatile
  4546                           
  4547                           ; BSR set to: 59
  4548                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  4549  01396A  0012               	return		;funcret
  4550  01396C                     __end_of_start_lcd:
  4551                           	opt callstack 0
  4552                           
  4553 ;; *************** function _ringBufS_flush *****************
  4554 ;; Defined at:
  4555 ;;		line 76 in file "ringbufs.c"
  4556 ;; Parameters:    Size  Location     Type
  4557 ;;  _this           2  [STACK] PTR struct ringBufS_t
  4558 ;;		 -> ring_buf1(67), 
  4559 ;;  clearBuffer     1  [STACK] const char 
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;		None
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  1  [STACK] void 
  4564 ;; Registers used:
  4565 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4566 ;; Tracked objects:
  4567 ;;		On entry : 3F/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4575 ;;Total ram usage:        0 bytes
  4576 ;; Hardware stack levels used:    1
  4577 ;; Hardware stack levels required when called:    7
  4578 ;; This function calls:
  4579 ;;		_memset
  4580 ;; This function is called by:
  4581 ;;		_eaDogM_WriteString
  4582 ;;		_send_lcd_cmd_dma
  4583 ;; This function uses a reentrant model
  4584 ;;
  4585                           
  4586                           	psect	text25
  4587  0127CE                     __ptext25:
  4588                           	opt callstack 0
  4589  0127CE                     _ringBufS_flush:
  4590                           	opt callstack 20
  4591                           
  4592                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  4593                           ;stkvar	__this @ sp[(0)+-2]
  4594                           
  4595                           ; BSR set to: 59
  4596                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4597                           ;incstack = 0
  4598  0127CE  0EFE               	movlw	-2
  4599  0127D0  006F FF8C  F03F    	movff	plusw1,btemp+10
  4600  0127D6  0EFF               	movlw	-1
  4601  0127D8  006F FF8C  F040    	movff	plusw1,btemp+11
  4602  0127DE  0E42               	movlw	66
  4603  0127E0  243F               	addwf	(btemp+10)^0,w,c
  4604  0127E2  6ED9               	movwf	fsr2l,c
  4605  0127E4  0E00               	movlw	0
  4606  0127E6  2040               	addwfc	(btemp+11)^0,w,c
  4607  0127E8  6EDA               	movwf	fsr2h,c
  4608  0127EA  0E00               	movlw	0
  4609  0127EC  6EDF               	movwf	indf2,c
  4610                           
  4611                           ;ringbufs.c: 79:  _this->head = 0;
  4612                           ;stkvar	__this @ sp[(0)+-2]
  4613  0127EE  0EFE               	movlw	-2
  4614  0127F0  006F FF8C  F03F    	movff	plusw1,btemp+10
  4615  0127F6  0EFF               	movlw	-1
  4616  0127F8  006F FF8C  F040    	movff	plusw1,btemp+11
  4617  0127FE  0E40               	movlw	64
  4618  012800  243F               	addwf	(btemp+10)^0,w,c
  4619  012802  6ED9               	movwf	fsr2l,c
  4620  012804  0E00               	movlw	0
  4621  012806  2040               	addwfc	(btemp+11)^0,w,c
  4622  012808  6EDA               	movwf	fsr2h,c
  4623  01280A  0E00               	movlw	0
  4624  01280C  6EDF               	movwf	indf2,c
  4625                           
  4626                           ;ringbufs.c: 80:  _this->tail = 0;
  4627                           ;stkvar	__this @ sp[(0)+-2]
  4628  01280E  0EFE               	movlw	-2
  4629  012810  006F FF8C  F03F    	movff	plusw1,btemp+10
  4630  012816  0EFF               	movlw	-1
  4631  012818  006F FF8C  F040    	movff	plusw1,btemp+11
  4632  01281E  0E41               	movlw	65
  4633  012820  243F               	addwf	(btemp+10)^0,w,c
  4634  012822  6ED9               	movwf	fsr2l,c
  4635  012824  0E00               	movlw	0
  4636  012826  2040               	addwfc	(btemp+11)^0,w,c
  4637  012828  6EDA               	movwf	fsr2h,c
  4638  01282A  0E00               	movlw	0
  4639  01282C  6EDF               	movwf	indf2,c
  4640                           
  4641                           ;ringbufs.c: 81:  if (clearBuffer) {
  4642                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  4643  01282E  0EFD               	movlw	-3
  4644  012830  50E3               	movf	plusw1,w,c
  4645  012832  B4D8               	btfsc	status,2,c
  4646  012834  D011               	goto	l1462
  4647                           
  4648                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  4649  012836  0E40               	movlw	64
  4650  012838  6EE6               	movwf	postinc1,c
  4651  01283A  0E00               	movlw	0
  4652  01283C  6EE6               	movwf	postinc1,c
  4653  01283E  0E00               	movlw	0
  4654  012840  6EE6               	movwf	postinc1,c
  4655  012842  0E00               	movlw	0
  4656  012844  6EE6               	movwf	postinc1,c
  4657                           
  4658                           ;stkvar	__this @ sp[(-4)+-2]
  4659  012846  0EFA               	movlw	-6
  4660  012848  006F FF8F FFE6     	movff	plusw1,postinc1
  4661  01284E  006F FF8F FFE6     	movff	plusw1,postinc1
  4662  012854  EC27  F088         	call	_memset	;wreg free
  4663  012858                     l1462:
  4664                           
  4665                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  4666  012858  52E5               	movf	postdec1,f,c
  4667  01285A  52E5               	movf	postdec1,f,c
  4668  01285C  52E5               	movf	postdec1,f,c
  4669  01285E  0012               	return		;funcret
  4670  012860                     __end_of_ringBufS_flush:
  4671                           	opt callstack 0
  4672                           
  4673 ;; *************** function _memset *****************
  4674 ;; Defined at:
  4675 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;  dest            2  [STACK] PTR void 
  4678 ;;		 -> ring_buf2(67), ring_buf1(67), 
  4679 ;;  c               2  [STACK] int 
  4680 ;;  n               2  [STACK] unsigned int 
  4681 ;; Auto vars:     Size  Location     Type
  4682 ;;  s               2  [STACK] PTR unsigned char 
  4683 ;;		 -> ring_buf2(67), ring_buf1(67), 
  4684 ;;  k               2  [STACK] unsigned int 
  4685 ;; Return value:  Size  Location     Type
  4686 ;;                  2  [STACK] PTR void 
  4687 ;; Registers used:
  4688 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4689 ;; Tracked objects:
  4690 ;;		On entry : 0/0
  4691 ;;		On exit  : 0/0
  4692 ;;		Unchanged: 0/0
  4693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4698 ;;Total ram usage:        0 bytes
  4699 ;; Hardware stack levels used:    1
  4700 ;; Hardware stack levels required when called:    6
  4701 ;; This function calls:
  4702 ;;		Nothing
  4703 ;; This function is called by:
  4704 ;;		_ringBufS_init
  4705 ;;		_ringBufS_flush
  4706 ;; This function uses a reentrant model
  4707 ;;
  4708                           
  4709                           	psect	text26
  4710  01104E                     __ptext26:
  4711                           	opt callstack 0
  4712  01104E                     _memset:
  4713                           	opt callstack 0
  4714                           
  4715                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4716  01104E  52E6               	movf	postinc1,f,c
  4717  011050  52E6               	movf	postinc1,f,c
  4718  011052  52E6               	movf	postinc1,f,c
  4719  011054  52E6               	movf	postinc1,f,c
  4720                           
  4721                           ;stkvar	_dest @ sp[(-4)+-2]
  4722                           
  4723                           ;incstack = 0
  4724  011056  0EFA               	movlw	-6
  4725  011058  006F FF8C  F03F    	movff	plusw1,btemp+10
  4726  01105E  0EFB               	movlw	-5
  4727  011060  006F FF8C  F040    	movff	plusw1,btemp+11
  4728                           
  4729                           ;stkvar	_s @ sp[(-4)+0]
  4730  011066  0EFD               	movlw	-3
  4731  011068  0060  F103  FFE3   	movff	btemp+11,plusw1
  4732  01106E  0EFC               	movlw	-4
  4733  011070  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  4734                           
  4735                           ;stkvar	_n @ sp[(-4)+-6]
  4736  011076  0EF6               	movlw	-10
  4737  011078  006F FF8C  F035    	movff	plusw1,btemp
  4738  01107E  0EF7               	movlw	-9
  4739  011080  50E3               	movf	plusw1,w,c
  4740  011082  1035               	iorwf	btemp^0,w,c
  4741  011084  B4D8               	btfsc	status,2,c
  4742  011086  D154               	goto	u4140
  4743                           
  4744                           ;stkvar	_c @ sp[(-4)+-4]
  4745                           ;stkvar	_s @ sp[(-4)+0]
  4746  011088  0EFC               	movlw	-4
  4747  01108A  006F FF8F FFD9     	movff	plusw1,fsr2l
  4748  011090  0EFD               	movlw	-3
  4749  011092  006F FF8F FFDA     	movff	plusw1,fsr2h
  4750  011098  0EF8               	movlw	-8
  4751  01109A  006F FF8F FFDF     	movff	plusw1,indf2
  4752                           
  4753                           ;stkvar	_c @ sp[(-4)+-4]
  4754                           ;stkvar	_n @ sp[(-4)+-6]
  4755                           ;stkvar	_s @ sp[(-4)+0]
  4756  0110A0  0EFC               	movlw	-4
  4757  0110A2  006F FF8C  F03F    	movff	plusw1,btemp+10
  4758  0110A8  0EFD               	movlw	-3
  4759  0110AA  006F FF8C  F040    	movff	plusw1,btemp+11
  4760  0110B0  0EF6               	movlw	-10
  4761  0110B2  50E3               	movf	plusw1,w,c
  4762  0110B4  263F               	addwf	(btemp+10)^0,f,c
  4763  0110B6  0EF7               	movlw	-9
  4764  0110B8  50E3               	movf	plusw1,w,c
  4765  0110BA  2240               	addwfc	(btemp+11)^0,f,c
  4766  0110BC  0EFF               	movlw	255
  4767  0110BE  243F               	addwf	(btemp+10)^0,w,c
  4768  0110C0  6ED9               	movwf	fsr2l,c
  4769  0110C2  0EFF               	movlw	255
  4770  0110C4  2040               	addwfc	(btemp+11)^0,w,c
  4771  0110C6  6EDA               	movwf	fsr2h,c
  4772  0110C8  0EF8               	movlw	-8
  4773  0110CA  006F FF8F FFDF     	movff	plusw1,indf2
  4774                           
  4775                           ;stkvar	_n @ sp[(-4)+-6]
  4776  0110D0  0EF7               	movlw	-9
  4777  0110D2  50E3               	movf	plusw1,w,c
  4778  0110D4  E108               	bnz	l6079
  4779  0110D6  0EF6               	movlw	-10
  4780  0110D8  006F FF8C  F035    	movff	plusw1,btemp
  4781  0110DE  0E03               	movlw	3
  4782  0110E0  5E35               	subwf	btemp^0,f,c
  4783  0110E2  A0D8               	btfss	status,0,c
  4784  0110E4  D125               	goto	u4140
  4785  0110E6                     l6079:
  4786                           
  4787                           ;stkvar	_c @ sp[(-4)+-4]
  4788                           ;stkvar	_s @ sp[(-4)+0]
  4789  0110E6  0EFC               	movlw	-4
  4790  0110E8  006F FF8C  F03F    	movff	plusw1,btemp+10
  4791  0110EE  0EFD               	movlw	-3
  4792  0110F0  006F FF8C  F040    	movff	plusw1,btemp+11
  4793  0110F6  0E01               	movlw	1
  4794  0110F8  243F               	addwf	(btemp+10)^0,w,c
  4795  0110FA  6ED9               	movwf	fsr2l,c
  4796  0110FC  0E00               	movlw	0
  4797  0110FE  2040               	addwfc	(btemp+11)^0,w,c
  4798  011100  6EDA               	movwf	fsr2h,c
  4799  011102  0EF8               	movlw	-8
  4800  011104  006F FF8F FFDF     	movff	plusw1,indf2
  4801                           
  4802                           ;stkvar	_c @ sp[(-4)+-4]
  4803                           ;stkvar	_s @ sp[(-4)+0]
  4804  01110A  0EFC               	movlw	-4
  4805  01110C  006F FF8C  F03F    	movff	plusw1,btemp+10
  4806  011112  0EFD               	movlw	-3
  4807  011114  006F FF8C  F040    	movff	plusw1,btemp+11
  4808  01111A  0E02               	movlw	2
  4809  01111C  243F               	addwf	(btemp+10)^0,w,c
  4810  01111E  6ED9               	movwf	fsr2l,c
  4811  011120  0E00               	movlw	0
  4812  011122  2040               	addwfc	(btemp+11)^0,w,c
  4813  011124  6EDA               	movwf	fsr2h,c
  4814  011126  0EF8               	movlw	-8
  4815  011128  006F FF8F FFDF     	movff	plusw1,indf2
  4816                           
  4817                           ;stkvar	_c @ sp[(-4)+-4]
  4818                           ;stkvar	_n @ sp[(-4)+-6]
  4819                           ;stkvar	_s @ sp[(-4)+0]
  4820  01112E  0EFC               	movlw	-4
  4821  011130  006F FF8C  F03F    	movff	plusw1,btemp+10
  4822  011136  0EFD               	movlw	-3
  4823  011138  006F FF8C  F040    	movff	plusw1,btemp+11
  4824  01113E  0EF6               	movlw	-10
  4825  011140  50E3               	movf	plusw1,w,c
  4826  011142  263F               	addwf	(btemp+10)^0,f,c
  4827  011144  0EF7               	movlw	-9
  4828  011146  50E3               	movf	plusw1,w,c
  4829  011148  2240               	addwfc	(btemp+11)^0,f,c
  4830  01114A  0EFE               	movlw	254
  4831  01114C  243F               	addwf	(btemp+10)^0,w,c
  4832  01114E  6ED9               	movwf	fsr2l,c
  4833  011150  0EFF               	movlw	255
  4834  011152  2040               	addwfc	(btemp+11)^0,w,c
  4835  011154  6EDA               	movwf	fsr2h,c
  4836  011156  0EF8               	movlw	-8
  4837  011158  006F FF8F FFDF     	movff	plusw1,indf2
  4838                           
  4839                           ;stkvar	_c @ sp[(-4)+-4]
  4840                           ;stkvar	_n @ sp[(-4)+-6]
  4841                           ;stkvar	_s @ sp[(-4)+0]
  4842  01115E  0EFC               	movlw	-4
  4843  011160  006F FF8C  F03F    	movff	plusw1,btemp+10
  4844  011166  0EFD               	movlw	-3
  4845  011168  006F FF8C  F040    	movff	plusw1,btemp+11
  4846  01116E  0EF6               	movlw	-10
  4847  011170  50E3               	movf	plusw1,w,c
  4848  011172  263F               	addwf	(btemp+10)^0,f,c
  4849  011174  0EF7               	movlw	-9
  4850  011176  50E3               	movf	plusw1,w,c
  4851  011178  2240               	addwfc	(btemp+11)^0,f,c
  4852  01117A  0EFD               	movlw	253
  4853  01117C  243F               	addwf	(btemp+10)^0,w,c
  4854  01117E  6ED9               	movwf	fsr2l,c
  4855  011180  0EFF               	movlw	255
  4856  011182  2040               	addwfc	(btemp+11)^0,w,c
  4857  011184  6EDA               	movwf	fsr2h,c
  4858  011186  0EF8               	movlw	-8
  4859  011188  006F FF8F FFDF     	movff	plusw1,indf2
  4860                           
  4861                           ;stkvar	_n @ sp[(-4)+-6]
  4862  01118E  0EF7               	movlw	-9
  4863  011190  50E3               	movf	plusw1,w,c
  4864  011192  E108               	bnz	l6085
  4865  011194  0EF6               	movlw	-10
  4866  011196  006F FF8C  F035    	movff	plusw1,btemp
  4867  01119C  0E07               	movlw	7
  4868  01119E  5E35               	subwf	btemp^0,f,c
  4869  0111A0  A0D8               	btfss	status,0,c
  4870  0111A2  D0C6               	goto	u4140
  4871  0111A4                     l6085:
  4872                           
  4873                           ;stkvar	_c @ sp[(-4)+-4]
  4874                           ;stkvar	_s @ sp[(-4)+0]
  4875  0111A4  0EFC               	movlw	-4
  4876  0111A6  006F FF8C  F03F    	movff	plusw1,btemp+10
  4877  0111AC  0EFD               	movlw	-3
  4878  0111AE  006F FF8C  F040    	movff	plusw1,btemp+11
  4879  0111B4  0E03               	movlw	3
  4880  0111B6  243F               	addwf	(btemp+10)^0,w,c
  4881  0111B8  6ED9               	movwf	fsr2l,c
  4882  0111BA  0E00               	movlw	0
  4883  0111BC  2040               	addwfc	(btemp+11)^0,w,c
  4884  0111BE  6EDA               	movwf	fsr2h,c
  4885  0111C0  0EF8               	movlw	-8
  4886  0111C2  006F FF8F FFDF     	movff	plusw1,indf2
  4887                           
  4888                           ;stkvar	_c @ sp[(-4)+-4]
  4889                           ;stkvar	_n @ sp[(-4)+-6]
  4890                           ;stkvar	_s @ sp[(-4)+0]
  4891  0111C8  0EFC               	movlw	-4
  4892  0111CA  006F FF8C  F03F    	movff	plusw1,btemp+10
  4893  0111D0  0EFD               	movlw	-3
  4894  0111D2  006F FF8C  F040    	movff	plusw1,btemp+11
  4895  0111D8  0EF6               	movlw	-10
  4896  0111DA  50E3               	movf	plusw1,w,c
  4897  0111DC  263F               	addwf	(btemp+10)^0,f,c
  4898  0111DE  0EF7               	movlw	-9
  4899  0111E0  50E3               	movf	plusw1,w,c
  4900  0111E2  2240               	addwfc	(btemp+11)^0,f,c
  4901  0111E4  0EFC               	movlw	252
  4902  0111E6  243F               	addwf	(btemp+10)^0,w,c
  4903  0111E8  6ED9               	movwf	fsr2l,c
  4904  0111EA  0EFF               	movlw	255
  4905  0111EC  2040               	addwfc	(btemp+11)^0,w,c
  4906  0111EE  6EDA               	movwf	fsr2h,c
  4907  0111F0  0EF8               	movlw	-8
  4908  0111F2  006F FF8F FFDF     	movff	plusw1,indf2
  4909                           
  4910                           ;stkvar	_n @ sp[(-4)+-6]
  4911  0111F8  0EF7               	movlw	-9
  4912  0111FA  50E3               	movf	plusw1,w,c
  4913  0111FC  E108               	bnz	l6091
  4914  0111FE  0EF6               	movlw	-10
  4915  011200  006F FF8C  F035    	movff	plusw1,btemp
  4916  011206  0E09               	movlw	9
  4917  011208  5E35               	subwf	btemp^0,f,c
  4918  01120A  A0D8               	btfss	status,0,c
  4919  01120C  D091               	goto	u4140
  4920  01120E                     l6091:
  4921                           
  4922                           ;stkvar	_s @ sp[(-4)+0]
  4923  01120E  0EFC               	movlw	-4
  4924  011210  006F FF8C  F03F    	movff	plusw1,btemp+10
  4925  011216  1E3F               	comf	(btemp+10)^0,f,c
  4926  011218  0EFD               	movlw	-3
  4927  01121A  006F FF8C  F040    	movff	plusw1,btemp+11
  4928  011220  1E40               	comf	(btemp+11)^0,f,c
  4929  011222  2A3F               	incf	(btemp+10)^0,f,c
  4930  011224  B4D8               	btfsc	status,2,c
  4931  011226  2A40               	incf	(btemp+11)^0,f,c
  4932  011228  0E03               	movlw	3
  4933  01122A  163F               	andwf	(btemp+10)^0,f,c
  4934  01122C  0E00               	movlw	0
  4935  01122E  1640               	andwf	(btemp+11)^0,f,c
  4936                           
  4937                           ;stkvar	_k @ sp[(-4)+2]
  4938  011230  0EFE               	movlw	-2
  4939  011232  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  4940  011238  0EFF               	movlw	-1
  4941  01123A  0060  F103  FFE3   	movff	btemp+11,plusw1
  4942                           
  4943                           ;stkvar	_k @ sp[(-4)+2]
  4944                           ;stkvar	_s @ sp[(-4)+0]
  4945  011240  0EFC               	movlw	-4
  4946  011242  50E3               	movf	plusw1,w,c
  4947  011244  6E35               	movwf	btemp^0,c
  4948  011246  0EFE               	movlw	-2
  4949  011248  50E3               	movf	plusw1,w,c
  4950  01124A  2635               	addwf	btemp^0,f,c
  4951  01124C  0EFC               	movlw	-4
  4952  01124E  0060  F0D7  FFE3   	movff	btemp,plusw1
  4953  011254  0EFD               	movlw	-3
  4954  011256  50E3               	movf	plusw1,w,c
  4955  011258  6E35               	movwf	btemp^0,c
  4956  01125A  0EFF               	movlw	-1
  4957  01125C  50E3               	movf	plusw1,w,c
  4958  01125E  2235               	addwfc	btemp^0,f,c
  4959  011260  0EFD               	movlw	-3
  4960  011262  0060  F0D7  FFE3   	movff	btemp,plusw1
  4961                           
  4962                           ;stkvar	_k @ sp[(-4)+2]
  4963                           ;stkvar	_n @ sp[(-4)+-6]
  4964  011268  0EF6               	movlw	-10
  4965  01126A  50E3               	movf	plusw1,w,c
  4966  01126C  6E35               	movwf	btemp^0,c
  4967  01126E  0EFE               	movlw	-2
  4968  011270  50E3               	movf	plusw1,w,c
  4969  011272  5E35               	subwf	btemp^0,f,c
  4970  011274  0EF6               	movlw	-10
  4971  011276  0060  F0D7  FFE3   	movff	btemp,plusw1
  4972  01127C  0EF7               	movlw	-9
  4973  01127E  50E3               	movf	plusw1,w,c
  4974  011280  6E35               	movwf	btemp^0,c
  4975  011282  0EFF               	movlw	-1
  4976  011284  50E3               	movf	plusw1,w,c
  4977  011286  5A35               	subwfb	btemp^0,f,c
  4978  011288  0EF7               	movlw	-9
  4979  01128A  0060  F0D7  FFE3   	movff	btemp,plusw1
  4980  011290  0EFC               	movlw	252
  4981  011292  6E3F               	movwf	(btemp+10)^0,c
  4982  011294  0EFF               	movlw	255
  4983  011296  6E40               	movwf	(btemp+11)^0,c
  4984                           
  4985                           ;stkvar	_n @ sp[(-4)+-6]
  4986  011298  0EF6               	movlw	-10
  4987  01129A  006F FF8C  F035    	movff	plusw1,btemp
  4988  0112A0  503F               	movf	(btemp+10)^0,w,c
  4989  0112A2  1635               	andwf	btemp^0,f,c
  4990  0112A4  0EF6               	movlw	-10
  4991  0112A6  0060  F0D7  FFE3   	movff	btemp,plusw1
  4992  0112AC  0EF7               	movlw	-9
  4993  0112AE  006F FF8C  F035    	movff	plusw1,btemp
  4994  0112B4  5040               	movf	(btemp+11)^0,w,c
  4995  0112B6  1635               	andwf	btemp^0,f,c
  4996  0112B8  0EF7               	movlw	-9
  4997  0112BA  D02E               	goto	L1
  4998  0112BC                     l6099:
  4999                           
  5000                           ;stkvar	_c @ sp[(-4)+-4]
  5001                           ;stkvar	_s @ sp[(-4)+0]
  5002  0112BC  0EFC               	movlw	-4
  5003  0112BE  006F FF8F FFD9     	movff	plusw1,fsr2l
  5004  0112C4  0EFD               	movlw	-3
  5005  0112C6  006F FF8F FFDA     	movff	plusw1,fsr2h
  5006  0112CC  0EF8               	movlw	-8
  5007  0112CE  006F FF8F FFDF     	movff	plusw1,indf2
  5008                           
  5009                           ;stkvar	_n @ sp[(-4)+-6]
  5010  0112D4  0EF6               	movlw	-10
  5011  0112D6  006F FF8C  F035    	movff	plusw1,btemp
  5012  0112DC  0E01               	movlw	1
  5013  0112DE  5E35               	subwf	btemp^0,f,c
  5014  0112E0  0EF6               	movlw	-10
  5015  0112E2  0060  F0D7  FFE3   	movff	btemp,plusw1
  5016  0112E8  0EF7               	movlw	-9
  5017  0112EA  006F FF8C  F035    	movff	plusw1,btemp
  5018  0112F0  0E00               	movlw	0
  5019  0112F2  5A35               	subwfb	btemp^0,f,c
  5020  0112F4  0EF7               	movlw	-9
  5021  0112F6  0060  F0D7  FFE3   	movff	btemp,plusw1
  5022                           
  5023                           ;stkvar	_s @ sp[(-4)+0]
  5024  0112FC  0EFC               	movlw	-4
  5025  0112FE  50E3               	movf	plusw1,w,c
  5026  011300  0F01               	addlw	1
  5027  011302  6E35               	movwf	btemp^0,c
  5028  011304  0EFC               	movlw	-4
  5029  011306  0060  F0D7  FFE3   	movff	btemp,plusw1
  5030  01130C  6A35               	clrf	btemp^0,c
  5031  01130E  0EFD               	movlw	-3
  5032  011310  50E3               	movf	plusw1,w,c
  5033  011312  2035               	addwfc	btemp^0,w,c
  5034  011314  6E35               	movwf	btemp^0,c
  5035  011316  0EFD               	movlw	-3
  5036  011318                     L1:
  5037  011318  0060  F0D7  FFE3   	movff	btemp,plusw1
  5038                           
  5039                           ;stkvar	_n @ sp[(-4)+-6]
  5040  01131E  0EF6               	movlw	-10
  5041  011320  006F FF8C  F035    	movff	plusw1,btemp
  5042  011326  0EF7               	movlw	-9
  5043  011328  50E3               	movf	plusw1,w,c
  5044  01132A  1035               	iorwf	btemp^0,w,c
  5045  01132C  A4D8               	btfss	status,2,c
  5046  01132E  D7C6               	goto	l6099
  5047  011330                     u4140:
  5048                           
  5049                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  5050  011330  0EF6               	movlw	246
  5051  011332  26E1               	addwf	fsr1l,f,c
  5052  011334  0EFF               	movlw	255
  5053  011336  22E2               	addwfc	fsr1h,f,c
  5054  011338  0012               	return		;funcret
  5055  01133A                     __end_of_memset:
  5056                           	opt callstack 0
  5057                           
  5058 ;; *************** function _printf *****************
  5059 ;; Defined at:
  5060 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  5061 ;; Parameters:    Size  Location     Type
  5062 ;;  fmt             2  [STACK] PTR const unsigned char 
  5063 ;;		 -> STR_12(3), STR_11(3), STR_10(3), 
  5064 ;; Auto vars:     Size  Location     Type
  5065 ;;  ap              2  [STACK] PTR void [1]
  5066 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5067 ;;  ret             2    0        int 
  5068 ;; Return value:  Size  Location     Type
  5069 ;;                  2  [STACK] int 
  5070 ;; Registers used:
  5071 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  5072 ;; Tracked objects:
  5073 ;;		On entry : 3F/3B
  5074 ;;		On exit  : 0/0
  5075 ;;		Unchanged: 0/0
  5076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5081 ;;Total ram usage:        0 bytes
  5082 ;; Hardware stack levels used:    1
  5083 ;; Hardware stack levels required when called:   14
  5084 ;; This function calls:
  5085 ;;		_vfprintf
  5086 ;; This function is called by:
  5087 ;;		_eaDogM_WriteString
  5088 ;;		_send_lcd_cmd_dma
  5089 ;; This function uses a reentrant model
  5090 ;;
  5091                           
  5092                           	psect	text27
  5093  012CE2                     __ptext27:
  5094                           	opt callstack 0
  5095  012CE2                     _printf:
  5096                           	opt callstack 0
  5097                           
  5098                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5099  012CE2  52E6               	movf	postinc1,f,c
  5100  012CE4  52E6               	movf	postinc1,f,c
  5101                           
  5102                           ;stkvar	?_printf @ sp[(-2)+-3]
  5103                           
  5104                           ;incstack = 0
  5105  012CE6  0EFB               	movlw	251
  5106  012CE8  24E1               	addwf	fsr1l,w,c
  5107  012CEA  6E3F               	movwf	(btemp+10)^0,c
  5108  012CEC  0EFF               	movlw	255
  5109  012CEE  20E2               	addwfc	fsr1h,w,c
  5110  012CF0  6E40               	movwf	(btemp+11)^0,c
  5111                           
  5112                           ;stkvar	_ap @ sp[(-2)+0]
  5113  012CF2  0EFF               	movlw	-1
  5114  012CF4  0060  F103  FFE3   	movff	btemp+11,plusw1
  5115  012CFA  0EFE               	movlw	-2
  5116  012CFC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  5117                           
  5118                           ;stkvar	_ap @ sp[(-2)+0]
  5119  012D02  0EFE               	movlw	254
  5120  012D04  24E1               	addwf	fsr1l,w,c
  5121  012D06  6E35               	movwf	btemp^0,c
  5122  012D08  0EFF               	movlw	255
  5123  012D0A  20E2               	addwfc	fsr1h,w,c
  5124  012D0C  6E36               	movwf	(btemp+1)^0,c
  5125  012D0E  0060  F0D7  FFE6   	movff	btemp,postinc1
  5126  012D14  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  5127                           
  5128                           ;stkvar	_fmt @ sp[(-4)+-3]
  5129  012D1A  0EF9               	movlw	-7
  5130  012D1C  006F FF8F FFE6     	movff	plusw1,postinc1
  5131  012D22  006F FF8F FFE6     	movff	plusw1,postinc1
  5132  012D28  0E00               	movlw	0
  5133  012D2A  6EE6               	movwf	postinc1,c
  5134  012D2C  0E00               	movlw	0
  5135  012D2E  6EE6               	movwf	postinc1,c
  5136  012D30  ECA4  F092         	call	_vfprintf	;wreg free
  5137                           
  5138                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  5139  012D34  52E5               	movf	postdec1,f,c
  5140  012D36  52E5               	movf	postdec1,f,c
  5141  012D38  52E5               	movf	postdec1,f,c
  5142  012D3A  50E7               	movf	indf1,w,c
  5143  012D3C  5EE1               	subwf	fsr1l,f,c
  5144  012D3E  0E00               	movlw	0
  5145  012D40  5AE2               	subwfb	fsr1h,f,c
  5146  012D42  0012               	return		;funcret
  5147  012D44                     __end_of_printf:
  5148                           	opt callstack 0
  5149                           
  5150 ;; *************** function _vfprintf *****************
  5151 ;; Defined at:
  5152 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  5153 ;; Parameters:    Size  Location     Type
  5154 ;;  fp              2  [STACK] PTR struct _IO_FILE
  5155 ;;		 -> f(6), NULL(0), 
  5156 ;;  fmt             2  [STACK] PTR const unsigned char 
  5157 ;;		 -> STR_30(3), STR_29(3), STR_28(19), STR_27(19), 
  5158 ;;		 -> STR_26(19), STR_25(19), STR_24(19), STR_23(19), 
  5159 ;;		 -> STR_22(24), STR_21(15), STR_20(15), STR_19(15), 
  5160 ;;		 -> STR_18(10), STR_17(10), STR_16(19), STR_15(19), 
  5161 ;;		 -> STR_12(3), STR_11(3), STR_10(3), STR_9(18), 
  5162 ;;		 -> STR_8(17), STR_6(15), STR_5(17), STR_4(17), 
  5163 ;;		 -> STR_2(15), STR_1(17), 
  5164 ;;  ap              2  [STACK] PTR PTR void 
  5165 ;;		 -> ap(2), ap(2), 
  5166 ;; Auto vars:     Size  Location     Type
  5167 ;;  cfmt            2  [STACK] PTR unsigned char 
  5168 ;;		 -> STR_30(3), STR_29(3), STR_28(19), STR_27(19), 
  5169 ;;		 -> STR_26(19), STR_25(19), STR_24(19), STR_23(19), 
  5170 ;;		 -> STR_22(24), STR_21(15), STR_20(15), STR_19(15), 
  5171 ;;		 -> STR_18(10), STR_17(10), STR_16(19), STR_15(19), 
  5172 ;;		 -> STR_12(3), STR_11(3), STR_10(3), STR_9(18), 
  5173 ;;		 -> STR_8(17), STR_6(15), STR_5(17), STR_4(17), 
  5174 ;;		 -> STR_2(15), STR_1(17), 
  5175 ;; Return value:  Size  Location     Type
  5176 ;;                  2  [STACK] int 
  5177 ;; Registers used:
  5178 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  5179 ;; Tracked objects:
  5180 ;;		On entry : 0/3
  5181 ;;		On exit  : 0/0
  5182 ;;		Unchanged: 0/0
  5183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5188 ;;Total ram usage:        0 bytes
  5189 ;; Hardware stack levels used:    1
  5190 ;; Hardware stack levels required when called:   13
  5191 ;; This function calls:
  5192 ;;		_vfpfcnvrt
  5193 ;; This function is called by:
  5194 ;;		_sprintf
  5195 ;;		_printf
  5196 ;; This function uses a reentrant model
  5197 ;;
  5198                           
  5199                           	psect	text28
  5200  012548                     __ptext28:
  5201                           	opt callstack 0
  5202  012548                     _vfprintf:
  5203                           	opt callstack 0
  5204                           
  5205                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5206  012548  52E6               	movf	postinc1,f,c
  5207  01254A  52E6               	movf	postinc1,f,c
  5208                           
  5209                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  5210                           ;stkvar	_fmt @ sp[(-2)+-4]
  5211                           
  5212                           ;incstack = 0
  5213  01254C  0EFA               	movlw	-6
  5214  01254E  006F FF8C  F03F    	movff	plusw1,btemp+10
  5215  012554  0EFB               	movlw	-5
  5216  012556  006F FF8C  F040    	movff	plusw1,btemp+11
  5217                           
  5218                           ;stkvar	_cfmt @ sp[(-2)+0]
  5219  01255C  0EFF               	movlw	-1
  5220  01255E  0060  F103  FFE3   	movff	btemp+11,plusw1
  5221  012564  0EFE               	movlw	-2
  5222  012566  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  5223                           
  5224                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  5225  01256C  6A1C               	clrf	_nout^0,c
  5226  01256E  6A1D               	clrf	(_nout+1)^0,c
  5227                           
  5228                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  5229  012570  D020               	goto	l6113
  5230  012572                     l6111:
  5231                           
  5232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  5233                           ;stkvar	_ap @ sp[(-2)+-6]
  5234  012572  0EF8               	movlw	-8
  5235  012574  006F FF8F FFE6     	movff	plusw1,postinc1
  5236  01257A  006F FF8F FFE6     	movff	plusw1,postinc1
  5237                           
  5238                           ;stkvar	_cfmt @ sp[(-4)+0]
  5239  012580  0EFC               	movlw	252
  5240  012582  24E1               	addwf	fsr1l,w,c
  5241  012584  6E35               	movwf	btemp^0,c
  5242  012586  0EFF               	movlw	255
  5243  012588  20E2               	addwfc	fsr1h,w,c
  5244  01258A  6E36               	movwf	(btemp+1)^0,c
  5245  01258C  0060  F0D7  FFE6   	movff	btemp,postinc1
  5246  012592  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  5247                           
  5248                           ;stkvar	_fp @ sp[(-6)+-2]
  5249  012598  0EF8               	movlw	-8
  5250  01259A  006F FF8F FFE6     	movff	plusw1,postinc1
  5251  0125A0  006F FF8F FFE6     	movff	plusw1,postinc1
  5252  0125A6  EC00  F080         	call	_vfpfcnvrt	;wreg free
  5253  0125AA  5035               	movf	btemp^0,w,c
  5254  0125AC  261C               	addwf	_nout^0,f,c
  5255  0125AE  5036               	movf	(btemp+1)^0,w,c
  5256  0125B0  221D               	addwfc	(_nout+1)^0,f,c
  5257  0125B2                     l6113:
  5258                           
  5259                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  5260                           ;stkvar	_cfmt @ sp[(-2)+0]
  5261  0125B2  50E1               	movf	fsr1l,w,c
  5262  0125B4  0FFE               	addlw	-2
  5263  0125B6  6ED9               	movwf	fsr2l,c
  5264  0125B8  50E2               	movf	fsr1h,w,c
  5265  0125BA  6EDA               	movwf	fsr2h,c
  5266  0125BC  0EFF               	movlw	255
  5267  0125BE  22DA               	addwfc	fsr2h,f,c
  5268  0125C0  006F FF7B FFF6     	movff	postinc2,tblptrl
  5269  0125C6  006F FF77 FFF7     	movff	postdec2,tblptrh
  5270  0125CC                     	if	0	;tblptru may be non-zero
  5271  0125CC                     	endif
  5272  0125CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5273  0125CC  0E00               	movlw	low (__mediumconst shr (0+16))
  5274  0125CE  6EF8               	movwf	tblptru,c
  5275  0125D0                     	endif
  5276  0125D0  0008               	tblrd		*
  5277  0125D2  50F5               	movf	tablat,w,c
  5278  0125D4  0900               	iorlw	0
  5279  0125D6  A4D8               	btfss	status,2,c
  5280  0125D8  D7CC               	goto	l6111
  5281                           
  5282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  5283  0125DA  0060  F070  F035   	movff	_nout,btemp
  5284  0125E0  0060  F074  F036   	movff	_nout+1,btemp+1
  5285                           
  5286                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  5287  0125E6  0EF8               	movlw	248
  5288  0125E8  26E1               	addwf	fsr1l,f,c
  5289  0125EA  0EFF               	movlw	255
  5290  0125EC  22E2               	addwfc	fsr1h,f,c
  5291  0125EE  0012               	return		;funcret
  5292  0125F0                     __end_of_vfprintf:
  5293                           	opt callstack 0
  5294                           
  5295 ;; *************** function _vfpfcnvrt *****************
  5296 ;; Defined at:
  5297 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  5298 ;; Parameters:    Size  Location     Type
  5299 ;;  fp              2  [STACK] PTR struct _IO_FILE
  5300 ;;		 -> f(6), NULL(0), 
  5301 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  5302 ;;		 -> cfmt(2), 
  5303 ;;  ap              2  [STACK] PTR PTR void 
  5304 ;;		 -> ap(2), ap(2), 
  5305 ;; Auto vars:     Size  Location     Type
  5306 ;;  llu             8  [STACK] unsigned long long 
  5307 ;;  ll              8  [STACK] long long 
  5308 ;;  f               4    0        long long 
  5309 ;;  vp              3    0        PTR void 
  5310 ;;  ct              3    0        unsigned char [3]
  5311 ;;  cp              2  [STACK] PTR unsigned char 
  5312 ;;		 -> ?_printf(2), ?_sprintf(2), STR_14(9), STR_13(12), 
  5313 ;;		 -> D.lcd(216), D(218), T(144), STR_7(4), 
  5314 ;;		 -> STR_3(4), V(189), 
  5315 ;;  i               2    0        int 
  5316 ;;  done            2    0        int 
  5317 ;;  c               1  [STACK] unsigned char 
  5318 ;; Return value:  Size  Location     Type
  5319 ;;                  2  [STACK] int 
  5320 ;; Registers used:
  5321 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  5322 ;; Tracked objects:
  5323 ;;		On entry : 0/3
  5324 ;;		On exit  : 0/0
  5325 ;;		Unchanged: 0/0
  5326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5331 ;;Total ram usage:        0 bytes
  5332 ;; Hardware stack levels used:    1
  5333 ;; Hardware stack levels required when called:   12
  5334 ;; This function calls:
  5335 ;;		_ctoa
  5336 ;;		_dtoa
  5337 ;;		_fputc
  5338 ;;		_stoa
  5339 ;;		_xtoa
  5340 ;; This function is called by:
  5341 ;;		_vfprintf
  5342 ;; This function uses a reentrant model
  5343 ;;
  5344                           
  5345                           	psect	text29
  5346  010000                     __ptext29:
  5347                           	opt callstack 0
  5348  010000                     _vfpfcnvrt:
  5349                           	opt callstack 0
  5350                           
  5351                           ; autosize = 19, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  5352  010000  0E13               	movlw	19
  5353  010002  26E1               	addwf	fsr1l,f,c
  5354  010004  0E00               	movlw	0
  5355  010006  22E2               	addwfc	fsr1h,f,c
  5356                           
  5357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  5358                           ;stkvar	_fmt @ sp[(-19)+-4]
  5359                           
  5360                           ;incstack = 0
  5361  010008  0EE9               	movlw	-23
  5362  01000A  006F FF8F FFD9     	movff	plusw1,fsr2l
  5363  010010  0EEA               	movlw	-22
  5364  010012  006F FF8F FFDA     	movff	plusw1,fsr2h
  5365  010018  006F FF7B FFF6     	movff	postinc2,tblptrl
  5366  01001E  006F FF77 FFF7     	movff	postdec2,tblptrh
  5367  010024                     	if	0	;tblptru may be non-zero
  5368  010024                     	endif
  5369  010024                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5370  010024  0E00               	movlw	low (__mediumconst shr (0+16))
  5371  010026  6EF8               	movwf	tblptru,c
  5372  010028                     	endif
  5373  010028  0008               	tblrd		*
  5374  01002A  50F5               	movf	tablat,w,c
  5375  01002C  0A25               	xorlw	37
  5376  01002E  A4D8               	btfss	status,2,c
  5377  010030  D24F               	goto	l6057
  5378                           
  5379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  5380                           ;stkvar	_fmt @ sp[(-19)+-4]
  5381  010032  0EE9               	movlw	-23
  5382  010034  006F FF8F FFD9     	movff	plusw1,fsr2l
  5383  01003A  0EEA               	movlw	-22
  5384  01003C  006F FF8F FFDA     	movff	plusw1,fsr2h
  5385  010042  2ADE               	incf	postinc2,f,c
  5386  010044  0E00               	movlw	0
  5387  010046  22DD               	addwfc	postdec2,f,c
  5388                           
  5389                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  5390  010048  6A1E               	clrf	_width^0,c
  5391  01004A  6A1F               	clrf	(_width+1)^0,c
  5392  01004C  6A22               	clrf	_flags^0,c
  5393  01004E  6A23               	clrf	(_flags+1)^0,c
  5394                           
  5395                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  5396  010050  6820               	setf	_prec^0,c
  5397  010052  6821               	setf	(_prec+1)^0,c
  5398                           
  5399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  5400                           ;stkvar	_fmt @ sp[(-19)+-4]
  5401  010054  0EE9               	movlw	-23
  5402  010056  006F FF8F FFD9     	movff	plusw1,fsr2l
  5403  01005C  0EEA               	movlw	-22
  5404  01005E  006F FF8F FFDA     	movff	plusw1,fsr2h
  5405  010064  006F FF7B FFF6     	movff	postinc2,tblptrl
  5406  01006A  006F FF77 FFF7     	movff	postdec2,tblptrh
  5407  010070                     	if	0	;tblptru may be non-zero
  5408  010070                     	endif
  5409  010070                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5410  010070  0E00               	movlw	low (__mediumconst shr (0+16))
  5411  010072  6EF8               	movwf	tblptru,c
  5412  010074                     	endif
  5413  010074  0008               	tblrd		*
  5414  010076  50F5               	movf	tablat,w,c
  5415  010078  0A63               	xorlw	99
  5416  01007A  A4D8               	btfss	status,2,c
  5417  01007C  D036               	goto	l6005
  5418                           
  5419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  5420                           ;stkvar	_fmt @ sp[(-19)+-4]
  5421  01007E  0EE9               	movlw	-23
  5422  010080  006F FF8F FFD9     	movff	plusw1,fsr2l
  5423  010086  0EEA               	movlw	-22
  5424  010088  006F FF8F FFDA     	movff	plusw1,fsr2h
  5425  01008E  2ADE               	incf	postinc2,f,c
  5426  010090  0E00               	movlw	0
  5427  010092  22DD               	addwfc	postdec2,f,c
  5428                           
  5429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5430                           ;stkvar	_ap @ sp[(-19)+-6]
  5431  010094  0EE7               	movlw	-25
  5432  010096  006F FF8F FFD9     	movff	plusw1,fsr2l
  5433  01009C  0EE8               	movlw	-24
  5434  01009E  006F FF8F FFDA     	movff	plusw1,fsr2h
  5435  0100A4  0E02               	movlw	2
  5436  0100A6  5EDE               	subwf	postinc2,f,c
  5437  0100A8  0E00               	movlw	0
  5438  0100AA  5ADD               	subwfb	postdec2,f,c
  5439  0100AC  006F FF78  F03F    	movff	postinc2,btemp+10
  5440  0100B2  006F FF74  F040    	movff	postdec2,btemp+11
  5441  0100B8  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  5442  0100BE  0060  F103  FFDA   	movff	btemp+11,fsr2h
  5443  0100C4  50DF               	movf	indf2,w,c
  5444  0100C6  6E40               	movwf	(btemp+11)^0,c
  5445                           
  5446                           ;stkvar	_c @ sp[(-19)+18]
  5447  0100C8  0EFF               	movlw	-1
  5448  0100CA  0060  F103  FFE3   	movff	btemp+11,plusw1
  5449                           
  5450                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  5451                           ;stkvar	_c @ sp[(-19)+18]
  5452  0100D0  0EFF               	movlw	-1
  5453  0100D2  50E3               	movf	plusw1,w,c
  5454  0100D4  6EE6               	movwf	postinc1,c
  5455                           
  5456                           ;stkvar	_fp @ sp[(-20)+-2]
  5457  0100D6  0EEA               	movlw	-22
  5458  0100D8  006F FF8F FFE6     	movff	plusw1,postinc1
  5459  0100DE  006F FF8F FFE6     	movff	plusw1,postinc1
  5460  0100E4  ECBA  F094         	call	_ctoa	;wreg free
  5461  0100E8  D21D               	goto	l1783
  5462  0100EA                     l6005:
  5463                           
  5464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  5465                           ;stkvar	_fmt @ sp[(-19)+-4]
  5466  0100EA  0EE9               	movlw	-23
  5467  0100EC  006F FF8F FFD9     	movff	plusw1,fsr2l
  5468  0100F2  0EEA               	movlw	-22
  5469  0100F4  006F FF8F FFDA     	movff	plusw1,fsr2h
  5470  0100FA  006F FF7B FFF6     	movff	postinc2,tblptrl
  5471  010100  006F FF77 FFF7     	movff	postdec2,tblptrh
  5472  010106                     	if	0	;tblptru may be non-zero
  5473  010106                     	endif
  5474  010106                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5475  010106  0E00               	movlw	low (__mediumconst shr (0+16))
  5476  010108  6EF8               	movwf	tblptru,c
  5477  01010A                     	endif
  5478  01010A  0008               	tblrd		*
  5479  01010C  50F5               	movf	tablat,w,c
  5480  01010E  0A64               	xorlw	100
  5481  010110  B4D8               	btfsc	status,2,c
  5482  010112  D015               	goto	u4050
  5483                           
  5484                           ;stkvar	_fmt @ sp[(-19)+-4]
  5485  010114  0EE9               	movlw	-23
  5486  010116  006F FF8F FFD9     	movff	plusw1,fsr2l
  5487  01011C  0EEA               	movlw	-22
  5488  01011E  006F FF8F FFDA     	movff	plusw1,fsr2h
  5489  010124  006F FF7B FFF6     	movff	postinc2,tblptrl
  5490  01012A  006F FF77 FFF7     	movff	postdec2,tblptrh
  5491  010130                     	if	0	;tblptru may be non-zero
  5492  010130                     	endif
  5493  010130                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5494  010130  0E00               	movlw	low (__mediumconst shr (0+16))
  5495  010132  6EF8               	movwf	tblptru,c
  5496  010134                     	endif
  5497  010134  0008               	tblrd		*
  5498  010136  50F5               	movf	tablat,w,c
  5499  010138  0A69               	xorlw	105
  5500  01013A  A4D8               	btfss	status,2,c
  5501  01013C  D075               	goto	l6017
  5502  01013E                     u4050:
  5503                           
  5504                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  5505                           ;stkvar	_fmt @ sp[(-19)+-4]
  5506  01013E  0EE9               	movlw	-23
  5507  010140  006F FF8F FFD9     	movff	plusw1,fsr2l
  5508  010146  0EEA               	movlw	-22
  5509  010148  006F FF8F FFDA     	movff	plusw1,fsr2h
  5510  01014E  2ADE               	incf	postinc2,f,c
  5511  010150  0E00               	movlw	0
  5512  010152  22DD               	addwfc	postdec2,f,c
  5513                           
  5514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  5515                           ;stkvar	_ap @ sp[(-19)+-6]
  5516  010154  0EE7               	movlw	-25
  5517  010156  006F FF8F FFD9     	movff	plusw1,fsr2l
  5518  01015C  0EE8               	movlw	-24
  5519  01015E  006F FF8F FFDA     	movff	plusw1,fsr2h
  5520  010164  0E02               	movlw	2
  5521  010166  5EDE               	subwf	postinc2,f,c
  5522  010168  0E00               	movlw	0
  5523  01016A  5ADD               	subwfb	postdec2,f,c
  5524  01016C  006F FF78  F03F    	movff	postinc2,btemp+10
  5525  010172  006F FF74  F040    	movff	postdec2,btemp+11
  5526  010178  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  5527  01017E  0060  F103  FFDA   	movff	btemp+11,fsr2h
  5528  010184  006F FF78  F03F    	movff	postinc2,btemp+10
  5529  01018A  006F FF74  F040    	movff	postdec2,btemp+11
  5530                           
  5531                           ;stkvar	_ll @ sp[(-19)+8]
  5532  010190  0EF5               	movlw	-11
  5533  010192  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  5534  010198  0EF6               	movlw	-10
  5535  01019A  0060  F103  FFE3   	movff	btemp+11,plusw1
  5536  0101A0  6A35               	clrf	btemp^0,c
  5537  0101A2  BEE3               	btfsc	plusw1,7,c
  5538  0101A4  6835               	setf	btemp^0,c
  5539  0101A6  0EF7               	movlw	-9
  5540  0101A8  0060  F0D7  FFE3   	movff	btemp,plusw1
  5541  0101AE  0EF8               	movlw	-8
  5542  0101B0  0060  F0D7  FFE3   	movff	btemp,plusw1
  5543  0101B6  0EF9               	movlw	-7
  5544  0101B8  0060  F0D7  FFE3   	movff	btemp,plusw1
  5545  0101BE  0EFA               	movlw	-6
  5546  0101C0  0060  F0D7  FFE3   	movff	btemp,plusw1
  5547  0101C6  0EFB               	movlw	-5
  5548  0101C8  0060  F0D7  FFE3   	movff	btemp,plusw1
  5549  0101CE  0EFC               	movlw	-4
  5550  0101D0  0060  F0D7  FFE3   	movff	btemp,plusw1
  5551                           
  5552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  5553                           ;stkvar	_ll @ sp[(-19)+8]
  5554  0101D6  50E1               	movf	fsr1l,w,c
  5555  0101D8  0FF5               	addlw	-11
  5556  0101DA  6ED9               	movwf	fsr2l,c
  5557  0101DC  50E2               	movf	fsr1h,w,c
  5558  0101DE  6EDA               	movwf	fsr2h,c
  5559  0101E0  0EFF               	movlw	255
  5560  0101E2  22DA               	addwfc	fsr2h,f,c
  5561  0101E4  006F FF7B FFE6     	movff	postinc2,postinc1
  5562  0101EA  006F FF7B FFE6     	movff	postinc2,postinc1
  5563  0101F0  006F FF7B FFE6     	movff	postinc2,postinc1
  5564  0101F6  006F FF7B FFE6     	movff	postinc2,postinc1
  5565  0101FC  006F FF7B FFE6     	movff	postinc2,postinc1
  5566  010202  006F FF7B FFE6     	movff	postinc2,postinc1
  5567  010208  006F FF7B FFE6     	movff	postinc2,postinc1
  5568  01020E  006F FF7B FFE6     	movff	postinc2,postinc1
  5569                           
  5570                           ;stkvar	_fp @ sp[(-27)+-2]
  5571  010214  0EE3               	movlw	-29
  5572  010216  006F FF8F FFE6     	movff	plusw1,postinc1
  5573  01021C  006F FF8F FFE6     	movff	plusw1,postinc1
  5574  010222  EC97  F082         	call	_dtoa	;wreg free
  5575  010226  D17E               	goto	l1783
  5576  010228                     l6017:
  5577                           
  5578                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  5579                           ;stkvar	_fmt @ sp[(-19)+-4]
  5580  010228  0EE9               	movlw	-23
  5581  01022A  006F FF8F FFD9     	movff	plusw1,fsr2l
  5582  010230  0EEA               	movlw	-22
  5583  010232  006F FF8F FFDA     	movff	plusw1,fsr2h
  5584  010238  006F FF7B FFF6     	movff	postinc2,tblptrl
  5585  01023E  006F FF77 FFF7     	movff	postdec2,tblptrh
  5586  010244                     	if	0	;tblptru may be non-zero
  5587  010244                     	endif
  5588  010244                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5589  010244  0E00               	movlw	low (__mediumconst shr (0+16))
  5590  010246  6EF8               	movwf	tblptru,c
  5591  010248                     	endif
  5592  010248  0008               	tblrd		*
  5593  01024A  50F5               	movf	tablat,w,c
  5594  01024C  0A73               	xorlw	115
  5595  01024E  A4D8               	btfss	status,2,c
  5596  010250  D042               	goto	l6027
  5597                           
  5598                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  5599                           ;stkvar	_fmt @ sp[(-19)+-4]
  5600  010252  0EE9               	movlw	-23
  5601  010254  006F FF8F FFD9     	movff	plusw1,fsr2l
  5602  01025A  0EEA               	movlw	-22
  5603  01025C  006F FF8F FFDA     	movff	plusw1,fsr2h
  5604  010262  2ADE               	incf	postinc2,f,c
  5605  010264  0E00               	movlw	0
  5606  010266  22DD               	addwfc	postdec2,f,c
  5607                           
  5608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  5609                           ;stkvar	_ap @ sp[(-19)+-6]
  5610  010268  0EE7               	movlw	-25
  5611  01026A  006F FF8F FFD9     	movff	plusw1,fsr2l
  5612  010270  0EE8               	movlw	-24
  5613  010272  006F FF8F FFDA     	movff	plusw1,fsr2h
  5614  010278  0E02               	movlw	2
  5615  01027A  5EDE               	subwf	postinc2,f,c
  5616  01027C  0E00               	movlw	0
  5617  01027E  5ADD               	subwfb	postdec2,f,c
  5618  010280  006F FF78  F03F    	movff	postinc2,btemp+10
  5619  010286  006F FF74  F040    	movff	postdec2,btemp+11
  5620  01028C  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  5621  010292  0060  F103  FFDA   	movff	btemp+11,fsr2h
  5622  010298  006F FF78  F03F    	movff	postinc2,btemp+10
  5623  01029E  006F FF74  F040    	movff	postdec2,btemp+11
  5624                           
  5625                           ;stkvar	_cp @ sp[(-19)+16]
  5626  0102A4  0EFE               	movlw	-2
  5627  0102A6  0060  F103  FFE3   	movff	btemp+11,plusw1
  5628  0102AC  0EFD               	movlw	-3
  5629  0102AE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  5630                           
  5631                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  5632                           ;stkvar	_cp @ sp[(-19)+16]
  5633  0102B4  0EFD               	movlw	-3
  5634  0102B6  006F FF8F FFE6     	movff	plusw1,postinc1
  5635  0102BC  006F FF8F FFE6     	movff	plusw1,postinc1
  5636                           
  5637                           ;stkvar	_fp @ sp[(-21)+-2]
  5638  0102C2  0EE9               	movlw	-23
  5639  0102C4  006F FF8F FFE6     	movff	plusw1,postinc1
  5640  0102CA  006F FF8F FFE6     	movff	plusw1,postinc1
  5641  0102D0  EC9D  F089         	call	_stoa	;wreg free
  5642  0102D4  D127               	goto	l1783
  5643  0102D6                     l6027:
  5644                           
  5645                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  5646                           ;stkvar	_fmt @ sp[(-19)+-4]
  5647  0102D6  0EE9               	movlw	-23
  5648  0102D8  006F FF8F FFD9     	movff	plusw1,fsr2l
  5649  0102DE  0EEA               	movlw	-22
  5650  0102E0  006F FF8F FFDA     	movff	plusw1,fsr2h
  5651  0102E6  006F FF7B FFF6     	movff	postinc2,tblptrl
  5652  0102EC  006F FF77 FFF7     	movff	postdec2,tblptrh
  5653  0102F2                     	if	0	;tblptru may be non-zero
  5654  0102F2                     	endif
  5655  0102F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5656  0102F2  0E00               	movlw	low (__mediumconst shr (0+16))
  5657  0102F4  6EF8               	movwf	tblptru,c
  5658  0102F6                     	endif
  5659  0102F6  0008               	tblrd		*
  5660  0102F8  50F5               	movf	tablat,w,c
  5661  0102FA  0A78               	xorlw	120
  5662  0102FC  B4D8               	btfsc	status,2,c
  5663  0102FE  D015               	goto	u4080
  5664                           
  5665                           ;stkvar	_fmt @ sp[(-19)+-4]
  5666  010300  0EE9               	movlw	-23
  5667  010302  006F FF8F FFD9     	movff	plusw1,fsr2l
  5668  010308  0EEA               	movlw	-22
  5669  01030A  006F FF8F FFDA     	movff	plusw1,fsr2h
  5670  010310  006F FF7B FFF6     	movff	postinc2,tblptrl
  5671  010316  006F FF77 FFF7     	movff	postdec2,tblptrh
  5672  01031C                     	if	0	;tblptru may be non-zero
  5673  01031C                     	endif
  5674  01031C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5675  01031C  0E00               	movlw	low (__mediumconst shr (0+16))
  5676  01031E  6EF8               	movwf	tblptru,c
  5677  010320                     	endif
  5678  010320  0008               	tblrd		*
  5679  010322  50F5               	movf	tablat,w,c
  5680  010324  0A58               	xorlw	88
  5681  010326  A4D8               	btfss	status,2,c
  5682  010328  D094               	goto	l6041
  5683  01032A                     u4080:
  5684                           
  5685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  5686                           ;stkvar	_fmt @ sp[(-19)+-4]
  5687  01032A  0EE9               	movlw	-23
  5688  01032C  006F FF8F FFD9     	movff	plusw1,fsr2l
  5689  010332  0EEA               	movlw	-22
  5690  010334  006F FF8F FFDA     	movff	plusw1,fsr2h
  5691  01033A  006F FF7B FFF6     	movff	postinc2,tblptrl
  5692  010340  006F FF77 FFF7     	movff	postdec2,tblptrh
  5693  010346                     	if	0	;tblptru may be non-zero
  5694  010346                     	endif
  5695  010346                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5696  010346  0E00               	movlw	low (__mediumconst shr (0+16))
  5697  010348  6EF8               	movwf	tblptru,c
  5698  01034A                     	endif
  5699                           
  5700                           ;stkvar	_c @ sp[(-19)+18]
  5701  01034A  0008               	tblrd		*
  5702  01034C  0EFF               	movlw	-1
  5703  01034E  006F FFD7 FFE3     	movff	tablat,plusw1
  5704                           
  5705                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  5706                           ;stkvar	_fmt @ sp[(-19)+-4]
  5707  010354  0EE9               	movlw	-23
  5708  010356  006F FF8F FFD9     	movff	plusw1,fsr2l
  5709  01035C  0EEA               	movlw	-22
  5710  01035E  006F FF8F FFDA     	movff	plusw1,fsr2h
  5711  010364  2ADE               	incf	postinc2,f,c
  5712  010366  0E00               	movlw	0
  5713  010368  22DD               	addwfc	postdec2,f,c
  5714                           
  5715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  5716                           ;stkvar	_ap @ sp[(-19)+-6]
  5717  01036A  0EE7               	movlw	-25
  5718  01036C  006F FF8F FFD9     	movff	plusw1,fsr2l
  5719  010372  0EE8               	movlw	-24
  5720  010374  006F FF8F FFDA     	movff	plusw1,fsr2h
  5721  01037A  0E02               	movlw	2
  5722  01037C  5EDE               	subwf	postinc2,f,c
  5723  01037E  0E00               	movlw	0
  5724  010380  5ADD               	subwfb	postdec2,f,c
  5725  010382  006F FF78  F03F    	movff	postinc2,btemp+10
  5726  010388  006F FF74  F040    	movff	postdec2,btemp+11
  5727  01038E  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  5728  010394  0060  F103  FFDA   	movff	btemp+11,fsr2h
  5729  01039A  006F FF78  F03F    	movff	postinc2,btemp+10
  5730  0103A0  006F FF74  F040    	movff	postdec2,btemp+11
  5731  0103A6  503F               	movf	(btemp+10)^0,w,c
  5732  0103A8  6E45               	movwf	(btemp+16)^0,c
  5733  0103AA  5040               	movf	(btemp+11)^0,w,c
  5734  0103AC  6E46               	movwf	(btemp+17)^0,c
  5735  0103AE  6A47               	clrf	(btemp+18)^0,c
  5736  0103B0  6A48               	clrf	(btemp+19)^0,c
  5737  0103B2  6A49               	clrf	(btemp+20)^0,c
  5738  0103B4  6A4A               	clrf	(btemp+21)^0,c
  5739  0103B6  6A4B               	clrf	(btemp+22)^0,c
  5740  0103B8  6A4C               	clrf	(btemp+23)^0,c
  5741                           
  5742                           ;stkvar	_llu @ sp[(-19)+0]
  5743  0103BA  0EED               	movlw	-19
  5744  0103BC  0060  F117  FFE3   	movff	btemp+16,plusw1
  5745  0103C2  0EEE               	movlw	-18
  5746  0103C4  0060  F11B  FFE3   	movff	btemp+17,plusw1
  5747  0103CA  0EEF               	movlw	-17
  5748  0103CC  0060  F11F  FFE3   	movff	btemp+18,plusw1
  5749  0103D2  0EF0               	movlw	-16
  5750  0103D4  0060  F123  FFE3   	movff	btemp+19,plusw1
  5751  0103DA  0EF1               	movlw	-15
  5752  0103DC  0060  F127  FFE3   	movff	btemp+20,plusw1
  5753  0103E2  0EF2               	movlw	-14
  5754  0103E4  0060  F12B  FFE3   	movff	btemp+21,plusw1
  5755  0103EA  0EF3               	movlw	-13
  5756  0103EC  0060  F12F  FFE3   	movff	btemp+22,plusw1
  5757  0103F2  0EF4               	movlw	-12
  5758  0103F4  0060  F133  FFE3   	movff	btemp+23,plusw1
  5759                           
  5760                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  5761                           ;stkvar	_c @ sp[(-19)+18]
  5762  0103FA  0EFF               	movlw	-1
  5763  0103FC  50E3               	movf	plusw1,w,c
  5764  0103FE  6EE6               	movwf	postinc1,c
  5765                           
  5766                           ;stkvar	_llu @ sp[(-20)+0]
  5767  010400  50E1               	movf	fsr1l,w,c
  5768  010402  0FEC               	addlw	-20
  5769  010404  6ED9               	movwf	fsr2l,c
  5770  010406  50E2               	movf	fsr1h,w,c
  5771  010408  6EDA               	movwf	fsr2h,c
  5772  01040A  0EFF               	movlw	255
  5773  01040C  22DA               	addwfc	fsr2h,f,c
  5774  01040E  006F FF7B FFE6     	movff	postinc2,postinc1
  5775  010414  006F FF7B FFE6     	movff	postinc2,postinc1
  5776  01041A  006F FF7B FFE6     	movff	postinc2,postinc1
  5777  010420  006F FF7B FFE6     	movff	postinc2,postinc1
  5778  010426  006F FF7B FFE6     	movff	postinc2,postinc1
  5779  01042C  006F FF7B FFE6     	movff	postinc2,postinc1
  5780  010432  006F FF7B FFE6     	movff	postinc2,postinc1
  5781  010438  006F FF7B FFE6     	movff	postinc2,postinc1
  5782                           
  5783                           ;stkvar	_fp @ sp[(-28)+-2]
  5784  01043E  0EE2               	movlw	-30
  5785  010440  006F FF8F FFE6     	movff	plusw1,postinc1
  5786  010446  006F FF8F FFE6     	movff	plusw1,postinc1
  5787  01044C  ECC2  F084         	call	_xtoa	;wreg free
  5788  010450  D069               	goto	l1783
  5789  010452                     l6041:
  5790                           
  5791                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  5792                           ;stkvar	_fmt @ sp[(-19)+-4]
  5793  010452  0EE9               	movlw	-23
  5794  010454  006F FF8F FFD9     	movff	plusw1,fsr2l
  5795  01045A  0EEA               	movlw	-22
  5796  01045C  006F FF8F FFDA     	movff	plusw1,fsr2h
  5797  010462  006F FF7B FFF6     	movff	postinc2,tblptrl
  5798  010468  006F FF77 FFF7     	movff	postdec2,tblptrh
  5799  01046E                     	if	0	;tblptru may be non-zero
  5800  01046E                     	endif
  5801  01046E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5802  01046E  0E00               	movlw	low (__mediumconst shr (0+16))
  5803  010470  6EF8               	movwf	tblptru,c
  5804  010472                     	endif
  5805  010472  0008               	tblrd		*
  5806  010474  50F5               	movf	tablat,w,c
  5807  010476  0A25               	xorlw	37
  5808  010478  A4D8               	btfss	status,2,c
  5809  01047A  D01A               	goto	l6051
  5810                           
  5811                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  5812                           ;stkvar	_fmt @ sp[(-19)+-4]
  5813  01047C  0EE9               	movlw	-23
  5814  01047E  006F FF8F FFD9     	movff	plusw1,fsr2l
  5815  010484  0EEA               	movlw	-22
  5816  010486  006F FF8F FFDA     	movff	plusw1,fsr2h
  5817  01048C  2ADE               	incf	postinc2,f,c
  5818  01048E  0E00               	movlw	0
  5819  010490  22DD               	addwfc	postdec2,f,c
  5820                           
  5821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  5822                           ;stkvar	_fp @ sp[(-19)+-2]
  5823  010492  0EEB               	movlw	-21
  5824  010494  006F FF8F FFE6     	movff	plusw1,postinc1
  5825  01049A  006F FF8F FFE6     	movff	plusw1,postinc1
  5826  0104A0  0E25               	movlw	37
  5827  0104A2  6EE6               	movwf	postinc1,c
  5828  0104A4  0E00               	movlw	0
  5829  0104A6  6EE6               	movwf	postinc1,c
  5830  0104A8  ECFC  F08E         	call	_fputc	;wreg free
  5831  0104AC                     l6047:
  5832                           
  5833                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  5834  0104AC  0E01               	movlw	1
  5835  0104AE  D00C               	goto	L2
  5836  0104B0                     l6051:
  5837                           
  5838                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  5839                           ;stkvar	_fmt @ sp[(-19)+-4]
  5840  0104B0  0EE9               	movlw	-23
  5841  0104B2  006F FF8F FFD9     	movff	plusw1,fsr2l
  5842  0104B8  0EEA               	movlw	-22
  5843  0104BA  006F FF8F FFDA     	movff	plusw1,fsr2h
  5844  0104C0  2ADE               	incf	postinc2,f,c
  5845  0104C2  0E00               	movlw	0
  5846  0104C4  22DD               	addwfc	postdec2,f,c
  5847                           
  5848                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  5849  0104C6  0E00               	movlw	0
  5850  0104C8                     L2:
  5851  0104C8  6E35               	movwf	btemp^0,c
  5852  0104CA  0E00               	movlw	0
  5853  0104CC  6E36               	movwf	(btemp+1)^0,c
  5854  0104CE  D02A               	goto	l1783
  5855  0104D0                     l6057:
  5856                           
  5857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  5858                           ;stkvar	_fp @ sp[(-19)+-2]
  5859  0104D0  0EEB               	movlw	-21
  5860  0104D2  006F FF8F FFE6     	movff	plusw1,postinc1
  5861  0104D8  006F FF8F FFE6     	movff	plusw1,postinc1
  5862                           
  5863                           ;stkvar	_fmt @ sp[(-21)+-4]
  5864  0104DE  0EE7               	movlw	-25
  5865  0104E0  006F FF8F FFD9     	movff	plusw1,fsr2l
  5866  0104E6  0EE8               	movlw	-24
  5867  0104E8  006F FF8F FFDA     	movff	plusw1,fsr2h
  5868  0104EE  006F FF7B FFF6     	movff	postinc2,tblptrl
  5869  0104F4  006F FF77 FFF7     	movff	postdec2,tblptrh
  5870  0104FA                     	if	0	;tblptru may be non-zero
  5871  0104FA                     	endif
  5872  0104FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5873  0104FA  0E00               	movlw	low (__mediumconst shr (0+16))
  5874  0104FC  6EF8               	movwf	tblptru,c
  5875  0104FE                     	endif
  5876  0104FE  0008               	tblrd		*
  5877  010500  50F5               	movf	tablat,w,c
  5878  010502  6EE6               	movwf	postinc1,c
  5879  010504  0E00               	movlw	0
  5880  010506  6EE6               	movwf	postinc1,c
  5881  010508  ECFC  F08E         	call	_fputc	;wreg free
  5882                           
  5883                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  5884                           ;stkvar	_fmt @ sp[(-19)+-4]
  5885  01050C  0EE9               	movlw	-23
  5886  01050E  006F FF8F FFD9     	movff	plusw1,fsr2l
  5887  010514  0EEA               	movlw	-22
  5888  010516  006F FF8F FFDA     	movff	plusw1,fsr2h
  5889  01051C  2ADE               	incf	postinc2,f,c
  5890  01051E  0E00               	movlw	0
  5891  010520  22DD               	addwfc	postdec2,f,c
  5892  010522  D7C4               	goto	l6047
  5893  010524                     l1783:
  5894                           
  5895                           ; _vfpfcnvrt: autosize = 19, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  5896  010524  0EE7               	movlw	231
  5897  010526  26E1               	addwf	fsr1l,f,c
  5898  010528  0EFF               	movlw	255
  5899  01052A  22E2               	addwfc	fsr1h,f,c
  5900  01052C  0012               	return		;funcret
  5901  01052E                     __end_of_vfpfcnvrt:
  5902                           	opt callstack 0
  5903                           
  5904 ;; *************** function _xtoa *****************
  5905 ;; Defined at:
  5906 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  5907 ;; Parameters:    Size  Location     Type
  5908 ;;  fp              2  [STACK] PTR struct _IO_FILE
  5909 ;;		 -> f(6), NULL(0), 
  5910 ;;  d               8  [STACK] unsigned long long 
  5911 ;;  x               1  [STACK] unsigned char 
  5912 ;; Auto vars:     Size  Location     Type
  5913 ;;  n               8  [STACK] unsigned long long 
  5914 ;;  c               2  [STACK] int 
  5915 ;;  i               2  [STACK] int 
  5916 ;;  w               2  [STACK] int 
  5917 ;;  p               2  [STACK] int 
  5918 ;; Return value:  Size  Location     Type
  5919 ;;                  2  [STACK] int 
  5920 ;; Registers used:
  5921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  5922 ;; Tracked objects:
  5923 ;;		On entry : 0/3
  5924 ;;		On exit  : 0/0
  5925 ;;		Unchanged: 0/0
  5926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5931 ;;Total ram usage:        0 bytes
  5932 ;; Hardware stack levels used:    1
  5933 ;; Hardware stack levels required when called:   11
  5934 ;; This function calls:
  5935 ;;		_isalpha
  5936 ;;		_isupper
  5937 ;;		_pad
  5938 ;;		_toupper
  5939 ;; This function is called by:
  5940 ;;		_vfpfcnvrt
  5941 ;; This function uses a reentrant model
  5942 ;;
  5943                           
  5944                           	psect	text30
  5945  010984                     __ptext30:
  5946                           	opt callstack 0
  5947  010984                     _xtoa:
  5948                           	opt callstack 0
  5949                           
  5950                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  5951  010984  0E14               	movlw	20
  5952  010986  26E1               	addwf	fsr1l,f,c
  5953  010988  0E00               	movlw	0
  5954  01098A  22E2               	addwfc	fsr1h,f,c
  5955                           
  5956                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  5957                           
  5958                           ;incstack = 0
  5959  01098C  AE21               	btfss	(_prec+1)^0,7,c
  5960                           
  5961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  5962  01098E  9222               	bcf	_flags^0,1,c
  5963                           
  5964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  5965  010990  BE21               	btfsc	(_prec+1)^0,7,c
  5966  010992  D005               	goto	u3850
  5967  010994  5021               	movf	(_prec+1)^0,w,c
  5968  010996  E110               	bnz	l5923
  5969  010998  0420               	decf	_prec^0,w,c
  5970  01099A  B0D8               	btfsc	status,0,c
  5971  01099C  D00D               	goto	l5923
  5972  01099E                     u3850:
  5973  01099E  0E01               	movlw	1
  5974  0109A0  6E3F               	movwf	(btemp+10)^0,c
  5975  0109A2  0E00               	movlw	0
  5976  0109A4  6E40               	movwf	(btemp+11)^0,c
  5977                           
  5978                           ;stkvar	_p @ sp[(-20)+18]
  5979  0109A6  0EFE               	movlw	-2
  5980  0109A8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  5981  0109AE  0EFF               	movlw	-1
  5982  0109B0  0060  F103  FFE3   	movff	btemp+11,plusw1
  5983  0109B6  D008               	goto	l1755
  5984  0109B8                     l5923:
  5985                           
  5986                           ;stkvar	_p @ sp[(-20)+18]
  5987  0109B8  0EFE               	movlw	-2
  5988  0109BA  0060  F083  FFE3   	movff	_prec,plusw1
  5989  0109C0  0EFF               	movlw	-1
  5990  0109C2  0060  F087  FFE3   	movff	_prec+1,plusw1
  5991  0109C8                     l1755:
  5992                           
  5993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  5994                           ;stkvar	_w @ sp[(-20)+16]
  5995  0109C8  0EFC               	movlw	-4
  5996  0109CA  0060  F07B  FFE3   	movff	_width,plusw1
  5997  0109D0  0EFD               	movlw	-3
  5998  0109D2  0060  F07F  FFE3   	movff	_width+1,plusw1
  5999                           
  6000                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  6001  0109D8  A822               	btfss	_flags^0,4,c
  6002  0109DA  D00B               	goto	l5929
  6003                           
  6004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  6005                           ;stkvar	_w @ sp[(-20)+16]
  6006  0109DC  50E1               	movf	fsr1l,w,c
  6007  0109DE  0FFC               	addlw	-4
  6008  0109E0  6ED9               	movwf	fsr2l,c
  6009  0109E2  50E2               	movf	fsr1h,w,c
  6010  0109E4  6EDA               	movwf	fsr2h,c
  6011  0109E6  0EFF               	movlw	255
  6012  0109E8  22DA               	addwfc	fsr2h,f,c
  6013  0109EA  0EFE               	movlw	254
  6014  0109EC  26DE               	addwf	postinc2,f,c
  6015  0109EE  0EFF               	movlw	255
  6016  0109F0  22DD               	addwfc	postdec2,f,c
  6017  0109F2                     l5929:
  6018                           
  6019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  6020                           ;stkvar	_d @ sp[(-20)+-10]
  6021  0109F2  0EE2               	movlw	226
  6022  0109F4  24E1               	addwf	fsr1l,w,c
  6023  0109F6  6ED9               	movwf	fsr2l,c
  6024  0109F8  0EFF               	movlw	255
  6025  0109FA  20E2               	addwfc	fsr1h,w,c
  6026  0109FC  6EDA               	movwf	fsr2h,c
  6027                           
  6028                           ;stkvar	_n @ sp[(-20)+4]
  6029  0109FE  0E08               	movlw	8
  6030  010A00  6E35               	movwf	btemp^0,c
  6031  010A02  0EF0               	movlw	-16
  6032  010A04                     us387999:
  6033  010A04  006F FF7B FFE3     	movff	postinc2,plusw1
  6034  010A0A  28E8               	incf	wreg,w,c
  6035  010A0C  2E35               	decfsz	btemp^0,f,c
  6036  010A0E  D7FA               	bra	us387999
  6037                           
  6038                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  6039  010A10  0E1F               	movlw	31
  6040  010A12  6E3F               	movwf	(btemp+10)^0,c
  6041  010A14  0E00               	movlw	0
  6042  010A16  6E40               	movwf	(btemp+11)^0,c
  6043                           
  6044                           ;stkvar	_i @ sp[(-20)+14]
  6045  010A18  0EFA               	movlw	-6
  6046  010A1A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6047  010A20  0EFB               	movlw	-5
  6048  010A22  0060  F103  FFE3   	movff	btemp+11,plusw1
  6049                           
  6050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  6051  010A28  0100               	movlb	0	; () banked
  6052  010A2A  6BCC               	clrf	(_dbuf+31)& (0+255),b
  6053                           
  6054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6055  010A2C  D0E8               	goto	l5967
  6056  010A2E                     l5935:
  6057                           
  6058                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  6059                           ;stkvar	_i @ sp[(-20)+14]
  6060  010A2E  50E1               	movf	fsr1l,w,c
  6061  010A30  0FFA               	addlw	-6
  6062  010A32  6ED9               	movwf	fsr2l,c
  6063  010A34  50E2               	movf	fsr1h,w,c
  6064  010A36  6EDA               	movwf	fsr2h,c
  6065  010A38  0EFF               	movlw	255
  6066  010A3A  22DA               	addwfc	fsr2h,f,c
  6067  010A3C  06DE               	decf	postinc2,f,c
  6068  010A3E  0E00               	movlw	0
  6069  010A40  5ADD               	subwfb	postdec2,f,c
  6070                           
  6071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  6072                           ;stkvar	_n @ sp[(-20)+4]
  6073  010A42  0EF0               	movlw	-16
  6074  010A44  006F FF8C  F03F    	movff	plusw1,btemp+10
  6075  010A4A  0EF1               	movlw	-15
  6076  010A4C  006F FF8C  F040    	movff	plusw1,btemp+11
  6077  010A52  0E0F               	movlw	15
  6078  010A54  163F               	andwf	(btemp+10)^0,f,c
  6079  010A56  0E00               	movlw	0
  6080  010A58  1640               	andwf	(btemp+11)^0,f,c
  6081                           
  6082                           ;stkvar	_c @ sp[(-20)+12]
  6083  010A5A  0EF8               	movlw	-8
  6084  010A5C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6085  010A62  0EF9               	movlw	-7
  6086  010A64  0060  F103  FFE3   	movff	btemp+11,plusw1
  6087                           
  6088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  6089                           ;stkvar	_c @ sp[(-20)+12]
  6090  010A6A  0EF9               	movlw	-7
  6091  010A6C  BEE3               	btfsc	plusw1,7,c
  6092  010A6E  D00F               	goto	l5943
  6093  010A70  0EF9               	movlw	-7
  6094  010A72  50E3               	movf	plusw1,w,c
  6095  010A74  E108               	bnz	u3880
  6096  010A76  0EF8               	movlw	-8
  6097  010A78  006F FF8C  F035    	movff	plusw1,btemp
  6098  010A7E  0E0A               	movlw	10
  6099  010A80  5E35               	subwf	btemp^0,f,c
  6100  010A82  A0D8               	btfss	status,0,c
  6101  010A84  D004               	goto	l5943
  6102  010A86                     u3880:
  6103                           
  6104                           ;stkvar	_c @ sp[(-20)+12]
  6105  010A86  0EF8               	movlw	-8
  6106  010A88  50E3               	movf	plusw1,w,c
  6107  010A8A  0F57               	addlw	87
  6108  010A8C  D003               	goto	L3
  6109  010A8E                     l5943:
  6110                           
  6111                           ;stkvar	_c @ sp[(-20)+12]
  6112  010A8E  0EF8               	movlw	-8
  6113  010A90  50E3               	movf	plusw1,w,c
  6114  010A92  0F30               	addlw	48
  6115  010A94                     L3:
  6116  010A94  6E3F               	movwf	(btemp+10)^0,c
  6117  010A96  0EF9               	movlw	-7
  6118  010A98  006F FF8C  F040    	movff	plusw1,btemp+11
  6119  010A9E  0E00               	movlw	0
  6120  010AA0  2240               	addwfc	(btemp+11)^0,f,c
  6121                           
  6122                           ;stkvar	_c @ sp[(-20)+12]
  6123  010AA2  0EF8               	movlw	-8
  6124  010AA4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6125  010AAA  0EF9               	movlw	-7
  6126  010AAC  0060  F103  FFE3   	movff	btemp+11,plusw1
  6127  010AB2  0EBF               	movlw	191
  6128  010AB4  6E3F               	movwf	(btemp+10)^0,c
  6129  010AB6  0EFF               	movlw	255
  6130  010AB8  6E40               	movwf	(btemp+11)^0,c
  6131                           
  6132                           ;stkvar	_x @ sp[(-20)+-11]
  6133  010ABA  0EE1               	movlw	-31
  6134  010ABC  50E3               	movf	plusw1,w,c
  6135  010ABE  6E3D               	movwf	(btemp+8)^0,c
  6136  010AC0  6A3E               	clrf	(btemp+9)^0,c
  6137  010AC2  503F               	movf	(btemp+10)^0,w,c
  6138  010AC4  263D               	addwf	(btemp+8)^0,f,c
  6139  010AC6  5040               	movf	(btemp+11)^0,w,c
  6140  010AC8  223E               	addwfc	(btemp+9)^0,f,c
  6141  010ACA  503E               	movf	(btemp+9)^0,w,c
  6142  010ACC  E106               	bnz	u3890
  6143  010ACE  0E1A               	movlw	26
  6144  010AD0  5C3D               	subwf	(btemp+8)^0,w,c
  6145  010AD2  B0D8               	btfsc	status,0,c
  6146  010AD4  D002               	goto	u3890
  6147  010AD6  0E01               	movlw	1
  6148  010AD8  D001               	goto	u3900
  6149  010ADA                     u3890:
  6150  010ADA  0E00               	movlw	0
  6151  010ADC                     u3900:
  6152  010ADC  6E3F               	movwf	(btemp+10)^0,c
  6153  010ADE  6A40               	clrf	(btemp+11)^0,c
  6154                           
  6155                           ;stkvar	_xtoa$4004 @ sp[(-20)+2]
  6156  010AE0  0EEE               	movlw	-18
  6157  010AE2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6158  010AE8  0EEF               	movlw	-17
  6159  010AEA  0060  F103  FFE3   	movff	btemp+11,plusw1
  6160                           
  6161                           ;stkvar	_xtoa$4004 @ sp[(-20)+2]
  6162  010AF0  0EEE               	movlw	-18
  6163  010AF2  006F FF8C  F035    	movff	plusw1,btemp
  6164  010AF8  0EEF               	movlw	-17
  6165  010AFA  50E3               	movf	plusw1,w,c
  6166  010AFC  1035               	iorwf	btemp^0,w,c
  6167  010AFE  B4D8               	btfsc	status,2,c
  6168  010B00  D041               	goto	l5959
  6169  010B02  0E9F               	movlw	159
  6170  010B04  6E3F               	movwf	(btemp+10)^0,c
  6171  010B06  0EFF               	movlw	255
  6172  010B08  6E40               	movwf	(btemp+11)^0,c
  6173                           
  6174                           ;stkvar	_c @ sp[(-20)+12]
  6175  010B0A  0EF8               	movlw	-8
  6176  010B0C  006F FF8C  F03D    	movff	plusw1,btemp+8
  6177  010B12  0EF9               	movlw	-7
  6178  010B14  006F FF8C  F03E    	movff	plusw1,btemp+9
  6179  010B1A  0E20               	movlw	32
  6180  010B1C  123D               	iorwf	(btemp+8)^0,f,c
  6181  010B1E  0E00               	movlw	0
  6182  010B20  123E               	iorwf	(btemp+9)^0,f,c
  6183  010B22  503F               	movf	(btemp+10)^0,w,c
  6184  010B24  263D               	addwf	(btemp+8)^0,f,c
  6185  010B26  5040               	movf	(btemp+11)^0,w,c
  6186  010B28  223E               	addwfc	(btemp+9)^0,f,c
  6187  010B2A  503E               	movf	(btemp+9)^0,w,c
  6188  010B2C  E106               	bnz	u3920
  6189  010B2E  0E1A               	movlw	26
  6190  010B30  5C3D               	subwf	(btemp+8)^0,w,c
  6191  010B32  B0D8               	btfsc	status,0,c
  6192  010B34  D002               	goto	u3920
  6193  010B36  0E01               	movlw	1
  6194  010B38  D001               	goto	u3930
  6195  010B3A                     u3920:
  6196  010B3A  0E00               	movlw	0
  6197  010B3C                     u3930:
  6198  010B3C  6E3F               	movwf	(btemp+10)^0,c
  6199  010B3E  6A40               	clrf	(btemp+11)^0,c
  6200                           
  6201                           ;stkvar	_xtoa$4005 @ sp[(-20)+0]
  6202  010B40  0EEC               	movlw	-20
  6203  010B42  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6204  010B48  0EED               	movlw	-19
  6205  010B4A  0060  F103  FFE3   	movff	btemp+11,plusw1
  6206                           
  6207                           ;stkvar	_xtoa$4005 @ sp[(-20)+0]
  6208  010B50  0EEC               	movlw	-20
  6209  010B52  006F FF8C  F035    	movff	plusw1,btemp
  6210  010B58  0EED               	movlw	-19
  6211  010B5A  50E3               	movf	plusw1,w,c
  6212  010B5C  1035               	iorwf	btemp^0,w,c
  6213  010B5E  B4D8               	btfsc	status,2,c
  6214  010B60  D011               	goto	l5959
  6215                           
  6216                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  6217                           ;stkvar	_c @ sp[(-20)+12]
  6218  010B62  0EF8               	movlw	-8
  6219  010B64  006F FF8F FFE6     	movff	plusw1,postinc1
  6220  010B6A  006F FF8F FFE6     	movff	plusw1,postinc1
  6221  010B70  EC78  F094         	call	_toupper	;wreg free
  6222                           
  6223                           ;stkvar	_c @ sp[(-20)+12]
  6224  010B74  0EF8               	movlw	-8
  6225  010B76  0060  F0D7  FFE3   	movff	btemp,plusw1
  6226  010B7C  0EF9               	movlw	-7
  6227  010B7E  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  6228  010B84                     l5959:
  6229                           
  6230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  6231                           ;stkvar	_c @ sp[(-20)+12]
  6232                           ;stkvar	_i @ sp[(-20)+14]
  6233  010B84  0EFA               	movlw	-6
  6234  010B86  006F FF8C  F040    	movff	plusw1,btemp+11
  6235  010B8C  5040               	movf	(btemp+11)^0,w,c
  6236  010B8E  0FAD               	addlw	low _dbuf
  6237  010B90  6ED9               	movwf	fsr2l,c
  6238  010B92  6ADA               	clrf	fsr2h,c
  6239  010B94  0EF8               	movlw	-8
  6240  010B96  006F FF8F FFDF     	movff	plusw1,indf2
  6241                           
  6242                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
  6243                           ;stkvar	_p @ sp[(-20)+18]
  6244  010B9C  50E1               	movf	fsr1l,w,c
  6245  010B9E  0FFE               	addlw	-2
  6246  010BA0  6ED9               	movwf	fsr2l,c
  6247  010BA2  50E2               	movf	fsr1h,w,c
  6248  010BA4  6EDA               	movwf	fsr2h,c
  6249  010BA6  0EFF               	movlw	255
  6250  010BA8  22DA               	addwfc	fsr2h,f,c
  6251  010BAA  06DE               	decf	postinc2,f,c
  6252  010BAC  0E00               	movlw	0
  6253  010BAE  5ADD               	subwfb	postdec2,f,c
  6254                           
  6255                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
  6256                           ;stkvar	_w @ sp[(-20)+16]
  6257  010BB0  50E1               	movf	fsr1l,w,c
  6258  010BB2  0FFC               	addlw	-4
  6259  010BB4  6ED9               	movwf	fsr2l,c
  6260  010BB6  50E2               	movf	fsr1h,w,c
  6261  010BB8  6EDA               	movwf	fsr2h,c
  6262  010BBA  0EFF               	movlw	255
  6263  010BBC  22DA               	addwfc	fsr2h,f,c
  6264  010BBE  06DE               	decf	postinc2,f,c
  6265  010BC0  0E00               	movlw	0
  6266  010BC2  5ADD               	subwfb	postdec2,f,c
  6267                           
  6268                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  6269  010BC4  0E04               	movlw	4
  6270  010BC6  6E40               	movwf	(btemp+11)^0,c
  6271                           
  6272                           ;stkvar	_n @ sp[(-20)+4]
  6273  010BC8  50E1               	movf	fsr1l,w,c
  6274  010BCA  0FF0               	addlw	-16
  6275  010BCC  6ED9               	movwf	fsr2l,c
  6276  010BCE  50E2               	movf	fsr1h,w,c
  6277  010BD0  6EDA               	movwf	fsr2h,c
  6278  010BD2  0EFF               	movlw	255
  6279  010BD4  22DA               	addwfc	fsr2h,f,c
  6280  010BD6  2840               	incf	(btemp+11)^0,w,c
  6281  010BD8  52DE               	movf	postinc2,f,c
  6282  010BDA  D00F               	goto	u3950
  6283  010BDC                     u3955:
  6284  010BDC  52DE               	movf	postinc2,f,c
  6285  010BDE  52DE               	movf	postinc2,f,c
  6286  010BE0  52DE               	movf	postinc2,f,c
  6287  010BE2  52DE               	movf	postinc2,f,c
  6288  010BE4  52DE               	movf	postinc2,f,c
  6289  010BE6  52DE               	movf	postinc2,f,c
  6290  010BE8  90D8               	bcf	status,0,c
  6291  010BEA  32DD               	rrcf	postdec2,f,c
  6292  010BEC  32DD               	rrcf	postdec2,f,c
  6293  010BEE  32DD               	rrcf	postdec2,f,c
  6294  010BF0  32DD               	rrcf	postdec2,f,c
  6295  010BF2  32DD               	rrcf	postdec2,f,c
  6296  010BF4  32DD               	rrcf	postdec2,f,c
  6297  010BF6  32DD               	rrcf	postdec2,f,c
  6298  010BF8  32DE               	rrcf	postinc2,f,c
  6299  010BFA                     u3950:
  6300  010BFA  2EE8               	decfsz	wreg,f,c
  6301  010BFC  D7EF               	goto	u3955
  6302  010BFE                     l5967:
  6303                           
  6304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6305                           ;stkvar	_i @ sp[(-20)+14]
  6306  010BFE  0EFB               	movlw	-5
  6307  010C00  BEE3               	btfsc	plusw1,7,c
  6308  010C02  D03A               	goto	u4000
  6309  010C04  0EFB               	movlw	-5
  6310  010C06  50E3               	movf	plusw1,w,c
  6311  010C08  E108               	bnz	u3960
  6312  010C0A  0EFA               	movlw	-6
  6313  010C0C  006F FF8C  F035    	movff	plusw1,btemp
  6314  010C12  0E02               	movlw	2
  6315  010C14  5E35               	subwf	btemp^0,f,c
  6316  010C16  A0D8               	btfss	status,0,c
  6317  010C18  D02F               	goto	u4000
  6318  010C1A                     u3960:
  6319                           
  6320                           ;stkvar	_n @ sp[(-20)+4]
  6321  010C1A  0EF0               	movlw	-16
  6322  010C1C  50E3               	movf	plusw1,w,c
  6323  010C1E  E115               	bnz	u3971
  6324  010C20  0EF1               	movlw	-15
  6325  010C22  50E3               	movf	plusw1,w,c
  6326  010C24  E112               	bnz	u3971
  6327  010C26  0EF2               	movlw	-14
  6328  010C28  50E3               	movf	plusw1,w,c
  6329  010C2A  E10F               	bnz	u3971
  6330  010C2C  0EF3               	movlw	-13
  6331  010C2E  50E3               	movf	plusw1,w,c
  6332  010C30  E10C               	bnz	u3971
  6333  010C32  0EF4               	movlw	-12
  6334  010C34  50E3               	movf	plusw1,w,c
  6335  010C36  E109               	bnz	u3971
  6336  010C38  0EF5               	movlw	-11
  6337  010C3A  50E3               	movf	plusw1,w,c
  6338  010C3C  E106               	bnz	u3971
  6339  010C3E  0EF6               	movlw	-10
  6340  010C40  50E3               	movf	plusw1,w,c
  6341  010C42  E103               	bnz	u3971
  6342  010C44  0EF7               	movlw	-9
  6343  010C46  50E3               	movf	plusw1,w,c
  6344  010C48  A4D8               	btfss	status,2,c
  6345  010C4A                     u3971:
  6346  010C4A  D6F1               	goto	l5935
  6347                           
  6348                           ;stkvar	_p @ sp[(-20)+18]
  6349  010C4C  0EFF               	movlw	-1
  6350  010C4E  BEE3               	btfsc	plusw1,7,c
  6351  010C50  D007               	goto	u3980
  6352  010C52  0EFF               	movlw	-1
  6353  010C54  50E3               	movf	plusw1,w,c
  6354  010C56  E103               	bnz	u3981
  6355  010C58  0EFE               	movlw	-2
  6356  010C5A  04E3               	decf	plusw1,w,c
  6357  010C5C  B0D8               	btfsc	status,0,c
  6358  010C5E                     u3981:
  6359  010C5E  D6E7               	goto	l5935
  6360  010C60                     u3980:
  6361                           
  6362                           ;stkvar	_w @ sp[(-20)+16]
  6363  010C60  0EFD               	movlw	-3
  6364  010C62  BEE3               	btfsc	plusw1,7,c
  6365  010C64  D009               	goto	u4000
  6366  010C66  0EFD               	movlw	-3
  6367  010C68  50E3               	movf	plusw1,w,c
  6368  010C6A  E104               	bnz	u3990
  6369  010C6C  0EFC               	movlw	-4
  6370  010C6E  04E3               	decf	plusw1,w,c
  6371  010C70  A0D8               	btfss	status,0,c
  6372  010C72  D002               	goto	u4000
  6373  010C74                     u3990:
  6374  010C74  B222               	btfsc	_flags^0,1,c
  6375  010C76  D6DB               	goto	l5935
  6376  010C78                     u4000:
  6377                           
  6378                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  6379  010C78  A822               	btfss	_flags^0,4,c
  6380  010C7A  D02A               	goto	l5983
  6381                           
  6382                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
  6383                           ;stkvar	_i @ sp[(-20)+14]
  6384  010C7C  50E1               	movf	fsr1l,w,c
  6385  010C7E  0FFA               	addlw	-6
  6386  010C80  6ED9               	movwf	fsr2l,c
  6387  010C82  50E2               	movf	fsr1h,w,c
  6388  010C84  6EDA               	movwf	fsr2h,c
  6389  010C86  0EFF               	movlw	255
  6390  010C88  22DA               	addwfc	fsr2h,f,c
  6391  010C8A  06DE               	decf	postinc2,f,c
  6392  010C8C  0E00               	movlw	0
  6393  010C8E  5ADD               	subwfb	postdec2,f,c
  6394                           
  6395                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  6396                           ;stkvar	_x @ sp[(-20)+-11]
  6397                           ;stkvar	_i @ sp[(-20)+14]
  6398  010C90  0EFA               	movlw	-6
  6399  010C92  006F FF8C  F040    	movff	plusw1,btemp+11
  6400  010C98  5040               	movf	(btemp+11)^0,w,c
  6401  010C9A  0FAD               	addlw	low _dbuf
  6402  010C9C  6ED9               	movwf	fsr2l,c
  6403  010C9E  6ADA               	clrf	fsr2h,c
  6404  010CA0  0EE1               	movlw	-31
  6405  010CA2  006F FF8F FFDF     	movff	plusw1,indf2
  6406                           
  6407                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
  6408                           ;stkvar	_i @ sp[(-20)+14]
  6409  010CA8  50E1               	movf	fsr1l,w,c
  6410  010CAA  0FFA               	addlw	-6
  6411  010CAC  6ED9               	movwf	fsr2l,c
  6412  010CAE  50E2               	movf	fsr1h,w,c
  6413  010CB0  6EDA               	movwf	fsr2h,c
  6414  010CB2  0EFF               	movlw	255
  6415  010CB4  22DA               	addwfc	fsr2h,f,c
  6416  010CB6  06DE               	decf	postinc2,f,c
  6417  010CB8  0E00               	movlw	0
  6418  010CBA  5ADD               	subwfb	postdec2,f,c
  6419                           
  6420                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  6421                           ;stkvar	_i @ sp[(-20)+14]
  6422  010CBC  0EFA               	movlw	-6
  6423  010CBE  006F FF8C  F040    	movff	plusw1,btemp+11
  6424  010CC4  5040               	movf	(btemp+11)^0,w,c
  6425  010CC6  0FAD               	addlw	low _dbuf
  6426  010CC8  6ED9               	movwf	fsr2l,c
  6427  010CCA  6ADA               	clrf	fsr2h,c
  6428  010CCC  0E30               	movlw	48
  6429  010CCE  6EDF               	movwf	indf2,c
  6430  010CD0                     l5983:
  6431                           
  6432                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  6433                           ;stkvar	_w @ sp[(-20)+16]
  6434  010CD0  0EFC               	movlw	-4
  6435  010CD2  006F FF8F FFE6     	movff	plusw1,postinc1
  6436  010CD8  006F FF8F FFE6     	movff	plusw1,postinc1
  6437                           
  6438                           ;stkvar	_i @ sp[(-22)+14]
  6439  010CDE  0EF8               	movlw	-8
  6440  010CE0  006F FF8C  F040    	movff	plusw1,btemp+11
  6441  010CE6  5040               	movf	(btemp+11)^0,w,c
  6442  010CE8  0FAD               	addlw	low _dbuf
  6443  010CEA  6EE6               	movwf	postinc1,c
  6444                           
  6445                           ;stkvar	_fp @ sp[(-23)+-2]
  6446  010CEC  0EE7               	movlw	-25
  6447  010CEE  006F FF8F FFE6     	movff	plusw1,postinc1
  6448  010CF4  006F FF8F FFE6     	movff	plusw1,postinc1
  6449  010CFA  EC9A  F090         	call	_pad	;wreg free
  6450                           
  6451                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
  6452  010CFE  0EE1               	movlw	225
  6453  010D00  26E1               	addwf	fsr1l,f,c
  6454  010D02  0EFF               	movlw	255
  6455  010D04  22E2               	addwfc	fsr1h,f,c
  6456  010D06  0012               	return		;funcret
  6457  010D08                     __end_of_xtoa:
  6458                           	opt callstack 0
  6459                           
  6460 ;; *************** function _toupper *****************
  6461 ;; Defined at:
  6462 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
  6463 ;; Parameters:    Size  Location     Type
  6464 ;;  c               2  [STACK] int 
  6465 ;; Auto vars:     Size  Location     Type
  6466 ;;		None
  6467 ;; Return value:  Size  Location     Type
  6468 ;;                  2  [STACK] int 
  6469 ;; Registers used:
  6470 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
  6471 ;; Tracked objects:
  6472 ;;		On entry : 0/0
  6473 ;;		On exit  : 0/0
  6474 ;;		Unchanged: 0/0
  6475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6480 ;;Total ram usage:        0 bytes
  6481 ;; Hardware stack levels used:    1
  6482 ;; Hardware stack levels required when called:    7
  6483 ;; This function calls:
  6484 ;;		_islower
  6485 ;; This function is called by:
  6486 ;;		_xtoa
  6487 ;; This function uses a reentrant model
  6488 ;;
  6489                           
  6490                           	psect	text31
  6491  0128F0                     __ptext31:
  6492                           	opt callstack 0
  6493  0128F0                     _toupper:
  6494                           	opt callstack 0
  6495                           
  6496                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6497  0128F0  52E6               	movf	postinc1,f,c
  6498  0128F2  52E6               	movf	postinc1,f,c
  6499                           
  6500                           ;stkvar	_c @ sp[(-2)+-2]
  6501                           
  6502                           ;incstack = 0
  6503  0128F4  0EFC               	movlw	-4
  6504  0128F6  50E3               	movf	plusw1,w,c
  6505  0128F8  0F9F               	addlw	159
  6506  0128FA  6E3F               	movwf	(btemp+10)^0,c
  6507  0128FC  0EFD               	movlw	-3
  6508  0128FE  006F FF8C  F040    	movff	plusw1,btemp+11
  6509  012904  0EFF               	movlw	255
  6510  012906  2240               	addwfc	(btemp+11)^0,f,c
  6511  012908  5040               	movf	(btemp+11)^0,w,c
  6512  01290A  E106               	bnz	u1960
  6513  01290C  0E1A               	movlw	26
  6514  01290E  5C3F               	subwf	(btemp+10)^0,w,c
  6515  012910  B0D8               	btfsc	status,0,c
  6516  012912  D002               	goto	u1960
  6517  012914  0E01               	movlw	1
  6518  012916  D001               	goto	u1970
  6519  012918                     u1960:
  6520  012918  0E00               	movlw	0
  6521  01291A                     u1970:
  6522  01291A  6E3F               	movwf	(btemp+10)^0,c
  6523  01291C  6A40               	clrf	(btemp+11)^0,c
  6524                           
  6525                           ;stkvar	_toupper$4565 @ sp[(-2)+0]
  6526  01291E  0EFE               	movlw	-2
  6527  012920  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6528  012926  0EFF               	movlw	-1
  6529  012928  0060  F103  FFE3   	movff	btemp+11,plusw1
  6530                           
  6531                           ;stkvar	_toupper$4565 @ sp[(-2)+0]
  6532  01292E  0EFE               	movlw	-2
  6533  012930  006F FF8C  F035    	movff	plusw1,btemp
  6534  012936  0EFF               	movlw	-1
  6535  012938  50E3               	movf	plusw1,w,c
  6536  01293A  1035               	iorwf	btemp^0,w,c
  6537  01293C  B4D8               	btfsc	status,2,c
  6538  01293E  D00D               	goto	l4269
  6539                           
  6540                           ;stkvar	_c @ sp[(-2)+-2]
  6541  012940  0EFC               	movlw	-4
  6542  012942  006F FF8C  F035    	movff	plusw1,btemp
  6543  012948  0EFD               	movlw	-3
  6544  01294A  006F FF8C  F036    	movff	plusw1,btemp+1
  6545  012950  0E5F               	movlw	95
  6546  012952  1635               	andwf	btemp^0,f,c
  6547  012954  0E00               	movlw	0
  6548  012956  1636               	andwf	(btemp+1)^0,f,c
  6549  012958  D008               	goto	l2558
  6550  01295A                     l4269:
  6551                           
  6552                           ;stkvar	_c @ sp[(-2)+-2]
  6553  01295A  0EFC               	movlw	-4
  6554  01295C  006F FF8C  F035    	movff	plusw1,btemp
  6555  012962  0EFD               	movlw	-3
  6556  012964  006F FF8C  F036    	movff	plusw1,btemp+1
  6557  01296A                     l2558:
  6558                           
  6559                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  6560  01296A  52E5               	movf	postdec1,f,c
  6561  01296C  52E5               	movf	postdec1,f,c
  6562  01296E  52E5               	movf	postdec1,f,c
  6563  012970  52E5               	movf	postdec1,f,c
  6564  012972  0012               	return		;funcret
  6565  012974                     __end_of_toupper:
  6566                           	opt callstack 0
  6567                           
  6568 ;; *************** function _islower *****************
  6569 ;; Defined at:
  6570 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
  6571 ;; Parameters:    Size  Location     Type
  6572 ;;  c               2  [STACK] int 
  6573 ;; Auto vars:     Size  Location     Type
  6574 ;;		None
  6575 ;; Return value:  Size  Location     Type
  6576 ;;                  2  [STACK] int 
  6577 ;; Registers used:
  6578 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  6579 ;; Tracked objects:
  6580 ;;		On entry : 0/0
  6581 ;;		On exit  : 0/0
  6582 ;;		Unchanged: 0/0
  6583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6588 ;;Total ram usage:        0 bytes
  6589 ;; Hardware stack levels used:    1
  6590 ;; Hardware stack levels required when called:    6
  6591 ;; This function calls:
  6592 ;;		Nothing
  6593 ;; This function is called by:
  6594 ;;		_toupper
  6595 ;; This function uses a reentrant model
  6596 ;;
  6597                           
  6598                           	psect	text32
  6599  013264                     __ptext32:
  6600                           	opt callstack 0
  6601  013264                     _islower:
  6602                           	opt callstack 16
  6603                           
  6604                           ;stkvar	_c @ sp[(0)+-2]
  6605                           
  6606                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6607                           ;incstack = 0
  6608  013264  0EFE               	movlw	-2
  6609  013266  50E3               	movf	plusw1,w,c
  6610  013268  0F9F               	addlw	159
  6611  01326A  6E3F               	movwf	(btemp+10)^0,c
  6612  01326C  0EFF               	movlw	-1
  6613  01326E  006F FF8C  F040    	movff	plusw1,btemp+11
  6614  013274  0EFF               	movlw	255
  6615  013276  2240               	addwfc	(btemp+11)^0,f,c
  6616  013278  5040               	movf	(btemp+11)^0,w,c
  6617  01327A  E106               	bnz	u1850
  6618  01327C  0E1A               	movlw	26
  6619  01327E  5C3F               	subwf	(btemp+10)^0,w,c
  6620  013280  B0D8               	btfsc	status,0,c
  6621  013282  D002               	goto	u1850
  6622  013284  0E01               	movlw	1
  6623  013286  D001               	goto	u1860
  6624  013288                     u1850:
  6625  013288  0E00               	movlw	0
  6626  01328A                     u1860:
  6627  01328A  6E35               	movwf	btemp^0,c
  6628  01328C  6A36               	clrf	(btemp+1)^0,c
  6629                           
  6630                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  6631  01328E  52E5               	movf	postdec1,f,c
  6632  013290  52E5               	movf	postdec1,f,c
  6633  013292  0012               	return		;funcret
  6634  013294                     __end_of_islower:
  6635                           	opt callstack 0
  6636                           
  6637 ;; *************** function _isupper *****************
  6638 ;; Defined at:
  6639 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
  6640 ;; Parameters:    Size  Location     Type
  6641 ;;  c               2  [STACK] int 
  6642 ;; Auto vars:     Size  Location     Type
  6643 ;;		None
  6644 ;; Return value:  Size  Location     Type
  6645 ;;                  2  [STACK] int 
  6646 ;; Registers used:
  6647 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  6648 ;; Tracked objects:
  6649 ;;		On entry : 0/0
  6650 ;;		On exit  : 0/0
  6651 ;;		Unchanged: 0/0
  6652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6657 ;;Total ram usage:        0 bytes
  6658 ;; Hardware stack levels used:    1
  6659 ;; Hardware stack levels required when called:    6
  6660 ;; This function calls:
  6661 ;;		Nothing
  6662 ;; This function is called by:
  6663 ;;		_xtoa
  6664 ;; This function uses a reentrant model
  6665 ;;
  6666                           
  6667                           	psect	text33
  6668  013294                     __ptext33:
  6669                           	opt callstack 0
  6670  013294                     _isupper:
  6671                           	opt callstack 17
  6672                           
  6673                           ;stkvar	_c @ sp[(0)+-2]
  6674                           
  6675                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6676                           ;incstack = 0
  6677  013294  0EFE               	movlw	-2
  6678  013296  50E3               	movf	plusw1,w,c
  6679  013298  0FBF               	addlw	191
  6680  01329A  6E3F               	movwf	(btemp+10)^0,c
  6681  01329C  0EFF               	movlw	-1
  6682  01329E  006F FF8C  F040    	movff	plusw1,btemp+11
  6683  0132A4  0EFF               	movlw	255
  6684  0132A6  2240               	addwfc	(btemp+11)^0,f,c
  6685  0132A8  5040               	movf	(btemp+11)^0,w,c
  6686  0132AA  E106               	bnz	u1920
  6687  0132AC  0E1A               	movlw	26
  6688  0132AE  5C3F               	subwf	(btemp+10)^0,w,c
  6689  0132B0  B0D8               	btfsc	status,0,c
  6690  0132B2  D002               	goto	u1920
  6691  0132B4  0E01               	movlw	1
  6692  0132B6  D001               	goto	u1930
  6693  0132B8                     u1920:
  6694  0132B8  0E00               	movlw	0
  6695  0132BA                     u1930:
  6696  0132BA  6E35               	movwf	btemp^0,c
  6697  0132BC  6A36               	clrf	(btemp+1)^0,c
  6698                           
  6699                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  6700  0132BE  52E5               	movf	postdec1,f,c
  6701  0132C0  52E5               	movf	postdec1,f,c
  6702  0132C2  0012               	return		;funcret
  6703  0132C4                     __end_of_isupper:
  6704                           	opt callstack 0
  6705                           
  6706 ;; *************** function _isalpha *****************
  6707 ;; Defined at:
  6708 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
  6709 ;; Parameters:    Size  Location     Type
  6710 ;;  c               2  [STACK] int 
  6711 ;; Auto vars:     Size  Location     Type
  6712 ;;		None
  6713 ;; Return value:  Size  Location     Type
  6714 ;;                  2  [STACK] int 
  6715 ;; Registers used:
  6716 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  6717 ;; Tracked objects:
  6718 ;;		On entry : 0/0
  6719 ;;		On exit  : 0/0
  6720 ;;		Unchanged: 0/0
  6721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6726 ;;Total ram usage:        0 bytes
  6727 ;; Hardware stack levels used:    1
  6728 ;; Hardware stack levels required when called:    6
  6729 ;; This function calls:
  6730 ;;		Nothing
  6731 ;; This function is called by:
  6732 ;;		_xtoa
  6733 ;; This function uses a reentrant model
  6734 ;;
  6735                           
  6736                           	psect	text34
  6737  01301E                     __ptext34:
  6738                           	opt callstack 0
  6739  01301E                     _isalpha:
  6740                           	opt callstack 17
  6741                           
  6742                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6743                           ;incstack = 0
  6744  01301E  0E9F               	movlw	159
  6745  013020  6E3F               	movwf	(btemp+10)^0,c
  6746  013022  0EFF               	movlw	255
  6747  013024  6E40               	movwf	(btemp+11)^0,c
  6748                           
  6749                           ;stkvar	_c @ sp[(0)+-2]
  6750  013026  0EFE               	movlw	-2
  6751  013028  006F FF8C  F03D    	movff	plusw1,btemp+8
  6752  01302E  0EFF               	movlw	-1
  6753  013030  006F FF8C  F03E    	movff	plusw1,btemp+9
  6754  013036  0E20               	movlw	32
  6755  013038  123D               	iorwf	(btemp+8)^0,f,c
  6756  01303A  0E00               	movlw	0
  6757  01303C  123E               	iorwf	(btemp+9)^0,f,c
  6758  01303E  503F               	movf	(btemp+10)^0,w,c
  6759  013040  263D               	addwf	(btemp+8)^0,f,c
  6760  013042  5040               	movf	(btemp+11)^0,w,c
  6761  013044  223E               	addwfc	(btemp+9)^0,f,c
  6762  013046  503E               	movf	(btemp+9)^0,w,c
  6763  013048  E106               	bnz	u1940
  6764  01304A  0E1A               	movlw	26
  6765  01304C  5C3D               	subwf	(btemp+8)^0,w,c
  6766  01304E  B0D8               	btfsc	status,0,c
  6767  013050  D002               	goto	u1940
  6768  013052  0E01               	movlw	1
  6769  013054  D001               	goto	u1950
  6770  013056                     u1940:
  6771  013056  0E00               	movlw	0
  6772  013058                     u1950:
  6773  013058  6E35               	movwf	btemp^0,c
  6774  01305A  6A36               	clrf	(btemp+1)^0,c
  6775                           
  6776                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  6777  01305C  52E5               	movf	postdec1,f,c
  6778  01305E  52E5               	movf	postdec1,f,c
  6779  013060  0012               	return		;funcret
  6780  013062                     __end_of_isalpha:
  6781                           	opt callstack 0
  6782                           
  6783 ;; *************** function _stoa *****************
  6784 ;; Defined at:
  6785 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6786 ;; Parameters:    Size  Location     Type
  6787 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6788 ;;		 -> f(6), NULL(0), 
  6789 ;;  s               2  [STACK] PTR unsigned char 
  6790 ;;		 -> ?_printf(2), ?_sprintf(2), STR_14(9), STR_13(12), 
  6791 ;;		 -> D.lcd(216), D(218), T(144), STR_7(4), 
  6792 ;;		 -> STR_3(4), V(189), 
  6793 ;; Auto vars:     Size  Location     Type
  6794 ;;  nuls            7  [STACK] unsigned char [7]
  6795 ;;  l               2  [STACK] int 
  6796 ;;  p               2  [STACK] int 
  6797 ;;  cp              2  [STACK] PTR unsigned char 
  6798 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_14(9), 
  6799 ;;		 -> STR_13(12), D.lcd(216), D(218), T(144), 
  6800 ;;		 -> STR_7(4), STR_3(4), V(189), 
  6801 ;;  w               2  [STACK] int 
  6802 ;;  i               2  [STACK] int 
  6803 ;; Return value:  Size  Location     Type
  6804 ;;                  2  [STACK] int 
  6805 ;; Registers used:
  6806 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  6807 ;; Tracked objects:
  6808 ;;		On entry : 0/3
  6809 ;;		On exit  : 0/0
  6810 ;;		Unchanged: 0/0
  6811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6816 ;;Total ram usage:        0 bytes
  6817 ;; Hardware stack levels used:    1
  6818 ;; Hardware stack levels required when called:    9
  6819 ;; This function calls:
  6820 ;;		_fputc
  6821 ;;		_strlen
  6822 ;; This function is called by:
  6823 ;;		_vfpfcnvrt
  6824 ;; This function uses a reentrant model
  6825 ;;
  6826                           
  6827                           	psect	text35
  6828  01133A                     __ptext35:
  6829                           	opt callstack 0
  6830  01133A                     _stoa:
  6831                           	opt callstack 0
  6832                           
  6833                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  6834  01133A  0E11               	movlw	17
  6835  01133C  26E1               	addwf	fsr1l,f,c
  6836  01133E  0E00               	movlw	0
  6837  011340  22E2               	addwfc	fsr1h,f,c
  6838                           
  6839                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  6840                           
  6841                           ;incstack = 0
  6842  011342  EE20  F0D5         	lfsr	2,stoa@F1144
  6843                           
  6844                           ;stkvar	_nuls @ sp[(-17)+0]
  6845  011346  0E07               	movlw	7
  6846  011348  6E35               	movwf	btemp^0,c
  6847  01134A  0EEF               	movlw	-17
  6848  01134C                     us374999:
  6849  01134C  006F FF7B FFE3     	movff	postinc2,plusw1
  6850  011352  28E8               	incf	wreg,w,c
  6851  011354  2E35               	decfsz	btemp^0,f,c
  6852  011356  D7FA               	bra	us374999
  6853                           
  6854                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  6855                           ;stkvar	_s @ sp[(-17)+-4]
  6856  011358  0EEB               	movlw	-21
  6857  01135A  006F FF8C  F03F    	movff	plusw1,btemp+10
  6858  011360  0EEC               	movlw	-20
  6859  011362  006F FF8C  F040    	movff	plusw1,btemp+11
  6860                           
  6861                           ;stkvar	_cp @ sp[(-17)+11]
  6862  011368  0EFB               	movlw	-5
  6863  01136A  0060  F103  FFE3   	movff	btemp+11,plusw1
  6864  011370  0EFA               	movlw	-6
  6865  011372  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6866                           
  6867                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  6868                           ;stkvar	_cp @ sp[(-17)+11]
  6869  011378  0EFA               	movlw	-6
  6870  01137A  006F FF8C  F035    	movff	plusw1,btemp
  6871  011380  0EFB               	movlw	-5
  6872  011382  50E3               	movf	plusw1,w,c
  6873  011384  1035               	iorwf	btemp^0,w,c
  6874  011386  A4D8               	btfss	status,2,c
  6875  011388  D00E               	goto	l5871
  6876                           
  6877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  6878                           ;stkvar	_nuls @ sp[(-17)+0]
  6879  01138A  0EEF               	movlw	239
  6880  01138C  24E1               	addwf	fsr1l,w,c
  6881  01138E  6E3F               	movwf	(btemp+10)^0,c
  6882  011390  0EFF               	movlw	255
  6883  011392  20E2               	addwfc	fsr1h,w,c
  6884  011394  6E40               	movwf	(btemp+11)^0,c
  6885                           
  6886                           ;stkvar	_cp @ sp[(-17)+11]
  6887  011396  0EFB               	movlw	-5
  6888  011398  0060  F103  FFE3   	movff	btemp+11,plusw1
  6889  01139E  0EFA               	movlw	-6
  6890  0113A0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6891  0113A6                     l5871:
  6892                           
  6893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  6894                           ;stkvar	_cp @ sp[(-17)+11]
  6895  0113A6  0EFA               	movlw	-6
  6896  0113A8  006F FF8F FFE6     	movff	plusw1,postinc1
  6897  0113AE  006F FF8F FFE6     	movff	plusw1,postinc1
  6898  0113B4  EC4B  F093         	call	_strlen	;wreg free
  6899                           
  6900                           ;stkvar	_l @ sp[(-17)+7]
  6901  0113B8  0EF6               	movlw	-10
  6902  0113BA  0060  F0D7  FFE3   	movff	btemp,plusw1
  6903  0113C0  0EF7               	movlw	-9
  6904  0113C2  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  6905                           
  6906                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  6907                           ;stkvar	_p @ sp[(-17)+9]
  6908  0113C8  0EF8               	movlw	-8
  6909  0113CA  0060  F083  FFE3   	movff	_prec,plusw1
  6910  0113D0  0EF9               	movlw	-7
  6911  0113D2  0060  F087  FFE3   	movff	_prec+1,plusw1
  6912                           
  6913                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  6914                           ;stkvar	_p @ sp[(-17)+9]
  6915  0113D8  0EF9               	movlw	-7
  6916  0113DA  BEE3               	btfsc	plusw1,7,c
  6917  0113DC  D023               	goto	l1734
  6918                           
  6919                           ;stkvar	_l @ sp[(-17)+7]
  6920                           ;stkvar	_p @ sp[(-17)+9]
  6921  0113DE  50E1               	movf	fsr1l,w,c
  6922  0113E0  0FF8               	addlw	-8
  6923  0113E2  6ED9               	movwf	fsr2l,c
  6924  0113E4  50E2               	movf	fsr1h,w,c
  6925  0113E6  6EDA               	movwf	fsr2h,c
  6926  0113E8  0EFF               	movlw	255
  6927  0113EA  22DA               	addwfc	fsr2h,f,c
  6928  0113EC  0EF6               	movlw	-10
  6929  0113EE  50E3               	movf	plusw1,w,c
  6930  0113F0  5CDE               	subwf	postinc2,w,c
  6931  0113F2  50DE               	movf	postinc2,w,c
  6932  0113F4  0A80               	xorlw	128
  6933  0113F6  6E35               	movwf	btemp^0,c
  6934  0113F8  0EF7               	movlw	-9
  6935  0113FA  50E3               	movf	plusw1,w,c
  6936  0113FC  0A80               	xorlw	128
  6937  0113FE  5835               	subwfb	btemp^0,w,c
  6938  011400  B0D8               	btfsc	status,0,c
  6939  011402  D010               	goto	l1734
  6940                           
  6941                           ;stkvar	_p @ sp[(-17)+9]
  6942                           ;stkvar	_l @ sp[(-17)+7]
  6943  011404  0EF8               	movlw	-8
  6944  011406  006F FF8C  F035    	movff	plusw1,btemp
  6945  01140C  0EF6               	movlw	-10
  6946  01140E  0060  F0D7  FFE3   	movff	btemp,plusw1
  6947  011414  0EF9               	movlw	-7
  6948  011416  006F FF8C  F035    	movff	plusw1,btemp
  6949  01141C  0EF7               	movlw	-9
  6950  01141E  0060  F0D7  FFE3   	movff	btemp,plusw1
  6951  011424                     l1734:
  6952                           
  6953                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
  6954                           ;stkvar	_l @ sp[(-17)+7]
  6955                           ;stkvar	_p @ sp[(-17)+9]
  6956  011424  0EF6               	movlw	-10
  6957  011426  006F FF8C  F035    	movff	plusw1,btemp
  6958  01142C  0EF8               	movlw	-8
  6959  01142E  0060  F0D7  FFE3   	movff	btemp,plusw1
  6960  011434  0EF7               	movlw	-9
  6961  011436  006F FF8C  F035    	movff	plusw1,btemp
  6962  01143C  0EF9               	movlw	-7
  6963  01143E  0060  F0D7  FFE3   	movff	btemp,plusw1
  6964                           
  6965                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
  6966                           ;stkvar	_w @ sp[(-17)+13]
  6967  011444  0EFC               	movlw	-4
  6968  011446  0060  F07B  FFE3   	movff	_width,plusw1
  6969  01144C  0EFD               	movlw	-3
  6970  01144E  0060  F07F  FFE3   	movff	_width+1,plusw1
  6971                           
  6972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  6973  011454  A022               	btfss	_flags^0,0,c
  6974  011456  D01F               	goto	l5891
  6975  011458  D031               	goto	u3790
  6976  01145A                     l5887:
  6977                           
  6978                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  6979                           ;stkvar	_fp @ sp[(-17)+-2]
  6980  01145A  0EED               	movlw	-19
  6981  01145C  006F FF8F FFE6     	movff	plusw1,postinc1
  6982  011462  006F FF8F FFE6     	movff	plusw1,postinc1
  6983  011468  0E20               	movlw	32
  6984  01146A  6EE6               	movwf	postinc1,c
  6985  01146C  0E00               	movlw	0
  6986  01146E  6EE6               	movwf	postinc1,c
  6987  011470  ECFC  F08E         	call	_fputc	;wreg free
  6988                           
  6989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
  6990                           ;stkvar	_l @ sp[(-17)+7]
  6991  011474  0EF6               	movlw	-10
  6992  011476  50E3               	movf	plusw1,w,c
  6993  011478  0F01               	addlw	1
  6994  01147A  6E35               	movwf	btemp^0,c
  6995  01147C  0EF6               	movlw	-10
  6996  01147E  0060  F0D7  FFE3   	movff	btemp,plusw1
  6997  011484  6A35               	clrf	btemp^0,c
  6998  011486  0EF7               	movlw	-9
  6999  011488  50E3               	movf	plusw1,w,c
  7000  01148A  2035               	addwfc	btemp^0,w,c
  7001  01148C  6E35               	movwf	btemp^0,c
  7002  01148E  0EF7               	movlw	-9
  7003  011490  0060  F0D7  FFE3   	movff	btemp,plusw1
  7004  011496                     l5891:
  7005                           
  7006                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  7007                           ;stkvar	_w @ sp[(-17)+13]
  7008                           ;stkvar	_l @ sp[(-17)+7]
  7009  011496  50E1               	movf	fsr1l,w,c
  7010  011498  0FF6               	addlw	-10
  7011  01149A  6ED9               	movwf	fsr2l,c
  7012  01149C  50E2               	movf	fsr1h,w,c
  7013  01149E  6EDA               	movwf	fsr2h,c
  7014  0114A0  0EFF               	movlw	255
  7015  0114A2  22DA               	addwfc	fsr2h,f,c
  7016  0114A4  0EFC               	movlw	-4
  7017  0114A6  50E3               	movf	plusw1,w,c
  7018  0114A8  5CDE               	subwf	postinc2,w,c
  7019  0114AA  50DE               	movf	postinc2,w,c
  7020  0114AC  0A80               	xorlw	128
  7021  0114AE  6E35               	movwf	btemp^0,c
  7022  0114B0  0EFD               	movlw	-3
  7023  0114B2  50E3               	movf	plusw1,w,c
  7024  0114B4  0A80               	xorlw	128
  7025  0114B6  5835               	subwfb	btemp^0,w,c
  7026  0114B8  A0D8               	btfss	status,0,c
  7027  0114BA  D7CF               	goto	l5887
  7028  0114BC                     u3790:
  7029                           
  7030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  7031                           ;stkvar	_i @ sp[(-17)+15]
  7032  0114BC  0EFE               	movlw	-2
  7033  0114BE  6AE3               	clrf	plusw1,c
  7034  0114C0  0EFF               	movlw	-1
  7035  0114C2  6AE3               	clrf	plusw1,c
  7036                           
  7037                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  7038  0114C4  D045               	goto	l5901
  7039  0114C6                     l5895:
  7040                           
  7041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  7042                           ;stkvar	_fp @ sp[(-17)+-2]
  7043  0114C6  0EED               	movlw	-19
  7044  0114C8  006F FF8F FFE6     	movff	plusw1,postinc1
  7045  0114CE  006F FF8F FFE6     	movff	plusw1,postinc1
  7046                           
  7047                           ;stkvar	_cp @ sp[(-19)+11]
  7048  0114D4  0EF8               	movlw	-8
  7049  0114D6  006F FF8F FFF6     	movff	plusw1,tblptrl
  7050  0114DC  0EF9               	movlw	-7
  7051  0114DE  006F FF8F FFF7     	movff	plusw1,tblptrh
  7052  0114E4  0E00               	movlw	low (__mediumconst shr (0+16))
  7053  0114E6  6EF8               	movwf	tblptru,c
  7054  0114E8  0E1F               	movlw	(high __ramtop+-1)
  7055  0114EA  64F7               	cpfsgt	tblptrh,c
  7056  0114EC  D003               	bra	u3807
  7057  0114EE  0008               	tblrd		*
  7058  0114F0  50F5               	movf	tablat,w,c
  7059  0114F2  D007               	bra	u3800
  7060  0114F4                     u3807:
  7061  0114F4  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7062  0114FA  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7063  011500  50EF               	movf	indf0,w,c
  7064  011502                     u3800:
  7065  011502  6EE6               	movwf	postinc1,c
  7066  011504  0E00               	movlw	0
  7067  011506  6EE6               	movwf	postinc1,c
  7068  011508  ECFC  F08E         	call	_fputc	;wreg free
  7069                           
  7070                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  7071                           ;stkvar	_cp @ sp[(-17)+11]
  7072  01150C  0EFA               	movlw	-6
  7073  01150E  50E3               	movf	plusw1,w,c
  7074  011510  0F01               	addlw	1
  7075  011512  6E35               	movwf	btemp^0,c
  7076  011514  0EFA               	movlw	-6
  7077  011516  0060  F0D7  FFE3   	movff	btemp,plusw1
  7078  01151C  6A35               	clrf	btemp^0,c
  7079  01151E  0EFB               	movlw	-5
  7080  011520  50E3               	movf	plusw1,w,c
  7081  011522  2035               	addwfc	btemp^0,w,c
  7082  011524  6E35               	movwf	btemp^0,c
  7083  011526  0EFB               	movlw	-5
  7084  011528  0060  F0D7  FFE3   	movff	btemp,plusw1
  7085                           
  7086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
  7087                           ;stkvar	_i @ sp[(-17)+15]
  7088  01152E  0EFE               	movlw	-2
  7089  011530  50E3               	movf	plusw1,w,c
  7090  011532  0F01               	addlw	1
  7091  011534  6E35               	movwf	btemp^0,c
  7092  011536  0EFE               	movlw	-2
  7093  011538  0060  F0D7  FFE3   	movff	btemp,plusw1
  7094  01153E  6A35               	clrf	btemp^0,c
  7095  011540  0EFF               	movlw	-1
  7096  011542  50E3               	movf	plusw1,w,c
  7097  011544  2035               	addwfc	btemp^0,w,c
  7098  011546  6E35               	movwf	btemp^0,c
  7099  011548  0EFF               	movlw	-1
  7100  01154A  0060  F0D7  FFE3   	movff	btemp,plusw1
  7101  011550                     l5901:
  7102                           
  7103                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  7104                           ;stkvar	_p @ sp[(-17)+9]
  7105                           ;stkvar	_i @ sp[(-17)+15]
  7106  011550  50E1               	movf	fsr1l,w,c
  7107  011552  0FFE               	addlw	-2
  7108  011554  6ED9               	movwf	fsr2l,c
  7109  011556  50E2               	movf	fsr1h,w,c
  7110  011558  6EDA               	movwf	fsr2h,c
  7111  01155A  0EFF               	movlw	255
  7112  01155C  22DA               	addwfc	fsr2h,f,c
  7113  01155E  0EF8               	movlw	-8
  7114  011560  50E3               	movf	plusw1,w,c
  7115  011562  5CDE               	subwf	postinc2,w,c
  7116  011564  50DE               	movf	postinc2,w,c
  7117  011566  0A80               	xorlw	128
  7118  011568  6E35               	movwf	btemp^0,c
  7119  01156A  0EF9               	movlw	-7
  7120  01156C  50E3               	movf	plusw1,w,c
  7121  01156E  0A80               	xorlw	128
  7122  011570  5835               	subwfb	btemp^0,w,c
  7123  011572  A0D8               	btfss	status,0,c
  7124  011574  D7A8               	goto	l5895
  7125                           
  7126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  7127  011576  B022               	btfsc	_flags^0,0,c
  7128  011578  D01F               	goto	l5909
  7129  01157A  D031               	goto	u3830
  7130  01157C                     l5905:
  7131                           
  7132                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  7133                           ;stkvar	_fp @ sp[(-17)+-2]
  7134  01157C  0EED               	movlw	-19
  7135  01157E  006F FF8F FFE6     	movff	plusw1,postinc1
  7136  011584  006F FF8F FFE6     	movff	plusw1,postinc1
  7137  01158A  0E20               	movlw	32
  7138  01158C  6EE6               	movwf	postinc1,c
  7139  01158E  0E00               	movlw	0
  7140  011590  6EE6               	movwf	postinc1,c
  7141  011592  ECFC  F08E         	call	_fputc	;wreg free
  7142                           
  7143                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
  7144                           ;stkvar	_l @ sp[(-17)+7]
  7145  011596  0EF6               	movlw	-10
  7146  011598  50E3               	movf	plusw1,w,c
  7147  01159A  0F01               	addlw	1
  7148  01159C  6E35               	movwf	btemp^0,c
  7149  01159E  0EF6               	movlw	-10
  7150  0115A0  0060  F0D7  FFE3   	movff	btemp,plusw1
  7151  0115A6  6A35               	clrf	btemp^0,c
  7152  0115A8  0EF7               	movlw	-9
  7153  0115AA  50E3               	movf	plusw1,w,c
  7154  0115AC  2035               	addwfc	btemp^0,w,c
  7155  0115AE  6E35               	movwf	btemp^0,c
  7156  0115B0  0EF7               	movlw	-9
  7157  0115B2  0060  F0D7  FFE3   	movff	btemp,plusw1
  7158  0115B8                     l5909:
  7159                           
  7160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  7161                           ;stkvar	_w @ sp[(-17)+13]
  7162                           ;stkvar	_l @ sp[(-17)+7]
  7163  0115B8  50E1               	movf	fsr1l,w,c
  7164  0115BA  0FF6               	addlw	-10
  7165  0115BC  6ED9               	movwf	fsr2l,c
  7166  0115BE  50E2               	movf	fsr1h,w,c
  7167  0115C0  6EDA               	movwf	fsr2h,c
  7168  0115C2  0EFF               	movlw	255
  7169  0115C4  22DA               	addwfc	fsr2h,f,c
  7170  0115C6  0EFC               	movlw	-4
  7171  0115C8  50E3               	movf	plusw1,w,c
  7172  0115CA  5CDE               	subwf	postinc2,w,c
  7173  0115CC  50DE               	movf	postinc2,w,c
  7174  0115CE  0A80               	xorlw	128
  7175  0115D0  6E35               	movwf	btemp^0,c
  7176  0115D2  0EFD               	movlw	-3
  7177  0115D4  50E3               	movf	plusw1,w,c
  7178  0115D6  0A80               	xorlw	128
  7179  0115D8  5835               	subwfb	btemp^0,w,c
  7180  0115DA  A0D8               	btfss	status,0,c
  7181  0115DC  D7CF               	goto	l5905
  7182  0115DE                     u3830:
  7183                           
  7184                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
  7185                           ;stkvar	_l @ sp[(-17)+7]
  7186  0115DE  0EF6               	movlw	-10
  7187  0115E0  006F FF8C  F035    	movff	plusw1,btemp
  7188  0115E6  0EF7               	movlw	-9
  7189  0115E8  006F FF8C  F036    	movff	plusw1,btemp+1
  7190                           
  7191                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  7192  0115EE  0EEB               	movlw	235
  7193  0115F0  26E1               	addwf	fsr1l,f,c
  7194  0115F2  0EFF               	movlw	255
  7195  0115F4  22E2               	addwfc	fsr1h,f,c
  7196  0115F6  0012               	return		;funcret
  7197  0115F8                     __end_of_stoa:
  7198                           	opt callstack 0
  7199                           
  7200 ;; *************** function _dtoa *****************
  7201 ;; Defined at:
  7202 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7203 ;; Parameters:    Size  Location     Type
  7204 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7205 ;;		 -> f(6), NULL(0), 
  7206 ;;  d               8  [STACK] long long 
  7207 ;; Auto vars:     Size  Location     Type
  7208 ;;  n               8  [STACK] long long 
  7209 ;;  i               2  [STACK] int 
  7210 ;;  s               2  [STACK] int 
  7211 ;;  w               2  [STACK] int 
  7212 ;;  p               2  [STACK] int 
  7213 ;; Return value:  Size  Location     Type
  7214 ;;                  2  [STACK] int 
  7215 ;; Registers used:
  7216 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  7217 ;; Tracked objects:
  7218 ;;		On entry : 0/3
  7219 ;;		On exit  : 0/0
  7220 ;;		Unchanged: 0/0
  7221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7226 ;;Total ram usage:        0 bytes
  7227 ;; Hardware stack levels used:    1
  7228 ;; Hardware stack levels required when called:   11
  7229 ;; This function calls:
  7230 ;;		___aodiv
  7231 ;;		___aomod
  7232 ;;		_abs
  7233 ;;		_pad
  7234 ;; This function is called by:
  7235 ;;		_vfpfcnvrt
  7236 ;; This function uses a reentrant model
  7237 ;;
  7238                           
  7239                           	psect	text36
  7240  01052E                     __ptext36:
  7241                           	opt callstack 0
  7242  01052E                     _dtoa:
  7243                           	opt callstack 0
  7244                           
  7245                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  7246  01052E  0E12               	movlw	18
  7247  010530  26E1               	addwf	fsr1l,f,c
  7248  010532  0E00               	movlw	0
  7249  010534  22E2               	addwfc	fsr1h,f,c
  7250                           
  7251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
  7252                           ;stkvar	_d @ sp[(-18)+-10]
  7253                           
  7254                           ;incstack = 0
  7255  010536  0EE4               	movlw	228
  7256  010538  24E1               	addwf	fsr1l,w,c
  7257  01053A  6ED9               	movwf	fsr2l,c
  7258  01053C  0EFF               	movlw	255
  7259  01053E  20E2               	addwfc	fsr1h,w,c
  7260  010540  6EDA               	movwf	fsr2h,c
  7261                           
  7262                           ;stkvar	_n @ sp[(-18)+2]
  7263  010542  0E08               	movlw	8
  7264  010544  6E35               	movwf	btemp^0,c
  7265  010546  0EF0               	movlw	-16
  7266  010548                     us357999:
  7267  010548  006F FF7B FFE3     	movff	postinc2,plusw1
  7268  01054E  28E8               	incf	wreg,w,c
  7269  010550  2E35               	decfsz	btemp^0,f,c
  7270  010552  D7FA               	bra	us357999
  7271                           
  7272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  7273                           ;stkvar	_n @ sp[(-18)+2]
  7274  010554  0EF7               	movlw	-9
  7275  010556  AEE3               	btfss	plusw1,7,c
  7276  010558  D002               	goto	u3580
  7277  01055A  0E01               	movlw	1
  7278  01055C  D001               	goto	u3590
  7279  01055E                     u3580:
  7280  01055E  0E00               	movlw	0
  7281  010560                     u3590:
  7282  010560  6E3F               	movwf	(btemp+10)^0,c
  7283  010562  6A40               	clrf	(btemp+11)^0,c
  7284                           
  7285                           ;stkvar	_s @ sp[(-18)+12]
  7286  010564  0EFA               	movlw	-6
  7287  010566  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7288  01056C  0EFB               	movlw	-5
  7289  01056E  0060  F103  FFE3   	movff	btemp+11,plusw1
  7290                           
  7291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  7292                           ;stkvar	_s @ sp[(-18)+12]
  7293  010574  0EFA               	movlw	-6
  7294  010576  006F FF8C  F035    	movff	plusw1,btemp
  7295  01057C  0EFB               	movlw	-5
  7296  01057E  50E3               	movf	plusw1,w,c
  7297  010580  1035               	iorwf	btemp^0,w,c
  7298  010582  B4D8               	btfsc	status,2,c
  7299  010584  D025               	goto	u3610
  7300                           
  7301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  7302                           ;stkvar	_n @ sp[(-18)+2]
  7303                           ;stkvar	_n @ sp[(-18)+2]
  7304  010586  0EF0               	movlw	-16
  7305  010588  6CE3               	negf	plusw1,c
  7306  01058A  0EF1               	movlw	-15
  7307  01058C  1EE3               	comf	plusw1,f,c
  7308  01058E  0EF2               	movlw	-14
  7309  010590  1EE3               	comf	plusw1,f,c
  7310  010592  0EF3               	movlw	-13
  7311  010594  1EE3               	comf	plusw1,f,c
  7312  010596  0EF4               	movlw	-12
  7313  010598  1EE3               	comf	plusw1,f,c
  7314  01059A  0EF5               	movlw	-11
  7315  01059C  1EE3               	comf	plusw1,f,c
  7316  01059E  0EF6               	movlw	-10
  7317  0105A0  1EE3               	comf	plusw1,f,c
  7318  0105A2  0EF7               	movlw	-9
  7319  0105A4  1EE3               	comf	plusw1,f,c
  7320  0105A6  E314               	bnc	u3610
  7321  0105A8  0EF1               	movlw	-15
  7322  0105AA  2AE3               	incf	plusw1,f,c
  7323  0105AC  E311               	bnc	u3610
  7324  0105AE  0EF2               	movlw	-14
  7325  0105B0  2AE3               	incf	plusw1,f,c
  7326  0105B2  E30E               	bnc	u3610
  7327  0105B4  0EF3               	movlw	-13
  7328  0105B6  2AE3               	incf	plusw1,f,c
  7329  0105B8  E30B               	bnc	u3610
  7330  0105BA  0EF4               	movlw	-12
  7331  0105BC  2AE3               	incf	plusw1,f,c
  7332  0105BE  E308               	bnc	u3610
  7333  0105C0  0EF5               	movlw	-11
  7334  0105C2  2AE3               	incf	plusw1,f,c
  7335  0105C4  E305               	bnc	u3610
  7336  0105C6  0EF6               	movlw	-10
  7337  0105C8  2AE3               	incf	plusw1,f,c
  7338  0105CA  E302               	bnc	u3610
  7339  0105CC  0EF7               	movlw	-9
  7340  0105CE  2AE3               	incf	plusw1,f,c
  7341  0105D0                     u3610:
  7342                           
  7343                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  7344  0105D0  AE21               	btfss	(_prec+1)^0,7,c
  7345                           
  7346                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  7347  0105D2  9222               	bcf	_flags^0,1,c
  7348                           
  7349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  7350  0105D4  BE21               	btfsc	(_prec+1)^0,7,c
  7351  0105D6  D005               	goto	u3630
  7352  0105D8  5021               	movf	(_prec+1)^0,w,c
  7353  0105DA  E110               	bnz	l5813
  7354  0105DC  0420               	decf	_prec^0,w,c
  7355  0105DE  B0D8               	btfsc	status,0,c
  7356  0105E0  D00D               	goto	l5813
  7357  0105E2                     u3630:
  7358  0105E2  0E01               	movlw	1
  7359  0105E4  6E3F               	movwf	(btemp+10)^0,c
  7360  0105E6  0E00               	movlw	0
  7361  0105E8  6E40               	movwf	(btemp+11)^0,c
  7362                           
  7363                           ;stkvar	_p @ sp[(-18)+16]
  7364  0105EA  0EFE               	movlw	-2
  7365  0105EC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7366  0105F2  0EFF               	movlw	-1
  7367  0105F4  0060  F103  FFE3   	movff	btemp+11,plusw1
  7368  0105FA  D008               	goto	l1707
  7369  0105FC                     l5813:
  7370                           
  7371                           ;stkvar	_p @ sp[(-18)+16]
  7372  0105FC  0EFE               	movlw	-2
  7373  0105FE  0060  F083  FFE3   	movff	_prec,plusw1
  7374  010604  0EFF               	movlw	-1
  7375  010606  0060  F087  FFE3   	movff	_prec+1,plusw1
  7376  01060C                     l1707:
  7377                           
  7378                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
  7379                           ;stkvar	_w @ sp[(-18)+14]
  7380  01060C  0EFC               	movlw	-4
  7381  01060E  0060  F07B  FFE3   	movff	_width,plusw1
  7382  010614  0EFD               	movlw	-3
  7383  010616  0060  F07F  FFE3   	movff	_width+1,plusw1
  7384                           
  7385                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  7386                           ;stkvar	_s @ sp[(-18)+12]
  7387  01061C  0EFA               	movlw	-6
  7388  01061E  006F FF8C  F035    	movff	plusw1,btemp
  7389  010624  0EFB               	movlw	-5
  7390  010626  50E3               	movf	plusw1,w,c
  7391  010628  1035               	iorwf	btemp^0,w,c
  7392  01062A  A4D8               	btfss	status,2,c
  7393  01062C  D002               	goto	u3650
  7394  01062E  A422               	btfss	_flags^0,2,c
  7395  010630  D00A               	goto	l5821
  7396  010632                     u3650:
  7397                           
  7398                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
  7399                           ;stkvar	_w @ sp[(-18)+14]
  7400  010632  50E1               	movf	fsr1l,w,c
  7401  010634  0FFC               	addlw	-4
  7402  010636  6ED9               	movwf	fsr2l,c
  7403  010638  50E2               	movf	fsr1h,w,c
  7404  01063A  6EDA               	movwf	fsr2h,c
  7405  01063C  0EFF               	movlw	255
  7406  01063E  22DA               	addwfc	fsr2h,f,c
  7407  010640  06DE               	decf	postinc2,f,c
  7408  010642  0E00               	movlw	0
  7409  010644  5ADD               	subwfb	postdec2,f,c
  7410  010646                     l5821:
  7411                           
  7412                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  7413  010646  0E1F               	movlw	31
  7414  010648  6E3F               	movwf	(btemp+10)^0,c
  7415  01064A  0E00               	movlw	0
  7416  01064C  6E40               	movwf	(btemp+11)^0,c
  7417                           
  7418                           ;stkvar	_i @ sp[(-18)+10]
  7419  01064E  0EF8               	movlw	-8
  7420  010650  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7421  010656  0EF9               	movlw	-7
  7422  010658  0060  F103  FFE3   	movff	btemp+11,plusw1
  7423                           
  7424                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  7425  01065E  0100               	movlb	0	; () banked
  7426  010660  6BCC               	clrf	(_dbuf+31)& (0+255),b
  7427                           
  7428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7429  010662  D103               	goto	l5835
  7430  010664                     l5825:
  7431                           
  7432                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
  7433                           ;stkvar	_i @ sp[(-18)+10]
  7434  010664  50E1               	movf	fsr1l,w,c
  7435  010666  0FF8               	addlw	-8
  7436  010668  6ED9               	movwf	fsr2l,c
  7437  01066A  50E2               	movf	fsr1h,w,c
  7438  01066C  6EDA               	movwf	fsr2h,c
  7439  01066E  0EFF               	movlw	255
  7440  010670  22DA               	addwfc	fsr2h,f,c
  7441  010672  06DE               	decf	postinc2,f,c
  7442  010674  0E00               	movlw	0
  7443  010676  5ADD               	subwfb	postdec2,f,c
  7444                           
  7445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  7446  010678  0E0A               	movlw	10
  7447  01067A  6EE6               	movwf	postinc1,c
  7448  01067C  0E00               	movlw	0
  7449  01067E  6EE6               	movwf	postinc1,c
  7450  010680  0E00               	movlw	0
  7451  010682  6EE6               	movwf	postinc1,c
  7452  010684  0E00               	movlw	0
  7453  010686  6EE6               	movwf	postinc1,c
  7454  010688  0E00               	movlw	0
  7455  01068A  6EE6               	movwf	postinc1,c
  7456  01068C  0E00               	movlw	0
  7457  01068E  6EE6               	movwf	postinc1,c
  7458  010690  0E00               	movlw	0
  7459  010692  6EE6               	movwf	postinc1,c
  7460  010694  0E00               	movlw	0
  7461  010696  6EE6               	movwf	postinc1,c
  7462                           
  7463                           ;stkvar	_n @ sp[(-26)+2]
  7464  010698  50E1               	movf	fsr1l,w,c
  7465  01069A  0FE8               	addlw	-24
  7466  01069C  6ED9               	movwf	fsr2l,c
  7467  01069E  50E2               	movf	fsr1h,w,c
  7468  0106A0  6EDA               	movwf	fsr2h,c
  7469  0106A2  0EFF               	movlw	255
  7470  0106A4  22DA               	addwfc	fsr2h,f,c
  7471  0106A6  006F FF7B FFE6     	movff	postinc2,postinc1
  7472  0106AC  006F FF7B FFE6     	movff	postinc2,postinc1
  7473  0106B2  006F FF7B FFE6     	movff	postinc2,postinc1
  7474  0106B8  006F FF7B FFE6     	movff	postinc2,postinc1
  7475  0106BE  006F FF7B FFE6     	movff	postinc2,postinc1
  7476  0106C4  006F FF7B FFE6     	movff	postinc2,postinc1
  7477  0106CA  006F FF7B FFE6     	movff	postinc2,postinc1
  7478  0106D0  006F FF7B FFE6     	movff	postinc2,postinc1
  7479  0106D6  EC3C  F08C         	call	___aomod	;wreg free
  7480  0106DA  52E5               	movf	postdec1,f,c
  7481  0106DC  006F FF9C  F04C    	movff	indf1,btemp+23
  7482  0106E2  52E5               	movf	postdec1,f,c
  7483  0106E4  006F FF9C  F04B    	movff	indf1,btemp+22
  7484  0106EA  52E5               	movf	postdec1,f,c
  7485  0106EC  006F FF9C  F04A    	movff	indf1,btemp+21
  7486  0106F2  52E5               	movf	postdec1,f,c
  7487  0106F4  006F FF9C  F049    	movff	indf1,btemp+20
  7488  0106FA  52E5               	movf	postdec1,f,c
  7489  0106FC  006F FF9C  F048    	movff	indf1,btemp+19
  7490  010702  52E5               	movf	postdec1,f,c
  7491  010704  006F FF9C  F047    	movff	indf1,btemp+18
  7492  01070A  52E5               	movf	postdec1,f,c
  7493  01070C  006F FF9C  F046    	movff	indf1,btemp+17
  7494  010712  52E5               	movf	postdec1,f,c
  7495  010714  006F FF9C  F045    	movff	indf1,btemp+16
  7496  01071A  0EF8               	movlw	248
  7497  01071C  26E1               	addwf	fsr1l,f,c
  7498  01071E  0EFF               	movlw	255
  7499  010720  22E2               	addwfc	fsr1h,f,c
  7500  010722  0060  F114  F03F   	movff	btemp+16,btemp+10
  7501  010728  0060  F118  F040   	movff	btemp+17,btemp+11
  7502  01072E  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  7503  010734  0060  F103  FFE6   	movff	btemp+11,postinc1
  7504  01073A  EC83  F097         	call	_abs	;wreg free
  7505  01073E  0E30               	movlw	48
  7506  010740  2635               	addwf	btemp^0,f,c
  7507                           
  7508                           ;stkvar	_i @ sp[(-18)+10]
  7509  010742  0EF8               	movlw	-8
  7510  010744  006F FF8C  F040    	movff	plusw1,btemp+11
  7511  01074A  5040               	movf	(btemp+11)^0,w,c
  7512  01074C  0FAD               	addlw	low _dbuf
  7513  01074E  6ED9               	movwf	fsr2l,c
  7514  010750  6ADA               	clrf	fsr2h,c
  7515  010752  0060  F0D7  FFDF   	movff	btemp,indf2
  7516                           
  7517                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
  7518                           ;stkvar	_p @ sp[(-18)+16]
  7519  010758  50E1               	movf	fsr1l,w,c
  7520  01075A  0FFE               	addlw	-2
  7521  01075C  6ED9               	movwf	fsr2l,c
  7522  01075E  50E2               	movf	fsr1h,w,c
  7523  010760  6EDA               	movwf	fsr2h,c
  7524  010762  0EFF               	movlw	255
  7525  010764  22DA               	addwfc	fsr2h,f,c
  7526  010766  06DE               	decf	postinc2,f,c
  7527  010768  0E00               	movlw	0
  7528  01076A  5ADD               	subwfb	postdec2,f,c
  7529                           
  7530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
  7531                           ;stkvar	_w @ sp[(-18)+14]
  7532  01076C  50E1               	movf	fsr1l,w,c
  7533  01076E  0FFC               	addlw	-4
  7534  010770  6ED9               	movwf	fsr2l,c
  7535  010772  50E2               	movf	fsr1h,w,c
  7536  010774  6EDA               	movwf	fsr2h,c
  7537  010776  0EFF               	movlw	255
  7538  010778  22DA               	addwfc	fsr2h,f,c
  7539  01077A  06DE               	decf	postinc2,f,c
  7540  01077C  0E00               	movlw	0
  7541  01077E  5ADD               	subwfb	postdec2,f,c
  7542                           
  7543                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  7544  010780  0E0A               	movlw	10
  7545  010782  6EE6               	movwf	postinc1,c
  7546  010784  0E00               	movlw	0
  7547  010786  6EE6               	movwf	postinc1,c
  7548  010788  0E00               	movlw	0
  7549  01078A  6EE6               	movwf	postinc1,c
  7550  01078C  0E00               	movlw	0
  7551  01078E  6EE6               	movwf	postinc1,c
  7552  010790  0E00               	movlw	0
  7553  010792  6EE6               	movwf	postinc1,c
  7554  010794  0E00               	movlw	0
  7555  010796  6EE6               	movwf	postinc1,c
  7556  010798  0E00               	movlw	0
  7557  01079A  6EE6               	movwf	postinc1,c
  7558  01079C  0E00               	movlw	0
  7559  01079E  6EE6               	movwf	postinc1,c
  7560                           
  7561                           ;stkvar	_n @ sp[(-26)+2]
  7562  0107A0  50E1               	movf	fsr1l,w,c
  7563  0107A2  0FE8               	addlw	-24
  7564  0107A4  6ED9               	movwf	fsr2l,c
  7565  0107A6  50E2               	movf	fsr1h,w,c
  7566  0107A8  6EDA               	movwf	fsr2h,c
  7567  0107AA  0EFF               	movlw	255
  7568  0107AC  22DA               	addwfc	fsr2h,f,c
  7569  0107AE  006F FF7B FFE6     	movff	postinc2,postinc1
  7570  0107B4  006F FF7B FFE6     	movff	postinc2,postinc1
  7571  0107BA  006F FF7B FFE6     	movff	postinc2,postinc1
  7572  0107C0  006F FF7B FFE6     	movff	postinc2,postinc1
  7573  0107C6  006F FF7B FFE6     	movff	postinc2,postinc1
  7574  0107CC  006F FF7B FFE6     	movff	postinc2,postinc1
  7575  0107D2  006F FF7B FFE6     	movff	postinc2,postinc1
  7576  0107D8  006F FF7B FFE6     	movff	postinc2,postinc1
  7577  0107DE  ECFC  F08A         	call	___aodiv	;wreg free
  7578  0107E2  52E5               	movf	postdec1,f,c
  7579  0107E4  006F FF9C  F04C    	movff	indf1,btemp+23
  7580  0107EA  52E5               	movf	postdec1,f,c
  7581  0107EC  006F FF9C  F04B    	movff	indf1,btemp+22
  7582  0107F2  52E5               	movf	postdec1,f,c
  7583  0107F4  006F FF9C  F04A    	movff	indf1,btemp+21
  7584  0107FA  52E5               	movf	postdec1,f,c
  7585  0107FC  006F FF9C  F049    	movff	indf1,btemp+20
  7586  010802  52E5               	movf	postdec1,f,c
  7587  010804  006F FF9C  F048    	movff	indf1,btemp+19
  7588  01080A  52E5               	movf	postdec1,f,c
  7589  01080C  006F FF9C  F047    	movff	indf1,btemp+18
  7590  010812  52E5               	movf	postdec1,f,c
  7591  010814  006F FF9C  F046    	movff	indf1,btemp+17
  7592  01081A  52E5               	movf	postdec1,f,c
  7593  01081C  006F FF9C  F045    	movff	indf1,btemp+16
  7594  010822  0EF8               	movlw	248
  7595  010824  26E1               	addwf	fsr1l,f,c
  7596  010826  0EFF               	movlw	255
  7597  010828  22E2               	addwfc	fsr1h,f,c
  7598                           
  7599                           ;stkvar	_n @ sp[(-18)+2]
  7600  01082A  0EF0               	movlw	-16
  7601  01082C  0060  F117  FFE3   	movff	btemp+16,plusw1
  7602  010832  0EF1               	movlw	-15
  7603  010834  0060  F11B  FFE3   	movff	btemp+17,plusw1
  7604  01083A  0EF2               	movlw	-14
  7605  01083C  0060  F11F  FFE3   	movff	btemp+18,plusw1
  7606  010842  0EF3               	movlw	-13
  7607  010844  0060  F123  FFE3   	movff	btemp+19,plusw1
  7608  01084A  0EF4               	movlw	-12
  7609  01084C  0060  F127  FFE3   	movff	btemp+20,plusw1
  7610  010852  0EF5               	movlw	-11
  7611  010854  0060  F12B  FFE3   	movff	btemp+21,plusw1
  7612  01085A  0EF6               	movlw	-10
  7613  01085C  0060  F12F  FFE3   	movff	btemp+22,plusw1
  7614  010862  0EF7               	movlw	-9
  7615  010864  0060  F133  FFE3   	movff	btemp+23,plusw1
  7616  01086A                     l5835:
  7617                           
  7618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7619                           ;stkvar	_i @ sp[(-18)+10]
  7620  01086A  0EF9               	movlw	-7
  7621  01086C  BEE3               	btfsc	plusw1,7,c
  7622  01086E  D036               	goto	u3700
  7623  010870  0EF9               	movlw	-7
  7624  010872  50E3               	movf	plusw1,w,c
  7625  010874  E104               	bnz	u3660
  7626  010876  0EF8               	movlw	-8
  7627  010878  04E3               	decf	plusw1,w,c
  7628  01087A  A0D8               	btfss	status,0,c
  7629  01087C  D02F               	goto	u3700
  7630  01087E                     u3660:
  7631                           
  7632                           ;stkvar	_n @ sp[(-18)+2]
  7633  01087E  0EF0               	movlw	-16
  7634  010880  50E3               	movf	plusw1,w,c
  7635  010882  E115               	bnz	u3671
  7636  010884  0EF1               	movlw	-15
  7637  010886  50E3               	movf	plusw1,w,c
  7638  010888  E112               	bnz	u3671
  7639  01088A  0EF2               	movlw	-14
  7640  01088C  50E3               	movf	plusw1,w,c
  7641  01088E  E10F               	bnz	u3671
  7642  010890  0EF3               	movlw	-13
  7643  010892  50E3               	movf	plusw1,w,c
  7644  010894  E10C               	bnz	u3671
  7645  010896  0EF4               	movlw	-12
  7646  010898  50E3               	movf	plusw1,w,c
  7647  01089A  E109               	bnz	u3671
  7648  01089C  0EF5               	movlw	-11
  7649  01089E  50E3               	movf	plusw1,w,c
  7650  0108A0  E106               	bnz	u3671
  7651  0108A2  0EF6               	movlw	-10
  7652  0108A4  50E3               	movf	plusw1,w,c
  7653  0108A6  E103               	bnz	u3671
  7654  0108A8  0EF7               	movlw	-9
  7655  0108AA  50E3               	movf	plusw1,w,c
  7656  0108AC  A4D8               	btfss	status,2,c
  7657  0108AE                     u3671:
  7658  0108AE  D6DA               	goto	l5825
  7659                           
  7660                           ;stkvar	_p @ sp[(-18)+16]
  7661  0108B0  0EFF               	movlw	-1
  7662  0108B2  BEE3               	btfsc	plusw1,7,c
  7663  0108B4  D007               	goto	u3680
  7664  0108B6  0EFF               	movlw	-1
  7665  0108B8  50E3               	movf	plusw1,w,c
  7666  0108BA  E103               	bnz	u3681
  7667  0108BC  0EFE               	movlw	-2
  7668  0108BE  04E3               	decf	plusw1,w,c
  7669  0108C0  B0D8               	btfsc	status,0,c
  7670  0108C2                     u3681:
  7671  0108C2  D6D0               	goto	l5825
  7672  0108C4                     u3680:
  7673                           
  7674                           ;stkvar	_w @ sp[(-18)+14]
  7675  0108C4  0EFD               	movlw	-3
  7676  0108C6  BEE3               	btfsc	plusw1,7,c
  7677  0108C8  D009               	goto	u3700
  7678  0108CA  0EFD               	movlw	-3
  7679  0108CC  50E3               	movf	plusw1,w,c
  7680  0108CE  E104               	bnz	u3690
  7681  0108D0  0EFC               	movlw	-4
  7682  0108D2  04E3               	decf	plusw1,w,c
  7683  0108D4  A0D8               	btfss	status,0,c
  7684  0108D6  D002               	goto	u3700
  7685  0108D8                     u3690:
  7686  0108D8  B222               	btfsc	_flags^0,1,c
  7687  0108DA  D6C4               	goto	l5825
  7688  0108DC                     u3700:
  7689                           
  7690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  7691                           ;stkvar	_s @ sp[(-18)+12]
  7692  0108DC  0EFA               	movlw	-6
  7693  0108DE  006F FF8C  F035    	movff	plusw1,btemp
  7694  0108E4  0EFB               	movlw	-5
  7695  0108E6  50E3               	movf	plusw1,w,c
  7696  0108E8  1035               	iorwf	btemp^0,w,c
  7697  0108EA  A4D8               	btfss	status,2,c
  7698  0108EC  D002               	goto	u3720
  7699  0108EE  A422               	btfss	_flags^0,2,c
  7700  0108F0  D02D               	goto	l5859
  7701  0108F2                     u3720:
  7702                           
  7703                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
  7704                           ;stkvar	_i @ sp[(-18)+10]
  7705  0108F2  50E1               	movf	fsr1l,w,c
  7706  0108F4  0FF8               	addlw	-8
  7707  0108F6  6ED9               	movwf	fsr2l,c
  7708  0108F8  50E2               	movf	fsr1h,w,c
  7709  0108FA  6EDA               	movwf	fsr2h,c
  7710  0108FC  0EFF               	movlw	255
  7711  0108FE  22DA               	addwfc	fsr2h,f,c
  7712  010900  06DE               	decf	postinc2,f,c
  7713  010902  0E00               	movlw	0
  7714  010904  5ADD               	subwfb	postdec2,f,c
  7715                           
  7716                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  7717                           ;stkvar	_s @ sp[(-18)+12]
  7718  010906  0EFA               	movlw	-6
  7719  010908  006F FF8C  F035    	movff	plusw1,btemp
  7720  01090E  0EFB               	movlw	-5
  7721  010910  50E3               	movf	plusw1,w,c
  7722  010912  1035               	iorwf	btemp^0,w,c
  7723  010914  A4D8               	btfss	status,2,c
  7724  010916  D002               	goto	l5855
  7725  010918  0E2B               	movlw	43
  7726  01091A  D001               	goto	L4
  7727  01091C                     l5855:
  7728  01091C  0E2D               	movlw	45
  7729  01091E                     L4:
  7730  01091E  6E3F               	movwf	(btemp+10)^0,c
  7731  010920  0E00               	movlw	0
  7732  010922  6E40               	movwf	(btemp+11)^0,c
  7733                           
  7734                           ;stkvar	_dtoa$3984 @ sp[(-18)+0]
  7735  010924  0EEE               	movlw	-18
  7736  010926  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7737  01092C  0EEF               	movlw	-17
  7738  01092E  0060  F103  FFE3   	movff	btemp+11,plusw1
  7739                           
  7740                           ;stkvar	_dtoa$3984 @ sp[(-18)+0]
  7741                           ;stkvar	_i @ sp[(-18)+10]
  7742  010934  0EF8               	movlw	-8
  7743  010936  006F FF8C  F040    	movff	plusw1,btemp+11
  7744  01093C  5040               	movf	(btemp+11)^0,w,c
  7745  01093E  0FAD               	addlw	low _dbuf
  7746  010940  6ED9               	movwf	fsr2l,c
  7747  010942  6ADA               	clrf	fsr2h,c
  7748  010944  0EEE               	movlw	-18
  7749  010946  006F FF8F FFDF     	movff	plusw1,indf2
  7750  01094C                     l5859:
  7751                           
  7752                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  7753                           ;stkvar	_w @ sp[(-18)+14]
  7754  01094C  0EFC               	movlw	-4
  7755  01094E  006F FF8F FFE6     	movff	plusw1,postinc1
  7756  010954  006F FF8F FFE6     	movff	plusw1,postinc1
  7757                           
  7758                           ;stkvar	_i @ sp[(-20)+10]
  7759  01095A  0EF6               	movlw	-10
  7760  01095C  006F FF8C  F040    	movff	plusw1,btemp+11
  7761  010962  5040               	movf	(btemp+11)^0,w,c
  7762  010964  0FAD               	addlw	low _dbuf
  7763  010966  6EE6               	movwf	postinc1,c
  7764                           
  7765                           ;stkvar	_fp @ sp[(-21)+-2]
  7766  010968  0EE9               	movlw	-23
  7767  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
  7768  010970  006F FF8F FFE6     	movff	plusw1,postinc1
  7769  010976  EC9A  F090         	call	_pad	;wreg free
  7770                           
  7771                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
  7772  01097A  0EE4               	movlw	228
  7773  01097C  26E1               	addwf	fsr1l,f,c
  7774  01097E  0EFF               	movlw	255
  7775  010980  22E2               	addwfc	fsr1h,f,c
  7776  010982  0012               	return		;funcret
  7777  010984                     __end_of_dtoa:
  7778                           	opt callstack 0
  7779                           
  7780 ;; *************** function _abs *****************
  7781 ;; Defined at:
  7782 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
  7783 ;; Parameters:    Size  Location     Type
  7784 ;;  a               2  [STACK] int 
  7785 ;; Auto vars:     Size  Location     Type
  7786 ;;		None
  7787 ;; Return value:  Size  Location     Type
  7788 ;;                  2  [STACK] int 
  7789 ;; Registers used:
  7790 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  7791 ;; Tracked objects:
  7792 ;;		On entry : 0/0
  7793 ;;		On exit  : 0/0
  7794 ;;		Unchanged: 0/0
  7795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7800 ;;Total ram usage:        0 bytes
  7801 ;; Hardware stack levels used:    1
  7802 ;; Hardware stack levels required when called:    6
  7803 ;; This function calls:
  7804 ;;		Nothing
  7805 ;; This function is called by:
  7806 ;;		_dtoa
  7807 ;; This function uses a reentrant model
  7808 ;;
  7809                           
  7810                           	psect	text37
  7811  012F06                     __ptext37:
  7812                           	opt callstack 0
  7813  012F06                     _abs:
  7814                           	opt callstack 17
  7815                           
  7816                           ;stkvar	_a @ sp[(0)+-2]
  7817                           
  7818                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7819                           ;incstack = 0
  7820  012F06  0EFF               	movlw	-1
  7821  012F08  BEE3               	btfsc	plusw1,7,c
  7822  012F0A  D007               	goto	u1910
  7823  012F0C  0EFF               	movlw	-1
  7824  012F0E  50E3               	movf	plusw1,w,c
  7825  012F10  E112               	bnz	l4247
  7826  012F12  0EFE               	movlw	-2
  7827  012F14  04E3               	decf	plusw1,w,c
  7828  012F16  B0D8               	btfsc	status,0,c
  7829  012F18  D00E               	goto	l4247
  7830  012F1A                     u1910:
  7831                           
  7832                           ;stkvar	_a @ sp[(0)+-2]
  7833  012F1A  0EFE               	movlw	-2
  7834  012F1C  006F FF8C  F035    	movff	plusw1,btemp
  7835  012F22  1E35               	comf	btemp^0,f,c
  7836  012F24  0EFF               	movlw	-1
  7837  012F26  006F FF8C  F036    	movff	plusw1,btemp+1
  7838  012F2C  1E36               	comf	(btemp+1)^0,f,c
  7839  012F2E  2A35               	incf	btemp^0,f,c
  7840  012F30  B4D8               	btfsc	status,2,c
  7841  012F32  2A36               	incf	(btemp+1)^0,f,c
  7842  012F34  D008               	goto	l2478
  7843  012F36                     l4247:
  7844                           
  7845                           ;stkvar	_a @ sp[(0)+-2]
  7846  012F36  0EFE               	movlw	-2
  7847  012F38  006F FF8C  F035    	movff	plusw1,btemp
  7848  012F3E  0EFF               	movlw	-1
  7849  012F40  006F FF8C  F036    	movff	plusw1,btemp+1
  7850  012F46                     l2478:
  7851                           
  7852                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
  7853  012F46  52E5               	movf	postdec1,f,c
  7854  012F48  52E5               	movf	postdec1,f,c
  7855  012F4A  0012               	return		;funcret
  7856  012F4C                     __end_of_abs:
  7857                           	opt callstack 0
  7858                           
  7859 ;; *************** function ___aomod *****************
  7860 ;; Defined at:
  7861 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
  7862 ;; Parameters:    Size  Location     Type
  7863 ;;  dividend        8  [STACK] long long 
  7864 ;;  divisor         8  [STACK] long long 
  7865 ;; Auto vars:     Size  Location     Type
  7866 ;;  sign            1  [STACK] unsigned char 
  7867 ;;  counter         1  [STACK] unsigned char 
  7868 ;; Return value:  Size  Location     Type
  7869 ;;                  8  [STACK] long long 
  7870 ;; Registers used:
  7871 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  7872 ;; Tracked objects:
  7873 ;;		On entry : 0/0
  7874 ;;		On exit  : 0/0
  7875 ;;		Unchanged: 0/0
  7876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7881 ;;Total ram usage:        0 bytes
  7882 ;; Hardware stack levels used:    1
  7883 ;; Hardware stack levels required when called:    6
  7884 ;; This function calls:
  7885 ;;		Nothing
  7886 ;; This function is called by:
  7887 ;;		_dtoa
  7888 ;; This function uses a reentrant model
  7889 ;;
  7890                           
  7891                           	psect	text38
  7892  011878                     __ptext38:
  7893                           	opt callstack 0
  7894  011878                     ___aomod:
  7895                           	opt callstack 0
  7896                           
  7897                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
  7898  011878  52E6               	movf	postinc1,f,c
  7899  01187A  52E6               	movf	postinc1,f,c
  7900                           
  7901                           ;stkvar	_sign @ sp[(-2)+0]
  7902                           
  7903                           ;incstack = 0
  7904  01187C  0EFE               	movlw	-2
  7905  01187E  6AE3               	clrf	plusw1,c
  7906                           
  7907                           ;stkvar	_dividend @ sp[(-2)+-8]
  7908  011880  0EFD               	movlw	-3
  7909  011882  AEE3               	btfss	plusw1,7,c
  7910  011884  D028               	goto	l4325
  7911                           
  7912                           ;stkvar	_dividend @ sp[(-2)+-8]
  7913                           ;stkvar	_dividend @ sp[(-2)+-8]
  7914  011886  0EF6               	movlw	-10
  7915  011888  6CE3               	negf	plusw1,c
  7916  01188A  0EF7               	movlw	-9
  7917  01188C  1EE3               	comf	plusw1,f,c
  7918  01188E  0EF8               	movlw	-8
  7919  011890  1EE3               	comf	plusw1,f,c
  7920  011892  0EF9               	movlw	-7
  7921  011894  1EE3               	comf	plusw1,f,c
  7922  011896  0EFA               	movlw	-6
  7923  011898  1EE3               	comf	plusw1,f,c
  7924  01189A  0EFB               	movlw	-5
  7925  01189C  1EE3               	comf	plusw1,f,c
  7926  01189E  0EFC               	movlw	-4
  7927  0118A0  1EE3               	comf	plusw1,f,c
  7928  0118A2  0EFD               	movlw	-3
  7929  0118A4  1EE3               	comf	plusw1,f,c
  7930  0118A6  E314               	bnc	u2120
  7931  0118A8  0EF7               	movlw	-9
  7932  0118AA  2AE3               	incf	plusw1,f,c
  7933  0118AC  E311               	bnc	u2120
  7934  0118AE  0EF8               	movlw	-8
  7935  0118B0  2AE3               	incf	plusw1,f,c
  7936  0118B2  E30E               	bnc	u2120
  7937  0118B4  0EF9               	movlw	-7
  7938  0118B6  2AE3               	incf	plusw1,f,c
  7939  0118B8  E30B               	bnc	u2120
  7940  0118BA  0EFA               	movlw	-6
  7941  0118BC  2AE3               	incf	plusw1,f,c
  7942  0118BE  E308               	bnc	u2120
  7943  0118C0  0EFB               	movlw	-5
  7944  0118C2  2AE3               	incf	plusw1,f,c
  7945  0118C4  E305               	bnc	u2120
  7946  0118C6  0EFC               	movlw	-4
  7947  0118C8  2AE3               	incf	plusw1,f,c
  7948  0118CA  E302               	bnc	u2120
  7949  0118CC  0EFD               	movlw	-3
  7950  0118CE  2AE3               	incf	plusw1,f,c
  7951  0118D0                     u2120:
  7952                           
  7953                           ;stkvar	_sign @ sp[(-2)+0]
  7954  0118D0  0EFE               	movlw	-2
  7955  0118D2  6AE3               	clrf	plusw1,c
  7956  0118D4  2AE3               	incf	plusw1,f,c
  7957  0118D6                     l4325:
  7958                           
  7959                           ;stkvar	_divisor @ sp[(-2)+-16]
  7960  0118D6  0EF5               	movlw	-11
  7961  0118D8  AEE3               	btfss	plusw1,7,c
  7962  0118DA  D025               	goto	u2140
  7963                           
  7964                           ;stkvar	_divisor @ sp[(-2)+-16]
  7965                           ;stkvar	_divisor @ sp[(-2)+-16]
  7966  0118DC  0EEE               	movlw	-18
  7967  0118DE  6CE3               	negf	plusw1,c
  7968  0118E0  0EEF               	movlw	-17
  7969  0118E2  1EE3               	comf	plusw1,f,c
  7970  0118E4  0EF0               	movlw	-16
  7971  0118E6  1EE3               	comf	plusw1,f,c
  7972  0118E8  0EF1               	movlw	-15
  7973  0118EA  1EE3               	comf	plusw1,f,c
  7974  0118EC  0EF2               	movlw	-14
  7975  0118EE  1EE3               	comf	plusw1,f,c
  7976  0118F0  0EF3               	movlw	-13
  7977  0118F2  1EE3               	comf	plusw1,f,c
  7978  0118F4  0EF4               	movlw	-12
  7979  0118F6  1EE3               	comf	plusw1,f,c
  7980  0118F8  0EF5               	movlw	-11
  7981  0118FA  1EE3               	comf	plusw1,f,c
  7982  0118FC  E314               	bnc	u2140
  7983  0118FE  0EEF               	movlw	-17
  7984  011900  2AE3               	incf	plusw1,f,c
  7985  011902  E311               	bnc	u2140
  7986  011904  0EF0               	movlw	-16
  7987  011906  2AE3               	incf	plusw1,f,c
  7988  011908  E30E               	bnc	u2140
  7989  01190A  0EF1               	movlw	-15
  7990  01190C  2AE3               	incf	plusw1,f,c
  7991  01190E  E30B               	bnc	u2140
  7992  011910  0EF2               	movlw	-14
  7993  011912  2AE3               	incf	plusw1,f,c
  7994  011914  E308               	bnc	u2140
  7995  011916  0EF3               	movlw	-13
  7996  011918  2AE3               	incf	plusw1,f,c
  7997  01191A  E305               	bnc	u2140
  7998  01191C  0EF4               	movlw	-12
  7999  01191E  2AE3               	incf	plusw1,f,c
  8000  011920  E302               	bnc	u2140
  8001  011922  0EF5               	movlw	-11
  8002  011924  2AE3               	incf	plusw1,f,c
  8003  011926                     u2140:
  8004                           
  8005                           ;stkvar	_divisor @ sp[(-2)+-16]
  8006  011926  0EEE               	movlw	-18
  8007  011928  50E3               	movf	plusw1,w,c
  8008  01192A  E116               	bnz	u2150
  8009  01192C  0EEF               	movlw	-17
  8010  01192E  50E3               	movf	plusw1,w,c
  8011  011930  E113               	bnz	u2150
  8012  011932  0EF0               	movlw	-16
  8013  011934  50E3               	movf	plusw1,w,c
  8014  011936  E110               	bnz	u2150
  8015  011938  0EF1               	movlw	-15
  8016  01193A  50E3               	movf	plusw1,w,c
  8017  01193C  E10D               	bnz	u2150
  8018  01193E  0EF2               	movlw	-14
  8019  011940  50E3               	movf	plusw1,w,c
  8020  011942  E10A               	bnz	u2150
  8021  011944  0EF3               	movlw	-13
  8022  011946  50E3               	movf	plusw1,w,c
  8023  011948  E107               	bnz	u2150
  8024  01194A  0EF4               	movlw	-12
  8025  01194C  50E3               	movf	plusw1,w,c
  8026  01194E  E104               	bnz	u2150
  8027  011950  0EF5               	movlw	-11
  8028  011952  50E3               	movf	plusw1,w,c
  8029  011954  B4D8               	btfsc	status,2,c
  8030  011956  D075               	goto	u2180
  8031  011958                     u2150:
  8032                           
  8033                           ;stkvar	_counter @ sp[(-2)+1]
  8034  011958  0EFF               	movlw	-1
  8035  01195A  6AE3               	clrf	plusw1,c
  8036  01195C  D012               	goto	L5
  8037  01195E                     l4333:
  8038                           
  8039                           ;stkvar	_divisor @ sp[(-2)+-16]
  8040  01195E  90D8               	bcf	status,0,c
  8041  011960  0EEE               	movlw	-18
  8042  011962  36E3               	rlcf	plusw1,f,c
  8043  011964  0EEF               	movlw	-17
  8044  011966  36E3               	rlcf	plusw1,f,c
  8045  011968  0EF0               	movlw	-16
  8046  01196A  36E3               	rlcf	plusw1,f,c
  8047  01196C  0EF1               	movlw	-15
  8048  01196E  36E3               	rlcf	plusw1,f,c
  8049  011970  0EF2               	movlw	-14
  8050  011972  36E3               	rlcf	plusw1,f,c
  8051  011974  0EF3               	movlw	-13
  8052  011976  36E3               	rlcf	plusw1,f,c
  8053  011978  0EF4               	movlw	-12
  8054  01197A  36E3               	rlcf	plusw1,f,c
  8055  01197C  0EF5               	movlw	-11
  8056  01197E  36E3               	rlcf	plusw1,f,c
  8057                           
  8058                           ;stkvar	_counter @ sp[(-2)+1]
  8059  011980  0EFF               	movlw	-1
  8060  011982                     L5:
  8061  011982  2AE3               	incf	plusw1,f,c
  8062                           
  8063                           ;stkvar	_divisor @ sp[(-2)+-16]
  8064  011984  0EF5               	movlw	-11
  8065  011986  AEE3               	btfss	plusw1,7,c
  8066  011988  D7EA               	goto	l4333
  8067  01198A                     u2160:
  8068                           
  8069                           ;stkvar	_divisor @ sp[(-2)+-16]
  8070                           ;stkvar	_dividend @ sp[(-2)+-8]
  8071  01198A  50E1               	movf	fsr1l,w,c
  8072  01198C  0FF6               	addlw	-10
  8073  01198E  6ED9               	movwf	fsr2l,c
  8074  011990  50E2               	movf	fsr1h,w,c
  8075  011992  6EDA               	movwf	fsr2h,c
  8076  011994  0EFF               	movlw	255
  8077  011996  22DA               	addwfc	fsr2h,f,c
  8078  011998  0EEE               	movlw	-18
  8079  01199A  50E3               	movf	plusw1,w,c
  8080  01199C  5CDE               	subwf	postinc2,w,c
  8081  01199E  0EEF               	movlw	-17
  8082  0119A0  50E3               	movf	plusw1,w,c
  8083  0119A2  58DE               	subwfb	postinc2,w,c
  8084  0119A4  0EF0               	movlw	-16
  8085  0119A6  50E3               	movf	plusw1,w,c
  8086  0119A8  58DE               	subwfb	postinc2,w,c
  8087  0119AA  0EF1               	movlw	-15
  8088  0119AC  50E3               	movf	plusw1,w,c
  8089  0119AE  58DE               	subwfb	postinc2,w,c
  8090  0119B0  0EF2               	movlw	-14
  8091  0119B2  50E3               	movf	plusw1,w,c
  8092  0119B4  58DE               	subwfb	postinc2,w,c
  8093  0119B6  0EF3               	movlw	-13
  8094  0119B8  50E3               	movf	plusw1,w,c
  8095  0119BA  58DE               	subwfb	postinc2,w,c
  8096  0119BC  0EF4               	movlw	-12
  8097  0119BE  50E3               	movf	plusw1,w,c
  8098  0119C0  58DE               	subwfb	postinc2,w,c
  8099  0119C2  0EF5               	movlw	-11
  8100  0119C4  50E3               	movf	plusw1,w,c
  8101  0119C6  58DE               	subwfb	postinc2,w,c
  8102  0119C8  A0D8               	btfss	status,0,c
  8103  0119CA  D01F               	goto	l4341
  8104                           
  8105                           ;stkvar	_divisor @ sp[(-2)+-16]
  8106                           ;stkvar	_dividend @ sp[(-2)+-8]
  8107  0119CC  50E1               	movf	fsr1l,w,c
  8108  0119CE  0FF6               	addlw	-10
  8109  0119D0  6ED9               	movwf	fsr2l,c
  8110  0119D2  50E2               	movf	fsr1h,w,c
  8111  0119D4  6EDA               	movwf	fsr2h,c
  8112  0119D6  0EFF               	movlw	255
  8113  0119D8  22DA               	addwfc	fsr2h,f,c
  8114  0119DA  0EEE               	movlw	-18
  8115  0119DC  50E3               	movf	plusw1,w,c
  8116  0119DE  5EDE               	subwf	postinc2,f,c
  8117  0119E0  0EEF               	movlw	-17
  8118  0119E2  50E3               	movf	plusw1,w,c
  8119  0119E4  5ADE               	subwfb	postinc2,f,c
  8120  0119E6  0EF0               	movlw	-16
  8121  0119E8  50E3               	movf	plusw1,w,c
  8122  0119EA  5ADE               	subwfb	postinc2,f,c
  8123  0119EC  0EF1               	movlw	-15
  8124  0119EE  50E3               	movf	plusw1,w,c
  8125  0119F0  5ADE               	subwfb	postinc2,f,c
  8126  0119F2  0EF2               	movlw	-14
  8127  0119F4  50E3               	movf	plusw1,w,c
  8128  0119F6  5ADE               	subwfb	postinc2,f,c
  8129  0119F8  0EF3               	movlw	-13
  8130  0119FA  50E3               	movf	plusw1,w,c
  8131  0119FC  5ADE               	subwfb	postinc2,f,c
  8132  0119FE  0EF4               	movlw	-12
  8133  011A00  50E3               	movf	plusw1,w,c
  8134  011A02  5ADE               	subwfb	postinc2,f,c
  8135  011A04  0EF5               	movlw	-11
  8136  011A06  50E3               	movf	plusw1,w,c
  8137  011A08  5ADE               	subwfb	postinc2,f,c
  8138  011A0A                     l4341:
  8139                           
  8140                           ;stkvar	_divisor @ sp[(-2)+-16]
  8141  011A0A  90D8               	bcf	status,0,c
  8142  011A0C  0EF5               	movlw	-11
  8143  011A0E  32E3               	rrcf	plusw1,f,c
  8144  011A10  0EF4               	movlw	-12
  8145  011A12  32E3               	rrcf	plusw1,f,c
  8146  011A14  0EF3               	movlw	-13
  8147  011A16  32E3               	rrcf	plusw1,f,c
  8148  011A18  0EF2               	movlw	-14
  8149  011A1A  32E3               	rrcf	plusw1,f,c
  8150  011A1C  0EF1               	movlw	-15
  8151  011A1E  32E3               	rrcf	plusw1,f,c
  8152  011A20  0EF0               	movlw	-16
  8153  011A22  32E3               	rrcf	plusw1,f,c
  8154  011A24  0EEF               	movlw	-17
  8155  011A26  32E3               	rrcf	plusw1,f,c
  8156  011A28  0EEE               	movlw	-18
  8157  011A2A  32E3               	rrcf	plusw1,f,c
  8158                           
  8159                           ;stkvar	_counter @ sp[(-2)+1]
  8160  011A2C  0EFF               	movlw	-1
  8161  011A2E  50E3               	movf	plusw1,w,c
  8162  011A30  6E35               	movwf	btemp^0,c
  8163  011A32  0E01               	movlw	1
  8164  011A34  5E35               	subwf	btemp^0,f,c
  8165  011A36  0EFF               	movlw	-1
  8166  011A38  0060  F0D7  FFE3   	movff	btemp,plusw1
  8167  011A3E  A4D8               	btfss	status,2,c
  8168  011A40  D7A4               	goto	u2160
  8169  011A42                     u2180:
  8170                           
  8171                           ;stkvar	_sign @ sp[(-2)+0]
  8172  011A42  0EFE               	movlw	-2
  8173  011A44  50E3               	movf	plusw1,w,c
  8174  011A46  B4D8               	btfsc	status,2,c
  8175  011A48  D025               	goto	u2200
  8176                           
  8177                           ;stkvar	_dividend @ sp[(-2)+-8]
  8178                           ;stkvar	_dividend @ sp[(-2)+-8]
  8179  011A4A  0EF6               	movlw	-10
  8180  011A4C  6CE3               	negf	plusw1,c
  8181  011A4E  0EF7               	movlw	-9
  8182  011A50  1EE3               	comf	plusw1,f,c
  8183  011A52  0EF8               	movlw	-8
  8184  011A54  1EE3               	comf	plusw1,f,c
  8185  011A56  0EF9               	movlw	-7
  8186  011A58  1EE3               	comf	plusw1,f,c
  8187  011A5A  0EFA               	movlw	-6
  8188  011A5C  1EE3               	comf	plusw1,f,c
  8189  011A5E  0EFB               	movlw	-5
  8190  011A60  1EE3               	comf	plusw1,f,c
  8191  011A62  0EFC               	movlw	-4
  8192  011A64  1EE3               	comf	plusw1,f,c
  8193  011A66  0EFD               	movlw	-3
  8194  011A68  1EE3               	comf	plusw1,f,c
  8195  011A6A  E314               	bnc	u2200
  8196  011A6C  0EF7               	movlw	-9
  8197  011A6E  2AE3               	incf	plusw1,f,c
  8198  011A70  E311               	bnc	u2200
  8199  011A72  0EF8               	movlw	-8
  8200  011A74  2AE3               	incf	plusw1,f,c
  8201  011A76  E30E               	bnc	u2200
  8202  011A78  0EF9               	movlw	-7
  8203  011A7A  2AE3               	incf	plusw1,f,c
  8204  011A7C  E30B               	bnc	u2200
  8205  011A7E  0EFA               	movlw	-6
  8206  011A80  2AE3               	incf	plusw1,f,c
  8207  011A82  E308               	bnc	u2200
  8208  011A84  0EFB               	movlw	-5
  8209  011A86  2AE3               	incf	plusw1,f,c
  8210  011A88  E305               	bnc	u2200
  8211  011A8A  0EFC               	movlw	-4
  8212  011A8C  2AE3               	incf	plusw1,f,c
  8213  011A8E  E302               	bnc	u2200
  8214  011A90  0EFD               	movlw	-3
  8215  011A92  2AE3               	incf	plusw1,f,c
  8216  011A94                     u2200:
  8217                           
  8218                           ;stkvar	_dividend @ sp[(-2)+-8]
  8219  011A94  0EF6               	movlw	246
  8220  011A96  24E1               	addwf	fsr1l,w,c
  8221  011A98  6ED9               	movwf	fsr2l,c
  8222  011A9A  0EFF               	movlw	255
  8223  011A9C  20E2               	addwfc	fsr1h,w,c
  8224  011A9E  6EDA               	movwf	fsr2h,c
  8225                           
  8226                           ;stkvar	?___aomod @ sp[(-2)+-8]
  8227  011AA0  0E08               	movlw	8
  8228  011AA2  6E35               	movwf	btemp^0,c
  8229  011AA4  0EF6               	movlw	-10
  8230  011AA6                     us221999:
  8231  011AA6  006F FF7B FFE3     	movff	postinc2,plusw1
  8232  011AAC  28E8               	incf	wreg,w,c
  8233  011AAE  2E35               	decfsz	btemp^0,f,c
  8234  011AB0  D7FA               	bra	us221999
  8235                           
  8236                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
  8237  011AB2  52E5               	movf	postdec1,f,c
  8238  011AB4  52E5               	movf	postdec1,f,c
  8239  011AB6  0012               	return		;funcret
  8240  011AB8                     __end_of___aomod:
  8241                           	opt callstack 0
  8242                           
  8243 ;; *************** function ___aodiv *****************
  8244 ;; Defined at:
  8245 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
  8246 ;; Parameters:    Size  Location     Type
  8247 ;;  dividend        8  [STACK] long long 
  8248 ;;  divisor         8  [STACK] long long 
  8249 ;; Auto vars:     Size  Location     Type
  8250 ;;  quotient        8  [STACK] long long 
  8251 ;;  sign            1  [STACK] unsigned char 
  8252 ;;  counter         1  [STACK] unsigned char 
  8253 ;; Return value:  Size  Location     Type
  8254 ;;                  8  [STACK] long long 
  8255 ;; Registers used:
  8256 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  8257 ;; Tracked objects:
  8258 ;;		On entry : 0/0
  8259 ;;		On exit  : 0/0
  8260 ;;		Unchanged: 0/0
  8261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8266 ;;Total ram usage:        0 bytes
  8267 ;; Hardware stack levels used:    1
  8268 ;; Hardware stack levels required when called:    6
  8269 ;; This function calls:
  8270 ;;		Nothing
  8271 ;; This function is called by:
  8272 ;;		_dtoa
  8273 ;; This function uses a reentrant model
  8274 ;;
  8275                           
  8276                           	psect	text39
  8277  0115F8                     __ptext39:
  8278                           	opt callstack 0
  8279  0115F8                     ___aodiv:
  8280                           	opt callstack 0
  8281                           
  8282                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
  8283  0115F8  0E0A               	movlw	10
  8284  0115FA  26E1               	addwf	fsr1l,f,c
  8285  0115FC  0E00               	movlw	0
  8286  0115FE  22E2               	addwfc	fsr1h,f,c
  8287                           
  8288                           ;stkvar	_sign @ sp[(-10)+8]
  8289                           
  8290                           ;incstack = 0
  8291  011600  0EFE               	movlw	-2
  8292  011602  6AE3               	clrf	plusw1,c
  8293                           
  8294                           ;stkvar	_divisor @ sp[(-10)+-16]
  8295  011604  0EED               	movlw	-19
  8296  011606  AEE3               	btfss	plusw1,7,c
  8297  011608  D028               	goto	l4281
  8298                           
  8299                           ;stkvar	_divisor @ sp[(-10)+-16]
  8300                           ;stkvar	_divisor @ sp[(-10)+-16]
  8301  01160A  0EE6               	movlw	-26
  8302  01160C  6CE3               	negf	plusw1,c
  8303  01160E  0EE7               	movlw	-25
  8304  011610  1EE3               	comf	plusw1,f,c
  8305  011612  0EE8               	movlw	-24
  8306  011614  1EE3               	comf	plusw1,f,c
  8307  011616  0EE9               	movlw	-23
  8308  011618  1EE3               	comf	plusw1,f,c
  8309  01161A  0EEA               	movlw	-22
  8310  01161C  1EE3               	comf	plusw1,f,c
  8311  01161E  0EEB               	movlw	-21
  8312  011620  1EE3               	comf	plusw1,f,c
  8313  011622  0EEC               	movlw	-20
  8314  011624  1EE3               	comf	plusw1,f,c
  8315  011626  0EED               	movlw	-19
  8316  011628  1EE3               	comf	plusw1,f,c
  8317  01162A  E314               	bnc	u2000
  8318  01162C  0EE7               	movlw	-25
  8319  01162E  2AE3               	incf	plusw1,f,c
  8320  011630  E311               	bnc	u2000
  8321  011632  0EE8               	movlw	-24
  8322  011634  2AE3               	incf	plusw1,f,c
  8323  011636  E30E               	bnc	u2000
  8324  011638  0EE9               	movlw	-23
  8325  01163A  2AE3               	incf	plusw1,f,c
  8326  01163C  E30B               	bnc	u2000
  8327  01163E  0EEA               	movlw	-22
  8328  011640  2AE3               	incf	plusw1,f,c
  8329  011642  E308               	bnc	u2000
  8330  011644  0EEB               	movlw	-21
  8331  011646  2AE3               	incf	plusw1,f,c
  8332  011648  E305               	bnc	u2000
  8333  01164A  0EEC               	movlw	-20
  8334  01164C  2AE3               	incf	plusw1,f,c
  8335  01164E  E302               	bnc	u2000
  8336  011650  0EED               	movlw	-19
  8337  011652  2AE3               	incf	plusw1,f,c
  8338  011654                     u2000:
  8339                           
  8340                           ;stkvar	_sign @ sp[(-10)+8]
  8341  011654  0EFE               	movlw	-2
  8342  011656  6AE3               	clrf	plusw1,c
  8343  011658  2AE3               	incf	plusw1,f,c
  8344  01165A                     l4281:
  8345                           
  8346                           ;stkvar	_dividend @ sp[(-10)+-8]
  8347  01165A  0EF5               	movlw	-11
  8348  01165C  AEE3               	btfss	plusw1,7,c
  8349  01165E  D027               	goto	l4287
  8350                           
  8351                           ;stkvar	_dividend @ sp[(-10)+-8]
  8352                           ;stkvar	_dividend @ sp[(-10)+-8]
  8353  011660  0EEE               	movlw	-18
  8354  011662  6CE3               	negf	plusw1,c
  8355  011664  0EEF               	movlw	-17
  8356  011666  1EE3               	comf	plusw1,f,c
  8357  011668  0EF0               	movlw	-16
  8358  01166A  1EE3               	comf	plusw1,f,c
  8359  01166C  0EF1               	movlw	-15
  8360  01166E  1EE3               	comf	plusw1,f,c
  8361  011670  0EF2               	movlw	-14
  8362  011672  1EE3               	comf	plusw1,f,c
  8363  011674  0EF3               	movlw	-13
  8364  011676  1EE3               	comf	plusw1,f,c
  8365  011678  0EF4               	movlw	-12
  8366  01167A  1EE3               	comf	plusw1,f,c
  8367  01167C  0EF5               	movlw	-11
  8368  01167E  1EE3               	comf	plusw1,f,c
  8369  011680  E314               	bnc	u2020
  8370  011682  0EEF               	movlw	-17
  8371  011684  2AE3               	incf	plusw1,f,c
  8372  011686  E311               	bnc	u2020
  8373  011688  0EF0               	movlw	-16
  8374  01168A  2AE3               	incf	plusw1,f,c
  8375  01168C  E30E               	bnc	u2020
  8376  01168E  0EF1               	movlw	-15
  8377  011690  2AE3               	incf	plusw1,f,c
  8378  011692  E30B               	bnc	u2020
  8379  011694  0EF2               	movlw	-14
  8380  011696  2AE3               	incf	plusw1,f,c
  8381  011698  E308               	bnc	u2020
  8382  01169A  0EF3               	movlw	-13
  8383  01169C  2AE3               	incf	plusw1,f,c
  8384  01169E  E305               	bnc	u2020
  8385  0116A0  0EF4               	movlw	-12
  8386  0116A2  2AE3               	incf	plusw1,f,c
  8387  0116A4  E302               	bnc	u2020
  8388  0116A6  0EF5               	movlw	-11
  8389  0116A8  2AE3               	incf	plusw1,f,c
  8390  0116AA                     u2020:
  8391                           
  8392                           ;stkvar	_sign @ sp[(-10)+8]
  8393  0116AA  0EFE               	movlw	-2
  8394  0116AC  70E3               	btg	plusw1,0,c
  8395  0116AE                     l4287:
  8396                           
  8397                           ;stkvar	_quotient @ sp[(-10)+0]
  8398  0116AE  0E07               	movlw	7
  8399  0116B0  6E35               	movwf	btemp^0,c
  8400  0116B2  0EF6               	movlw	-10
  8401  0116B4                     u2031:
  8402  0116B4  6AE3               	clrf	plusw1,c
  8403  0116B6  2AE8               	incf	wreg,f,c
  8404  0116B8  0635               	decf	btemp^0,f,c
  8405  0116BA  E2FC               	bc	u2031
  8406                           
  8407                           ;stkvar	_divisor @ sp[(-10)+-16]
  8408  0116BC  0EE6               	movlw	-26
  8409  0116BE  50E3               	movf	plusw1,w,c
  8410  0116C0  E116               	bnz	u2040
  8411  0116C2  0EE7               	movlw	-25
  8412  0116C4  50E3               	movf	plusw1,w,c
  8413  0116C6  E113               	bnz	u2040
  8414  0116C8  0EE8               	movlw	-24
  8415  0116CA  50E3               	movf	plusw1,w,c
  8416  0116CC  E110               	bnz	u2040
  8417  0116CE  0EE9               	movlw	-23
  8418  0116D0  50E3               	movf	plusw1,w,c
  8419  0116D2  E10D               	bnz	u2040
  8420  0116D4  0EEA               	movlw	-22
  8421  0116D6  50E3               	movf	plusw1,w,c
  8422  0116D8  E10A               	bnz	u2040
  8423  0116DA  0EEB               	movlw	-21
  8424  0116DC  50E3               	movf	plusw1,w,c
  8425  0116DE  E107               	bnz	u2040
  8426  0116E0  0EEC               	movlw	-20
  8427  0116E2  50E3               	movf	plusw1,w,c
  8428  0116E4  E104               	bnz	u2040
  8429  0116E6  0EED               	movlw	-19
  8430  0116E8  50E3               	movf	plusw1,w,c
  8431  0116EA  B4D8               	btfsc	status,2,c
  8432  0116EC  D088               	goto	u2070
  8433  0116EE                     u2040:
  8434                           
  8435                           ;stkvar	_counter @ sp[(-10)+9]
  8436  0116EE  0EFF               	movlw	-1
  8437  0116F0  6AE3               	clrf	plusw1,c
  8438  0116F2  D012               	goto	L6
  8439  0116F4                     l4293:
  8440                           
  8441                           ;stkvar	_divisor @ sp[(-10)+-16]
  8442  0116F4  90D8               	bcf	status,0,c
  8443  0116F6  0EE6               	movlw	-26
  8444  0116F8  36E3               	rlcf	plusw1,f,c
  8445  0116FA  0EE7               	movlw	-25
  8446  0116FC  36E3               	rlcf	plusw1,f,c
  8447  0116FE  0EE8               	movlw	-24
  8448  011700  36E3               	rlcf	plusw1,f,c
  8449  011702  0EE9               	movlw	-23
  8450  011704  36E3               	rlcf	plusw1,f,c
  8451  011706  0EEA               	movlw	-22
  8452  011708  36E3               	rlcf	plusw1,f,c
  8453  01170A  0EEB               	movlw	-21
  8454  01170C  36E3               	rlcf	plusw1,f,c
  8455  01170E  0EEC               	movlw	-20
  8456  011710  36E3               	rlcf	plusw1,f,c
  8457  011712  0EED               	movlw	-19
  8458  011714  36E3               	rlcf	plusw1,f,c
  8459                           
  8460                           ;stkvar	_counter @ sp[(-10)+9]
  8461  011716  0EFF               	movlw	-1
  8462  011718                     L6:
  8463  011718  2AE3               	incf	plusw1,f,c
  8464                           
  8465                           ;stkvar	_divisor @ sp[(-10)+-16]
  8466  01171A  0EED               	movlw	-19
  8467  01171C  AEE3               	btfss	plusw1,7,c
  8468  01171E  D7EA               	goto	l4293
  8469  011720                     u2050:
  8470                           
  8471                           ;stkvar	_quotient @ sp[(-10)+0]
  8472  011720  90D8               	bcf	status,0,c
  8473  011722  0EF6               	movlw	-10
  8474  011724  36E3               	rlcf	plusw1,f,c
  8475  011726  0EF7               	movlw	-9
  8476  011728  36E3               	rlcf	plusw1,f,c
  8477  01172A  0EF8               	movlw	-8
  8478  01172C  36E3               	rlcf	plusw1,f,c
  8479  01172E  0EF9               	movlw	-7
  8480  011730  36E3               	rlcf	plusw1,f,c
  8481  011732  0EFA               	movlw	-6
  8482  011734  36E3               	rlcf	plusw1,f,c
  8483  011736  0EFB               	movlw	-5
  8484  011738  36E3               	rlcf	plusw1,f,c
  8485  01173A  0EFC               	movlw	-4
  8486  01173C  36E3               	rlcf	plusw1,f,c
  8487  01173E  0EFD               	movlw	-3
  8488  011740  36E3               	rlcf	plusw1,f,c
  8489                           
  8490                           ;stkvar	_divisor @ sp[(-10)+-16]
  8491                           ;stkvar	_dividend @ sp[(-10)+-8]
  8492  011742  50E1               	movf	fsr1l,w,c
  8493  011744  0FEE               	addlw	-18
  8494  011746  6ED9               	movwf	fsr2l,c
  8495  011748  50E2               	movf	fsr1h,w,c
  8496  01174A  6EDA               	movwf	fsr2h,c
  8497  01174C  0EFF               	movlw	255
  8498  01174E  22DA               	addwfc	fsr2h,f,c
  8499  011750  0EE6               	movlw	-26
  8500  011752  50E3               	movf	plusw1,w,c
  8501  011754  5CDE               	subwf	postinc2,w,c
  8502  011756  0EE7               	movlw	-25
  8503  011758  50E3               	movf	plusw1,w,c
  8504  01175A  58DE               	subwfb	postinc2,w,c
  8505  01175C  0EE8               	movlw	-24
  8506  01175E  50E3               	movf	plusw1,w,c
  8507  011760  58DE               	subwfb	postinc2,w,c
  8508  011762  0EE9               	movlw	-23
  8509  011764  50E3               	movf	plusw1,w,c
  8510  011766  58DE               	subwfb	postinc2,w,c
  8511  011768  0EEA               	movlw	-22
  8512  01176A  50E3               	movf	plusw1,w,c
  8513  01176C  58DE               	subwfb	postinc2,w,c
  8514  01176E  0EEB               	movlw	-21
  8515  011770  50E3               	movf	plusw1,w,c
  8516  011772  58DE               	subwfb	postinc2,w,c
  8517  011774  0EEC               	movlw	-20
  8518  011776  50E3               	movf	plusw1,w,c
  8519  011778  58DE               	subwfb	postinc2,w,c
  8520  01177A  0EED               	movlw	-19
  8521  01177C  50E3               	movf	plusw1,w,c
  8522  01177E  58DE               	subwfb	postinc2,w,c
  8523  011780  A0D8               	btfss	status,0,c
  8524  011782  D021               	goto	l4305
  8525                           
  8526                           ;stkvar	_divisor @ sp[(-10)+-16]
  8527                           ;stkvar	_dividend @ sp[(-10)+-8]
  8528  011784  50E1               	movf	fsr1l,w,c
  8529  011786  0FEE               	addlw	-18
  8530  011788  6ED9               	movwf	fsr2l,c
  8531  01178A  50E2               	movf	fsr1h,w,c
  8532  01178C  6EDA               	movwf	fsr2h,c
  8533  01178E  0EFF               	movlw	255
  8534  011790  22DA               	addwfc	fsr2h,f,c
  8535  011792  0EE6               	movlw	-26
  8536  011794  50E3               	movf	plusw1,w,c
  8537  011796  5EDE               	subwf	postinc2,f,c
  8538  011798  0EE7               	movlw	-25
  8539  01179A  50E3               	movf	plusw1,w,c
  8540  01179C  5ADE               	subwfb	postinc2,f,c
  8541  01179E  0EE8               	movlw	-24
  8542  0117A0  50E3               	movf	plusw1,w,c
  8543  0117A2  5ADE               	subwfb	postinc2,f,c
  8544  0117A4  0EE9               	movlw	-23
  8545  0117A6  50E3               	movf	plusw1,w,c
  8546  0117A8  5ADE               	subwfb	postinc2,f,c
  8547  0117AA  0EEA               	movlw	-22
  8548  0117AC  50E3               	movf	plusw1,w,c
  8549  0117AE  5ADE               	subwfb	postinc2,f,c
  8550  0117B0  0EEB               	movlw	-21
  8551  0117B2  50E3               	movf	plusw1,w,c
  8552  0117B4  5ADE               	subwfb	postinc2,f,c
  8553  0117B6  0EEC               	movlw	-20
  8554  0117B8  50E3               	movf	plusw1,w,c
  8555  0117BA  5ADE               	subwfb	postinc2,f,c
  8556  0117BC  0EED               	movlw	-19
  8557  0117BE  50E3               	movf	plusw1,w,c
  8558  0117C0  5ADE               	subwfb	postinc2,f,c
  8559                           
  8560                           ;stkvar	_quotient @ sp[(-10)+0]
  8561  0117C2  0EF6               	movlw	-10
  8562  0117C4  80E3               	bsf	plusw1,0,c
  8563  0117C6                     l4305:
  8564                           
  8565                           ;stkvar	_divisor @ sp[(-10)+-16]
  8566  0117C6  90D8               	bcf	status,0,c
  8567  0117C8  0EED               	movlw	-19
  8568  0117CA  32E3               	rrcf	plusw1,f,c
  8569  0117CC  0EEC               	movlw	-20
  8570  0117CE  32E3               	rrcf	plusw1,f,c
  8571  0117D0  0EEB               	movlw	-21
  8572  0117D2  32E3               	rrcf	plusw1,f,c
  8573  0117D4  0EEA               	movlw	-22
  8574  0117D6  32E3               	rrcf	plusw1,f,c
  8575  0117D8  0EE9               	movlw	-23
  8576  0117DA  32E3               	rrcf	plusw1,f,c
  8577  0117DC  0EE8               	movlw	-24
  8578  0117DE  32E3               	rrcf	plusw1,f,c
  8579  0117E0  0EE7               	movlw	-25
  8580  0117E2  32E3               	rrcf	plusw1,f,c
  8581  0117E4  0EE6               	movlw	-26
  8582  0117E6  32E3               	rrcf	plusw1,f,c
  8583                           
  8584                           ;stkvar	_counter @ sp[(-10)+9]
  8585  0117E8  0EFF               	movlw	-1
  8586  0117EA  50E3               	movf	plusw1,w,c
  8587  0117EC  6E35               	movwf	btemp^0,c
  8588  0117EE  0E01               	movlw	1
  8589  0117F0  5E35               	subwf	btemp^0,f,c
  8590  0117F2  0EFF               	movlw	-1
  8591  0117F4  0060  F0D7  FFE3   	movff	btemp,plusw1
  8592  0117FA  A4D8               	btfss	status,2,c
  8593  0117FC  D791               	goto	u2050
  8594  0117FE                     u2070:
  8595                           
  8596                           ;stkvar	_sign @ sp[(-10)+8]
  8597  0117FE  0EFE               	movlw	-2
  8598  011800  50E3               	movf	plusw1,w,c
  8599  011802  B4D8               	btfsc	status,2,c
  8600  011804  D025               	goto	u2090
  8601                           
  8602                           ;stkvar	_quotient @ sp[(-10)+0]
  8603                           ;stkvar	_quotient @ sp[(-10)+0]
  8604  011806  0EF6               	movlw	-10
  8605  011808  6CE3               	negf	plusw1,c
  8606  01180A  0EF7               	movlw	-9
  8607  01180C  1EE3               	comf	plusw1,f,c
  8608  01180E  0EF8               	movlw	-8
  8609  011810  1EE3               	comf	plusw1,f,c
  8610  011812  0EF9               	movlw	-7
  8611  011814  1EE3               	comf	plusw1,f,c
  8612  011816  0EFA               	movlw	-6
  8613  011818  1EE3               	comf	plusw1,f,c
  8614  01181A  0EFB               	movlw	-5
  8615  01181C  1EE3               	comf	plusw1,f,c
  8616  01181E  0EFC               	movlw	-4
  8617  011820  1EE3               	comf	plusw1,f,c
  8618  011822  0EFD               	movlw	-3
  8619  011824  1EE3               	comf	plusw1,f,c
  8620  011826  E314               	bnc	u2090
  8621  011828  0EF7               	movlw	-9
  8622  01182A  2AE3               	incf	plusw1,f,c
  8623  01182C  E311               	bnc	u2090
  8624  01182E  0EF8               	movlw	-8
  8625  011830  2AE3               	incf	plusw1,f,c
  8626  011832  E30E               	bnc	u2090
  8627  011834  0EF9               	movlw	-7
  8628  011836  2AE3               	incf	plusw1,f,c
  8629  011838  E30B               	bnc	u2090
  8630  01183A  0EFA               	movlw	-6
  8631  01183C  2AE3               	incf	plusw1,f,c
  8632  01183E  E308               	bnc	u2090
  8633  011840  0EFB               	movlw	-5
  8634  011842  2AE3               	incf	plusw1,f,c
  8635  011844  E305               	bnc	u2090
  8636  011846  0EFC               	movlw	-4
  8637  011848  2AE3               	incf	plusw1,f,c
  8638  01184A  E302               	bnc	u2090
  8639  01184C  0EFD               	movlw	-3
  8640  01184E  2AE3               	incf	plusw1,f,c
  8641  011850                     u2090:
  8642                           
  8643                           ;stkvar	_quotient @ sp[(-10)+0]
  8644  011850  0EF6               	movlw	246
  8645  011852  24E1               	addwf	fsr1l,w,c
  8646  011854  6ED9               	movwf	fsr2l,c
  8647  011856  0EFF               	movlw	255
  8648  011858  20E2               	addwfc	fsr1h,w,c
  8649  01185A  6EDA               	movwf	fsr2h,c
  8650                           
  8651                           ;stkvar	?___aodiv @ sp[(-10)+-8]
  8652  01185C  0E08               	movlw	8
  8653  01185E  6E35               	movwf	btemp^0,c
  8654  011860  0EEE               	movlw	-18
  8655  011862                     us210999:
  8656  011862  006F FF7B FFE3     	movff	postinc2,plusw1
  8657  011868  28E8               	incf	wreg,w,c
  8658  01186A  2E35               	decfsz	btemp^0,f,c
  8659  01186C  D7FA               	bra	us210999
  8660                           
  8661                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
  8662  01186E  0EF6               	movlw	246
  8663  011870  26E1               	addwf	fsr1l,f,c
  8664  011872  0EFF               	movlw	255
  8665  011874  22E2               	addwfc	fsr1h,f,c
  8666  011876  0012               	return		;funcret
  8667  011878                     __end_of___aodiv:
  8668                           	opt callstack 0
  8669                           
  8670 ;; *************** function _ctoa *****************
  8671 ;; Defined at:
  8672 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8673 ;; Parameters:    Size  Location     Type
  8674 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8675 ;;		 -> f(6), NULL(0), 
  8676 ;;  c               1  [STACK] unsigned char 
  8677 ;; Auto vars:     Size  Location     Type
  8678 ;;  w               2  [STACK] int 
  8679 ;;  l               2    0        int 
  8680 ;; Return value:  Size  Location     Type
  8681 ;;                  2  [STACK] int 
  8682 ;; Registers used:
  8683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  8684 ;; Tracked objects:
  8685 ;;		On entry : 0/3
  8686 ;;		On exit  : 0/0
  8687 ;;		Unchanged: 0/0
  8688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8693 ;;Total ram usage:        0 bytes
  8694 ;; Hardware stack levels used:    1
  8695 ;; Hardware stack levels required when called:   11
  8696 ;; This function calls:
  8697 ;;		_pad
  8698 ;; This function is called by:
  8699 ;;		_vfpfcnvrt
  8700 ;; This function uses a reentrant model
  8701 ;;
  8702                           
  8703                           	psect	text40
  8704  012974                     __ptext40:
  8705                           	opt callstack 0
  8706  012974                     _ctoa:
  8707                           	opt callstack 0
  8708                           
  8709                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8710  012974  52E6               	movf	postinc1,f,c
  8711  012976  52E6               	movf	postinc1,f,c
  8712                           
  8713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
  8714                           
  8715                           ;incstack = 0
  8716  012978  501E               	movf	_width^0,w,c
  8717  01297A  101F               	iorwf	(_width+1)^0,w,c
  8718  01297C  A4D8               	btfss	status,2,c
  8719  01297E  D009               	goto	l5787
  8720                           
  8721                           ;stkvar	_w @ sp[(-2)+0]
  8722  012980  0EFE               	movlw	-2
  8723  012982  0060  F07B  FFE3   	movff	_width,plusw1
  8724  012988  0EFF               	movlw	-1
  8725  01298A  0060  F07F  FFE3   	movff	_width+1,plusw1
  8726  012990  D016               	goto	l5789
  8727  012992                     l5787:
  8728  012992  0EFF               	movlw	255
  8729  012994  6E3F               	movwf	(btemp+10)^0,c
  8730  012996  0EFF               	movlw	255
  8731  012998  6E40               	movwf	(btemp+11)^0,c
  8732  01299A  0060  F078  F03D   	movff	_width,btemp+8
  8733  0129A0  0060  F07C  F03E   	movff	_width+1,btemp+9
  8734  0129A6  503F               	movf	(btemp+10)^0,w,c
  8735  0129A8  263D               	addwf	(btemp+8)^0,f,c
  8736  0129AA  5040               	movf	(btemp+11)^0,w,c
  8737  0129AC  223E               	addwfc	(btemp+9)^0,f,c
  8738                           
  8739                           ;stkvar	_w @ sp[(-2)+0]
  8740  0129AE  0EFE               	movlw	-2
  8741  0129B0  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  8742  0129B6  0EFF               	movlw	-1
  8743  0129B8  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  8744  0129BE                     l5789:
  8745                           
  8746                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
  8747                           ;stkvar	_c @ sp[(-2)+-3]
  8748  0129BE  0EFB               	movlw	-5
  8749  0129C0  006F FF8C  F0AD    	movff	plusw1,_dbuf
  8750                           
  8751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
  8752  0129C6  0100               	movlb	0	; () banked
  8753  0129C8  6BAE               	clrf	(_dbuf+1)& (0+255),b
  8754                           
  8755                           ; BSR set to: 0
  8756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
  8757                           ;stkvar	_w @ sp[(-2)+0]
  8758  0129CA  0EFE               	movlw	-2
  8759  0129CC  006F FF8F FFE6     	movff	plusw1,postinc1
  8760  0129D2  006F FF8F FFE6     	movff	plusw1,postinc1
  8761  0129D8  0EAD               	movlw	_dbuf& (0+255)
  8762  0129DA  6EE6               	movwf	postinc1,c
  8763                           
  8764                           ;stkvar	_fp @ sp[(-5)+-2]
  8765  0129DC  0EF9               	movlw	-7
  8766  0129DE  006F FF8F FFE6     	movff	plusw1,postinc1
  8767  0129E4  006F FF8F FFE6     	movff	plusw1,postinc1
  8768  0129EA  EC9A  F090         	call	_pad	;wreg free
  8769                           
  8770                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
  8771  0129EE  0EFB               	movlw	251
  8772  0129F0  26E1               	addwf	fsr1l,f,c
  8773  0129F2  0EFF               	movlw	255
  8774  0129F4  22E2               	addwfc	fsr1h,f,c
  8775  0129F6  0012               	return		;funcret
  8776  0129F8                     __end_of_ctoa:
  8777                           	opt callstack 0
  8778                           
  8779 ;; *************** function _pad *****************
  8780 ;; Defined at:
  8781 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8782 ;; Parameters:    Size  Location     Type
  8783 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8784 ;;		 -> f(6), NULL(0), 
  8785 ;;  buf             1  [STACK] PTR unsigned char 
  8786 ;;		 -> dbuf(32), 
  8787 ;;  p               2  [STACK] int 
  8788 ;; Auto vars:     Size  Location     Type
  8789 ;;  w               2  [STACK] int 
  8790 ;;  i               2  [STACK] int 
  8791 ;; Return value:  Size  Location     Type
  8792 ;;                  2  [STACK] int 
  8793 ;; Registers used:
  8794 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  8795 ;; Tracked objects:
  8796 ;;		On entry : 0/0
  8797 ;;		On exit  : 0/0
  8798 ;;		Unchanged: 0/0
  8799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8804 ;;Total ram usage:        0 bytes
  8805 ;; Hardware stack levels used:    1
  8806 ;; Hardware stack levels required when called:   10
  8807 ;; This function calls:
  8808 ;;		_fputc
  8809 ;;		_fputs
  8810 ;;		_strlen
  8811 ;; This function is called by:
  8812 ;;		_ctoa
  8813 ;;		_dtoa
  8814 ;;		_xtoa
  8815 ;; This function uses a reentrant model
  8816 ;;
  8817                           
  8818                           	psect	text41
  8819  012134                     __ptext41:
  8820                           	opt callstack 0
  8821  012134                     _pad:
  8822                           	opt callstack 0
  8823                           
  8824                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8825  012134  52E6               	movf	postinc1,f,c
  8826  012136  52E6               	movf	postinc1,f,c
  8827  012138  52E6               	movf	postinc1,f,c
  8828  01213A  52E6               	movf	postinc1,f,c
  8829                           
  8830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  8831                           
  8832                           ;incstack = 0
  8833  01213C  A022               	btfss	_flags^0,0,c
  8834  01213E  D00C               	goto	l5765
  8835                           
  8836                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  8837                           ;stkvar	_fp @ sp[(-4)+-2]
  8838  012140  0EFA               	movlw	-6
  8839  012142  006F FF8F FFE6     	movff	plusw1,postinc1
  8840  012148  006F FF8F FFE6     	movff	plusw1,postinc1
  8841                           
  8842                           ;stkvar	_buf @ sp[(-6)+-3]
  8843  01214E  0EF7               	movlw	-9
  8844  012150  50E3               	movf	plusw1,w,c
  8845  012152  6EE6               	movwf	postinc1,c
  8846  012154  ECFC  F094         	call	_fputs	;wreg free
  8847  012158                     l5765:
  8848                           
  8849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  8850                           ;stkvar	_p @ sp[(-4)+-5]
  8851  012158  0EF8               	movlw	-8
  8852  01215A  BEE3               	btfsc	plusw1,7,c
  8853  01215C  D011               	goto	l5769
  8854                           
  8855                           ;stkvar	_p @ sp[(-4)+-5]
  8856                           ;stkvar	_w @ sp[(-4)+0]
  8857  01215E  0EF7               	movlw	-9
  8858  012160  006F FF8C  F035    	movff	plusw1,btemp
  8859  012166  0EFC               	movlw	-4
  8860  012168  0060  F0D7  FFE3   	movff	btemp,plusw1
  8861  01216E  0EF8               	movlw	-8
  8862  012170  006F FF8C  F035    	movff	plusw1,btemp
  8863  012176  0EFD               	movlw	-3
  8864  012178  0060  F0D7  FFE3   	movff	btemp,plusw1
  8865  01217E  D004               	goto	l1687
  8866  012180                     l5769:
  8867                           
  8868                           ;stkvar	_w @ sp[(-4)+0]
  8869  012180  0EFC               	movlw	-4
  8870  012182  6AE3               	clrf	plusw1,c
  8871  012184  0EFD               	movlw	-3
  8872  012186  6AE3               	clrf	plusw1,c
  8873  012188                     l1687:
  8874                           
  8875                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  8876                           ;stkvar	_i @ sp[(-4)+2]
  8877  012188  0EFE               	movlw	-2
  8878  01218A  6AE3               	clrf	plusw1,c
  8879  01218C  0EFF               	movlw	-1
  8880  01218E  6AE3               	clrf	plusw1,c
  8881                           
  8882                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  8883  012190  D01E               	goto	l5775
  8884  012192                     l5771:
  8885                           
  8886                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  8887                           ;stkvar	_fp @ sp[(-4)+-2]
  8888  012192  0EFA               	movlw	-6
  8889  012194  006F FF8F FFE6     	movff	plusw1,postinc1
  8890  01219A  006F FF8F FFE6     	movff	plusw1,postinc1
  8891  0121A0  0E20               	movlw	32
  8892  0121A2  6EE6               	movwf	postinc1,c
  8893  0121A4  0E00               	movlw	0
  8894  0121A6  6EE6               	movwf	postinc1,c
  8895  0121A8  ECFC  F08E         	call	_fputc	;wreg free
  8896                           
  8897                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
  8898                           ;stkvar	_i @ sp[(-4)+2]
  8899  0121AC  0EFE               	movlw	-2
  8900  0121AE  50E3               	movf	plusw1,w,c
  8901  0121B0  0F01               	addlw	1
  8902  0121B2  6E35               	movwf	btemp^0,c
  8903  0121B4  0EFE               	movlw	-2
  8904  0121B6  0060  F0D7  FFE3   	movff	btemp,plusw1
  8905  0121BC  6A35               	clrf	btemp^0,c
  8906  0121BE  0EFF               	movlw	-1
  8907  0121C0  50E3               	movf	plusw1,w,c
  8908  0121C2  2035               	addwfc	btemp^0,w,c
  8909  0121C4  6E35               	movwf	btemp^0,c
  8910  0121C6  0EFF               	movlw	-1
  8911  0121C8  0060  F0D7  FFE3   	movff	btemp,plusw1
  8912  0121CE                     l5775:
  8913                           
  8914                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  8915                           ;stkvar	_w @ sp[(-4)+0]
  8916                           ;stkvar	_i @ sp[(-4)+2]
  8917  0121CE  50E1               	movf	fsr1l,w,c
  8918  0121D0  0FFE               	addlw	-2
  8919  0121D2  6ED9               	movwf	fsr2l,c
  8920  0121D4  50E2               	movf	fsr1h,w,c
  8921  0121D6  6EDA               	movwf	fsr2h,c
  8922  0121D8  0EFF               	movlw	255
  8923  0121DA  22DA               	addwfc	fsr2h,f,c
  8924  0121DC  0EFC               	movlw	-4
  8925  0121DE  50E3               	movf	plusw1,w,c
  8926  0121E0  5CDE               	subwf	postinc2,w,c
  8927  0121E2  50DE               	movf	postinc2,w,c
  8928  0121E4  0A80               	xorlw	128
  8929  0121E6  6E35               	movwf	btemp^0,c
  8930  0121E8  0EFD               	movlw	-3
  8931  0121EA  50E3               	movf	plusw1,w,c
  8932  0121EC  0A80               	xorlw	128
  8933  0121EE  5835               	subwfb	btemp^0,w,c
  8934  0121F0  A0D8               	btfss	status,0,c
  8935  0121F2  D7CF               	goto	l5771
  8936                           
  8937                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  8938  0121F4  B022               	btfsc	_flags^0,0,c
  8939  0121F6  D00C               	goto	l5779
  8940                           
  8941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  8942                           ;stkvar	_fp @ sp[(-4)+-2]
  8943  0121F8  0EFA               	movlw	-6
  8944  0121FA  006F FF8F FFE6     	movff	plusw1,postinc1
  8945  012200  006F FF8F FFE6     	movff	plusw1,postinc1
  8946                           
  8947                           ;stkvar	_buf @ sp[(-6)+-3]
  8948  012206  0EF7               	movlw	-9
  8949  012208  50E3               	movf	plusw1,w,c
  8950  01220A  6EE6               	movwf	postinc1,c
  8951  01220C  ECFC  F094         	call	_fputs	;wreg free
  8952  012210                     l5779:
  8953                           
  8954                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  8955                           ;stkvar	_w @ sp[(-4)+0]
  8956                           ;stkvar	_buf @ sp[(-4)+-3]
  8957  012210  0EF9               	movlw	-7
  8958  012212  006F FF8C  F040    	movff	plusw1,btemp+11
  8959  012218  0060  F103  FFE6   	movff	btemp+11,postinc1
  8960  01221E  0E00               	movlw	0
  8961  012220  6EE6               	movwf	postinc1,c
  8962  012222  EC4B  F093         	call	_strlen	;wreg free
  8963  012226  0EFC               	movlw	-4
  8964  012228  50E3               	movf	plusw1,w,c
  8965  01222A  2635               	addwf	btemp^0,f,c
  8966  01222C  0EFD               	movlw	-3
  8967  01222E  50E3               	movf	plusw1,w,c
  8968  012230  2236               	addwfc	(btemp+1)^0,f,c
  8969                           
  8970                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize =
      +                           5, vargsize = 0
  8971  012232  0EF7               	movlw	247
  8972  012234  26E1               	addwf	fsr1l,f,c
  8973  012236  0EFF               	movlw	255
  8974  012238  22E2               	addwfc	fsr1h,f,c
  8975  01223A  0012               	return		;funcret
  8976  01223C                     __end_of_pad:
  8977                           	opt callstack 0
  8978                           
  8979 ;; *************** function _strlen *****************
  8980 ;; Defined at:
  8981 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
  8982 ;; Parameters:    Size  Location     Type
  8983 ;;  s               2  [STACK] PTR const unsigned char 
  8984 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
  8985 ;;		 -> STR_14(9), STR_13(12), D.lcd(216), D(218), 
  8986 ;;		 -> T(144), STR_7(4), STR_3(4), V(189), 
  8987 ;; Auto vars:     Size  Location     Type
  8988 ;;  a               2  [STACK] PTR const unsigned char 
  8989 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
  8990 ;;		 -> STR_14(9), STR_13(12), D.lcd(216), D(218), 
  8991 ;;		 -> T(144), STR_7(4), STR_3(4), V(189), 
  8992 ;; Return value:  Size  Location     Type
  8993 ;;                  2  [STACK] unsigned int 
  8994 ;; Registers used:
  8995 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
  8996 ;; Tracked objects:
  8997 ;;		On entry : 0/0
  8998 ;;		On exit  : 0/0
  8999 ;;		Unchanged: 0/0
  9000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9005 ;;Total ram usage:        0 bytes
  9006 ;; Hardware stack levels used:    1
  9007 ;; Hardware stack levels required when called:    6
  9008 ;; This function calls:
  9009 ;;		Nothing
  9010 ;; This function is called by:
  9011 ;;		_eaDogM_WriteString
  9012 ;;		_pad
  9013 ;;		_stoa
  9014 ;; This function uses a reentrant model
  9015 ;;
  9016                           
  9017                           	psect	text42
  9018  012696                     __ptext42:
  9019                           	opt callstack 0
  9020  012696                     _strlen:
  9021                           	opt callstack 0
  9022                           
  9023                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9024  012696  52E6               	movf	postinc1,f,c
  9025  012698  52E6               	movf	postinc1,f,c
  9026                           
  9027                           ;stkvar	_s @ sp[(-2)+-2]
  9028                           
  9029                           ;incstack = 0
  9030  01269A  0EFC               	movlw	-4
  9031  01269C  006F FF8C  F03F    	movff	plusw1,btemp+10
  9032  0126A2  0EFD               	movlw	-3
  9033  0126A4  006F FF8C  F040    	movff	plusw1,btemp+11
  9034                           
  9035                           ;stkvar	_a @ sp[(-2)+0]
  9036  0126AA  0EFF               	movlw	-1
  9037  0126AC  0060  F103  FFE3   	movff	btemp+11,plusw1
  9038  0126B2  0EFE               	movlw	-2
  9039  0126B4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9040  0126BA  D011               	goto	l4203
  9041  0126BC                     l4201:
  9042                           
  9043                           ;stkvar	_s @ sp[(-2)+-2]
  9044  0126BC  0EFC               	movlw	-4
  9045  0126BE  50E3               	movf	plusw1,w,c
  9046  0126C0  0F01               	addlw	1
  9047  0126C2  6E35               	movwf	btemp^0,c
  9048  0126C4  0EFC               	movlw	-4
  9049  0126C6  0060  F0D7  FFE3   	movff	btemp,plusw1
  9050  0126CC  6A35               	clrf	btemp^0,c
  9051  0126CE  0EFD               	movlw	-3
  9052  0126D0  50E3               	movf	plusw1,w,c
  9053  0126D2  2035               	addwfc	btemp^0,w,c
  9054  0126D4  6E35               	movwf	btemp^0,c
  9055  0126D6  0EFD               	movlw	-3
  9056  0126D8  0060  F0D7  FFE3   	movff	btemp,plusw1
  9057  0126DE                     l4203:
  9058                           
  9059                           ;stkvar	_s @ sp[(-2)+-2]
  9060  0126DE  0EFC               	movlw	-4
  9061  0126E0  006F FF8F FFF6     	movff	plusw1,tblptrl
  9062  0126E6  0EFD               	movlw	-3
  9063  0126E8  006F FF8F FFF7     	movff	plusw1,tblptrh
  9064  0126EE  0E00               	movlw	low (__mediumconst shr (0+16))
  9065  0126F0  6EF8               	movwf	tblptru,c
  9066  0126F2  0E1F               	movlw	(high __ramtop+-1)
  9067  0126F4  64F7               	cpfsgt	tblptrh,c
  9068  0126F6  D003               	bra	u1827
  9069  0126F8  0008               	tblrd		*
  9070  0126FA  50F5               	movf	tablat,w,c
  9071  0126FC  D007               	bra	u1820
  9072  0126FE                     u1827:
  9073  0126FE  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9074  012704  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9075  01270A  50EF               	movf	indf0,w,c
  9076  01270C                     u1820:
  9077  01270C  0900               	iorlw	0
  9078  01270E  A4D8               	btfss	status,2,c
  9079  012710  D7D5               	goto	l4201
  9080                           
  9081                           ;stkvar	_a @ sp[(-2)+0]
  9082                           ;stkvar	_s @ sp[(-2)+-2]
  9083  012712  0EFC               	movlw	-4
  9084  012714  006F FF8C  F035    	movff	plusw1,btemp
  9085  01271A  0EFD               	movlw	-3
  9086  01271C  006F FF8C  F036    	movff	plusw1,btemp+1
  9087  012722  0EFE               	movlw	-2
  9088  012724  50E3               	movf	plusw1,w,c
  9089  012726  5E35               	subwf	btemp^0,f,c
  9090  012728  0EFF               	movlw	-1
  9091  01272A  50E3               	movf	plusw1,w,c
  9092  01272C  5A36               	subwfb	(btemp+1)^0,f,c
  9093                           
  9094                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  9095  01272E  52E5               	movf	postdec1,f,c
  9096  012730  52E5               	movf	postdec1,f,c
  9097  012732  52E5               	movf	postdec1,f,c
  9098  012734  52E5               	movf	postdec1,f,c
  9099  012736  0012               	return		;funcret
  9100  012738                     __end_of_strlen:
  9101                           	opt callstack 0
  9102                           
  9103 ;; *************** function _fputs *****************
  9104 ;; Defined at:
  9105 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
  9106 ;; Parameters:    Size  Location     Type
  9107 ;;  s               1  [STACK] PTR const unsigned char 
  9108 ;;		 -> dbuf(32), 
  9109 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9110 ;;		 -> f(6), NULL(0), 
  9111 ;; Auto vars:     Size  Location     Type
  9112 ;;  i               2  [STACK] int 
  9113 ;;  c               1  [STACK] unsigned char 
  9114 ;; Return value:  Size  Location     Type
  9115 ;;                  2  [STACK] int 
  9116 ;; Registers used:
  9117 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
  9118 ;; Tracked objects:
  9119 ;;		On entry : 0/0
  9120 ;;		On exit  : 0/0
  9121 ;;		Unchanged: 0/0
  9122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9127 ;;Total ram usage:        0 bytes
  9128 ;; Hardware stack levels used:    1
  9129 ;; Hardware stack levels required when called:    9
  9130 ;; This function calls:
  9131 ;;		_fputc
  9132 ;; This function is called by:
  9133 ;;		_pad
  9134 ;; This function uses a reentrant model
  9135 ;;
  9136                           
  9137                           	psect	text43
  9138  0129F8                     __ptext43:
  9139                           	opt callstack 0
  9140  0129F8                     _fputs:
  9141                           	opt callstack 0
  9142                           
  9143                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9144  0129F8  52E6               	movf	postinc1,f,c
  9145  0129FA  52E6               	movf	postinc1,f,c
  9146  0129FC  52E6               	movf	postinc1,f,c
  9147                           
  9148                           ;stkvar	_i @ sp[(-3)+0]
  9149                           
  9150                           ;incstack = 0
  9151  0129FE  0EFD               	movlw	-3
  9152  012A00  6AE3               	clrf	plusw1,c
  9153  012A02  0EFE               	movlw	-2
  9154  012A04  6AE3               	clrf	plusw1,c
  9155  012A06  D01F               	goto	l5759
  9156  012A08                     l5755:
  9157                           
  9158                           ;stkvar	_fp @ sp[(-3)+-3]
  9159  012A08  0EFA               	movlw	-6
  9160  012A0A  006F FF8F FFE6     	movff	plusw1,postinc1
  9161  012A10  006F FF8F FFE6     	movff	plusw1,postinc1
  9162                           
  9163                           ;stkvar	_c @ sp[(-5)+2]
  9164  012A16  0EFD               	movlw	-3
  9165  012A18  50E3               	movf	plusw1,w,c
  9166  012A1A  6EE6               	movwf	postinc1,c
  9167  012A1C  0E00               	movlw	0
  9168  012A1E  6EE6               	movwf	postinc1,c
  9169  012A20  ECFC  F08E         	call	_fputc	;wreg free
  9170                           
  9171                           ;stkvar	_i @ sp[(-3)+0]
  9172  012A24  0EFD               	movlw	-3
  9173  012A26  50E3               	movf	plusw1,w,c
  9174  012A28  0F01               	addlw	1
  9175  012A2A  6E35               	movwf	btemp^0,c
  9176  012A2C  0EFD               	movlw	-3
  9177  012A2E  0060  F0D7  FFE3   	movff	btemp,plusw1
  9178  012A34  6A35               	clrf	btemp^0,c
  9179  012A36  0EFE               	movlw	-2
  9180  012A38  50E3               	movf	plusw1,w,c
  9181  012A3A  2035               	addwfc	btemp^0,w,c
  9182  012A3C  6E35               	movwf	btemp^0,c
  9183  012A3E  0EFE               	movlw	-2
  9184  012A40  0060  F0D7  FFE3   	movff	btemp,plusw1
  9185  012A46                     l5759:
  9186                           
  9187                           ;stkvar	_i @ sp[(-3)+0]
  9188  012A46  0EFD               	movlw	-3
  9189  012A48  006F FF8C  F040    	movff	plusw1,btemp+11
  9190                           
  9191                           ;stkvar	_s @ sp[(-3)+-1]
  9192  012A4E  0EFC               	movlw	-4
  9193  012A50  50E3               	movf	plusw1,w,c
  9194  012A52  2440               	addwf	(btemp+11)^0,w,c
  9195  012A54  6ED9               	movwf	fsr2l,c
  9196  012A56  6ADA               	clrf	fsr2h,c
  9197  012A58  50DF               	movf	indf2,w,c
  9198  012A5A  6E40               	movwf	(btemp+11)^0,c
  9199                           
  9200                           ;stkvar	_c @ sp[(-3)+2]
  9201  012A5C  0EFF               	movlw	-1
  9202  012A5E  0060  F103  FFE3   	movff	btemp+11,plusw1
  9203  012A64  0EFF               	movlw	-1
  9204  012A66  50E3               	movf	plusw1,w,c
  9205  012A68  A4D8               	btfss	status,2,c
  9206  012A6A  D7CE               	goto	l5755
  9207                           
  9208                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize
      +                           = 3, vargsize = 0
  9209  012A6C  0EFA               	movlw	250
  9210  012A6E  26E1               	addwf	fsr1l,f,c
  9211  012A70  0EFF               	movlw	255
  9212  012A72  22E2               	addwfc	fsr1h,f,c
  9213  012A74  0012               	return		;funcret
  9214  012A76                     __end_of_fputs:
  9215                           	opt callstack 0
  9216                           
  9217 ;; *************** function _fputc *****************
  9218 ;; Defined at:
  9219 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
  9220 ;; Parameters:    Size  Location     Type
  9221 ;;  c               2  [STACK] int 
  9222 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9223 ;;		 -> f(6), NULL(0), 
  9224 ;; Auto vars:     Size  Location     Type
  9225 ;;		None
  9226 ;; Return value:  Size  Location     Type
  9227 ;;                  2  [STACK] int 
  9228 ;; Registers used:
  9229 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
  9230 ;; Tracked objects:
  9231 ;;		On entry : 0/3
  9232 ;;		On exit  : 0/0
  9233 ;;		Unchanged: 0/0
  9234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9239 ;;Total ram usage:        0 bytes
  9240 ;; Hardware stack levels used:    1
  9241 ;; Hardware stack levels required when called:    8
  9242 ;; This function calls:
  9243 ;;		_putch
  9244 ;; This function is called by:
  9245 ;;		_pad
  9246 ;;		_stoa
  9247 ;;		_vfpfcnvrt
  9248 ;;		_fputs
  9249 ;; This function uses a reentrant model
  9250 ;;
  9251                           
  9252                           	psect	text44
  9253  011DF8                     __ptext44:
  9254                           	opt callstack 0
  9255  011DF8                     _fputc:
  9256                           	opt callstack 13
  9257                           
  9258                           ;stkvar	_fp @ sp[(0)+-4]
  9259                           
  9260                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9261                           ;incstack = 0
  9262  011DF8  0EFC               	movlw	-4
  9263  011DFA  006F FF8C  F035    	movff	plusw1,btemp
  9264  011E00  0EFD               	movlw	-3
  9265  011E02  50E3               	movf	plusw1,w,c
  9266  011E04  1035               	iorwf	btemp^0,w,c
  9267  011E06  B4D8               	btfsc	status,2,c
  9268  011E08  D009               	goto	u3480
  9269                           
  9270                           ;stkvar	_fp @ sp[(0)+-4]
  9271  011E0A  0EFC               	movlw	-4
  9272  011E0C  006F FF8C  F035    	movff	plusw1,btemp
  9273  011E12  0EFD               	movlw	-3
  9274  011E14  50E3               	movf	plusw1,w,c
  9275  011E16  1035               	iorwf	btemp^0,w,c
  9276  011E18  A4D8               	btfss	status,2,c
  9277  011E1A  D006               	goto	l5743
  9278  011E1C                     u3480:
  9279                           
  9280                           ;stkvar	_c @ sp[(0)+-2]
  9281  011E1C  0EFE               	movlw	-2
  9282  011E1E  50E3               	movf	plusw1,w,c
  9283  011E20  6EE6               	movwf	postinc1,c
  9284  011E22  ECDA  F09B         	call	_putch	;wreg free
  9285  011E26  D075               	goto	l2512
  9286  011E28                     l5743:
  9287                           
  9288                           ;stkvar	_fp @ sp[(0)+-4]
  9289  011E28  0EFC               	movlw	-4
  9290  011E2A  006F FF8C  F03F    	movff	plusw1,btemp+10
  9291  011E30  0EFD               	movlw	-3
  9292  011E32  006F FF8C  F040    	movff	plusw1,btemp+11
  9293  011E38  0E04               	movlw	4
  9294  011E3A  243F               	addwf	(btemp+10)^0,w,c
  9295  011E3C  6ED9               	movwf	fsr2l,c
  9296  011E3E  0E00               	movlw	0
  9297  011E40  2040               	addwfc	(btemp+11)^0,w,c
  9298  011E42  6EDA               	movwf	fsr2h,c
  9299  011E44  50DE               	movf	postinc2,w,c
  9300  011E46  10DE               	iorwf	postinc2,w,c
  9301  011E48  B4D8               	btfsc	status,2,c
  9302  011E4A  D026               	goto	u3500
  9303                           
  9304                           ;stkvar	_fp @ sp[(0)+-4]
  9305  011E4C  0EFC               	movlw	-4
  9306  011E4E  006F FF8C  F03F    	movff	plusw1,btemp+10
  9307  011E54  0EFD               	movlw	-3
  9308  011E56  006F FF8C  F040    	movff	plusw1,btemp+11
  9309  011E5C  0E04               	movlw	4
  9310  011E5E  243F               	addwf	(btemp+10)^0,w,c
  9311  011E60  6ED9               	movwf	fsr2l,c
  9312  011E62  0E00               	movlw	0
  9313  011E64  2040               	addwfc	(btemp+11)^0,w,c
  9314  011E66  6EDA               	movwf	fsr2h,c
  9315                           
  9316                           ;stkvar	_fp @ sp[(0)+-4]
  9317  011E68  0EFC               	movlw	-4
  9318  011E6A  006F FF8C  F03F    	movff	plusw1,btemp+10
  9319  011E70  0EFD               	movlw	-3
  9320  011E72  006F FF8C  F040    	movff	plusw1,btemp+11
  9321  011E78  0E02               	movlw	2
  9322  011E7A  243F               	addwf	(btemp+10)^0,w,c
  9323  011E7C  6EE9               	movwf	fsr0l,c
  9324  011E7E  0E00               	movlw	0
  9325  011E80  2040               	addwfc	(btemp+11)^0,w,c
  9326  011E82  6EEA               	movwf	fsr0h,c
  9327  011E84  50DE               	movf	postinc2,w,c
  9328  011E86  5CEE               	subwf	postinc0,w,c
  9329  011E88  50EE               	movf	postinc0,w,c
  9330  011E8A  0A80               	xorlw	128
  9331  011E8C  6E35               	movwf	btemp^0,c
  9332  011E8E  50DE               	movf	postinc2,w,c
  9333  011E90  0A80               	xorlw	128
  9334  011E92  5835               	subwfb	btemp^0,w,c
  9335  011E94  B0D8               	btfsc	status,0,c
  9336  011E96  D03D               	goto	l2512
  9337  011E98                     u3500:
  9338                           
  9339                           ;stkvar	_c @ sp[(0)+-2]
  9340                           ;stkvar	_fp @ sp[(0)+-4]
  9341  011E98  0EFC               	movlw	-4
  9342  011E9A  006F FF8C  F03F    	movff	plusw1,btemp+10
  9343  011EA0  0EFD               	movlw	-3
  9344  011EA2  006F FF8C  F040    	movff	plusw1,btemp+11
  9345  011EA8  0E02               	movlw	2
  9346  011EAA  243F               	addwf	(btemp+10)^0,w,c
  9347  011EAC  6ED9               	movwf	fsr2l,c
  9348  011EAE  0E00               	movlw	0
  9349  011EB0  2040               	addwfc	(btemp+11)^0,w,c
  9350  011EB2  6EDA               	movwf	fsr2h,c
  9351  011EB4  006F FF78  F03F    	movff	postinc2,btemp+10
  9352  011EBA  006F FF74  F040    	movff	postdec2,btemp+11
  9353                           
  9354                           ;stkvar	_fp @ sp[(0)+-4]
  9355  011EC0  0EFC               	movlw	-4
  9356  011EC2  006F FF8F FFD9     	movff	plusw1,fsr2l
  9357  011EC8  0EFD               	movlw	-3
  9358  011ECA  006F FF8F FFDA     	movff	plusw1,fsr2h
  9359  011ED0  006F FF78  F03D    	movff	postinc2,btemp+8
  9360  011ED6  006F FF74  F03E    	movff	postdec2,btemp+9
  9361  011EDC  503F               	movf	(btemp+10)^0,w,c
  9362  011EDE  243D               	addwf	(btemp+8)^0,w,c
  9363  011EE0  6ED9               	movwf	fsr2l,c
  9364  011EE2  5040               	movf	(btemp+11)^0,w,c
  9365  011EE4  203E               	addwfc	(btemp+9)^0,w,c
  9366  011EE6  6EDA               	movwf	fsr2h,c
  9367  011EE8  0EFE               	movlw	-2
  9368  011EEA  006F FF8F FFDF     	movff	plusw1,indf2
  9369                           
  9370                           ;stkvar	_fp @ sp[(0)+-4]
  9371  011EF0  0EFC               	movlw	-4
  9372  011EF2  006F FF8C  F03F    	movff	plusw1,btemp+10
  9373  011EF8  0EFD               	movlw	-3
  9374  011EFA  006F FF8C  F040    	movff	plusw1,btemp+11
  9375  011F00  0E02               	movlw	2
  9376  011F02  243F               	addwf	(btemp+10)^0,w,c
  9377  011F04  6ED9               	movwf	fsr2l,c
  9378  011F06  0E00               	movlw	0
  9379  011F08  2040               	addwfc	(btemp+11)^0,w,c
  9380  011F0A  6EDA               	movwf	fsr2h,c
  9381  011F0C  2ADE               	incf	postinc2,f,c
  9382  011F0E  0E00               	movlw	0
  9383  011F10  22DD               	addwfc	postdec2,f,c
  9384  011F12                     l2512:
  9385                           
  9386                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  9387  011F12  52E5               	movf	postdec1,f,c
  9388  011F14  52E5               	movf	postdec1,f,c
  9389  011F16  52E5               	movf	postdec1,f,c
  9390  011F18  52E5               	movf	postdec1,f,c
  9391  011F1A  0012               	return		;funcret
  9392  011F1C                     __end_of_fputc:
  9393                           	opt callstack 0
  9394                           
  9395 ;; *************** function _putch *****************
  9396 ;; Defined at:
  9397 ;;		line 155 in file "eadog.c"
  9398 ;; Parameters:    Size  Location     Type
  9399 ;;  c               1  [STACK] unsigned char 
  9400 ;; Auto vars:     Size  Location     Type
  9401 ;;		None
  9402 ;; Return value:  Size  Location     Type
  9403 ;;                  1  [STACK] void 
  9404 ;; Registers used:
  9405 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
  9406 ;; Tracked objects:
  9407 ;;		On entry : 0/3
  9408 ;;		On exit  : 0/0
  9409 ;;		Unchanged: 0/0
  9410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9415 ;;Total ram usage:        0 bytes
  9416 ;; Hardware stack levels used:    1
  9417 ;; Hardware stack levels required when called:    7
  9418 ;; This function calls:
  9419 ;;		_ringBufS_put_dma
  9420 ;; This function is called by:
  9421 ;;		_fputc
  9422 ;; This function uses a reentrant model
  9423 ;;
  9424                           
  9425                           	psect	text45
  9426  0137B4                     __ptext45:
  9427                           	opt callstack 0
  9428  0137B4                     _putch:
  9429                           	opt callstack 13
  9430                           
  9431                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
  9432                           ;stkvar	_c @ sp[(0)+-1]
  9433                           
  9434                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9435                           ;incstack = 0
  9436  0137B4  0EFF               	movlw	-1
  9437  0137B6  50E3               	movf	plusw1,w,c
  9438  0137B8  6EE6               	movwf	postinc1,c
  9439  0137BA  0060  F283  FFE6   	movff	_spi_link+6,postinc1
  9440  0137C0  0060  F287  FFE6   	movff	_spi_link+7,postinc1
  9441  0137C6  EC4F  F092         	call	_ringBufS_put_dma	;wreg free
  9442                           
  9443                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
  9444  0137CA  52E5               	movf	postdec1,f,c
  9445  0137CC  0012               	return		;funcret
  9446  0137CE                     __end_of_putch:
  9447                           	opt callstack 0
  9448                           
  9449 ;; *************** function _ringBufS_put_dma *****************
  9450 ;; Defined at:
  9451 ;;		line 67 in file "ringbufs.c"
  9452 ;; Parameters:    Size  Location     Type
  9453 ;;  _this           2  [STACK] PTR struct ringBufS_t
  9454 ;;		 -> ring_buf1(67), 
  9455 ;;  c               1  [STACK] const unsigned char 
  9456 ;; Auto vars:     Size  Location     Type
  9457 ;;		None
  9458 ;; Return value:  Size  Location     Type
  9459 ;;                  1  [STACK] void 
  9460 ;; Registers used:
  9461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
  9462 ;; Tracked objects:
  9463 ;;		On entry : 0/3
  9464 ;;		On exit  : 0/0
  9465 ;;		Unchanged: 0/0
  9466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9471 ;;Total ram usage:        0 bytes
  9472 ;; Hardware stack levels used:    1
  9473 ;; Hardware stack levels required when called:    6
  9474 ;; This function calls:
  9475 ;;		Nothing
  9476 ;; This function is called by:
  9477 ;;		_putch
  9478 ;; This function uses a reentrant model
  9479 ;;
  9480                           
  9481                           	psect	text46
  9482  01249E                     __ptext46:
  9483                           	opt callstack 0
  9484  01249E                     _ringBufS_put_dma:
  9485                           	opt callstack 13
  9486                           
  9487                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
  9488                           ;stkvar	__this @ sp[(0)+-2]
  9489                           
  9490                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9491                           ;incstack = 0
  9492  01249E  0EFE               	movlw	-2
  9493  0124A0  006F FF8C  F03F    	movff	plusw1,btemp+10
  9494  0124A6  0EFF               	movlw	-1
  9495  0124A8  006F FF8C  F040    	movff	plusw1,btemp+11
  9496  0124AE  0E42               	movlw	66
  9497  0124B0  243F               	addwf	(btemp+10)^0,w,c
  9498  0124B2  6ED9               	movwf	fsr2l,c
  9499  0124B4  0E00               	movlw	0
  9500  0124B6  2040               	addwfc	(btemp+11)^0,w,c
  9501  0124B8  6EDA               	movwf	fsr2h,c
  9502  0124BA  0E40               	movlw	64
  9503  0124BC  60DF               	cpfslt	indf2,c
  9504  0124BE  D040               	goto	l1458
  9505                           
  9506                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
  9507                           ;stkvar	_c @ sp[(0)+-3]
  9508                           ;stkvar	__this @ sp[(0)+-2]
  9509  0124C0  0EFE               	movlw	-2
  9510  0124C2  006F FF8C  F03F    	movff	plusw1,btemp+10
  9511  0124C8  0EFF               	movlw	-1
  9512  0124CA  006F FF8C  F040    	movff	plusw1,btemp+11
  9513  0124D0  0E40               	movlw	64
  9514  0124D2  243F               	addwf	(btemp+10)^0,w,c
  9515  0124D4  6ED9               	movwf	fsr2l,c
  9516  0124D6  0E00               	movlw	0
  9517  0124D8  2040               	addwfc	(btemp+11)^0,w,c
  9518  0124DA  6EDA               	movwf	fsr2h,c
  9519  0124DC  50DF               	movf	indf2,w,c
  9520  0124DE  6E40               	movwf	(btemp+11)^0,c
  9521                           
  9522                           ;stkvar	__this @ sp[(0)+-2]
  9523  0124E0  0EFE               	movlw	-2
  9524  0124E2  006F FF8C  F03D    	movff	plusw1,btemp+8
  9525  0124E8  0EFF               	movlw	-1
  9526  0124EA  006F FF8C  F03E    	movff	plusw1,btemp+9
  9527  0124F0  5040               	movf	(btemp+11)^0,w,c
  9528  0124F2  243D               	addwf	(btemp+8)^0,w,c
  9529  0124F4  6ED9               	movwf	fsr2l,c
  9530  0124F6  0E00               	movlw	0
  9531  0124F8  203E               	addwfc	(btemp+9)^0,w,c
  9532  0124FA  6EDA               	movwf	fsr2h,c
  9533  0124FC  0EFD               	movlw	-3
  9534  0124FE  006F FF8F FFDF     	movff	plusw1,indf2
  9535                           
  9536                           ;ringbufs.c: 71:   ++_this->head;
  9537                           ;stkvar	__this @ sp[(0)+-2]
  9538  012504  0EFE               	movlw	-2
  9539  012506  006F FF8C  F03F    	movff	plusw1,btemp+10
  9540  01250C  0EFF               	movlw	-1
  9541  01250E  006F FF8C  F040    	movff	plusw1,btemp+11
  9542  012514  0E40               	movlw	64
  9543  012516  243F               	addwf	(btemp+10)^0,w,c
  9544  012518  6ED9               	movwf	fsr2l,c
  9545  01251A  0E00               	movlw	0
  9546  01251C  2040               	addwfc	(btemp+11)^0,w,c
  9547  01251E  6EDA               	movwf	fsr2h,c
  9548  012520  2ADF               	incf	indf2,f,c
  9549                           
  9550                           ;ringbufs.c: 72:   ++_this->count;
  9551                           ;stkvar	__this @ sp[(0)+-2]
  9552  012522  0EFE               	movlw	-2
  9553  012524  006F FF8C  F03F    	movff	plusw1,btemp+10
  9554  01252A  0EFF               	movlw	-1
  9555  01252C  006F FF8C  F040    	movff	plusw1,btemp+11
  9556  012532  0E42               	movlw	66
  9557  012534  243F               	addwf	(btemp+10)^0,w,c
  9558  012536  6ED9               	movwf	fsr2l,c
  9559  012538  0E00               	movlw	0
  9560  01253A  2040               	addwfc	(btemp+11)^0,w,c
  9561  01253C  6EDA               	movwf	fsr2h,c
  9562  01253E  2ADF               	incf	indf2,f,c
  9563  012540                     l1458:
  9564                           
  9565                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
  9566  012540  52E5               	movf	postdec1,f,c
  9567  012542  52E5               	movf	postdec1,f,c
  9568  012544  52E5               	movf	postdec1,f,c
  9569  012546  0012               	return		;funcret
  9570  012548                     __end_of_ringBufS_put_dma:
  9571                           	opt callstack 0
  9572                           
  9573 ;; *************** function _set_vterm *****************
  9574 ;; Defined at:
  9575 ;;		line 104 in file "mconfig.c"
  9576 ;; Parameters:    Size  Location     Type
  9577 ;;  vterm           1  [STACK] unsigned char 
  9578 ;; Auto vars:     Size  Location     Type
  9579 ;;		None
  9580 ;; Return value:  Size  Location     Type
  9581 ;;                  1  [STACK] unsigned char 
  9582 ;; Registers used:
  9583 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
  9584 ;; Tracked objects:
  9585 ;;		On entry : 0/0
  9586 ;;		On exit  : 3F/3
  9587 ;;		Unchanged: 0/0
  9588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9593 ;;Total ram usage:        0 bytes
  9594 ;; Hardware stack levels used:    1
  9595 ;; Hardware stack levels required when called:    6
  9596 ;; This function calls:
  9597 ;;		Nothing
  9598 ;; This function is called by:
  9599 ;;		_main
  9600 ;;		_check_help
  9601 ;; This function uses a reentrant model
  9602 ;;
  9603                           
  9604                           	psect	text47
  9605  013798                     __ptext47:
  9606                           	opt callstack 0
  9607  013798                     _set_vterm:
  9608                           	opt callstack 24
  9609                           
  9610                           ;mconfig.c: 104: uint8_t set_vterm(uint8_t vterm);mconfig.c: 105: {;mconfig.c: 106:  D.v
      +                          term = vterm & 0x03;
  9611                           ;stkvar	_vterm @ sp[(0)+-1]
  9612                           
  9613                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9614                           ;incstack = 0
  9615  013798  0EFF               	movlw	-1
  9616  01379A  006F FF8C  F040    	movff	plusw1,btemp+11
  9617  0137A0  0E03               	movlw	3
  9618  0137A2  1640               	andwf	(btemp+11)^0,f,c
  9619  0137A4  0103               	movlb	3	; () banked
  9620  0137A6  51D8               	movf	(_D+216)& (0+255),w,b
  9621  0137A8  1840               	xorwf	(btemp+11)^0,w,c
  9622  0137AA  0BFE               	andlw	-2
  9623  0137AC  1840               	xorwf	(btemp+11)^0,w,c
  9624  0137AE  6FD8               	movwf	(_D+216)& (0+255),b
  9625                           
  9626                           ; BSR set to: 3
  9627                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  9628  0137B0  52E5               	movf	postdec1,f,c
  9629  0137B2  0012               	return		;funcret
  9630  0137B4                     __end_of_set_vterm:
  9631                           	opt callstack 0
  9632                           
  9633 ;; *************** function _set_temp_display_help *****************
  9634 ;; Defined at:
  9635 ;;		line 208 in file "mconfig.c"
  9636 ;; Parameters:    Size  Location     Type
  9637 ;;  new_response    1  [STACK] const enum E16501
  9638 ;; Auto vars:     Size  Location     Type
  9639 ;;		None
  9640 ;; Return value:  Size  Location     Type
  9641 ;;                  1  [STACK] enum E16501
  9642 ;; Registers used:
  9643 ;;		wreg, fsr1l, fsr1h
  9644 ;; Tracked objects:
  9645 ;;		On entry : 0/3
  9646 ;;		On exit  : 3F/1
  9647 ;;		Unchanged: 0/0
  9648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9653 ;;Total ram usage:        0 bytes
  9654 ;; Hardware stack levels used:    1
  9655 ;; Hardware stack levels required when called:    6
  9656 ;; This function calls:
  9657 ;;		Nothing
  9658 ;; This function is called by:
  9659 ;;		_check_help
  9660 ;; This function uses a reentrant model
  9661 ;;
  9662                           
  9663                           	psect	text48
  9664  0138B2                     __ptext48:
  9665                           	opt callstack 0
  9666  0138B2                     _set_temp_display_help:
  9667                           	opt callstack 23
  9668                           
  9669                           ;mconfig.c: 208: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 209: {;mconfig.c: 210:  static D_CODES old_info;;mconfig.c: 212:  old_info = V.respon
      +                          se.help_temp;
  9670                           
  9671                           ; BSR set to: 3
  9672                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9673                           ;incstack = 0
  9674  0138B2  0101               	movlb	1	; () banked
  9675  0138B4  51B2               	movf	(_V+178)& (0+255),w,b	;volatile
  9676                           
  9677                           ; BSR set to: 1
  9678                           ;mconfig.c: 213:  V.response.help_temp = new_response_info;
  9679                           ;stkvar	_new_response_info @ sp[(0)+-1]
  9680  0138B6  0EFF               	movlw	-1
  9681  0138B8  006F FF8C  F1B2    	movff	plusw1,_V+178	;volatile
  9682                           
  9683                           ; BSR set to: 1
  9684                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
  9685  0138BE  52E5               	movf	postdec1,f,c
  9686  0138C0  0012               	return		;funcret
  9687  0138C2                     __end_of_set_temp_display_help:
  9688                           	opt callstack 0
  9689                           
  9690 ;; *************** function _set_display_info *****************
  9691 ;; Defined at:
  9692 ;;		line 197 in file "mconfig.c"
  9693 ;; Parameters:    Size  Location     Type
  9694 ;;  new_response    1  [STACK] const enum E16501
  9695 ;; Auto vars:     Size  Location     Type
  9696 ;;		None
  9697 ;; Return value:  Size  Location     Type
  9698 ;;                  1  [STACK] enum E16986
  9699 ;; Registers used:
  9700 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  9701 ;; Tracked objects:
  9702 ;;		On entry : 0/2
  9703 ;;		On exit  : 0/0
  9704 ;;		Unchanged: 0/0
  9705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9710 ;;Total ram usage:        0 bytes
  9711 ;; Hardware stack levels used:    1
  9712 ;; Hardware stack levels required when called:    7
  9713 ;; This function calls:
  9714 ;;		_TimerDone
  9715 ;; This function is called by:
  9716 ;;		_main
  9717 ;;		_check_help
  9718 ;; This function uses a reentrant model
  9719 ;;
  9720                           
  9721                           	psect	text49
  9722  013704                     __ptext49:
  9723                           	opt callstack 0
  9724  013704                     _set_display_info:
  9725                           	opt callstack 23
  9726                           
  9727                           ;mconfig.c: 197: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 19
      +                          8: {;mconfig.c: 199:  static D_CODES old_info = DIS_STR;;mconfig.c: 201:  if (TimerDone(
      +                          TMR_INFO)) {
  9728                           
  9729                           ; BSR set to: 1
  9730                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9731                           ;incstack = 0
  9732  013704  0E07               	movlw	7
  9733  013706  6EE6               	movwf	postinc1,c
  9734  013708  EC0D  F09B         	call	_TimerDone	;wreg free
  9735  01370C  5035               	movf	btemp^0,w,c
  9736  01370E  B4D8               	btfsc	status,2,c
  9737  013710  D006               	goto	l1595
  9738                           
  9739                           ;mconfig.c: 202:   old_info = V.response.info;
  9740  013712  0101               	movlb	1	; () banked
  9741  013714  51B1               	movf	(_V+177)& (0+255),w,b	;volatile
  9742                           
  9743                           ; BSR set to: 1
  9744                           ;mconfig.c: 203:   V.response.info = new_response_info;
  9745                           ;stkvar	_new_response_info @ sp[(0)+-1]
  9746  013716  0EFF               	movlw	-1
  9747  013718  006F FF8C  F1B1    	movff	plusw1,_V+177	;volatile
  9748  01371E                     l1595:
  9749                           
  9750                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  9751  01371E  52E5               	movf	postdec1,f,c
  9752  013720  0012               	return		;funcret
  9753  013722                     __end_of_set_display_info:
  9754                           	opt callstack 0
  9755                           
  9756 ;; *************** function _mode_lamp_dim *****************
  9757 ;; Defined at:
  9758 ;;		line 13 in file "mconfig.c"
  9759 ;; Parameters:    Size  Location     Type
  9760 ;;  level           2  [STACK] const unsigned short 
  9761 ;; Auto vars:     Size  Location     Type
  9762 ;;		None
  9763 ;; Return value:  Size  Location     Type
  9764 ;;                  1  [STACK] void 
  9765 ;; Registers used:
  9766 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
  9767 ;; Tracked objects:
  9768 ;;		On entry : 0/1
  9769 ;;		On exit  : 0/0
  9770 ;;		Unchanged: 0/0
  9771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9776 ;;Total ram usage:        0 bytes
  9777 ;; Hardware stack levels used:    1
  9778 ;; Hardware stack levels required when called:    7
  9779 ;; This function calls:
  9780 ;;		_PWM8_LoadDutyValue
  9781 ;; This function is called by:
  9782 ;;		_main
  9783 ;;		_check_help
  9784 ;; This function uses a reentrant model
  9785 ;;
  9786                           
  9787                           	psect	text50
  9788  013802                     __ptext50:
  9789                           	opt callstack 0
  9790  013802                     _mode_lamp_dim:
  9791                           	opt callstack 23
  9792                           
  9793                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
  9794                           ;stkvar	_level @ sp[(0)+-2]
  9795                           
  9796                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9797                           ;incstack = 0
  9798  013802  0EFE               	movlw	-2
  9799  013804  006F FF8F FFE6     	movff	plusw1,postinc1
  9800  01380A  006F FF8F FFE6     	movff	plusw1,postinc1
  9801  013810  EC31  F098         	call	_PWM8_LoadDutyValue	;wreg free
  9802                           
  9803                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  9804  013814  52E5               	movf	postdec1,f,c
  9805  013816  52E5               	movf	postdec1,f,c
  9806  013818  0012               	return		;funcret
  9807  01381A                     __end_of_mode_lamp_dim:
  9808                           	opt callstack 0
  9809                           
  9810 ;; *************** function _mode_lamp_bright *****************
  9811 ;; Defined at:
  9812 ;;		line 18 in file "mconfig.c"
  9813 ;; Parameters:    Size  Location     Type
  9814 ;;		None
  9815 ;; Auto vars:     Size  Location     Type
  9816 ;;		None
  9817 ;; Return value:  Size  Location     Type
  9818 ;;                  1  [STACK] void 
  9819 ;; Registers used:
  9820 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
  9821 ;; Tracked objects:
  9822 ;;		On entry : 0/1
  9823 ;;		On exit  : 0/0
  9824 ;;		Unchanged: 0/0
  9825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9830 ;;Total ram usage:        0 bytes
  9831 ;; Hardware stack levels used:    1
  9832 ;; Hardware stack levels required when called:    7
  9833 ;; This function calls:
  9834 ;;		_PWM8_LoadDutyValue
  9835 ;; This function is called by:
  9836 ;;		_check_help
  9837 ;; This function uses a reentrant model
  9838 ;;
  9839                           
  9840                           	psect	text51
  9841  0138D0                     __ptext51:
  9842                           	opt callstack 0
  9843  0138D0                     _mode_lamp_bright:
  9844                           	opt callstack 22
  9845                           
  9846                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
  9847                           
  9848                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9849                           ;incstack = 0
  9850  0138D0  0E2C               	movlw	44
  9851  0138D2  6EE6               	movwf	postinc1,c
  9852  0138D4  0E01               	movlw	1
  9853  0138D6  6EE6               	movwf	postinc1,c
  9854  0138D8  EC31  F098         	call	_PWM8_LoadDutyValue	;wreg free
  9855                           
  9856                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  9857  0138DC  0012               	return		;funcret
  9858  0138DE                     __end_of_mode_lamp_bright:
  9859                           	opt callstack 0
  9860                           
  9861 ;; *************** function _PWM8_LoadDutyValue *****************
  9862 ;; Defined at:
  9863 ;;		line 74 in file "mcc_generated_files/pwm8.c"
  9864 ;; Parameters:    Size  Location     Type
  9865 ;;  dutyValue       2  [STACK] unsigned short 
  9866 ;; Auto vars:     Size  Location     Type
  9867 ;;		None
  9868 ;; Return value:  Size  Location     Type
  9869 ;;                  1  [STACK] void 
  9870 ;; Registers used:
  9871 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
  9872 ;; Tracked objects:
  9873 ;;		On entry : 0/1
  9874 ;;		On exit  : 0/0
  9875 ;;		Unchanged: 0/0
  9876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9881 ;;Total ram usage:        0 bytes
  9882 ;; Hardware stack levels used:    1
  9883 ;; Hardware stack levels required when called:    6
  9884 ;; This function calls:
  9885 ;;		Nothing
  9886 ;; This function is called by:
  9887 ;;		_mode_lamp_dim
  9888 ;;		_mode_lamp_bright
  9889 ;; This function uses a reentrant model
  9890 ;;
  9891                           
  9892                           	psect	text52
  9893  013062                     __ptext52:
  9894                           	opt callstack 0
  9895  013062                     _PWM8_LoadDutyValue:
  9896                           	opt callstack 23
  9897                           
  9898                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9899                           ;stkvar	_dutyValue @ sp[(0)+-2]
  9900                           
  9901                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9902                           ;incstack = 0
  9903  013062  0EFE               	movlw	-2
  9904  013064  006F FF8C  F03F    	movff	plusw1,btemp+10
  9905  01306A  0EFF               	movlw	-1
  9906  01306C  006F FF8C  F040    	movff	plusw1,btemp+11
  9907  013072  90D8               	bcf	status,0,c
  9908  013074  3240               	rrcf	(btemp+11)^0,f,c
  9909  013076  323F               	rrcf	(btemp+10)^0,f,c
  9910  013078  90D8               	bcf	status,0,c
  9911  01307A  3240               	rrcf	(btemp+11)^0,f,c
  9912  01307C  323F               	rrcf	(btemp+10)^0,f,c
  9913  01307E  503F               	movf	(btemp+10)^0,w,c
  9914  013080  6E61               	movwf	97,c	;volatile
  9915                           
  9916                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
  9917                           ;stkvar	_dutyValue @ sp[(0)+-2]
  9918  013082  0EFE               	movlw	-2
  9919  013084  006F FF8C  F040    	movff	plusw1,btemp+11
  9920  01308A  0E03               	movlw	3
  9921  01308C  1640               	andwf	(btemp+11)^0,f,c
  9922  01308E  0E06               	movlw	6
  9923  013090  6E35               	movwf	btemp^0,c
  9924  013092                     u2885:
  9925  013092  90D8               	bcf	status,0,c
  9926  013094  3640               	rlcf	(btemp+11)^0,f,c
  9927  013096  2E35               	decfsz	btemp^0,f,c
  9928  013098  D7FC               	goto	u2885
  9929  01309A  5040               	movf	(btemp+11)^0,w,c
  9930  01309C  6E60               	movwf	96,c	;volatile
  9931                           
  9932                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  9933  01309E  52E5               	movf	postdec1,f,c
  9934  0130A0  52E5               	movf	postdec1,f,c
  9935  0130A2  0012               	return		;funcret
  9936  0130A4                     __end_of_PWM8_LoadDutyValue:
  9937                           	opt callstack 0
  9938                           
  9939 ;; *************** function _help_button *****************
  9940 ;; Defined at:
  9941 ;;		line 26 in file "mconfig.c"
  9942 ;; Parameters:    Size  Location     Type
  9943 ;;		None
  9944 ;; Auto vars:     Size  Location     Type
  9945 ;;		None
  9946 ;; Return value:  Size  Location     Type
  9947 ;;                  1  [STACK] _Bool 
  9948 ;; Registers used:
  9949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9950 ;; Tracked objects:
  9951 ;;		On entry : 0/1
  9952 ;;		On exit  : 0/0
  9953 ;;		Unchanged: 0/0
  9954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9959 ;;Total ram usage:        0 bytes
  9960 ;; Hardware stack levels used:    1
  9961 ;; Hardware stack levels required when called:    7
  9962 ;; This function calls:
  9963 ;;		_StartTimer
  9964 ;;		_TimerDone
  9965 ;; This function is called by:
  9966 ;;		_check_help
  9967 ;; This function uses a reentrant model
  9968 ;;
  9969                           
  9970                           	psect	text53
  9971  013120                     __ptext53:
  9972                           	opt callstack 0
  9973  013120                     _help_button:
  9974                           	opt callstack 22
  9975                           
  9976                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
  9977                           
  9978                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9979                           ;incstack = 0
  9980  013120  B0CB               	btfsc	203,0,c	;volatile
  9981  013122  D00C               	goto	l1538
  9982                           
  9983                           ;mconfig.c: 29:   V.help = 1;
  9984  013124  0101               	movlb	1	; () banked
  9985  013126  8DA8               	bsf	(_V+168)& (0+255),6,b	;volatile
  9986                           
  9987                           ; BSR set to: 1
  9988                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
  9989  013128  0E08               	movlw	8
  9990  01312A  6EE6               	movwf	postinc1,c
  9991  01312C  EC0D  F09B         	call	_TimerDone	;wreg free
  9992  013130  5035               	movf	btemp^0,w,c
  9993  013132  B4D8               	btfsc	status,2,c
  9994  013134  D003               	goto	l1538
  9995                           
  9996                           ;mconfig.c: 31:    return 1;
  9997  013136  0E01               	movlw	1
  9998  013138  6E35               	movwf	btemp^0,c
  9999  01313A  0012               	return	
 10000  01313C                     l1538:
 10001                           
 10002                           ;mconfig.c: 34:  if (!V.help)
 10003  01313C  0101               	movlb	1	; () banked
 10004  01313E  BDA8               	btfsc	(_V+168)& (0+255),6,b	;volatile
 10005  013140  D008               	goto	l5271
 10006                           
 10007                           ; BSR set to: 1
 10008                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 10009  013142  0E2C               	movlw	44
 10010  013144  6EE6               	movwf	postinc1,c
 10011  013146  0E01               	movlw	1
 10012  013148  6EE6               	movwf	postinc1,c
 10013  01314A  0E08               	movlw	8
 10014  01314C  6EE6               	movwf	postinc1,c
 10015  01314E  EC72  F098         	call	_StartTimer	;wreg free
 10016  013152                     l5271:
 10017                           
 10018                           ;mconfig.c: 37:  return 0;
 10019  013152  0E00               	movlw	0
 10020  013154  6E35               	movwf	btemp^0,c
 10021                           
 10022                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 10023  013156  0012               	return		;funcret
 10024  013158                     __end_of_help_button:
 10025                           	opt callstack 0
 10026                           
 10027 ;; *************** function _TimerDone *****************
 10028 ;; Defined at:
 10029 ;;		line 20 in file "timers.c"
 10030 ;; Parameters:    Size  Location     Type
 10031 ;;  timer           1  [STACK] const unsigned char 
 10032 ;; Auto vars:     Size  Location     Type
 10033 ;;		None
 10034 ;; Return value:  Size  Location     Type
 10035 ;;                  1  [STACK] _Bool 
 10036 ;; Registers used:
 10037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 10038 ;; Tracked objects:
 10039 ;;		On entry : 0/2
 10040 ;;		On exit  : 0/0
 10041 ;;		Unchanged: 0/0
 10042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10047 ;;Total ram usage:        0 bytes
 10048 ;; Hardware stack levels used:    1
 10049 ;; Hardware stack levels required when called:    6
 10050 ;; This function calls:
 10051 ;;		Nothing
 10052 ;; This function is called by:
 10053 ;;		_main
 10054 ;;		_WaitMs
 10055 ;;		_help_button
 10056 ;;		_check_help
 10057 ;;		_set_display_info
 10058 ;; This function uses a reentrant model
 10059 ;;
 10060                           
 10061                           	psect	text54
 10062  01361A                     __ptext54:
 10063                           	opt callstack 0
 10064  01361A                     _TimerDone:
 10065                           	opt callstack 23
 10066                           
 10067                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10068                           ;incstack = 0
 10069  01361A  0004               	clrwdt		;# 
 10070                           
 10071                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 10072                           ;stkvar	_timer @ sp[(0)+-1]
 10073  01361C  0EFF               	movlw	-1
 10074  01361E  50E3               	movf	plusw1,w,c
 10075  013620  0D02               	mullw	2
 10076  013622  50F3               	movf	243,w,c
 10077  013624  0F82               	addlw	low _tickCount
 10078  013626  6ED9               	movwf	fsr2l,c
 10079  013628  6ADA               	clrf	fsr2h,c
 10080  01362A  50DE               	movf	postinc2,w,c
 10081  01362C  10DE               	iorwf	postinc2,w,c
 10082  01362E  A4D8               	btfss	status,2,c
 10083  013630  D002               	goto	l4729
 10084                           
 10085                           ;timers.c: 24:   return 1;
 10086  013632  0E01               	movlw	1
 10087  013634  D001               	goto	L7
 10088  013636                     l4729:
 10089                           
 10090                           ;timers.c: 26:  return 0;
 10091  013636  0E00               	movlw	0
 10092  013638                     L7:
 10093  013638  6E35               	movwf	btemp^0,c
 10094                           
 10095                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 10096  01363A  52E5               	movf	postdec1,f,c
 10097  01363C  0012               	return		;funcret
 10098  01363E                     __end_of_TimerDone:
 10099                           	opt callstack 0
 10100                           
 10101 ;; *************** function _StartTimer *****************
 10102 ;; Defined at:
 10103 ;;		line 12 in file "timers.c"
 10104 ;; Parameters:    Size  Location     Type
 10105 ;;  timer           1  [STACK] const unsigned char 
 10106 ;;  count           2  [STACK] const unsigned short 
 10107 ;; Auto vars:     Size  Location     Type
 10108 ;;		None
 10109 ;; Return value:  Size  Location     Type
 10110 ;;                  1  [STACK] void 
 10111 ;; Registers used:
 10112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10113 ;; Tracked objects:
 10114 ;;		On entry : 0/3
 10115 ;;		On exit  : 0/0
 10116 ;;		Unchanged: 0/0
 10117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10122 ;;Total ram usage:        0 bytes
 10123 ;; Hardware stack levels used:    1
 10124 ;; Hardware stack levels required when called:    6
 10125 ;; This function calls:
 10126 ;;		Nothing
 10127 ;; This function is called by:
 10128 ;;		_main
 10129 ;;		_WaitMs
 10130 ;;		_help_button
 10131 ;;		_check_help
 10132 ;; This function uses a reentrant model
 10133 ;;
 10134                           
 10135                           	psect	text55
 10136  0130E4                     __ptext55:
 10137                           	opt callstack 0
 10138  0130E4                     _StartTimer:
 10139                           	opt callstack 21
 10140                           
 10141                           ;timers.c: 12: __attribute__((inline)) void StartTimer(const uint8_t timer, const uint16
      +                          _t count);timers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
 10142                           ;stkvar	_count @ sp[(0)+-3]
 10143                           
 10144                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10145                           ;incstack = 0
 10146  0130E4  0EFD               	movlw	-3
 10147  0130E6  006F FF8C  F03F    	movff	plusw1,btemp+10
 10148  0130EC  0EFE               	movlw	-2
 10149  0130EE  006F FF8C  F040    	movff	plusw1,btemp+11
 10150  0130F4  90D8               	bcf	status,0,c
 10151  0130F6  343F               	rlcf	(btemp+10)^0,w,c
 10152  0130F8  6E3D               	movwf	(btemp+8)^0,c
 10153  0130FA  3440               	rlcf	(btemp+11)^0,w,c
 10154  0130FC  6E3E               	movwf	(btemp+9)^0,c
 10155                           
 10156                           ;stkvar	_timer @ sp[(0)+-1]
 10157  0130FE  0EFF               	movlw	-1
 10158  013100  50E3               	movf	plusw1,w,c
 10159  013102  0D02               	mullw	2
 10160  013104  50F3               	movf	243,w,c
 10161  013106  0F82               	addlw	low _tickCount
 10162  013108  6ED9               	movwf	fsr2l,c
 10163  01310A  6ADA               	clrf	fsr2h,c
 10164  01310C  0060  F0F7  FFDE   	movff	btemp+8,postinc2
 10165  013112  0060  F0FB  FFDD   	movff	btemp+9,postdec2
 10166                           
 10167                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 10168  013118  52E5               	movf	postdec1,f,c
 10169  01311A  52E5               	movf	postdec1,f,c
 10170  01311C  52E5               	movf	postdec1,f,c
 10171  01311E  0012               	return		;funcret
 10172  013120                     __end_of_StartTimer:
 10173                           	opt callstack 0
 10174                           
 10175 ;; *************** function _display_info *****************
 10176 ;; Defined at:
 10177 ;;		line 187 in file "mconfig.c"
 10178 ;; Parameters:    Size  Location     Type
 10179 ;;		None
 10180 ;; Auto vars:     Size  Location     Type
 10181 ;;		None
 10182 ;; Return value:  Size  Location     Type
 10183 ;;                  1  [STACK] enum E16501
 10184 ;; Registers used:
 10185 ;;		btemp
 10186 ;; Tracked objects:
 10187 ;;		On entry : 0/1
 10188 ;;		On exit  : 0/0
 10189 ;;		Unchanged: 0/0
 10190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10195 ;;Total ram usage:        0 bytes
 10196 ;; Hardware stack levels used:    1
 10197 ;; Hardware stack levels required when called:    6
 10198 ;; This function calls:
 10199 ;;		Nothing
 10200 ;; This function is called by:
 10201 ;;		_check_help
 10202 ;; This function uses a reentrant model
 10203 ;;
 10204                           
 10205                           	psect	text56
 10206  01393A                     __ptext56:
 10207                           	opt callstack 0
 10208  01393A                     _display_info:
 10209                           	opt callstack 23
 10210                           
 10211                           ;mconfig.c: 189:  return V.response.info;
 10212                           
 10213                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10214                           ;incstack = 0
 10215  01393A  0060  F6C4  F035   	movff	_V+177,btemp	;volatile
 10216                           
 10217                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 10218  013940  0012               	return		;funcret
 10219  013942                     __end_of_display_info:
 10220                           	opt callstack 0
 10221                           
 10222 ;; *************** function _display_help *****************
 10223 ;; Defined at:
 10224 ;;		line 192 in file "mconfig.c"
 10225 ;; Parameters:    Size  Location     Type
 10226 ;;		None
 10227 ;; Auto vars:     Size  Location     Type
 10228 ;;		None
 10229 ;; Return value:  Size  Location     Type
 10230 ;;                  1  [STACK] enum E16501
 10231 ;; Registers used:
 10232 ;;		btemp
 10233 ;; Tracked objects:
 10234 ;;		On entry : 3F/1
 10235 ;;		On exit  : 0/0
 10236 ;;		Unchanged: 0/0
 10237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10242 ;;Total ram usage:        0 bytes
 10243 ;; Hardware stack levels used:    1
 10244 ;; Hardware stack levels required when called:    6
 10245 ;; This function calls:
 10246 ;;		Nothing
 10247 ;; This function is called by:
 10248 ;;		_check_help
 10249 ;; This function uses a reentrant model
 10250 ;;
 10251                           
 10252                           	psect	text57
 10253  013942                     __ptext57:
 10254                           	opt callstack 0
 10255  013942                     _display_help:
 10256                           	opt callstack 23
 10257                           
 10258                           ;mconfig.c: 194:  return V.response.help_temp;
 10259                           
 10260                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10261                           ;incstack = 0
 10262  013942  0060  F6C8  F035   	movff	_V+178,btemp	;volatile
 10263                           
 10264                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 10265  013948  0012               	return		;funcret
 10266  01394A                     __end_of_display_help:
 10267                           	opt callstack 0
 10268                           
 10269 ;; *************** function _check_adc_scan *****************
 10270 ;; Defined at:
 10271 ;;		line 47 in file "daq.c"
 10272 ;; Parameters:    Size  Location     Type
 10273 ;;		None
 10274 ;; Auto vars:     Size  Location     Type
 10275 ;;		None
 10276 ;; Return value:  Size  Location     Type
 10277 ;;                  1  [STACK] _Bool 
 10278 ;; Registers used:
 10279 ;;		btemp
 10280 ;; Tracked objects:
 10281 ;;		On entry : 0/2
 10282 ;;		On exit  : 0/0
 10283 ;;		Unchanged: 0/0
 10284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10289 ;;Total ram usage:        0 bytes
 10290 ;; Hardware stack levels used:    1
 10291 ;; Hardware stack levels required when called:    6
 10292 ;; This function calls:
 10293 ;;		Nothing
 10294 ;; This function is called by:
 10295 ;;		_main
 10296 ;; This function uses a reentrant model
 10297 ;;
 10298                           
 10299                           	psect	text58
 10300  01394A                     __ptext58:
 10301                           	opt callstack 0
 10302  01394A                     _check_adc_scan:
 10303                           	opt callstack 24
 10304                           
 10305                           ;daq.c: 49:  return R.done;
 10306                           
 10307                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10308                           ;incstack = 0
 10309  01394A  0060  F204  F035   	movff	_R+33,btemp	;volatile
 10310                           
 10311                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 10312  013950  0012               	return		;funcret
 10313  013952                     __end_of_check_adc_scan:
 10314                           	opt callstack 0
 10315                           
 10316 ;; *************** function _SYSTEM_Initialize *****************
 10317 ;; Defined at:
 10318 ;;		line 50 in file "mcc_generated_files/mcc.c"
 10319 ;; Parameters:    Size  Location     Type
 10320 ;;		None
 10321 ;; Auto vars:     Size  Location     Type
 10322 ;;		None
 10323 ;; Return value:  Size  Location     Type
 10324 ;;                  1  [STACK] void 
 10325 ;; Registers used:
 10326 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 10327 ;; Tracked objects:
 10328 ;;		On entry : 0/0
 10329 ;;		On exit  : 3F/3C
 10330 ;;		Unchanged: 0/0
 10331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10336 ;;Total ram usage:        0 bytes
 10337 ;; Hardware stack levels used:    1
 10338 ;; Hardware stack levels required when called:    8
 10339 ;; This function calls:
 10340 ;;		_ADCC_Initialize
 10341 ;;		_CLKREF_Initialize
 10342 ;;		_DMA1_Initialize
 10343 ;;		_DMA2_Initialize
 10344 ;;		_EXT_INT_Initialize
 10345 ;;		_FVR_Initialize
 10346 ;;		_INTERRUPT_Initialize
 10347 ;;		_OSCILLATOR_Initialize
 10348 ;;		_PIN_MANAGER_Initialize
 10349 ;;		_PMD_Initialize
 10350 ;;		_PWM8_Initialize
 10351 ;;		_SPI1_Initialize
 10352 ;;		_TMR2_Initialize
 10353 ;;		_TMR5_Initialize
 10354 ;;		_TMR6_Initialize
 10355 ;;		_UART1_Initialize
 10356 ;;		_UART2_Initialize
 10357 ;; This function is called by:
 10358 ;;		_main
 10359 ;; This function uses a reentrant model
 10360 ;;
 10361                           
 10362                           	psect	text59
 10363  012F4C                     __ptext59:
 10364                           	opt callstack 0
 10365  012F4C                     _SYSTEM_Initialize:
 10366                           	opt callstack 22
 10367                           
 10368                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 10369                           
 10370                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10371                           ;incstack = 0
 10372  012F4C  ECDA  F095         	call	_INTERRUPT_Initialize	;wreg free
 10373                           
 10374                           ; BSR set to: 57
 10375                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 10376  012F50  EC46  F09C         	call	_PMD_Initialize	;wreg free
 10377                           
 10378                           ; BSR set to: 57
 10379                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 10380  012F54  EC30  F094         	call	_PIN_MANAGER_Initialize	;wreg free
 10381                           
 10382                           ; BSR set to: 58
 10383                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 10384  012F58  EC3B  F09C         	call	_OSCILLATOR_Initialize	;wreg free
 10385                           
 10386                           ; BSR set to: 57
 10387                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 10388  012F5C  ECA9  F09C         	call	_FVR_Initialize	;wreg free
 10389                           
 10390                           ; BSR set to: 62
 10391                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 10392  012F60  EC70  F095         	call	_ADCC_Initialize	;wreg free
 10393                           
 10394                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 10395  012F64  EC0D  F09C         	call	_TMR2_Initialize	;wreg free
 10396                           
 10397                           ; BSR set to: 57
 10398                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 10399  012F68  EC30  F09C         	call	_PWM8_Initialize	;wreg free
 10400                           
 10401                           ; BSR set to: 63
 10402                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 10403  012F6C  EC18  F099         	call	_EXT_INT_Initialize	;wreg free
 10404                           
 10405                           ; BSR set to: 57
 10406                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 10407  012F70  ECA5  F099         	call	_TMR6_Initialize	;wreg free
 10408                           
 10409                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 10410  012F74  ECC9  F097         	call	_TMR5_Initialize	;wreg free
 10411                           
 10412                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 10413  012F78  EC3F  F096         	call	_UART1_Initialize	;wreg free
 10414                           
 10415                           ; BSR set to: 57
 10416                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 10417  012F7C  ECA2  F096         	call	_UART2_Initialize	;wreg free
 10418                           
 10419                           ; BSR set to: 57
 10420                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 10421  012F80  EC25  F09C         	call	_SPI1_Initialize	;wreg free
 10422                           
 10423                           ; BSR set to: 61
 10424                           ;mcc_generated_files/mcc.c: 66:     DMA2_Initialize();
 10425  012F84  EC2D  F097         	call	_DMA2_Initialize	;wreg free
 10426                           
 10427                           ; BSR set to: 59
 10428                           ;mcc_generated_files/mcc.c: 67:     DMA1_Initialize();
 10429  012F88  EC3B  F095         	call	_DMA1_Initialize	;wreg free
 10430                           
 10431                           ; BSR set to: 59
 10432                           ;mcc_generated_files/mcc.c: 68:     CLKREF_Initialize();
 10433  012F8C  EC87  F09C         	call	_CLKREF_Initialize	;wreg free
 10434                           
 10435                           ; BSR set to: 60
 10436                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 10437  012F90  0012               	return		;funcret
 10438  012F92                     __end_of_SYSTEM_Initialize:
 10439                           	opt callstack 0
 10440                           
 10441 ;; *************** function _UART2_Initialize *****************
 10442 ;; Defined at:
 10443 ;;		line 78 in file "mcc_generated_files/uart2.c"
 10444 ;; Parameters:    Size  Location     Type
 10445 ;;		None
 10446 ;; Auto vars:     Size  Location     Type
 10447 ;;		None
 10448 ;; Return value:  Size  Location     Type
 10449 ;;                  1  [STACK] void 
 10450 ;; Registers used:
 10451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 10452 ;; Tracked objects:
 10453 ;;		On entry : 3F/39
 10454 ;;		On exit  : 3F/39
 10455 ;;		Unchanged: 0/0
 10456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10461 ;;Total ram usage:        0 bytes
 10462 ;; Hardware stack levels used:    1
 10463 ;; Hardware stack levels required when called:    7
 10464 ;; This function calls:
 10465 ;;		_UART2_SetRxInterruptHandler
 10466 ;;		_UART2_SetTxInterruptHandler
 10467 ;; This function is called by:
 10468 ;;		_SYSTEM_Initialize
 10469 ;; This function uses a reentrant model
 10470 ;;
 10471                           
 10472                           	psect	text60
 10473  012D44                     __ptext60:
 10474                           	opt callstack 0
 10475  012D44                     _UART2_Initialize:
 10476                           	opt callstack 22
 10477                           
 10478                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 10479                           
 10480                           ; BSR set to: 60
 10481                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10482                           ;incstack = 0
 10483  012D44  0139               	movlb	57	; () banked
 10484  012D46  9596               	bcf	150,2,b	;volatile
 10485                           
 10486                           ; BSR set to: 57
 10487                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 10488  012D48  0E5E               	movlw	low _UART2_Receive_ISR
 10489  012D4A  6EE6               	movwf	postinc1,c
 10490  012D4C  0E37               	movlw	high _UART2_Receive_ISR
 10491  012D4E  6EE6               	movwf	postinc1,c
 10492  012D50  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 10493  012D52  6EE6               	movwf	postinc1,c
 10494  012D54  EC0A  F09A         	call	_UART2_SetRxInterruptHandler	;wreg free
 10495                           
 10496                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 10497  012D58  0139               	movlb	57	; () banked
 10498  012D5A  9796               	bcf	150,3,b	;volatile
 10499                           
 10500                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 10501  012D5C  0E1E               	movlw	low _UART2_Transmit_ISR
 10502  012D5E  6EE6               	movwf	postinc1,c
 10503  012D60  0E33               	movlw	high _UART2_Transmit_ISR
 10504  012D62  6EE6               	movwf	postinc1,c
 10505  012D64  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 10506  012D66  6EE6               	movwf	postinc1,c
 10507  012D68  ECF6  F099         	call	_UART2_SetTxInterruptHandler	;wreg free
 10508                           
 10509                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 10510  012D6C  013D               	movlb	61	; () banked
 10511  012D6E  6BD4               	clrf	212,b	;volatile
 10512                           
 10513                           ; BSR set to: 61
 10514                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 10515  012D70  6BD6               	clrf	214,b	;volatile
 10516                           
 10517                           ; BSR set to: 61
 10518                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 10519  012D72  6BD8               	clrf	216,b	;volatile
 10520                           
 10521                           ; BSR set to: 61
 10522                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 10523  012D74  0EB0               	movlw	176
 10524  012D76  6FDA               	movwf	218,b	;volatile
 10525                           
 10526                           ; BSR set to: 61
 10527                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 10528  012D78  0E80               	movlw	128
 10529  012D7A  6FDB               	movwf	219,b	;volatile
 10530                           
 10531                           ; BSR set to: 61
 10532                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 10533  012D7C  6BDC               	clrf	220,b	;volatile
 10534                           
 10535                           ; BSR set to: 61
 10536                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 10537  012D7E  0E82               	movlw	130
 10538  012D80  6FDD               	movwf	221,b	;volatile
 10539                           
 10540                           ; BSR set to: 61
 10541                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 10542  012D82  0E06               	movlw	6
 10543  012D84  6FDE               	movwf	222,b	;volatile
 10544                           
 10545                           ; BSR set to: 61
 10546                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 10547  012D86  6BDF               	clrf	223,b	;volatile
 10548                           
 10549                           ; BSR set to: 61
 10550                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 10551  012D88  6BE0               	clrf	224,b	;volatile
 10552                           
 10553                           ; BSR set to: 61
 10554                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 10555  012D8A  6BE1               	clrf	225,b	;volatile
 10556                           
 10557                           ; BSR set to: 61
 10558                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 10559  012D8C  6BE2               	clrf	226,b	;volatile
 10560                           
 10561                           ; BSR set to: 61
 10562                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 10563  012D8E  6A2E               	clrf	_uart2TxHead^0,c	;volatile
 10564                           
 10565                           ; BSR set to: 61
 10566                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 10567  012D90  6A2D               	clrf	_uart2TxTail^0,c	;volatile
 10568                           
 10569                           ; BSR set to: 61
 10570                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 10571  012D92  0E40               	movlw	64
 10572  012D94  6E2C               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 10573                           
 10574                           ; BSR set to: 61
 10575                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 10576  012D96  6A2B               	clrf	_uart2RxHead^0,c	;volatile
 10577                           
 10578                           ; BSR set to: 61
 10579                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 10580  012D98  6A2A               	clrf	_uart2RxTail^0,c	;volatile
 10581                           
 10582                           ; BSR set to: 61
 10583                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 10584  012D9A  6A29               	clrf	_uart2RxCount^0,c	;volatile
 10585                           
 10586                           ; BSR set to: 61
 10587                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 10588  012D9C  0139               	movlb	57	; () banked
 10589  012D9E  8596               	bsf	150,2,b	;volatile
 10590                           
 10591                           ; BSR set to: 57
 10592                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 10593  012DA0  0012               	return		;funcret
 10594  012DA2                     __end_of_UART2_Initialize:
 10595                           	opt callstack 0
 10596                           
 10597 ;; *************** function _UART2_SetTxInterruptHandler *****************
 10598 ;; Defined at:
 10599 ;;		line 252 in file "mcc_generated_files/uart2.c"
 10600 ;; Parameters:    Size  Location     Type
 10601 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10602 ;;		 -> UART2_Transmit_ISR(1), 
 10603 ;; Auto vars:     Size  Location     Type
 10604 ;;		None
 10605 ;; Return value:  Size  Location     Type
 10606 ;;                  1  [STACK] void 
 10607 ;; Registers used:
 10608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10609 ;; Tracked objects:
 10610 ;;		On entry : 3F/39
 10611 ;;		On exit  : 0/0
 10612 ;;		Unchanged: 0/0
 10613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10618 ;;Total ram usage:        0 bytes
 10619 ;; Hardware stack levels used:    1
 10620 ;; Hardware stack levels required when called:    6
 10621 ;; This function calls:
 10622 ;;		Nothing
 10623 ;; This function is called by:
 10624 ;;		_UART2_Initialize
 10625 ;; This function uses a reentrant model
 10626 ;;
 10627                           
 10628                           	psect	text61
 10629  0133EC                     __ptext61:
 10630                           	opt callstack 0
 10631  0133EC                     _UART2_SetTxInterruptHandler:
 10632                           	opt callstack 22
 10633                           
 10634                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 10635                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10636                           
 10637                           ; BSR set to: 57
 10638                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10639                           ;incstack = 0
 10640  0133EC  50E1               	movf	fsr1l,w,c
 10641  0133EE  0FFD               	addlw	-3
 10642  0133F0  6ED9               	movwf	fsr2l,c
 10643  0133F2  50E2               	movf	fsr1h,w,c
 10644  0133F4  6EDA               	movwf	fsr2h,c
 10645  0133F6  0EFF               	movlw	255
 10646  0133F8  22DA               	addwfc	fsr2h,f,c
 10647  0133FA  006F FF78  F010    	movff	postinc2,_UART2_TxInterruptHandler
 10648  013400  006F FF78  F011    	movff	postinc2,_UART2_TxInterruptHandler+1
 10649  013406  006F FF74  F012    	movff	postdec2,_UART2_TxInterruptHandler+2
 10650                           
 10651                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 10652  01340C  52E5               	movf	postdec1,f,c
 10653  01340E  52E5               	movf	postdec1,f,c
 10654  013410  52E5               	movf	postdec1,f,c
 10655  013412  0012               	return		;funcret
 10656  013414                     __end_of_UART2_SetTxInterruptHandler:
 10657                           	opt callstack 0
 10658                           
 10659 ;; *************** function _UART2_SetRxInterruptHandler *****************
 10660 ;; Defined at:
 10661 ;;		line 248 in file "mcc_generated_files/uart2.c"
 10662 ;; Parameters:    Size  Location     Type
 10663 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10664 ;;		 -> UART2_Receive_ISR(1), 
 10665 ;; Auto vars:     Size  Location     Type
 10666 ;;		None
 10667 ;; Return value:  Size  Location     Type
 10668 ;;                  1  [STACK] void 
 10669 ;; Registers used:
 10670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10671 ;; Tracked objects:
 10672 ;;		On entry : 3F/39
 10673 ;;		On exit  : 0/0
 10674 ;;		Unchanged: 0/0
 10675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10680 ;;Total ram usage:        0 bytes
 10681 ;; Hardware stack levels used:    1
 10682 ;; Hardware stack levels required when called:    6
 10683 ;; This function calls:
 10684 ;;		Nothing
 10685 ;; This function is called by:
 10686 ;;		_UART2_Initialize
 10687 ;; This function uses a reentrant model
 10688 ;;
 10689                           
 10690                           	psect	text62
 10691  013414                     __ptext62:
 10692                           	opt callstack 0
 10693  013414                     _UART2_SetRxInterruptHandler:
 10694                           	opt callstack 22
 10695                           
 10696                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 10697                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10698                           
 10699                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10700                           ;incstack = 0
 10701  013414  50E1               	movf	fsr1l,w,c
 10702  013416  0FFD               	addlw	-3
 10703  013418  6ED9               	movwf	fsr2l,c
 10704  01341A  50E2               	movf	fsr1h,w,c
 10705  01341C  6EDA               	movwf	fsr2h,c
 10706  01341E  0EFF               	movlw	255
 10707  013420  22DA               	addwfc	fsr2h,f,c
 10708  013422  006F FF78  F013    	movff	postinc2,_UART2_RxInterruptHandler
 10709  013428  006F FF78  F014    	movff	postinc2,_UART2_RxInterruptHandler+1
 10710  01342E  006F FF74  F015    	movff	postdec2,_UART2_RxInterruptHandler+2
 10711                           
 10712                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 10713  013434  52E5               	movf	postdec1,f,c
 10714  013436  52E5               	movf	postdec1,f,c
 10715  013438  52E5               	movf	postdec1,f,c
 10716  01343A  0012               	return		;funcret
 10717  01343C                     __end_of_UART2_SetRxInterruptHandler:
 10718                           	opt callstack 0
 10719                           
 10720 ;; *************** function _UART1_Initialize *****************
 10721 ;; Defined at:
 10722 ;;		line 79 in file "mcc_generated_files/uart1.c"
 10723 ;; Parameters:    Size  Location     Type
 10724 ;;		None
 10725 ;; Auto vars:     Size  Location     Type
 10726 ;;		None
 10727 ;; Return value:  Size  Location     Type
 10728 ;;                  1  [STACK] void 
 10729 ;; Registers used:
 10730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 10731 ;; Tracked objects:
 10732 ;;		On entry : 0/39
 10733 ;;		On exit  : 3F/39
 10734 ;;		Unchanged: 0/0
 10735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10740 ;;Total ram usage:        0 bytes
 10741 ;; Hardware stack levels used:    1
 10742 ;; Hardware stack levels required when called:    7
 10743 ;; This function calls:
 10744 ;;		_UART1_SetRxInterruptHandler
 10745 ;;		_UART1_SetTxInterruptHandler
 10746 ;; This function is called by:
 10747 ;;		_SYSTEM_Initialize
 10748 ;; This function uses a reentrant model
 10749 ;;
 10750                           
 10751                           	psect	text63
 10752  012C7E                     __ptext63:
 10753                           	opt callstack 0
 10754  012C7E                     _UART1_Initialize:
 10755                           	opt callstack 22
 10756                           
 10757                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 10758                           
 10759                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10760                           ;incstack = 0
 10761  012C7E  0139               	movlb	57	; () banked
 10762  012C80  9793               	bcf	147,3,b	;volatile
 10763                           
 10764                           ; BSR set to: 57
 10765                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 10766  012C82  0E40               	movlw	low _UART1_Receive_ISR
 10767  012C84  6EE6               	movwf	postinc1,c
 10768  012C86  0E37               	movlw	high _UART1_Receive_ISR
 10769  012C88  6EE6               	movwf	postinc1,c
 10770  012C8A  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 10771  012C8C  6EE6               	movwf	postinc1,c
 10772  012C8E  EC32  F09A         	call	_UART1_SetRxInterruptHandler	;wreg free
 10773                           
 10774                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 10775  012C92  0139               	movlb	57	; () banked
 10776  012C94  9993               	bcf	147,4,b	;volatile
 10777                           
 10778                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 10779  012C96  0EF2               	movlw	low _UART1_Transmit_ISR
 10780  012C98  6EE6               	movwf	postinc1,c
 10781  012C9A  0E32               	movlw	high _UART1_Transmit_ISR
 10782  012C9C  6EE6               	movwf	postinc1,c
 10783  012C9E  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 10784  012CA0  6EE6               	movwf	postinc1,c
 10785  012CA2  EC1E  F09A         	call	_UART1_SetTxInterruptHandler	;wreg free
 10786                           
 10787                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 10788  012CA6  013D               	movlb	61	; () banked
 10789  012CA8  6BEC               	clrf	236,b	;volatile
 10790                           
 10791                           ; BSR set to: 61
 10792                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 10793  012CAA  6BED               	clrf	237,b	;volatile
 10794                           
 10795                           ; BSR set to: 61
 10796                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 10797  012CAC  6BEE               	clrf	238,b	;volatile
 10798                           
 10799                           ; BSR set to: 61
 10800                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 10801  012CAE  6BEF               	clrf	239,b	;volatile
 10802                           
 10803                           ; BSR set to: 61
 10804                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 10805  012CB0  6BF0               	clrf	240,b	;volatile
 10806                           
 10807                           ; BSR set to: 61
 10808                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 10809  012CB2  6BF1               	clrf	241,b	;volatile
 10810                           
 10811                           ; BSR set to: 61
 10812                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 10813  012CB4  0EB0               	movlw	176
 10814  012CB6  6FF2               	movwf	242,b	;volatile
 10815                           
 10816                           ; BSR set to: 61
 10817                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 10818  012CB8  0E80               	movlw	128
 10819  012CBA  6FF3               	movwf	243,b	;volatile
 10820                           
 10821                           ; BSR set to: 61
 10822                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 10823  012CBC  6BF4               	clrf	244,b	;volatile
 10824                           
 10825                           ; BSR set to: 61
 10826                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 10827  012CBE  0E82               	movlw	130
 10828  012CC0  6FF5               	movwf	245,b	;volatile
 10829                           
 10830                           ; BSR set to: 61
 10831                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 10832  012CC2  0E06               	movlw	6
 10833  012CC4  6FF6               	movwf	246,b	;volatile
 10834                           
 10835                           ; BSR set to: 61
 10836                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 10837  012CC6  6BF7               	clrf	247,b	;volatile
 10838                           
 10839                           ; BSR set to: 61
 10840                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 10841  012CC8  6BF8               	clrf	248,b	;volatile
 10842                           
 10843                           ; BSR set to: 61
 10844                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 10845  012CCA  6BF9               	clrf	249,b	;volatile
 10846                           
 10847                           ; BSR set to: 61
 10848                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 10849  012CCC  6BFA               	clrf	250,b	;volatile
 10850                           
 10851                           ; BSR set to: 61
 10852                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 10853  012CCE  6A34               	clrf	_uart1TxHead^0,c	;volatile
 10854                           
 10855                           ; BSR set to: 61
 10856                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 10857  012CD0  6A33               	clrf	_uart1TxTail^0,c	;volatile
 10858                           
 10859                           ; BSR set to: 61
 10860                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 10861  012CD2  0E40               	movlw	64
 10862  012CD4  6E32               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 10863                           
 10864                           ; BSR set to: 61
 10865                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 10866  012CD6  6A31               	clrf	_uart1RxHead^0,c	;volatile
 10867                           
 10868                           ; BSR set to: 61
 10869                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 10870  012CD8  6A30               	clrf	_uart1RxTail^0,c	;volatile
 10871                           
 10872                           ; BSR set to: 61
 10873                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 10874  012CDA  6A2F               	clrf	_uart1RxCount^0,c	;volatile
 10875                           
 10876                           ; BSR set to: 61
 10877                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 10878  012CDC  0139               	movlb	57	; () banked
 10879  012CDE  8793               	bsf	147,3,b	;volatile
 10880                           
 10881                           ; BSR set to: 57
 10882                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 10883  012CE0  0012               	return		;funcret
 10884  012CE2                     __end_of_UART1_Initialize:
 10885                           	opt callstack 0
 10886                           
 10887 ;; *************** function _UART1_SetTxInterruptHandler *****************
 10888 ;; Defined at:
 10889 ;;		line 246 in file "mcc_generated_files/uart1.c"
 10890 ;; Parameters:    Size  Location     Type
 10891 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10892 ;;		 -> UART1_Transmit_ISR(1), 
 10893 ;; Auto vars:     Size  Location     Type
 10894 ;;		None
 10895 ;; Return value:  Size  Location     Type
 10896 ;;                  1  [STACK] void 
 10897 ;; Registers used:
 10898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10899 ;; Tracked objects:
 10900 ;;		On entry : 3F/39
 10901 ;;		On exit  : 0/0
 10902 ;;		Unchanged: 0/0
 10903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10908 ;;Total ram usage:        0 bytes
 10909 ;; Hardware stack levels used:    1
 10910 ;; Hardware stack levels required when called:    6
 10911 ;; This function calls:
 10912 ;;		Nothing
 10913 ;; This function is called by:
 10914 ;;		_UART1_Initialize
 10915 ;; This function uses a reentrant model
 10916 ;;
 10917                           
 10918                           	psect	text64
 10919  01343C                     __ptext64:
 10920                           	opt callstack 0
 10921  01343C                     _UART1_SetTxInterruptHandler:
 10922                           	opt callstack 22
 10923                           
 10924                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 10925                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10926                           
 10927                           ; BSR set to: 57
 10928                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10929                           ;incstack = 0
 10930  01343C  50E1               	movf	fsr1l,w,c
 10931  01343E  0FFD               	addlw	-3
 10932  013440  6ED9               	movwf	fsr2l,c
 10933  013442  50E2               	movf	fsr1h,w,c
 10934  013444  6EDA               	movwf	fsr2h,c
 10935  013446  0EFF               	movlw	255
 10936  013448  22DA               	addwfc	fsr2h,f,c
 10937  01344A  006F FF78  F00A    	movff	postinc2,_UART1_TxInterruptHandler
 10938  013450  006F FF78  F00B    	movff	postinc2,_UART1_TxInterruptHandler+1
 10939  013456  006F FF74  F00C    	movff	postdec2,_UART1_TxInterruptHandler+2
 10940                           
 10941                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 10942  01345C  52E5               	movf	postdec1,f,c
 10943  01345E  52E5               	movf	postdec1,f,c
 10944  013460  52E5               	movf	postdec1,f,c
 10945  013462  0012               	return		;funcret
 10946  013464                     __end_of_UART1_SetTxInterruptHandler:
 10947                           	opt callstack 0
 10948                           
 10949 ;; *************** function _UART1_SetRxInterruptHandler *****************
 10950 ;; Defined at:
 10951 ;;		line 241 in file "mcc_generated_files/uart1.c"
 10952 ;; Parameters:    Size  Location     Type
 10953 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10954 ;;		 -> UART1_Receive_ISR(1), 
 10955 ;; Auto vars:     Size  Location     Type
 10956 ;;		None
 10957 ;; Return value:  Size  Location     Type
 10958 ;;                  1  [STACK] void 
 10959 ;; Registers used:
 10960 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10961 ;; Tracked objects:
 10962 ;;		On entry : 3F/39
 10963 ;;		On exit  : 0/0
 10964 ;;		Unchanged: 0/0
 10965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10970 ;;Total ram usage:        0 bytes
 10971 ;; Hardware stack levels used:    1
 10972 ;; Hardware stack levels required when called:    6
 10973 ;; This function calls:
 10974 ;;		Nothing
 10975 ;; This function is called by:
 10976 ;;		_UART1_Initialize
 10977 ;; This function uses a reentrant model
 10978 ;;
 10979                           
 10980                           	psect	text65
 10981  013464                     __ptext65:
 10982                           	opt callstack 0
 10983  013464                     _UART1_SetRxInterruptHandler:
 10984                           	opt callstack 22
 10985                           
 10986                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 10987                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10988                           
 10989                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10990                           ;incstack = 0
 10991  013464  50E1               	movf	fsr1l,w,c
 10992  013466  0FFD               	addlw	-3
 10993  013468  6ED9               	movwf	fsr2l,c
 10994  01346A  50E2               	movf	fsr1h,w,c
 10995  01346C  6EDA               	movwf	fsr2h,c
 10996  01346E  0EFF               	movlw	255
 10997  013470  22DA               	addwfc	fsr2h,f,c
 10998  013472  006F FF78  F00D    	movff	postinc2,_UART1_RxInterruptHandler
 10999  013478  006F FF78  F00E    	movff	postinc2,_UART1_RxInterruptHandler+1
 11000  01347E  006F FF74  F00F    	movff	postdec2,_UART1_RxInterruptHandler+2
 11001                           
 11002                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 11003  013484  52E5               	movf	postdec1,f,c
 11004  013486  52E5               	movf	postdec1,f,c
 11005  013488  52E5               	movf	postdec1,f,c
 11006  01348A  0012               	return		;funcret
 11007  01348C                     __end_of_UART1_SetRxInterruptHandler:
 11008                           	opt callstack 0
 11009                           
 11010 ;; *************** function _TMR6_Initialize *****************
 11011 ;; Defined at:
 11012 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 11013 ;; Parameters:    Size  Location     Type
 11014 ;;		None
 11015 ;; Auto vars:     Size  Location     Type
 11016 ;;		None
 11017 ;; Return value:  Size  Location     Type
 11018 ;;                  1  [STACK] void 
 11019 ;; Registers used:
 11020 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 11021 ;; Tracked objects:
 11022 ;;		On entry : 3F/39
 11023 ;;		On exit  : 0/0
 11024 ;;		Unchanged: 0/0
 11025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11030 ;;Total ram usage:        0 bytes
 11031 ;; Hardware stack levels used:    1
 11032 ;; Hardware stack levels required when called:    7
 11033 ;; This function calls:
 11034 ;;		_TMR6_SetInterruptHandler
 11035 ;; This function is called by:
 11036 ;;		_SYSTEM_Initialize
 11037 ;; This function uses a reentrant model
 11038 ;;
 11039                           
 11040                           	psect	text66
 11041  01334A                     __ptext66:
 11042                           	opt callstack 0
 11043  01334A                     _TMR6_Initialize:
 11044                           	opt callstack 22
 11045                           
 11046                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 11047                           
 11048                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11049                           ;incstack = 0
 11050  01334A  0E01               	movlw	1
 11051  01334C  6E96               	movwf	150,c	;volatile
 11052                           
 11053                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 11054  01334E  6A95               	clrf	149,c	;volatile
 11055                           
 11056                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 11057  013350  6A97               	clrf	151,c	;volatile
 11058                           
 11059                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 11060  013352  0E7C               	movlw	124
 11061  013354  6E93               	movwf	147,c	;volatile
 11062                           
 11063                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 11064  013356  6A92               	clrf	146,c	;volatile
 11065                           
 11066                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 11067  013358  0139               	movlb	57	; () banked
 11068  01335A  91A9               	bcf	169,0,b	;volatile
 11069                           
 11070                           ; BSR set to: 57
 11071                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 11072  01335C  8199               	bsf	153,0,b	;volatile
 11073                           
 11074                           ; BSR set to: 57
 11075                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 11076  01335E  0ED8               	movlw	low _TMR6_DefaultInterruptHandler
 11077  013360  6EE6               	movwf	postinc1,c
 11078  013362  0E2F               	movlw	high _TMR6_DefaultInterruptHandler
 11079  013364  6EE6               	movwf	postinc1,c
 11080  013366  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 11081  013368  6EE6               	movwf	postinc1,c
 11082  01336A  EC46  F09A         	call	_TMR6_SetInterruptHandler	;wreg free
 11083                           
 11084                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 11085  01336E  0EE0               	movlw	224
 11086  013370  6E94               	movwf	148,c	;volatile
 11087                           
 11088                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11089  013372  0012               	return		;funcret
 11090  013374                     __end_of_TMR6_Initialize:
 11091                           	opt callstack 0
 11092                           
 11093 ;; *************** function _TMR6_SetInterruptHandler *****************
 11094 ;; Defined at:
 11095 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 11096 ;; Parameters:    Size  Location     Type
 11097 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11098 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 11099 ;; Auto vars:     Size  Location     Type
 11100 ;;		None
 11101 ;; Return value:  Size  Location     Type
 11102 ;;                  1  [STACK] void 
 11103 ;; Registers used:
 11104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11105 ;; Tracked objects:
 11106 ;;		On entry : 3F/39
 11107 ;;		On exit  : 0/0
 11108 ;;		Unchanged: 0/0
 11109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11114 ;;Total ram usage:        0 bytes
 11115 ;; Hardware stack levels used:    1
 11116 ;; Hardware stack levels required when called:    6
 11117 ;; This function calls:
 11118 ;;		Nothing
 11119 ;; This function is called by:
 11120 ;;		_TMR6_Initialize
 11121 ;; This function uses a reentrant model
 11122 ;;
 11123                           
 11124                           	psect	text67
 11125  01348C                     __ptext67:
 11126                           	opt callstack 0
 11127  01348C                     _TMR6_SetInterruptHandler:
 11128                           	opt callstack 22
 11129                           
 11130                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 11131                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11132                           
 11133                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11134                           ;incstack = 0
 11135  01348C  50E1               	movf	fsr1l,w,c
 11136  01348E  0FFD               	addlw	-3
 11137  013490  6ED9               	movwf	fsr2l,c
 11138  013492  50E2               	movf	fsr1h,w,c
 11139  013494  6EDA               	movwf	fsr2h,c
 11140  013496  0EFF               	movlw	255
 11141  013498  22DA               	addwfc	fsr2h,f,c
 11142  01349A  006F FF78  F001    	movff	postinc2,_TMR6_InterruptHandler
 11143  0134A0  006F FF78  F002    	movff	postinc2,_TMR6_InterruptHandler+1
 11144  0134A6  006F FF74  F003    	movff	postdec2,_TMR6_InterruptHandler+2
 11145                           
 11146                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 11147  0134AC  52E5               	movf	postdec1,f,c
 11148  0134AE  52E5               	movf	postdec1,f,c
 11149  0134B0  52E5               	movf	postdec1,f,c
 11150  0134B2  0012               	return		;funcret
 11151  0134B4                     __end_of_TMR6_SetInterruptHandler:
 11152                           	opt callstack 0
 11153                           
 11154 ;; *************** function _TMR5_Initialize *****************
 11155 ;; Defined at:
 11156 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 11157 ;; Parameters:    Size  Location     Type
 11158 ;;		None
 11159 ;; Auto vars:     Size  Location     Type
 11160 ;;		None
 11161 ;; Return value:  Size  Location     Type
 11162 ;;                  1  [STACK] void 
 11163 ;; Registers used:
 11164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 11165 ;; Tracked objects:
 11166 ;;		On entry : 0/39
 11167 ;;		On exit  : 0/0
 11168 ;;		Unchanged: 0/0
 11169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11174 ;;Total ram usage:        0 bytes
 11175 ;; Hardware stack levels used:    1
 11176 ;; Hardware stack levels required when called:    7
 11177 ;; This function calls:
 11178 ;;		_TMR5_SetInterruptHandler
 11179 ;; This function is called by:
 11180 ;;		_SYSTEM_Initialize
 11181 ;; This function uses a reentrant model
 11182 ;;
 11183                           
 11184                           	psect	text68
 11185  012F92                     __ptext68:
 11186                           	opt callstack 0
 11187  012F92                     _TMR5_Initialize:
 11188                           	opt callstack 22
 11189                           
 11190                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 11191                           
 11192                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11193                           ;incstack = 0
 11194  012F92  6A9B               	clrf	155,c	;volatile
 11195                           
 11196                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 11197  012F94  6A9C               	clrf	156,c	;volatile
 11198                           
 11199                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 11200  012F96  0E01               	movlw	1
 11201  012F98  6E9D               	movwf	157,c	;volatile
 11202                           
 11203                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 11204  012F9A  0E63               	movlw	99
 11205  012F9C  6E99               	movwf	153,c	;volatile
 11206                           
 11207                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 11208  012F9E  0EC0               	movlw	192
 11209  012FA0  6E98               	movwf	152,c	;volatile
 11210                           
 11211                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 11212  012FA2  5098               	movf	152,w,c	;volatile
 11213  012FA4  006F FE64  F035    	movff	16281,btemp	;volatile
 11214  012FAA  6A36               	clrf	(btemp+1)^0,c
 11215  012FAC  0060  F0D4  F036   	movff	btemp,btemp+1
 11216  012FB2  6A35               	clrf	btemp^0,c
 11217  012FB4  1035               	iorwf	btemp^0,w,c
 11218  012FB6  6E26               	movwf	_timer5ReloadVal^0,c	;volatile
 11219  012FB8  5036               	movf	(btemp+1)^0,w,c
 11220  012FBA  6E27               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 11221                           
 11222                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 11223  012FBC  0139               	movlb	57	; () banked
 11224  012FBE  9DA8               	bcf	168,6,b	;volatile
 11225                           
 11226                           ; BSR set to: 57
 11227                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 11228  012FC0  8D98               	bsf	152,6,b	;volatile
 11229                           
 11230                           ; BSR set to: 57
 11231                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 11232  012FC2  0ECE               	movlw	low _TMR5_DefaultInterruptHandler
 11233  012FC4  6EE6               	movwf	postinc1,c
 11234  012FC6  0E37               	movlw	high _TMR5_DefaultInterruptHandler
 11235  012FC8  6EE6               	movwf	postinc1,c
 11236  012FCA  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 11237  012FCC  6EE6               	movwf	postinc1,c
 11238  012FCE  EC5A  F09A         	call	_TMR5_SetInterruptHandler	;wreg free
 11239                           
 11240                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 11241  012FD2  0E31               	movlw	49
 11242  012FD4  6E9A               	movwf	154,c	;volatile
 11243                           
 11244                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11245  012FD6  0012               	return		;funcret
 11246  012FD8                     __end_of_TMR5_Initialize:
 11247                           	opt callstack 0
 11248                           
 11249 ;; *************** function _TMR5_SetInterruptHandler *****************
 11250 ;; Defined at:
 11251 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 11252 ;; Parameters:    Size  Location     Type
 11253 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11254 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 11255 ;; Auto vars:     Size  Location     Type
 11256 ;;		None
 11257 ;; Return value:  Size  Location     Type
 11258 ;;                  1  [STACK] void 
 11259 ;; Registers used:
 11260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11261 ;; Tracked objects:
 11262 ;;		On entry : 3F/39
 11263 ;;		On exit  : 0/0
 11264 ;;		Unchanged: 0/0
 11265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11270 ;;Total ram usage:        0 bytes
 11271 ;; Hardware stack levels used:    1
 11272 ;; Hardware stack levels required when called:    6
 11273 ;; This function calls:
 11274 ;;		Nothing
 11275 ;; This function is called by:
 11276 ;;		_TMR5_Initialize
 11277 ;; This function uses a reentrant model
 11278 ;;
 11279                           
 11280                           	psect	text69
 11281  0134B4                     __ptext69:
 11282                           	opt callstack 0
 11283  0134B4                     _TMR5_SetInterruptHandler:
 11284                           	opt callstack 22
 11285                           
 11286                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 11287                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11288                           
 11289                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11290                           ;incstack = 0
 11291  0134B4  50E1               	movf	fsr1l,w,c
 11292  0134B6  0FFD               	addlw	-3
 11293  0134B8  6ED9               	movwf	fsr2l,c
 11294  0134BA  50E2               	movf	fsr1h,w,c
 11295  0134BC  6EDA               	movwf	fsr2h,c
 11296  0134BE  0EFF               	movlw	255
 11297  0134C0  22DA               	addwfc	fsr2h,f,c
 11298  0134C2  006F FF78  F0AA    	movff	postinc2,_TMR5_InterruptHandler
 11299  0134C8  006F FF78  F0AB    	movff	postinc2,_TMR5_InterruptHandler+1
 11300  0134CE  006F FF74  F0AC    	movff	postdec2,_TMR5_InterruptHandler+2
 11301                           
 11302                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 11303  0134D4  52E5               	movf	postdec1,f,c
 11304  0134D6  52E5               	movf	postdec1,f,c
 11305  0134D8  52E5               	movf	postdec1,f,c
 11306  0134DA  0012               	return		;funcret
 11307  0134DC                     __end_of_TMR5_SetInterruptHandler:
 11308                           	opt callstack 0
 11309                           
 11310 ;; *************** function _TMR2_Initialize *****************
 11311 ;; Defined at:
 11312 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 11313 ;; Parameters:    Size  Location     Type
 11314 ;;		None
 11315 ;; Auto vars:     Size  Location     Type
 11316 ;;		None
 11317 ;; Return value:  Size  Location     Type
 11318 ;;                  1  [STACK] void 
 11319 ;; Registers used:
 11320 ;;		wreg, status,2
 11321 ;; Tracked objects:
 11322 ;;		On entry : 0/3E
 11323 ;;		On exit  : 3F/39
 11324 ;;		Unchanged: 0/0
 11325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11330 ;;Total ram usage:        0 bytes
 11331 ;; Hardware stack levels used:    1
 11332 ;; Hardware stack levels required when called:    6
 11333 ;; This function calls:
 11334 ;;		Nothing
 11335 ;; This function is called by:
 11336 ;;		_SYSTEM_Initialize
 11337 ;; This function uses a reentrant model
 11338 ;;
 11339                           
 11340                           	psect	text70
 11341  01381A                     __ptext70:
 11342                           	opt callstack 0
 11343  01381A                     _TMR2_Initialize:
 11344                           	opt callstack 23
 11345                           
 11346                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 11347                           
 11348                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11349                           ;incstack = 0
 11350  01381A  0E01               	movlw	1
 11351  01381C  6EAE               	movwf	174,c	;volatile
 11352                           
 11353                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 11354  01381E  6AAD               	clrf	173,c	;volatile
 11355                           
 11356                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 11357  013820  6AAF               	clrf	175,c	;volatile
 11358                           
 11359                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 11360  013822  0E63               	movlw	99
 11361  013824  6EAB               	movwf	171,c	;volatile
 11362                           
 11363                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 11364  013826  6AAA               	clrf	170,c	;volatile
 11365                           
 11366                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 11367  013828  0139               	movlb	57	; () banked
 11368  01382A  95A4               	bcf	164,2,b	;volatile
 11369                           
 11370                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 11371  01382C  0EC0               	movlw	192
 11372  01382E  6EAC               	movwf	172,c	;volatile
 11373                           
 11374                           ; BSR set to: 57
 11375                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11376  013830  0012               	return		;funcret
 11377  013832                     __end_of_TMR2_Initialize:
 11378                           	opt callstack 0
 11379                           
 11380 ;; *************** function _SPI1_Initialize *****************
 11381 ;; Defined at:
 11382 ;;		line 64 in file "mcc_generated_files/spi1.c"
 11383 ;; Parameters:    Size  Location     Type
 11384 ;;		None
 11385 ;; Auto vars:     Size  Location     Type
 11386 ;;		None
 11387 ;; Return value:  Size  Location     Type
 11388 ;;                  1  [STACK] void 
 11389 ;; Registers used:
 11390 ;;		wreg, status,2
 11391 ;; Tracked objects:
 11392 ;;		On entry : 3F/39
 11393 ;;		On exit  : 3F/3D
 11394 ;;		Unchanged: 0/0
 11395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11400 ;;Total ram usage:        0 bytes
 11401 ;; Hardware stack levels used:    1
 11402 ;; Hardware stack levels required when called:    6
 11403 ;; This function calls:
 11404 ;;		Nothing
 11405 ;; This function is called by:
 11406 ;;		_SYSTEM_Initialize
 11407 ;; This function uses a reentrant model
 11408 ;;
 11409                           
 11410                           	psect	text71
 11411  01384A                     __ptext71:
 11412                           	opt callstack 0
 11413  01384A                     _SPI1_Initialize:
 11414                           	opt callstack 23
 11415                           
 11416                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 11417                           
 11418                           ; BSR set to: 57
 11419                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11420                           ;incstack = 0
 11421  01384A  0E40               	movlw	64
 11422  01384C  013D               	movlb	61	; () banked
 11423  01384E  6F15               	movwf	21,b	;volatile
 11424                           
 11425                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 11426  013850  0E03               	movlw	3
 11427  013852  6F16               	movwf	22,b	;volatile
 11428                           
 11429                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 11430  013854  0E4F               	movlw	79
 11431  013856  6F19               	movwf	25,b	;volatile
 11432                           
 11433                           ; BSR set to: 61
 11434                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 11435  013858  6B1C               	clrf	28,b	;volatile
 11436                           
 11437                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 11438  01385A  0E83               	movlw	131
 11439  01385C  6F14               	movwf	20,b	;volatile
 11440                           
 11441                           ; BSR set to: 61
 11442                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11443  01385E  0012               	return		;funcret
 11444  013860                     __end_of_SPI1_Initialize:
 11445                           	opt callstack 0
 11446                           
 11447 ;; *************** function _PWM8_Initialize *****************
 11448 ;; Defined at:
 11449 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 11450 ;; Parameters:    Size  Location     Type
 11451 ;;		None
 11452 ;; Auto vars:     Size  Location     Type
 11453 ;;		None
 11454 ;; Return value:  Size  Location     Type
 11455 ;;                  1  [STACK] void 
 11456 ;; Registers used:
 11457 ;;		wreg, status,2
 11458 ;; Tracked objects:
 11459 ;;		On entry : 3F/39
 11460 ;;		On exit  : 3F/3F
 11461 ;;		Unchanged: 0/0
 11462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11467 ;;Total ram usage:        0 bytes
 11468 ;; Hardware stack levels used:    1
 11469 ;; Hardware stack levels required when called:    6
 11470 ;; This function calls:
 11471 ;;		Nothing
 11472 ;; This function is called by:
 11473 ;;		_SYSTEM_Initialize
 11474 ;; This function uses a reentrant model
 11475 ;;
 11476                           
 11477                           	psect	text72
 11478  013860                     __ptext72:
 11479                           	opt callstack 0
 11480  013860                     _PWM8_Initialize:
 11481                           	opt callstack 23
 11482                           
 11483                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 11484                           
 11485                           ; BSR set to: 61
 11486                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11487                           ;incstack = 0
 11488  013860  0E80               	movlw	128
 11489  013862  6E62               	movwf	98,c	;volatile
 11490                           
 11491                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 11492  013864  6A61               	clrf	97,c	;volatile
 11493                           
 11494                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 11495  013866  0E40               	movlw	64
 11496  013868  6E60               	movwf	96,c	;volatile
 11497                           
 11498                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 11499  01386A  013F               	movlb	63	; () banked
 11500  01386C  515F               	movf	95,w,b	;volatile
 11501  01386E  0B3F               	andlw	-193
 11502  013870  0940               	iorlw	64
 11503  013872  6F5F               	movwf	95,b	;volatile
 11504                           
 11505                           ; BSR set to: 63
 11506                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11507  013874  0012               	return		;funcret
 11508  013876                     __end_of_PWM8_Initialize:
 11509                           	opt callstack 0
 11510                           
 11511 ;; *************** function _PMD_Initialize *****************
 11512 ;; Defined at:
 11513 ;;		line 89 in file "mcc_generated_files/mcc.c"
 11514 ;; Parameters:    Size  Location     Type
 11515 ;;		None
 11516 ;; Auto vars:     Size  Location     Type
 11517 ;;		None
 11518 ;; Return value:  Size  Location     Type
 11519 ;;                  1  [STACK] void 
 11520 ;; Registers used:
 11521 ;;		None
 11522 ;; Tracked objects:
 11523 ;;		On entry : 3F/39
 11524 ;;		On exit  : 3F/39
 11525 ;;		Unchanged: 0/0
 11526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11531 ;;Total ram usage:        0 bytes
 11532 ;; Hardware stack levels used:    1
 11533 ;; Hardware stack levels required when called:    6
 11534 ;; This function calls:
 11535 ;;		Nothing
 11536 ;; This function is called by:
 11537 ;;		_SYSTEM_Initialize
 11538 ;; This function uses a reentrant model
 11539 ;;
 11540                           
 11541                           	psect	text73
 11542  01388C                     __ptext73:
 11543                           	opt callstack 0
 11544  01388C                     _PMD_Initialize:
 11545                           	opt callstack 23
 11546                           
 11547                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x00;
 11548                           
 11549                           ; BSR set to: 63
 11550                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11551                           ;incstack = 0
 11552  01388C  0139               	movlb	57	; () banked
 11553  01388E  6BC0               	clrf	192,b	;volatile
 11554                           
 11555                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x00;
 11556  013890  6BC1               	clrf	193,b	;volatile
 11557                           
 11558                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x00;
 11559  013892  6BC2               	clrf	194,b	;volatile
 11560                           
 11561                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0x00;
 11562  013894  6BC3               	clrf	195,b	;volatile
 11563                           
 11564                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0x00;
 11565  013896  6BC4               	clrf	196,b	;volatile
 11566                           
 11567                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x00;
 11568  013898  6BC5               	clrf	197,b	;volatile
 11569                           
 11570                           ;mcc_generated_files/mcc.c: 104:     PMD6 = 0x00;
 11571  01389A  6BC6               	clrf	198,b	;volatile
 11572                           
 11573                           ;mcc_generated_files/mcc.c: 106:     PMD7 = 0x00;
 11574  01389C  6BC7               	clrf	199,b	;volatile
 11575                           
 11576                           ; BSR set to: 57
 11577                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 11578  01389E  0012               	return		;funcret
 11579  0138A0                     __end_of_PMD_Initialize:
 11580                           	opt callstack 0
 11581                           
 11582 ;; *************** function _PIN_MANAGER_Initialize *****************
 11583 ;; Defined at:
 11584 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 11585 ;; Parameters:    Size  Location     Type
 11586 ;;		None
 11587 ;; Auto vars:     Size  Location     Type
 11588 ;;		None
 11589 ;; Return value:  Size  Location     Type
 11590 ;;                  1  [STACK] void 
 11591 ;; Registers used:
 11592 ;;		wreg, status,2
 11593 ;; Tracked objects:
 11594 ;;		On entry : 3F/39
 11595 ;;		On exit  : 3F/3A
 11596 ;;		Unchanged: 0/0
 11597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11602 ;;Total ram usage:        0 bytes
 11603 ;; Hardware stack levels used:    1
 11604 ;; Hardware stack levels required when called:    6
 11605 ;; This function calls:
 11606 ;;		Nothing
 11607 ;; This function is called by:
 11608 ;;		_SYSTEM_Initialize
 11609 ;; This function uses a reentrant model
 11610 ;;
 11611                           
 11612                           	psect	text74
 11613  012860                     __ptext74:
 11614                           	opt callstack 0
 11615  012860                     _PIN_MANAGER_Initialize:
 11616                           	opt callstack 23
 11617                           
 11618                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 11619                           
 11620                           ; BSR set to: 57
 11621                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11622                           ;incstack = 0
 11623  012860  0E07               	movlw	7
 11624  012862  6EBE               	movwf	190,c	;volatile
 11625                           
 11626                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 11627  012864  6ABD               	clrf	189,c	;volatile
 11628                           
 11629                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 11630  012866  6ABA               	clrf	186,c	;volatile
 11631                           
 11632                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 11633  012868  6ABF               	clrf	191,c	;volatile
 11634                           
 11635                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 11636  01286A  6ABB               	clrf	187,c	;volatile
 11637                           
 11638                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 11639  01286C  0E07               	movlw	7
 11640  01286E  6EBC               	movwf	188,c	;volatile
 11641                           
 11642                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 11643  012870  6AC6               	clrf	198,c	;volatile
 11644                           
 11645                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 11646  012872  0E0F               	movlw	15
 11647  012874  6EC7               	movwf	199,c	;volatile
 11648                           
 11649                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 11650  012876  68C2               	setf	194,c	;volatile
 11651                           
 11652                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 11653  012878  0EBF               	movlw	191
 11654  01287A  6EC3               	movwf	195,c	;volatile
 11655                           
 11656                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 11657  01287C  0E90               	movlw	144
 11658  01287E  6EC4               	movwf	196,c	;volatile
 11659                           
 11660                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 11661  012880  0E0C               	movlw	12
 11662  012882  6EC5               	movwf	197,c	;volatile
 11663                           
 11664                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 11665  012884  013A               	movlb	58	; () banked
 11666  012886  6B70               	clrf	112,b	;volatile
 11667                           
 11668                           ; BSR set to: 58
 11669                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 11670  012888  6B60               	clrf	96,b	;volatile
 11671                           
 11672                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 11673  01288A  0E3C               	movlw	60
 11674  01288C  6F50               	movwf	80,b	;volatile
 11675                           
 11676                           ; BSR set to: 58
 11677                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 11678  01288E  6B80               	clrf	128,b	;volatile
 11679                           
 11680                           ; BSR set to: 58
 11681                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 11682  012890  6B90               	clrf	144,b	;volatile
 11683                           
 11684                           ; BSR set to: 58
 11685                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 11686  012892  6940               	setf	64,b	;volatile
 11687                           
 11688                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 11689  012894  0E0C               	movlw	12
 11690  012896  6F71               	movwf	113,b	;volatile
 11691                           
 11692                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 11693  012898  0E0F               	movlw	15
 11694  01289A  6F91               	movwf	145,b	;volatile
 11695                           
 11696                           ; BSR set to: 58
 11697                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 11698  01289C  6B81               	clrf	129,b	;volatile
 11699                           
 11700                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 11701  01289E  0E87               	movlw	135
 11702  0128A0  6F51               	movwf	81,b	;volatile
 11703                           
 11704                           ; BSR set to: 58
 11705                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 11706  0128A2  6B41               	clrf	65,b	;volatile
 11707                           
 11708                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 11709  0128A4  0E97               	movlw	151
 11710  0128A6  6F61               	movwf	97,b	;volatile
 11711                           
 11712                           ; BSR set to: 58
 11713                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 11714  0128A8  6B82               	clrf	130,b	;volatile
 11715                           
 11716                           ; BSR set to: 58
 11717                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 11718  0128AA  6B92               	clrf	146,b	;volatile
 11719                           
 11720                           ; BSR set to: 58
 11721                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 11722  0128AC  6B42               	clrf	66,b	;volatile
 11723                           
 11724                           ; BSR set to: 58
 11725                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 11726  0128AE  6B52               	clrf	82,b	;volatile
 11727                           
 11728                           ; BSR set to: 58
 11729                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 11730  0128B0  6B62               	clrf	98,b	;volatile
 11731                           
 11732                           ; BSR set to: 58
 11733                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 11734  0128B2  6B72               	clrf	114,b	;volatile
 11735                           
 11736                           ; BSR set to: 58
 11737                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 11738  0128B4  6943               	setf	67,b	;volatile
 11739                           
 11740                           ; BSR set to: 58
 11741                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 11742  0128B6  6953               	setf	83,b	;volatile
 11743                           
 11744                           ; BSR set to: 58
 11745                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 11746  0128B8  6963               	setf	99,b	;volatile
 11747                           
 11748                           ; BSR set to: 58
 11749                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 11750  0128BA  6973               	setf	115,b	;volatile
 11751                           
 11752                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 11753  0128BC  0E07               	movlw	7
 11754  0128BE  6F83               	movwf	131,b	;volatile
 11755                           
 11756                           ; BSR set to: 58
 11757                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 11758  0128C0  6993               	setf	147,b	;volatile
 11759                           
 11760                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 11761  0128C2  0E0F               	movlw	15
 11762  0128C4  6FE8               	movwf	232,b	;volatile
 11763                           
 11764                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 11765  0128C6  0E13               	movlw	19
 11766  0128C8  6FDE               	movwf	222,b	;volatile
 11767                           
 11768                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 11769  0128CA  0E16               	movlw	22
 11770  0128CC  6F0E               	movwf	14,b	;volatile
 11771                           
 11772                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 11773  0128CE  0E1E               	movlw	30
 11774  0128D0  6F13               	movwf	19,b	;volatile
 11775                           
 11776                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 11777  0128D2  0E08               	movlw	8
 11778  0128D4  6FC0               	movwf	192,b	;volatile
 11779                           
 11780                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 11781  0128D6  0E10               	movlw	16
 11782  0128D8  6F19               	movwf	25,b	;volatile
 11783                           
 11784                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 11785  0128DA  0E09               	movlw	9
 11786  0128DC  6FC1               	movwf	193,b	;volatile
 11787                           
 11788                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 11789  0128DE  0E1F               	movlw	31
 11790  0128E0  6F15               	movwf	21,b	;volatile
 11791                           
 11792                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 11793  0128E2  0E13               	movlw	19
 11794  0128E4  6F16               	movwf	22,b	;volatile
 11795                           
 11796                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 11797  0128E6  0E17               	movlw	23
 11798  0128E8  6FE5               	movwf	229,b	;volatile
 11799                           
 11800                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 11801  0128EA  0E14               	movlw	20
 11802  0128EC  6FDF               	movwf	223,b	;volatile
 11803                           
 11804                           ; BSR set to: 58
 11805                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 11806  0128EE  0012               	return		;funcret
 11807  0128F0                     __end_of_PIN_MANAGER_Initialize:
 11808                           	opt callstack 0
 11809                           
 11810 ;; *************** function _OSCILLATOR_Initialize *****************
 11811 ;; Defined at:
 11812 ;;		line 71 in file "mcc_generated_files/mcc.c"
 11813 ;; Parameters:    Size  Location     Type
 11814 ;;		None
 11815 ;; Auto vars:     Size  Location     Type
 11816 ;;		None
 11817 ;; Return value:  Size  Location     Type
 11818 ;;                  1  [STACK] void 
 11819 ;; Registers used:
 11820 ;;		wreg, status,2
 11821 ;; Tracked objects:
 11822 ;;		On entry : 3F/3A
 11823 ;;		On exit  : 3F/39
 11824 ;;		Unchanged: 0/0
 11825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11830 ;;Total ram usage:        0 bytes
 11831 ;; Hardware stack levels used:    1
 11832 ;; Hardware stack levels required when called:    6
 11833 ;; This function calls:
 11834 ;;		Nothing
 11835 ;; This function is called by:
 11836 ;;		_SYSTEM_Initialize
 11837 ;; This function uses a reentrant model
 11838 ;;
 11839                           
 11840                           	psect	text75
 11841  013876                     __ptext75:
 11842                           	opt callstack 0
 11843  013876                     _OSCILLATOR_Initialize:
 11844                           	opt callstack 23
 11845                           
 11846                           ;mcc_generated_files/mcc.c: 74:     OSCCON1 = 0x20;
 11847                           
 11848                           ; BSR set to: 58
 11849                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11850                           ;incstack = 0
 11851  013876  0E20               	movlw	32
 11852  013878  0139               	movlb	57	; () banked
 11853  01387A  6FD9               	movwf	217,b	;volatile
 11854                           
 11855                           ; BSR set to: 57
 11856                           ;mcc_generated_files/mcc.c: 76:     OSCCON3 = 0x00;
 11857  01387C  6BDB               	clrf	219,b	;volatile
 11858                           
 11859                           ; BSR set to: 57
 11860                           ;mcc_generated_files/mcc.c: 78:     OSCEN = 0x00;
 11861  01387E  6BDD               	clrf	221,b	;volatile
 11862                           
 11863                           ;mcc_generated_files/mcc.c: 80:     OSCFRQ = 0x02;
 11864  013880  0E02               	movlw	2
 11865  013882  6FDF               	movwf	223,b	;volatile
 11866                           
 11867                           ; BSR set to: 57
 11868                           ;mcc_generated_files/mcc.c: 82:     OSCTUNE = 0x00;
 11869  013884  6BDE               	clrf	222,b	;volatile
 11870  013886                     l171:
 11871                           
 11872                           ; BSR set to: 57
 11873                           ;mcc_generated_files/mcc.c: 84:     while(PLLR == 0)
 11874  013886  B1DC               	btfsc	220,0,b	;volatile
 11875  013888  0012               	return	
 11876  01388A  D7FD               	goto	l171
 11877  01388C                     __end_of_OSCILLATOR_Initialize:
 11878                           	opt callstack 0
 11879                           
 11880 ;; *************** function _INTERRUPT_Initialize *****************
 11881 ;; Defined at:
 11882 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 11883 ;; Parameters:    Size  Location     Type
 11884 ;;		None
 11885 ;; Auto vars:     Size  Location     Type
 11886 ;;  state           1  [STACK] _Bool 
 11887 ;; Return value:  Size  Location     Type
 11888 ;;                  1  [STACK] void 
 11889 ;; Registers used:
 11890 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 11891 ;; Tracked objects:
 11892 ;;		On entry : 0/0
 11893 ;;		On exit  : 3F/39
 11894 ;;		Unchanged: 0/0
 11895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11900 ;;Total ram usage:        0 bytes
 11901 ;; Hardware stack levels used:    1
 11902 ;; Hardware stack levels required when called:    6
 11903 ;; This function calls:
 11904 ;;		Nothing
 11905 ;; This function is called by:
 11906 ;;		_SYSTEM_Initialize
 11907 ;; This function uses a reentrant model
 11908 ;;
 11909                           
 11910                           	psect	text76
 11911  012BB4                     __ptext76:
 11912                           	opt callstack 0
 11913  012BB4                     _INTERRUPT_Initialize:
 11914                           	opt callstack 0
 11915                           
 11916                           ; BSR set to: 57
 11917                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11918  012BB4  52E6               	movf	postinc1,f,c
 11919                           
 11920                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 11921                           
 11922                           ;incstack = 0
 11923  012BB6  8AD2               	bsf	210,5,c	;volatile
 11924                           
 11925                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 11926  012BB8  AED2               	btfss	16338,7,c	;volatile
 11927  012BBA  D003               	goto	u2900
 11928  012BBC  6A40               	clrf	(btemp+11)^0,c
 11929  012BBE  2A40               	incf	(btemp+11)^0,f,c
 11930  012BC0  D001               	goto	u2918
 11931  012BC2                     u2900:
 11932  012BC2  6A40               	clrf	(btemp+11)^0,c
 11933  012BC4                     u2918:
 11934                           
 11935                           ;stkvar	_state @ sp[(-1)+0]
 11936  012BC4  0EFF               	movlw	-1
 11937  012BC6  0060  F103  FFE3   	movff	btemp+11,plusw1
 11938                           
 11939                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 11940  012BCC  9ED2               	bcf	16338,7,c	;volatile
 11941                           
 11942                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 11943  012BCE  0E55               	movlw	85
 11944  012BD0  6ED4               	movwf	212,c	;volatile
 11945                           
 11946                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 11947  012BD2  0EAA               	movlw	170
 11948  012BD4  6ED4               	movwf	212,c	;volatile
 11949                           
 11950                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 11951  012BD6  90D4               	bcf	212,0,c	;volatile
 11952                           
 11953                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 11954  012BD8  0138               	movlb	56	; () banked
 11955  012BDA  6B9F               	clrf	159,b	;volatile
 11956                           
 11957                           ; BSR set to: 56
 11958                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 11959  012BDC  6B9E               	clrf	158,b	;volatile
 11960                           
 11961                           ; BSR set to: 56
 11962                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 11963  012BDE  0E08               	movlw	8
 11964  012BE0  6F9D               	movwf	157,b	;volatile
 11965                           
 11966                           ; BSR set to: 56
 11967                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 11968  012BE2  0E55               	movlw	85
 11969  012BE4  6ED4               	movwf	212,c	;volatile
 11970                           
 11971                           ; BSR set to: 56
 11972                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 11973  012BE6  0EAA               	movlw	170
 11974  012BE8  6ED4               	movwf	212,c	;volatile
 11975                           
 11976                           ; BSR set to: 56
 11977                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 11978  012BEA  80D4               	bsf	212,0,c	;volatile
 11979                           
 11980                           ; BSR set to: 56
 11981                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 11982                           ;stkvar	_state @ sp[(-1)+0]
 11983  012BEC  0EFF               	movlw	-1
 11984  012BEE  B0E3               	btfsc	plusw1,0,c
 11985  012BF0  D002               	bra	u2925
 11986  012BF2  9ED2               	bcf	16338,7,c	;volatile
 11987  012BF4  D001               	bra	u2926
 11988  012BF6                     u2925:
 11989  012BF6  8ED2               	bsf	16338,7,c	;volatile
 11990  012BF8                     u2926:
 11991                           
 11992                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 11993  012BF8  0139               	movlb	57	; () banked
 11994  012BFA  8782               	bsf	130,3,b	;volatile
 11995                           
 11996                           ; BSR set to: 57
 11997                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 11998  012BFC  8382               	bsf	130,1,b	;volatile
 11999                           
 12000                           ; BSR set to: 57
 12001                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 12002  012BFE  8182               	bsf	130,0,b	;volatile
 12003                           
 12004                           ; BSR set to: 57
 12005                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 12006  012C00  8582               	bsf	130,2,b	;volatile
 12007                           
 12008                           ; BSR set to: 57
 12009                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 12010  012C02  8786               	bsf	134,3,b	;volatile
 12011                           
 12012                           ; BSR set to: 57
 12013                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 12014  012C04  8586               	bsf	134,2,b	;volatile
 12015                           
 12016                           ; BSR set to: 57
 12017                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 12018  012C06  8983               	bsf	131,4,b	;volatile
 12019                           
 12020                           ; BSR set to: 57
 12021                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 12022  012C08  8783               	bsf	131,3,b	;volatile
 12023                           
 12024                           ; BSR set to: 57
 12025                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 12026  012C0A  8181               	bsf	129,0,b	;volatile
 12027                           
 12028                           ; BSR set to: 57
 12029                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 12030  012C0C  8185               	bsf	133,0,b	;volatile
 12031                           
 12032                           ; BSR set to: 57
 12033                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 12034  012C0E  8189               	bsf	137,0,b	;volatile
 12035                           
 12036                           ; BSR set to: 57
 12037                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 12038  012C10  9D88               	bcf	136,6,b	;volatile
 12039                           
 12040                           ; BSR set to: 57
 12041                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 12042  012C12  8581               	bsf	129,2,b	;volatile
 12043                           
 12044                           ; BSR set to: 57
 12045                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 12046  012C14  8781               	bsf	129,3,b	;volatile
 12047                           
 12048                           ; BSR set to: 57
 12049                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 12050  012C16  52E5               	movf	postdec1,f,c
 12051  012C18  0012               	return		;funcret
 12052  012C1A                     __end_of_INTERRUPT_Initialize:
 12053                           	opt callstack 0
 12054                           
 12055 ;; *************** function _FVR_Initialize *****************
 12056 ;; Defined at:
 12057 ;;		line 58 in file "mcc_generated_files/fvr.c"
 12058 ;; Parameters:    Size  Location     Type
 12059 ;;		None
 12060 ;; Auto vars:     Size  Location     Type
 12061 ;;		None
 12062 ;; Return value:  Size  Location     Type
 12063 ;;                  1  [STACK] void 
 12064 ;; Registers used:
 12065 ;;		wreg, status,2
 12066 ;; Tracked objects:
 12067 ;;		On entry : 3F/39
 12068 ;;		On exit  : 3F/3E
 12069 ;;		Unchanged: 0/0
 12070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12075 ;;Total ram usage:        0 bytes
 12076 ;; Hardware stack levels used:    1
 12077 ;; Hardware stack levels required when called:    6
 12078 ;; This function calls:
 12079 ;;		Nothing
 12080 ;; This function is called by:
 12081 ;;		_SYSTEM_Initialize
 12082 ;; This function uses a reentrant model
 12083 ;;
 12084                           
 12085                           	psect	text77
 12086  013952                     __ptext77:
 12087                           	opt callstack 0
 12088  013952                     _FVR_Initialize:
 12089                           	opt callstack 23
 12090                           
 12091                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 12092                           
 12093                           ; BSR set to: 57
 12094                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12095                           ;incstack = 0
 12096  013952  0EAF               	movlw	175
 12097  013954  013E               	movlb	62	; () banked
 12098  013956  6FC1               	movwf	193,b	;volatile
 12099                           
 12100                           ; BSR set to: 62
 12101                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 12102  013958  0012               	return		;funcret
 12103  01395A                     __end_of_FVR_Initialize:
 12104                           	opt callstack 0
 12105                           
 12106 ;; *************** function _EXT_INT_Initialize *****************
 12107 ;; Defined at:
 12108 ;;		line 90 in file "mcc_generated_files/ext_int.c"
 12109 ;; Parameters:    Size  Location     Type
 12110 ;;		None
 12111 ;; Auto vars:     Size  Location     Type
 12112 ;;		None
 12113 ;; Return value:  Size  Location     Type
 12114 ;;                  1  [STACK] void 
 12115 ;; Registers used:
 12116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12117 ;; Tracked objects:
 12118 ;;		On entry : 3F/3F
 12119 ;;		On exit  : 3F/39
 12120 ;;		Unchanged: 0/0
 12121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12126 ;;Total ram usage:        0 bytes
 12127 ;; Hardware stack levels used:    1
 12128 ;; Hardware stack levels required when called:    7
 12129 ;; This function calls:
 12130 ;;		_INT0_SetInterruptHandler
 12131 ;;		_INT1_SetInterruptHandler
 12132 ;; This function is called by:
 12133 ;;		_SYSTEM_Initialize
 12134 ;; This function uses a reentrant model
 12135 ;;
 12136                           
 12137                           	psect	text78
 12138  013230                     __ptext78:
 12139                           	opt callstack 0
 12140  013230                     _EXT_INT_Initialize:
 12141                           	opt callstack 22
 12142                           
 12143                           ;mcc_generated_files/ext_int.c: 95:  (PIR1bits.INT0IF = 0);
 12144                           
 12145                           ; BSR set to: 62
 12146                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12147                           ;incstack = 0
 12148  013230  0139               	movlb	57	; () banked
 12149  013232  91A1               	bcf	161,0,b	;volatile
 12150                           
 12151                           ;mcc_generated_files/ext_int.c: 96:  (INTCON0bits.INT0EDG = 0);
 12152  013234  90D2               	bcf	210,0,c	;volatile
 12153                           
 12154                           ; BSR set to: 57
 12155                           ;mcc_generated_files/ext_int.c: 98:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 12156  013236  0E72               	movlw	low _INT0_DefaultInterruptHandler
 12157  013238  6EE6               	movwf	postinc1,c
 12158  01323A  0E39               	movlw	high _INT0_DefaultInterruptHandler
 12159  01323C  6EE6               	movwf	postinc1,c
 12160  01323E  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 12161  013240  6EE6               	movwf	postinc1,c
 12162  013242  EC82  F09A         	call	_INT0_SetInterruptHandler	;wreg free
 12163                           
 12164                           ;mcc_generated_files/ext_int.c: 99:  (PIE1bits.INT0IE = 1);
 12165  013246  0139               	movlb	57	; () banked
 12166  013248  8191               	bsf	145,0,b	;volatile
 12167                           
 12168                           ; BSR set to: 57
 12169                           ;mcc_generated_files/ext_int.c: 104:  (PIR5bits.INT1IF = 0);
 12170  01324A  91A5               	bcf	165,0,b	;volatile
 12171                           
 12172                           ; BSR set to: 57
 12173                           ;mcc_generated_files/ext_int.c: 105:  (INTCON0bits.INT1EDG = 0);
 12174  01324C  92D2               	bcf	210,1,c	;volatile
 12175                           
 12176                           ;mcc_generated_files/ext_int.c: 107:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 12177  01324E  0E74               	movlw	low _INT1_DefaultInterruptHandler
 12178  013250  6EE6               	movwf	postinc1,c
 12179  013252  0E39               	movlw	high _INT1_DefaultInterruptHandler
 12180  013254  6EE6               	movwf	postinc1,c
 12181  013256  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 12182  013258  6EE6               	movwf	postinc1,c
 12183  01325A  EC6E  F09A         	call	_INT1_SetInterruptHandler	;wreg free
 12184                           
 12185                           ;mcc_generated_files/ext_int.c: 108:  (PIE5bits.INT1IE = 1);
 12186  01325E  0139               	movlb	57	; () banked
 12187  013260  8195               	bsf	149,0,b	;volatile
 12188                           
 12189                           ; BSR set to: 57
 12190                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 12191  013262  0012               	return		;funcret
 12192  013264                     __end_of_EXT_INT_Initialize:
 12193                           	opt callstack 0
 12194                           
 12195 ;; *************** function _INT1_SetInterruptHandler *****************
 12196 ;; Defined at:
 12197 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 12198 ;; Parameters:    Size  Location     Type
 12199 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12200 ;;		 -> INT1_DefaultInterruptHandler(1), 
 12201 ;; Auto vars:     Size  Location     Type
 12202 ;;		None
 12203 ;; Return value:  Size  Location     Type
 12204 ;;                  1  [STACK] void 
 12205 ;; Registers used:
 12206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12207 ;; Tracked objects:
 12208 ;;		On entry : 3F/39
 12209 ;;		On exit  : 0/0
 12210 ;;		Unchanged: 0/0
 12211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12216 ;;Total ram usage:        0 bytes
 12217 ;; Hardware stack levels used:    1
 12218 ;; Hardware stack levels required when called:    6
 12219 ;; This function calls:
 12220 ;;		Nothing
 12221 ;; This function is called by:
 12222 ;;		_EXT_INT_Initialize
 12223 ;; This function uses a reentrant model
 12224 ;;
 12225                           
 12226                           	psect	text79
 12227  0134DC                     __ptext79:
 12228                           	opt callstack 0
 12229  0134DC                     _INT1_SetInterruptHandler:
 12230                           	opt callstack 22
 12231                           
 12232                           ;mcc_generated_files/ext_int.c: 79: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 80: {;mcc_generated_files/ext_int.c: 81:  INT1
      +                          _InterruptHandler = InterruptHandler;
 12233                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12234                           
 12235                           ; BSR set to: 57
 12236                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12237                           ;incstack = 0
 12238  0134DC  50E1               	movf	fsr1l,w,c
 12239  0134DE  0FFD               	addlw	-3
 12240  0134E0  6ED9               	movwf	fsr2l,c
 12241  0134E2  50E2               	movf	fsr1h,w,c
 12242  0134E4  6EDA               	movwf	fsr2h,c
 12243  0134E6  0EFF               	movlw	255
 12244  0134E8  22DA               	addwfc	fsr2h,f,c
 12245  0134EA  006F FF78  F016    	movff	postinc2,_INT1_InterruptHandler
 12246  0134F0  006F FF78  F017    	movff	postinc2,_INT1_InterruptHandler+1
 12247  0134F6  006F FF74  F018    	movff	postdec2,_INT1_InterruptHandler+2
 12248                           
 12249                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12250  0134FC  52E5               	movf	postdec1,f,c
 12251  0134FE  52E5               	movf	postdec1,f,c
 12252  013500  52E5               	movf	postdec1,f,c
 12253  013502  0012               	return		;funcret
 12254  013504                     __end_of_INT1_SetInterruptHandler:
 12255                           	opt callstack 0
 12256                           
 12257 ;; *************** function _INT0_SetInterruptHandler *****************
 12258 ;; Defined at:
 12259 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 12260 ;; Parameters:    Size  Location     Type
 12261 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12262 ;;		 -> INT0_DefaultInterruptHandler(1), 
 12263 ;; Auto vars:     Size  Location     Type
 12264 ;;		None
 12265 ;; Return value:  Size  Location     Type
 12266 ;;                  1  [STACK] void 
 12267 ;; Registers used:
 12268 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12269 ;; Tracked objects:
 12270 ;;		On entry : 3F/39
 12271 ;;		On exit  : 0/0
 12272 ;;		Unchanged: 0/0
 12273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12278 ;;Total ram usage:        0 bytes
 12279 ;; Hardware stack levels used:    1
 12280 ;; Hardware stack levels required when called:    6
 12281 ;; This function calls:
 12282 ;;		Nothing
 12283 ;; This function is called by:
 12284 ;;		_EXT_INT_Initialize
 12285 ;; This function uses a reentrant model
 12286 ;;
 12287                           
 12288                           	psect	text80
 12289  013504                     __ptext80:
 12290                           	opt callstack 0
 12291  013504                     _INT0_SetInterruptHandler:
 12292                           	opt callstack 22
 12293                           
 12294                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 12295                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12296                           
 12297                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12298                           ;incstack = 0
 12299  013504  50E1               	movf	fsr1l,w,c
 12300  013506  0FFD               	addlw	-3
 12301  013508  6ED9               	movwf	fsr2l,c
 12302  01350A  50E2               	movf	fsr1h,w,c
 12303  01350C  6EDA               	movwf	fsr2h,c
 12304  01350E  0EFF               	movlw	255
 12305  013510  22DA               	addwfc	fsr2h,f,c
 12306  013512  006F FF78  F019    	movff	postinc2,_INT0_InterruptHandler
 12307  013518  006F FF78  F01A    	movff	postinc2,_INT0_InterruptHandler+1
 12308  01351E  006F FF74  F01B    	movff	postdec2,_INT0_InterruptHandler+2
 12309                           
 12310                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12311  013524  52E5               	movf	postdec1,f,c
 12312  013526  52E5               	movf	postdec1,f,c
 12313  013528  52E5               	movf	postdec1,f,c
 12314  01352A  0012               	return		;funcret
 12315  01352C                     __end_of_INT0_SetInterruptHandler:
 12316                           	opt callstack 0
 12317                           
 12318 ;; *************** function _DMA2_Initialize *****************
 12319 ;; Defined at:
 12320 ;;		line 61 in file "mcc_generated_files/dma2.c"
 12321 ;; Parameters:    Size  Location     Type
 12322 ;;		None
 12323 ;; Auto vars:     Size  Location     Type
 12324 ;;		None
 12325 ;; Return value:  Size  Location     Type
 12326 ;;                  1  [STACK] void 
 12327 ;; Registers used:
 12328 ;;		wreg, status,2
 12329 ;; Tracked objects:
 12330 ;;		On entry : 3F/3D
 12331 ;;		On exit  : 3F/3B
 12332 ;;		Unchanged: 0/0
 12333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12338 ;;Total ram usage:        0 bytes
 12339 ;; Hardware stack levels used:    1
 12340 ;; Hardware stack levels required when called:    6
 12341 ;; This function calls:
 12342 ;;		Nothing
 12343 ;; This function is called by:
 12344 ;;		_SYSTEM_Initialize
 12345 ;; This function uses a reentrant model
 12346 ;;
 12347                           
 12348                           	psect	text81
 12349  012E5A                     __ptext81:
 12350                           	opt callstack 0
 12351  012E5A                     _DMA2_Initialize:
 12352                           	opt callstack 23
 12353                           
 12354                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 12355                           
 12356                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12357                           ;incstack = 0
 12358  012E5A  0E00               	movlw	0
 12359  012E5C  013B               	movlb	59	; () banked
 12360  012E5E  6FD9               	movwf	217,b	;volatile
 12361  012E60  0E10               	movlw	16
 12362  012E62  6FDA               	movwf	218,b	;volatile
 12363  012E64  0E00               	movlw	0
 12364  012E66  6FDB               	movwf	219,b	;volatile
 12365                           
 12366                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 12367  012E68  0E3F               	movlw	63
 12368  012E6A  6FD1               	movwf	209,b	;volatile
 12369  012E6C  0EBB               	movlw	187
 12370  012E6E  6FD0               	movwf	208,b	;volatile
 12371                           
 12372                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 12373  012E70  0E03               	movlw	3
 12374  012E72  6FDD               	movwf	221,b	;volatile
 12375                           
 12376                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 12377  012E74  0E00               	movlw	0
 12378  012E76  6FD8               	movwf	216,b	;volatile
 12379  012E78  0E01               	movlw	1
 12380  012E7A  6FD7               	movwf	215,b	;volatile
 12381                           
 12382                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 12383  012E7C  0E00               	movlw	0
 12384  012E7E  6FCF               	movwf	207,b	;volatile
 12385  012E80  0E01               	movlw	1
 12386  012E82  6FCE               	movwf	206,b	;volatile
 12387                           
 12388                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 12389  012E84  0E46               	movlw	70
 12390  012E86  6FDF               	movwf	223,b	;volatile
 12391                           
 12392                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 12393  012E88  0E3D               	movlw	61
 12394  012E8A  6FDE               	movwf	222,b	;volatile
 12395                           
 12396                           ; BSR set to: 59
 12397                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 12398  012E8C  0139               	movlb	57	; () banked
 12399  012E8E  97A5               	bcf	165,3,b	;volatile
 12400                           
 12401                           ; BSR set to: 57
 12402                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 12403  012E90  95A5               	bcf	165,2,b	;volatile
 12404                           
 12405                           ; BSR set to: 57
 12406                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 12407  012E92  9BA5               	bcf	165,5,b	;volatile
 12408                           
 12409                           ; BSR set to: 57
 12410                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 12411  012E94  99A5               	bcf	165,4,b	;volatile
 12412                           
 12413                           ; BSR set to: 57
 12414                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 12415  012E96  9795               	bcf	149,3,b	;volatile
 12416                           
 12417                           ; BSR set to: 57
 12418                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 12419  012E98  9595               	bcf	149,2,b	;volatile
 12420                           
 12421                           ; BSR set to: 57
 12422                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 12423  012E9A  9B95               	bcf	149,5,b	;volatile
 12424                           
 12425                           ; BSR set to: 57
 12426                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 12427  012E9C  9995               	bcf	149,4,b	;volatile
 12428  012E9E  9ED2               	bcf	16338,7,c	;# 
 12429  012EA0  0139               	banksel	14831	;# 
 12430  012EA2  0E55               	movlw	85	;# 
 12431  012EA4  6FEF               	movwf	14831,b	;# 
 12432  012EA6  0EAA               	movlw	170	;# 
 12433  012EA8  6FEF               	movwf	14831,b	;# 
 12434  012EAA  81EF               	bsf	14831,0,b	;# 
 12435  012EAC  8ED2               	bsf	16338,7,c	;# 
 12436                           
 12437                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 12438  012EAE  013B               	movlb	59	; () banked
 12439  012EB0  6BDC               	clrf	220,b	;volatile
 12440                           
 12441                           ; BSR set to: 59
 12442                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12443  012EB2  0012               	return		;funcret
 12444  012EB4                     __end_of_DMA2_Initialize:
 12445                           	opt callstack 0
 12446                           
 12447 ;; *************** function _DMA1_Initialize *****************
 12448 ;; Defined at:
 12449 ;;		line 86 in file "mcc_generated_files/dma1.c"
 12450 ;; Parameters:    Size  Location     Type
 12451 ;;		None
 12452 ;; Auto vars:     Size  Location     Type
 12453 ;;		None
 12454 ;; Return value:  Size  Location     Type
 12455 ;;                  1  [STACK] void 
 12456 ;; Registers used:
 12457 ;;		wreg, status,2
 12458 ;; Tracked objects:
 12459 ;;		On entry : 3F/3B
 12460 ;;		On exit  : 3F/3B
 12461 ;;		Unchanged: 0/0
 12462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12467 ;;Total ram usage:        0 bytes
 12468 ;; Hardware stack levels used:    1
 12469 ;; Hardware stack levels required when called:    6
 12470 ;; This function calls:
 12471 ;;		Nothing
 12472 ;; This function is called by:
 12473 ;;		_SYSTEM_Initialize
 12474 ;; This function uses a reentrant model
 12475 ;;
 12476                           
 12477                           	psect	text82
 12478  012A76                     __ptext82:
 12479                           	opt callstack 0
 12480  012A76                     _DMA1_Initialize:
 12481                           	opt callstack 23
 12482                           
 12483                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 12484                           
 12485                           ; BSR set to: 59
 12486                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12487                           ;incstack = 0
 12488  012A76  0E00               	movlw	0
 12489  012A78  013B               	movlb	59	; () banked
 12490  012A7A  6FF9               	movwf	249,b	;volatile
 12491  012A7C  0E10               	movlw	16
 12492  012A7E  6FFA               	movwf	250,b	;volatile
 12493  012A80  0E00               	movlw	0
 12494  012A82  6FFB               	movwf	251,b	;volatile
 12495                           
 12496                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 12497  012A84  0E3D               	movlw	61
 12498  012A86  6FF1               	movwf	241,b	;volatile
 12499  012A88  0E11               	movlw	17
 12500  012A8A  6FF0               	movwf	240,b	;volatile
 12501                           
 12502                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 12503  012A8C  0E03               	movlw	3
 12504  012A8E  6FFD               	movwf	253,b	;volatile
 12505                           
 12506                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 12507  012A90  0E00               	movlw	0
 12508  012A92  6FF8               	movwf	248,b	;volatile
 12509  012A94  0E01               	movlw	1
 12510  012A96  6FF7               	movwf	247,b	;volatile
 12511                           
 12512                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 12513  012A98  0E00               	movlw	0
 12514  012A9A  6FEF               	movwf	239,b	;volatile
 12515  012A9C  0E01               	movlw	1
 12516  012A9E  6FEE               	movwf	238,b	;volatile
 12517                           
 12518                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 12519  012AA0  0E15               	movlw	21
 12520  012AA2  6FFF               	movwf	255,b	;volatile
 12521                           
 12522                           ; BSR set to: 59
 12523                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 12524  012AA4  6BFE               	clrf	254,b	;volatile
 12525                           
 12526                           ; BSR set to: 59
 12527                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 12528  012AA6  0139               	movlb	57	; () banked
 12529  012AA8  93A2               	bcf	162,1,b	;volatile
 12530                           
 12531                           ; BSR set to: 57
 12532                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 12533  012AAA  91A2               	bcf	162,0,b	;volatile
 12534                           
 12535                           ; BSR set to: 57
 12536                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 12537  012AAC  97A2               	bcf	162,3,b	;volatile
 12538                           
 12539                           ; BSR set to: 57
 12540                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 12541  012AAE  95A2               	bcf	162,2,b	;volatile
 12542                           
 12543                           ; BSR set to: 57
 12544                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 12545  012AB0  8392               	bsf	146,1,b	;volatile
 12546                           
 12547                           ; BSR set to: 57
 12548                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 12549  012AB2  8192               	bsf	146,0,b	;volatile
 12550                           
 12551                           ; BSR set to: 57
 12552                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 12553  012AB4  8792               	bsf	146,3,b	;volatile
 12554                           
 12555                           ; BSR set to: 57
 12556                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 12557  012AB6  8592               	bsf	146,2,b	;volatile
 12558                           
 12559                           ; BSR set to: 57
 12560                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 12561  012AB8  6BF1               	clrf	241,b	;volatile
 12562                           
 12563                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 12564  012ABA  0E01               	movlw	1
 12565  012ABC  6FF2               	movwf	242,b	;volatile
 12566                           
 12567                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 12568  012ABE  0E04               	movlw	4
 12569  012AC0  6FF3               	movwf	243,b	;volatile
 12570                           
 12571                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 12572  012AC2  0E02               	movlw	2
 12573  012AC4  6FF4               	movwf	244,b	;volatile
 12574                           
 12575                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 12576  012AC6  0E03               	movlw	3
 12577  012AC8  6FF7               	movwf	247,b	;volatile
 12578  012ACA  9ED2               	bcf	16338,7,c	;# 
 12579  012ACC  0139               	banksel	14831	;# 
 12580  012ACE  0E55               	movlw	85	;# 
 12581  012AD0  6FEF               	movwf	14831,b	;# 
 12582  012AD2  0EAA               	movlw	170	;# 
 12583  012AD4  6FEF               	movwf	14831,b	;# 
 12584  012AD6  81EF               	bsf	14831,0,b	;# 
 12585  012AD8  8ED2               	bsf	16338,7,c	;# 
 12586                           
 12587                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 12588  012ADA  013B               	movlb	59	; () banked
 12589  012ADC  6BFC               	clrf	252,b	;volatile
 12590                           
 12591                           ; BSR set to: 59
 12592                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12593  012ADE  0012               	return		;funcret
 12594  012AE0                     __end_of_DMA1_Initialize:
 12595                           	opt callstack 0
 12596                           
 12597 ;; *************** function _CLKREF_Initialize *****************
 12598 ;; Defined at:
 12599 ;;		line 58 in file "mcc_generated_files/clkref.c"
 12600 ;; Parameters:    Size  Location     Type
 12601 ;;		None
 12602 ;; Auto vars:     Size  Location     Type
 12603 ;;		None
 12604 ;; Return value:  Size  Location     Type
 12605 ;;                  1  [STACK] void 
 12606 ;; Registers used:
 12607 ;;		wreg, status,2
 12608 ;; Tracked objects:
 12609 ;;		On entry : 3F/3B
 12610 ;;		On exit  : 3F/3C
 12611 ;;		Unchanged: 0/0
 12612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12617 ;;Total ram usage:        0 bytes
 12618 ;; Hardware stack levels used:    1
 12619 ;; Hardware stack levels required when called:    6
 12620 ;; This function calls:
 12621 ;;		Nothing
 12622 ;; This function is called by:
 12623 ;;		_SYSTEM_Initialize
 12624 ;; This function uses a reentrant model
 12625 ;;
 12626                           
 12627                           	psect	text83
 12628  01390E                     __ptext83:
 12629                           	opt callstack 0
 12630  01390E                     _CLKREF_Initialize:
 12631                           	opt callstack 23
 12632                           
 12633                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 12634                           
 12635                           ; BSR set to: 59
 12636                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12637                           ;incstack = 0
 12638  01390E  013C               	movlb	60	; () banked
 12639  013910  6BE6               	clrf	230,b	;volatile
 12640                           
 12641                           ; BSR set to: 60
 12642                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 12643  013912  0E94               	movlw	148
 12644  013914  6FE5               	movwf	229,b	;volatile
 12645                           
 12646                           ; BSR set to: 60
 12647                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 12648  013916  0012               	return		;funcret
 12649  013918                     __end_of_CLKREF_Initialize:
 12650                           	opt callstack 0
 12651                           
 12652 ;; *************** function _ADCC_Initialize *****************
 12653 ;; Defined at:
 12654 ;;		line 65 in file "mcc_generated_files/adcc.c"
 12655 ;; Parameters:    Size  Location     Type
 12656 ;;		None
 12657 ;; Auto vars:     Size  Location     Type
 12658 ;;		None
 12659 ;; Return value:  Size  Location     Type
 12660 ;;                  1  [STACK] void 
 12661 ;; Registers used:
 12662 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 12663 ;; Tracked objects:
 12664 ;;		On entry : 3F/3E
 12665 ;;		On exit  : 0/0
 12666 ;;		Unchanged: 0/0
 12667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12672 ;;Total ram usage:        0 bytes
 12673 ;; Hardware stack levels used:    1
 12674 ;; Hardware stack levels required when called:    7
 12675 ;; This function calls:
 12676 ;;		_ADCC_SetADIInterruptHandler
 12677 ;;		_ADCC_SetADTIInterruptHandler
 12678 ;; This function is called by:
 12679 ;;		_SYSTEM_Initialize
 12680 ;; This function uses a reentrant model
 12681 ;;
 12682                           
 12683                           	psect	text84
 12684  012AE0                     __ptext84:
 12685                           	opt callstack 0
 12686  012AE0                     _ADCC_Initialize:
 12687                           	opt callstack 22
 12688                           
 12689                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 12690                           
 12691                           ; BSR set to: 60
 12692                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12693                           ;incstack = 0
 12694  012AE0  013E               	movlb	62	; () banked
 12695  012AE2  6BDE               	clrf	222,b	;volatile
 12696                           
 12697                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 12698  012AE4  6BDF               	clrf	223,b	;volatile
 12699                           
 12700                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 12701  012AE6  6BE0               	clrf	224,b	;volatile
 12702                           
 12703                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 12704  012AE8  6BE1               	clrf	225,b	;volatile
 12705                           
 12706                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 12707  012AEA  6BE4               	clrf	228,b	;volatile
 12708                           
 12709                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 12710  012AEC  6BE5               	clrf	229,b	;volatile
 12711                           
 12712                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 12713  012AEE  6BEA               	clrf	234,b	;volatile
 12714                           
 12715                           ; BSR set to: 62
 12716                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 12717  012AF0  0E40               	movlw	64
 12718  012AF2  6FEC               	movwf	236,b	;volatile
 12719                           
 12720                           ; BSR set to: 62
 12721                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 12722  012AF4  6BF1               	clrf	241,b	;volatile
 12723                           
 12724                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x05;
 12725  012AF6  0E05               	movlw	5
 12726  012AF8  6FF3               	movwf	243,b	;volatile
 12727                           
 12728                           ; BSR set to: 62
 12729                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 12730  012AFA  6BF4               	clrf	244,b	;volatile
 12731                           
 12732                           ; BSR set to: 62
 12733                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 12734  012AFC  6BF5               	clrf	245,b	;volatile
 12735                           
 12736                           ; BSR set to: 62
 12737                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 12738  012AFE  6BF6               	clrf	246,b	;volatile
 12739                           
 12740                           ; BSR set to: 62
 12741                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 12742  012B00  6BF7               	clrf	247,b	;volatile
 12743                           
 12744                           ; BSR set to: 62
 12745                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 12746  012B02  6BF9               	clrf	249,b	;volatile
 12747                           
 12748                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x6B;
 12749  012B04  0E6B               	movlw	107
 12750  012B06  6FFA               	movwf	250,b	;volatile
 12751                           
 12752                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 12753  012B08  0E27               	movlw	39
 12754  012B0A  6FFB               	movwf	251,b	;volatile
 12755                           
 12756                           ; BSR set to: 62
 12757                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 12758  012B0C  6BFC               	clrf	252,b	;volatile
 12759                           
 12760                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 12761  012B0E  0E02               	movlw	2
 12762  012B10  6FFD               	movwf	253,b	;volatile
 12763                           
 12764                           ; BSR set to: 62
 12765                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 12766  012B12  6BFE               	clrf	254,b	;volatile
 12767                           
 12768                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x02;
 12769  012B14  0E02               	movlw	2
 12770  012B16  6FFF               	movwf	255,b	;volatile
 12771                           
 12772                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 12773  012B18  0E84               	movlw	132
 12774  012B1A  6FF8               	movwf	248,b	;volatile
 12775                           
 12776                           ; BSR set to: 62
 12777                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 12778  012B1C  0139               	movlb	57	; () banked
 12779  012B1E  95A1               	bcf	161,2,b	;volatile
 12780                           
 12781                           ; BSR set to: 57
 12782                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 12783  012B20  8591               	bsf	145,2,b	;volatile
 12784                           
 12785                           ; BSR set to: 57
 12786                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 12787  012B22  0E76               	movlw	low _ADCC_DefaultInterruptHandler
 12788  012B24  6EE6               	movwf	postinc1,c
 12789  012B26  0E39               	movlw	high _ADCC_DefaultInterruptHandler
 12790  012B28  6EE6               	movwf	postinc1,c
 12791  012B2A  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 12792  012B2C  6EE6               	movwf	postinc1,c
 12793  012B2E  ECAA  F09A         	call	_ADCC_SetADIInterruptHandler	;wreg free
 12794                           
 12795                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 12796  012B32  0139               	movlb	57	; () banked
 12797  012B34  97A1               	bcf	161,3,b	;volatile
 12798                           
 12799                           ; BSR set to: 57
 12800                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 12801  012B36  8791               	bsf	145,3,b	;volatile
 12802                           
 12803                           ; BSR set to: 57
 12804                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 12805  012B38  0E76               	movlw	low _ADCC_DefaultInterruptHandler
 12806  012B3A  6EE6               	movwf	postinc1,c
 12807  012B3C  0E39               	movlw	high _ADCC_DefaultInterruptHandler
 12808  012B3E  6EE6               	movwf	postinc1,c
 12809  012B40  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 12810  012B42  6EE6               	movwf	postinc1,c
 12811  012B44  EC96  F09A         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 12812                           
 12813                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12814  012B48  0012               	return		;funcret
 12815  012B4A                     __end_of_ADCC_Initialize:
 12816                           	opt callstack 0
 12817                           
 12818 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 12819 ;; Defined at:
 12820 ;;		line 336 in file "mcc_generated_files/adcc.c"
 12821 ;; Parameters:    Size  Location     Type
 12822 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12823 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 12824 ;; Auto vars:     Size  Location     Type
 12825 ;;		None
 12826 ;; Return value:  Size  Location     Type
 12827 ;;                  1  [STACK] void 
 12828 ;; Registers used:
 12829 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12830 ;; Tracked objects:
 12831 ;;		On entry : 0/0
 12832 ;;		On exit  : 0/0
 12833 ;;		Unchanged: 0/0
 12834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12839 ;;Total ram usage:        0 bytes
 12840 ;; Hardware stack levels used:    1
 12841 ;; Hardware stack levels required when called:    6
 12842 ;; This function calls:
 12843 ;;		Nothing
 12844 ;; This function is called by:
 12845 ;;		_ADCC_Initialize
 12846 ;;		_start_adc_scan
 12847 ;; This function uses a reentrant model
 12848 ;;
 12849                           
 12850                           	psect	text85
 12851  01352C                     __ptext85:
 12852                           	opt callstack 0
 12853  01352C                     _ADCC_SetADTIInterruptHandler:
 12854                           	opt callstack 23
 12855                           
 12856                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 12857                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12858                           
 12859                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12860                           ;incstack = 0
 12861  01352C  50E1               	movf	fsr1l,w,c
 12862  01352E  0FFD               	addlw	-3
 12863  013530  6ED9               	movwf	fsr2l,c
 12864  013532  50E2               	movf	fsr1h,w,c
 12865  013534  6EDA               	movwf	fsr2h,c
 12866  013536  0EFF               	movlw	255
 12867  013538  22DA               	addwfc	fsr2h,f,c
 12868  01353A  006F FF78  F004    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 12869  013540  006F FF78  F005    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 12870  013546  006F FF74  F006    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 12871                           
 12872                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 12873  01354C  52E5               	movf	postdec1,f,c
 12874  01354E  52E5               	movf	postdec1,f,c
 12875  013550  52E5               	movf	postdec1,f,c
 12876  013552  0012               	return		;funcret
 12877  013554                     __end_of_ADCC_SetADTIInterruptHandler:
 12878                           	opt callstack 0
 12879                           
 12880 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 12881 ;; Defined at:
 12882 ;;		line 323 in file "mcc_generated_files/adcc.c"
 12883 ;; Parameters:    Size  Location     Type
 12884 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12885 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 12886 ;; Auto vars:     Size  Location     Type
 12887 ;;		None
 12888 ;; Return value:  Size  Location     Type
 12889 ;;                  1  [STACK] void 
 12890 ;; Registers used:
 12891 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12892 ;; Tracked objects:
 12893 ;;		On entry : 6/0
 12894 ;;		On exit  : 0/0
 12895 ;;		Unchanged: 0/0
 12896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12901 ;;Total ram usage:        0 bytes
 12902 ;; Hardware stack levels used:    1
 12903 ;; Hardware stack levels required when called:    6
 12904 ;; This function calls:
 12905 ;;		Nothing
 12906 ;; This function is called by:
 12907 ;;		_ADCC_Initialize
 12908 ;;		_start_adc_scan
 12909 ;; This function uses a reentrant model
 12910 ;;
 12911                           
 12912                           	psect	text86
 12913  013554                     __ptext86:
 12914                           	opt callstack 0
 12915  013554                     _ADCC_SetADIInterruptHandler:
 12916                           	opt callstack 23
 12917                           
 12918                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 12919                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12920                           
 12921                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12922                           ;incstack = 0
 12923  013554  50E1               	movf	fsr1l,w,c
 12924  013556  0FFD               	addlw	-3
 12925  013558  6ED9               	movwf	fsr2l,c
 12926  01355A  50E2               	movf	fsr1h,w,c
 12927  01355C  6EDA               	movwf	fsr2h,c
 12928  01355E  0EFF               	movlw	255
 12929  013560  22DA               	addwfc	fsr2h,f,c
 12930  013562  006F FF78  F007    	movff	postinc2,_ADCC_ADI_InterruptHandler
 12931  013568  006F FF78  F008    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 12932  01356E  006F FF74  F009    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 12933                           
 12934                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12935  013574  52E5               	movf	postdec1,f,c
 12936  013576  52E5               	movf	postdec1,f,c
 12937  013578  52E5               	movf	postdec1,f,c
 12938  01357A  0012               	return		;funcret
 12939  01357C                     __end_of_ADCC_SetADIInterruptHandler:
 12940                           	opt callstack 0
 12941                           
 12942 ;; *************** function _TMR5_ISR *****************
 12943 ;; Defined at:
 12944 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 12945 ;; Parameters:    Size  Location     Type
 12946 ;;		None
 12947 ;; Auto vars:     Size  Location     Type
 12948 ;;		None
 12949 ;; Return value:  Size  Location     Type
 12950 ;;                  1    wreg      void 
 12951 ;; Registers used:
 12952 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 12953 ;; Tracked objects:
 12954 ;;		On entry : 0/0
 12955 ;;		On exit  : 0/0
 12956 ;;		Unchanged: 0/0
 12957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12960 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12961 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12962 ;;Total ram usage:        4 bytes
 12963 ;; Hardware stack levels used:    1
 12964 ;; Hardware stack levels required when called:    5
 12965 ;; This function calls:
 12966 ;;		_TMR5_CallBack
 12967 ;;		_TMR5_WriteTimer
 12968 ;; This function is called by:
 12969 ;;		Interrupt level 1
 12970 ;; This function uses a non-reentrant model
 12971 ;;
 12972                           
 12973                           	psect	text87
 12974  012DA4                     __ptext87:
 12975                           	opt callstack 0
 12976  012DA4                     _TMR5_ISR:
 12977                           	opt callstack 12
 12978                           
 12979                           ;incstack = 0
 12980  012DA4  006F FF60  F0EF    	movff	status,??_TMR5_ISR+2
 12981  012DAA  0060  F100  F0F0   	movff	btemp+11,??_TMR5_ISR+3
 12982  012DB0  EE15  F355         	lfsr	1,___intlo_sp
 12983                           
 12984                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 12985  012DB4  0139               	movlb	57	; () banked
 12986  012DB6  9DA8               	bcf	168,6,b	;volatile
 12987                           
 12988                           ; BSR set to: 57
 12989                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 12990  012DB8  0060  F09B  FFE6   	movff	_timer5ReloadVal,postinc1
 12991  012DBE  0060  F09F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 12992  012DC4  EC52  F098         	call	_TMR5_WriteTimer	;wreg free
 12993                           
 12994                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 12995  012DC8  0101               	movlb	1	; () banked
 12996  012DCA  51BB               	movf	(_V+187)& (0+255),w,b	;volatile
 12997  012DCC  0100               	movlb	0	; () banked
 12998  012DCE  6FED               	movwf	??_TMR5_ISR& (0+255),b
 12999  012DD0  6BEE               	clrf	(??_TMR5_ISR+1)& (0+255),b
 13000  012DD2  0E05               	movlw	5
 13001  012DD4  27ED               	addwf	??_TMR5_ISR& (0+255),f,b
 13002  012DD6  0E00               	movlw	0
 13003  012DD8  23EE               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 13004  012DDA  4A24               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 13005  012DDC  2A25               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 13006  012DDE  51ED               	movf	??_TMR5_ISR& (0+255),w,b
 13007  012DE0  5C24               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 13008  012DE2  51EE               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 13009  012DE4  5825               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 13010  012DE6  A0D8               	btfss	status,0,c
 13011  012DE8  D004               	goto	i1l1045
 13012                           
 13013                           ; BSR set to: 0
 13014                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 13015  012DEA  EC1F  F09B         	call	_TMR5_CallBack	;wreg free
 13016                           
 13017                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 13018  012DEE  6A24               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 13019  012DF0  6A25               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 13020  012DF2                     i1l1045:
 13021  012DF2  0060  F3C0  F040   	movff	??_TMR5_ISR+3,btemp+11
 13022  012DF8  0060  F3BF  FFD8   	movff	??_TMR5_ISR+2,status
 13023  012DFE  0011               	retfie		f
 13024  012E00                     __end_of_TMR5_ISR:
 13025                           	opt callstack 0
 13026                           
 13027 ;; *************** function _TMR5_WriteTimer *****************
 13028 ;; Defined at:
 13029 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 13030 ;; Parameters:    Size  Location     Type
 13031 ;;  timerVal        2  [STACK] unsigned short 
 13032 ;; Auto vars:     Size  Location     Type
 13033 ;;		None
 13034 ;; Return value:  Size  Location     Type
 13035 ;;                  1  [STACK] void 
 13036 ;; Registers used:
 13037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 13038 ;; Tracked objects:
 13039 ;;		On entry : 3F/39
 13040 ;;		On exit  : 0/0
 13041 ;;		Unchanged: 0/0
 13042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13047 ;;Total ram usage:        0 bytes
 13048 ;; Hardware stack levels used:    1
 13049 ;; Hardware stack levels required when called:    3
 13050 ;; This function calls:
 13051 ;;		Nothing
 13052 ;; This function is called by:
 13053 ;;		_TMR5_ISR
 13054 ;; This function uses a reentrant model
 13055 ;;
 13056                           
 13057                           	psect	text88
 13058  0130A4                     __ptext88:
 13059                           	opt callstack 0
 13060  0130A4                     _TMR5_WriteTimer:
 13061                           	opt callstack 13
 13062                           
 13063                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 13064                           
 13065                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13066                           ;incstack = 0
 13067  0130A4  A49A               	btfss	154,2,c	;volatile
 13068  0130A6  D00F               	goto	l5397
 13069                           
 13070                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 13071  0130A8  909A               	bcf	154,0,c	;volatile
 13072                           
 13073                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 13074                           ;stkvar	_timerVal @ sp[(0)+-2]
 13075  0130AA  0EFF               	movlw	255
 13076  0130AC  24E1               	addwf	fsr1l,w,c
 13077  0130AE  6ED9               	movwf	fsr2l,c
 13078  0130B0  0EFF               	movlw	255
 13079  0130B2  20E2               	addwfc	fsr1h,w,c
 13080  0130B4  6EDA               	movwf	fsr2h,c
 13081  0130B6  50DF               	movf	indf2,w,c
 13082  0130B8  6E99               	movwf	153,c	;volatile
 13083                           
 13084                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 13085                           ;stkvar	_timerVal @ sp[(0)+-2]
 13086  0130BA  0EFE               	movlw	-2
 13087  0130BC  006F FF8F FF98     	movff	plusw1,16280	;volatile
 13088                           
 13089                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 13090  0130C2  809A               	bsf	154,0,c	;volatile
 13091                           
 13092                           ;mcc_generated_files/tmr5.c: 142:  } else {
 13093  0130C4  D00C               	goto	l1028
 13094  0130C6                     l5397:
 13095                           
 13096                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 13097                           ;stkvar	_timerVal @ sp[(0)+-2]
 13098  0130C6  0EFF               	movlw	255
 13099  0130C8  24E1               	addwf	fsr1l,w,c
 13100  0130CA  6ED9               	movwf	fsr2l,c
 13101  0130CC  0EFF               	movlw	255
 13102  0130CE  20E2               	addwfc	fsr1h,w,c
 13103  0130D0  6EDA               	movwf	fsr2h,c
 13104  0130D2  50DF               	movf	indf2,w,c
 13105  0130D4  6E99               	movwf	153,c	;volatile
 13106                           
 13107                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 13108                           ;stkvar	_timerVal @ sp[(0)+-2]
 13109  0130D6  0EFE               	movlw	-2
 13110  0130D8  006F FF8F FF98     	movff	plusw1,16280	;volatile
 13111  0130DE                     l1028:
 13112                           
 13113                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 13114  0130DE  52E5               	movf	postdec1,f,c
 13115  0130E0  52E5               	movf	postdec1,f,c
 13116  0130E2  0012               	return		;funcret
 13117  0130E4                     __end_of_TMR5_WriteTimer:
 13118                           	opt callstack 0
 13119                           
 13120 ;; *************** function _TMR5_CallBack *****************
 13121 ;; Defined at:
 13122 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 13123 ;; Parameters:    Size  Location     Type
 13124 ;;		None
 13125 ;; Auto vars:     Size  Location     Type
 13126 ;;		None
 13127 ;; Return value:  Size  Location     Type
 13128 ;;                  1  [STACK] void 
 13129 ;; Registers used:
 13130 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 13131 ;; Tracked objects:
 13132 ;;		On entry : 3F/0
 13133 ;;		On exit  : 0/0
 13134 ;;		Unchanged: 0/0
 13135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13140 ;;Total ram usage:        0 bytes
 13141 ;; Hardware stack levels used:    1
 13142 ;; Hardware stack levels required when called:    4
 13143 ;; This function calls:
 13144 ;;		Absolute function
 13145 ;;		_TMR5_DefaultInterruptHandler
 13146 ;; This function is called by:
 13147 ;;		_TMR5_ISR
 13148 ;; This function uses a reentrant model
 13149 ;;
 13150                           
 13151                           	psect	text89
 13152  01363E                     __ptext89:
 13153                           	opt callstack 0
 13154  01363E                     _TMR5_CallBack:
 13155                           	opt callstack 12
 13156                           
 13157                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 13158                           
 13159                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13160                           ;incstack = 0
 13161  01363E  0100               	movlb	0	; () banked
 13162  013640  51AA               	movf	_TMR5_InterruptHandler& (0+255),w,b
 13163  013642  11AB               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 13164  013644  11AC               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 13165  013646  B4D8               	btfsc	status,2,c
 13166  013648  0012               	return	
 13167                           
 13168                           ; BSR set to: 0
 13169                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 13170  01364A  D801               	call	u313_28
 13171  01364C  0012               	return	
 13172  01364E                     u313_28:
 13173  01364E  0005               	push	
 13174  013650  6EFA               	movwf	pclath,c
 13175  013652  51AA               	movf	_TMR5_InterruptHandler& (0+255),w,b
 13176  013654  6EFD               	movwf	tosl,c
 13177  013656  51AB               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 13178  013658  6EFE               	movwf	tosh,c
 13179  01365A  51AC               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 13180  01365C  6EFF               	movwf	tosu,c
 13181  01365E  50FA               	movf	pclath,w,c
 13182  013660  0012               	return		;indir
 13183  013662                     __end_of_TMR5_CallBack:
 13184                           	opt callstack 0
 13185                           
 13186 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 13187 ;; Defined at:
 13188 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 13189 ;; Parameters:    Size  Location     Type
 13190 ;;		None
 13191 ;; Auto vars:     Size  Location     Type
 13192 ;;		None
 13193 ;; Return value:  Size  Location     Type
 13194 ;;                  1  [STACK] void 
 13195 ;; Registers used:
 13196 ;;		wreg, status,2, status,0, btemp+11
 13197 ;; Tracked objects:
 13198 ;;		On entry : 3F/0
 13199 ;;		On exit  : 0/0
 13200 ;;		Unchanged: 0/0
 13201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13206 ;;Total ram usage:        0 bytes
 13207 ;; Hardware stack levels used:    1
 13208 ;; Hardware stack levels required when called:    3
 13209 ;; This function calls:
 13210 ;;		Nothing
 13211 ;; This function is called by:
 13212 ;;		_TMR5_Initialize
 13213 ;;		_TMR5_CallBack
 13214 ;; This function uses a reentrant model
 13215 ;;
 13216                           
 13217                           	psect	text90
 13218  0137CE                     __ptext90:
 13219                           	opt callstack 0
 13220  0137CE                     _TMR5_DefaultInterruptHandler:
 13221                           	opt callstack 12
 13222                           
 13223                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 13224                           
 13225                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13226                           ;incstack = 0
 13227  0137CE  A0BE               	btfss	190,0,c	;volatile
 13228  0137D0  D002               	goto	u296_20
 13229  0137D2  0E01               	movlw	1
 13230  0137D4  D001               	goto	u296_26
 13231  0137D6                     u296_20:
 13232  0137D6  0E00               	movlw	0
 13233  0137D8                     u296_26:
 13234  0137D8  0AFF               	xorlw	255
 13235  0137DA  6E40               	movwf	(btemp+11)^0,c
 13236  0137DC  50BE               	movf	190,w,c	;volatile
 13237  0137DE  1840               	xorwf	(btemp+11)^0,w,c
 13238  0137E0  0BFE               	andlw	-2
 13239  0137E2  1840               	xorwf	(btemp+11)^0,w,c
 13240  0137E4  6EBE               	movwf	190,c	;volatile
 13241                           
 13242                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13243  0137E6  0012               	return		;funcret
 13244  0137E8                     __end_of_TMR5_DefaultInterruptHandler:
 13245                           	opt callstack 0
 13246                           
 13247 ;; *************** function _INT0_ISR *****************
 13248 ;; Defined at:
 13249 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 13250 ;; Parameters:    Size  Location     Type
 13251 ;;		None
 13252 ;; Auto vars:     Size  Location     Type
 13253 ;;		None
 13254 ;; Return value:  Size  Location     Type
 13255 ;;                  1    wreg      void 
 13256 ;; Registers used:
 13257 ;;		wreg, status,2, status,0, pclath, tosl
 13258 ;; Tracked objects:
 13259 ;;		On entry : 0/0
 13260 ;;		On exit  : 0/0
 13261 ;;		Unchanged: 0/0
 13262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13267 ;;Total ram usage:        0 bytes
 13268 ;; Hardware stack levels used:    1
 13269 ;; Hardware stack levels required when called:    2
 13270 ;; This function calls:
 13271 ;;		_INT0_CallBack
 13272 ;; This function is called by:
 13273 ;;		Interrupt level 2
 13274 ;; This function uses a non-reentrant model
 13275 ;;
 13276                           
 13277                           	psect	text91
 13278  0138E0                     __ptext91:
 13279                           	opt callstack 0
 13280  0138E0                     _INT0_ISR:
 13281                           	opt callstack 12
 13282                           
 13283                           ;incstack = 0
 13284  0138E0  EE13  F2AA         	lfsr	1,___inthi_sp
 13285                           
 13286                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 13287  0138E4  0139               	movlb	57	; () banked
 13288  0138E6  91A1               	bcf	161,0,b	;volatile
 13289                           
 13290                           ; BSR set to: 57
 13291                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 13292  0138E8  EC31  F09B         	call	_INT0_CallBack	;wreg free
 13293  0138EC  0011               	retfie		f
 13294  0138EE                     __end_of_INT0_ISR:
 13295                           	opt callstack 0
 13296                           
 13297 ;; *************** function _INT0_CallBack *****************
 13298 ;; Defined at:
 13299 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 13300 ;; Parameters:    Size  Location     Type
 13301 ;;		None
 13302 ;; Auto vars:     Size  Location     Type
 13303 ;;		None
 13304 ;; Return value:  Size  Location     Type
 13305 ;;                  1  [STACK] void 
 13306 ;; Registers used:
 13307 ;;		wreg, status,2, status,0, pclath, tosl
 13308 ;; Tracked objects:
 13309 ;;		On entry : 3F/39
 13310 ;;		On exit  : 0/0
 13311 ;;		Unchanged: 0/0
 13312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13317 ;;Total ram usage:        0 bytes
 13318 ;; Hardware stack levels used:    1
 13319 ;; Hardware stack levels required when called:    1
 13320 ;; This function calls:
 13321 ;;		Absolute function
 13322 ;;		_INT0_DefaultInterruptHandler
 13323 ;; This function is called by:
 13324 ;;		_INT0_ISR
 13325 ;; This function uses a reentrant model
 13326 ;;
 13327                           
 13328                           	psect	text92
 13329  013662                     __ptext92:
 13330                           	opt callstack 0
 13331  013662                     _INT0_CallBack:
 13332                           	opt callstack 12
 13333                           
 13334                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 13335                           
 13336                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13337                           ;incstack = 0
 13338  013662  5019               	movf	_INT0_InterruptHandler^0,w,c
 13339  013664  101A               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 13340  013666  101B               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 13341  013668  B4D8               	btfsc	status,2,c
 13342  01366A  0012               	return	
 13343                           
 13344                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 13345  01366C  D801               	call	u128_48
 13346  01366E  0012               	return	
 13347  013670                     u128_48:
 13348  013670  0005               	push	
 13349  013672  6EFA               	movwf	pclath,c
 13350  013674  5019               	movf	_INT0_InterruptHandler^0,w,c
 13351  013676  6EFD               	movwf	tosl,c
 13352  013678  501A               	movf	(_INT0_InterruptHandler+1)^0,w,c
 13353  01367A  6EFE               	movwf	tosh,c
 13354  01367C  501B               	movf	(_INT0_InterruptHandler+2)^0,w,c
 13355  01367E  6EFF               	movwf	tosu,c
 13356  013680  50FA               	movf	pclath,w,c
 13357  013682  0012               	return		;indir
 13358  013684                     __end_of_INT0_CallBack:
 13359                           	opt callstack 0
 13360                           
 13361 ;; *************** function _INT0_DefaultInterruptHandler *****************
 13362 ;; Defined at:
 13363 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 13364 ;; Parameters:    Size  Location     Type
 13365 ;;		None
 13366 ;; Auto vars:     Size  Location     Type
 13367 ;;		None
 13368 ;; Return value:  Size  Location     Type
 13369 ;;                  1  [STACK] void 
 13370 ;; Registers used:
 13371 ;;		None
 13372 ;; Tracked objects:
 13373 ;;		On entry : 0/39
 13374 ;;		On exit  : 0/0
 13375 ;;		Unchanged: 0/0
 13376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13381 ;;Total ram usage:        0 bytes
 13382 ;; Hardware stack levels used:    1
 13383 ;; This function calls:
 13384 ;;		Nothing
 13385 ;; This function is called by:
 13386 ;;		_EXT_INT_Initialize
 13387 ;;		_INT0_CallBack
 13388 ;; This function uses a reentrant model
 13389 ;;
 13390                           
 13391                           	psect	text93
 13392  013972                     __ptext93:
 13393                           	opt callstack 0
 13394  013972                     _INT0_DefaultInterruptHandler:
 13395                           	opt callstack 12
 13396                           
 13397                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13398                           
 13399                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13400                           ;incstack = 0
 13401  013972  0012               	return		;funcret
 13402  013974                     __end_of_INT0_DefaultInterruptHandler:
 13403                           	opt callstack 0
 13404                           
 13405 ;; *************** function _INT1_ISR *****************
 13406 ;; Defined at:
 13407 ;;		line 63 in file "mcc_generated_files/ext_int.c"
 13408 ;; Parameters:    Size  Location     Type
 13409 ;;		None
 13410 ;; Auto vars:     Size  Location     Type
 13411 ;;		None
 13412 ;; Return value:  Size  Location     Type
 13413 ;;                  1    wreg      void 
 13414 ;; Registers used:
 13415 ;;		wreg, status,2, status,0, pclath, tosl
 13416 ;; Tracked objects:
 13417 ;;		On entry : 0/0
 13418 ;;		On exit  : 0/0
 13419 ;;		Unchanged: 0/0
 13420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13425 ;;Total ram usage:        0 bytes
 13426 ;; Hardware stack levels used:    1
 13427 ;; Hardware stack levels required when called:    2
 13428 ;; This function calls:
 13429 ;;		_INT1_CallBack
 13430 ;; This function is called by:
 13431 ;;		Interrupt level 2
 13432 ;; This function uses a non-reentrant model
 13433 ;;
 13434                           
 13435                           	psect	text94
 13436  0138F0                     __ptext94:
 13437                           	opt callstack 0
 13438  0138F0                     _INT1_ISR:
 13439                           	opt callstack 12
 13440                           
 13441                           ;incstack = 0
 13442  0138F0  EE13  F2AA         	lfsr	1,___inthi_sp
 13443                           
 13444                           ;mcc_generated_files/ext_int.c: 65:  (PIR5bits.INT1IF = 0);
 13445  0138F4  0139               	movlb	57	; () banked
 13446  0138F6  91A5               	bcf	165,0,b	;volatile
 13447                           
 13448                           ; BSR set to: 57
 13449                           ;mcc_generated_files/ext_int.c: 68:  INT1_CallBack();
 13450  0138F8  EC42  F09B         	call	_INT1_CallBack	;wreg free
 13451  0138FC  0011               	retfie		f
 13452  0138FE                     __end_of_INT1_ISR:
 13453                           	opt callstack 0
 13454                           
 13455 ;; *************** function _INT1_CallBack *****************
 13456 ;; Defined at:
 13457 ;;		line 71 in file "mcc_generated_files/ext_int.c"
 13458 ;; Parameters:    Size  Location     Type
 13459 ;;		None
 13460 ;; Auto vars:     Size  Location     Type
 13461 ;;		None
 13462 ;; Return value:  Size  Location     Type
 13463 ;;                  1  [STACK] void 
 13464 ;; Registers used:
 13465 ;;		wreg, status,2, status,0, pclath, tosl
 13466 ;; Tracked objects:
 13467 ;;		On entry : 3F/39
 13468 ;;		On exit  : 0/0
 13469 ;;		Unchanged: 0/0
 13470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13475 ;;Total ram usage:        0 bytes
 13476 ;; Hardware stack levels used:    1
 13477 ;; Hardware stack levels required when called:    1
 13478 ;; This function calls:
 13479 ;;		Absolute function
 13480 ;;		_INT1_DefaultInterruptHandler
 13481 ;; This function is called by:
 13482 ;;		_INT1_ISR
 13483 ;; This function uses a reentrant model
 13484 ;;
 13485                           
 13486                           	psect	text95
 13487  013684                     __ptext95:
 13488                           	opt callstack 0
 13489  013684                     _INT1_CallBack:
 13490                           	opt callstack 12
 13491                           
 13492                           ;mcc_generated_files/ext_int.c: 74:  if (INT1_InterruptHandler) {
 13493                           
 13494                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13495                           ;incstack = 0
 13496  013684  5016               	movf	_INT1_InterruptHandler^0,w,c
 13497  013686  1017               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 13498  013688  1018               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 13499  01368A  B4D8               	btfsc	status,2,c
 13500  01368C  0012               	return	
 13501                           
 13502                           ;mcc_generated_files/ext_int.c: 75:   INT1_InterruptHandler();
 13503  01368E  D801               	call	u130_48
 13504  013690  0012               	return	
 13505  013692                     u130_48:
 13506  013692  0005               	push	
 13507  013694  6EFA               	movwf	pclath,c
 13508  013696  5016               	movf	_INT1_InterruptHandler^0,w,c
 13509  013698  6EFD               	movwf	tosl,c
 13510  01369A  5017               	movf	(_INT1_InterruptHandler+1)^0,w,c
 13511  01369C  6EFE               	movwf	tosh,c
 13512  01369E  5018               	movf	(_INT1_InterruptHandler+2)^0,w,c
 13513  0136A0  6EFF               	movwf	tosu,c
 13514  0136A2  50FA               	movf	pclath,w,c
 13515  0136A4  0012               	return		;indir
 13516  0136A6                     __end_of_INT1_CallBack:
 13517                           	opt callstack 0
 13518                           
 13519 ;; *************** function _INT1_DefaultInterruptHandler *****************
 13520 ;; Defined at:
 13521 ;;		line 84 in file "mcc_generated_files/ext_int.c"
 13522 ;; Parameters:    Size  Location     Type
 13523 ;;		None
 13524 ;; Auto vars:     Size  Location     Type
 13525 ;;		None
 13526 ;; Return value:  Size  Location     Type
 13527 ;;                  1  [STACK] void 
 13528 ;; Registers used:
 13529 ;;		None
 13530 ;; Tracked objects:
 13531 ;;		On entry : 0/39
 13532 ;;		On exit  : 0/0
 13533 ;;		Unchanged: 0/0
 13534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13539 ;;Total ram usage:        0 bytes
 13540 ;; Hardware stack levels used:    1
 13541 ;; This function calls:
 13542 ;;		Nothing
 13543 ;; This function is called by:
 13544 ;;		_EXT_INT_Initialize
 13545 ;;		_INT1_CallBack
 13546 ;; This function uses a reentrant model
 13547 ;;
 13548                           
 13549                           	psect	text96
 13550  013974                     __ptext96:
 13551                           	opt callstack 0
 13552  013974                     _INT1_DefaultInterruptHandler:
 13553                           	opt callstack 12
 13554                           
 13555                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13556                           
 13557                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13558                           ;incstack = 0
 13559  013974  0012               	return		;funcret
 13560  013976                     __end_of_INT1_DefaultInterruptHandler:
 13561                           	opt callstack 0
 13562                           
 13563 ;; *************** function _Default_ISR *****************
 13564 ;; Defined at:
 13565 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 13566 ;; Parameters:    Size  Location     Type
 13567 ;;		None
 13568 ;; Auto vars:     Size  Location     Type
 13569 ;;		None
 13570 ;; Return value:  Size  Location     Type
 13571 ;;                  1    wreg      void 
 13572 ;; Registers used:
 13573 ;;		None
 13574 ;; Tracked objects:
 13575 ;;		On entry : 0/0
 13576 ;;		On exit  : 0/0
 13577 ;;		Unchanged: 0/0
 13578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13583 ;;Total ram usage:        0 bytes
 13584 ;; Hardware stack levels used:    1
 13585 ;; This function calls:
 13586 ;;		Nothing
 13587 ;; This function is called by:
 13588 ;;		Interrupt level 2
 13589 ;; This function uses a non-reentrant model
 13590 ;;
 13591                           
 13592                           	psect	text97
 13593  01396C                     __ptext97:
 13594                           	opt callstack 0
 13595  01396C                     _Default_ISR:
 13596                           	opt callstack 14
 13597                           
 13598                           ;incstack = 0
 13599  01396C  EE13  F2AA         	lfsr	1,___inthi_sp
 13600  013970  0011               	retfie		f
 13601  013972                     __end_of_Default_ISR:
 13602                           	opt callstack 0
 13603                           
 13604 ;; *************** function _ADCC_ISR *****************
 13605 ;; Defined at:
 13606 ;;		line 314 in file "mcc_generated_files/adcc.c"
 13607 ;; Parameters:    Size  Location     Type
 13608 ;;		None
 13609 ;; Auto vars:     Size  Location     Type
 13610 ;;		None
 13611 ;; Return value:  Size  Location     Type
 13612 ;;                  1    wreg      void 
 13613 ;; Registers used:
 13614 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 13615 ;; Tracked objects:
 13616 ;;		On entry : 0/0
 13617 ;;		On exit  : 0/0
 13618 ;;		Unchanged: 0/0
 13619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13622 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13623 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13624 ;;Total ram usage:        1 bytes
 13625 ;; Hardware stack levels used:    1
 13626 ;; Hardware stack levels required when called:    1
 13627 ;; This function calls:
 13628 ;;		Absolute function
 13629 ;;		_ADCC_DefaultInterruptHandler
 13630 ;;		_adc_int_handler
 13631 ;; This function is called by:
 13632 ;;		Interrupt level 2
 13633 ;; This function uses a non-reentrant model
 13634 ;;
 13635                           
 13636                           	psect	text98
 13637  013158                     __ptext98:
 13638                           	opt callstack 0
 13639  013158                     _ADCC_ISR:
 13640                           	opt callstack 13
 13641                           
 13642                           ;incstack = 0
 13643  013158  0060  F100  F055   	movff	btemp+11,??_ADCC_ISR
 13644  01315E  EE13  F2AA         	lfsr	1,___inthi_sp
 13645                           
 13646                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 13647  013162  0139               	movlb	57	; () banked
 13648  013164  95A1               	bcf	161,2,b	;volatile
 13649                           
 13650                           ; BSR set to: 57
 13651                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 13652  013166  5007               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 13653  013168  1008               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 13654  01316A  1009               	iorwf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 13655  01316C  B4D8               	btfsc	status,2,c
 13656  01316E  D00C               	goto	i2u157_49
 13657                           
 13658                           ; BSR set to: 57
 13659                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 13660  013170  D801               	call	i2u157_48
 13661  013172  D00A               	goto	i2u157_49
 13662  013174                     i2u157_48:
 13663  013174  0005               	push	
 13664  013176  6EFA               	movwf	pclath,c
 13665  013178  5007               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 13666  01317A  6EFD               	movwf	tosl,c
 13667  01317C  5008               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 13668  01317E  6EFE               	movwf	tosh,c
 13669  013180  5009               	movf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 13670  013182  6EFF               	movwf	tosu,c
 13671  013184  50FA               	movf	pclath,w,c
 13672  013186  0012               	return		;indir
 13673  013188                     i2u157_49:
 13674  013188  0060  F154  F040   	movff	??_ADCC_ISR,btemp+11
 13675  01318E  0011               	retfie		f
 13676  013190                     __end_of_ADCC_ISR:
 13677                           	opt callstack 0
 13678                           
 13679 ;; *************** function _adc_int_t_handler *****************
 13680 ;; Defined at:
 13681 ;;		line 79 in file "daq.c"
 13682 ;; Parameters:    Size  Location     Type
 13683 ;;		None
 13684 ;; Auto vars:     Size  Location     Type
 13685 ;;		None
 13686 ;; Return value:  Size  Location     Type
 13687 ;;                  1  [STACK] void 
 13688 ;; Registers used:
 13689 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 13690 ;; Tracked objects:
 13691 ;;		On entry : 3F/39
 13692 ;;		On exit  : 1/0
 13693 ;;		Unchanged: 0/0
 13694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13699 ;;Total ram usage:        0 bytes
 13700 ;; Hardware stack levels used:    1
 13701 ;; Hardware stack levels required when called:    1
 13702 ;; This function calls:
 13703 ;;		_ADCC_StartConversion
 13704 ;; This function is called by:
 13705 ;;		_start_adc_scan
 13706 ;;		_ADCC_ThresholdISR
 13707 ;; This function uses a reentrant model
 13708 ;;
 13709                           
 13710                           	psect	text99
 13711  012738                     __ptext99:
 13712                           	opt callstack 0
 13713  012738                     _adc_int_t_handler:
 13714                           	opt callstack 12
 13715                           
 13716                           ;daq.c: 84:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 13717                           
 13718                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13719                           ;incstack = 0
 13720  012738  013E               	movlb	62	; () banked
 13721  01273A  51E6               	movf	230,w,b	;volatile
 13722  01273C  006F FB9C  F035    	movff	16103,btemp	;volatile
 13723  012742  6A36               	clrf	(btemp+1)^0,c
 13724  012744  0060  F0D4  F036   	movff	btemp,btemp+1
 13725  01274A  6A35               	clrf	btemp^0,c
 13726  01274C  2635               	addwf	btemp^0,f,c
 13727  01274E  0E00               	movlw	0
 13728  012750  2236               	addwfc	(btemp+1)^0,f,c
 13729  012752  0100               	movlb	0	; () banked
 13730  012754  517E               	movf	(_R+30)& (0+255),w,b	;volatile
 13731  012756  0D02               	mullw	2
 13732  012758  50F3               	movf	243,w,c
 13733  01275A  0F60               	addlw	low _R
 13734  01275C  6ED9               	movwf	fsr2l,c
 13735  01275E  6ADA               	clrf	fsr2h,c
 13736  012760  0060  F0D7  FFDE   	movff	btemp,postinc2
 13737  012766  0060  F0DB  FFDD   	movff	btemp+1,postdec2
 13738  01276C                     l5547:
 13739                           
 13740                           ;daq.c: 86:   if (++R.scan_index > 0XD) {
 13741  01276C  0100               	movlb	0	; () banked
 13742  01276E  2B7E               	incf	(_R+30)& (0+255),f,b	;volatile
 13743  012770  0E0D               	movlw	13
 13744  012772  657E               	cpfsgt	(_R+30)& (0+255),b	;volatile
 13745  012774  D004               	goto	l5555
 13746                           
 13747                           ; BSR set to: 0
 13748                           ;daq.c: 87:    R.done = 1;
 13749  012776  0E01               	movlw	1
 13750  012778  6F81               	movwf	(_R+33)& (0+255),b	;volatile
 13751                           
 13752                           ; BSR set to: 0
 13753  01277A  92BE               	bcf	190,1,c	;volatile
 13754  01277C  0012               	return	
 13755  01277E                     l5555:
 13756                           
 13757                           ; BSR set to: 0
 13758                           ;daq.c: 91:  } while (!((R.scan_select >> R.scan_index) &0x01));
 13759  01277E  0060  F1F8  F040   	movff	_R+30,btemp+11	;volatile
 13760  012784  EE20  F07F         	lfsr	2,_R+31	;volatile
 13761  012788  006F FF78  F03D    	movff	postinc2,btemp+8
 13762  01278E  006F FF74  F03E    	movff	postdec2,btemp+9
 13763  012794  2A40               	incf	(btemp+11)^0,f,c
 13764  012796  D003               	goto	u324_44
 13765  012798                     u324_45:
 13766  012798  90D8               	bcf	status,0,c
 13767  01279A  323E               	rrcf	(btemp+9)^0,f,c
 13768  01279C  323D               	rrcf	(btemp+8)^0,f,c
 13769  01279E                     u324_44:
 13770  01279E  2E40               	decfsz	(btemp+11)^0,f,c
 13771  0127A0  D7FB               	goto	u324_45
 13772  0127A2  A03D               	btfss	(btemp+8)^0,0,c
 13773  0127A4  D7E3               	goto	l5547
 13774                           
 13775                           ;daq.c: 92:  ADCC_StartConversion(R.scan_index & 0xf);
 13776  0127A6  0100               	movlb	0	; () banked
 13777  0127A8  517E               	movf	(_R+30)& (0+255),w,b	;volatile
 13778  0127AA  0B0F               	andlw	15
 13779  0127AC  6EE6               	movwf	postinc1,c
 13780  0127AE  EC50  F09C         	call	_ADCC_StartConversion	;wreg free
 13781                           
 13782                           ; BSR set to: 62
 13783  0127B2  A2BE               	btfss	190,1,c	;volatile
 13784  0127B4  D002               	goto	u326_40
 13785  0127B6  0E01               	movlw	1
 13786  0127B8  D001               	goto	u326_46
 13787  0127BA                     u326_40:
 13788  0127BA  0E00               	movlw	0
 13789  0127BC                     u326_46:
 13790  0127BC  0AFF               	xorlw	255
 13791  0127BE  6E40               	movwf	(btemp+11)^0,c
 13792  0127C0  4640               	rlncf	(btemp+11)^0,f,c
 13793  0127C2  50BE               	movf	190,w,c	;volatile
 13794  0127C4  1840               	xorwf	(btemp+11)^0,w,c
 13795  0127C6  0BFD               	andlw	-3
 13796  0127C8  1840               	xorwf	(btemp+11)^0,w,c
 13797  0127CA  6EBE               	movwf	190,c	;volatile
 13798                           
 13799                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 13800  0127CC  0012               	return		;funcret
 13801  0127CE                     __end_of_adc_int_t_handler:
 13802                           	opt callstack 0
 13803                           
 13804 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 13805 ;; Defined at:
 13806 ;;		line 339 in file "mcc_generated_files/adcc.c"
 13807 ;; Parameters:    Size  Location     Type
 13808 ;;		None
 13809 ;; Auto vars:     Size  Location     Type
 13810 ;;		None
 13811 ;; Return value:  Size  Location     Type
 13812 ;;                  1  [STACK] void 
 13813 ;; Registers used:
 13814 ;;		None
 13815 ;; Tracked objects:
 13816 ;;		On entry : 3F/39
 13817 ;;		On exit  : 0/0
 13818 ;;		Unchanged: 0/0
 13819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13824 ;;Total ram usage:        0 bytes
 13825 ;; Hardware stack levels used:    1
 13826 ;; This function calls:
 13827 ;;		Nothing
 13828 ;; This function is called by:
 13829 ;;		_ADCC_Initialize
 13830 ;;		_ADCC_ISR
 13831 ;;		_ADCC_ThresholdISR
 13832 ;; This function uses a reentrant model
 13833 ;;
 13834                           
 13835                           	psect	text100
 13836  013976                     __ptext100:
 13837                           	opt callstack 0
 13838  013976                     _ADCC_DefaultInterruptHandler:
 13839                           	opt callstack 13
 13840                           
 13841                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13842                           
 13843                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13844                           ;incstack = 0
 13845  013976  0012               	return		;funcret
 13846  013978                     __end_of_ADCC_DefaultInterruptHandler:
 13847                           	opt callstack 0
 13848                           
 13849 ;; *************** function _adc_int_handler *****************
 13850 ;; Defined at:
 13851 ;;		line 71 in file "daq.c"
 13852 ;; Parameters:    Size  Location     Type
 13853 ;;		None
 13854 ;; Auto vars:     Size  Location     Type
 13855 ;;		None
 13856 ;; Return value:  Size  Location     Type
 13857 ;;                  1  [STACK] void 
 13858 ;; Registers used:
 13859 ;;		wreg, status,2, status,0, btemp+11
 13860 ;; Tracked objects:
 13861 ;;		On entry : 3F/39
 13862 ;;		On exit  : 0/0
 13863 ;;		Unchanged: 0/0
 13864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13869 ;;Total ram usage:        0 bytes
 13870 ;; Hardware stack levels used:    1
 13871 ;; This function calls:
 13872 ;;		Nothing
 13873 ;; This function is called by:
 13874 ;;		_start_adc_scan
 13875 ;;		_ADCC_ISR
 13876 ;; This function uses a reentrant model
 13877 ;;
 13878                           
 13879                           	psect	text101
 13880  013722                     __ptext101:
 13881                           	opt callstack 0
 13882  013722                     _adc_int_handler:
 13883                           	opt callstack 13
 13884                           
 13885                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13886                           ;incstack = 0
 13887                           ;daq.c: 73:  do { LATEbits.LATE2 = ~LATEbits.LATE2; } while(0);
 13888  013722  A4BE               	btfss	190,2,c	;volatile
 13889  013724  D002               	goto	u151_40
 13890  013726  0E01               	movlw	1
 13891  013728  D001               	goto	u151_46
 13892  01372A                     u151_40:
 13893  01372A  0E00               	movlw	0
 13894  01372C                     u151_46:
 13895  01372C  0AFF               	xorlw	255
 13896  01372E  6E40               	movwf	(btemp+11)^0,c
 13897  013730  4640               	rlncf	(btemp+11)^0,f,c
 13898  013732  4640               	rlncf	(btemp+11)^0,f,c
 13899  013734  50BE               	movf	190,w,c	;volatile
 13900  013736  1840               	xorwf	(btemp+11)^0,w,c
 13901  013738  0BFB               	andlw	-5
 13902  01373A  1840               	xorwf	(btemp+11)^0,w,c
 13903  01373C  6EBE               	movwf	190,c	;volatile
 13904                           
 13905                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13906  01373E  0012               	return		;funcret
 13907  013740                     __end_of_adc_int_handler:
 13908                           	opt callstack 0
 13909                           
 13910 ;; *************** function _ADCC_ThresholdISR *****************
 13911 ;; Defined at:
 13912 ;;		line 327 in file "mcc_generated_files/adcc.c"
 13913 ;; Parameters:    Size  Location     Type
 13914 ;;		None
 13915 ;; Auto vars:     Size  Location     Type
 13916 ;;		None
 13917 ;; Return value:  Size  Location     Type
 13918 ;;                  1    wreg      void 
 13919 ;; Registers used:
 13920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 13921 ;; Tracked objects:
 13922 ;;		On entry : 0/0
 13923 ;;		On exit  : 0/0
 13924 ;;		Unchanged: 0/0
 13925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13928 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13929 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13930 ;;Total ram usage:        5 bytes
 13931 ;; Hardware stack levels used:    1
 13932 ;; Hardware stack levels required when called:    2
 13933 ;; This function calls:
 13934 ;;		Absolute function
 13935 ;;		_ADCC_DefaultInterruptHandler
 13936 ;;		_adc_int_t_handler
 13937 ;; This function is called by:
 13938 ;;		Interrupt level 2
 13939 ;; This function uses a non-reentrant model
 13940 ;;
 13941                           
 13942                           	psect	text102
 13943  012B4C                     __ptext102:
 13944                           	opt callstack 0
 13945  012B4C                     _ADCC_ThresholdISR:
 13946                           	opt callstack 12
 13947                           
 13948                           ;incstack = 0
 13949  012B4C  0060  F0D4  F056   	movff	btemp,??_ADCC_ThresholdISR
 13950  012B52  0060  F0D8  F057   	movff	btemp+1,??_ADCC_ThresholdISR+1
 13951  012B58  0060  F0F4  F058   	movff	btemp+8,??_ADCC_ThresholdISR+2
 13952  012B5E  0060  F0F8  F059   	movff	btemp+9,??_ADCC_ThresholdISR+3
 13953  012B64  0060  F100  F05A   	movff	btemp+11,??_ADCC_ThresholdISR+4
 13954  012B6A  EE13  F2AA         	lfsr	1,___inthi_sp
 13955                           
 13956                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 13957  012B6E  0139               	movlb	57	; () banked
 13958  012B70  97A1               	bcf	161,3,b	;volatile
 13959                           
 13960                           ; BSR set to: 57
 13961                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 13962  012B72  5004               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 13963  012B74  1005               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 13964  012B76  1006               	iorwf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 13965  012B78  B4D8               	btfsc	status,2,c
 13966  012B7A  D00C               	goto	i2u328_49
 13967                           
 13968                           ; BSR set to: 57
 13969                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 13970  012B7C  D801               	call	i2u328_48
 13971  012B7E  D00A               	goto	i2u328_49
 13972  012B80                     i2u328_48:
 13973  012B80  0005               	push	
 13974  012B82  6EFA               	movwf	pclath,c
 13975  012B84  5004               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 13976  012B86  6EFD               	movwf	tosl,c
 13977  012B88  5005               	movf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 13978  012B8A  6EFE               	movwf	tosh,c
 13979  012B8C  5006               	movf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 13980  012B8E  6EFF               	movwf	tosu,c
 13981  012B90  50FA               	movf	pclath,w,c
 13982  012B92  0012               	return		;indir
 13983  012B94                     i2u328_49:
 13984  012B94  0060  F168  F040   	movff	??_ADCC_ThresholdISR+4,btemp+11
 13985  012B9A  0060  F164  F03E   	movff	??_ADCC_ThresholdISR+3,btemp+9
 13986  012BA0  0060  F160  F03D   	movff	??_ADCC_ThresholdISR+2,btemp+8
 13987  012BA6  0060  F15C  F036   	movff	??_ADCC_ThresholdISR+1,btemp+1
 13988  012BAC  0060  F158  F035   	movff	??_ADCC_ThresholdISR,btemp
 13989  012BB2  0011               	retfie		f
 13990  012BB4                     __end_of_ADCC_ThresholdISR:
 13991                           	opt callstack 0
 13992                           
 13993 ;; *************** function _UART1_tx_vect_isr *****************
 13994 ;; Defined at:
 13995 ;;		line 199 in file "mcc_generated_files/uart1.c"
 13996 ;; Parameters:    Size  Location     Type
 13997 ;;		None
 13998 ;; Auto vars:     Size  Location     Type
 13999 ;;		None
 14000 ;; Return value:  Size  Location     Type
 14001 ;;                  1    wreg      void 
 14002 ;; Registers used:
 14003 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 14004 ;; Tracked objects:
 14005 ;;		On entry : 0/0
 14006 ;;		On exit  : 0/0
 14007 ;;		Unchanged: 0/0
 14008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14013 ;;Total ram usage:        0 bytes
 14014 ;; Hardware stack levels used:    1
 14015 ;; Hardware stack levels required when called:    1
 14016 ;; This function calls:
 14017 ;;		Absolute function
 14018 ;;		_UART1_Transmit_ISR
 14019 ;; This function is called by:
 14020 ;;		Interrupt level 2
 14021 ;; This function uses a non-reentrant model
 14022 ;;
 14023                           
 14024                           	psect	text103
 14025  01357C                     __ptext103:
 14026                           	opt callstack 0
 14027  01357C                     _UART1_tx_vect_isr:
 14028                           	opt callstack 13
 14029                           
 14030                           ;incstack = 0
 14031  01357C  EE13  F2AA         	lfsr	1,___inthi_sp
 14032                           
 14033                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 14034  013580  500A               	movf	_UART1_TxInterruptHandler^0,w,c
 14035  013582  100B               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 14036  013584  100C               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 14037  013586  B4D8               	btfsc	status,2,c
 14038  013588  0011               	retfie		f
 14039                           
 14040                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 14041  01358A  D801               	call	i2u429_48
 14042  01358C  0011               	retfie		f
 14043  01358E                     i2u429_48:
 14044  01358E  0005               	push	
 14045  013590  6EFA               	movwf	pclath,c
 14046  013592  500A               	movf	_UART1_TxInterruptHandler^0,w,c
 14047  013594  6EFD               	movwf	tosl,c
 14048  013596  500B               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 14049  013598  6EFE               	movwf	tosh,c
 14050  01359A  500C               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 14051  01359C  6EFF               	movwf	tosu,c
 14052  01359E  50FA               	movf	pclath,w,c
 14053  0135A0  0012               	return		;indir
 14054  0135A2                     __end_of_UART1_tx_vect_isr:
 14055                           	opt callstack 0
 14056                           
 14057 ;; *************** function _UART1_Transmit_ISR *****************
 14058 ;; Defined at:
 14059 ;;		line 213 in file "mcc_generated_files/uart1.c"
 14060 ;; Parameters:    Size  Location     Type
 14061 ;;		None
 14062 ;; Auto vars:     Size  Location     Type
 14063 ;;		None
 14064 ;; Return value:  Size  Location     Type
 14065 ;;                  1  [STACK] void 
 14066 ;; Registers used:
 14067 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14068 ;; Tracked objects:
 14069 ;;		On entry : 0/0
 14070 ;;		On exit  : 3B/39
 14071 ;;		Unchanged: 0/0
 14072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14077 ;;Total ram usage:        0 bytes
 14078 ;; Hardware stack levels used:    1
 14079 ;; This function calls:
 14080 ;;		Nothing
 14081 ;; This function is called by:
 14082 ;;		_UART1_Initialize
 14083 ;;		_UART1_tx_vect_isr
 14084 ;; This function uses a reentrant model
 14085 ;;
 14086                           
 14087                           	psect	text104
 14088  0132F2                     __ptext104:
 14089                           	opt callstack 0
 14090  0132F2                     _UART1_Transmit_ISR:
 14091                           	opt callstack 13
 14092                           
 14093                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 14094                           
 14095                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14096                           ;incstack = 0
 14097  0132F2  0E40               	movlw	64
 14098  0132F4  6032               	cpfslt	_uart1TxBufferRemaining^0,c
 14099  0132F6  D010               	goto	l581
 14100                           
 14101                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 14102  0132F8  0EBD               	movlw	low _uart1TxBuffer
 14103  0132FA  2433               	addwf	_uart1TxTail^0,w,c	;volatile
 14104  0132FC  6ED9               	movwf	fsr2l,c
 14105  0132FE  6ADA               	clrf	fsr2h,c
 14106  013300  0E01               	movlw	high _uart1TxBuffer
 14107  013302  22DA               	addwfc	fsr2h,f,c
 14108  013304  50DF               	movf	indf2,w,c
 14109  013306  013D               	movlb	61	; () banked
 14110  013308  6FEA               	movwf	234,b	;volatile
 14111                           
 14112                           ; BSR set to: 61
 14113  01330A  2A33               	incf	_uart1TxTail^0,f,c	;volatile
 14114                           
 14115                           ; BSR set to: 61
 14116                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 14117  01330C  0E3F               	movlw	63
 14118  01330E  6433               	cpfsgt	_uart1TxTail^0,c
 14119  013310  D001               	goto	l5349
 14120                           
 14121                           ; BSR set to: 61
 14122                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 14123  013312  6A33               	clrf	_uart1TxTail^0,c	;volatile
 14124  013314                     l5349:
 14125                           
 14126                           ; BSR set to: 61
 14127                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 14128  013314  2A32               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 14129                           
 14130                           ;mcc_generated_files/uart1.c: 222:  } else {
 14131  013316  0012               	return	
 14132  013318                     l581:
 14133                           
 14134                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 14135  013318  0139               	movlb	57	; () banked
 14136  01331A  9993               	bcf	147,4,b	;volatile
 14137                           
 14138                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 14139  01331C  0012               	return		;funcret
 14140  01331E                     __end_of_UART1_Transmit_ISR:
 14141                           	opt callstack 0
 14142                           
 14143 ;; *************** function _UART1_rx_vect_isr *****************
 14144 ;; Defined at:
 14145 ;;		line 206 in file "mcc_generated_files/uart1.c"
 14146 ;; Parameters:    Size  Location     Type
 14147 ;;		None
 14148 ;; Auto vars:     Size  Location     Type
 14149 ;;		None
 14150 ;; Return value:  Size  Location     Type
 14151 ;;                  1    wreg      void 
 14152 ;; Registers used:
 14153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 14154 ;; Tracked objects:
 14155 ;;		On entry : 0/0
 14156 ;;		On exit  : 0/0
 14157 ;;		Unchanged: 0/0
 14158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14163 ;;Total ram usage:        0 bytes
 14164 ;; Hardware stack levels used:    1
 14165 ;; Hardware stack levels required when called:    1
 14166 ;; This function calls:
 14167 ;;		Absolute function
 14168 ;;		_UART1_Receive_ISR
 14169 ;; This function is called by:
 14170 ;;		Interrupt level 2
 14171 ;; This function uses a non-reentrant model
 14172 ;;
 14173                           
 14174                           	psect	text105
 14175  0135A4                     __ptext105:
 14176                           	opt callstack 0
 14177  0135A4                     _UART1_rx_vect_isr:
 14178                           	opt callstack 13
 14179                           
 14180                           ;incstack = 0
 14181  0135A4  EE13  F2AA         	lfsr	1,___inthi_sp
 14182                           
 14183                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 14184  0135A8  500D               	movf	_UART1_RxInterruptHandler^0,w,c
 14185  0135AA  100E               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 14186  0135AC  100F               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 14187  0135AE  B4D8               	btfsc	status,2,c
 14188  0135B0  0011               	retfie		f
 14189                           
 14190                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 14191  0135B2  D801               	call	i2u431_48
 14192  0135B4  0011               	retfie		f
 14193  0135B6                     i2u431_48:
 14194  0135B6  0005               	push	
 14195  0135B8  6EFA               	movwf	pclath,c
 14196  0135BA  500D               	movf	_UART1_RxInterruptHandler^0,w,c
 14197  0135BC  6EFD               	movwf	tosl,c
 14198  0135BE  500E               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 14199  0135C0  6EFE               	movwf	tosh,c
 14200  0135C2  500F               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 14201  0135C4  6EFF               	movwf	tosu,c
 14202  0135C6  50FA               	movf	pclath,w,c
 14203  0135C8  0012               	return		;indir
 14204  0135CA                     __end_of_UART1_rx_vect_isr:
 14205                           	opt callstack 0
 14206                           
 14207 ;; *************** function _UART1_Receive_ISR *****************
 14208 ;; Defined at:
 14209 ;;		line 229 in file "mcc_generated_files/uart1.c"
 14210 ;; Parameters:    Size  Location     Type
 14211 ;;		None
 14212 ;; Auto vars:     Size  Location     Type
 14213 ;;		None
 14214 ;; Return value:  Size  Location     Type
 14215 ;;                  1  [STACK] void 
 14216 ;; Registers used:
 14217 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14218 ;; Tracked objects:
 14219 ;;		On entry : 0/0
 14220 ;;		On exit  : 0/0
 14221 ;;		Unchanged: 0/0
 14222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14227 ;;Total ram usage:        0 bytes
 14228 ;; Hardware stack levels used:    1
 14229 ;; This function calls:
 14230 ;;		Nothing
 14231 ;; This function is called by:
 14232 ;;		_UART1_Initialize
 14233 ;;		_UART1_rx_vect_isr
 14234 ;; This function uses a reentrant model
 14235 ;;
 14236                           
 14237                           	psect	text106
 14238  013740                     __ptext106:
 14239                           	opt callstack 0
 14240  013740                     _UART1_Receive_ISR:
 14241                           	opt callstack 13
 14242                           
 14243                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 14244                           
 14245                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14246                           ;incstack = 0
 14247  013740  0E00               	movlw	low _uart1RxBuffer
 14248  013742  2431               	addwf	_uart1RxHead^0,w,c	;volatile
 14249  013744  6ED9               	movwf	fsr2l,c
 14250  013746  6ADA               	clrf	fsr2h,c
 14251  013748  0E04               	movlw	high _uart1RxBuffer
 14252  01374A  22DA               	addwfc	fsr2h,f,c
 14253  01374C  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 14254  013752  2A31               	incf	_uart1RxHead^0,f,c	;volatile
 14255                           
 14256                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 14257  013754  2831               	incf	_uart1RxHead^0,w,c
 14258  013756  B4D8               	btfsc	status,2,c
 14259                           
 14260                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 14261  013758  6A31               	clrf	_uart1RxHead^0,c	;volatile
 14262                           
 14263                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 14264  01375A  2A2F               	incf	_uart1RxCount^0,f,c	;volatile
 14265                           
 14266                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 14267  01375C  0012               	return		;funcret
 14268  01375E                     __end_of_UART1_Receive_ISR:
 14269                           	opt callstack 0
 14270                           
 14271 ;; *************** function _UART2_tx_vect_isr *****************
 14272 ;; Defined at:
 14273 ;;		line 195 in file "mcc_generated_files/uart2.c"
 14274 ;; Parameters:    Size  Location     Type
 14275 ;;		None
 14276 ;; Auto vars:     Size  Location     Type
 14277 ;;		None
 14278 ;; Return value:  Size  Location     Type
 14279 ;;                  1    wreg      void 
 14280 ;; Registers used:
 14281 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 14282 ;; Tracked objects:
 14283 ;;		On entry : 0/0
 14284 ;;		On exit  : 0/0
 14285 ;;		Unchanged: 0/0
 14286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14291 ;;Total ram usage:        0 bytes
 14292 ;; Hardware stack levels used:    1
 14293 ;; Hardware stack levels required when called:    1
 14294 ;; This function calls:
 14295 ;;		Absolute function
 14296 ;;		_UART2_Transmit_ISR
 14297 ;; This function is called by:
 14298 ;;		Interrupt level 2
 14299 ;; This function uses a non-reentrant model
 14300 ;;
 14301                           
 14302                           	psect	text107
 14303  0135CC                     __ptext107:
 14304                           	opt callstack 0
 14305  0135CC                     _UART2_tx_vect_isr:
 14306                           	opt callstack 13
 14307                           
 14308                           ;incstack = 0
 14309  0135CC  EE13  F2AA         	lfsr	1,___inthi_sp
 14310                           
 14311                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 14312  0135D0  5010               	movf	_UART2_TxInterruptHandler^0,w,c
 14313  0135D2  1011               	iorwf	(_UART2_TxInterruptHandler+1)^0,w,c
 14314  0135D4  1012               	iorwf	(_UART2_TxInterruptHandler+2)^0,w,c
 14315  0135D6  B4D8               	btfsc	status,2,c
 14316  0135D8  0011               	retfie		f
 14317                           
 14318                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 14319  0135DA  D801               	call	i2u433_48
 14320  0135DC  0011               	retfie		f
 14321  0135DE                     i2u433_48:
 14322  0135DE  0005               	push	
 14323  0135E0  6EFA               	movwf	pclath,c
 14324  0135E2  5010               	movf	_UART2_TxInterruptHandler^0,w,c
 14325  0135E4  6EFD               	movwf	tosl,c
 14326  0135E6  5011               	movf	(_UART2_TxInterruptHandler+1)^0,w,c
 14327  0135E8  6EFE               	movwf	tosh,c
 14328  0135EA  5012               	movf	(_UART2_TxInterruptHandler+2)^0,w,c
 14329  0135EC  6EFF               	movwf	tosu,c
 14330  0135EE  50FA               	movf	pclath,w,c
 14331  0135F0  0012               	return		;indir
 14332  0135F2                     __end_of_UART2_tx_vect_isr:
 14333                           	opt callstack 0
 14334                           
 14335 ;; *************** function _UART2_Transmit_ISR *****************
 14336 ;; Defined at:
 14337 ;;		line 213 in file "mcc_generated_files/uart2.c"
 14338 ;; Parameters:    Size  Location     Type
 14339 ;;		None
 14340 ;; Auto vars:     Size  Location     Type
 14341 ;;		None
 14342 ;; Return value:  Size  Location     Type
 14343 ;;                  1  [STACK] void 
 14344 ;; Registers used:
 14345 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14346 ;; Tracked objects:
 14347 ;;		On entry : 0/0
 14348 ;;		On exit  : 3B/39
 14349 ;;		Unchanged: 0/0
 14350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14355 ;;Total ram usage:        0 bytes
 14356 ;; Hardware stack levels used:    1
 14357 ;; This function calls:
 14358 ;;		Nothing
 14359 ;; This function is called by:
 14360 ;;		_UART2_Initialize
 14361 ;;		_UART2_tx_vect_isr
 14362 ;; This function uses a reentrant model
 14363 ;;
 14364                           
 14365                           	psect	text108
 14366  01331E                     __ptext108:
 14367                           	opt callstack 0
 14368  01331E                     _UART2_Transmit_ISR:
 14369                           	opt callstack 13
 14370                           
 14371                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 14372                           
 14373                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14374                           ;incstack = 0
 14375  01331E  0E40               	movlw	64
 14376  013320  602C               	cpfslt	_uart2TxBufferRemaining^0,c
 14377  013322  D010               	goto	l701
 14378                           
 14379                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 14380  013324  0E00               	movlw	low _uart2TxBuffer
 14381  013326  242D               	addwf	_uart2TxTail^0,w,c	;volatile
 14382  013328  6ED9               	movwf	fsr2l,c
 14383  01332A  6ADA               	clrf	fsr2h,c
 14384  01332C  0E02               	movlw	high _uart2TxBuffer
 14385  01332E  22DA               	addwfc	fsr2h,f,c
 14386  013330  50DF               	movf	indf2,w,c
 14387  013332  013D               	movlb	61	; () banked
 14388  013334  6FD2               	movwf	210,b	;volatile
 14389                           
 14390                           ; BSR set to: 61
 14391  013336  2A2D               	incf	_uart2TxTail^0,f,c	;volatile
 14392                           
 14393                           ; BSR set to: 61
 14394                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 14395  013338  0E3F               	movlw	63
 14396  01333A  642D               	cpfsgt	_uart2TxTail^0,c
 14397  01333C  D001               	goto	l5371
 14398                           
 14399                           ; BSR set to: 61
 14400                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 14401  01333E  6A2D               	clrf	_uart2TxTail^0,c	;volatile
 14402  013340                     l5371:
 14403                           
 14404                           ; BSR set to: 61
 14405                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 14406  013340  2A2C               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 14407                           
 14408                           ;mcc_generated_files/uart2.c: 224:     }
 14409  013342  0012               	return	
 14410  013344                     l701:
 14411                           
 14412                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 14413  013344  0139               	movlb	57	; () banked
 14414  013346  9796               	bcf	150,3,b	;volatile
 14415                           
 14416                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 14417  013348  0012               	return		;funcret
 14418  01334A                     __end_of_UART2_Transmit_ISR:
 14419                           	opt callstack 0
 14420                           
 14421 ;; *************** function _UART2_rx_vect_isr *****************
 14422 ;; Defined at:
 14423 ;;		line 203 in file "mcc_generated_files/uart2.c"
 14424 ;; Parameters:    Size  Location     Type
 14425 ;;		None
 14426 ;; Auto vars:     Size  Location     Type
 14427 ;;		None
 14428 ;; Return value:  Size  Location     Type
 14429 ;;                  1    wreg      void 
 14430 ;; Registers used:
 14431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 14432 ;; Tracked objects:
 14433 ;;		On entry : 0/0
 14434 ;;		On exit  : 0/0
 14435 ;;		Unchanged: 0/0
 14436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14441 ;;Total ram usage:        0 bytes
 14442 ;; Hardware stack levels used:    1
 14443 ;; Hardware stack levels required when called:    1
 14444 ;; This function calls:
 14445 ;;		Absolute function
 14446 ;;		_UART2_Receive_ISR
 14447 ;; This function is called by:
 14448 ;;		Interrupt level 2
 14449 ;; This function uses a non-reentrant model
 14450 ;;
 14451                           
 14452                           	psect	text109
 14453  0135F4                     __ptext109:
 14454                           	opt callstack 0
 14455  0135F4                     _UART2_rx_vect_isr:
 14456                           	opt callstack 13
 14457                           
 14458                           ;incstack = 0
 14459  0135F4  EE13  F2AA         	lfsr	1,___inthi_sp
 14460                           
 14461                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 14462  0135F8  5013               	movf	_UART2_RxInterruptHandler^0,w,c
 14463  0135FA  1014               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 14464  0135FC  1015               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 14465  0135FE  B4D8               	btfsc	status,2,c
 14466  013600  0011               	retfie		f
 14467                           
 14468                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 14469  013602  D801               	call	i2u435_48
 14470  013604  0011               	retfie		f
 14471  013606                     i2u435_48:
 14472  013606  0005               	push	
 14473  013608  6EFA               	movwf	pclath,c
 14474  01360A  5013               	movf	_UART2_RxInterruptHandler^0,w,c
 14475  01360C  6EFD               	movwf	tosl,c
 14476  01360E  5014               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 14477  013610  6EFE               	movwf	tosh,c
 14478  013612  5015               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 14479  013614  6EFF               	movwf	tosu,c
 14480  013616  50FA               	movf	pclath,w,c
 14481  013618  0012               	return		;indir
 14482  01361A                     __end_of_UART2_rx_vect_isr:
 14483                           	opt callstack 0
 14484                           
 14485 ;; *************** function _UART2_Receive_ISR *****************
 14486 ;; Defined at:
 14487 ;;		line 233 in file "mcc_generated_files/uart2.c"
 14488 ;; Parameters:    Size  Location     Type
 14489 ;;		None
 14490 ;; Auto vars:     Size  Location     Type
 14491 ;;		None
 14492 ;; Return value:  Size  Location     Type
 14493 ;;                  1  [STACK] void 
 14494 ;; Registers used:
 14495 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14496 ;; Tracked objects:
 14497 ;;		On entry : 0/0
 14498 ;;		On exit  : 0/0
 14499 ;;		Unchanged: 0/0
 14500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14505 ;;Total ram usage:        0 bytes
 14506 ;; Hardware stack levels used:    1
 14507 ;; This function calls:
 14508 ;;		Nothing
 14509 ;; This function is called by:
 14510 ;;		_UART2_Initialize
 14511 ;;		_UART2_rx_vect_isr
 14512 ;; This function uses a reentrant model
 14513 ;;
 14514                           
 14515                           	psect	text110
 14516  01375E                     __ptext110:
 14517                           	opt callstack 0
 14518  01375E                     _UART2_Receive_ISR:
 14519                           	opt callstack 13
 14520                           
 14521                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 14522                           
 14523                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14524                           ;incstack = 0
 14525  01375E  0E00               	movlw	low _uart2RxBuffer
 14526  013760  242B               	addwf	_uart2RxHead^0,w,c	;volatile
 14527  013762  6ED9               	movwf	fsr2l,c
 14528  013764  6ADA               	clrf	fsr2h,c
 14529  013766  0E05               	movlw	high _uart2RxBuffer
 14530  013768  22DA               	addwfc	fsr2h,f,c
 14531  01376A  006F F743 FFDF     	movff	15824,indf2	;volatile
 14532  013770  2A2B               	incf	_uart2RxHead^0,f,c	;volatile
 14533                           
 14534                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 14535  013772  282B               	incf	_uart2RxHead^0,w,c
 14536  013774  B4D8               	btfsc	status,2,c
 14537                           
 14538                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 14539  013776  6A2B               	clrf	_uart2RxHead^0,c	;volatile
 14540                           
 14541                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 14542  013778  2A29               	incf	_uart2RxCount^0,f,c	;volatile
 14543                           
 14544                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 14545  01377A  0012               	return		;funcret
 14546  01377C                     __end_of_UART2_Receive_ISR:
 14547                           	opt callstack 0
 14548                           
 14549 ;; *************** function _TMR6_ISR *****************
 14550 ;; Defined at:
 14551 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 14552 ;; Parameters:    Size  Location     Type
 14553 ;;		None
 14554 ;; Auto vars:     Size  Location     Type
 14555 ;;		None
 14556 ;; Return value:  Size  Location     Type
 14557 ;;                  1    wreg      void 
 14558 ;; Registers used:
 14559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 14560 ;; Tracked objects:
 14561 ;;		On entry : 0/0
 14562 ;;		On exit  : 0/0
 14563 ;;		Unchanged: 0/0
 14564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14567 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14568 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14569 ;;Total ram usage:        1 bytes
 14570 ;; Hardware stack levels used:    1
 14571 ;; Hardware stack levels required when called:    2
 14572 ;; This function calls:
 14573 ;;		_TMR6_CallBack
 14574 ;; This function is called by:
 14575 ;;		Interrupt level 2
 14576 ;; This function uses a non-reentrant model
 14577 ;;
 14578                           
 14579                           	psect	text111
 14580  0137E8                     __ptext111:
 14581                           	opt callstack 0
 14582  0137E8                     _TMR6_ISR:
 14583                           	opt callstack 12
 14584                           
 14585                           ;incstack = 0
 14586  0137E8  0060  F0D4  F0EC   	movff	btemp,??_TMR6_ISR
 14587  0137EE  EE13  F2AA         	lfsr	1,___inthi_sp
 14588                           
 14589                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 14590  0137F2  0139               	movlb	57	; () banked
 14591  0137F4  91A9               	bcf	169,0,b	;volatile
 14592                           
 14593                           ; BSR set to: 57
 14594                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 14595  0137F6  EC53  F09B         	call	_TMR6_CallBack	;wreg free
 14596  0137FA  0060  F3B0  F035   	movff	??_TMR6_ISR,btemp
 14597  013800  0011               	retfie		f
 14598  013802                     __end_of_TMR6_ISR:
 14599                           	opt callstack 0
 14600                           
 14601 ;; *************** function _TMR6_CallBack *****************
 14602 ;; Defined at:
 14603 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 14604 ;; Parameters:    Size  Location     Type
 14605 ;;		None
 14606 ;; Auto vars:     Size  Location     Type
 14607 ;;		None
 14608 ;; Return value:  Size  Location     Type
 14609 ;;                  1  [STACK] void 
 14610 ;; Registers used:
 14611 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 14612 ;; Tracked objects:
 14613 ;;		On entry : 3F/39
 14614 ;;		On exit  : 0/0
 14615 ;;		Unchanged: 0/0
 14616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14621 ;;Total ram usage:        0 bytes
 14622 ;; Hardware stack levels used:    1
 14623 ;; Hardware stack levels required when called:    1
 14624 ;; This function calls:
 14625 ;;		Absolute function
 14626 ;;		_TMR6_DefaultInterruptHandler
 14627 ;; This function is called by:
 14628 ;;		_TMR6_ISR
 14629 ;; This function uses a reentrant model
 14630 ;;
 14631                           
 14632                           	psect	text112
 14633  0136A6                     __ptext112:
 14634                           	opt callstack 0
 14635  0136A6                     _TMR6_CallBack:
 14636                           	opt callstack 12
 14637                           
 14638                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 14639                           
 14640                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14641                           ;incstack = 0
 14642  0136A6  5001               	movf	_TMR6_InterruptHandler^0,w,c
 14643  0136A8  1002               	iorwf	(_TMR6_InterruptHandler+1)^0,w,c
 14644  0136AA  1003               	iorwf	(_TMR6_InterruptHandler+2)^0,w,c
 14645  0136AC  B4D8               	btfsc	status,2,c
 14646  0136AE  0012               	return	
 14647                           
 14648                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 14649  0136B0  D801               	call	u310_48
 14650  0136B2  0012               	return	
 14651  0136B4                     u310_48:
 14652  0136B4  0005               	push	
 14653  0136B6  6EFA               	movwf	pclath,c
 14654  0136B8  5001               	movf	_TMR6_InterruptHandler^0,w,c
 14655  0136BA  6EFD               	movwf	tosl,c
 14656  0136BC  5002               	movf	(_TMR6_InterruptHandler+1)^0,w,c
 14657  0136BE  6EFE               	movwf	tosh,c
 14658  0136C0  5003               	movf	(_TMR6_InterruptHandler+2)^0,w,c
 14659  0136C2  6EFF               	movwf	tosu,c
 14660  0136C4  50FA               	movf	pclath,w,c
 14661  0136C6  0012               	return		;indir
 14662  0136C8                     __end_of_TMR6_CallBack:
 14663                           	opt callstack 0
 14664                           
 14665 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 14666 ;; Defined at:
 14667 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 14668 ;; Parameters:    Size  Location     Type
 14669 ;;		None
 14670 ;; Auto vars:     Size  Location     Type
 14671 ;;  i               1  [STACK] unsigned char 
 14672 ;; Return value:  Size  Location     Type
 14673 ;;                  1  [STACK] void 
 14674 ;; Registers used:
 14675 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 14676 ;; Tracked objects:
 14677 ;;		On entry : 0/39
 14678 ;;		On exit  : 0/0
 14679 ;;		Unchanged: 0/0
 14680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14685 ;;Total ram usage:        0 bytes
 14686 ;; Hardware stack levels used:    1
 14687 ;; This function calls:
 14688 ;;		Nothing
 14689 ;; This function is called by:
 14690 ;;		_TMR6_Initialize
 14691 ;;		_TMR6_CallBack
 14692 ;; This function uses a reentrant model
 14693 ;;
 14694                           
 14695                           	psect	text113
 14696  012FD8                     __ptext113:
 14697                           	opt callstack 0
 14698  012FD8                     _TMR6_DefaultInterruptHandler:
 14699                           	opt callstack 0
 14700                           
 14701                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14702  012FD8  52E6               	movf	postinc1,f,c
 14703                           
 14704                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 14705                           ;stkvar	_i @ sp[(-1)+0]
 14706                           
 14707                           ;incstack = 0
 14708  012FDA  0EFF               	movlw	-1
 14709  012FDC  6AE3               	clrf	plusw1,c
 14710  012FDE                     l5195:
 14711                           
 14712                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 14713                           ;stkvar	_i @ sp[(-1)+0]
 14714  012FDE  0EFF               	movlw	-1
 14715  012FE0  50E3               	movf	plusw1,w,c
 14716  012FE2  0D02               	mullw	2
 14717  012FE4  50F3               	movf	243,w,c
 14718  012FE6  0F82               	addlw	low _tickCount
 14719  012FE8  6ED9               	movwf	fsr2l,c
 14720  012FEA  6ADA               	clrf	fsr2h,c
 14721  012FEC  50DE               	movf	postinc2,w,c
 14722  012FEE  10DE               	iorwf	postinc2,w,c
 14723  012FF0  B4D8               	btfsc	status,2,c
 14724  012FF2  D00A               	goto	l5199
 14725                           
 14726                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 14727                           ;stkvar	_i @ sp[(-1)+0]
 14728  012FF4  0EFF               	movlw	-1
 14729  012FF6  50E3               	movf	plusw1,w,c
 14730  012FF8  0D02               	mullw	2
 14731  012FFA  50F3               	movf	243,w,c
 14732  012FFC  0F82               	addlw	low _tickCount
 14733  012FFE  6ED9               	movwf	fsr2l,c
 14734  013000  6ADA               	clrf	fsr2h,c
 14735  013002  06DE               	decf	postinc2,f,c
 14736  013004  0E00               	movlw	0
 14737  013006  5ADD               	subwfb	postdec2,f,c
 14738  013008                     l5199:
 14739                           
 14740                           ;mcc_generated_files/tmr6.c: 207:  }
 14741                           ;stkvar	_i @ sp[(-1)+0]
 14742  013008  0EFF               	movlw	-1
 14743  01300A  2AE3               	incf	plusw1,f,c
 14744                           
 14745                           ;stkvar	_i @ sp[(-1)+0]
 14746  01300C  0EFF               	movlw	-1
 14747  01300E  006F FF8C  F035    	movff	plusw1,btemp
 14748  013014  0E0B               	movlw	11
 14749  013016  6435               	cpfsgt	btemp^0,c
 14750  013018  D7E2               	goto	l5195
 14751                           
 14752                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14753  01301A  52E5               	movf	postdec1,f,c
 14754  01301C  0012               	return		;funcret
 14755  01301E                     __end_of_TMR6_DefaultInterruptHandler:
 14756                           	opt callstack 0
 14757                           
 14758 ;; *************** function _DMA1_DMASCNT_ISR *****************
 14759 ;; Defined at:
 14760 ;;		line 126 in file "mcc_generated_files/dma1.c"
 14761 ;; Parameters:    Size  Location     Type
 14762 ;;		None
 14763 ;; Auto vars:     Size  Location     Type
 14764 ;;		None
 14765 ;; Return value:  Size  Location     Type
 14766 ;;                  1    wreg      void 
 14767 ;; Registers used:
 14768 ;;		None
 14769 ;; Tracked objects:
 14770 ;;		On entry : 0/0
 14771 ;;		On exit  : 3F/0
 14772 ;;		Unchanged: 0/0
 14773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14778 ;;Total ram usage:        0 bytes
 14779 ;; Hardware stack levels used:    1
 14780 ;; This function calls:
 14781 ;;		Nothing
 14782 ;; This function is called by:
 14783 ;;		Interrupt level 2
 14784 ;; This function uses a non-reentrant model
 14785 ;;
 14786                           
 14787                           	psect	text114
 14788  013900                     __ptext114:
 14789                           	opt callstack 0
 14790  013900                     _DMA1_DMASCNT_ISR:
 14791                           	opt callstack 14
 14792                           
 14793                           ;incstack = 0
 14794  013900  EE13  F2AA         	lfsr	1,___inthi_sp
 14795                           
 14796                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 14797  013904  0139               	movlb	57	; () banked
 14798  013906  91A2               	bcf	162,0,b	;volatile
 14799                           
 14800                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 14801  013908  0100               	movlb	0	; () banked
 14802  01390A  979A               	bcf	_spi_link& (0+255),3,b	;volatile
 14803                           
 14804                           ; BSR set to: 0
 14805  01390C  0011               	retfie		f
 14806  01390E                     __end_of_DMA1_DMASCNT_ISR:
 14807                           	opt callstack 0
 14808                           
 14809 ;; *************** function _DMA1_DMADCNT_ISR *****************
 14810 ;; Defined at:
 14811 ;;		line 134 in file "mcc_generated_files/dma1.c"
 14812 ;; Parameters:    Size  Location     Type
 14813 ;;		None
 14814 ;; Auto vars:     Size  Location     Type
 14815 ;;		None
 14816 ;; Return value:  Size  Location     Type
 14817 ;;                  1    wreg      void 
 14818 ;; Registers used:
 14819 ;;		None
 14820 ;; Tracked objects:
 14821 ;;		On entry : 0/0
 14822 ;;		On exit  : 3F/39
 14823 ;;		Unchanged: 0/0
 14824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14829 ;;Total ram usage:        0 bytes
 14830 ;; Hardware stack levels used:    1
 14831 ;; This function calls:
 14832 ;;		Nothing
 14833 ;; This function is called by:
 14834 ;;		Interrupt level 2
 14835 ;; This function uses a non-reentrant model
 14836 ;;
 14837                           
 14838                           	psect	text115
 14839  013918                     __ptext115:
 14840                           	opt callstack 0
 14841  013918                     _DMA1_DMADCNT_ISR:
 14842                           	opt callstack 14
 14843                           
 14844                           ; BSR set to: 0
 14845                           ;incstack = 0
 14846  013918  EE13  F2AA         	lfsr	1,___inthi_sp
 14847                           
 14848                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 14849  01391C  0139               	movlb	57	; () banked
 14850  01391E  93A2               	bcf	162,1,b	;volatile
 14851                           
 14852                           ; BSR set to: 57
 14853  013920  0011               	retfie		f
 14854  013922                     __end_of_DMA1_DMADCNT_ISR:
 14855                           	opt callstack 0
 14856                           
 14857 ;; *************** function _DMA1_DMAA_ISR *****************
 14858 ;; Defined at:
 14859 ;;		line 144 in file "mcc_generated_files/dma1.c"
 14860 ;; Parameters:    Size  Location     Type
 14861 ;;		None
 14862 ;; Auto vars:     Size  Location     Type
 14863 ;;		None
 14864 ;; Return value:  Size  Location     Type
 14865 ;;                  1    wreg      void 
 14866 ;; Registers used:
 14867 ;;		None
 14868 ;; Tracked objects:
 14869 ;;		On entry : 0/0
 14870 ;;		On exit  : 3F/39
 14871 ;;		Unchanged: 0/0
 14872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14877 ;;Total ram usage:        0 bytes
 14878 ;; Hardware stack levels used:    1
 14879 ;; This function calls:
 14880 ;;		Nothing
 14881 ;; This function is called by:
 14882 ;;		Interrupt level 2
 14883 ;; This function uses a non-reentrant model
 14884 ;;
 14885                           
 14886                           	psect	text116
 14887  013924                     __ptext116:
 14888                           	opt callstack 0
 14889  013924                     _DMA1_DMAA_ISR:
 14890                           	opt callstack 14
 14891                           
 14892                           ; BSR set to: 57
 14893                           ;incstack = 0
 14894  013924  EE13  F2AA         	lfsr	1,___inthi_sp
 14895                           
 14896                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 14897  013928  0139               	movlb	57	; () banked
 14898  01392A  97A2               	bcf	162,3,b	;volatile
 14899                           
 14900                           ; BSR set to: 57
 14901  01392C  0011               	retfie		f
 14902  01392E                     __end_of_DMA1_DMAA_ISR:
 14903                           	opt callstack 0
 14904                           
 14905 ;; *************** function _DMA1_DMAOR_ISR *****************
 14906 ;; Defined at:
 14907 ;;		line 155 in file "mcc_generated_files/dma1.c"
 14908 ;; Parameters:    Size  Location     Type
 14909 ;;		None
 14910 ;; Auto vars:     Size  Location     Type
 14911 ;;		None
 14912 ;; Return value:  Size  Location     Type
 14913 ;;                  1    wreg      void 
 14914 ;; Registers used:
 14915 ;;		None
 14916 ;; Tracked objects:
 14917 ;;		On entry : 0/0
 14918 ;;		On exit  : 3F/39
 14919 ;;		Unchanged: 0/0
 14920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14925 ;;Total ram usage:        0 bytes
 14926 ;; Hardware stack levels used:    1
 14927 ;; This function calls:
 14928 ;;		Nothing
 14929 ;; This function is called by:
 14930 ;;		Interrupt level 2
 14931 ;; This function uses a non-reentrant model
 14932 ;;
 14933                           
 14934                           	psect	text117
 14935  013930                     __ptext117:
 14936                           	opt callstack 0
 14937  013930                     _DMA1_DMAOR_ISR:
 14938                           	opt callstack 14
 14939                           
 14940                           ; BSR set to: 57
 14941                           ;incstack = 0
 14942  013930  EE13  F2AA         	lfsr	1,___inthi_sp
 14943                           
 14944                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 14945  013934  0139               	movlb	57	; () banked
 14946  013936  95A2               	bcf	162,2,b	;volatile
 14947                           
 14948                           ; BSR set to: 57
 14949  013938  0011               	retfie		f
 14950  01393A                     __end_of_DMA1_DMAOR_ISR:
 14951                           	opt callstack 0
 14952                           
 14953                           ;
 14954                           ; Interrupt Vector Table @ 0x8
 14955                           ;
 14956                           
 14957                           	psect	ivt0x8
 14958  000008                     __pivt0x8:
 14959                           	opt callstack 0
 14960  000008                     ivt0x8_base:
 14961                           	opt callstack 0
 14962                           
 14963                           ; Vector 0 : SWINT
 14964  000008  4E5B               	dw	_Default_ISR shr (0+2)
 14965                           
 14966                           ; Vector 1 : HLVD
 14967  00000A  4E5B               	dw	_Default_ISR shr (0+2)
 14968                           
 14969                           ; Vector 2 : OSF
 14970  00000C  4E5B               	dw	_Default_ISR shr (0+2)
 14971                           
 14972                           ; Vector 3 : CSW
 14973  00000E  4E5B               	dw	_Default_ISR shr (0+2)
 14974                           
 14975                           ; Vector 4 : NVM
 14976  000010  4E5B               	dw	_Default_ISR shr (0+2)
 14977                           
 14978                           ; Vector 5 : SCAN
 14979  000012  4E5B               	dw	_Default_ISR shr (0+2)
 14980                           
 14981                           ; Vector 6 : CRC
 14982  000014  4E5B               	dw	_Default_ISR shr (0+2)
 14983                           
 14984                           ; Vector 7 : IOC
 14985  000016  4E5B               	dw	_Default_ISR shr (0+2)
 14986                           
 14987                           ; Vector 8 : INT0
 14988  000018  4E38               	dw	_INT0_ISR shr (0+2)
 14989                           
 14990                           ; Vector 9 : ZCD
 14991  00001A  4E5B               	dw	_Default_ISR shr (0+2)
 14992                           
 14993                           ; Vector 10 : AD
 14994  00001C  4C56               	dw	_ADCC_ISR shr (0+2)
 14995                           
 14996                           ; Vector 11 : ADT
 14997  00001E  4AD3               	dw	_ADCC_ThresholdISR shr (0+2)
 14998                           
 14999                           ; Vector 12 : CMP1
 15000  000020  4E5B               	dw	_Default_ISR shr (0+2)
 15001                           
 15002                           ; Vector 13 : SMT1
 15003  000022  4E5B               	dw	_Default_ISR shr (0+2)
 15004                           
 15005                           ; Vector 14 : SMT1PRA
 15006  000024  4E5B               	dw	_Default_ISR shr (0+2)
 15007                           
 15008                           ; Vector 15 : SMT1PRW
 15009  000026  4E5B               	dw	_Default_ISR shr (0+2)
 15010                           
 15011                           ; Vector 16 : DMA1SCNT
 15012  000028  4E40               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 15013                           
 15014                           ; Vector 17 : DMA1DCNT
 15015  00002A  4E46               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 15016                           
 15017                           ; Vector 18 : DMA1OR
 15018  00002C  4E4C               	dw	_DMA1_DMAOR_ISR shr (0+2)
 15019                           
 15020                           ; Vector 19 : DMA1A
 15021  00002E  4E49               	dw	_DMA1_DMAA_ISR shr (0+2)
 15022                           
 15023                           ; Vector 20 : SPI1RX
 15024  000030  4E5B               	dw	_Default_ISR shr (0+2)
 15025                           
 15026                           ; Vector 21 : SPI1TX
 15027  000032  4E5B               	dw	_Default_ISR shr (0+2)
 15028                           
 15029                           ; Vector 22 : SPI1
 15030  000034  4E5B               	dw	_Default_ISR shr (0+2)
 15031                           
 15032                           ; Vector 23 : I2C1RX
 15033  000036  4E5B               	dw	_Default_ISR shr (0+2)
 15034                           
 15035                           ; Vector 24 : I2C1TX
 15036  000038  4E5B               	dw	_Default_ISR shr (0+2)
 15037                           
 15038                           ; Vector 25 : I2C1
 15039  00003A  4E5B               	dw	_Default_ISR shr (0+2)
 15040                           
 15041                           ; Vector 26 : I2C1E
 15042  00003C  4E5B               	dw	_Default_ISR shr (0+2)
 15043                           
 15044                           ; Vector 27 : U1RX
 15045  00003E  4D69               	dw	_UART1_rx_vect_isr shr (0+2)
 15046                           
 15047                           ; Vector 28 : U1TX
 15048  000040  4D5F               	dw	_UART1_tx_vect_isr shr (0+2)
 15049                           
 15050                           ; Vector 29 : U1E
 15051  000042  4E5B               	dw	_Default_ISR shr (0+2)
 15052                           
 15053                           ; Vector 30 : U1
 15054  000044  4E5B               	dw	_Default_ISR shr (0+2)
 15055                           
 15056                           ; Vector 31 : TMR0
 15057  000046  4E5B               	dw	_Default_ISR shr (0+2)
 15058                           
 15059                           ; Vector 32 : TMR1
 15060  000048  4E5B               	dw	_Default_ISR shr (0+2)
 15061                           
 15062                           ; Vector 33 : TMR1G
 15063  00004A  4E5B               	dw	_Default_ISR shr (0+2)
 15064                           
 15065                           ; Vector 34 : TMR2
 15066  00004C  4E5B               	dw	_Default_ISR shr (0+2)
 15067                           
 15068                           ; Vector 35 : CCP1
 15069  00004E  4E5B               	dw	_Default_ISR shr (0+2)
 15070                           
 15071                           ; Vector 36 : Undefined
 15072  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 15073                           
 15074                           ; Vector 37 : NCO1
 15075  000052  4E5B               	dw	_Default_ISR shr (0+2)
 15076                           
 15077                           ; Vector 38 : CWG1
 15078  000054  4E5B               	dw	_Default_ISR shr (0+2)
 15079                           
 15080                           ; Vector 39 : CLC1
 15081  000056  4E5B               	dw	_Default_ISR shr (0+2)
 15082                           
 15083                           ; Vector 40 : INT1
 15084  000058  4E3C               	dw	_INT1_ISR shr (0+2)
 15085                           
 15086                           ; Vector 41 : CMP2
 15087  00005A  4E5B               	dw	_Default_ISR shr (0+2)
 15088                           
 15089                           ; Vector 42 : DMA2SCNT
 15090  00005C  4E5B               	dw	_Default_ISR shr (0+2)
 15091                           
 15092                           ; Vector 43 : DMA2DCNT
 15093  00005E  4E5B               	dw	_Default_ISR shr (0+2)
 15094                           
 15095                           ; Vector 44 : DMA2OR
 15096  000060  4E5B               	dw	_Default_ISR shr (0+2)
 15097                           
 15098                           ; Vector 45 : DMA2A
 15099  000062  4E5B               	dw	_Default_ISR shr (0+2)
 15100                           
 15101                           ; Vector 46 : I2C2RX
 15102  000064  4E5B               	dw	_Default_ISR shr (0+2)
 15103                           
 15104                           ; Vector 47 : I2C2TX
 15105  000066  4E5B               	dw	_Default_ISR shr (0+2)
 15106                           
 15107                           ; Vector 48 : I2C2
 15108  000068  4E5B               	dw	_Default_ISR shr (0+2)
 15109                           
 15110                           ; Vector 49 : I2C2E
 15111  00006A  4E5B               	dw	_Default_ISR shr (0+2)
 15112                           
 15113                           ; Vector 50 : U2RX
 15114  00006C  4D7D               	dw	_UART2_rx_vect_isr shr (0+2)
 15115                           
 15116                           ; Vector 51 : U2TX
 15117  00006E  4D73               	dw	_UART2_tx_vect_isr shr (0+2)
 15118                           
 15119                           ; Vector 52 : U2E
 15120  000070  4E5B               	dw	_Default_ISR shr (0+2)
 15121                           
 15122                           ; Vector 53 : U2
 15123  000072  4E5B               	dw	_Default_ISR shr (0+2)
 15124                           
 15125                           ; Vector 54 : TMR3
 15126  000074  4E5B               	dw	_Default_ISR shr (0+2)
 15127                           
 15128                           ; Vector 55 : TMR3G
 15129  000076  4E5B               	dw	_Default_ISR shr (0+2)
 15130                           
 15131                           ; Vector 56 : TMR4
 15132  000078  4E5B               	dw	_Default_ISR shr (0+2)
 15133                           
 15134                           ; Vector 57 : CCP2
 15135  00007A  4E5B               	dw	_Default_ISR shr (0+2)
 15136                           
 15137                           ; Vector 58 : Undefined
 15138  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 15139                           
 15140                           ; Vector 59 : CWG2
 15141  00007E  4E5B               	dw	_Default_ISR shr (0+2)
 15142                           
 15143                           ; Vector 60 : CLC2
 15144  000080  4E5B               	dw	_Default_ISR shr (0+2)
 15145                           
 15146                           ; Vector 61 : INT2
 15147  000082  4E5B               	dw	_Default_ISR shr (0+2)
 15148                           
 15149                           ; Vector 62 : Undefined
 15150  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 15151                           
 15152                           ; Vector 63 : Undefined
 15153  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 15154                           
 15155                           ; Vector 64 : Undefined
 15156  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 15157                           
 15158                           ; Vector 65 : Undefined
 15159  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 15160                           
 15161                           ; Vector 66 : Undefined
 15162  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 15163                           
 15164                           ; Vector 67 : Undefined
 15165  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 15166                           
 15167                           ; Vector 68 : Undefined
 15168  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 15169                           
 15170                           ; Vector 69 : Undefined
 15171  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 15172                           
 15173                           ; Vector 70 : TMR5
 15174  000094  4B69               	dw	_TMR5_ISR shr (0+2)
 15175                           
 15176                           ; Vector 71 : TMR5G
 15177  000096  4E5B               	dw	_Default_ISR shr (0+2)
 15178                           
 15179                           ; Vector 72 : TMR6
 15180  000098  4DFA               	dw	_TMR6_ISR shr (0+2)
 15181                           
 15182                           ; Vector 73 : CCP3
 15183  00009A  4E5B               	dw	_Default_ISR shr (0+2)
 15184                           
 15185                           ; Vector 74 : CWG3
 15186  00009C  4E5B               	dw	_Default_ISR shr (0+2)
 15187                           
 15188                           ; Vector 75 : CLC3
 15189  00009E  4E5B               	dw	_Default_ISR shr (0+2)
 15190                           
 15191                           ; Vector 76 : Undefined
 15192  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 15193                           
 15194                           ; Vector 77 : Undefined
 15195  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 15196                           
 15197                           ; Vector 78 : Undefined
 15198  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 15199                           
 15200                           ; Vector 79 : Undefined
 15201  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 15202                           
 15203                           ; Vector 80 : CCP4
 15204  0000A8  4E5B               	dw	_Default_ISR shr (0+2)
 15205                           
 15206                           ; Vector 81 : CLC4
 15207  0000AA  4E5B               	dw	_Default_ISR shr (0+2)
 15208  0000AC                     ivt0x8_undefint:
 15209                           	opt callstack 0
 15210  0000AC  00FF               	reset	
 15211                           
 15212                           	psect	text118
 15213  000000                     __ptext118:
 15214                           	opt callstack 0
 15215                           
 15216                           	psect	param0
 15217  0000                     
 15218                           	psect	temp
 15219  000035                     btemp:
 15220                           	opt callstack 0
 15221  000035                     	ds	32
 15222  0000                     wtemp0	set	btemp
 15223  0000                     wtemp1	set	btemp+2
 15224  0000                     wtemp2	set	btemp+4
 15225  0000                     wtemp3	set	btemp+6
 15226  0000                     wtemp4	set	btemp+8
 15227  0000                     wtemp5	set	btemp+10
 15228  0000                     wtemp8	set	btemp+1
 15229  0000                     ttemp0	set	btemp
 15230  0000                     ttemp1	set	btemp+3
 15231  0000                     ttemp2	set	btemp+6
 15232  0000                     ttemp3	set	btemp+9
 15233  0000                     ttemp5	set	btemp+1
 15234  0000                     ttemp6	set	btemp+4
 15235  0000                     ttemp7	set	btemp+8
 15236  0000                     ltemp0	set	btemp
 15237  0000                     ltemp1	set	btemp+4
 15238  0000                     ltemp2	set	btemp+8
 15239  0000                     lltemp0	set	btemp
 15240  0000                     lltemp1	set	btemp+8
 15241  0000                     lltemp2	set	btemp+16
 15242  0000                     lltemp3	set	btemp+24
 15243                           tosu	equ	0x3FFF
 15244                           tosh	equ	0x3FFE
 15245                           tosl	equ	0x3FFD
 15246                           stkptr	equ	0x3FFC
 15247                           pclatu	equ	0x3FFB
 15248                           pclath	equ	0x3FFA
 15249                           pcl	equ	0x3FF9
 15250                           tblptru	equ	0x3FF8
 15251                           tblptrh	equ	0x3FF7
 15252                           tblptrl	equ	0x3FF6
 15253                           tablat	equ	0x3FF5
 15254                           prodh	equ	0x3FF4
 15255                           prodl	equ	0x3FF3
 15256                           indf0	equ	0x3FEF
 15257                           postinc0	equ	0x3FEE
 15258                           postdec0	equ	0x3FED
 15259                           preinc0	equ	0x3FEC
 15260                           plusw0	equ	0x3FEB
 15261                           fsr0h	equ	0x3FEA
 15262                           fsr0l	equ	0x3FE9
 15263                           wreg	equ	0x3FE8
 15264                           indf1	equ	0x3FE7
 15265                           postinc1	equ	0x3FE6
 15266                           postdec1	equ	0x3FE5
 15267                           preinc1	equ	0x3FE4
 15268                           plusw1	equ	0x3FE3
 15269                           fsr1h	equ	0x3FE2
 15270                           fsr1l	equ	0x3FE1
 15271                           bsr	equ	0x3FE0
 15272                           indf2	equ	0x3FDF
 15273                           postinc2	equ	0x3FDE
 15274                           postdec2	equ	0x3FDD
 15275                           preinc2	equ	0x3FDC
 15276                           plusw2	equ	0x3FDB
 15277                           fsr2h	equ	0x3FDA
 15278                           fsr2l	equ	0x3FD9
 15279                           status	equ	0x3FD8


Data Sizes:
    Strings     238
    Constant    144
    Data        212
    BSS         1159
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      6      58
    BANK0           160      5     145
    BANK1           256      0     253
    BANK2           256      0     198
    BANK3           256      0     218
    BANK4           256      0     255
    BANK5           256      0     255
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK0[32]), 
		 -> STR_14(CODE[9]), STR_13(CODE[12]), D.lcd(BANK3[216]), D(BANK3[218]), 
		 -> T(CODE[144]), STR_7(CODE[4]), STR_3(CODE[4]), V(BANK1[189]), 

    a	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK0[32]), 
		 -> STR_14(CODE[9]), STR_13(CODE[12]), D.lcd(BANK3[216]), D(BANK3[218]), 
		 -> T(CODE[144]), STR_7(CODE[4]), STR_3(CODE[4]), V(BANK1[189]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_30(CODE[3]), STR_29(CODE[3]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[24]), STR_21(CODE[15]), STR_20(CODE[15]), STR_19(CODE[15]), 
		 -> STR_18(CODE[10]), STR_17(CODE[10]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_9(CODE[18]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK3[216]), D(BANK3[218]), V(BANK1[189]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK3[216]), D(BANK3[218]), V(BANK1[189]), 

    s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S4493_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK3[218]), V(BANK1[189]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK3[218]), V(BANK1[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK2[67]), ring_buf1(BANK2[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK2[67]), ring_buf1(BANK2[67]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_30(CODE[3]), STR_29(CODE[3]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[24]), STR_21(CODE[15]), STR_20(CODE[15]), STR_19(CODE[15]), 
		 -> STR_18(CODE[10]), STR_17(CODE[10]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[3]), STR_9(CODE[18]), 
		 -> STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_30(CODE[3]), STR_29(CODE[3]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[24]), STR_21(CODE[15]), STR_20(CODE[15]), STR_19(CODE[15]), 
		 -> STR_18(CODE[10]), STR_17(CODE[10]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[3]), STR_9(CODE[18]), 
		 -> STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_14(CODE[9]), STR_13(CODE[12]), 
		 -> D.lcd(BANK3[216]), D(BANK3[218]), T(CODE[144]), STR_7(CODE[4]), 
		 -> STR_3(CODE[4]), V(BANK1[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_14(CODE[9]), STR_13(CODE[12]), 
		 -> D.lcd(BANK3[216]), D(BANK3[218]), T(CODE[144]), STR_7(CODE[4]), 
		 -> STR_3(CODE[4]), V(BANK1[189]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_14(CODE[9]), 
		 -> STR_13(CODE[12]), D.lcd(BANK3[216]), D(BANK3[218]), T(CODE[144]), 
		 -> STR_7(CODE[4]), STR_3(CODE[4]), V(BANK1[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_14(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_13(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK2[67]), ring_buf1(BANK2[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK2[67]), ring_buf1(BANK2[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK3[216]), D(BANK3[218]), V(BANK1[189]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK3[216]), D(BANK3[218]), V(BANK1[189]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK3[216]), D(BANK3[218]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1930spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    S1930spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK2[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK2[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  119139
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                     _check_adc_scan
                         _check_help
                     _clear_adc_scan
                _eaDogM_WriteCommand
                     _get_raw_result
                      _get_vterm_ptr
                       _init_display
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   11866
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           1     0      1   70275
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   34891
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12   10813
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   24166
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   23902
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   11835
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   11974
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   10588
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   10489
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           39    33      6   10253
                               _ctoa
                               _dtoa
                              _fputc
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                  9     4      5    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (9) _fputs                                                6     3      3     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                              1 BANK0      4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ISR                                            1     1      0       0
                                              0 COMRAM     1     1      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   5     5      0      22
                                              1 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_t_handler                                   0     0      0      22
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR6_ISR                                            1     1      0      90
                                              0 BANK0      1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (18) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _check_adc_scan
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _fputc
             _putch
               _ringBufS_put_dma
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_vterm_ptr
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _fputc
           _putch
             _ringBufS_put_dma
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _fputc
                 _putch
                   _ringBufS_put_dma
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _fputc
                 _putch
                   _ringBufS_put_dma
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      FF      13       99.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      DA      11       85.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C6       9       77.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FD       7       98.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      5      91       5       90.6%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      6      3A       1       92.1%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     566      58        0.0%
DATA                 0      0     566       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Nov  2 18:45:11 2019

                    _SPI1_Exchange8bit 36C8               __end_of_set_display_info 3722  
                                    _D 0300                                      _R 0060  
                                    _T FE81                                      _V 0100  
     __end_of_TMR5_SetInterruptHandler 34DC                            __CFG_CP$OFF 000000  
              __size_of_ringBufS_flush 0092                 __end_of_FVR_Initialize 395A  
                          __CFG_LVP$ON 000000                                    l171 3886  
                                  l701 3344                                    l581 3318  
                                  l835 36D6                                    _GIE 01FE97  
                                  _abs 2F06                                    _pad 2134  
              __size_of_PMD_Initialize 0014                        _TMR2_Initialize 381A  
                                  prod 003FF3                                    tosl 003FFD  
                                  wreg 003FE8                          _INT0_CallBack 3662  
                   _UART1_Transmit_ISR 32F2                          __CFG_BBEN$OFF 000000  
                        _INT1_CallBack 3684                           __CFG_ZCD$OFF 000000  
                                 l1028 30DE                                   l1322 2E0A  
                                 l1236 0D4C                                   l1245 0EF8  
                                 l1462 2858                                   l1551 1CC6  
                                 l2512 1F12                                   l4201 26BC  
                                 l1538 313C                                   l1458 2540  
                                 l4203 26DE                                   l1707 060C  
                                 l1555 2026                                   l1547 1B6A  
                                 l1477 31A8                                   l1734 1424  
                                 l4305 17C6                                   l1595 371E  
                                 l1755 09C8                                   l4341 1A0A  
                                 l4333 195E                                   l4325 18D6  
                                 l6005 00EA                                   l2478 2F46  
                                 l2558 296A                   _ADCC_StartConversion 38A0  
                                 l1687 2188                                   l4247 2F36  
                                 l1783 0524                                   l6111 2572  
                                 l4281 165A                                   l6041 0452  
                                 l6017 0228                                   l6113 25B2  
                                 l6051 04B0                                   l6027 02D6  
                                 l4293 16F4                                   l4269 295A  
                                 l5271 3152                                   l4287 16AE  
                                 l6047 04AC                                   l6057 04D0  
                                 l6401 0D54                                   l5195 2FDE  
                                 l5371 3340                                   l6091 120E  
                                 l6163 2648                                   l6315 1B3A  
                                 l6403 0D66                                   l5349 3314  
                                 l6085 11A4                                   l5199 3008  
                                 l6079 10E6                                   l6327 1C62  
                                 l4729 3636                                   l4809 31B2  
                                 l5555 277E                                   l5547 276C  
                                 l6099 12BC                                   l6443 0EFC  
                                 l5397 30C6                                   l5821 0646  
                                 l5813 05FC                                   l5901 1550  
                                 l6445 0F24                                   l5743 1E28  
                                 l6199 1F3E                                   l6463 0F78  
                                 l6455 0F54                                   l5825 0664  
                                 l5905 157C                                   l6481 103C  
                                 l5755 2A08                                   l5771 2192  
                                 l5835 086A                                   l5923 09B8  
                                 l6395 0D2E                                   l5765 2158  
                                 l5909 15B8                                   l6469 1008  
                                 l6397 0D36                                   l5759 2A46  
                                 l5775 21CE                                   l5855 091C  
                                 l5871 13A6                                   l5943 0A8E  
                                 l5935 0A2E                                   l5769 2180  
                                 l5929 09F2                                   l5779 2210  
                                 l5787 2992                                   l5859 094C  
                                 l5891 1496                                   l5789 29BE  
                                 l5895 14C6                                   l5887 145A  
                                 l5983 0CD0                                   l5959 0B84  
                                 l5967 0BFE                                   STR_1 FF96  
                                 STR_2 FFC7                                   STR_3 FFF5  
                                 STR_4 FF85                                   STR_5 FFA7  
                                 STR_6 FFC7                                   STR_7 FFF5  
                                 STR_8 FF74                                   STR_9 FF62  
                                 u2000 1654                                   u2020 16AA  
                                 u2031 16B4                                   u2040 16EE  
                                 u2200 1A94                                   u2120 18D0  
                                 u2050 1720                                   u2140 1926  
                                 _LATA 003FBA                                   u2070 17FE  
                                 u2150 1958                                   _LATB 003FBB  
                                 _LATC 003FBC                                   u2160 198A  
                                 u4000 0C78                                   _LATD 003FBD  
                                 _LATE 003FBE                                   u2090 1850  
                                 _LATF 003FBF                                   u2180 1A42  
                                 u4050 013E                                   _T2PR 003FAB  
                                 u3500 1E98                                   u1820 270C  
                                 u4140 1330                                   u1910 2F1A  
                                 u1920 32B8                                   u4080 032A  
                                 u3610 05D0                                   u1930 32BA  
                                 u1850 3288                                   u4170 2628  
                                 u1827 26FE                                   u2900 2BC2  
                                 u3700 08DC                                   u1940 3056  
                                 u1860 328A                                   u4260 1CB2  
                                 u3630 05E2                                   u1950 3058  
                                 u4270 1CB4                                   u3480 1E1C  
                                 u3720 08F2                                   u3800 1502  
                                 u1960 2918                                   u3650 0632  
                                 u1970 291A                                   _T6PR 003F93  
                                 u3660 087E                                   u3580 055E  
                                 u3900 0ADC                                   _PMD0 0039C0  
                                 u2925 2BF6                                   _PMD1 0039C1  
                                 u2926 2BF8                                   u2918 2BC4  
                                 u3590 0560                                   u3830 15DE  
                                 _PMD2 0039C2                                   u3671 08AE  
                                 u3807 14F4                                   _PMD3 0039C3  
                                 u3680 08C4                                   u3920 0B3A  
                                 _PMD4 0039C4                                   u3681 08C2  
                                 _PMD5 0039C5                                   u3690 08D8  
                                 u3930 0B3C                                   u3850 099E  
                                 _PMD6 0039C6                                   _PMD7 0039C7  
                                 u2885 3092                                   u3790 14BC  
                                 u3950 0BFA                                   u3960 0C1A  
                                 u3880 0A86                                   u3890 0ADA  
                                 u3971 0C4A                                   u3955 0BDC  
                                 u3980 0C60                                   u3981 0C5E  
                                 u3990 0C74                                   _PLLR 01CEE0  
                                 _WPUA 003A41                                   _WPUB 003A51  
                                 _WPUC 003A61                                   _WPUD 003A71  
                                 _WPUE 003A81                                   _WPUF 003A91  
                     __end_of_ADCC_ISR 3190                          __CFG_FCMEN$ON 000000  
                                 _dbuf 00AD                                   _ctoa 2974  
                                 _main 0D08                                   _dtoa 052E  
                                 _seed 00CD                                   _prec 0020  
                                 _nout 001C                                   fsr0h 003FEA  
                                 fsr1h 003FE2                                   indf0 003FEF  
                                 fsr2h 003FDA                                   fsr0l 003FE9  
                                 indf1 003FE7                                   indf2 003FDF  
                                 fsr1l 003FE1                                   fsr2l 003FD9  
                                 _stoa 133A                                   btemp 0035  
                                 _xtoa 0984                 __end_of_check_adc_scan 3952  
                                 prodh 003FF4                                   prodl 003FF3  
                                 start 00AE                        _timer5ReloadVal 0026  
            __end_of_SPI1_Exchange8bit 36E6                          __CFG_CSWEN$ON 000000  
                    _UART1_rx_vect_isr 35A4                           ___param_bank 000000  
                   ?_UART1_rx_vect_isr 0055                       __end_of_INT0_ISR 38EE  
                     __end_of_INT1_ISR 38FE         __size_of_OSCILLATOR_Initialize 0016  
             __end_of_ringBufS_put_dma 2548          __end_of_OSCILLATOR_Initialize 388C  
                                PRLOCK 0039EF                        __end_of___aodiv 1878  
                                _ADCAP 003EF5                                  _ADACT 003EFE  
                                _ADCLK 003EFF                        __end_of___aomod 1AB8  
                                _ADPCH 003EF1                                  _ADREF 003EFD  
                                STR_10 FFFC                                  STR_11 FFF9  
                                STR_20 FFB8                                  STR_21 FFB8  
                                STR_13 FFD6                                  STR_14 FFEC  
                                STR_22 FF11                                  STR_15 FF3C  
                                STR_16 FF3C                                  STR_24 FF4F  
                                STR_17 FFE2                                  STR_25 FF29  
                        __CFG_WDTE$OFF 000000                                  STR_18 FFE2  
                                STR_19 FFB8                                  _ADRPT 003EEC  
                                _U1P1H 003DED                                  _U1P2H 003DEF  
                                _U1P1L 003DEC                                  _U1P3H 003DF1  
                                _T2CON 003FAC                                  _U1P2L 003DEE  
                                _U1P3L 003DF0                                  _U2P1L 003DD4  
                                _U2P2L 003DD6                                  _U2P3L 003DD8  
                                _T5CLK 003F9D                                  _T2HLT 003FAD  
                                _T5CON 003F9A                                  _T6CON 003F94  
                       __CFG_DEBUG$OFF 000000                                  _T6HLT 003F95  
           _ADCC_ADTI_InterruptHandler 0004                                  _T2TMR 003FAA  
                                _U1UIR 003DF8                                  _T2RST 003FAF  
                                _U1RXB 003DE8                                  _U2UIR 003DE0  
                                _U1TXB 003DEA                                  _U2RXB 003DD0  
                                _U2TXB 003DD2                                  _T6TMR 003F92  
                                _T6RST 003F97                    ??_UART1_rx_vect_isr 00EC  
                                _ISRPR 0039F1                                  _OSCEN 0039DD  
                                _TMR5H 003F99                                  _TMR5L 003F98  
                                _TRISA 003FC2                                  _TRISB 003FC3  
                                _TRISC 003FC4                                  _TRISD 003FC5  
                                _TRISE 003FC6                                  _TRISF 003FC7  
                          _Default_ISR 396C                __size_of_clear_adc_scan 0006  
    __size_of_TMR6_SetInterruptHandler 0028                      _UART1_tx_vect_isr 357C  
                        __CFG_WRTB$OFF 000000                          __CFG_WRTC$OFF 000000  
                        __CFG_WRTD$OFF 000000                       __end_of_TMR5_ISR 2E00  
                         _DMA1CON0bits 003BFC                       __end_of_TMR6_ISR 3802  
                         _DMA1CON1bits 003BFD                                  _flags 0022  
                                _fputc 1DF8             __size_of_send_lcd_cmd_long 0028  
                      __end_of_isalpha 3062                                  _fputs 29F8  
                   __CFG_MCLRE$EXTMCLR 000000                     ?_UART1_tx_vect_isr 0055  
                                _srand 31FC                                  _width 001E  
                                _putch 37B4                        __end_of_islower 3294  
             _INT1_SetInterruptHandler 34DC                        __end_of_isupper 32C4  
                                pclath 003FFA                                  tablat 003FF5  
                                ltemp0 0035                                  ltemp1 0039  
                                ltemp2 003D               __size_of_DMA1_Initialize 006A  
                                plusw1 003FE3                                  ttemp0 0035  
                                ttemp1 0038                                  ttemp2 003B  
                                ttemp3 003E                                  ttemp5 0036  
                                ttemp6 0039                                  ttemp7 003D  
                                status 003FD8    __end_of_UART1_SetRxInterruptHandler 348C  
          _UART1_SetRxInterruptHandler 3464                                  wtemp0 0035  
                                wtemp1 0037                                  wtemp2 0039  
                                wtemp3 003B                                  wtemp4 003D  
                                wtemp5 003F                                  wtemp8 0036  
                      __end_of_sprintf 2134                        __end_of_toupper 2974  
                  ??_UART1_tx_vect_isr 00EC              __size_of_DMA1_DMADCNT_ISR 000A  
            __end_of_UART1_rx_vect_isr 35CA               __size_of_SPI1_Initialize 0016  
                      _TMR5_Initialize 2F92                  __end_of_ringBufS_init 33EC  
                      __initialization 23E4                      _UART2_rx_vect_isr 35F4  
                         __end_of_ctoa 29F8                           __end_of_main 104E  
                         __end_of_dtoa 0984                           __end_of_stoa 15F8  
                         __end_of_xtoa 0D08                         __CFG_SAFEN$OFF 000000  
                   ?_UART2_rx_vect_isr 0055                __end_of_TMR2_Initialize 3832  
             __size_of_DMA2_Initialize 005A               _TMR5_SetInterruptHandler 34B4  
                        __activetblptr 000003              __size_of_DMA1_DMASCNT_ISR 000E  
 __size_of_UART1_SetTxInterruptHandler 0028                    ??_UART2_rx_vect_isr 00EC  
            __end_of_UART1_tx_vect_isr 35A2                                 INTCON0 003FD2  
 __size_of_UART2_SetRxInterruptHandler 0028                         __CFG_MVECEN$ON 000000  
                      _TMR6_Initialize 334A                        _PWM8_Initialize 3860  
                     _UART1_Initialize 2C7E                      _UART2_tx_vect_isr 35CC  
                   _UART2_Transmit_ISR 331E                                 _ADACCU 003EEA  
                               _ADACQH 003EF4                                 _ADACQL 003EF3  
                               _ADCON0 003EF8                                 _ADCON1 003EF9  
                               _ADCON2 003EFA                                 _ADCON3 003EFB  
                       _start_adc_scan 2C1A                                 _ADLTHH 003EDF  
                               _ADLTHL 003EDE                                 _ADPREH 003EF7  
                               _ADPREL 003EF6                                 _DMA1PR 0039F3  
                               _DMA2PR 0039F4                                 _ADSTAT 003EFC  
                               _ADUTHH 003EE1                                 _ADUTHL 003EE0  
                   _PWM8_LoadDutyValue 3062                                 _ANSELA 003A40  
                               _ANSELB 003A50                                 _ANSELC 003A60  
                               _ANSELD 003A70                                 _ANSELE 003A80  
                               _ANSELF 003A90                     ?_UART2_tx_vect_isr 0055  
                               _U1CON0 003DF2                                 _U1CON1 003DF3  
                               _U1CON2 003DF4                                 _U1BRGH 003DF6  
                               _U1FIFO 003DF7                                 _U2CON0 003DDA  
                               _U2CON1 003DDB                                 _U1BRGL 003DF5  
                               _U2CON2 003DDC                                 _U2BRGH 003DDE  
                               _U2FIFO 003DDF                                 _U2BRGL 003DDD  
                               _T5GATE 003F9C                                 _T5GCON 003F9B  
                               _MAINPR 0039F2                                 _RC3PPS 003A13  
                               _RD1PPS 003A19                                 _RB6PPS 003A0E  
                               i1l1045 2DF2                                 _RC5PPS 003A15  
                               _ODCONA 003A42                                 _ODCONB 003A52  
                               _ODCONC 003A62                                 _RC6PPS 003A16  
                               _ODCOND 003A72                                 _ODCONE 003A82  
                               _ODCONF 003A92                                 u130_48 3692  
                       __CFG_WDTCCS$SC 000000                                 u310_48 36B4  
                               u151_40 372A                                 u151_46 372C  
                               u128_48 3670                                 u313_28 364E  
                               _FVRCON 003EC1                       _mode_lamp_bright 38D0  
                               u324_44 279E                                 u324_45 2798  
                               _SCANPR 0039F7                                 u326_40 27BA  
                               u326_46 27BC                                 _IVTADH 00389E  
                               _IVTADL 00389D                                 _IVTADU 00389F  
                               u296_20 37D6                                 u296_26 37D8  
         __size_of_eaDogM_WriteCommand 000E                                 _OSCFRQ 0039DF  
             __end_of_send_lcd_cmd_dma 2F06                    ??_UART2_tx_vect_isr 00EC  
            __end_of_UART2_rx_vect_isr 361A             __size_of_SPI1_Exchange8bit 001E  
               __size_of_DMA1_DMAA_ISR 000A                         __CFG_XINST$OFF 000000  
                    _CLKREF_Initialize 390E                       _UART2_Initialize 2D44  
                               _WaitMs 3190                           _CCPTMRS1bits 003F5F  
 __size_of_ADCC_SetADIInterruptHandler 0028                      _ADCC_ThresholdISR 2B4C  
                       __CFG_STVREN$ON 000000                         _ringBufS_flush 27CE  
                   ?_ADCC_ThresholdISR 0055                                 _memset 104E  
                 __size_of_help_button 0038                                 clear_0 2430  
                               clear_1 2444                                 clear_2 2456  
                               clear_3 2462                                 clear_4 246E  
                               clear_5 247A                                 clear_6 2486  
                               _printf 2CE2                     _eaDogM_WriteString 25F0  
                            ?_ADCC_ISR 0055                                 _strlen 2696  
                   __size_of_TimerDone 0024                        _ADCC_Initialize 2AE0  
                       _PMD_Initialize 388C              __end_of_UART2_tx_vect_isr 35F2  
                               lltemp0 0035                                 lltemp1 003D  
                               lltemp2 0045                                 lltemp3 004D  
                  ??_ADCC_ThresholdISR 0056                 __end_of_start_adc_scan 2C7E  
                         __mediumconst FE80                                 tblptrh 003FF7  
                               tblptrl 003FF6                                 tblptru 003FF8  
                     __end_of_wdtdelay 2E5A                       __end_of_vfprintf 25F0  
                           _StartTimer 30E4          __size_of_INTERRUPT_Initialize 0066  
              __end_of_TMR5_Initialize 2FD8                      _SYSTEM_Initialize 2F4C  
                           __accesstop 0060                __end_of__initialization 2498  
                            ?_INT0_ISR 0055                              ?_INT1_ISR 0055  
                 __end_of_display_help 394A                   __end_of_display_info 3942  
            __end_of_CLKREF_Initialize 3918                          ___rparam_used 000000  
           __size_of_UART1_rx_vect_isr 0026                        _TMR5_WriteTimer 30A4  
                _set_temp_display_help 38B2              __end_of_ADCC_ThresholdISR 2BB4  
               __end_of_ringBufS_flush 2860                         __pcstackCOMRAM 0055  
                           ___inthi_sp 0EAA                             ___intlo_sp 1755  
                         __pidataBANK0 3832                           __pidataBANK1 2326  
                            ?_TMR5_ISR 0055                              ?_TMR6_ISR 0055  
                       ivt0x8_undefint 00AC                          __end_of_fputc 1F1C  
                        __end_of_fputs 2A76                          __end_of_srand 3230  
                __end_of_TMR5_CallBack 3662                          __end_of_putch 37CE  
              __end_of_PWM8_Initialize 3876                __end_of_TMR6_Initialize 3374  
                    _adc_int_t_handler 2738                 __end_of_PMD_Initialize 38A0  
                           ??_ADCC_ISR 0055                  __end_of_TMR6_CallBack 36C8  
          __size_of_EXT_INT_Initialize 0034             __size_of_UART1_tx_vect_isr 0026  
                        _DMA1_DMAA_ISR 3924                         _clear_adc_scan 395A  
               __size_of_mode_lamp_dim 0018               _UART2_RxInterruptHandler 0013  
            __end_of_SYSTEM_Initialize 2F92                        __CFG_PR1WAY$OFF 000000  
                      __CFG_IVT1WAY$ON 000000                             __pbssBANK0 0060  
                           __pbssBANK1 01BD                             __pbssBANK2 0200  
                           __pbssBANK3 0300                             __pbssBANK4 0400  
                           __pbssBANK5 0500                             _check_help 1AB8  
                _INT0_InterruptHandler 0019                             ??_INT0_ISR 0055  
                           ??_INT1_ISR 0055                      __end_of_TimerDone 363E  
                     _DMA1_DMADCNT_ISR 3918             __size_of_UART2_rx_vect_isr 0026  
                              IVTBASEH 003FD6                                IVTBASEL 003FD5  
                              IVTBASEU 003FD7                  __end_of_wait_lcd_done 3798  
                      __CFG_PPS1WAY$ON 000000       __end_of_TMR6_SetInterruptHandler 34B4  
              __end_of_ADCC_Initialize 2B4A                             ??_TMR5_ISR 00ED  
            __end_of_adc_int_t_handler 27CE                             ??_TMR6_ISR 00EC  
                              _ADFLTRH 003EE7                                _ADFLTRL 003EE6  
                              _DMA1DSA 003BF0                                _DMA2DSA 003BD0  
                              _DMA1DSZ 003BEE                                _DMA2DSZ 003BCE  
                              _DMA1SSA 003BF9                                _DMA2SSA 003BD9  
 __end_of_ADCC_SetADTIInterruptHandler 3554  __size_of_ADCC_SetADTIInterruptHandler 0028  
         _ADCC_SetADTIInterruptHandler 352C                                _DMA1SSZ 003BF7  
                              _DMA2SSZ 003BD7                                _ADSTPTH 003EE5  
                              _ADSTPTL 003EE4                      _UART1_Receive_ISR 3740  
                              _CLKRCLK 003CE6                                _CLKRCON 003CE5  
               __end_of_clear_adc_scan 3960                         ?_DMA1_DMAA_ISR 0055  
                     _DMA1_DMASCNT_ISR 3900                                _U1ERRIE 003DFA  
                   __size_of_set_vterm 001C                                _U1ERRIR 003DF9  
                              _U2ERRIE 003DE2                                _U2ERRIR 003DE1  
                              _INT0PPS 003AC0                    __CFG_PWRTS$PWRT_OFF 000000  
                              _INT1PPS 003AC1                           ?_Default_ISR 0055  
           __size_of_UART2_tx_vect_isr 0026                                _U1RXPPS 003AE5  
                              _U2RXPPS 003AE8                                _OSCCON1 0039D9  
                              _OSCCON3 0039DB                                _IVTLOCK 003FD4  
                   __size_of_vfpfcnvrt 052E                                _SPI1CLK 003D1C  
                              _SPI1RXB 003D10                                _SPI1TXB 003D11  
                              _OSCTUNE 0039DE                                _PWM8DCH 003F61  
                              _PWM8DCL 003F60                                _PWM8CON 003F62  
                              _SLRCONA 003A43                                _SLRCONB 003A53  
                              _SLRCONC 003A63                                _SLRCOND 003A73  
                              _SLRCONE 003A83                                _SLRCONF 003A93  
                   __size_of_start_lcd 0006                __end_of_TMR5_WriteTimer 30E4  
    __size_of_INT0_SetInterruptHandler 0028             __size_of_CLKREF_Initialize 000A  
              __size_of_DMA1_DMAOR_ISR 000A                                __Hparam 0000  
           __size_of_ADCC_ThresholdISR 0068                          _mode_lamp_dim 3802  
                              __Lparam 0000               __end_of_UART1_Initialize 2CE2  
                      __size_of_WaitMs 0036                                ___aodiv 15F8  
                              ___aomod 1878              __end_of_UART1_Receive_ISR 375E  
                 __end_of_init_display 2326                                __pcinit 23E4  
             __end_of_mode_lamp_bright 38DE                        __size_of_memset 02EC  
             __size_of_adc_int_handler 001E                    _eaDogM_WriteCommand 38C2  
                              __ramtop 2000            __size_of_UART1_Transmit_ISR 002C  
                              __ptext0 0D08                                __ptext1 2C1A  
                              __ptext2 38A0                                __ptext3 31FC  
                              __ptext4 223C                                __ptext5 3374  
                              __ptext6 339C                                __ptext7 36C8  
                              __ptext8 33C4                                __ptext9 36E6  
                    _UART2_Receive_ISR 375E                        __size_of_printf 0062  
                      __CFG_WRTAPP$OFF 000000                                us210999 1862  
                      __size_of_strlen 00A2                                us221999 1AA6  
                _OSCILLATOR_Initialize 3876                                us357999 0548  
                              us374999 134C                           __size_of_abs 0046  
                              us387999 0A04                           __size_of_pad 0108  
                              _isalpha 301E                                _mode_sw 0028  
                              _islower 3264                        __CFG_WRTSAF$OFF 000000  
                            _T5CONbits 003F9A               __end_of_UART2_Initialize 2DA2  
                              _isupper 3294             __size_of_SYSTEM_Initialize 0046  
                              _sprintf 202A                  __size_of_display_help 0008  
                __size_of_display_info 0008                                _toupper 28F0  
                 end_of_initialization 2498    __end_of_UART1_SetTxInterruptHandler 3464  
          _UART1_SetTxInterruptHandler 343C    __end_of_UART2_SetRxInterruptHandler 343C  
          _UART2_SetRxInterruptHandler 3414                      __end_of_set_vterm 37B4  
                    __end_of_vfpfcnvrt 052E                              _SPI1TCNTL 003D12  
                              postdec1 003FE5                                postdec2 003FDD  
                              postinc0 003FEE                                postinc1 003FE6  
                              postinc2 003FDE             __size_of_adc_int_t_handler 0096  
                  __size_of_StartTimer 003C                      __end_of_start_lcd 396C  
            __end_of_UART2_Receive_ISR 377C                         wdtdelay@dcount 00A6  
                __CFG_WDTCPS$WDTCPS_31 000000                        ??_DMA1_DMAA_ISR 00ED  
                _INT1_InterruptHandler 0016                              _PORTBbits 003FCB  
             _TMR6_SetInterruptHandler 348C                           _display_help 3942  
                _TMR5_InterruptHandler 00AA                           _display_info 393A  
 __size_of_UART2_SetTxInterruptHandler 0028                      __size_of_ADCC_ISR 0038  
  __end_of_ADCC_SetADIInterruptHandler 357C            _ADCC_SetADIInterruptHandler 3554  
                           _update_lcd 1F1C                 __size_of_ringBufS_init 0028  
                     __CFG_FEXTOSC$ECH 000000                        _DMA1_Initialize 2A76  
                      _SPI1_Initialize 384A                  __end_of_get_vterm_ptr 32F2  
                    __size_of_INT0_ISR 000E                      __size_of_INT1_ISR 000E  
                       __end_of_WaitMs 31C6           __end_of_INTERRUPT_Initialize 2C1A  
                           _vterm_dump 1CCA   __end_of_INT0_DefaultInterruptHandler 3974  
__size_of_INT0_DefaultInterruptHandler 0002           _INT0_DefaultInterruptHandler 3972  
           __size_of_UART1_Receive_ISR 001E                        _DMA2_Initialize 2E5A  
                    __size_of_TMR5_ISR 005C                      __size_of_TMR6_ISR 001A  
                  __size_of_check_help 0212            __size_of_UART2_Transmit_ISR 002C  
                       __end_of_memset 133A                         __end_of_printf 2D44  
             __end_of_DMA1_DMADCNT_ISR 3922            __size_of_PWM8_LoadDutyValue 0042  
                __end_of_INT0_CallBack 3684                         __end_of_strlen 2738  
                  start_initialization 23E4   __end_of_TMR5_DefaultInterruptHandler 37E8  
__size_of_TMR5_DefaultInterruptHandler 001A           _TMR5_DefaultInterruptHandler 37CE  
      __size_of_PIN_MANAGER_Initialize 0090                            __end_of_abs 2F4C  
                __end_of_INT1_CallBack 36A6              __size_of_set_display_info 001E  
                          __end_of_pad 223C                   __size_of_Default_ISR 0006  
                 __end_of_send_lcd_cmd 33C4          __size_of_ADCC_StartConversion 0012  
                           ivt0x8_base 0008                          _uart1RxBuffer 0400  
                        _uart2RxBuffer 0500                          _uart1TxBuffer 01BD  
             __end_of_DMA1_DMASCNT_ISR 390E                          _uart2TxBuffer 0200  
                       _DMA1_DMAOR_ISR 3930                       __CFG_LPBOREN$OFF 000000  
                __size_of_init_display 00EA            __size_of_eaDogM_WriteString 00A6  
                            _TimerDone 361A                          _ringBufS_init 33C4  
                          __pdataBANK0 00D5                            __pdataBANK1 0100  
           __size_of_UART2_Receive_ISR 001E             __end_of_EXT_INT_Initialize 3264  
                  __end_of_help_button 3158        __end_of_eaDogM_WriteStringAtPos 31FC  
              __end_of_DMA1_Initialize 2AE0                            __pbssCOMRAM 0001  
     __end_of_INT0_SetInterruptHandler 352C                          __pcstackBANK0 00EC  
             __size_of_TMR2_Initialize 0018                __end_of_SPI1_Initialize 3860  
             _UART1_RxInterruptHandler 000D               _UART2_TxInterruptHandler 0010  
                            __end_of_T FF11              __size_of_ringBufS_put_dma 00AA  
                         _init_display 223C                 __end_of_DMA1_DMAOR_ISR 393A  
               __size_of_TMR5_CallBack 0024                  _TMR6_InterruptHandler 0001  
               __size_of_TMR6_CallBack 0022                __end_of_DMA2_Initialize 2EB4  
               _PIN_MANAGER_Initialize 2860                   __end_of_wait_lcd_set 3966  
                        __pmediumconst FE80                              __ptext100 3976  
                            __ptext101 3722                              __ptext110 375E  
                            __ptext102 2B4C                              __ptext111 37E8  
                            __ptext103 357C                              __ptext112 36A6  
                            __ptext104 32F2                              __ptext113 2FD8  
                            __ptext105 35A4                              __ptext114 3900  
                            __ptext106 3740                              __ptext115 3918  
                            __ptext107 35CC                              __ptext116 3924  
                            __ptext108 331E                              __ptext117 3930  
                            __ptext109 35F4                              __ptext118 0000  
                   __end_of_StartTimer 3120                      __size_of_wdtdelay 005A  
                    __size_of_vfprintf 00A8                               _ADCC_ISR 3158  
               __CFG_BBSIZE$BBSIZE_512 000000                               _DMA1CON0 003BFC  
                             _DMA1CON1 003BFD                               _DMA1AIRQ 003BFE  
                             _DMA2CON0 003BDC                               _DMA2CON1 003BDD  
                             _DMA2AIRQ 003BDE                               _DMA1SIRQ 003BFF  
                             _DMA2SIRQ 003BDF                __size_of_get_raw_result 001E  
               __size_of_wait_lcd_done 001C                         __size_of_fputc 0124  
                             _T2CLKCON 003FAE                         __size_of_fputs 007E  
                       __size_of_srand 0034                         __size_of_putch 001A  
                 _INTERRUPT_Initialize 2BB4                               _T6CLKCON 003F96  
                      ?_DMA1_DMAOR_ISR 0055                               _INT0_ISR 38E0  
                             _INT1_ISR 38F0                               _LATCbits 003FBC  
                             _LATDbits 003FBD                               _LATEbits 003FBE  
    __size_of_INT1_SetInterruptHandler 0028                               _IPR1bits 003981  
                             _IPR2bits 003982                               _PIE1bits 003991  
                             _IPR3bits 003983                               _PIE2bits 003992  
                             _IPR5bits 003985                               _PIE3bits 003993  
                            _tickCount 0082                               _IPR6bits 003986  
                             _PIE5bits 003995                               _IPR8bits 003988  
                             _PIE6bits 003996                               _IPR9bits 003989  
                             _PIE8bits 003998                    __CFG_BORV$VBOR_2P45 000000  
                             _PIE9bits 003999                              _ring_buf1 0283  
                            _ring_buf2 0240                               i2u157_48 3174  
                             i2u157_49 3188                               i2u431_48 35B6  
                             i2u328_48 2B80                               i2u328_49 2B94  
                             _PIR1bits 0039A1                               i2u433_48 35DE  
                             _PIR2bits 0039A2                               _SPI1BAUD 003D19  
                             i2u435_48 3606                               i2u429_48 358E  
                             _PIR4bits 0039A4                               _SPI1CON0 003D14  
                             _SPI1CON1 003D15                               _SPI1CON2 003D16  
                             _PIR5bits 0039A5                               _PIR8bits 0039A8  
                             _PIR9bits 0039A9               __size_of_TMR5_Initialize 0046  
                            _set_vterm 3798                    __size_of_update_lcd 010E  
                          _help_button 3120             __end_of_UART1_Transmit_ISR 331E  
                             _TMR5_ISR 2DA4                               _TMR6_ISR 37E8  
                            _port_data 00DC                              _vfpfcnvrt 0000  
                         _SPI1INTFbits 003D1A                          _TMR5_CallBack 363E  
                           _ADCON0bits 003EF8                     __end_of_check_help 1CCA  
                            _start_lcd 3966                __size_of_FVR_Initialize 0008  
            __size_of_send_lcd_cmd_dma 0052                          _TMR6_CallBack 36A6  
                __size_of_send_lcd_cmd 0028      __size_of_TMR5_SetInterruptHandler 0028  
                     _set_display_info 3704               __size_of_PWM8_Initialize 0016  
             __size_of_TMR6_Initialize 002A                            _INTCON0bits 003FD2  
                            copy_data0 23F8                              copy_data1 241A  
             _INT0_SetInterruptHandler 3504                    __size_of_vterm_dump 012E  
               _uart1TxBufferRemaining 0032    __end_of_UART2_SetTxInterruptHandler 3414  
          _UART2_SetTxInterruptHandler 33EC                               __Hparam0 0000  
                         _uart1RxCount 002F                           _uart2RxCount 0029  
                             __Lparam0 0000       __size_of_eaDogM_WriteStringAtPos 0036  
              __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_check_adc_scan 0008  
                   __CFG_BOREN$SBORDIS 000000                          _wait_lcd_done 377C  
                         _send_lcd_cmd 339C                       __size_of___aodiv 0280  
                     __size_of___aomod 0240                        _adc_int_handler 3722  
                __end_of_DMA1_DMAA_ISR 392E   __size_of_UART1_SetRxInterruptHandler 0028  
                    ?_DMA1_DMADCNT_ISR 0055               __size_of_ADCC_Initialize 006A  
          __end_of_eaDogM_WriteCommand 38D0                       __size_of_isalpha 0044  
                             __pivt0x8 0008                       __size_of_islower 0030  
                   ??_DMA1_DMADCNT_ISR 00ED                               __ptext10 38C2  
                             __ptext11 395A                               __ptext20 377C  
                             __ptext12 1AB8                               __ptext21 2E00  
                             __ptext13 1CCA                               __ptext30 0984  
                             __ptext22 25F0                               __ptext14 202A  
                             __ptext31 28F0                               __ptext23 3960  
                             __ptext15 32C4                               __ptext40 2974  
                             __ptext32 3264                               __ptext24 3966  
                             __ptext16 3190                               __ptext41 2134  
                             __ptext33 3294                               __ptext25 27CE  
                             __ptext17 1F1C                               __ptext50 3802  
                             __ptext42 2696                               __ptext34 301E  
                             __ptext26 104E                               __ptext18 31C6  
                             __ptext51 38D0                               __ptext43 29F8  
                             __ptext35 133A                               __ptext27 2CE2  
                             __ptext19 2EB4                               __ptext60 2D44  
                             __ptext52 3062                               __ptext44 1DF8  
                             __ptext36 052E                               __ptext28 2548  
                             __ptext61 33EC                               __ptext53 3120  
                             __ptext45 37B4                               __ptext37 2F06  
                             __ptext29 0000                               __ptext70 381A  
                             __ptext62 3414                               __ptext54 361A  
                             __ptext46 249E                               __ptext38 1878  
                             __ptext71 384A                               __ptext63 2C7E  
                             __ptext55 30E4                               __ptext47 3798  
                             __ptext39 15F8                               __ptext80 3504  
                             __ptext72 3860                               __ptext64 343C  
                             __ptext56 393A                               __ptext48 38B2  
                             __ptext81 2E5A                               __ptext73 388C  
                             __ptext65 3464                               __ptext57 3942  
                             __ptext49 3704                               __ptext90 37CE  
                             __ptext82 2A76                               __ptext74 2860  
                             __ptext66 334A                               __ptext58 394A  
                             __ptext91 38E0                               __ptext83 390E  
                             __ptext75 3876                               __ptext67 348C  
                             __ptext59 2F4C                               __ptext92 3662  
                             __ptext84 2AE0                               __ptext76 2BB4  
                             __ptext68 2F92                               __ptext93 3972  
                             __ptext85 352C                               __ptext77 3952  
                             __ptext69 34B4                               __ptext94 38F0  
                             __ptext86 3554                               __ptext78 3230  
                             __ptext95 3684                               __ptext87 2DA4  
                             __ptext79 34DC                               __ptext96 3974  
                             __ptext88 30A4                               __ptext97 396C  
                             __ptext89 363E                               __ptext98 3158  
                             __ptext99 2738                       __size_of_isupper 0030  
                     __size_of_sprintf 010A                       __size_of_toupper 0084  
                     _ringBufS_put_dma 249E                          __size_of_ctoa 0084  
                        __size_of_main 0346                          __size_of_dtoa 0456  
                __size_of_wait_lcd_set 0006                          __size_of_stoa 02BE  
                        __size_of_xtoa 0384                   __CFG_WDTCWS$WDTCWS_7 000000  
                    ?_DMA1_DMASCNT_ISR 0055                            _IVTLOCKbits 003FD4  
             __size_of_TMR5_WriteTimer 0040              _ADCC_ADI_InterruptHandler 0007  
                            stoa@F1144 00D5                     ??_DMA1_DMASCNT_ISR 00ED  
         __end_of_ADCC_StartConversion 38B2                               _spi_link 009A  
                             _wdtdelay 2E00             __end_of_UART2_Transmit_ISR 334A  
                             _vfprintf 2548             __end_of_PWM8_LoadDutyValue 30A4  
 __end_of_INT1_DefaultInterruptHandler 3976  __size_of_INT1_DefaultInterruptHandler 0002  
         _INT1_DefaultInterruptHandler 3974                          ??_Default_ISR 0055  
                          _uart1RxHead 0031                 __size_of_get_vterm_ptr 002E  
                          _uart1TxHead 0034                            _uart2RxHead 002B  
                          _uart1RxTail 0030                         _get_raw_result 36E6  
                          _uart2TxHead 002E                            _uart1TxTail 0033  
                          _uart2RxTail 002A                            _uart2TxTail 002D  
                         _wait_lcd_set 3960                     _EXT_INT_Initialize 3230  
 __end_of_TMR6_DefaultInterruptHandler 301E  __size_of_TMR6_DefaultInterruptHandler 0046  
         _TMR6_DefaultInterruptHandler 2FD8   __end_of_ADCC_DefaultInterruptHandler 3978  
__size_of_ADCC_DefaultInterruptHandler 0002           _ADCC_DefaultInterruptHandler 3976  
                             intlevel1 0000                               intlevel2 0000  
                    _send_lcd_cmd_long 3374         __size_of_set_temp_display_help 0010  
        __end_of_set_temp_display_help 38C2                      __CFG_CLKOUTEN$OFF 000000  
           __end_of_eaDogM_WriteString 2696                  __end_of_mode_lamp_dim 381A  
              __end_of_adc_int_handler 3740                 __size_of_INT0_CallBack 0022  
                           _SPI1SCKPPS 003ADE                             _SPI1SDIPPS 003ADF  
               __size_of_INT1_CallBack 0022                     __end_of_update_lcd 202A  
               _uart2TxBufferRemaining 002C                         _FVR_Initialize 3952  
               __end_of_get_raw_result 3704                       _send_lcd_cmd_dma 2EB4  
                TMR5_ISR@CountCallBack 0024       __end_of_INT1_SetInterruptHandler 3504  
            __size_of_UART1_Initialize 0064                       ??_DMA1_DMAOR_ISR 00ED  
             _UART1_TxInterruptHandler 000A              __end_of_send_lcd_cmd_long 339C  
              __size_of_start_adc_scan 0064                    __end_of_Default_ISR 3972  
       __end_of_PIN_MANAGER_Initialize 28F0              __size_of_mode_lamp_bright 000E  
                   __end_of_vterm_dump 1DF8                _eaDogM_WriteStringAtPos 31C6  
                        _get_vterm_ptr 32C4                         _check_adc_scan 394A  
            __size_of_UART2_Initialize 005E  
