

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Dec 22 02:31:00 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1,inline
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1,inline
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=4,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=4,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=4,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1,group=1
   179                           	psect	text155,global,reloc=4,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1
   182                           	psect	text158,global,reloc=4,class=CODE,delta=1
   183                           	psect	text159,global,reloc=4,class=CODE,delta=1
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=4,class=CODE,delta=1
   188                           	psect	text164,global,reloc=4,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=4,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=4,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=4,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=4,class=CODE,delta=1
   198                           	psect	text174,global,reloc=4,class=CODE,delta=1
   199                           	psect	text175,global,reloc=4,class=CODE,delta=1
   200                           	psect	text176,global,reloc=4,class=CODE,delta=1
   201                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   202                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   203                           	psect	text177,global,reloc=4,class=CODE,delta=1
   204                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   205                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   206  0000                     
   207                           ; Version 2.10
   208                           ; Generated 31/07/2019 GMT
   209                           ; 
   210                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   211                           ; All rights reserved.
   212                           ; 
   213                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   214                           ; 
   215                           ; Redistribution and use in source and binary forms, with or without modification, are
   216                           ; permitted provided that the following conditions are met:
   217                           ; 
   218                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   219                           ;        conditions and the following disclaimer.
   220                           ; 
   221                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   222                           ;        of conditions and the following disclaimer in the documentation and/or other
   223                           ;        materials provided with the distribution.
   224                           ; 
   225                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   226                           ;        software without specific prior written permission.
   227                           ; 
   228                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   229                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   230                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   231                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   232                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   233                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   234                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   235                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   236                           ; 
   237                           ; 
   238                           ; Code-generator required, PIC18F57K42 Definitions
   239                           ; 
   240                           ; SFR Addresses
   241  0000                     
   242 ;;_main$3754	offset	0
   243 ;;_main$3750	offset	2
   244 ;;_esr_temp	offset	4
   245 ;;_i_esr	offset	8
   246 ;;_shape	offset	10
   247 ;;_k	offset	11
   248 ;;_j	offset	12
   249 ;;_i	offset	13
   250 ;;_inp_index	offset	14
   251 ;;_mode	offset	15
   252 ;;_i_ror	offset	16
   253 ;;_s	offset=-2 (param)
   254 ;;_c	offset	0
   255 ;;_shape	offset=-1 (param)
   256 ;;_reset	offset=-2 (param)
   257 ;;_cmd	offset=-1 (param)
   258 ;;_cmd	offset=-1 (param)
   259 ;;_data	offset=-1 (param)
   260 ;;__this	offset=-2 (param)
   261 ;;_soc	offset	0
   262 ;;_slot	offset	4
   263 ;;_cvoltage	offset=-4 (param)
   264 ;;_h	offset=-2 (param)
   265 ;;_h	offset=-2 (param)
   266 ;;_i	offset=-1 (param)
   267 ;;_fsm	offset=-1 (param)
   268 ;;_channel	offset=-1 (param)
   269 ;;_mode	offset=-1 (param)
   270 ;;_mode	offset=-1 (param)
   271 ;;_cmd	offset=-1 (param)
   272 ;;_i	offset	0
   273 ;;_h	offset=-2 (param)
   274 ;;_flipper	offset=-1 (param)
   275 ;;_f	offset	0
   276 ;;_ap	offset	6
   277 ;;_s	offset=-3 (param)
   278 ;;_fmt	offset=-5 (param)
   279 ;;_line	offset=-1 (param)
   280 ;;_vterm	offset=-2 (param)
   281 ;;_numMilliseconds	offset=-2 (param)
   282 ;;_vterm	offset=-1 (param)
   283 ;;_r	offset=-1 (param)
   284 ;;_c	offset=-2 (param)
   285 ;;_strPtr	offset=-4 (param)
   286 ;;_strPtr	offset=-1 (param)
   287 ;;_delay	offset=-4 (param)
   288 ;;_strPtr	offset=-2 (param)
   289 ;;__this	offset=-2 (param)
   290 ;;_clearBuffer	offset=-3 (param)
   291 ;;_s	offset	0
   292 ;;_k	offset	2
   293 ;;_dest	offset=-2 (param)
   294 ;;_c	offset=-4 (param)
   295 ;;_n	offset=-6 (param)
   296 ;;_ap	offset	0
   297 ;;_fmt	offset=-3 (param)
   298 ;;_cfmt	offset	0
   299 ;;_fp	offset=-2 (param)
   300 ;;_fmt	offset=-4 (param)
   301 ;;_ap	offset=-6 (param)
   302 ;;_vfpfcnvrt$5545	offset	0
   303 ;;_vfpfcnvrt$5556	offset	2
   304 ;;_vfpfcnvrt$5544	offset	4
   305 ;;_llu	offset	6
   306 ;;_ll	offset	14
   307 ;;_f	offset	22
   308 ;;_ct	offset	26
   309 ;;_cp	offset	29
   310 ;;_c	offset	31
   311 ;;_fp	offset=-2 (param)
   312 ;;_fmt	offset=-4 (param)
   313 ;;_ap	offset=-6 (param)
   314 ;;_xtoa$5530	offset	0
   315 ;;_xtoa$5529	offset	2
   316 ;;_n	offset	4
   317 ;;_c	offset	12
   318 ;;_i	offset	14
   319 ;;_w	offset	16
   320 ;;_p	offset	18
   321 ;;_fp	offset=-2 (param)
   322 ;;_d	offset=-10 (param)
   323 ;;_x	offset=-11 (param)
   324 ;;_toupper$6336	offset	0
   325 ;;_c	offset=-2 (param)
   326 ;;_c	offset=-2 (param)
   327 ;;_c	offset=-2 (param)
   328 ;;_n	offset	0
   329 ;;_i	offset	8
   330 ;;_w	offset	10
   331 ;;_p	offset	12
   332 ;;_fp	offset=-2 (param)
   333 ;;_d	offset=-10 (param)
   334 ;;_counter	offset	0
   335 ;;_dividend	offset=-8 (param)
   336 ;;_divisor	offset=-16 (param)
   337 ;;_quotient	offset	0
   338 ;;_counter	offset	8
   339 ;;_dividend	offset=-8 (param)
   340 ;;_divisor	offset=-16 (param)
   341 ;;_r	offset	0
   342 ;;_l	offset	2
   343 ;;__l	offset=-2 (param)
   344 ;;__r	offset=-4 (param)
   345 ;;_n	offset=-6 (param)
   346 ;;_nuls	offset	0
   347 ;;_l	offset	7
   348 ;;_p	offset	9
   349 ;;_cp	offset	11
   350 ;;_w	offset	13
   351 ;;_i	offset	15
   352 ;;_fp	offset=-2 (param)
   353 ;;_s	offset=-4 (param)
   354 ;;_efgtoa$5502	offset	0
   355 ;;_efgtoa$5501	offset	2
   356 ;;_efgtoa$5500	offset	4
   357 ;;_efgtoa$5496	offset	6
   358 ;;_efgtoa$5492	offset	8
   359 ;;_efgtoa$5491	offset	10
   360 ;;_u	offset	12
   361 ;;_g	offset	16
   362 ;;_l	offset	20
   363 ;;_h	offset	24
   364 ;;_ou	offset	28
   365 ;;_n	offset	32
   366 ;;_e	offset	34
   367 ;;_i	offset	36
   368 ;;_w	offset	38
   369 ;;_p	offset	40
   370 ;;_sign	offset	42
   371 ;;_d	offset	44
   372 ;;_ne	offset	46
   373 ;;_m	offset	48
   374 ;;_pp	offset	50
   375 ;;_t	offset	52
   376 ;;_mode	offset	54
   377 ;;_nmode	offset	55
   378 ;;_fp	offset=-2 (param)
   379 ;;_f	offset=-6 (param)
   380 ;;_c	offset=-7 (param)
   381 ;;_tolower$6321	offset	0
   382 ;;_c	offset=-2 (param)
   383 ;;_c	offset=-2 (param)
   384 ;;_d	offset	0
   385 ;;_s	offset	2
   386 ;;_dest	offset=-2 (param)
   387 ;;_src	offset=-4 (param)
   388 ;;_u	offset	0
   389 ;;_m	offset	4
   390 ;;_e	offset	8
   391 ;;_x	offset=-4 (param)
   392 ;;_u	offset	0
   393 ;;_e	offset	4
   394 ;;_x	offset=-4 (param)
   395 ;;_exp1	offset	0
   396 ;;_sign1	offset	1
   397 ;;_f1	offset=-4 (param)
   398 ;;_f1	offset=-4 (param)
   399 ;;_ff1	offset=-4 (param)
   400 ;;_ff2	offset=-8 (param)
   401 ;;_sign	offset	0
   402 ;;_counter	offset	1
   403 ;;_dividend	offset=-2 (param)
   404 ;;_divisor	offset=-4 (param)
   405 ;;_quotient	offset	0
   406 ;;_sign	offset	2
   407 ;;_counter	offset	3
   408 ;;_dividend	offset=-2 (param)
   409 ;;_divisor	offset=-4 (param)
   410 ;;_dtoa$5468	offset	0
   411 ;;_n	offset	2
   412 ;;_i	offset	10
   413 ;;_s	offset	12
   414 ;;_w	offset	14
   415 ;;_p	offset	16
   416 ;;_fp	offset=-2 (param)
   417 ;;_d	offset=-10 (param)
   418 ;;_a	offset=-2 (param)
   419 ;;_sign	offset	0
   420 ;;_counter	offset	1
   421 ;;_dividend	offset=-8 (param)
   422 ;;_divisor	offset=-16 (param)
   423 ;;_quotient	offset	0
   424 ;;_sign	offset	8
   425 ;;_counter	offset	9
   426 ;;_dividend	offset=-8 (param)
   427 ;;_divisor	offset=-16 (param)
   428 ;;_w	offset	0
   429 ;;_fp	offset=-2 (param)
   430 ;;_c	offset=-3 (param)
   431 ;;_w	offset	0
   432 ;;_i	offset	2
   433 ;;_fp	offset=-2 (param)
   434 ;;_buf	offset=-4 (param)
   435 ;;_p	offset=-6 (param)
   436 ;;_a	offset	0
   437 ;;_s	offset=-2 (param)
   438 ;;_i	offset	0
   439 ;;_c	offset	2
   440 ;;_s	offset=-2 (param)
   441 ;;_fp	offset=-4 (param)
   442 ;;_c	offset=-2 (param)
   443 ;;_fp	offset=-4 (param)
   444 ;;_c	offset=-1 (param)
   445 ;;__this	offset=-2 (param)
   446 ;;_c	offset=-3 (param)
   447 ;;_atoi$6052	offset	0
   448 ;;_atoi$6050	offset	2
   449 ;;_atoi$6051	offset	4
   450 ;;_n	offset	5
   451 ;;_neg	offset	7
   452 ;;_s	offset=-2 (param)
   453 ;;_isspace$6101	offset	0
   454 ;;_c	offset=-2 (param)
   455 ;;_c	offset=-2 (param)
   456 ;;_vterm	offset=-1 (param)
   457 ;;_new_response_info	offset=-1 (param)
   458 ;;_new_response_info	offset=-1 (param)
   459 ;;_level	offset=-2 (param)
   460 ;;_dutyValue	offset=-2 (param)
   461 ;;_timer	offset=-1 (param)
   462 ;;_timer	offset=-1 (param)
   463 ;;_count	offset=-3 (param)
   464 ;;_h	offset=-2 (param)
   465 ;;_u	offset	0
   466 ;;_x	offset=-4 (param)
   467 ;;_chan	offset=-1 (param)
   468 ;;_to_what	offset=-2 (param)
   469 ;;_u	offset	0
   470 ;;_s	offset=-2 (param)
   471 ;;_index	offset=-1 (param)
   472 ;;_arg	offset	0
   473 ;;_exp	offset	4
   474 ;;_sign	offset=-1 (param)
   475 ;;_val	offset=-5 (param)
   476 ;;_grs	offset	0
   477 ;;_rem	offset	4
   478 ;;_new_exp	offset	8
   479 ;;_aexp	offset	10
   480 ;;_bexp	offset	11
   481 ;;_sign	offset	12
   482 ;;_b	offset=-4 (param)
   483 ;;_a	offset=-8 (param)
   484 ;;_ff1	offset=-4 (param)
   485 ;;_ff2	offset=-8 (param)
   486 ;;_lp_speed	offset	0
   487 ;;_new	offset=-4 (param)
   488 ;;_bn	offset=-5 (param)
   489 ;;_slow	offset=-6 (param)
   490 ;;_b	offset=-4 (param)
   491 ;;_a	offset=-8 (param)
   492 ;;_grs	offset	0
   493 ;;_bexp	offset	1
   494 ;;_aexp	offset	2
   495 ;;_signs	offset	3
   496 ;;_b	offset=-4 (param)
   497 ;;_a	offset=-8 (param)
   498 ;;_prod	offset	0
   499 ;;_grs	offset	4
   500 ;;_temp	offset	8
   501 ;;_bexp	offset	10
   502 ;;_aexp	offset	11
   503 ;;_sign	offset	12
   504 ;;_b	offset=-4 (param)
   505 ;;_a	offset=-8 (param)
   506 ;;_InterruptHandler	offset=-3 (param)
   507 ;;_InterruptHandler	offset=-3 (param)
   508 ;;_InterruptHandler	offset=-3 (param)
   509 ;;_InterruptHandler	offset=-3 (param)
   510 ;;_InterruptHandler	offset=-3 (param)
   511 ;;_InterruptHandler	offset=-3 (param)
   512 ;;_state	offset	0
   513 ;;_InterruptHandler	offset=-3 (param)
   514 ;;_InterruptHandler	offset=-3 (param)
   515 ;;_InterruptHandler	offset=-3 (param)
   516 ;;_InterruptHandler	offset=-3 (param)
   517 ;;_i	offset	0
   518 ;;_sw_value	offset	1
   519 ;;_timerVal	offset=-2 (param)
   520 ;;_mode	offset=-1 (param)
   521 ;;_chan	offset=-1 (param)
   522 ;;_to_what	offset=-2 (param)
   523 ;;_u	offset	0
   524 ;;_s	offset=-2 (param)
   525 ;;_index	offset=-1 (param)
   526 ;;_arg	offset	0
   527 ;;_exp	offset	4
   528 ;;_sign	offset=-1 (param)
   529 ;;_val	offset=-5 (param)
   530 ;;_b	offset=-4 (param)
   531 ;;_a	offset=-8 (param)
   532 ;;_grs	offset	0
   533 ;;_bexp	offset	1
   534 ;;_aexp	offset	2
   535 ;;_signs	offset	3
   536 ;;_b	offset=-4 (param)
   537 ;;_a	offset=-8 (param)
   538 ;;_prod	offset	0
   539 ;;_grs	offset	4
   540 ;;_temp	offset	8
   541 ;;_bexp	offset	10
   542 ;;_aexp	offset	11
   543 ;;_sign	offset	12
   544 ;;_b	offset=-4 (param)
   545 ;;_a	offset=-8 (param)
   546 ;;_grs	offset	0
   547 ;;_rem	offset	4
   548 ;;_new_exp	offset	8
   549 ;;_aexp	offset	10
   550 ;;_bexp	offset	11
   551 ;;_sign	offset	12
   552 ;;_b	offset=-4 (param)
   553 ;;_a	offset=-8 (param)
   554 ;;_ff1	offset=-4 (param)
   555 ;;_ff2	offset=-8 (param)
   556 ;;_timerVal	offset=-2 (param)
   557 ;;_log_ptr	offset	0
   558 ;;_f	offset	0
   559 ;;_ap	offset	6
   560 ;;_s	offset=-3 (param)
   561 ;;_fmt	offset=-5 (param)
   562 ;;_cfmt	offset	0
   563 ;;_fp	offset=-2 (param)
   564 ;;_fmt	offset=-4 (param)
   565 ;;_ap	offset=-6 (param)
   566 ;;_vfpfcnvrt$5545	offset	0
   567 ;;_vfpfcnvrt$5556	offset	2
   568 ;;_vfpfcnvrt$5544	offset	4
   569 ;;_llu	offset	6
   570 ;;_ll	offset	14
   571 ;;_f	offset	22
   572 ;;_ct	offset	26
   573 ;;_cp	offset	29
   574 ;;_c	offset	31
   575 ;;_fp	offset=-2 (param)
   576 ;;_fmt	offset=-4 (param)
   577 ;;_ap	offset=-6 (param)
   578 ;;_xtoa$5530	offset	0
   579 ;;_xtoa$5529	offset	2
   580 ;;_n	offset	4
   581 ;;_c	offset	12
   582 ;;_i	offset	14
   583 ;;_w	offset	16
   584 ;;_p	offset	18
   585 ;;_fp	offset=-2 (param)
   586 ;;_d	offset=-10 (param)
   587 ;;_x	offset=-11 (param)
   588 ;;_toupper$6336	offset	0
   589 ;;_c	offset=-2 (param)
   590 ;;_c	offset=-2 (param)
   591 ;;_c	offset=-2 (param)
   592 ;;_n	offset	0
   593 ;;_i	offset	8
   594 ;;_w	offset	10
   595 ;;_p	offset	12
   596 ;;_fp	offset=-2 (param)
   597 ;;_d	offset=-10 (param)
   598 ;;_counter	offset	0
   599 ;;_dividend	offset=-8 (param)
   600 ;;_divisor	offset=-16 (param)
   601 ;;_quotient	offset	0
   602 ;;_counter	offset	8
   603 ;;_dividend	offset=-8 (param)
   604 ;;_divisor	offset=-16 (param)
   605 ;;_r	offset	0
   606 ;;_l	offset	2
   607 ;;__l	offset=-2 (param)
   608 ;;__r	offset=-4 (param)
   609 ;;_n	offset=-6 (param)
   610 ;;_nuls	offset	0
   611 ;;_l	offset	7
   612 ;;_p	offset	9
   613 ;;_cp	offset	11
   614 ;;_w	offset	13
   615 ;;_i	offset	15
   616 ;;_fp	offset=-2 (param)
   617 ;;_s	offset=-4 (param)
   618 ;;_efgtoa$5502	offset	0
   619 ;;_efgtoa$5501	offset	2
   620 ;;_efgtoa$5500	offset	4
   621 ;;_efgtoa$5496	offset	6
   622 ;;_efgtoa$5492	offset	8
   623 ;;_efgtoa$5491	offset	10
   624 ;;_u	offset	12
   625 ;;_g	offset	16
   626 ;;_l	offset	20
   627 ;;_h	offset	24
   628 ;;_ou	offset	28
   629 ;;_n	offset	32
   630 ;;_e	offset	34
   631 ;;_i	offset	36
   632 ;;_w	offset	38
   633 ;;_p	offset	40
   634 ;;_sign	offset	42
   635 ;;_d	offset	44
   636 ;;_ne	offset	46
   637 ;;_m	offset	48
   638 ;;_pp	offset	50
   639 ;;_t	offset	52
   640 ;;_mode	offset	54
   641 ;;_nmode	offset	55
   642 ;;_fp	offset=-2 (param)
   643 ;;_f	offset=-6 (param)
   644 ;;_c	offset=-7 (param)
   645 ;;_tolower$6321	offset	0
   646 ;;_c	offset=-2 (param)
   647 ;;_c	offset=-2 (param)
   648 ;;_d	offset	0
   649 ;;_s	offset	2
   650 ;;_dest	offset=-2 (param)
   651 ;;_src	offset=-4 (param)
   652 ;;_u	offset	0
   653 ;;_m	offset	4
   654 ;;_e	offset	8
   655 ;;_x	offset=-4 (param)
   656 ;;_u	offset	0
   657 ;;_e	offset	4
   658 ;;_x	offset=-4 (param)
   659 ;;_exp1	offset	0
   660 ;;_sign1	offset	1
   661 ;;_f1	offset=-4 (param)
   662 ;;_f1	offset=-4 (param)
   663 ;;_ff1	offset=-4 (param)
   664 ;;_ff2	offset=-8 (param)
   665 ;;_sign	offset	0
   666 ;;_counter	offset	1
   667 ;;_dividend	offset=-2 (param)
   668 ;;_divisor	offset=-4 (param)
   669 ;;_quotient	offset	0
   670 ;;_sign	offset	2
   671 ;;_counter	offset	3
   672 ;;_dividend	offset=-2 (param)
   673 ;;_divisor	offset=-4 (param)
   674 ;;_dtoa$5468	offset	0
   675 ;;_n	offset	2
   676 ;;_i	offset	10
   677 ;;_s	offset	12
   678 ;;_w	offset	14
   679 ;;_p	offset	16
   680 ;;_fp	offset=-2 (param)
   681 ;;_d	offset=-10 (param)
   682 ;;_a	offset=-2 (param)
   683 ;;_sign	offset	0
   684 ;;_counter	offset	1
   685 ;;_dividend	offset=-8 (param)
   686 ;;_divisor	offset=-16 (param)
   687 ;;_quotient	offset	0
   688 ;;_sign	offset	8
   689 ;;_counter	offset	9
   690 ;;_dividend	offset=-8 (param)
   691 ;;_divisor	offset=-16 (param)
   692 ;;_w	offset	0
   693 ;;_fp	offset=-2 (param)
   694 ;;_c	offset=-3 (param)
   695 ;;_w	offset	0
   696 ;;_i	offset	2
   697 ;;_fp	offset=-2 (param)
   698 ;;_buf	offset=-4 (param)
   699 ;;_p	offset=-6 (param)
   700 ;;_a	offset	0
   701 ;;_s	offset=-2 (param)
   702 ;;_i	offset	0
   703 ;;_c	offset	2
   704 ;;_s	offset=-2 (param)
   705 ;;_fp	offset=-4 (param)
   706 ;;_c	offset=-2 (param)
   707 ;;_fp	offset=-4 (param)
   708 ;;_c	offset=-1 (param)
   709 ;;__this	offset=-2 (param)
   710 ;;_c	offset=-3 (param)
   711 ;;_atoi$6052	offset	0
   712 ;;_atoi$6050	offset	2
   713 ;;_atoi$6051	offset	4
   714 ;;_n	offset	5
   715 ;;_neg	offset	7
   716 ;;_s	offset=-2 (param)
   717 ;;_isspace$6101	offset	0
   718 ;;_c	offset=-2 (param)
   719 ;;_c	offset=-2 (param)
   720 ;;_dsize	offset=-2 (param)
   721 ;;_u	offset	0
   722 ;;_x	offset=-4 (param)
   723 ;;_f1p	offset=-2 (param)
   724 ;;_f2	offset=-6 (param)
   725 ;;_timer	offset=-1 (param)
   726 ;;_count	offset=-3 (param)
   727 ;;_channel	offset=-1 (param)
   728 ;;_i	offset	0
   729                           
   730                           	psect	idataBIGRAM
   731  0167F8                     __pidataBIGRAM:
   732                           	opt callstack 0
   733                           
   734                           ;initializer for _port_data
   735  0167F8  FF                 	db	255
   736  0167F9  00                 	db	0
   737  0167FA  FF                 	db	255
   738  0167FB  00                 	db	0
   739  0167FC  FF                 	db	255
   740  0167FD  00                 	db	0
   741  0167FE  FF                 	db	255
   742  0167FF  00                 	db	0
   743  016800  FF                 	db	255
   744  016801  00                 	db	0
   745  016802  FF                 	db	255
   746  016803  00                 	db	0
   747  016804  FF                 	db	255
   748  016805  00                 	db	0
   749  016806  FF                 	db	255
   750  016807  00                 	db	0
   751  016808  00                 	db	0
   752  016809  00                 	db	0
   753  01680A  00                 	db	0
   754  01680B  00                 	db	0
   755  01680C  00                 	db	0
   756  01680D  00                 	db	0
   757  01680E  00                 	db	0
   758  01680F  00                 	db	0
   759  016810  00                 	db	0
   760  016811  00                 	db	0
   761  016812  00                 	db	0
   762  016813  00                 	db	0
   763  016814  00                 	db	0
   764  016815  00                 	db	0
   765  016816  00                 	db	0
   766  016817  00                 	db	0
   767  016818  00                 	db	0
   768  016819  00                 	db	0
   769  01681A  00                 	db	0
   770  01681B  00                 	db	0
   771  01681C  00                 	db	0
   772  01681D  00                 	db	0
   773  01681E  00                 	db	0
   774  01681F  00                 	db	0
   775  016820  00                 	db	0
   776  016821  00                 	db	0
   777  016822  00                 	db	0
   778  016823  00                 	db	0
   779  016824  00                 	db	0
   780  016825  00                 	db	0
   781  016826  00                 	db	0
   782  016827  00                 	db	0
   783  016828  00                 	db	0
   784  016829  00                 	db	0
   785  01682A  00                 	db	0
   786  01682B  00                 	db	0
   787  01682C  00                 	db	0
   788  01682D  00                 	db	0
   789  01682E  00                 	db	0
   790  01682F  00                 	db	0
   791  016830  00                 	db	0
   792  016831  00                 	db	0
   793  016832  00                 	db	0
   794  016833  00                 	db	0
   795  016834  00                 	db	0
   796  016835  00                 	db	0
   797  016836  00                 	db	0
   798  016837  00                 	db	0
   799  016838  00                 	db	0
   800  016839  00                 	db	0
   801  01683A  00                 	db	0
   802  01683B  00                 	db	0
   803  01683C  00                 	db	0
   804  01683D  00                 	db	0
   805  01683E  00                 	db	0
   806  01683F  00                 	db	0
   807  016840  00                 	db	0
   808  016841  00                 	db	0
   809  016842  00                 	db	0
   810  016843  00                 	db	0
   811  016844  00                 	db	0
   812  016845  00                 	db	0
   813  016846  00                 	db	0
   814  016847  00                 	db	0
   815  016848  00                 	db	0
   816  016849  00                 	db	0
   817  01684A  00                 	db	0
   818  01684B  00                 	db	0
   819  01684C  00                 	db	0
   820  01684D  00                 	db	0
   821  01684E  00                 	db	0
   822  01684F  00                 	db	0
   823  016850  00                 	db	0
   824  016851  00                 	db	0
   825  016852  00                 	db	0
   826  016853  00                 	db	0
   827  016854  00                 	db	0
   828  016855  00                 	db	0
   829  016856  00                 	db	0
   830  016857  00                 	db	0
   831  016858  00                 	db	0
   832  016859  00                 	db	0
   833  01685A  00                 	db	0
   834  01685B  00                 	db	0
   835  01685C  00                 	db	0
   836  01685D  00                 	db	0
   837  01685E  00                 	db	0
   838  01685F  00                 	db	0
   839  016860  00                 	db	0
   840  016861  00                 	db	0
   841  016862  00                 	db	0
   842  016863  00                 	db	0
   843  016864  00                 	db	0
   844  016865  00                 	db	0
   845  016866  00                 	db	0
   846  016867  00                 	db	0
   847  016868  00                 	db	0
   848  016869  00                 	db	0
   849  01686A  00                 	db	0
   850  01686B  00                 	db	0
   851  01686C  00                 	db	0
   852  01686D  00                 	db	0
   853  01686E  00                 	db	0
   854  01686F  00                 	db	0
   855  016870  00                 	db	0
   856  016871  00                 	db	0
   857  016872  00                 	db	0
   858  016873  00                 	db	0
   859  016874  00                 	db	0
   860  016875  00                 	db	0
   861  016876  00                 	db	0
   862  016877  00                 	db	0
   863  016878  00                 	db	0
   864  016879  00                 	db	0
   865  01687A  00                 	db	0
   866  01687B  00                 	db	0
   867  01687C  00                 	db	0
   868  01687D  00                 	db	0
   869  01687E  00                 	db	0
   870  01687F  00                 	db	0
   871  016880  00                 	db	0
   872  016881  00                 	db	0
   873  016882  00                 	db	0
   874  016883  00                 	db	0
   875  016884  00                 	db	0
   876  016885  00                 	db	0
   877  016886  00                 	db	0
   878  016887  00                 	db	0
   879  016888  00                 	db	0
   880  016889  00                 	db	0
   881  01688A  00                 	db	0
   882  01688B  00                 	db	0
   883  01688C  00                 	db	0
   884  01688D  00                 	db	0
   885  01688E  00                 	db	0
   886  01688F  00                 	db	0
   887  016890  00                 	db	0
   888  016891  00                 	db	0
   889  016892  00                 	db	0
   890  016893  00                 	db	0
   891  016894  00                 	db	0
   892  016895  00                 	db	0
   893  016896  00                 	db	0
   894  016897  00                 	db	0
   895  016898  00                 	db	0
   896  016899  00                 	db	0
   897  01689A  00                 	db	0
   898  01689B  00                 	db	0
   899  01689C  00                 	db	0
   900  01689D  00                 	db	0
   901  01689E  00                 	db	0
   902  01689F  00                 	db	0
   903  0168A0  00                 	db	0
   904  0168A1  00                 	db	0
   905  0168A2  00                 	db	0
   906  0168A3  00                 	db	0
   907  0168A4  00                 	db	0
   908  0168A5  00                 	db	0
   909  0168A6  00                 	db	0
   910  0168A7  00                 	db	0
   911  0168A8  00                 	db	0
   912  0168A9  00                 	db	0
   913  0168AA  00                 	db	0
   914  0168AB  00                 	db	0
   915  0168AC  00                 	db	0
   916  0168AD  00                 	db	0
   917  0168AE  00                 	db	0
   918  0168AF  00                 	db	0
   919  0168B0  00                 	db	0
   920  0168B1  00                 	db	0
   921  0168B2  00                 	db	0
   922  0168B3  00                 	db	0
   923  0168B4  00                 	db	0
   924  0168B5  00                 	db	0
   925  0168B6  00                 	db	0
   926  0168B7  00                 	db	0
   927  0168B8  00                 	db	0
   928  0168B9  00                 	db	0
   929  0168BA  00                 	db	0
   930  0168BB  00                 	db	0
   931  0168BC  00                 	db	0
   932  0168BD  00                 	db	0
   933  0168BE  00                 	db	0
   934  0168BF  00                 	db	0
   935  0168C0  00                 	db	0
   936  0168C1  00                 	db	0
   937  0168C2  00                 	db	0
   938  0168C3  00                 	db	0
   939  0168C4  00                 	db	0
   940  0168C5  00                 	db	0
   941  0168C6  00                 	db	0
   942  0168C7  00                 	db	0
   943  0168C8  00                 	db	0
   944  0168C9  00                 	db	0
   945  0168CA  00                 	db	0
   946  0168CB  00                 	db	0
   947  0168CC  00                 	db	0
   948  0168CD  00                 	db	0
   949  0168CE  00                 	db	0
   950  0168CF  00                 	db	0
   951  0168D0  00                 	db	0
   952  0168D1  00                 	db	0
   953  0168D2  00                 	db	0
   954  0168D3  00                 	db	0
   955  0168D4  00                 	db	0
   956  0168D5  00                 	db	0
   957  0168D6  00                 	db	0
   958  0168D7  00                 	db	0
   959  0168D8  00                 	db	0
   960  0168D9  00                 	db	0
   961  0168DA  00                 	db	0
   962  0168DB  00                 	db	0
   963  0168DC  00                 	db	0
   964  0168DD  00                 	db	0
   965  0168DE  00                 	db	0
   966  0168DF  00                 	db	0
   967  0168E0  00                 	db	0
   968  0168E1  00                 	db	0
   969  0168E2  00                 	db	0
   970  0168E3  00                 	db	0
   971  0168E4  00                 	db	0
   972  0168E5  00                 	db	0
   973  0168E6  00                 	db	0
   974  0168E7  00                 	db	0
   975  0168E8  00                 	db	0
   976  0168E9  00                 	db	0
   977  0168EA  00                 	db	0
   978  0168EB  00                 	db	0
   979  0168EC  00                 	db	0
   980  0168ED  00                 	db	0
   981  0168EE  00                 	db	0
   982  0168EF  00                 	db	0
   983  0168F0  00                 	db	0
   984  0168F1  00                 	db	0
   985  0168F2  00                 	db	0
   986  0168F3  00                 	db	0
   987  0168F4  00                 	db	0
   988  0168F5  00                 	db	0
   989  0168F6  00                 	db	0
   990  0168F7  00                 	db	0
   991  0168F8  00                 	db	0
   992  0168F9  00                 	db	0
   993  0168FA  00                 	db	0
   994  0168FB  00                 	db	0
   995  0168FC  00                 	db	0
   996  0168FD  00                 	db	0
   997  0168FE  00                 	db	0
   998  0168FF  00                 	db	0
   999  016900  00                 	db	0
  1000  016901  00                 	db	0
  1001  016902  00                 	db	0
  1002  016903  00                 	db	0
  1003  016904  00                 	db	0
  1004  016905  00                 	db	0
  1005  016906  00                 	db	0
  1006  016907  00                 	db	0
  1007  016908  00                 	db	0
  1008  016909  00                 	db	0
  1009  01690A  00                 	db	0
  1010  01690B  00                 	db	0
  1011  01690C  00                 	db	0
  1012  01690D  00                 	db	0
  1013  01690E  00                 	db	0
  1014  01690F  00                 	db	0
  1015  016910  00                 	db	0
  1016  016911  00                 	db	0
  1017  016912  00                 	db	0
  1018  016913  00                 	db	0
  1019  016914  00                 	db	0
  1020  016915  00                 	db	0
  1021  016916  00                 	db	0
  1022  016917  00                 	db	0
  1023  016918  00                 	db	0
  1024  016919  00                 	db	0
  1025  01691A  00                 	db	0
  1026  01691B  00                 	db	0
  1027  01691C  00                 	db	0
  1028  01691D  00                 	db	0
  1029  01691E  00                 	db	0
  1030  01691F  00                 	db	0
  1031  016920  00                 	db	0
  1032  016921  00                 	db	0
  1033  016922  00                 	db	0
  1034  016923  00                 	db	0
  1035  016924  00                 	db	0
  1036  016925  00                 	db	0
  1037  016926  00                 	db	0
  1038  016927  00                 	db	0
  1039  016928  00                 	db	0
  1040  016929  00                 	db	0
  1041  01692A  00                 	db	0
  1042  01692B  00                 	db	0
  1043  01692C  00                 	db	0
  1044  01692D  00                 	db	0
  1045  01692E  00                 	db	0
  1046  01692F  00                 	db	0
  1047  016930  00                 	db	0
  1048  016931  00                 	db	0
  1049  016932  00                 	db	0
  1050  016933  00                 	db	0
  1051  016934  00                 	db	0
  1052  016935  00                 	db	0
  1053  016936  00                 	db	0
  1054  016937  00                 	db	0
  1055  016938  00                 	db	0
  1056  016939  00                 	db	0
  1057  01693A  00                 	db	0
  1058  01693B  00                 	db	0
  1059  01693C  00                 	db	0
  1060  01693D  00                 	db	0
  1061  01693E  00                 	db	0
  1062  01693F  00                 	db	0
  1063  016940  00                 	db	0
  1064  016941  00                 	db	0
  1065  016942  00                 	db	0
  1066  016943  00                 	db	0
  1067  016944  00                 	db	0
  1068  016945  00                 	db	0
  1069  016946  00                 	db	0
  1070  016947  00                 	db	0
  1071  016948  00                 	db	0
  1072  016949  00                 	db	0
  1073  01694A  00                 	db	0
  1074  01694B  00                 	db	0
  1075  01694C  00                 	db	0
  1076  01694D  00                 	db	0
  1077  01694E  00                 	db	0
  1078  01694F  00                 	db	0
  1079  016950  00                 	db	0
  1080  016951  00                 	db	0
  1081  016952  00                 	db	0
  1082  016953  00                 	db	0
  1083  016954  00                 	db	0
  1084  016955  00                 	db	0
  1085  016956  00                 	db	0
  1086  016957  00                 	db	0
  1087  016958  00                 	db	0
  1088  016959  00                 	db	0
  1089  01695A  00                 	db	0
  1090  01695B  00                 	db	0
  1091  01695C  00                 	db	0
  1092  01695D  00                 	db	0
  1093  01695E  00                 	db	0
  1094  01695F  00                 	db	0
  1095  016960  00                 	db	0
  1096  016961  00                 	db	0
  1097  016962  00                 	db	0
  1098  016963  00                 	db	0
  1099  016964  00                 	db	0
  1100  016965  00                 	db	0
  1101  016966  00                 	db	0
  1102  016967  00                 	db	0
  1103  016968  00                 	db	0
  1104  016969  00                 	db	0
  1105  01696A  00                 	db	0
  1106  01696B  00                 	db	0
  1107  01696C  00                 	db	0
  1108  01696D  00                 	db	0
  1109  01696E  00                 	db	0
  1110  01696F  00                 	db	0
  1111  016970  00                 	db	0
  1112  016971  00                 	db	0
  1113  016972  00                 	db	0
  1114  016973  00                 	db	0
  1115  016974  00                 	db	0
  1116  016975  00                 	db	0
  1117  016976  00                 	db	0
  1118  016977  00                 	db	0
  1119  016978  00                 	db	0
  1120  016979  00                 	db	0
  1121  01697A  00                 	db	0
  1122  01697B  00                 	db	0
  1123  01697C  00                 	db	0
  1124  01697D  00                 	db	0
  1125  01697E  00                 	db	0
  1126  01697F  00                 	db	0
  1127  016980  00                 	db	0
  1128  016981  00                 	db	0
  1129  016982  00                 	db	0
  1130  016983  00                 	db	0
  1131  016984  00                 	db	0
  1132  016985  00                 	db	0
  1133  016986  00                 	db	0
  1134  016987  00                 	db	0
  1135  016988  00                 	db	0
  1136  016989  00                 	db	0
  1137  01698A  00                 	db	0
  1138  01698B  00                 	db	0
  1139  01698C  00                 	db	0
  1140  01698D  00                 	db	0
  1141  01698E  00                 	db	0
  1142  01698F  00                 	db	0
  1143  016990  00                 	db	0
  1144  016991  00                 	db	0
  1145  016992  00                 	db	0
  1146  016993  00                 	db	0
  1147  016994  00                 	db	0
  1148  016995  00                 	db	0
  1149  016996  00                 	db	0
  1150  016997  00                 	db	0
  1151  016998  00                 	db	0
  1152  016999  00                 	db	0
  1153  01699A  00                 	db	0
  1154  01699B  00                 	db	0
  1155  01699C  00                 	db	0
  1156  01699D  00                 	db	0
  1157  01699E  00                 	db	0
  1158  01699F  00                 	db	0
  1159  0169A0  00                 	db	0
  1160  0169A1  00                 	db	0
  1161  0169A2  00                 	db	0
  1162  0169A3  00                 	db	0
  1163  0169A4  00                 	db	0
  1164  0169A5  00                 	db	0
  1165  0169A6  00                 	db	0
  1166  0169A7  00                 	db	0
  1167  0169A8  00                 	db	0
  1168  0169A9  00                 	db	0
  1169  0169AA  00                 	db	0
  1170  0169AB  00                 	db	0
  1171  0169AC  00                 	db	0
  1172  0169AD  00                 	db	0
  1173  0169AE  00                 	db	0
  1174  0169AF  00                 	db	0
  1175  0169B0  00                 	db	0
  1176  0169B1  00                 	db	0
  1177  0169B2  00                 	db	0
  1178  0169B3  00                 	db	0
  1179  0169B4  00                 	db	0
  1180  0169B5  00                 	db	0
  1181  0169B6  00                 	db	0
  1182  0169B7  00                 	db	0
  1183  0169B8  00                 	db	0
  1184  0169B9  00                 	db	0
  1185  0169BA  00                 	db	0
  1186  0169BB  00                 	db	0
  1187  0169BC  00                 	db	0
  1188  0169BD  00                 	db	0
  1189  0169BE  00                 	db	0
  1190  0169BF  00                 	db	0
  1191  0169C0  00                 	db	0
  1192  0169C1  00                 	db	0
  1193  0169C2  00                 	db	0
  1194  0169C3  00                 	db	0
  1195  0169C4  00                 	db	0
  1196  0169C5  00                 	db	0
  1197  0169C6  00                 	db	0
  1198  0169C7  00                 	db	0
  1199  0169C8  00                 	db	0
  1200  0169C9  00                 	db	0
  1201  0169CA  00                 	db	0
  1202  0169CB  00                 	db	0
  1203  0169CC  00                 	db	0
  1204  0169CD  00                 	db	0
  1205  0169CE  00                 	db	0
  1206  0169CF  00                 	db	0
  1207  0169D0  00                 	db	0
  1208  0169D1  00                 	db	0
  1209  0169D2  00                 	db	0
  1210  0169D3  00                 	db	0
  1211  0169D4  00                 	db	0
  1212  0169D5  00                 	db	0
  1213  0169D6  00                 	db	0
  1214  0169D7  00                 	db	0
  1215  0169D8  00                 	db	0
  1216  0169D9  00                 	db	0
  1217  0169DA  00                 	db	0
  1218  0169DB  00                 	db	0
  1219  0169DC  00                 	db	0
  1220  0169DD  00                 	db	0
  1221  0169DE  00                 	db	0
  1222  0169DF  00                 	db	0
  1223  0169E0  00                 	db	0
  1224  0169E1  00                 	db	0
  1225  0169E2  00                 	db	0
  1226  0169E3  00                 	db	0
  1227  0169E4  00                 	db	0
  1228  0169E5  00                 	db	0
  1229  0169E6  00                 	db	0
  1230  0169E7  00                 	db	0
  1231  0169E8  00                 	db	0
  1232  0169E9  00                 	db	0
  1233  0169EA  00                 	db	0
  1234  0169EB  00                 	db	0
  1235  0169EC  00                 	db	0
  1236  0169ED  00                 	db	0
  1237  0169EE  00                 	db	0
  1238  0169EF  00                 	db	0
  1239  0169F0  00                 	db	0
  1240  0169F1  00                 	db	0
  1241  0169F2  00                 	db	0
  1242  0169F3  00                 	db	0
  1243  0169F4  00                 	db	0
  1244  0169F5  00                 	db	0
  1245  0169F6  00                 	db	0
  1246  0169F7  00                 	db	0
  1247                           
  1248                           ;initializer for _C
  1249  0169F8  0000               	dw	0
  1250  0169FA  0000               	dw	0
  1251  0169FC  0000               	dw	0
  1252  0169FE  0000               	dw	0
  1253  016A00  0000               	dw	0
  1254  016A02  0000               	dw	0
  1255  016A04  0000               	dw	0
  1256  016A06  0000               	dw	0
  1257  016A08  0000               	dw	0
  1258  016A0A  0000               	dw	0
  1259  016A0C  0000               	dw	0
  1260  016A0E  0000               	dw	0
  1261  016A10  0000               	dw	0
  1262  016A12  0000               	dw	0
  1263  016A14  0000               	dw	0
  1264  016A16  0000               	dw	0
  1265  016A18  0000               	dw	0
  1266  016A1A  0000               	dw	0
  1267  016A1C  0000               	dw	0
  1268  016A1E  0000               	dw	0
  1269  016A20  0000               	dw	0
  1270  016A22  0000               	dw	0
  1271  016A24  0000               	dw	0
  1272  016A26  0000               	dw	0
  1273  016A28  0000               	dw	0
  1274  016A2A  0000               	dw	0
  1275  016A2C  0000               	dw	0
  1276  016A2E  0000               	dw	0
  1277  016A30  0000               	dw	0
  1278  016A32  0000               	dw	0
  1279  016A34  0000               	dw	0
  1280  016A36  0000               	dw	0
  1281  016A38  0000               	dw	0
  1282  016A3A  0000               	dw	0
  1283  016A3C  0000               	dw	0
  1284  016A3E  0000               	dw	0
  1285  016A40  0000               	dw	0
  1286  016A42  0000               	dw	0
  1287  016A44  0000               	dw	0
  1288  016A46  0000               	dw	0
  1289  016A48  0000               	dw	0
  1290  016A4A  0000               	dw	0
  1291  016A4C  0000               	dw	0
  1292  016A4E  0000               	dw	0
  1293  016A50  0000               	dw	0
  1294  016A52  0000               	dw	0
  1295  016A54  0000               	dw	0
  1296  016A56  0000               	dw	0
  1297  016A58  0000               	dw	0
  1298  016A5A  0000               	dw	0
  1299  016A5C  0000               	dw	0
  1300  016A5E  0000               	dw	0
  1301  016A60  0000               	dw	0
  1302  016A62  0000               	dw	0
  1303  016A64  0000               	dw	0
  1304  016A66  0000               	dw	0
  1305  016A68  0000               	dw	0
  1306  016A6A  0000               	dw	0
  1307  016A6C  0000               	dw	0
  1308  016A6E  0000               	dw	0
  1309  016A70  0000               	dw	0
  1310  016A72  0000               	dw	0
  1311  016A74  0000               	dw	0
  1312  016A76  0000               	dw	0
  1313  016A78  0000               	dw	0
  1314  016A7A  0000               	dw	0
  1315  016A7C  0000               	dw	0
  1316  016A7E  0000               	dw	0
  1317  016A80  0000               	dw	0
  1318  016A82  0000               	dw	0
  1319  016A84  0000               	dw	0
  1320  016A86  42FA               	dw	17146
  1321  016A88  0000               	dw	0
  1322  016A8A  0000               	dw	0
  1323  016A8C  0000               	dw	0
  1324  016A8E  0000               	dw	0
  1325  016A90  0000               	dw	0
  1326  016A92  0000               	dw	0
  1327  016A94  0000               	dw	0
  1328  016A96  0000               	dw	0
  1329  016A98  0000               	dw	0
  1330  016A9A  0000               	dw	0
  1331  016A9C  0000               	dw	0
  1332  016A9E  0000               	dw	0
  1333  016AA0  0000               	dw	0
  1334  016AA2  0000               	dw	0
  1335  016AA4  0000               	dw	0
  1336  016AA6  0000               	dw	0
  1337  016AA8  0000               	dw	0
  1338  016AAA  0000               	dw	0
  1339  016AAC  00                 	db	0
  1340  016AAD  01                 	db	1
  1341  016AAE  00                 	db	0
  1342  016AAF  00                 	db	0
  1343  016AB0  00                 	db	0
  1344  016AB1  00                 	db	0
  1345  016AB2  00                 	db	0
  1346  016AB3  00                 	db	0
  1347  016AB4  00                 	db	0
  1348  016AB5  00                 	db	0
  1349  016AB6  00                 	db	0
  1350  016AB7  00                 	db	0
  1351  016AB8  00                 	db	0
  1352  016AB9  00                 	db	0
  1353  016ABA  00                 	db	0
  1354  016ABB  00                 	db	0
  1355  016ABC  00                 	db	0
  1356  016ABD  00                 	db	0
  1357  016ABE  00                 	db	0
  1358  016ABF  00                 	db	0
  1359  016AC0  00                 	db	0
  1360  016AC1  00                 	db	0
  1361  016AC2  00                 	db	0
  1362  016AC3  00                 	db	0
  1363  016AC4  00                 	db	0
  1364  016AC5  00                 	db	0
  1365  016AC6  00                 	db	0
  1366  016AC7  00                 	db	0
  1367  016AC8  00                 	db	0
  1368  016AC9  00                 	db	0
  1369  016ACA  00                 	db	0
  1370  016ACB  00                 	db	0
  1371  016ACC  00                 	db	0
  1372  016ACD  00                 	db	0
  1373  016ACE  00                 	db	0
  1374  016ACF  00                 	db	0
  1375  016AD0  00                 	db	0
  1376  016AD1  00                 	db	0
  1377  016AD2  00                 	db	0
  1378  016AD3  00                 	db	0
  1379  016AD4  00                 	db	0
  1380  016AD5  00                 	db	0
  1381  016AD6  00                 	db	0
  1382  016AD7  00                 	db	0
  1383  016AD8  00                 	db	0
  1384  016AD9  00                 	db	0
  1385  016ADA  00                 	db	0
  1386  016ADB  00                 	db	0
  1387  016ADC  00                 	db	0
  1388  016ADD  00                 	db	0
  1389  016ADE  00                 	db	0
  1390  016ADF  00                 	db	0
  1391  016AE0  00                 	db	0
  1392  016AE1  00                 	db	0
  1393  016AE2  00                 	db	0
  1394  016AE3  00                 	db	0
  1395  016AE4  00                 	db	0
  1396  016AE5  00                 	db	0
  1397  016AE6  00                 	db	0
  1398  016AE7  00                 	db	0
  1399  016AE8  00                 	db	0
  1400  016AE9  00                 	db	0
  1401  016AEA  00                 	db	0
  1402  016AEB  00                 	db	0
  1403  016AEC  00                 	db	0
  1404  016AED  00                 	db	0
  1405  016AEE  00                 	db	0
  1406  016AEF  00                 	db	0
  1407  016AF0  00                 	db	0
  1408  016AF1  00                 	db	0
  1409  016AF2  00                 	db	0
  1410  016AF3  00                 	db	0
  1411  016AF4  00                 	db	0
  1412  016AF5  00                 	db	0
  1413  016AF6  00                 	db	0
  1414  016AF7  00                 	db	0
  1415  016AF8  00                 	db	0
  1416  016AF9  00                 	db	0
  1417  016AFA  00                 	db	0
  1418  016AFB  00                 	db	0
  1419  016AFC  00                 	db	0
  1420  016AFD  00                 	db	0
  1421  016AFE  00                 	db	0
  1422  016AFF  00                 	db	0
  1423  016B00  00                 	db	0
  1424  016B01  00                 	db	0
  1425  016B02  0000               	dw	0
  1426  016B04  0000               	dw	0
  1427  016B06  0000               	dw	0
  1428  016B08  0000               	dw	0
  1429  016B0A  0000               	dw	0
  1430  016B0C  0000               	dw	0
  1431  016B0E  0000               	dw	0
  1432  016B10  0000               	dw	0
  1433  016B12  0000               	dw	0
  1434  016B14  0000               	dw	0
  1435  016B16  01                 	db	1
  1436  016B17  00                 	db	0
  1437  016B18  00                 	db	0
  1438  016B19  00                 	db	0
  1439  016B1A  00                 	db	0
  1440  016B1B  00                 	db	0
  1441  016B1C  00                 	db	0
  1442  016B1D  00                 	db	0
  1443  016B1E  00                 	db	0
  1444                           
  1445                           	psect	idataBANK0
  1446  01B81A                     __pidataBANK0:
  1447                           	opt callstack 0
  1448                           
  1449                           ;initializer for _R
  1450  01B81A  0000               	dw	0
  1451  01B81C  0000               	dw	0
  1452  01B81E  0000               	dw	0
  1453  01B820  0000               	dw	0
  1454  01B822  0000               	dw	0
  1455  01B824  0000               	dw	0
  1456  01B826  0000               	dw	0
  1457  01B828  0000               	dw	0
  1458  01B82A  0000               	dw	0
  1459  01B82C  0000               	dw	0
  1460  01B82E  0000               	dw	0
  1461  01B830  0000               	dw	0
  1462  01B832  0000               	dw	0
  1463  01B834  0000               	dw	0
  1464  01B836  0000               	dw	0
  1465  01B838  0000               	dw	0
  1466  01B83A  0F67               	dw	3943
  1467  01B83C  0F8F               	dw	3983
  1468  01B83E  00                 	db	0
  1469  01B83F  0000               	dw	0
  1470  01B841  00                 	db	0
  1471                           
  1472                           	psect	idataBANK1
  1473  01A198                     __pidataBANK1:
  1474                           	opt callstack 0
  1475                           
  1476                           ;initializer for _V
  1477  01A198  00                 	db	0
  1478  01A199  00                 	db	0
  1479  01A19A  00                 	db	0
  1480  01A19B  00                 	db	0
  1481  01A19C  00                 	db	0
  1482  01A19D  00                 	db	0
  1483  01A19E  00                 	db	0
  1484  01A19F  00                 	db	0
  1485  01A1A0  00                 	db	0
  1486  01A1A1  00                 	db	0
  1487  01A1A2  00                 	db	0
  1488  01A1A3  00                 	db	0
  1489  01A1A4  00                 	db	0
  1490  01A1A5  00                 	db	0
  1491  01A1A6  00                 	db	0
  1492  01A1A7  00                 	db	0
  1493  01A1A8  00                 	db	0
  1494  01A1A9  00                 	db	0
  1495  01A1AA  00                 	db	0
  1496  01A1AB  00                 	db	0
  1497  01A1AC  00                 	db	0
  1498  01A1AD  00                 	db	0
  1499  01A1AE  00                 	db	0
  1500  01A1AF  00                 	db	0
  1501  01A1B0  00                 	db	0
  1502  01A1B1  00                 	db	0
  1503  01A1B2  00                 	db	0
  1504  01A1B3  00                 	db	0
  1505  01A1B4  00                 	db	0
  1506  01A1B5  00                 	db	0
  1507  01A1B6  00                 	db	0
  1508  01A1B7  00                 	db	0
  1509  01A1B8  00                 	db	0
  1510  01A1B9  00                 	db	0
  1511  01A1BA  00                 	db	0
  1512  01A1BB  00                 	db	0
  1513  01A1BC  00                 	db	0
  1514  01A1BD  00                 	db	0
  1515  01A1BE  00                 	db	0
  1516  01A1BF  00                 	db	0
  1517  01A1C0  00                 	db	0
  1518  01A1C1  00                 	db	0
  1519  01A1C2  00                 	db	0
  1520  01A1C3  00                 	db	0
  1521  01A1C4  00                 	db	0
  1522  01A1C5  00                 	db	0
  1523  01A1C6  00                 	db	0
  1524  01A1C7  00                 	db	0
  1525  01A1C8  00                 	db	0
  1526  01A1C9  00                 	db	0
  1527  01A1CA  00                 	db	0
  1528  01A1CB  00                 	db	0
  1529  01A1CC  00                 	db	0
  1530  01A1CD  00                 	db	0
  1531  01A1CE  00                 	db	0
  1532  01A1CF  00                 	db	0
  1533  01A1D0  00                 	db	0
  1534  01A1D1  00                 	db	0
  1535  01A1D2  00                 	db	0
  1536  01A1D3  00                 	db	0
  1537  01A1D4  00                 	db	0
  1538  01A1D5  00                 	db	0
  1539  01A1D6  00                 	db	0
  1540  01A1D7  00                 	db	0
  1541  01A1D8  00                 	db	0
  1542  01A1D9  00                 	db	0
  1543  01A1DA  00                 	db	0
  1544  01A1DB  00                 	db	0
  1545  01A1DC  00                 	db	0
  1546  01A1DD  00                 	db	0
  1547  01A1DE  00                 	db	0
  1548  01A1DF  00                 	db	0
  1549  01A1E0  00                 	db	0
  1550  01A1E1  00                 	db	0
  1551  01A1E2  00                 	db	0
  1552  01A1E3  00                 	db	0
  1553  01A1E4  00                 	db	0
  1554  01A1E5  00                 	db	0
  1555  01A1E6  00                 	db	0
  1556  01A1E7  00                 	db	0
  1557  01A1E8  00                 	db	0
  1558  01A1E9  00                 	db	0
  1559  01A1EA  00                 	db	0
  1560  01A1EB  00                 	db	0
  1561  01A1EC  00                 	db	0
  1562  01A1ED  00                 	db	0
  1563  01A1EE  00                 	db	0
  1564  01A1EF  00                 	db	0
  1565  01A1F0  00                 	db	0
  1566  01A1F1  00                 	db	0
  1567  01A1F2  00                 	db	0
  1568  01A1F3  00                 	db	0
  1569  01A1F4  00                 	db	0
  1570  01A1F5  00                 	db	0
  1571  01A1F6  00                 	db	0
  1572  01A1F7  00                 	db	0
  1573  01A1F8  00                 	db	0
  1574  01A1F9  00                 	db	0
  1575  01A1FA  00                 	db	0
  1576  01A1FB  00                 	db	0
  1577  01A1FC  00                 	db	0
  1578  01A1FD  00                 	db	0
  1579  01A1FE  00                 	db	0
  1580  01A1FF  00                 	db	0
  1581  01A200  00                 	db	0
  1582  01A201  00                 	db	0
  1583  01A202  00                 	db	0
  1584  01A203  00                 	db	0
  1585  01A204  00                 	db	0
  1586  01A205  00                 	db	0
  1587  01A206  00                 	db	0
  1588  01A207  00                 	db	0
  1589  01A208  00                 	db	0
  1590  01A209  00                 	db	0
  1591  01A20A  00                 	db	0
  1592  01A20B  00                 	db	0
  1593  01A20C  00                 	db	0
  1594  01A20D  00                 	db	0
  1595  01A20E  00                 	db	0
  1596  01A20F  00                 	db	0
  1597  01A210  00                 	db	0
  1598  01A211  00                 	db	0
  1599  01A212  00                 	db	0
  1600  01A213  00                 	db	0
  1601  01A214  00                 	db	0
  1602  01A215  00                 	db	0
  1603  01A216  00                 	db	0
  1604  01A217  00                 	db	0
  1605  01A218  00                 	db	0
  1606  01A219  0000               	dw	0
  1607  01A21B  0000               	dw	0
  1608  01A21D  0000               	dw	0
  1609  01A21F  0000               	dw	0
  1610  01A221  00                 	db	0
  1611  01A222  00                 	db	0
  1612  01A223  00                 	db	0
  1613  01A224  00                 	db	0
  1614  01A225  00                 	db	0
  1615  01A226  00                 	db	0
  1616  01A227  0000               	dw	0
  1617  01A229  0000               	dw	0
  1618  01A22B  0000               	dw	0
  1619  01A22D  0000               	dw	0
  1620  01A22F  0000               	dw	0
  1621  01A231  0000               	dw	0
  1622  01A233  00                 	db	0
  1623  01A234  00                 	db	0
  1624  01A235  00                 	db	0
  1625  01A236  00                 	db	0
  1626  01A237  00                 	db	0
  1627  01A238  00                 	db	0
  1628  01A239  00                 	db	0
  1629  01A23A  00                 	db	0
  1630  01A23B  00                 	db	0
  1631  01A23C  00                 	db	0
  1632  01A23D  00                 	db	0
  1633  01A23E  0000               	dw	0
  1634  01A240  0000               	dw	0
  1635  01A242  2D                 	db	45
  1636  01A243  00                 	db	0
  1637  01A244  00                 	db	0
  1638  01A245  00                 	db	0
  1639  01A246  00                 	db	0
  1640  01A247  0000               	dw	0
  1641  01A249  0000               	dw	0
  1642  01A24B  0000               	dw	0
  1643  01A24D  0000               	dw	0
  1644  01A24F  0000               	dw	0
  1645  01A251  0000               	dw	0
  1646  01A253  0000               	dw	0
  1647  01A255  0000               	dw	0
  1648                           
  1649                           ;initializer for _H
  1650  01A257  00                 	db	0
  1651  01A258  00                 	db	0
  1652  01A259  01                 	db	1
  1653  01A25A  00                 	db	0
  1654  01A25B  01                 	db	1
  1655  01A25C  00                 	db	0
  1656  01A25D  00                 	db	0
  1657                           
  1658                           	psect	idataBANK2
  1659  01BE6E                     __pidataBANK2:
  1660                           	opt callstack 0
  1661                           
  1662                           ;initializer for stoa@F1166
  1663  01BE6E  28                 	db	40
  1664  01BE6F  6E                 	db	110
  1665  01BE70  75                 	db	117
  1666  01BE71  6C                 	db	108
  1667  01BE72  6C                 	db	108
  1668  01BE73  29                 	db	41
  1669  01BE74  00                 	db	0
  1670                           
  1671                           	psect	mediumconst
  1672  00FA66                     __pmediumconst:
  1673                           	opt callstack 0
  1674  00FA66  00                 	db	0
  1675  00FA67                     _BVSOC_TABLE:
  1676                           	opt callstack 0
  1677  00FA67  59D8               	dw	23000
  1678  00FA69  0000               	dw	0
  1679  00FA6B  0005               	dw	5
  1680  00FA6D  0000               	dw	0
  1681  00FA6F  5B68               	dw	23400
  1682  00FA71  0000               	dw	0
  1683  00FA73  000A               	dw	10
  1684  00FA75  0000               	dw	0
  1685  00FA77  5C30               	dw	23600
  1686  00FA79  0000               	dw	0
  1687  00FA7B  0014               	dw	20
  1688  00FA7D  0000               	dw	0
  1689  00FA7F  5E38               	dw	24120
  1690  00FA81  0000               	dw	0
  1691  00FA83  0019               	dw	25
  1692  00FA85  0000               	dw	0
  1693  00FA87  5E88               	dw	24200
  1694  00FA89  0000               	dw	0
  1695  00FA8B  001E               	dw	30
  1696  00FA8D  0000               	dw	0
  1697  00FA8F  5F78               	dw	24440
  1698  00FA91  0000               	dw	0
  1699  00FA93  0028               	dw	40
  1700  00FA95  0000               	dw	0
  1701  00FA97  5FDC               	dw	24540
  1702  00FA99  0000               	dw	0
  1703  00FA9B  002D               	dw	45
  1704  00FA9D  0000               	dw	0
  1705  00FA9F  6018               	dw	24600
  1706  00FAA1  0000               	dw	0
  1707  00FAA3  0032               	dw	50
  1708  00FAA5  0000               	dw	0
  1709  00FAA7  6046               	dw	24646
  1710  00FAA9  0000               	dw	0
  1711  00FAAB  0035               	dw	53
  1712  00FAAD  0000               	dw	0
  1713  00FAAF  607C               	dw	24700
  1714  00FAB1  0000               	dw	0
  1715  00FAB3  0037               	dw	55
  1716  00FAB5  0000               	dw	0
  1717  00FAB7  60AE               	dw	24750
  1718  00FAB9  0000               	dw	0
  1719  00FABB  0039               	dw	57
  1720  00FABD  0000               	dw	0
  1721  00FABF  60E0               	dw	24800
  1722  00FAC1  0000               	dw	0
  1723  00FAC3  003C               	dw	60
  1724  00FAC5  0000               	dw	0
  1725  00FAC7  6112               	dw	24850
  1726  00FAC9  0000               	dw	0
  1727  00FACB  003F               	dw	63
  1728  00FACD  0000               	dw	0
  1729  00FACF  615D               	dw	24925
  1730  00FAD1  0000               	dw	0
  1731  00FAD3  0043               	dw	67
  1732  00FAD5  0000               	dw	0
  1733  00FAD7  61A8               	dw	25000
  1734  00FAD9  0000               	dw	0
  1735  00FADB  0046               	dw	70
  1736  00FADD  0000               	dw	0
  1737  00FADF  61BC               	dw	25020
  1738  00FAE1  0000               	dw	0
  1739  00FAE3  0048               	dw	72
  1740  00FAE5  0000               	dw	0
  1741  00FAE7  61D0               	dw	25040
  1742  00FAE9  0000               	dw	0
  1743  00FAEB  004B               	dw	75
  1744  00FAED  0000               	dw	0
  1745  00FAEF  61DA               	dw	25050
  1746  00FAF1  0000               	dw	0
  1747  00FAF3  0050               	dw	80
  1748  00FAF5  0000               	dw	0
  1749  00FAF7  61E4               	dw	25060
  1750  00FAF9  0000               	dw	0
  1751  00FAFB  0055               	dw	85
  1752  00FAFD  0000               	dw	0
  1753  00FAFF  61F8               	dw	25080
  1754  00FB01  0000               	dw	0
  1755  00FB03  005A               	dw	90
  1756  00FB05  0000               	dw	0
  1757  00FB07  6208               	dw	25096
  1758  00FB09  0000               	dw	0
  1759  00FB0B  005C               	dw	92
  1760  00FB0D  0000               	dw	0
  1761  00FB0F  6222               	dw	25122
  1762  00FB11  0000               	dw	0
  1763  00FB13  005D               	dw	93
  1764  00FB15  0000               	dw	0
  1765  00FB17  6234               	dw	25140
  1766  00FB19  0000               	dw	0
  1767  00FB1B  005F               	dw	95
  1768  00FB1D  0000               	dw	0
  1769  00FB1F  6248               	dw	25160
  1770  00FB21  0000               	dw	0
  1771  00FB23  0061               	dw	97
  1772  00FB25  0000               	dw	0
  1773  00FB27  625C               	dw	25180
  1774  00FB29  0000               	dw	0
  1775  00FB2B  0064               	dw	100
  1776  00FB2D  0000               	dw	0
  1777  00FB2F  6784               	dw	26500
  1778  00FB31  0000               	dw	0
  1779  00FB33  0062               	dw	98
  1780  00FB35  0000               	dw	0
  1781  00FB37                     __end_of_BVSOC_TABLE:
  1782                           	opt callstack 0
  1783  00FB37                     _T:
  1784                           	opt callstack 0
  1785  00FB37  63                 	db	99
  1786  00FB38  6F                 	db	111
  1787  00FB39  6D                 	db	109
  1788  00FB3A  6D                 	db	109
  1789  00FB3B  61                 	db	97
  1790  00FB3C  6E                 	db	110
  1791  00FB3D  64                 	db	100
  1792  00FB3E  73                 	db	115
  1793  00FB3F  20                 	db	32
  1794  00FB40  31                 	db	49
  1795  00FB41  00                 	db	0
  1796  00FB42  00                 	db	0
  1797  00FB43  00                 	db	0
  1798  00FB44  00                 	db	0
  1799  00FB45  00                 	db	0
  1800  00FB46  00                 	db	0
  1801  00FB47  00                 	db	0
  1802  00FB48  00                 	db	0
  1803  00FB49  64                 	db	100
  1804  00FB4A  69                 	db	105
  1805  00FB4B  73                 	db	115
  1806  00FB4C  70                 	db	112
  1807  00FB4D  6C                 	db	108
  1808  00FB4E  61                 	db	97
  1809  00FB4F  79                 	db	121
  1810  00FB50  73                 	db	115
  1811  00FB51  20                 	db	32
  1812  00FB52  31                 	db	49
  1813  00FB53  00                 	db	0
  1814  00FB54  00                 	db	0
  1815  00FB55  00                 	db	0
  1816  00FB56  00                 	db	0
  1817  00FB57  00                 	db	0
  1818  00FB58  00                 	db	0
  1819  00FB59  00                 	db	0
  1820  00FB5A  00                 	db	0
  1821  00FB5B  63                 	db	99
  1822  00FB5C  6F                 	db	111
  1823  00FB5D  6D                 	db	109
  1824  00FB5E  6D                 	db	109
  1825  00FB5F  61                 	db	97
  1826  00FB60  6E                 	db	110
  1827  00FB61  64                 	db	100
  1828  00FB62  73                 	db	115
  1829  00FB63  20                 	db	32
  1830  00FB64  32                 	db	50
  1831  00FB65  00                 	db	0
  1832  00FB66  00                 	db	0
  1833  00FB67  00                 	db	0
  1834  00FB68  00                 	db	0
  1835  00FB69  00                 	db	0
  1836  00FB6A  00                 	db	0
  1837  00FB6B  00                 	db	0
  1838  00FB6C  00                 	db	0
  1839  00FB6D  64                 	db	100
  1840  00FB6E  69                 	db	105
  1841  00FB6F  73                 	db	115
  1842  00FB70  70                 	db	112
  1843  00FB71  6C                 	db	108
  1844  00FB72  61                 	db	97
  1845  00FB73  79                 	db	121
  1846  00FB74  73                 	db	115
  1847  00FB75  20                 	db	32
  1848  00FB76  32                 	db	50
  1849  00FB77  00                 	db	0
  1850  00FB78  00                 	db	0
  1851  00FB79  00                 	db	0
  1852  00FB7A  00                 	db	0
  1853  00FB7B  00                 	db	0
  1854  00FB7C  00                 	db	0
  1855  00FB7D  00                 	db	0
  1856  00FB7E  00                 	db	0
  1857  00FB7F  63                 	db	99
  1858  00FB80  6F                 	db	111
  1859  00FB81  6D                 	db	109
  1860  00FB82  6D                 	db	109
  1861  00FB83  61                 	db	97
  1862  00FB84  6E                 	db	110
  1863  00FB85  64                 	db	100
  1864  00FB86  73                 	db	115
  1865  00FB87  20                 	db	32
  1866  00FB88  33                 	db	51
  1867  00FB89  00                 	db	0
  1868  00FB8A  00                 	db	0
  1869  00FB8B  00                 	db	0
  1870  00FB8C  00                 	db	0
  1871  00FB8D  00                 	db	0
  1872  00FB8E  00                 	db	0
  1873  00FB8F  00                 	db	0
  1874  00FB90  00                 	db	0
  1875  00FB91  64                 	db	100
  1876  00FB92  69                 	db	105
  1877  00FB93  73                 	db	115
  1878  00FB94  70                 	db	112
  1879  00FB95  6C                 	db	108
  1880  00FB96  61                 	db	97
  1881  00FB97  79                 	db	121
  1882  00FB98  73                 	db	115
  1883  00FB99  20                 	db	32
  1884  00FB9A  33                 	db	51
  1885  00FB9B  00                 	db	0
  1886  00FB9C  00                 	db	0
  1887  00FB9D  00                 	db	0
  1888  00FB9E  00                 	db	0
  1889  00FB9F  00                 	db	0
  1890  00FBA0  00                 	db	0
  1891  00FBA1  00                 	db	0
  1892  00FBA2  00                 	db	0
  1893  00FBA3  63                 	db	99
  1894  00FBA4  6F                 	db	111
  1895  00FBA5  6D                 	db	109
  1896  00FBA6  6D                 	db	109
  1897  00FBA7  61                 	db	97
  1898  00FBA8  6E                 	db	110
  1899  00FBA9  64                 	db	100
  1900  00FBAA  73                 	db	115
  1901  00FBAB  20                 	db	32
  1902  00FBAC  34                 	db	52
  1903  00FBAD  00                 	db	0
  1904  00FBAE  00                 	db	0
  1905  00FBAF  00                 	db	0
  1906  00FBB0  00                 	db	0
  1907  00FBB1  00                 	db	0
  1908  00FBB2  00                 	db	0
  1909  00FBB3  00                 	db	0
  1910  00FBB4  00                 	db	0
  1911  00FBB5  64                 	db	100
  1912  00FBB6  69                 	db	105
  1913  00FBB7  73                 	db	115
  1914  00FBB8  70                 	db	112
  1915  00FBB9  6C                 	db	108
  1916  00FBBA  61                 	db	97
  1917  00FBBB  79                 	db	121
  1918  00FBBC  73                 	db	115
  1919  00FBBD  20                 	db	32
  1920  00FBBE  34                 	db	52
  1921  00FBBF  00                 	db	0
  1922  00FBC0  00                 	db	0
  1923  00FBC1  00                 	db	0
  1924  00FBC2  00                 	db	0
  1925  00FBC3  00                 	db	0
  1926  00FBC4  00                 	db	0
  1927  00FBC5  00                 	db	0
  1928  00FBC6  00                 	db	0
  1929  00FBC7                     __end_of_T:
  1930                           	opt callstack 0
  1931  00FBC7                     _spin:
  1932                           	opt callstack 0
  1933  00FBC7  7C                 	db	124
  1934  00FBC8  7C                 	db	124
  1935  00FBC9  2F                 	db	47
  1936  00FBCA  2F                 	db	47
  1937  00FBCB  2D                 	db	45
  1938  00FBCC  2D                 	db	45
  1939  00FBCD  00                 	db	0
  1940  00FBCE  00                 	db	0
  1941  00FBCF  00                 	db	0
  1942  00FBD0  00                 	db	0
  1943  00FBD1  00                 	db	0
  1944  00FBD2  00                 	db	0
  1945  00FBD3  00                 	db	0
  1946  00FBD4  00                 	db	0
  1947  00FBD5  00                 	db	0
  1948  00FBD6  00                 	db	0
  1949  00FBD7  00                 	db	0
  1950  00FBD8  00                 	db	0
  1951  00FBD9  00                 	db	0
  1952  00FBDA  00                 	db	0
  1953  00FBDB  7C                 	db	124
  1954  00FBDC  7C                 	db	124
  1955  00FBDD  2F                 	db	47
  1956  00FBDE  2F                 	db	47
  1957  00FBDF  2D                 	db	45
  1958  00FBE0  2D                 	db	45
  1959  00FBE1  5C                 	db	92
  1960  00FBE2  5C                 	db	92
  1961  00FBE3  00                 	db	0
  1962  00FBE4  00                 	db	0
  1963  00FBE5  00                 	db	0
  1964  00FBE6  00                 	db	0
  1965  00FBE7  00                 	db	0
  1966  00FBE8  00                 	db	0
  1967  00FBE9  00                 	db	0
  1968  00FBEA  00                 	db	0
  1969  00FBEB  00                 	db	0
  1970  00FBEC  00                 	db	0
  1971  00FBED  00                 	db	0
  1972  00FBEE  00                 	db	0
  1973  00FBEF  4F                 	db	79
  1974  00FBF0  4F                 	db	79
  1975  00FBF1  4F                 	db	79
  1976  00FBF2  4F                 	db	79
  1977  00FBF3  4F                 	db	79
  1978  00FBF4  4F                 	db	79
  1979  00FBF5  2D                 	db	45
  1980  00FBF6  2D                 	db	45
  1981  00FBF7  5F                 	db	95
  1982  00FBF8  5F                 	db	95
  1983  00FBF9  2D                 	db	45
  1984  00FBFA  00                 	db	0
  1985  00FBFB  00                 	db	0
  1986  00FBFC  00                 	db	0
  1987  00FBFD  00                 	db	0
  1988  00FBFE  00                 	db	0
  1989  00FBFF  00                 	db	0
  1990  00FC00  00                 	db	0
  1991  00FC01  00                 	db	0
  1992  00FC02  00                 	db	0
  1993  00FC03  76                 	db	118
  1994  00FC04  76                 	db	118
  1995  00FC05  3C                 	db	60
  1996  00FC06  3C                 	db	60
  1997  00FC07  5E                 	db	94
  1998  00FC08  5E                 	db	94
  1999  00FC09  3E                 	db	62
  2000  00FC0A  3E                 	db	62
  2001  00FC0B  00                 	db	0
  2002  00FC0C  00                 	db	0
  2003  00FC0D  00                 	db	0
  2004  00FC0E  00                 	db	0
  2005  00FC0F  00                 	db	0
  2006  00FC10  00                 	db	0
  2007  00FC11  00                 	db	0
  2008  00FC12  00                 	db	0
  2009  00FC13  00                 	db	0
  2010  00FC14  00                 	db	0
  2011  00FC15  00                 	db	0
  2012  00FC16  00                 	db	0
  2013  00FC17  2E                 	db	46
  2014  00FC18  2E                 	db	46
  2015  00FC19  2A                 	db	42
  2016  00FC1A  2A                 	db	42
  2017  00FC1B  78                 	db	120
  2018  00FC1C  23                 	db	35
  2019  00FC1D  78                 	db	120
  2020  00FC1E  23                 	db	35
  2021  00FC1F  58                 	db	88
  2022  00FC20  58                 	db	88
  2023  00FC21  7C                 	db	124
  2024  00FC22  7C                 	db	124
  2025  00FC23  2D                 	db	45
  2026  00FC24  2D                 	db	45
  2027  00FC25  00                 	db	0
  2028  00FC26  00                 	db	0
  2029  00FC27  00                 	db	0
  2030  00FC28  00                 	db	0
  2031  00FC29  00                 	db	0
  2032  00FC2A  00                 	db	0
  2033  00FC2B  2E                 	db	46
  2034  00FC2C  2E                 	db	46
  2035  00FC2D  6F                 	db	111
  2036  00FC2E  6F                 	db	111
  2037  00FC2F  4F                 	db	79
  2038  00FC30  4F                 	db	79
  2039  00FC31  6F                 	db	111
  2040  00FC32  6F                 	db	111
  2041  00FC33  00                 	db	0
  2042  00FC34  00                 	db	0
  2043  00FC35  00                 	db	0
  2044  00FC36  00                 	db	0
  2045  00FC37  00                 	db	0
  2046  00FC38  00                 	db	0
  2047  00FC39  00                 	db	0
  2048  00FC3A  00                 	db	0
  2049  00FC3B  00                 	db	0
  2050  00FC3C  00                 	db	0
  2051  00FC3D  00                 	db	0
  2052  00FC3E  00                 	db	0
  2053  00FC3F                     __end_of_spin:
  2054                           	opt callstack 0
  2055  00FC3F  0000               	dw	0
  2056  00FC41  3F80               	dw	16256
  2057  00FC43  0000               	dw	0
  2058  00FC45  3FC0               	dw	16320
  2059  00FC47                     __end_of_bp:
  2060                           	opt callstack 0
  2061  00FC47  AA00               	dw	43520
  2062  00FC49  3FB8               	dw	16312
  2063  00FC4B                     __end_of_ivln2_h:
  2064                           	opt callstack 0
  2065  00FC4B  23C6               	dw	9158
  2066  00FC4D  B8F6               	dw	47350
  2067  00FC4F                     __end_of_cp_l:
  2068                           	opt callstack 0
  2069  00FC4F  4000               	dw	16384
  2070  00FC51  3F76               	dw	16246
  2071  00FC53                     __end_of_cp_h:
  2072                           	opt callstack 0
  2073  0000                     _IVTADL	set	14493
  2074  0000                     _IVTADH	set	14494
  2075  0000                     _IVTADU	set	14495
  2076  0000                     _PIR6bits	set	14758
  2077  0000                     _PIR4bits	set	14756
  2078  0000                     _PIE8bits	set	14744
  2079  0000                     _PIR8bits	set	14760
  2080  0000                     _SCANPR	set	14839
  2081  0000                     _DMA2PR	set	14836
  2082  0000                     _DMA1PR	set	14835
  2083  0000                     _MAINPR	set	14834
  2084  0000                     _ISRPR	set	14833
  2085  0000                     _PIE2bits	set	14738
  2086  0000                     _PIR2bits	set	14754
  2087  0000                     _PIE9bits	set	14745
  2088  0000                     _PIR9bits	set	14761
  2089  0000                     _PIE6bits	set	14742
  2090  0000                     _PIE3bits	set	14739
  2091  0000                     _PMD7	set	14791
  2092  0000                     _PMD6	set	14790
  2093  0000                     _PMD5	set	14789
  2094  0000                     _PMD4	set	14788
  2095  0000                     _PMD3	set	14787
  2096  0000                     _PMD2	set	14786
  2097  0000                     _PMD1	set	14785
  2098  0000                     _PMD0	set	14784
  2099  0000                     _OSCTUNE	set	14814
  2100  0000                     _OSCFRQ	set	14815
  2101  0000                     _OSCEN	set	14813
  2102  0000                     _OSCCON3	set	14811
  2103  0000                     _OSCCON1	set	14809
  2104  0000                     _IPR8bits	set	14728
  2105  0000                     _IPR9bits	set	14729
  2106  0000                     _IPR5bits	set	14725
  2107  0000                     _IPR1bits	set	14721
  2108  0000                     _IPR3bits	set	14723
  2109  0000                     _IPR6bits	set	14726
  2110  0000                     _IPR2bits	set	14722
  2111  0000                     _PIE5bits	set	14741
  2112  0000                     _PIE1bits	set	14737
  2113  0000                     _PIR5bits	set	14757
  2114  0000                     _PIR1bits	set	14753
  2115  0000                     _PLLR	set	118496
  2116  0000                     _SPI1SDIPPS	set	15071
  2117  0000                     _U1RXPPS	set	15077
  2118  0000                     _RC6PPS	set	14870
  2119  0000                     _RC5PPS	set	14869
  2120  0000                     _INT1PPS	set	15041
  2121  0000                     _RD1PPS	set	14873
  2122  0000                     _INT0PPS	set	15040
  2123  0000                     _RC3PPS	set	14867
  2124  0000                     _RB6PPS	set	14862
  2125  0000                     _SPI1SCKPPS	set	15070
  2126  0000                     _U2RXPPS	set	15080
  2127  0000                     _SLRCONF	set	14995
  2128  0000                     _SLRCONE	set	14979
  2129  0000                     _SLRCOND	set	14963
  2130  0000                     _SLRCONC	set	14947
  2131  0000                     _SLRCONB	set	14931
  2132  0000                     _SLRCONA	set	14915
  2133  0000                     _ODCOND	set	14962
  2134  0000                     _ODCONC	set	14946
  2135  0000                     _ODCONB	set	14930
  2136  0000                     _ODCONA	set	14914
  2137  0000                     _ODCONF	set	14994
  2138  0000                     _ODCONE	set	14978
  2139  0000                     _WPUC	set	14945
  2140  0000                     _WPUA	set	14913
  2141  0000                     _WPUB	set	14929
  2142  0000                     _WPUE	set	14977
  2143  0000                     _WPUF	set	14993
  2144  0000                     _WPUD	set	14961
  2145  0000                     _ANSELA	set	14912
  2146  0000                     _ANSELF	set	14992
  2147  0000                     _ANSELE	set	14976
  2148  0000                     _ANSELB	set	14928
  2149  0000                     _ANSELC	set	14944
  2150  0000                     _ANSELD	set	14960
  2151  0000                     _DMA2SSA	set	15321
  2152  0000                     _DMA1SSA	set	15353
  2153  0000                     _DMA2DSZ	set	15310
  2154  0000                     _DMA2SSZ	set	15319
  2155  0000                     _DMA2DSA	set	15312
  2156  0000                     _DMA1DSZ	set	15342
  2157  0000                     _DMA1SSZ	set	15351
  2158  0000                     _DMA1DSA	set	15344
  2159  0000                     _DMA2CON0bits	set	15324
  2160  0000                     _DMA2CON1bits	set	15325
  2161  0000                     _DMA1CON0bits	set	15356
  2162  0000                     _DMA1CON1bits	set	15357
  2163  0000                     _DMA2CON0	set	15324
  2164  0000                     _DMA2AIRQ	set	15326
  2165  0000                     _DMA2SIRQ	set	15327
  2166  0000                     _DMA2CON1	set	15325
  2167  0000                     _DMA1CON0	set	15356
  2168  0000                     _DMA1AIRQ	set	15358
  2169  0000                     _DMA1SIRQ	set	15359
  2170  0000                     _DMA1CON1	set	15357
  2171  0000                     _CLKRCON	set	15589
  2172  0000                     _CLKRCLK	set	15590
  2173  0000                     _SPI1INTFbits	set	15642
  2174  0000                     _SPI1RXB	set	15632
  2175  0000                     _SPI1TXB	set	15633
  2176  0000                     _SPI1TCNTL	set	15634
  2177  0000                     _SPI1CON0	set	15636
  2178  0000                     _SPI1CLK	set	15644
  2179  0000                     _SPI1BAUD	set	15641
  2180  0000                     _SPI1CON2	set	15638
  2181  0000                     _SPI1CON1	set	15637
  2182  0000                     _U2RXB	set	15824
  2183  0000                     _U2TXB	set	15826
  2184  0000                     _U2ERRIE	set	15842
  2185  0000                     _U2ERRIR	set	15841
  2186  0000                     _U2UIR	set	15840
  2187  0000                     _U2FIFO	set	15839
  2188  0000                     _U2BRGH	set	15838
  2189  0000                     _U2BRGL	set	15837
  2190  0000                     _U2CON2	set	15836
  2191  0000                     _U2CON1	set	15835
  2192  0000                     _U2CON0	set	15834
  2193  0000                     _U2P3L	set	15832
  2194  0000                     _U2P2L	set	15830
  2195  0000                     _U2P1L	set	15828
  2196  0000                     _U1RXB	set	15848
  2197  0000                     _U1ERRIE	set	15866
  2198  0000                     _U1ERRIR	set	15865
  2199  0000                     _U1UIR	set	15864
  2200  0000                     _U1FIFO	set	15863
  2201  0000                     _U1BRGH	set	15862
  2202  0000                     _U1BRGL	set	15861
  2203  0000                     _U1CON2	set	15860
  2204  0000                     _U1CON1	set	15859
  2205  0000                     _U1CON0	set	15858
  2206  0000                     _U1P3H	set	15857
  2207  0000                     _U1P3L	set	15856
  2208  0000                     _U1P2H	set	15855
  2209  0000                     _U1P2L	set	15854
  2210  0000                     _U1P1H	set	15853
  2211  0000                     _U1P1L	set	15852
  2212  0000                     _FVRCON	set	16065
  2213  0000                     _ADFLTRL	set	16102
  2214  0000                     _ADFLTRH	set	16103
  2215  0000                     _ADCON0bits	set	16120
  2216  0000                     _ADCON0	set	16120
  2217  0000                     _ADCLK	set	16127
  2218  0000                     _ADACT	set	16126
  2219  0000                     _ADREF	set	16125
  2220  0000                     _ADSTAT	set	16124
  2221  0000                     _ADCON3	set	16123
  2222  0000                     _ADCON2	set	16122
  2223  0000                     _ADCON1	set	16121
  2224  0000                     _ADPREH	set	16119
  2225  0000                     _ADPREL	set	16118
  2226  0000                     _ADCAP	set	16117
  2227  0000                     _ADACQH	set	16116
  2228  0000                     _ADACQL	set	16115
  2229  0000                     _ADPCH	set	16113
  2230  0000                     _ADRPT	set	16108
  2231  0000                     _ADACCU	set	16106
  2232  0000                     _ADSTPTH	set	16101
  2233  0000                     _ADSTPTL	set	16100
  2234  0000                     _ADUTHH	set	16097
  2235  0000                     _ADUTHL	set	16096
  2236  0000                     _ADLTHH	set	16095
  2237  0000                     _ADLTHL	set	16094
  2238  0000                     _CCPTMRS1bits	set	16223
  2239  0000                     _PORTFbits	set	16335
  2240  0000                     _LATFbits	set	16319
  2241  0000                     _LATCbits	set	16316
  2242  0000                     _LATDbits	set	16317
  2243  0000                     _PORTBbits	set	16331
  2244  0000                     _T3CONbits	set	16294
  2245  0000                     _T3CON	set	16294
  2246  0000                     _TMR3L	set	16292
  2247  0000                     _TMR3H	set	16293
  2248  0000                     _T3CLK	set	16297
  2249  0000                     _T3GATE	set	16296
  2250  0000                     _T3GCON	set	16295
  2251  0000                     _T2CON	set	16300
  2252  0000                     _T2TMR	set	16298
  2253  0000                     _T2PR	set	16299
  2254  0000                     _T2RST	set	16303
  2255  0000                     _T2HLT	set	16301
  2256  0000                     _T2CLKCON	set	16302
  2257  0000                     _PWM8DCL	set	16224
  2258  0000                     _PWM8DCH	set	16225
  2259  0000                     _PWM8CON	set	16226
  2260  0000                     _LATEbits	set	16318
  2261  0000                     _T5CONbits	set	16282
  2262  0000                     _T5CON	set	16282
  2263  0000                     _TMR5L	set	16280
  2264  0000                     _TMR5H	set	16281
  2265  0000                     _T5CLK	set	16285
  2266  0000                     _T5GATE	set	16284
  2267  0000                     _T5GCON	set	16283
  2268  0000                     _T6CON	set	16276
  2269  0000                     _T6TMR	set	16274
  2270  0000                     _T6PR	set	16275
  2271  0000                     _T6RST	set	16279
  2272  0000                     _T6HLT	set	16277
  2273  0000                     _T6CLKCON	set	16278
  2274  0000                     _TRISD	set	16325
  2275  0000                     _TRISC	set	16324
  2276  0000                     _TRISB	set	16323
  2277  0000                     _TRISA	set	16322
  2278  0000                     _TRISF	set	16327
  2279  0000                     _TRISE	set	16326
  2280  0000                     _LATC	set	16316
  2281  0000                     _LATB	set	16315
  2282  0000                     _LATF	set	16319
  2283  0000                     _LATA	set	16314
  2284  0000                     _LATD	set	16317
  2285  0000                     _LATE	set	16318
  2286  0000                     _IVTLOCKbits	set	16340
  2287  0000                     _IVTLOCK	set	16340
  2288  0000                     _INTCON0bits	set	16338
  2289  0000                     _GIE	set	130711
  2290  00FC53                     STR_65:
  2291                           
  2292                           ; BSR set to: 57
  2293  00FC53  20                 	db	32
  2294  00FC54  25                 	db	37
  2295  00FC55  63                 	db	99	;'c'
  2296  00FC56  20                 	db	32
  2297  00FC57  2C                 	db	44
  2298  00FC58  25                 	db	37
  2299  00FC59  6C                 	db	108	;'l'
  2300  00FC5A  75                 	db	117	;'u'
  2301  00FC5B  2C                 	db	44
  2302  00FC5C  25                 	db	37
  2303  00FC5D  34                 	db	52	;'4'
  2304  00FC5E  2E                 	db	46
  2305  00FC5F  34                 	db	52	;'4'
  2306  00FC60  66                 	db	102	;'f'
  2307  00FC61  2C                 	db	44
  2308  00FC62  25                 	db	37
  2309  00FC63  34                 	db	52	;'4'
  2310  00FC64  2E                 	db	46
  2311  00FC65  34                 	db	52	;'4'
  2312  00FC66  66                 	db	102	;'f'
  2313  00FC67  2C                 	db	44
  2314  00FC68  25                 	db	37
  2315  00FC69  34                 	db	52	;'4'
  2316  00FC6A  2E                 	db	46
  2317  00FC6B  34                 	db	52	;'4'
  2318  00FC6C  66                 	db	102	;'f'
  2319  00FC6D  2C                 	db	44
  2320  00FC6E  25                 	db	37
  2321  00FC6F  34                 	db	52	;'4'
  2322  00FC70  2E                 	db	46
  2323  00FC71  34                 	db	52	;'4'
  2324  00FC72  66                 	db	102	;'f'
  2325  00FC73  2C                 	db	44
  2326  00FC74  25                 	db	37
  2327  00FC75  34                 	db	52	;'4'
  2328  00FC76  2E                 	db	46
  2329  00FC77  33                 	db	51	;'3'
  2330  00FC78  66                 	db	102	;'f'
  2331  00FC79  2C                 	db	44
  2332  00FC7A  25                 	db	37
  2333  00FC7B  34                 	db	52	;'4'
  2334  00FC7C  2E                 	db	46
  2335  00FC7D  33                 	db	51	;'3'
  2336  00FC7E  66                 	db	102	;'f'
  2337  00FC7F  2C                 	db	44
  2338  00FC80  25                 	db	37
  2339  00FC81  34                 	db	52	;'4'
  2340  00FC82  2E                 	db	46
  2341  00FC83  33                 	db	51	;'3'
  2342  00FC84  66                 	db	102	;'f'
  2343  00FC85  2C                 	db	44
  2344  00FC86  25                 	db	37
  2345  00FC87  34                 	db	52	;'4'
  2346  00FC88  2E                 	db	46
  2347  00FC89  33                 	db	51	;'3'
  2348  00FC8A  66                 	db	102	;'f'
  2349  00FC8B  2C                 	db	44
  2350  00FC8C  25                 	db	37
  2351  00FC8D  34                 	db	52	;'4'
  2352  00FC8E  2E                 	db	46
  2353  00FC8F  33                 	db	51	;'3'
  2354  00FC90  66                 	db	102	;'f'
  2355  00FC91  2C                 	db	44
  2356  00FC92  25                 	db	37
  2357  00FC93  34                 	db	52	;'4'
  2358  00FC94  2E                 	db	46
  2359  00FC95  33                 	db	51	;'3'
  2360  00FC96  66                 	db	102	;'f'
  2361  00FC97  2C                 	db	44
  2362  00FC98  25                 	db	37
  2363  00FC99  64                 	db	100	;'d'
  2364  00FC9A  2C                 	db	44
  2365  00FC9B  25                 	db	37
  2366  00FC9C  64                 	db	100	;'d'
  2367  00FC9D  2C                 	db	44
  2368  00FC9E  25                 	db	37
  2369  00FC9F  32                 	db	50	;'2'
  2370  00FCA0  2E                 	db	46
  2371  00FCA1  36                 	db	54	;'6'
  2372  00FCA2  66                 	db	102	;'f'
  2373  00FCA3  2C                 	db	44
  2374  00FCA4  25                 	db	37
  2375  00FCA5  34                 	db	52	;'4'
  2376  00FCA6  2E                 	db	46
  2377  00FCA7  33                 	db	51	;'3'
  2378  00FCA8  66                 	db	102	;'f'
  2379  00FCA9  2C                 	db	44
  2380  00FCAA  25                 	db	37
  2381  00FCAB  64                 	db	100	;'d'
  2382  00FCAC  2C                 	db	44
  2383  00FCAD  25                 	db	37
  2384  00FCAE  64                 	db	100	;'d'
  2385  00FCAF  2C                 	db	44
  2386  00FCB0  25                 	db	37
  2387  00FCB1  6C                 	db	108	;'l'
  2388  00FCB2  75                 	db	117	;'u'
  2389  00FCB3  2C                 	db	44
  2390  00FCB4  25                 	db	37
  2391  00FCB5  6C                 	db	108	;'l'
  2392  00FCB6  75                 	db	117	;'u'
  2393  00FCB7  0D                 	db	13
  2394  00FCB8  0A                 	db	10
  2395  00FCB9  00                 	db	0
  2396  00FCBA                     STR_17:
  2397                           
  2398                           ; BSR set to: 57
  2399  00FCBA  52                 	db	82	;'R'
  2400  00FCBB  31                 	db	49	;'1'
  2401  00FCBC  20                 	db	32
  2402  00FCBD  25                 	db	37
  2403  00FCBE  32                 	db	50	;'2'
  2404  00FCBF  2E                 	db	46
  2405  00FCC0  33                 	db	51	;'3'
  2406  00FCC1  66                 	db	102	;'f'
  2407  00FCC2  20                 	db	32
  2408  00FCC3  25                 	db	37
  2409  00FCC4  33                 	db	51	;'3'
  2410  00FCC5  2E                 	db	46
  2411  00FCC6  34                 	db	52	;'4'
  2412  00FCC7  66                 	db	102	;'f'
  2413  00FCC8  20                 	db	32
  2414  00FCC9  20                 	db	32
  2415  00FCCA  20                 	db	32
  2416  00FCCB  20                 	db	32
  2417  00FCCC  20                 	db	32
  2418  00FCCD  20                 	db	32
  2419  00FCCE  20                 	db	32
  2420  00FCCF  20                 	db	32
  2421  00FCD0  20                 	db	32
  2422  00FCD1  20                 	db	32
  2423  00FCD2  20                 	db	32
  2424  00FCD3  00                 	db	0
  2425  00FCD4                     STR_18:
  2426                           
  2427                           ; BSR set to: 57
  2428  00FCD4  52                 	db	82	;'R'
  2429  00FCD5  32                 	db	50	;'2'
  2430  00FCD6  20                 	db	32
  2431  00FCD7  25                 	db	37
  2432  00FCD8  32                 	db	50	;'2'
  2433  00FCD9  2E                 	db	46
  2434  00FCDA  33                 	db	51	;'3'
  2435  00FCDB  66                 	db	102	;'f'
  2436  00FCDC  20                 	db	32
  2437  00FCDD  25                 	db	37
  2438  00FCDE  33                 	db	51	;'3'
  2439  00FCDF  2E                 	db	46
  2440  00FCE0  34                 	db	52	;'4'
  2441  00FCE1  66                 	db	102	;'f'
  2442  00FCE2  20                 	db	32
  2443  00FCE3  20                 	db	32
  2444  00FCE4  20                 	db	32
  2445  00FCE5  20                 	db	32
  2446  00FCE6  20                 	db	32
  2447  00FCE7  20                 	db	32
  2448  00FCE8  20                 	db	32
  2449  00FCE9  20                 	db	32
  2450  00FCEA  20                 	db	32
  2451  00FCEB  20                 	db	32
  2452  00FCEC  20                 	db	32
  2453  00FCED  00                 	db	0
  2454  00FCEE                     
  2455                           ; BSR set to: 57
  2456  00FCEE  20                 	db	32
  2457  00FCEF  4D                 	db	77	;'M'
  2458  00FCF0  65                 	db	101	;'e'
  2459  00FCF1  73                 	db	115	;'s'
  2460  00FCF2  67                 	db	103	;'g'
  2461  00FCF3  20                 	db	32
  2462  00FCF4  25                 	db	37
  2463  00FCF5  64                 	db	100	;'d'
  2464  00FCF6  20                 	db	32
  2465  00FCF7  53                 	db	83	;'S'
  2466  00FCF8  74                 	db	116	;'t'
  2467  00FCF9  61                 	db	97	;'a'
  2468  00FCFA  63                 	db	99	;'c'
  2469  00FCFB  6B                 	db	107	;'k'
  2470  00FCFC  20                 	db	32
  2471  00FCFD  25                 	db	37
  2472  00FCFE  64                 	db	100	;'d'
  2473  00FCFF  20                 	db	32
  2474  00FD00  20                 	db	32
  2475  00FD01  20                 	db	32
  2476  00FD02  20                 	db	32
  2477  00FD03  20                 	db	32
  2478  00FD04  20                 	db	32
  2479  00FD05  00                 	db	0
  2480  00FD06                     STR_9:
  2481                           
  2482                           ; BSR set to: 57
  2483  00FD06  53                 	db	83	;'S'
  2484  00FD07  20                 	db	32
  2485  00FD08  53                 	db	83	;'S'
  2486  00FD09  25                 	db	37
  2487  00FD0A  63                 	db	99	;'c'
  2488  00FD0B  43                 	db	67	;'C'
  2489  00FD0C  20                 	db	32
  2490  00FD0D  25                 	db	37
  2491  00FD0E  64                 	db	100	;'d'
  2492  00FD0F  20                 	db	32
  2493  00FD10  25                 	db	37
  2494  00FD11  32                 	db	50	;'2'
  2495  00FD12  2E                 	db	46
  2496  00FD13  34                 	db	52	;'4'
  2497  00FD14  66                 	db	102	;'f'
  2498  00FD15  20                 	db	32
  2499  00FD16  20                 	db	32
  2500  00FD17  20                 	db	32
  2501  00FD18  20                 	db	32
  2502  00FD19  20                 	db	32
  2503  00FD1A  20                 	db	32
  2504  00FD1B  20                 	db	32
  2505  00FD1C  00                 	db	0
  2506  00FD1D                     STR_16:
  2507                           
  2508                           ; BSR set to: 57
  2509  00FD1D  45                 	db	69	;'E'
  2510  00FD1E  53                 	db	83	;'S'
  2511  00FD1F  52                 	db	82	;'R'
  2512  00FD20  20                 	db	32
  2513  00FD21  20                 	db	32
  2514  00FD22  25                 	db	37
  2515  00FD23  32                 	db	50	;'2'
  2516  00FD24  2E                 	db	46
  2517  00FD25  36                 	db	54	;'6'
  2518  00FD26  66                 	db	102	;'f'
  2519  00FD27  20                 	db	32
  2520  00FD28  20                 	db	32
  2521  00FD29  20                 	db	32
  2522  00FD2A  20                 	db	32
  2523  00FD2B  20                 	db	32
  2524  00FD2C  20                 	db	32
  2525  00FD2D  20                 	db	32
  2526  00FD2E  20                 	db	32
  2527  00FD2F  20                 	db	32
  2528  00FD30  20                 	db	32
  2529  00FD31  20                 	db	32
  2530  00FD32  00                 	db	0
  2531  00FD33                     STR_10:
  2532                           
  2533                           ; BSR set to: 57
  2534  00FD33  53                 	db	83	;'S'
  2535  00FD34  74                 	db	116	;'t'
  2536  00FD35  61                 	db	97	;'a'
  2537  00FD36  74                 	db	116	;'t'
  2538  00FD37  69                 	db	105	;'i'
  2539  00FD38  63                 	db	99	;'c'
  2540  00FD39  20                 	db	32
  2541  00FD3A  53                 	db	83	;'S'
  2542  00FD3B  4F                 	db	79	;'O'
  2543  00FD3C  43                 	db	67	;'C'
  2544  00FD3D  20                 	db	32
  2545  00FD3E  25                 	db	37
  2546  00FD3F  64                 	db	100	;'d'
  2547  00FD40  20                 	db	32
  2548  00FD41  20                 	db	32
  2549  00FD42  20                 	db	32
  2550  00FD43  20                 	db	32
  2551  00FD44  20                 	db	32
  2552  00FD45  20                 	db	32
  2553  00FD46  20                 	db	32
  2554  00FD47  20                 	db	32
  2555  00FD48  00                 	db	0
  2556  00FD49                     STR_11:
  2557                           
  2558                           ; BSR set to: 57
  2559  00FD49  42                 	db	66	;'B'
  2560  00FD4A  61                 	db	97	;'a'
  2561  00FD4B  74                 	db	116	;'t'
  2562  00FD4C  74                 	db	116	;'t'
  2563  00FD4D  65                 	db	101	;'e'
  2564  00FD4E  72                 	db	114	;'r'
  2565  00FD4F  79                 	db	121	;'y'
  2566  00FD50  20                 	db	32
  2567  00FD51  41                 	db	65	;'A'
  2568  00FD52  68                 	db	104	;'h'
  2569  00FD53  20                 	db	32
  2570  00FD54  25                 	db	37
  2571  00FD55  33                 	db	51	;'3'
  2572  00FD56  2E                 	db	46
  2573  00FD57  32                 	db	50	;'2'
  2574  00FD58  66                 	db	102	;'f'
  2575  00FD59  20                 	db	32
  2576  00FD5A  20                 	db	32
  2577  00FD5B  20                 	db	32
  2578  00FD5C  20                 	db	32
  2579  00FD5D  20                 	db	32
  2580  00FD5E  00                 	db	0
  2581  00FD5F                     STR_15:
  2582                           
  2583                           ; BSR set to: 57
  2584  00FD5F  43                 	db	67	;'C'
  2585  00FD60  68                 	db	104	;'h'
  2586  00FD61  65                 	db	101	;'e'
  2587  00FD62  63                 	db	99	;'c'
  2588  00FD63  6B                 	db	107	;'k'
  2589  00FD64  69                 	db	105	;'i'
  2590  00FD65  6E                 	db	110	;'n'
  2591  00FD66  67                 	db	103	;'g'
  2592  00FD67  20                 	db	32
  2593  00FD68  25                 	db	37
  2594  00FD69  63                 	db	99	;'c'
  2595  00FD6A  20                 	db	32
  2596  00FD6B  25                 	db	37
  2597  00FD6C  63                 	db	99	;'c'
  2598  00FD6D  20                 	db	32
  2599  00FD6E  20                 	db	32
  2600  00FD6F  20                 	db	32
  2601  00FD70  20                 	db	32
  2602  00FD71  20                 	db	32
  2603  00FD72  20                 	db	32
  2604  00FD73  00                 	db	0
  2605  00FD74                     STR_37:
  2606                           
  2607                           ; BSR set to: 57
  2608  00FD74  45                 	db	69	;'E'
  2609  00FD75  53                 	db	83	;'S'
  2610  00FD76  52                 	db	82	;'R'
  2611  00FD77  20                 	db	32
  2612  00FD78  20                 	db	32
  2613  00FD79  25                 	db	37
  2614  00FD7A  32                 	db	50	;'2'
  2615  00FD7B  2E                 	db	46
  2616  00FD7C  36                 	db	54	;'6'
  2617  00FD7D  66                 	db	102	;'f'
  2618  00FD7E  20                 	db	32
  2619  00FD7F  20                 	db	32
  2620  00FD80  20                 	db	32
  2621  00FD81  20                 	db	32
  2622  00FD82  20                 	db	32
  2623  00FD83  20                 	db	32
  2624  00FD84  20                 	db	32
  2625  00FD85  20                 	db	32
  2626  00FD86  20                 	db	32
  2627  00FD87  00                 	db	0
  2628  00FD88                     STR_36:
  2629                           
  2630                           ; BSR set to: 57
  2631  00FD88  53                 	db	83	;'S'
  2632  00FD89  25                 	db	37
  2633  00FD8A  63                 	db	99	;'c'
  2634  00FD8B  43                 	db	67	;'C'
  2635  00FD8C  20                 	db	32
  2636  00FD8D  25                 	db	37
  2637  00FD8E  64                 	db	100	;'d'
  2638  00FD8F  20                 	db	32
  2639  00FD90  52                 	db	82	;'R'
  2640  00FD91  55                 	db	85	;'U'
  2641  00FD92  4E                 	db	78	;'N'
  2642  00FD93  20                 	db	32
  2643  00FD94  25                 	db	37
  2644  00FD95  64                 	db	100	;'d'
  2645  00FD96  20                 	db	32
  2646  00FD97  20                 	db	32
  2647  00FD98  20                 	db	32
  2648  00FD99  20                 	db	32
  2649  00FD9A  20                 	db	32
  2650  00FD9B  00                 	db	0
  2651  00FD9C                     STR_25:
  2652                           
  2653                           ; BSR set to: 57
  2654  00FD9C  50                 	db	80	;'P'
  2655  00FD9D  56                 	db	86	;'V'
  2656  00FD9E  20                 	db	32
  2657  00FD9F  25                 	db	37
  2658  00FDA0  63                 	db	99	;'c'
  2659  00FDA1  20                 	db	32
  2660  00FDA2  57                 	db	87	;'W'
  2661  00FDA3  48                 	db	72	;'H'
  2662  00FDA4  20                 	db	32
  2663  00FDA5  25                 	db	37
  2664  00FDA6  33                 	db	51	;'3'
  2665  00FDA7  2E                 	db	46
  2666  00FDA8  32                 	db	50	;'2'
  2667  00FDA9  66                 	db	102	;'f'
  2668  00FDAA  20                 	db	32
  2669  00FDAB  20                 	db	32
  2670  00FDAC  20                 	db	32
  2671  00FDAD  20                 	db	32
  2672  00FDAE  20                 	db	32
  2673  00FDAF  00                 	db	0
  2674  00FDB0                     STR_34:
  2675                           
  2676                           ; BSR set to: 57
  2677  00FDB0  42                 	db	66	;'B'
  2678  00FDB1  41                 	db	65	;'A'
  2679  00FDB2  54                 	db	84	;'T'
  2680  00FDB3  54                 	db	84	;'T'
  2681  00FDB4  20                 	db	32
  2682  00FDB5  50                 	db	80	;'P'
  2683  00FDB6  57                 	db	87	;'W'
  2684  00FDB7  52                 	db	82	;'R'
  2685  00FDB8  20                 	db	32
  2686  00FDB9  25                 	db	37
  2687  00FDBA  33                 	db	51	;'3'
  2688  00FDBB  2E                 	db	46
  2689  00FDBC  32                 	db	50	;'2'
  2690  00FDBD  66                 	db	102	;'f'
  2691  00FDBE  20                 	db	32
  2692  00FDBF  20                 	db	32
  2693  00FDC0  20                 	db	32
  2694  00FDC1  20                 	db	32
  2695  00FDC2  20                 	db	32
  2696  00FDC3  00                 	db	0
  2697  00FDC4                     STR_38:
  2698                           
  2699                           ; BSR set to: 57
  2700  00FDC4  52                 	db	82	;'R'
  2701  00FDC5  31                 	db	49	;'1'
  2702  00FDC6  20                 	db	32
  2703  00FDC7  25                 	db	37
  2704  00FDC8  32                 	db	50	;'2'
  2705  00FDC9  2E                 	db	46
  2706  00FDCA  33                 	db	51	;'3'
  2707  00FDCB  66                 	db	102	;'f'
  2708  00FDCC  20                 	db	32
  2709  00FDCD  25                 	db	37
  2710  00FDCE  33                 	db	51	;'3'
  2711  00FDCF  2E                 	db	46
  2712  00FDD0  34                 	db	52	;'4'
  2713  00FDD1  66                 	db	102	;'f'
  2714  00FDD2  20                 	db	32
  2715  00FDD3  20                 	db	32
  2716  00FDD4  20                 	db	32
  2717  00FDD5  20                 	db	32
  2718  00FDD6  20                 	db	32
  2719  00FDD7  00                 	db	0
  2720  00FDD8                     STR_39:
  2721                           
  2722                           ; BSR set to: 57
  2723  00FDD8  52                 	db	82	;'R'
  2724  00FDD9  32                 	db	50	;'2'
  2725  00FDDA  20                 	db	32
  2726  00FDDB  25                 	db	37
  2727  00FDDC  32                 	db	50	;'2'
  2728  00FDDD  2E                 	db	46
  2729  00FDDE  33                 	db	51	;'3'
  2730  00FDDF  66                 	db	102	;'f'
  2731  00FDE0  20                 	db	32
  2732  00FDE1  25                 	db	37
  2733  00FDE2  33                 	db	51	;'3'
  2734  00FDE3  2E                 	db	46
  2735  00FDE4  34                 	db	52	;'4'
  2736  00FDE5  66                 	db	102	;'f'
  2737  00FDE6  20                 	db	32
  2738  00FDE7  20                 	db	32
  2739  00FDE8  20                 	db	32
  2740  00FDE9  20                 	db	32
  2741  00FDEA  20                 	db	32
  2742  00FDEB  00                 	db	0
  2743  00FDEC                     STR_22:
  2744                           
  2745                           ; BSR set to: 57
  2746  00FDEC  50                 	db	80	;'P'
  2747  00FDED  56                 	db	86	;'V'
  2748  00FDEE  20                 	db	32
  2749  00FDEF  25                 	db	37
  2750  00FDF0  63                 	db	99	;'c'
  2751  00FDF1  20                 	db	32
  2752  00FDF2  50                 	db	80	;'P'
  2753  00FDF3  57                 	db	87	;'W'
  2754  00FDF4  52                 	db	82	;'R'
  2755  00FDF5  20                 	db	32
  2756  00FDF6  25                 	db	37
  2757  00FDF7  33                 	db	51	;'3'
  2758  00FDF8  2E                 	db	46
  2759  00FDF9  32                 	db	50	;'2'
  2760  00FDFA  66                 	db	102	;'f'
  2761  00FDFB  20                 	db	32
  2762  00FDFC  20                 	db	32
  2763  00FDFD  20                 	db	32
  2764  00FDFE  20                 	db	32
  2765  00FDFF  00                 	db	0
  2766  00FE00                     STR_35:
  2767                           
  2768                           ; BSR set to: 57
  2769  00FE00  42                 	db	66	;'B'
  2770  00FE01  41                 	db	65	;'A'
  2771  00FE02  48                 	db	72	;'H'
  2772  00FE03  20                 	db	32
  2773  00FE04  25                 	db	37
  2774  00FE05  33                 	db	51	;'3'
  2775  00FE06  2E                 	db	46
  2776  00FE07  32                 	db	50	;'2'
  2777  00FE08  66                 	db	102	;'f'
  2778  00FE09  20                 	db	32
  2779  00FE0A  50                 	db	80	;'P'
  2780  00FE0B  25                 	db	37
  2781  00FE0C  33                 	db	51	;'3'
  2782  00FE0D  2E                 	db	46
  2783  00FE0E  32                 	db	50	;'2'
  2784  00FE0F  66                 	db	102	;'f'
  2785  00FE10  20                 	db	32
  2786  00FE11  20                 	db	32
  2787  00FE12  20                 	db	32
  2788  00FE13  00                 	db	0
  2789  00FE14                     STR_58:
  2790                           
  2791                           ; BSR set to: 57
  2792  00FE14  20                 	db	32
  2793  00FE15  20                 	db	32
  2794  00FE16  20                 	db	32
  2795  00FE17  20                 	db	32
  2796  00FE18  20                 	db	32
  2797  00FE19  20                 	db	32
  2798  00FE1A  20                 	db	32
  2799  00FE1B  20                 	db	32
  2800  00FE1C  20                 	db	32
  2801  00FE1D  20                 	db	32
  2802  00FE1E  20                 	db	32
  2803  00FE1F  20                 	db	32
  2804  00FE20  20                 	db	32
  2805  00FE21  20                 	db	32
  2806  00FE22  20                 	db	32
  2807  00FE23  20                 	db	32
  2808  00FE24  20                 	db	32
  2809  00FE25  20                 	db	32
  2810  00FE26  00                 	db	0
  2811  00FE27                     STR_48:
  2812                           
  2813                           ; BSR set to: 57
  2814  00FE27  48                 	db	72	;'H'
  2815  00FE28  45                 	db	69	;'E'
  2816  00FE29  4C                 	db	76	;'L'
  2817  00FE2A  50                 	db	80	;'P'
  2818  00FE2B  20                 	db	32
  2819  00FE2C  25                 	db	37
  2820  00FE2D  73                 	db	115	;'s'
  2821  00FE2E  20                 	db	32
  2822  00FE2F  20                 	db	32
  2823  00FE30  20                 	db	32
  2824  00FE31  20                 	db	32
  2825  00FE32  20                 	db	32
  2826  00FE33  20                 	db	32
  2827  00FE34  20                 	db	32
  2828  00FE35  20                 	db	32
  2829  00FE36  20                 	db	32
  2830  00FE37  20                 	db	32
  2831  00FE38  20                 	db	32
  2832  00FE39  00                 	db	0
  2833  00FE3A                     
  2834                           ; BSR set to: 57
  2835  00FE3A  44                 	db	68	;'D'
  2836  00FE3B  49                 	db	73	;'I'
  2837  00FE3C  53                 	db	83	;'S'
  2838  00FE3D  50                 	db	80	;'P'
  2839  00FE3E  4C                 	db	76	;'L'
  2840  00FE3F  41                 	db	65	;'A'
  2841  00FE40  59                 	db	89	;'Y'
  2842  00FE41  20                 	db	32
  2843  00FE42  25                 	db	37
  2844  00FE43  73                 	db	115	;'s'
  2845  00FE44  20                 	db	32
  2846  00FE45  20                 	db	32
  2847  00FE46  20                 	db	32
  2848  00FE47  20                 	db	32
  2849  00FE48  20                 	db	32
  2850  00FE49  20                 	db	32
  2851  00FE4A  20                 	db	32
  2852  00FE4B  20                 	db	32
  2853  00FE4C  00                 	db	0
  2854  00FE4D                     STR_31:
  2855                           
  2856                           ; BSR set to: 57
  2857  00FE4D  42                 	db	66	;'B'
  2858  00FE4E  41                 	db	65	;'A'
  2859  00FE4F  54                 	db	84	;'T'
  2860  00FE50  20                 	db	32
  2861  00FE51  49                 	db	73	;'I'
  2862  00FE52  57                 	db	87	;'W'
  2863  00FE53  48                 	db	72	;'H'
  2864  00FE54  20                 	db	32
  2865  00FE55  25                 	db	37
  2866  00FE56  34                 	db	52	;'4'
  2867  00FE57  2E                 	db	46
  2868  00FE58  31                 	db	49	;'1'
  2869  00FE59  66                 	db	102	;'f'
  2870  00FE5A  20                 	db	32
  2871  00FE5B  20                 	db	32
  2872  00FE5C  20                 	db	32
  2873  00FE5D  20                 	db	32
  2874  00FE5E  20                 	db	32
  2875  00FE5F  00                 	db	0
  2876  00FE60                     STR_32:
  2877                           
  2878                           ; BSR set to: 57
  2879  00FE60  42                 	db	66	;'B'
  2880  00FE61  41                 	db	65	;'A'
  2881  00FE62  54                 	db	84	;'T'
  2882  00FE63  20                 	db	32
  2883  00FE64  4F                 	db	79	;'O'
  2884  00FE65  57                 	db	87	;'W'
  2885  00FE66  48                 	db	72	;'H'
  2886  00FE67  20                 	db	32
  2887  00FE68  25                 	db	37
  2888  00FE69  34                 	db	52	;'4'
  2889  00FE6A  2E                 	db	46
  2890  00FE6B  31                 	db	49	;'1'
  2891  00FE6C  66                 	db	102	;'f'
  2892  00FE6D  20                 	db	32
  2893  00FE6E  20                 	db	32
  2894  00FE6F  20                 	db	32
  2895  00FE70  20                 	db	32
  2896  00FE71  20                 	db	32
  2897  00FE72  00                 	db	0
  2898  00FE73                     STR_33:
  2899                           
  2900                           ; BSR set to: 57
  2901  00FE73  42                 	db	66	;'B'
  2902  00FE74  41                 	db	65	;'A'
  2903  00FE75  54                 	db	84	;'T'
  2904  00FE76  20                 	db	32
  2905  00FE77  54                 	db	84	;'T'
  2906  00FE78  57                 	db	87	;'W'
  2907  00FE79  48                 	db	72	;'H'
  2908  00FE7A  20                 	db	32
  2909  00FE7B  25                 	db	37
  2910  00FE7C  34                 	db	52	;'4'
  2911  00FE7D  2E                 	db	46
  2912  00FE7E  31                 	db	49	;'1'
  2913  00FE7F  66                 	db	102	;'f'
  2914  00FE80  20                 	db	32
  2915  00FE81  20                 	db	32
  2916  00FE82  20                 	db	32
  2917  00FE83  20                 	db	32
  2918  00FE84  20                 	db	32
  2919  00FE85  00                 	db	0
  2920  00FE86                     STR_27:
  2921                           
  2922                           ; BSR set to: 57
  2923  00FE86  49                 	db	73	;'I'
  2924  00FE87  4E                 	db	78	;'N'
  2925  00FE88  56                 	db	86	;'V'
  2926  00FE89  20                 	db	32
  2927  00FE8A  20                 	db	32
  2928  00FE8B  57                 	db	87	;'W'
  2929  00FE8C  48                 	db	72	;'H'
  2930  00FE8D  20                 	db	32
  2931  00FE8E  25                 	db	37
  2932  00FE8F  33                 	db	51	;'3'
  2933  00FE90  2E                 	db	46
  2934  00FE91  32                 	db	50	;'2'
  2935  00FE92  66                 	db	102	;'f'
  2936  00FE93  20                 	db	32
  2937  00FE94  20                 	db	32
  2938  00FE95  20                 	db	32
  2939  00FE96  20                 	db	32
  2940  00FE97  20                 	db	32
  2941  00FE98  00                 	db	0
  2942  00FE99                     STR_26:
  2943                           
  2944                           ; BSR set to: 57
  2945  00FE99  4C                 	db	76	;'L'
  2946  00FE9A  4F                 	db	79	;'O'
  2947  00FE9B  41                 	db	65	;'A'
  2948  00FE9C  44                 	db	68	;'D'
  2949  00FE9D  20                 	db	32
  2950  00FE9E  57                 	db	87	;'W'
  2951  00FE9F  48                 	db	72	;'H'
  2952  00FEA0  20                 	db	32
  2953  00FEA1  25                 	db	37
  2954  00FEA2  33                 	db	51	;'3'
  2955  00FEA3  2E                 	db	46
  2956  00FEA4  32                 	db	50	;'2'
  2957  00FEA5  66                 	db	102	;'f'
  2958  00FEA6  20                 	db	32
  2959  00FEA7  20                 	db	32
  2960  00FEA8  20                 	db	32
  2961  00FEA9  20                 	db	32
  2962  00FEAA  20                 	db	32
  2963  00FEAB  00                 	db	0
  2964  00FEAC                     STR_24:
  2965                           
  2966                           ; BSR set to: 57
  2967  00FEAC  49                 	db	73	;'I'
  2968  00FEAD  4E                 	db	78	;'N'
  2969  00FEAE  56                 	db	86	;'V'
  2970  00FEAF  20                 	db	32
  2971  00FEB0  20                 	db	32
  2972  00FEB1  50                 	db	80	;'P'
  2973  00FEB2  57                 	db	87	;'W'
  2974  00FEB3  52                 	db	82	;'R'
  2975  00FEB4  20                 	db	32
  2976  00FEB5  25                 	db	37
  2977  00FEB6  33                 	db	51	;'3'
  2978  00FEB7  2E                 	db	46
  2979  00FEB8  32                 	db	50	;'2'
  2980  00FEB9  66                 	db	102	;'f'
  2981  00FEBA  20                 	db	32
  2982  00FEBB  20                 	db	32
  2983  00FEBC  20                 	db	32
  2984  00FEBD  20                 	db	32
  2985  00FEBE  00                 	db	0
  2986  00FEBF                     STR_23:
  2987                           
  2988                           ; BSR set to: 57
  2989  00FEBF  4C                 	db	76	;'L'
  2990  00FEC0  4F                 	db	79	;'O'
  2991  00FEC1  41                 	db	65	;'A'
  2992  00FEC2  44                 	db	68	;'D'
  2993  00FEC3  20                 	db	32
  2994  00FEC4  50                 	db	80	;'P'
  2995  00FEC5  57                 	db	87	;'W'
  2996  00FEC6  52                 	db	82	;'R'
  2997  00FEC7  20                 	db	32
  2998  00FEC8  25                 	db	37
  2999  00FEC9  33                 	db	51	;'3'
  3000  00FECA  2E                 	db	46
  3001  00FECB  32                 	db	50	;'2'
  3002  00FECC  66                 	db	102	;'f'
  3003  00FECD  20                 	db	32
  3004  00FECE  20                 	db	32
  3005  00FECF  20                 	db	32
  3006  00FED0  20                 	db	32
  3007  00FED1  00                 	db	0
  3008  00FED2                     STR_29:
  3009                           
  3010                           ; BSR set to: 57
  3011  00FED2  42                 	db	66	;'B'
  3012  00FED3  56                 	db	86	;'V'
  3013  00FED4  20                 	db	32
  3014  00FED5  25                 	db	37
  3015  00FED6  32                 	db	50	;'2'
  3016  00FED7  2E                 	db	46
  3017  00FED8  32                 	db	50	;'2'
  3018  00FED9  66                 	db	102	;'f'
  3019  00FEDA  20                 	db	32
  3020  00FEDB  42                 	db	66	;'B'
  3021  00FEDC  41                 	db	65	;'A'
  3022  00FEDD  20                 	db	32
  3023  00FEDE  25                 	db	37
  3024  00FEDF  32                 	db	50	;'2'
  3025  00FEE0  2E                 	db	46
  3026  00FEE1  32                 	db	50	;'2'
  3027  00FEE2  66                 	db	102	;'f'
  3028  00FEE3  20                 	db	32
  3029  00FEE4  00                 	db	0
  3030  00FEE5                     STR_30:
  3031                           
  3032                           ; BSR set to: 57
  3033  00FEE5  43                 	db	67	;'C'
  3034  00FEE6  56                 	db	86	;'V'
  3035  00FEE7  20                 	db	32
  3036  00FEE8  25                 	db	37
  3037  00FEE9  32                 	db	50	;'2'
  3038  00FEEA  2E                 	db	46
  3039  00FEEB  32                 	db	50	;'2'
  3040  00FEEC  66                 	db	102	;'f'
  3041  00FEED  20                 	db	32
  3042  00FEEE  4C                 	db	76	;'L'
  3043  00FEEF  41                 	db	65	;'A'
  3044  00FEF0  20                 	db	32
  3045  00FEF1  25                 	db	37
  3046  00FEF2  32                 	db	50	;'2'
  3047  00FEF3  2E                 	db	46
  3048  00FEF4  32                 	db	50	;'2'
  3049  00FEF5  66                 	db	102	;'f'
  3050  00FEF6  20                 	db	32
  3051  00FEF7  00                 	db	0
  3052  00FEF8                     STR_28:
  3053                           
  3054                           ; BSR set to: 57
  3055  00FEF8  50                 	db	80	;'P'
  3056  00FEF9  56                 	db	86	;'V'
  3057  00FEFA  20                 	db	32
  3058  00FEFB  25                 	db	37
  3059  00FEFC  32                 	db	50	;'2'
  3060  00FEFD  2E                 	db	46
  3061  00FEFE  32                 	db	50	;'2'
  3062  00FEFF  66                 	db	102	;'f'
  3063  00FF00  20                 	db	32
  3064  00FF01  50                 	db	80	;'P'
  3065  00FF02  41                 	db	65	;'A'
  3066  00FF03  20                 	db	32
  3067  00FF04  25                 	db	37
  3068  00FF05  32                 	db	50	;'2'
  3069  00FF06  2E                 	db	46
  3070  00FF07  32                 	db	50	;'2'
  3071  00FF08  66                 	db	102	;'f'
  3072  00FF09  20                 	db	32
  3073  00FF0A  00                 	db	0
  3074  00FF0B                     STR_8:
  3075                           
  3076                           ; BSR set to: 57
  3077  00FF0B  42                 	db	66	;'B'
  3078  00FF0C  56                 	db	86	;'V'
  3079  00FF0D  20                 	db	32
  3080  00FF0E  25                 	db	37
  3081  00FF0F  32                 	db	50	;'2'
  3082  00FF10  2E                 	db	46
  3083  00FF11  34                 	db	52	;'4'
  3084  00FF12  66                 	db	102	;'f'
  3085  00FF13  20                 	db	32
  3086  00FF14  20                 	db	32
  3087  00FF15  20                 	db	32
  3088  00FF16  20                 	db	32
  3089  00FF17  20                 	db	32
  3090  00FF18  20                 	db	32
  3091  00FF19  20                 	db	32
  3092  00FF1A  20                 	db	32
  3093  00FF1B  20                 	db	32
  3094  00FF1C  00                 	db	0
  3095  00FF1D                     STR_4:
  3096                           
  3097                           ; BSR set to: 57
  3098  00FF1D  20                 	db	32
  3099  00FF1E  4E                 	db	78	;'N'
  3100  00FF1F  53                 	db	83	;'S'
  3101  00FF20  41                 	db	65	;'A'
  3102  00FF21  53                 	db	83	;'S'
  3103  00FF22  50                 	db	80	;'P'
  3104  00FF23  4F                 	db	79	;'O'
  3105  00FF24  4F                 	db	79	;'O'
  3106  00FF25  4B                 	db	75	;'K'
  3107  00FF26  20                 	db	32
  3108  00FF27  20                 	db	32
  3109  00FF28  20                 	db	32
  3110  00FF29  20                 	db	32
  3111  00FF2A  20                 	db	32
  3112  00FF2B  20                 	db	32
  3113  00FF2C  20                 	db	32
  3114  00FF2D  00                 	db	0
  3115  00FF2E                     STR_12:
  3116                           
  3117                           ; BSR set to: 57
  3118  00FF2E  42                 	db	66	;'B'
  3119  00FF2F  61                 	db	97	;'a'
  3120  00FF30  74                 	db	116	;'t'
  3121  00FF31  74                 	db	116	;'t'
  3122  00FF32  65                 	db	101	;'e'
  3123  00FF33  72                 	db	114	;'r'
  3124  00FF34  79                 	db	121	;'y'
  3125  00FF35  20                 	db	32
  3126  00FF36  45                 	db	69	;'E'
  3127  00FF37  53                 	db	83	;'S'
  3128  00FF38  52                 	db	82	;'R'
  3129  00FF39  20                 	db	32
  3130  00FF3A  20                 	db	32
  3131  00FF3B  20                 	db	32
  3132  00FF3C  20                 	db	32
  3133  00FF3D  20                 	db	32
  3134  00FF3E  00                 	db	0
  3135  00FF3F                     STR_13:
  3136                           
  3137                           ; BSR set to: 57
  3138  00FF3F  43                 	db	67	;'C'
  3139  00FF40  61                 	db	97	;'a'
  3140  00FF41  6C                 	db	108	;'l'
  3141  00FF42  63                 	db	99	;'c'
  3142  00FF43  75                 	db	117	;'u'
  3143  00FF44  6C                 	db	108	;'l'
  3144  00FF45  61                 	db	97	;'a'
  3145  00FF46  74                 	db	116	;'t'
  3146  00FF47  69                 	db	105	;'i'
  3147  00FF48  6F                 	db	111	;'o'
  3148  00FF49  6E                 	db	110	;'n'
  3149  00FF4A  20                 	db	32
  3150  00FF4B  20                 	db	32
  3151  00FF4C  20                 	db	32
  3152  00FF4D  20                 	db	32
  3153  00FF4E  20                 	db	32
  3154  00FF4F  00                 	db	0
  3155  00FF50                     STR_1:
  3156                           
  3157                           ; BSR set to: 57
  3158  00FF50  20                 	db	32
  3159  00FF51  4D                 	db	77	;'M'
  3160  00FF52  42                 	db	66	;'B'
  3161  00FF53  4D                 	db	77	;'M'
  3162  00FF54  43                 	db	67	;'C'
  3163  00FF55  20                 	db	32
  3164  00FF56  53                 	db	83	;'S'
  3165  00FF57  4F                 	db	79	;'O'
  3166  00FF58  4C                 	db	76	;'L'
  3167  00FF59  41                 	db	65	;'A'
  3168  00FF5A  52                 	db	82	;'R'
  3169  00FF5B  4D                 	db	77	;'M'
  3170  00FF5C  4F                 	db	79	;'O'
  3171  00FF5D  4E                 	db	78	;'N'
  3172  00FF5E  20                 	db	32
  3173  00FF5F  20                 	db	32
  3174  00FF60  00                 	db	0
  3175  00FF61                     STR_21:
  3176                           
  3177                           ; BSR set to: 57
  3178  00FF61  25                 	db	37
  3179  00FF62  64                 	db	100	;'d'
  3180  00FF63  20                 	db	32
  3181  00FF64  25                 	db	37
  3182  00FF65  32                 	db	50	;'2'
  3183  00FF66  2E                 	db	46
  3184  00FF67  34                 	db	52	;'4'
  3185  00FF68  66                 	db	102	;'f'
  3186  00FF69  2C                 	db	44
  3187  00FF6A  20                 	db	32
  3188  00FF6B  25                 	db	37
  3189  00FF6C  64                 	db	100	;'d'
  3190  00FF6D  20                 	db	32
  3191  00FF6E  20                 	db	32
  3192  00FF6F  20                 	db	32
  3193  00FF70  23                 	db	35
  3194  00FF71  00                 	db	0
  3195  00FF72                     STR_14:
  3196                           
  3197                           ; BSR set to: 57
  3198  00FF72  43                 	db	67	;'C'
  3199  00FF73  68                 	db	104	;'h'
  3200  00FF74  65                 	db	101	;'e'
  3201  00FF75  63                 	db	99	;'c'
  3202  00FF76  6B                 	db	107	;'k'
  3203  00FF77  20                 	db	32
  3204  00FF78  33                 	db	51	;'3'
  3205  00FF79  30                 	db	48	;'0'
  3206  00FF7A  20                 	db	32
  3207  00FF7B  73                 	db	115	;'s'
  3208  00FF7C  65                 	db	101	;'e'
  3209  00FF7D  63                 	db	99	;'c'
  3210  00FF7E  6F                 	db	111	;'o'
  3211  00FF7F  6E                 	db	110	;'n'
  3212  00FF80  64                 	db	100	;'d'
  3213  00FF81  73                 	db	115	;'s'
  3214  00FF82  00                 	db	0
  3215  00FF83                     STR_19:
  3216                           
  3217                           ; BSR set to: 57
  3218  00FF83  25                 	db	37
  3219  00FF84  64                 	db	100	;'d'
  3220  00FF85  20                 	db	32
  3221  00FF86  25                 	db	37
  3222  00FF87  32                 	db	50	;'2'
  3223  00FF88  2E                 	db	46
  3224  00FF89  34                 	db	52	;'4'
  3225  00FF8A  66                 	db	102	;'f'
  3226  00FF8B  20                 	db	32
  3227  00FF8C  20                 	db	32
  3228  00FF8D  20                 	db	32
  3229  00FF8E  25                 	db	37
  3230  00FF8F  64                 	db	100	;'d'
  3231  00FF90  20                 	db	32
  3232  00FF91  20                 	db	32
  3233  00FF92  00                 	db	0
  3234  00FF93                     STR_52:
  3235                           
  3236                           ; BSR set to: 57
  3237  00FF93  76                 	db	118	;'v'
  3238  00FF94  74                 	db	116	;'t'
  3239  00FF95  65                 	db	101	;'e'
  3240  00FF96  72                 	db	114	;'r'
  3241  00FF97  6D                 	db	109	;'m'
  3242  00FF98  20                 	db	32
  3243  00FF99  25                 	db	37
  3244  00FF9A  78                 	db	120	;'x'
  3245  00FF9B  3A                 	db	58	;':'
  3246  00FF9C  25                 	db	37
  3247  00FF9D  78                 	db	120	;'x'
  3248  00FF9E  20                 	db	32
  3249  00FF9F  20                 	db	32
  3250  00FFA0  20                 	db	32
  3251  00FFA1  00                 	db	0
  3252  00FFA2                     STR_2:
  3253                           
  3254                           ; BSR set to: 57
  3255  00FFA2  20                 	db	32
  3256  00FFA3  56                 	db	86	;'V'
  3257  00FFA4  65                 	db	101	;'e'
  3258  00FFA5  72                 	db	114	;'r'
  3259  00FFA6  73                 	db	115	;'s'
  3260  00FFA7  69                 	db	105	;'i'
  3261  00FFA8  6F                 	db	111	;'o'
  3262  00FFA9  6E                 	db	110	;'n'
  3263  00FFAA  20                 	db	32
  3264  00FFAB  25                 	db	37
  3265  00FFAC  73                 	db	115	;'s'
  3266  00FFAD  20                 	db	32
  3267  00FFAE  20                 	db	32
  3268  00FFAF  20                 	db	32
  3269  00FFB0  00                 	db	0
  3270  00FFB1                     STR_46:
  3271                           
  3272                           ; BSR set to: 57
  3273  00FFB1  44                 	db	68	;'D'
  3274  00FFB2  65                 	db	101	;'e'
  3275  00FFB3  63                 	db	99	;'c'
  3276  00FFB4  20                 	db	32
  3277  00FFB5  32                 	db	50	;'2'
  3278  00FFB6  31                 	db	49	;'1'
  3279  00FFB7  20                 	db	32
  3280  00FFB8  32                 	db	50	;'2'
  3281  00FFB9  30                 	db	48	;'0'
  3282  00FFBA  31                 	db	49	;'1'
  3283  00FFBB  39                 	db	57	;'9'
  3284  00FFBC  00                 	db	0
  3285  00FFBD                     STR_50:
  3286                           
  3287                           ; BSR set to: 57
  3288  00FFBD  25                 	db	37
  3289  00FFBE  73                 	db	115	;'s'
  3290  00FFBF  20                 	db	32
  3291  00FFC0  20                 	db	32
  3292  00FFC1  20                 	db	32
  3293  00FFC2  20                 	db	32
  3294  00FFC3  20                 	db	32
  3295  00FFC4  20                 	db	32
  3296  00FFC5  20                 	db	32
  3297  00FFC6  00                 	db	0
  3298  00FFC7                     STR_47:
  3299                           
  3300                           ; BSR set to: 57
  3301  00FFC7  31                 	db	49	;'1'
  3302  00FFC8  38                 	db	56	;'8'
  3303  00FFC9  3A                 	db	58	;':'
  3304  00FFCA  32                 	db	50	;'2'
  3305  00FFCB  38                 	db	56	;'8'
  3306  00FFCC  3A                 	db	58	;':'
  3307  00FFCD  34                 	db	52	;'4'
  3308  00FFCE  38                 	db	56	;'8'
  3309  00FFCF  00                 	db	0
  3310  00FFD0                     STR_3:
  3311                           
  3312                           ; BSR set to: 57
  3313  00FFD0  31                 	db	49	;'1'
  3314  00FFD1  2E                 	db	46
  3315  00FFD2  30                 	db	48	;'0'
  3316  00FFD3  30                 	db	48	;'0'
  3317  00FFD4  38                 	db	56	;'8'
  3318  00FFD5  00                 	db	0
  3319  00FFD6                     STR_66:
  3320                           
  3321                           ; BSR set to: 57
  3322  00FFD6  49                 	db	73	;'I'
  3323  00FFD7  4E                 	db	78	;'N'
  3324  00FFD8  46                 	db	70	;'F'
  3325  00FFD9  00                 	db	0
  3326  00FFDA                     STR_70:
  3327                           
  3328                           ; BSR set to: 57
  3329  00FFDA  4E                 	db	78	;'N'
  3330  00FFDB  41                 	db	65	;'A'
  3331  00FFDC  4E                 	db	78	;'N'
  3332  00FFDD  00                 	db	0
  3333  00FFDE                     STR_67:
  3334                           
  3335                           ; BSR set to: 57
  3336  00FFDE  69                 	db	105	;'i'
  3337  00FFDF  6E                 	db	110	;'n'
  3338  00FFE0  66                 	db	102	;'f'
  3339  00FFE1  00                 	db	0
  3340  00FFE2                     STR_71:
  3341                           
  3342                           ; BSR set to: 57
  3343  00FFE2  6E                 	db	110	;'n'
  3344  00FFE3  61                 	db	97	;'a'
  3345  00FFE4  6E                 	db	110	;'n'
  3346  00FFE5  00                 	db	0
  3347  00FFE6                     STR_97:
  3348                           
  3349                           ; BSR set to: 57
  3350  00FFE6  6C                 	db	108	;'l'
  3351  00FFE7  58                 	db	88	;'X'
  3352  00FFE8  00                 	db	0
  3353  00FFE9                     STR_74:
  3354                           
  3355                           ; BSR set to: 57
  3356  00FFE9  6C                 	db	108	;'l'
  3357  00FFEA  64                 	db	100	;'d'
  3358  00FFEB  00                 	db	0
  3359  00FFEC                     STR_83:
  3360                           
  3361                           ; BSR set to: 57
  3362  00FFEC  6C                 	db	108	;'l'
  3363  00FFED  66                 	db	102	;'f'
  3364  00FFEE  00                 	db	0
  3365  00FFEF                     STR_78:
  3366                           
  3367                           ; BSR set to: 57
  3368  00FFEF  6C                 	db	108	;'l'
  3369  00FFF0  69                 	db	105	;'i'
  3370  00FFF1  00                 	db	0
  3371  00FFF2                     STR_88:
  3372                           
  3373                           ; BSR set to: 57
  3374  00FFF2  6C                 	db	108	;'l'
  3375  00FFF3  75                 	db	117	;'u'
  3376  00FFF4  00                 	db	0
  3377  00FFF5                     STR_93:
  3378                           
  3379                           ; BSR set to: 57
  3380  00FFF5  6C                 	db	108	;'l'
  3381  00FFF6  78                 	db	120	;'x'
  3382  00FFF7  00                 	db	0
  3383  00FFF8                     STR_44:
  3384                           
  3385                           ; BSR set to: 57
  3386  00FFF8  25                 	db	37
  3387  00FFF9  63                 	db	99	;'c'
  3388  00FFFA  00                 	db	0
  3389  00FFFB                     STR_43:
  3390                           
  3391                           ; BSR set to: 57
  3392  00FFFB  25                 	db	37
  3393  00FFFC  73                 	db	115	;'s'
  3394  00FFFD  00                 	db	0
  3395  0000                     
  3396                           ; #config settings
  3397  00FFFE  00                 	db	0	; dummy byte at the end
  3398  0000                     
  3399                           	psect	cinit
  3400  019C2E                     __pcinit:
  3401                           	opt callstack 0
  3402  019C2E                     start_initialization:
  3403                           	opt callstack 0
  3404  019C2E                     __initialization:
  3405                           	opt callstack 0
  3406                           
  3407                           ; Initialize objects allocated to BIGRAM (807 bytes)
  3408                           ; load TBLPTR registers with __pidataBIGRAM
  3409  019C2E  0EF8               	movlw	low __pidataBIGRAM
  3410  019C30  6EF6               	movwf	tblptrl,c
  3411  019C32  0E67               	movlw	high __pidataBIGRAM
  3412  019C34  6EF7               	movwf	tblptrh,c
  3413  019C36  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3414  019C38  6EF8               	movwf	tblptru,c
  3415  019C3A  EE01  F0FF         	lfsr	0,__pdataBIGRAM
  3416  019C3E  EE20 F327          	lfsr	2,807
  3417  019C42                     copy_data0:
  3418  019C42  0009               	tblrd		*+
  3419  019C44  006F FFD7 FFEE     	movff	tablat,postinc0
  3420  019C4A  50DD               	movf	postdec2,w,c
  3421  019C4C  50D9               	movf	fsr2l,w,c
  3422  019C4E  E1F9               	bnz	copy_data0
  3423  019C50  50DA               	movf	fsr2h,w,c
  3424  019C52  E1F7               	bnz	copy_data0
  3425                           
  3426                           ; Initialize objects allocated to BANK2 (7 bytes)
  3427                           ; load TBLPTR registers with __pidataBANK2
  3428  019C54  0E6E               	movlw	low __pidataBANK2
  3429  019C56  6EF6               	movwf	tblptrl,c
  3430  019C58  0EBE               	movlw	high __pidataBANK2
  3431  019C5A  6EF7               	movwf	tblptrh,c
  3432  019C5C  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  3433  019C5E  6EF8               	movwf	tblptru,c
  3434  019C60  EE00  F2CE         	lfsr	0,__pdataBANK2
  3435  019C64  EE20 F007          	lfsr	2,7
  3436  019C68                     copy_data1:
  3437  019C68  0009               	tblrd		*+
  3438  019C6A  006F FFD7 FFEE     	movff	tablat,postinc0
  3439  019C70  50DD               	movf	postdec2,w,c
  3440  019C72  50D9               	movf	fsr2l,w,c
  3441  019C74  E1F9               	bnz	copy_data1
  3442                           
  3443                           ; Initialize objects allocated to BANK1 (198 bytes)
  3444                           ; load TBLPTR registers with __pidataBANK1
  3445  019C76  0E98               	movlw	low __pidataBANK1
  3446  019C78  6EF6               	movwf	tblptrl,c
  3447  019C7A  0EA1               	movlw	high __pidataBANK1
  3448  019C7C  6EF7               	movwf	tblptrh,c
  3449  019C7E  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3450  019C80  6EF8               	movwf	tblptru,c
  3451  019C82  EE00  F100         	lfsr	0,__pdataBANK1
  3452  019C86  EE20 F0C6          	lfsr	2,198
  3453  019C8A                     copy_data2:
  3454  019C8A  0009               	tblrd		*+
  3455  019C8C  006F FFD7 FFEE     	movff	tablat,postinc0
  3456  019C92  50DD               	movf	postdec2,w,c
  3457  019C94  50D9               	movf	fsr2l,w,c
  3458  019C96  E1F9               	bnz	copy_data2
  3459                           
  3460                           ; Initialize objects allocated to BANK0 (40 bytes)
  3461                           ; load TBLPTR registers with __pidataBANK0
  3462  019C98  0E1A               	movlw	low __pidataBANK0
  3463  019C9A  6EF6               	movwf	tblptrl,c
  3464  019C9C  0EB8               	movlw	high __pidataBANK0
  3465  019C9E  6EF7               	movwf	tblptrh,c
  3466  019CA0  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3467  019CA2  6EF8               	movwf	tblptru,c
  3468  019CA4  EE00  F0BD         	lfsr	0,__pdataBANK0
  3469  019CA8  EE20 F028          	lfsr	2,40
  3470  019CAC                     copy_data3:
  3471  019CAC  0009               	tblrd		*+
  3472  019CAE  006F FFD7 FFEE     	movff	tablat,postinc0
  3473  019CB4  50DD               	movf	postdec2,w,c
  3474  019CB6  50D9               	movf	fsr2l,w,c
  3475  019CB8  E1F9               	bnz	copy_data3
  3476                           
  3477                           ; Clear objects allocated to BIGRAM (482 bytes)
  3478  019CBA  EE02  F026         	lfsr	0,__pbssBIGRAM
  3479  019CBE  EE20 F1E2          	lfsr	2,482
  3480  019CC2                     clear_0:
  3481  019CC2  6AEE               	clrf	postinc0,c
  3482  019CC4  50DD               	movf	postdec2,w,c
  3483  019CC6  50D9               	movf	fsr2l,w,c
  3484  019CC8  E1FC               	bnz	clear_0
  3485  019CCA  50DA               	movf	fsr2h,w,c
  3486  019CCC  E1FA               	bnz	clear_0
  3487                           
  3488                           ; Clear objects allocated to BANK4 (255 bytes)
  3489  019CCE  EE01  F000         	lfsr	0,__pbssBANK4
  3490  019CD2  EE20 F0FF          	lfsr	2,255
  3491  019CD6                     clear_1:
  3492  019CD6  6AEE               	clrf	postinc0,c
  3493  019CD8  50DD               	movf	postdec2,w,c
  3494  019CDA  50D9               	movf	fsr2l,w,c
  3495  019CDC  E1FC               	bnz	clear_1
  3496  019CDE  50DA               	movf	fsr2h,w,c
  3497  019CE0  E1FA               	bnz	clear_1
  3498                           
  3499                           ; Clear objects allocated to BANK3 (198 bytes)
  3500  019CE2  EE00  F300         	lfsr	0,__pbssBANK3
  3501  019CE6  0EC6               	movlw	198
  3502  019CE8                     clear_2:
  3503  019CE8  6AEE               	clrf	postinc0,c
  3504  019CEA  06E8               	decf	wreg,f,c
  3505  019CEC  E1FD               	bnz	clear_2
  3506                           
  3507                           ; Clear objects allocated to BANK2 (206 bytes)
  3508  019CEE  EE00  F200         	lfsr	0,__pbssBANK2
  3509  019CF2  0ECE               	movlw	206
  3510  019CF4                     clear_3:
  3511  019CF4  6AEE               	clrf	postinc0,c
  3512  019CF6  06E8               	decf	wreg,f,c
  3513  019CF8  E1FD               	bnz	clear_3
  3514                           
  3515                           ; Clear objects allocated to BANK1 (51 bytes)
  3516  019CFA  EE00  F1C6         	lfsr	0,__pbssBANK1
  3517  019CFE  0E33               	movlw	51
  3518  019D00                     clear_4:
  3519  019D00  6AEE               	clrf	postinc0,c
  3520  019D02  06E8               	decf	wreg,f,c
  3521  019D04  E1FD               	bnz	clear_4
  3522                           
  3523                           ; Clear objects allocated to BANK0 (93 bytes)
  3524  019D06  EE00  F060         	lfsr	0,__pbssBANK0
  3525  019D0A  0E5D               	movlw	93
  3526  019D0C                     clear_5:
  3527  019D0C  6AEE               	clrf	postinc0,c
  3528  019D0E  06E8               	decf	wreg,f,c
  3529  019D10  E1FD               	bnz	clear_5
  3530                           
  3531                           ; Clear objects allocated to COMRAM (14 bytes)
  3532  019D12  EE00  F03A         	lfsr	0,__pbssCOMRAM
  3533  019D16  0E0E               	movlw	14
  3534  019D18                     clear_6:
  3535  019D18  6AEE               	clrf	postinc0,c
  3536  019D1A  06E8               	decf	wreg,f,c
  3537  019D1C  E1FD               	bnz	clear_6
  3538                           
  3539                           ;
  3540                           ; Setup IVTBASE
  3541                           ;
  3542  019D1E  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3543  019D20  6ED5               	movwf	213,c
  3544  019D22  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3545  019D24  6ED6               	movwf	214,c
  3546  019D26  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3547  019D28  6ED7               	movwf	215,c
  3548  019D2A                     end_of_initialization:
  3549                           	opt callstack 0
  3550  019D2A                     __end_of__initialization:
  3551                           	opt callstack 0
  3552  019D2A  0100               	movlb	0
  3553  019D2C  EF22  F089         	goto	_main	;jump to C main() function
  3554                           
  3555                           	psect	bssCOMRAM
  3556  00003A                     __pbssCOMRAM:
  3557                           	opt callstack 0
  3558  00003A                     _width:
  3559                           	opt callstack 0
  3560  00003A                     	ds	2
  3561  00003C                     _prec:
  3562                           	opt callstack 0
  3563  00003C                     	ds	2
  3564  00003E                     _flags:
  3565                           	opt callstack 0
  3566  00003E                     	ds	2
  3567  000040                     esr_check@esr_state:
  3568                           	opt callstack 0
  3569  000040                     	ds	1
  3570  000041                     calc_bsoc@log_update_wait:
  3571                           	opt callstack 0
  3572  000041                     	ds	1
  3573  000042                     check_day_time@day_delay:
  3574                           	opt callstack 0
  3575  000042                     	ds	1
  3576  000043                     _uart2RxHead:
  3577                           	opt callstack 0
  3578  000043                     	ds	1
  3579  000044                     _uart2TxBufferRemaining:
  3580                           	opt callstack 0
  3581  000044                     	ds	1
  3582  000045                     _uart2TxTail:
  3583                           	opt callstack 0
  3584  000045                     	ds	1
  3585  000046                     _uart1RxTail:
  3586                           	opt callstack 0
  3587  000046                     	ds	1
  3588  000047                     _uart1RxHead:
  3589                           	opt callstack 0
  3590  000047                     	ds	1
  3591                           
  3592                           	psect	bssBANK0
  3593  000060                     __pbssBANK0:
  3594                           	opt callstack 0
  3595  000060                     _spi_link:
  3596                           	opt callstack 0
  3597  000060                     	ds	12
  3598  00006C                     floorf@F524:
  3599                           	opt callstack 0
  3600  00006C                     	ds	4
  3601  000070                     fabsf@F463:
  3602                           	opt callstack 0
  3603  000070                     	ds	4
  3604  000074                     ___fpclassifyf@F463:
  3605                           	opt callstack 0
  3606  000074                     	ds	4
  3607  000078                     calc_ror_data@bcror:
  3608                           	opt callstack 0
  3609  000078                     	ds	4
  3610  00007C                     calc_ror_data@bvror:
  3611                           	opt callstack 0
  3612  00007C                     	ds	4
  3613  000080                     calc_model_data@bcror:
  3614                           	opt callstack 0
  3615  000080                     	ds	4
  3616  000084                     calc_model_data@bvror:
  3617                           	opt callstack 0
  3618  000084                     	ds	4
  3619  000088                     wdtdelay@dcount:
  3620                           	opt callstack 0
  3621  000088                     	ds	4
  3622  00008C                     _P:
  3623                           	opt callstack 0
  3624  00008C                     	ds	4
  3625  000090                     _TMR3_InterruptHandler:
  3626                           	opt callstack 0
  3627  000090                     	ds	3
  3628  000093                     _TMR5_InterruptHandler:
  3629                           	opt callstack 0
  3630  000093                     	ds	3
  3631  000096                     _TMR6_InterruptHandler:
  3632                           	opt callstack 0
  3633  000096                     	ds	3
  3634  000099                     _ADCC_ADTI_InterruptHandler:
  3635                           	opt callstack 0
  3636  000099                     	ds	3
  3637  00009C                     _ADCC_ADI_InterruptHandler:
  3638                           	opt callstack 0
  3639  00009C                     	ds	3
  3640  00009F                     _UART1_RxInterruptHandler:
  3641                           	opt callstack 0
  3642  00009F                     	ds	3
  3643  0000A2                     _UART2_TxInterruptHandler:
  3644                           	opt callstack 0
  3645  0000A2                     	ds	3
  3646  0000A5                     _UART2_RxInterruptHandler:
  3647                           	opt callstack 0
  3648  0000A5                     	ds	3
  3649  0000A8                     _INT1_InterruptHandler:
  3650                           	opt callstack 0
  3651  0000A8                     	ds	3
  3652  0000AB                     _INT0_InterruptHandler:
  3653                           	opt callstack 0
  3654  0000AB                     	ds	3
  3655  0000AE                     _nout:
  3656                           	opt callstack 0
  3657  0000AE                     	ds	2
  3658  0000B0                     TMR3_ISR@CountCallBack:
  3659                           	opt callstack 0
  3660  0000B0                     	ds	2
  3661  0000B2                     _timer3ReloadVal:
  3662                           	opt callstack 0
  3663  0000B2                     	ds	2
  3664  0000B4                     TMR5_ISR@CountCallBack:
  3665                           	opt callstack 0
  3666  0000B4                     	ds	2
  3667  0000B6                     _timer5ReloadVal:
  3668                           	opt callstack 0
  3669  0000B6                     	ds	2
  3670  0000B8                     _mode_sw:
  3671                           	opt callstack 0
  3672  0000B8                     	ds	1
  3673  0000B9                     _uart2RxCount:
  3674                           	opt callstack 0
  3675  0000B9                     	ds	1
  3676  0000BA                     _uart2RxTail:
  3677                           	opt callstack 0
  3678  0000BA                     	ds	1
  3679  0000BB                     _uart2TxHead:
  3680                           	opt callstack 0
  3681  0000BB                     	ds	1
  3682  0000BC                     _uart1RxCount:
  3683                           	opt callstack 0
  3684  0000BC                     	ds	1
  3685                           
  3686                           	psect	dataBANK0
  3687  0000BD                     __pdataBANK0:
  3688                           	opt callstack 0
  3689  0000BD                     _R:
  3690                           	opt callstack 0
  3691  0000BD                     	ds	40
  3692                           
  3693                           	psect	bssBANK1
  3694  0001C6                     __pbssBANK1:
  3695                           	opt callstack 0
  3696  0001C6                     _S:
  3697                           	opt callstack 0
  3698  0001C6                     	ds	41
  3699  0001EF                     spinners@s:
  3700                           	opt callstack 0
  3701  0001EF                     	ds	6
  3702  0001F5                     _utctime:
  3703                           	opt callstack 0
  3704  0001F5                     	ds	4
  3705                           
  3706                           	psect	dataBANK1
  3707  000100                     __pdataBANK1:
  3708                           	opt callstack 0
  3709  000100                     _V:
  3710                           	opt callstack 0
  3711  000100                     	ds	191
  3712  0001BF                     _H:
  3713                           	opt callstack 0
  3714  0001BF                     	ds	7
  3715                           
  3716                           	psect	bssBANK2
  3717  000200                     __pbssBANK2:
  3718                           	opt callstack 0
  3719  000200                     lp_filter@smooth:
  3720                           	opt callstack 0
  3721  000200                     	ds	84
  3722  000254                     _tickCount:
  3723                           	opt callstack 0
  3724  000254                     	ds	26
  3725  00026E                     _uart1RxBuffer:
  3726                           	opt callstack 0
  3727  00026E                     	ds	8
  3728  000276                     _dbuf:
  3729                           	opt callstack 0
  3730  000276                     	ds	80
  3731  0002C6                     _seed:
  3732                           	opt callstack 0
  3733  0002C6                     	ds	8
  3734                           
  3735                           	psect	dataBANK2
  3736  0002CE                     __pdataBANK2:
  3737                           	opt callstack 0
  3738  0002CE                     stoa@F1166:
  3739                           	opt callstack 0
  3740  0002CE                     	ds	7
  3741                           
  3742                           	psect	bssBANK3
  3743  000300                     __pbssBANK3:
  3744                           	opt callstack 0
  3745  000300                     _uart2TxBuffer:
  3746                           	opt callstack 0
  3747  000300                     	ds	64
  3748  000340                     _ring_buf2:
  3749                           	opt callstack 0
  3750  000340                     	ds	67
  3751  000383                     _ring_buf1:
  3752                           	opt callstack 0
  3753  000383                     	ds	67
  3754                           
  3755                           	psect	bssBANK4
  3756  000400                     __pbssBANK4:
  3757                           	opt callstack 0
  3758  000400                     _uart2RxBuffer:
  3759                           	opt callstack 0
  3760  000400                     	ds	255
  3761                           
  3762                           	psect	bssBIGRAM
  3763  000826                     __pbssBIGRAM:
  3764                           	opt callstack 0
  3765  000826                     _D:
  3766                           	opt callstack 0
  3767  000826                     	ds	482
  3768                           
  3769                           	psect	dataBIGRAM
  3770  0004FF                     __pdataBIGRAM:
  3771                           	opt callstack 0
  3772  0004FF                     _port_data:
  3773                           	opt callstack 0
  3774  0004FF                     	ds	512
  3775  0006FF                     _C:
  3776                           	opt callstack 0
  3777  0006FF                     	ds	295
  3778                           
  3779                           	psect	cstackBANK0
  3780  0000E5                     __pcstackBANK0:
  3781                           	opt callstack 0
  3782  0000E5                     ??_TMR3_ISR:
  3783                           
  3784                           ; 1 bytes @ 0x0
  3785  0000E5                     	ds	25
  3786                           
  3787                           	psect	cstackCOMRAM
  3788  000021                     __pcstackCOMRAM:
  3789                           	opt callstack 0
  3790  000021                     ??_ADCC_ThresholdISR:
  3791  000021                     
  3792                           ; 1 bytes @ 0x0
  3793  000021                     	ds	5
  3794  000026                     ??_TMR6_ISR:
  3795                           
  3796                           ; 1 bytes @ 0x5
  3797  000026                     	ds	1
  3798  000027                     ??_INT1_ISR:
  3799  000027                     
  3800                           ; 1 bytes @ 0x6
  3801  000027                     	ds	4
  3802  00002B                     ??_TMR5_ISR:
  3803                           
  3804                           ; 1 bytes @ 0xA
  3805  00002B                     	ds	15
  3806                           
  3807 ;;
  3808 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  3809 ;;
  3810 ;; *************** function _main *****************
  3811 ;; Defined at:
  3812 ;;		line 185 in file "main.c"
  3813 ;; Parameters:    Size  Location     Type
  3814 ;;		None
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;  esr_temp        4  [STACK] float 
  3817 ;;  i_esr           2  [STACK] unsigned short 
  3818 ;;  shape           1  [STACK] unsigned char 
  3819 ;;  k               1  [STACK] unsigned char 
  3820 ;;  j               1  [STACK] unsigned char 
  3821 ;;  i               1  [STACK] unsigned char 
  3822 ;;  inp_index       1  [STACK] unsigned char 
  3823 ;;  mode            1  [STACK] enum E17013
  3824 ;;  i_ror           1  [STACK] unsigned char 
  3825 ;; Return value:  Size  Location     Type
  3826 ;;                  1  [STACK] void 
  3827 ;; Registers used:
  3828 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3829 ;; Tracked objects:
  3830 ;;		On entry : 0/0
  3831 ;;		On exit  : 0/0
  3832 ;;		Unchanged: 0/0
  3833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3838 ;;Total ram usage:        0 bytes
  3839 ;; Hardware stack levels required when called:   28
  3840 ;; This function calls:
  3841 ;;		_SYSTEM_Initialize
  3842 ;;		_StartTimer
  3843 ;;		_TimerDone
  3844 ;;		_WaitMs
  3845 ;;		___fladd
  3846 ;;		___flge
  3847 ;;		___fltol
  3848 ;;		_calc_model_data
  3849 ;;		_calc_ror_data
  3850 ;;		_check_adc_scan
  3851 ;;		_check_enter_button
  3852 ;;		_check_help
  3853 ;;		_clear_adc_scan
  3854 ;;		_clear_hid_pflags
  3855 ;;		_conv_raw_result
  3856 ;;		_convert_adc_data
  3857 ;;		_eaDogM_WriteCommand
  3858 ;;		_esr_check
  3859 ;;		_fabsf
  3860 ;;		_get_raw_result
  3861 ;;		_get_switch
  3862 ;;		_get_vterm_ptr
  3863 ;;		_hid_display
  3864 ;;		_init_bsoc
  3865 ;;		_init_display
  3866 ;;		_init_port_dma
  3867 ;;		_lp_filter
  3868 ;;		_mode_lamp_dim
  3869 ;;		_set_display_info
  3870 ;;		_set_load_relay_one
  3871 ;;		_set_load_relay_two
  3872 ;;		_set_vterm
  3873 ;;		_spinners
  3874 ;;		_sprintf
  3875 ;;		_srand
  3876 ;;		_start_adc_scan
  3877 ;;		_start_switch_handler
  3878 ;;		_static_soc
  3879 ;;		_update_lcd
  3880 ;; This function is called by:
  3881 ;;		Startup code after reset
  3882 ;; This function uses a reentrant model
  3883 ;;
  3884                           
  3885                           	psect	text0
  3886  011244                     __ptext0:
  3887                           	opt callstack 0
  3888  011244                     _main:
  3889                           	opt callstack 0
  3890                           
  3891                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3892  011244  0E11               	movlw	17
  3893  011246  26E1               	addwf	fsr1l,f,c
  3894  011248  0E00               	movlw	0
  3895  01124A  22E2               	addwfc	fsr1h,f,c
  3896                           
  3897                           ;main.c: 187:  UI_STATES mode;;main.c: 188:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  3898                           ;stkvar	_inp_index @ sp[(-17)+14]
  3899                           
  3900                           ;incstack = 0
  3901  01124C  0EFD               	movlw	-3
  3902  01124E  6AE3               	clrf	plusw1,c
  3903                           
  3904                           ;stkvar	_i @ sp[(-17)+13]
  3905  011250  0EFC               	movlw	-4
  3906  011252  6AE3               	clrf	plusw1,c
  3907                           
  3908                           ;stkvar	_j @ sp[(-17)+12]
  3909  011254  0EFB               	movlw	-5
  3910  011256  6AE3               	clrf	plusw1,c
  3911  011258  2AE3               	incf	plusw1,f,c
  3912                           
  3913                           ;stkvar	_k @ sp[(-17)+11]
  3914  01125A  0EFA               	movlw	-6
  3915  01125C  6AE3               	clrf	plusw1,c
  3916  01125E  82E3               	bsf	plusw1,1,c
  3917                           
  3918                           ;main.c: 191:  SYSTEM_Initialize();
  3919  011260  EC80  F0D8         	call	_SYSTEM_Initialize	;wreg free
  3920                           
  3921                           ; BSR set to: 60
  3922                           ;main.c: 194:  (INTCON0bits.GIEH = 1);
  3923  011264  8ED2               	bsf	210,7,c	;volatile
  3924                           
  3925                           ; BSR set to: 60
  3926                           ;main.c: 197:  (INTCON0bits.GIEL = 1);
  3927  011266  8CD2               	bsf	210,6,c	;volatile
  3928                           
  3929                           ; BSR set to: 60
  3930                           ;main.c: 199:  V.ui_state = UI_STATE_INIT;
  3931  011268  0101               	movlb	1	; () banked
  3932  01126A  6B00               	clrf	_V& (0+255),b	;volatile
  3933                           
  3934                           ; BSR set to: 1
  3935                           ;main.c: 204:  WaitMs(300);
  3936  01126C  0E2C               	movlw	44
  3937  01126E  6EE6               	movwf	postinc1,c
  3938  011270  0E01               	movlw	1
  3939  011272  6EE6               	movwf	postinc1,c
  3940  011274  ECD4  F0DA         	call	_WaitMs	;wreg free
  3941                           
  3942                           ;main.c: 205:  if (PORTBbits.RB0) {
  3943  011278  A0CB               	btfss	203,0,c	;volatile
  3944  01127A  D004               	goto	l12931
  3945                           
  3946                           ;main.c: 206:   mode = UI_STATE_HOST;
  3947                           ;stkvar	_mode @ sp[(-17)+15]
  3948  01127C  0EFE               	movlw	-2
  3949  01127E  6AE3               	clrf	plusw1,c
  3950  011280  2AE3               	incf	plusw1,f,c
  3951                           
  3952                           ;main.c: 207:  } else {
  3953  011282  D004               	goto	l12933
  3954  011284                     l12931:
  3955                           
  3956                           ;main.c: 208:   mode = UI_STATE_LOG;
  3957                           ;stkvar	_mode @ sp[(-17)+15]
  3958  011284  0EFE               	movlw	-2
  3959  011286  6AE3               	clrf	plusw1,c
  3960  011288  80E3               	bsf	plusw1,0,c
  3961  01128A  82E3               	bsf	plusw1,1,c	;indir
  3962  01128C                     l12933:
  3963                           
  3964                           ;main.c: 211:  if (mode == UI_STATE_HOST) {
  3965                           ;stkvar	_mode @ sp[(-17)+15]
  3966  01128C  0EFE               	movlw	-2
  3967  01128E  04E3               	decf	plusw1,w,c
  3968  011290  A4D8               	btfss	status,2,c
  3969  011292  D007               	goto	l1324
  3970                           
  3971                           ;main.c: 212:   do { LATDbits.LATD0 = 1; } while(0);
  3972  011294  80BD               	bsf	189,0,c	;volatile
  3973                           
  3974                           ;main.c: 213:   V.mode_pwm = 70;
  3975  011296  0E00               	movlw	0
  3976  011298  0101               	movlb	1	; () banked
  3977  01129A  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  3978  01129C  0E46               	movlw	70
  3979  01129E  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  3980                           
  3981                           ;main.c: 214:  } else {
  3982  0112A0  D004               	goto	l12937
  3983  0112A2                     l1324:
  3984  0112A2  90BD               	bcf	189,0,c	;volatile
  3985                           
  3986                           ;main.c: 216:   V.mode_pwm = 0;
  3987  0112A4  0101               	movlb	1	; () banked
  3988  0112A6  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  3989  0112A8  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  3990  0112AA                     l12937:
  3991                           
  3992                           ; BSR set to: 1
  3993                           ;main.c: 218:  mode_lamp_dim(V.mode_pwm);
  3994  0112AA  0060  F657  FFE6   	movff	_V+149,postinc1
  3995  0112B0  0060  F65B  FFE6   	movff	_V+150,postinc1
  3996  0112B6  EC77  F0DE         	call	_mode_lamp_dim	;wreg free
  3997  0112BA  D32C               	goto	l13059
  3998  0112BC                     l12939:
  3999                           
  4000                           ; BSR set to: 1
  4001                           ;main.c: 226:    init_port_dma();
  4002  0112BC  EC3E  F0DB         	call	_init_port_dma	;wreg free
  4003                           
  4004                           ; BSR set to: 59
  4005                           ;main.c: 228:    init_display();
  4006  0112C0  EC13  F0CF         	call	_init_display	;wreg free
  4007                           
  4008                           ; BSR set to: 61
  4009                           ;main.c: 229:    eaDogM_WriteCommand(0b00001100);
  4010  0112C4  0E0C               	movlw	12
  4011  0112C6  6EE6               	movwf	postinc1,c
  4012  0112C8  ECE3  F0DE         	call	_eaDogM_WriteCommand	;wreg free
  4013                           
  4014                           ; BSR set to: 0
  4015                           ;main.c: 233:    set_load_relay_one(1);
  4016  0112CC  0E01               	movlw	1
  4017  0112CE  6EE6               	movwf	postinc1,c
  4018  0112D0  ECCB  F0DE         	call	_set_load_relay_one	;wreg free
  4019                           
  4020                           ;main.c: 234:    set_load_relay_two(1);
  4021  0112D4  0E01               	movlw	1
  4022  0112D6  6EE6               	movwf	postinc1,c
  4023  0112D8  ECC3  F0DE         	call	_set_load_relay_two	;wreg free
  4024                           
  4025                           ;main.c: 236:    V.ui_state = mode;
  4026                           ;stkvar	_mode @ sp[(-17)+15]
  4027  0112DC  0EFE               	movlw	-2
  4028  0112DE  006F FF8C  F100    	movff	plusw1,_V	;volatile
  4029                           
  4030                           ;main.c: 237:    srand(1957);
  4031  0112E4  0EA5               	movlw	165
  4032  0112E6  6EE6               	movwf	postinc1,c
  4033  0112E8  0E07               	movlw	7
  4034  0112EA  6EE6               	movwf	postinc1,c
  4035  0112EC  EC0A  F0DB         	call	_srand	;wreg free
  4036                           
  4037                           ; BSR set to: 2
  4038                           ;main.c: 238:    set_vterm(0);
  4039  0112F0  0E00               	movlw	0
  4040  0112F2  6EE6               	movwf	postinc1,c
  4041  0112F4  EC21  F0DE         	call	_set_vterm	;wreg free
  4042                           
  4043                           ;main.c: 239:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  4044  0112F8  0E50               	movlw	low STR_1
  4045  0112FA  6EE6               	movwf	postinc1,c
  4046  0112FC  0EFF               	movlw	high STR_1
  4047  0112FE  6EE6               	movwf	postinc1,c
  4048  011300  0E00               	movlw	0
  4049  011302  6EE6               	movwf	postinc1,c
  4050  011304  0E00               	movlw	0
  4051  011306  6EE6               	movwf	postinc1,c
  4052  011308  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  4053  01130C  0060  F007  FFE6   	movff	btemp,postinc1
  4054  011312  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4055  011318  0E04               	movlw	4
  4056  01131A  6EE6               	movwf	postinc1,c
  4057  01131C  EC92  F0CD         	call	_sprintf	;wreg free
  4058                           
  4059                           ; BSR set to: 0
  4060                           ;main.c: 240:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "1.008");
  4061  011320  0ED0               	movlw	low STR_3
  4062  011322  6EE6               	movwf	postinc1,c
  4063  011324  0EFF               	movlw	high STR_3
  4064  011326  6EE6               	movwf	postinc1,c
  4065  011328  0EA2               	movlw	low STR_2
  4066  01132A  6EE6               	movwf	postinc1,c
  4067  01132C  0EFF               	movlw	high STR_2
  4068  01132E  6EE6               	movwf	postinc1,c
  4069  011330  0E00               	movlw	0
  4070  011332  6EE6               	movwf	postinc1,c
  4071  011334  0E01               	movlw	1
  4072  011336  6EE6               	movwf	postinc1,c
  4073  011338  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  4074  01133C  0060  F007  FFE6   	movff	btemp,postinc1
  4075  011342  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4076  011348  0E06               	movlw	6
  4077  01134A  6EE6               	movwf	postinc1,c
  4078  01134C  EC92  F0CD         	call	_sprintf	;wreg free
  4079                           
  4080                           ; BSR set to: 0
  4081                           ;main.c: 241:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  4082  011350  0E1D               	movlw	low STR_4
  4083  011352  6EE6               	movwf	postinc1,c
  4084  011354  0EFF               	movlw	high STR_4
  4085  011356  6EE6               	movwf	postinc1,c
  4086  011358  0E00               	movlw	0
  4087  01135A  6EE6               	movwf	postinc1,c
  4088  01135C  0E02               	movlw	2
  4089  01135E  6EE6               	movwf	postinc1,c
  4090  011360  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  4091  011364  0060  F007  FFE6   	movff	btemp,postinc1
  4092  01136A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4093  011370  0E04               	movlw	4
  4094  011372  6EE6               	movwf	postinc1,c
  4095  011374  EC92  F0CD         	call	_sprintf	;wreg free
  4096                           
  4097                           ; BSR set to: 0
  4098                           ;main.c: 242:    sprintf(get_vterm_ptr(0, 2), "                ");
  4099  011378  0E16               	movlw	low (STR_58+2)
  4100  01137A  6EE6               	movwf	postinc1,c
  4101  01137C  0EFE               	movlw	high (STR_58+2)
  4102  01137E  6EE6               	movwf	postinc1,c
  4103  011380  0E02               	movlw	2
  4104  011382  6EE6               	movwf	postinc1,c
  4105  011384  0E00               	movlw	0
  4106  011386  6EE6               	movwf	postinc1,c
  4107  011388  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  4108  01138C  0060  F007  FFE6   	movff	btemp,postinc1
  4109  011392  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4110  011398  0E04               	movlw	4
  4111  01139A  6EE6               	movwf	postinc1,c
  4112  01139C  EC92  F0CD         	call	_sprintf	;wreg free
  4113                           
  4114                           ; BSR set to: 0
  4115                           ;main.c: 243:    sprintf(get_vterm_ptr(1, 2), "                ");
  4116  0113A0  0E16               	movlw	low (STR_58+2)
  4117  0113A2  6EE6               	movwf	postinc1,c
  4118  0113A4  0EFE               	movlw	high (STR_58+2)
  4119  0113A6  6EE6               	movwf	postinc1,c
  4120  0113A8  0E02               	movlw	2
  4121  0113AA  6EE6               	movwf	postinc1,c
  4122  0113AC  0E01               	movlw	1
  4123  0113AE  6EE6               	movwf	postinc1,c
  4124  0113B0  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  4125  0113B4  0060  F007  FFE6   	movff	btemp,postinc1
  4126  0113BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4127  0113C0  0E04               	movlw	4
  4128  0113C2  6EE6               	movwf	postinc1,c
  4129  0113C4  EC92  F0CD         	call	_sprintf	;wreg free
  4130                           
  4131                           ; BSR set to: 0
  4132                           ;main.c: 244:    sprintf(get_vterm_ptr(2, 2), "                ");
  4133  0113C8  0E16               	movlw	low (STR_58+2)
  4134  0113CA  6EE6               	movwf	postinc1,c
  4135  0113CC  0EFE               	movlw	high (STR_58+2)
  4136  0113CE  6EE6               	movwf	postinc1,c
  4137  0113D0  0E02               	movlw	2
  4138  0113D2  6EE6               	movwf	postinc1,c
  4139  0113D4  0E02               	movlw	2
  4140  0113D6  6EE6               	movwf	postinc1,c
  4141  0113D8  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  4142  0113DC  0060  F007  FFE6   	movff	btemp,postinc1
  4143  0113E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4144  0113E8  0E04               	movlw	4
  4145  0113EA  6EE6               	movwf	postinc1,c
  4146  0113EC  EC92  F0CD         	call	_sprintf	;wreg free
  4147                           
  4148                           ; BSR set to: 0
  4149                           ;main.c: 245:    update_lcd(0);
  4150  0113F0  0E00               	movlw	0
  4151  0113F2  6EE6               	movwf	postinc1,c
  4152  0113F4  EC0A  F0CD         	call	_update_lcd	;wreg free
  4153                           
  4154                           ;main.c: 246:    WaitMs(1000);
  4155  0113F8  0EE8               	movlw	232
  4156  0113FA  6EE6               	movwf	postinc1,c
  4157  0113FC  0E03               	movlw	3
  4158  0113FE  6EE6               	movwf	postinc1,c
  4159  011400  ECD4  F0DA         	call	_WaitMs	;wreg free
  4160                           
  4161                           ;main.c: 247:    StartTimer(TMR_DISPLAY, 250);
  4162  011404  0EFA               	movlw	250
  4163  011406  6EE6               	movwf	postinc1,c
  4164  011408  0E00               	movlw	0
  4165  01140A  6EE6               	movwf	postinc1,c
  4166  01140C  0E0A               	movlw	10
  4167  01140E  6EE6               	movwf	postinc1,c
  4168  011410  ECE1  F0D9         	call	_StartTimer	;wreg free
  4169                           
  4170                           ;main.c: 248:    StartTimer(TMR_ADC, 200);
  4171  011414  0EC8               	movlw	200
  4172  011416  6EE6               	movwf	postinc1,c
  4173  011418  0E00               	movlw	0
  4174  01141A  6EE6               	movwf	postinc1,c
  4175  01141C  0E01               	movlw	1
  4176  01141E  6EE6               	movwf	postinc1,c
  4177  011420  ECE1  F0D9         	call	_StartTimer	;wreg free
  4178                           
  4179                           ;main.c: 249:    StartTimer(TMR_INFO, 3000);
  4180  011424  0EB8               	movlw	184
  4181  011426  6EE6               	movwf	postinc1,c
  4182  011428  0E0B               	movlw	11
  4183  01142A  6EE6               	movwf	postinc1,c
  4184  01142C  0E07               	movlw	7
  4185  01142E  6EE6               	movwf	postinc1,c
  4186  011430  ECE1  F0D9         	call	_StartTimer	;wreg free
  4187                           
  4188                           ;main.c: 250:    StartTimer(TMR_FLIPPER, 1500);
  4189  011434  0EDC               	movlw	220
  4190  011436  6EE6               	movwf	postinc1,c
  4191  011438  0E05               	movlw	5
  4192  01143A  6EE6               	movwf	postinc1,c
  4193  01143C  0E0B               	movlw	11
  4194  01143E  6EE6               	movwf	postinc1,c
  4195  011440  ECE1  F0D9         	call	_StartTimer	;wreg free
  4196                           
  4197                           ;main.c: 251:    StartTimer(TMR_HELPDIS, 3000);
  4198  011444  0EB8               	movlw	184
  4199  011446  6EE6               	movwf	postinc1,c
  4200  011448  0E0B               	movlw	11
  4201  01144A  6EE6               	movwf	postinc1,c
  4202  01144C  0E09               	movlw	9
  4203  01144E  6EE6               	movwf	postinc1,c
  4204  011450  ECE1  F0D9         	call	_StartTimer	;wreg free
  4205                           
  4206                           ;main.c: 253:    start_adc_scan();
  4207  011454  ECC0  F0D6         	call	_start_adc_scan	;wreg free
  4208                           
  4209                           ;main.c: 254:    start_switch_handler();
  4210  011458  ECF2  F0DD         	call	_start_switch_handler	;wreg free
  4211                           
  4212                           ; BSR set to: 57
  4213                           ;main.c: 255:    WaitMs(1000);
  4214  01145C  0EE8               	movlw	232
  4215  01145E  6EE6               	movwf	postinc1,c
  4216  011460  0E03               	movlw	3
  4217  011462  6EE6               	movwf	postinc1,c
  4218  011464  ECD4  F0DA         	call	_WaitMs	;wreg free
  4219                           
  4220                           ;main.c: 260:    i_ror = 1;
  4221                           ;stkvar	_i_ror @ sp[(-17)+16]
  4222  011468  0EFF               	movlw	-1
  4223  01146A  6AE3               	clrf	plusw1,c
  4224  01146C  2AE3               	incf	plusw1,f,c
  4225  01146E                     l12989:
  4226                           
  4227                           ;main.c: 262:     calc_ror_data();
  4228  01146E  EC2E  F0C4         	call	_calc_ror_data	;wreg free
  4229                           
  4230                           ;main.c: 263:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f         ", conv_raw_result(V_BA
      +                          T, CONV));
  4231  011472  0E00               	movlw	0
  4232  011474  6EE6               	movwf	postinc1,c
  4233  011476  0E04               	movlw	4
  4234  011478  6EE6               	movwf	postinc1,c
  4235  01147A  EC0D  F0A8         	call	_conv_raw_result	;wreg free
  4236  01147E  0060  F007  FFE6   	movff	btemp,postinc1
  4237  011484  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4238  01148A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4239  011490  0060  F013  FFE6   	movff	btemp+3,postinc1
  4240  011496  0E0B               	movlw	low STR_8
  4241  011498  6EE6               	movwf	postinc1,c
  4242  01149A  0EFF               	movlw	high STR_8
  4243  01149C  6EE6               	movwf	postinc1,c
  4244  01149E  0E00               	movlw	0
  4245  0114A0  6EE6               	movwf	postinc1,c
  4246  0114A2  0E01               	movlw	1
  4247  0114A4  6EE6               	movwf	postinc1,c
  4248  0114A6  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  4249  0114AA  0060  F007  FFE6   	movff	btemp,postinc1
  4250  0114B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4251  0114B6  0E08               	movlw	8
  4252  0114B8  6EE6               	movwf	postinc1,c
  4253  0114BA  EC92  F0CD         	call	_sprintf	;wreg free
  4254                           
  4255                           ; BSR set to: 0
  4256                           ;main.c: 264:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f       ", spinners(5, 0),
      +                           i_ror, C.bv_ror);
  4257  0114BE  EE21  F36B         	lfsr	2,_C+108	;volatile
  4258  0114C2  006F FF7B FFE6     	movff	postinc2,postinc1
  4259  0114C8  006F FF7B FFE6     	movff	postinc2,postinc1
  4260  0114CE  006F FF7B FFE6     	movff	postinc2,postinc1
  4261  0114D4  006F FF7B FFE6     	movff	postinc2,postinc1
  4262                           
  4263                           ;stkvar	_i_ror @ sp[(-21)+16]
  4264  0114DA  0EFB               	movlw	-5
  4265  0114DC  50E3               	movf	plusw1,w,c
  4266  0114DE  6EE6               	movwf	postinc1,c
  4267  0114E0  0E00               	movlw	0
  4268  0114E2  6EE6               	movwf	postinc1,c
  4269  0114E4  0E00               	movlw	0
  4270  0114E6  6EE6               	movwf	postinc1,c
  4271  0114E8  0E05               	movlw	5
  4272  0114EA  6EE6               	movwf	postinc1,c
  4273  0114EC  EC98  F0CE         	call	_spinners	;wreg free
  4274  0114F0  5001               	movf	btemp^0,w,c
  4275  0114F2  6EE6               	movwf	postinc1,c
  4276  0114F4  0E00               	movlw	0
  4277  0114F6  6EE6               	movwf	postinc1,c
  4278  0114F8  0E06               	movlw	low STR_9
  4279  0114FA  6EE6               	movwf	postinc1,c
  4280  0114FC  0EFD               	movlw	high STR_9
  4281  0114FE  6EE6               	movwf	postinc1,c
  4282  011500  0E00               	movlw	0
  4283  011502  6EE6               	movwf	postinc1,c
  4284  011504  0E02               	movlw	2
  4285  011506  6EE6               	movwf	postinc1,c
  4286  011508  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  4287  01150C  0060  F007  FFE6   	movff	btemp,postinc1
  4288  011512  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4289  011518  0E0C               	movlw	12
  4290  01151A  6EE6               	movwf	postinc1,c
  4291  01151C  EC92  F0CD         	call	_sprintf	;wreg free
  4292                           
  4293                           ; BSR set to: 0
  4294                           ;main.c: 265:     update_lcd(0);
  4295  011520  0E00               	movlw	0
  4296  011522  6EE6               	movwf	postinc1,c
  4297  011524  EC0A  F0CD         	call	_update_lcd	;wreg free
  4298                           
  4299                           ;main.c: 266:     WaitMs(2000);
  4300  011528  0ED0               	movlw	208
  4301  01152A  6EE6               	movwf	postinc1,c
  4302  01152C  0E07               	movlw	7
  4303  01152E  6EE6               	movwf	postinc1,c
  4304  011530  ECD4  F0DA         	call	_WaitMs	;wreg free
  4305                           
  4306                           ;main.c: 267:     clear_adc_scan();
  4307  011534  EC3B  F0DF         	call	_clear_adc_scan	;wreg free
  4308                           
  4309                           ; BSR set to: 0
  4310                           ;main.c: 268:     start_adc_scan();
  4311  011538  ECC0  F0D6         	call	_start_adc_scan	;wreg free
  4312                           
  4313                           ;main.c: 269:     WaitMs(500);
  4314  01153C  0EF4               	movlw	244
  4315  01153E  6EE6               	movwf	postinc1,c
  4316  011540  0E01               	movlw	1
  4317  011542  6EE6               	movwf	postinc1,c
  4318  011544  ECD4  F0DA         	call	_WaitMs	;wreg free
  4319                           
  4320                           ;main.c: 270:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4321                           ;stkvar	_i_ror @ sp[(-17)+16]
  4322  011548  0EFF               	movlw	-1
  4323  01154A  006F FF8C  F00C    	movff	plusw1,btemp+11
  4324  011550  2A0C               	incf	(btemp+11)^0,f,c
  4325  011552  0060  F033  FFE3   	movff	btemp+11,plusw1
  4326  011558  060C               	decf	(btemp+11)^0,f,c
  4327  01155A  0E1E               	movlw	30
  4328  01155C  600C               	cpfslt	(btemp+11)^0,c
  4329  01155E  D01A               	goto	u12550
  4330  011560  EE21  F36B         	lfsr	2,_C+108	;volatile
  4331  011564  006F FF7B FFE6     	movff	postinc2,postinc1
  4332  01156A  006F FF7B FFE6     	movff	postinc2,postinc1
  4333  011570  006F FF7B FFE6     	movff	postinc2,postinc1
  4334  011576  006F FF7B FFE6     	movff	postinc2,postinc1
  4335  01157C  0E42               	movlw	66
  4336  01157E  6EE6               	movwf	postinc1,c
  4337  011580  0E60               	movlw	96
  4338  011582  6EE6               	movwf	postinc1,c
  4339  011584  0E65               	movlw	101
  4340  011586  6EE6               	movwf	postinc1,c
  4341  011588  0E3C               	movlw	60
  4342  01158A  6EE6               	movwf	postinc1,c
  4343  01158C  EC6A  F0C6         	call	___flge	;wreg free
  4344  011590  A001               	btfss	btemp& (0+255),0,c
  4345  011592  D76D               	goto	l12989
  4346  011594                     u12550:
  4347                           
  4348                           ;main.c: 272:    static_soc();
  4349  011594  EC41  F0DA         	call	_static_soc	;wreg free
  4350                           
  4351                           ;main.c: 273:    init_bsoc();
  4352  011598  EC67  F0BD         	call	_init_bsoc	;wreg free
  4353                           
  4354                           ;main.c: 274:    set_load_relay_one(0);
  4355  01159C  0E00               	movlw	0
  4356  01159E  6EE6               	movwf	postinc1,c
  4357  0115A0  ECCB  F0DE         	call	_set_load_relay_one	;wreg free
  4358                           
  4359                           ;main.c: 275:    set_load_relay_two(0);
  4360  0115A4  0E00               	movlw	0
  4361  0115A6  6EE6               	movwf	postinc1,c
  4362  0115A8  ECC3  F0DE         	call	_set_load_relay_two	;wreg free
  4363                           
  4364                           ;main.c: 276:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4365  0115AC  EE21  F3B1         	lfsr	2,_C+178	;volatile
  4366  0115B0  006F FF78  F00B    	movff	postinc2,btemp+10
  4367  0115B6  006F FF74  F00C    	movff	postdec2,btemp+11
  4368  0115BC  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4369  0115C2  0060  F033  FFE6   	movff	btemp+11,postinc1
  4370  0115C8  0E33               	movlw	low STR_10
  4371  0115CA  6EE6               	movwf	postinc1,c
  4372  0115CC  0EFD               	movlw	high STR_10
  4373  0115CE  6EE6               	movwf	postinc1,c
  4374  0115D0  0E00               	movlw	0
  4375  0115D2  6EE6               	movwf	postinc1,c
  4376  0115D4  0E00               	movlw	0
  4377  0115D6  6EE6               	movwf	postinc1,c
  4378  0115D8  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  4379  0115DC  0060  F007  FFE6   	movff	btemp,postinc1
  4380  0115E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4381  0115E8  0E06               	movlw	6
  4382  0115EA  6EE6               	movwf	postinc1,c
  4383  0115EC  EC92  F0CD         	call	_sprintf	;wreg free
  4384                           
  4385                           ; BSR set to: 0
  4386                           ;main.c: 277:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4387  0115F0  EE21  F38F         	lfsr	2,_C+144	;volatile
  4388  0115F4  006F FF7B FFE6     	movff	postinc2,postinc1
  4389  0115FA  006F FF7B FFE6     	movff	postinc2,postinc1
  4390  011600  006F FF7B FFE6     	movff	postinc2,postinc1
  4391  011606  006F FF7B FFE6     	movff	postinc2,postinc1
  4392  01160C  0E49               	movlw	low STR_11
  4393  01160E  6EE6               	movwf	postinc1,c
  4394  011610  0EFD               	movlw	high STR_11
  4395  011612  6EE6               	movwf	postinc1,c
  4396  011614  0E00               	movlw	0
  4397  011616  6EE6               	movwf	postinc1,c
  4398  011618  0E01               	movlw	1
  4399  01161A  6EE6               	movwf	postinc1,c
  4400  01161C  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  4401  011620  0060  F007  FFE6   	movff	btemp,postinc1
  4402  011626  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4403  01162C  0E08               	movlw	8
  4404  01162E  6EE6               	movwf	postinc1,c
  4405  011630  EC92  F0CD         	call	_sprintf	;wreg free
  4406                           
  4407                           ; BSR set to: 0
  4408                           ;main.c: 278:    update_lcd(0);
  4409  011634  0E00               	movlw	0
  4410  011636  6EE6               	movwf	postinc1,c
  4411  011638  EC0A  F0CD         	call	_update_lcd	;wreg free
  4412                           
  4413                           ;main.c: 279:    WaitMs(2000);
  4414  01163C  0ED0               	movlw	208
  4415  01163E  6EE6               	movwf	postinc1,c
  4416  011640  0E07               	movlw	7
  4417  011642  6EE6               	movwf	postinc1,c
  4418  011644  ECD4  F0DA         	call	_WaitMs	;wreg free
  4419                           
  4420                           ;main.c: 280:    sprintf(get_vterm_ptr(0, 0), "Battery ESR     ");
  4421  011648  0E2E               	movlw	low STR_12
  4422  01164A  6EE6               	movwf	postinc1,c
  4423  01164C  0EFF               	movlw	high STR_12
  4424  01164E  6EE6               	movwf	postinc1,c
  4425  011650  0E00               	movlw	0
  4426  011652  6EE6               	movwf	postinc1,c
  4427  011654  0E00               	movlw	0
  4428  011656  6EE6               	movwf	postinc1,c
  4429  011658  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  4430  01165C  0060  F007  FFE6   	movff	btemp,postinc1
  4431  011662  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4432  011668  0E04               	movlw	4
  4433  01166A  6EE6               	movwf	postinc1,c
  4434  01166C  EC92  F0CD         	call	_sprintf	;wreg free
  4435                           
  4436                           ; BSR set to: 0
  4437                           ;main.c: 281:    sprintf(get_vterm_ptr(1, 0), "Calculation     ");
  4438  011670  0E3F               	movlw	low STR_13
  4439  011672  6EE6               	movwf	postinc1,c
  4440  011674  0EFF               	movlw	high STR_13
  4441  011676  6EE6               	movwf	postinc1,c
  4442  011678  0E00               	movlw	0
  4443  01167A  6EE6               	movwf	postinc1,c
  4444  01167C  0E01               	movlw	1
  4445  01167E  6EE6               	movwf	postinc1,c
  4446  011680  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  4447  011684  0060  F007  FFE6   	movff	btemp,postinc1
  4448  01168A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4449  011690  0E04               	movlw	4
  4450  011692  6EE6               	movwf	postinc1,c
  4451  011694  EC92  F0CD         	call	_sprintf	;wreg free
  4452                           
  4453                           ; BSR set to: 0
  4454                           ;main.c: 282:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds");
  4455  011698  0E72               	movlw	low STR_14
  4456  01169A  6EE6               	movwf	postinc1,c
  4457  01169C  0EFF               	movlw	high STR_14
  4458  01169E  6EE6               	movwf	postinc1,c
  4459  0116A0  0E00               	movlw	0
  4460  0116A2  6EE6               	movwf	postinc1,c
  4461  0116A4  0E02               	movlw	2
  4462  0116A6  6EE6               	movwf	postinc1,c
  4463  0116A8  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  4464  0116AC  0060  F007  FFE6   	movff	btemp,postinc1
  4465  0116B2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4466  0116B8  0E04               	movlw	4
  4467  0116BA  6EE6               	movwf	postinc1,c
  4468  0116BC  EC92  F0CD         	call	_sprintf	;wreg free
  4469                           
  4470                           ; BSR set to: 0
  4471                           ;main.c: 283:    update_lcd(0);
  4472  0116C0  0E00               	movlw	0
  4473  0116C2  6EE6               	movwf	postinc1,c
  4474  0116C4  EC0A  F0CD         	call	_update_lcd	;wreg free
  4475                           
  4476                           ;main.c: 284:    uint16_t i_esr = 1;
  4477  0116C8  0E01               	movlw	1
  4478  0116CA  6E0B               	movwf	(btemp+10)^0,c
  4479  0116CC  0E00               	movlw	0
  4480  0116CE  6E0C               	movwf	(btemp+11)^0,c
  4481                           
  4482                           ;stkvar	_i_esr @ sp[(-17)+8]
  4483  0116D0  0EF7               	movlw	-9
  4484  0116D2  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4485  0116D8  0EF8               	movlw	-8
  4486  0116DA  0060  F033  FFE3   	movff	btemp+11,plusw1
  4487                           
  4488                           ;main.c: 286:    float esr_temp;;main.c: 287:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  4489  0116E0  D06D               	goto	l13049
  4490  0116E2                     l13037:
  4491                           
  4492                           ;main.c: 288:     WaitMs(110);
  4493  0116E2  0E6E               	movlw	110
  4494  0116E4  6EE6               	movwf	postinc1,c
  4495  0116E6  0E00               	movlw	0
  4496  0116E8  6EE6               	movwf	postinc1,c
  4497  0116EA  ECD4  F0DA         	call	_WaitMs	;wreg free
  4498                           
  4499                           ;main.c: 289:     shape = (uint8_t) fabsf(esr_temp);
  4500                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4501  0116EE  0EF3               	movlw	-13
  4502  0116F0  006F FF8F FFE6     	movff	plusw1,postinc1
  4503  0116F6  006F FF8F FFE6     	movff	plusw1,postinc1
  4504  0116FC  006F FF8F FFE6     	movff	plusw1,postinc1
  4505  011702  006F FF8F FFE6     	movff	plusw1,postinc1
  4506  011708  ECED  F0D1         	call	_fabsf	;wreg free
  4507  01170C  0060  F007  FFE6   	movff	btemp,postinc1
  4508  011712  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4509  011718  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4510  01171E  0060  F013  FFE6   	movff	btemp+3,postinc1
  4511  011724  ECB1  F0C5         	call	___fltol	;wreg free
  4512  011728  0060  F004  F00C   	movff	btemp,btemp+11
  4513                           
  4514                           ;stkvar	_shape @ sp[(-17)+10]
  4515  01172E  0EF9               	movlw	-7
  4516  011730  0060  F033  FFE3   	movff	btemp+11,plusw1
  4517                           
  4518                           ;main.c: 290:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  4519  011736  0E00               	movlw	0
  4520  011738  6EE6               	movwf	postinc1,c
  4521                           
  4522                           ;stkvar	_shape @ sp[(-18)+10]
  4523  01173A  0EF8               	movlw	-8
  4524  01173C  50E3               	movf	plusw1,w,c
  4525  01173E  6EE6               	movwf	postinc1,c
  4526  011740  EC98  F0CE         	call	_spinners	;wreg free
  4527  011744  5001               	movf	btemp^0,w,c
  4528  011746  6EE6               	movwf	postinc1,c
  4529  011748  0E00               	movlw	0
  4530  01174A  6EE6               	movwf	postinc1,c
  4531  01174C  0E00               	movlw	0
  4532  01174E  6EE6               	movwf	postinc1,c
  4533  011750  0E00               	movlw	0
  4534  011752  6EE6               	movwf	postinc1,c
  4535  011754  EC98  F0CE         	call	_spinners	;wreg free
  4536  011758  5001               	movf	btemp^0,w,c
  4537  01175A  6EE6               	movwf	postinc1,c
  4538  01175C  0E00               	movlw	0
  4539  01175E  6EE6               	movwf	postinc1,c
  4540  011760  0E5F               	movlw	low STR_15
  4541  011762  6EE6               	movwf	postinc1,c
  4542  011764  0EFD               	movlw	high STR_15
  4543  011766  6EE6               	movwf	postinc1,c
  4544  011768  0E00               	movlw	0
  4545  01176A  6EE6               	movwf	postinc1,c
  4546  01176C  0E02               	movlw	2
  4547  01176E  6EE6               	movwf	postinc1,c
  4548  011770  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  4549  011774  0060  F007  FFE6   	movff	btemp,postinc1
  4550  01177A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4551  011780  0E08               	movlw	8
  4552  011782  6EE6               	movwf	postinc1,c
  4553  011784  EC92  F0CD         	call	_sprintf	;wreg free
  4554                           
  4555                           ; BSR set to: 0
  4556                           ;main.c: 291:     update_lcd(0);
  4557  011788  0E00               	movlw	0
  4558  01178A  6EE6               	movwf	postinc1,c
  4559  01178C  EC0A  F0CD         	call	_update_lcd	;wreg free
  4560                           
  4561                           ;main.c: 293:     if (i_esr++ > 512)
  4562                           ;stkvar	_i_esr @ sp[(-17)+8]
  4563  011790  50E1               	movf	fsr1l,w,c
  4564  011792  0FF7               	addlw	-9
  4565  011794  6ED9               	movwf	fsr2l,c
  4566  011796  50E2               	movf	fsr1h,w,c
  4567  011798  6EDA               	movwf	fsr2h,c
  4568  01179A  0EFF               	movlw	255
  4569  01179C  22DA               	addwfc	fsr2h,f,c
  4570  01179E  006F FF7C  F00B    	movff	indf2,btemp+10
  4571  0117A4  0E01               	movlw	1
  4572  0117A6  26DE               	addwf	postinc2,f,c
  4573  0117A8  006F FF7C  F00C    	movff	indf2,btemp+11
  4574  0117AE  0E00               	movlw	0
  4575  0117B0  22DD               	addwfc	postdec2,f,c
  4576  0117B2  040B               	decf	(btemp+10)^0,w,c
  4577  0117B4  0E02               	movlw	2
  4578  0117B6  580C               	subwfb	(btemp+11)^0,w,c
  4579  0117B8  B0D8               	btfsc	status,0,c
  4580  0117BA  D017               	goto	u12570
  4581  0117BC                     l13049:
  4582                           
  4583                           ;main.c: 287:    while ((esr_temp = esr_check(0)) < 0.0) {
  4584  0117BC  0E00               	movlw	0
  4585  0117BE  6EE6               	movwf	postinc1,c
  4586  0117C0  EC06  F0B7         	call	_esr_check	;wreg free
  4587                           
  4588                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4589  0117C4  0EF3               	movlw	-13
  4590  0117C6  0060  F007  FFE3   	movff	btemp,plusw1
  4591  0117CC  0EF4               	movlw	-12
  4592  0117CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
  4593  0117D4  0EF5               	movlw	-11
  4594  0117D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
  4595  0117DC  0EF6               	movlw	-10
  4596  0117DE  0060  F013  FFE3   	movff	btemp+3,plusw1
  4597  0117E4  0EF6               	movlw	-10
  4598  0117E6  BEE3               	btfsc	plusw1,7,c
  4599  0117E8  D77C               	goto	l13037
  4600  0117EA                     u12570:
  4601                           
  4602                           ;main.c: 296:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  4603  0117EA  EE21  F387         	lfsr	2,_C+136	;volatile
  4604  0117EE  006F FF7B FFE6     	movff	postinc2,postinc1
  4605  0117F4  006F FF7B FFE6     	movff	postinc2,postinc1
  4606  0117FA  006F FF7B FFE6     	movff	postinc2,postinc1
  4607  011800  006F FF7B FFE6     	movff	postinc2,postinc1
  4608  011806  0E1D               	movlw	low STR_16
  4609  011808  6EE6               	movwf	postinc1,c
  4610  01180A  0EFD               	movlw	high STR_16
  4611  01180C  6EE6               	movwf	postinc1,c
  4612  01180E  0E00               	movlw	0
  4613  011810  6EE6               	movwf	postinc1,c
  4614  011812  0E00               	movlw	0
  4615  011814  6EE6               	movwf	postinc1,c
  4616  011816  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  4617  01181A  0060  F007  FFE6   	movff	btemp,postinc1
  4618  011820  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4619  011826  0E08               	movlw	8
  4620  011828  6EE6               	movwf	postinc1,c
  4621  01182A  EC92  F0CD         	call	_sprintf	;wreg free
  4622                           
  4623                           ;main.c: 297:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  4624  01182E  EE22  F009         	lfsr	2,_C+266	;volatile
  4625  011832  006F FF7B FFE6     	movff	postinc2,postinc1
  4626  011838  006F FF7B FFE6     	movff	postinc2,postinc1
  4627  01183E  006F FF7B FFE6     	movff	postinc2,postinc1
  4628  011844  006F FF7B FFE6     	movff	postinc2,postinc1
  4629  01184A  EE22  F015         	lfsr	2,_C+278	;volatile
  4630  01184E  006F FF7B FFE6     	movff	postinc2,postinc1
  4631  011854  006F FF7B FFE6     	movff	postinc2,postinc1
  4632  01185A  006F FF7B FFE6     	movff	postinc2,postinc1
  4633  011860  006F FF7B FFE6     	movff	postinc2,postinc1
  4634  011866  0EBA               	movlw	low STR_17
  4635  011868  6EE6               	movwf	postinc1,c
  4636  01186A  0EFC               	movlw	high STR_17
  4637  01186C  6EE6               	movwf	postinc1,c
  4638  01186E  0E00               	movlw	0
  4639  011870  6EE6               	movwf	postinc1,c
  4640  011872  0E01               	movlw	1
  4641  011874  6EE6               	movwf	postinc1,c
  4642  011876  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  4643  01187A  0060  F007  FFE6   	movff	btemp,postinc1
  4644  011880  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4645  011886  0E0C               	movlw	12
  4646  011888  6EE6               	movwf	postinc1,c
  4647  01188A  EC92  F0CD         	call	_sprintf	;wreg free
  4648                           
  4649                           ;main.c: 298:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  4650  01188E  EE22  F00D         	lfsr	2,_C+270	;volatile
  4651  011892  006F FF7B FFE6     	movff	postinc2,postinc1
  4652  011898  006F FF7B FFE6     	movff	postinc2,postinc1
  4653  01189E  006F FF7B FFE6     	movff	postinc2,postinc1
  4654  0118A4  006F FF7B FFE6     	movff	postinc2,postinc1
  4655  0118AA  EE22  F019         	lfsr	2,_C+282	;volatile
  4656  0118AE  006F FF7B FFE6     	movff	postinc2,postinc1
  4657  0118B4  006F FF7B FFE6     	movff	postinc2,postinc1
  4658  0118BA  006F FF7B FFE6     	movff	postinc2,postinc1
  4659  0118C0  006F FF7B FFE6     	movff	postinc2,postinc1
  4660  0118C6  0ED4               	movlw	low STR_18
  4661  0118C8  6EE6               	movwf	postinc1,c
  4662  0118CA  0EFC               	movlw	high STR_18
  4663  0118CC  6EE6               	movwf	postinc1,c
  4664  0118CE  0E00               	movlw	0
  4665  0118D0  6EE6               	movwf	postinc1,c
  4666  0118D2  0E02               	movlw	2
  4667  0118D4  6EE6               	movwf	postinc1,c
  4668  0118D6  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  4669  0118DA  0060  F007  FFE6   	movff	btemp,postinc1
  4670  0118E0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4671  0118E6  0E0C               	movlw	12
  4672  0118E8  6EE6               	movwf	postinc1,c
  4673  0118EA  EC92  F0CD         	call	_sprintf	;wreg free
  4674                           
  4675                           ;main.c: 299:    update_lcd(0);
  4676  0118EE  0E00               	movlw	0
  4677  0118F0  6EE6               	movwf	postinc1,c
  4678  0118F2  EC0A  F0CD         	call	_update_lcd	;wreg free
  4679                           
  4680                           ;main.c: 300:    WaitMs(5000);
  4681  0118F6  0E88               	movlw	136
  4682  0118F8  6EE6               	movwf	postinc1,c
  4683  0118FA  0E13               	movlw	19
  4684  0118FC  6EE6               	movwf	postinc1,c
  4685  0118FE  ECD4  F0DA         	call	_WaitMs	;wreg free
  4686                           
  4687                           ;main.c: 301:    V.system_stable = 1;
  4688  011902  0E01               	movlw	1
  4689  011904  0101               	movlb	1	; () banked
  4690  011906  6FAE               	movwf	(_V+174)& (0+255),b	;volatile
  4691                           
  4692                           ;main.c: 302:    break;
  4693  011908  D01C               	goto	l13061
  4694  01190A                     l1340:
  4695                           
  4696                           ; BSR set to: 1
  4697                           ;main.c: 308:    P.SYSTEM_STABLE = 1;
  4698  01190A  0100               	movlb	0	; () banked
  4699  01190C  818D               	bsf	(_P+1)& (0+255),0,b	;volatile
  4700                           
  4701                           ;main.c: 309:    break;
  4702  01190E  D019               	goto	l13061
  4703  011910                     l1342:
  4704                           
  4705                           ; BSR set to: 1
  4706                           ;main.c: 312:    V.ui_state = UI_STATE_INIT;
  4707  011910  6B00               	clrf	_V& (0+255),b	;volatile
  4708                           
  4709                           ;main.c: 313:    break;
  4710  011912  D017               	goto	l13061
  4711  011914                     l13059:
  4712  011914  0101               	movlb	1	; () banked
  4713  011916  5100               	movf	_V& (0+255),w,b	;volatile
  4714  011918  6E0B               	movwf	(btemp+10)^0,c
  4715  01191A  6A0C               	clrf	(btemp+11)^0,c
  4716                           
  4717                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4718                           ; Switch size 1, requested type "simple"
  4719                           ; Number of cases is 1, Range of values is 0 to 0
  4720                           ; switch strategies available:
  4721                           ; Name         Instructions Cycles
  4722                           ; simple_byte            4     3 (average)
  4723                           ;	Chosen strategy is simple_byte
  4724  01191C  500C               	movf	(btemp+11)^0,w,c
  4725  01191E  0A00               	xorlw	0	; case 0
  4726  011920  A4D8               	btfss	status,2,c
  4727  011922  D7F6               	goto	l1342
  4728                           
  4729                           ; BSR set to: 1
  4730                           ; Switch size 1, requested type "simple"
  4731                           ; Number of cases is 5, Range of values is 0 to 5
  4732                           ; switch strategies available:
  4733                           ; Name         Instructions Cycles
  4734                           ; simple_byte           16     9 (average)
  4735                           ;	Chosen strategy is simple_byte
  4736  011924  500B               	movf	(btemp+10)^0,w,c
  4737  011926  0A00               	xorlw	0	; case 0
  4738  011928  B4D8               	btfsc	status,2,c
  4739  01192A  D4C8               	goto	l12939
  4740  01192C  0A01               	xorlw	1	; case 1
  4741  01192E  B4D8               	btfsc	status,2,c
  4742  011930  D008               	goto	l13061
  4743  011932  0A02               	xorlw	2	; case 3
  4744  011934  B4D8               	btfsc	status,2,c
  4745  011936  D005               	goto	l13061
  4746  011938  0A07               	xorlw	7	; case 4
  4747  01193A  B4D8               	btfsc	status,2,c
  4748  01193C  D7E6               	goto	l1340
  4749  01193E  0A01               	xorlw	1	; case 5
  4750  011940  D7E7               	goto	l1342
  4751  011942                     l13061:
  4752                           
  4753                           ;main.c: 316:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  4754  011942  0E01               	movlw	1
  4755  011944  6EE6               	movwf	postinc1,c
  4756  011946  EC5D  F0DC         	call	_TimerDone	;wreg free
  4757  01194A  5001               	movf	btemp^0,w,c
  4758  01194C  B4D8               	btfsc	status,2,c
  4759  01194E  D013               	goto	l13073
  4760  011950  EC27  F0DF         	call	_check_adc_scan	;wreg free
  4761  011954  5001               	movf	btemp^0,w,c
  4762  011956  B4D8               	btfsc	status,2,c
  4763  011958  D00E               	goto	l13073
  4764                           
  4765                           ;main.c: 320:    convert_adc_data();
  4766  01195A  EC91  F0D1         	call	_convert_adc_data	;wreg free
  4767                           
  4768                           ;main.c: 324:    clear_adc_scan();
  4769  01195E  EC3B  F0DF         	call	_clear_adc_scan	;wreg free
  4770                           
  4771                           ; BSR set to: 0
  4772                           ;main.c: 325:    start_adc_scan();
  4773  011962  ECC0  F0D6         	call	_start_adc_scan	;wreg free
  4774                           
  4775                           ;main.c: 326:    StartTimer(TMR_ADC, 200);
  4776  011966  0EC8               	movlw	200
  4777  011968  6EE6               	movwf	postinc1,c
  4778  01196A  0E00               	movlw	0
  4779  01196C  6EE6               	movwf	postinc1,c
  4780  01196E  0E01               	movlw	1
  4781  011970  6EE6               	movwf	postinc1,c
  4782  011972  ECE1  F0D9         	call	_StartTimer	;wreg free
  4783  011976                     l13073:
  4784                           
  4785                           ;main.c: 333:   if (TimerDone(TMR_DISPLAY)) {
  4786                           
  4787                           ;main.c: 329:   if (V.ticks) {
  4788  011976  0E0A               	movlw	10
  4789  011978  6EE6               	movwf	postinc1,c
  4790  01197A  EC5D  F0DC         	call	_TimerDone	;wreg free
  4791  01197E  5001               	movf	btemp^0,w,c
  4792  011980  B4D8               	btfsc	status,2,c
  4793  011982  EF3E  F091         	goto	l13149
  4794                           
  4795                           ;main.c: 334:    if (TimerDone(TMR_HELPDIS)) {
  4796  011986  0E09               	movlw	9
  4797  011988  6EE6               	movwf	postinc1,c
  4798  01198A  EC5D  F0DC         	call	_TimerDone	;wreg free
  4799  01198E  5001               	movf	btemp^0,w,c
  4800  011990  B4D8               	btfsc	status,2,c
  4801  011992  D004               	goto	l13081
  4802                           
  4803                           ;main.c: 335:     set_display_info(DIS_STR);
  4804  011994  0E00               	movlw	0
  4805  011996  6EE6               	movwf	postinc1,c
  4806  011998  EC30  F0DE         	call	_set_display_info	;wreg free
  4807  01199C                     l13081:
  4808                           
  4809                           ;main.c: 337:    calc_model_data();
  4810  01199C  ECA3  F0AC         	call	_calc_model_data	;wreg free
  4811                           
  4812                           ; BSR set to: 57
  4813                           ;main.c: 344:     hid_display(&H);
  4814                           
  4815                           ;main.c: 339:    if (0) {
  4816  0119A0  0EBF               	movlw	low _H
  4817  0119A2  6EE6               	movwf	postinc1,c
  4818  0119A4  0E01               	movlw	high _H
  4819  0119A6  6EE6               	movwf	postinc1,c
  4820  0119A8  EC97  F0C1         	call	_hid_display	;wreg free
  4821                           
  4822                           ;main.c: 345:     switch (H.hid_display) {
  4823  0119AC  EFEC  F090         	goto	l13129
  4824  0119B0                     l1350:
  4825                           
  4826                           ; BSR set to: 1
  4827                           ;main.c: 347:      V.calib = 0;
  4828  0119B0  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  4829                           
  4830                           ; BSR set to: 1
  4831                           ;main.c: 348:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f    ", (C.day) ? 'D' : '
      +                           ', C.p_pv);
  4832  0119B2  EE22  F01D         	lfsr	2,_C+286	;volatile
  4833  0119B6  50DF               	movf	indf2,w,c
  4834  0119B8  A4D8               	btfss	status,2,c
  4835  0119BA  D002               	goto	l13091
  4836                           
  4837                           ; BSR set to: 1
  4838  0119BC  0E20               	movlw	32
  4839  0119BE  D001               	goto	L1
  4840  0119C0                     l13091:
  4841                           
  4842                           ; BSR set to: 1
  4843  0119C0  0E44               	movlw	68
  4844  0119C2                     L1:
  4845  0119C2  6E0B               	movwf	(btemp+10)^0,c
  4846  0119C4  0E00               	movlw	0
  4847  0119C6  6E0C               	movwf	(btemp+11)^0,c
  4848                           
  4849                           ;stkvar	_main$3750 @ sp[(-17)+2]
  4850  0119C8  0EF1               	movlw	-15
  4851  0119CA  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4852  0119D0  0EF2               	movlw	-14
  4853  0119D2  0060  F033  FFE3   	movff	btemp+11,plusw1
  4854                           
  4855                           ; BSR set to: 1
  4856  0119D8  EE21  F37B         	lfsr	2,_C+124	;volatile
  4857  0119DC  006F FF7B FFE6     	movff	postinc2,postinc1
  4858  0119E2  006F FF7B FFE6     	movff	postinc2,postinc1
  4859  0119E8  006F FF7B FFE6     	movff	postinc2,postinc1
  4860  0119EE  006F FF7B FFE6     	movff	postinc2,postinc1
  4861                           
  4862                           ;stkvar	_main$3750 @ sp[(-21)+2]
  4863  0119F4  0EED               	movlw	-19
  4864  0119F6  006F FF8F FFE6     	movff	plusw1,postinc1
  4865  0119FC  006F FF8F FFE6     	movff	plusw1,postinc1
  4866  011A02  0EEC               	movlw	low STR_22
  4867  011A04  6EE6               	movwf	postinc1,c
  4868  011A06  0EFD               	movlw	high STR_22
  4869  011A08  6EE6               	movwf	postinc1,c
  4870  011A0A  0E00               	movlw	0
  4871  011A0C  6EE6               	movwf	postinc1,c
  4872  011A0E  0E00               	movlw	0
  4873  011A10  6EE6               	movwf	postinc1,c
  4874  011A12  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  4875  011A16  0060  F007  FFE6   	movff	btemp,postinc1
  4876  011A1C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4877  011A22  0E0A               	movlw	10
  4878  011A24  6EE6               	movwf	postinc1,c
  4879  011A26  EC92  F0CD         	call	_sprintf	;wreg free
  4880                           
  4881                           ; BSR set to: 0
  4882                           ;main.c: 349:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  4883  011A2A  EE21  F373         	lfsr	2,_C+116	;volatile
  4884  011A2E  006F FF7B FFE6     	movff	postinc2,postinc1
  4885  011A34  006F FF7B FFE6     	movff	postinc2,postinc1
  4886  011A3A  006F FF7B FFE6     	movff	postinc2,postinc1
  4887  011A40  006F FF7B FFE6     	movff	postinc2,postinc1
  4888  011A46  0EBF               	movlw	low STR_23
  4889  011A48  6EE6               	movwf	postinc1,c
  4890  011A4A  0EFE               	movlw	high STR_23
  4891  011A4C  6EE6               	movwf	postinc1,c
  4892  011A4E  0E00               	movlw	0
  4893  011A50  6EE6               	movwf	postinc1,c
  4894  011A52  0E01               	movlw	1
  4895  011A54  6EE6               	movwf	postinc1,c
  4896  011A56  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  4897  011A5A  0060  F007  FFE6   	movff	btemp,postinc1
  4898  011A60  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4899  011A66  0E08               	movlw	8
  4900  011A68  6EE6               	movwf	postinc1,c
  4901  011A6A  EC92  F0CD         	call	_sprintf	;wreg free
  4902                           
  4903                           ; BSR set to: 0
  4904                           ;main.c: 350:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  4905  011A6E  EE21  F377         	lfsr	2,_C+120	;volatile
  4906  011A72  006F FF7B FFE6     	movff	postinc2,postinc1
  4907  011A78  006F FF7B FFE6     	movff	postinc2,postinc1
  4908  011A7E  006F FF7B FFE6     	movff	postinc2,postinc1
  4909  011A84  006F FF7B FFE6     	movff	postinc2,postinc1
  4910  011A8A  0EAC               	movlw	low STR_24
  4911  011A8C  6EE6               	movwf	postinc1,c
  4912  011A8E  0EFE               	movlw	high STR_24
  4913  011A90  6EE6               	movwf	postinc1,c
  4914  011A92  0E00               	movlw	0
  4915  011A94  6EE6               	movwf	postinc1,c
  4916  011A96  0E02               	movlw	2
  4917  011A98  6EE6               	movwf	postinc1,c
  4918  011A9A  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  4919  011A9E  0060  F007  FFE6   	movff	btemp,postinc1
  4920  011AA4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4921  011AAA  0E08               	movlw	8
  4922  011AAC  6EE6               	movwf	postinc1,c
  4923  011AAE  EC92  F0CD         	call	_sprintf	;wreg free
  4924                           
  4925                           ; BSR set to: 0
  4926                           ;main.c: 352:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f     ", (C.day) ? 'D' : '
      +                           ', C.pvkw);
  4927  011AB2  EE22  F01D         	lfsr	2,_C+286	;volatile
  4928  011AB6  50DF               	movf	indf2,w,c
  4929  011AB8  A4D8               	btfss	status,2,c
  4930  011ABA  D002               	goto	l13103
  4931                           
  4932                           ; BSR set to: 0
  4933  011ABC  0E20               	movlw	32
  4934  011ABE  D001               	goto	L2
  4935  011AC0                     l13103:
  4936                           
  4937                           ; BSR set to: 0
  4938  011AC0  0E44               	movlw	68
  4939  011AC2                     L2:
  4940  011AC2  6E0B               	movwf	(btemp+10)^0,c
  4941  011AC4  0E00               	movlw	0
  4942  011AC6  6E0C               	movwf	(btemp+11)^0,c
  4943                           
  4944                           ;stkvar	_main$3754 @ sp[(-17)+0]
  4945  011AC8  0EEF               	movlw	-17
  4946  011ACA  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4947  011AD0  0EF0               	movlw	-16
  4948  011AD2  0060  F033  FFE3   	movff	btemp+11,plusw1
  4949                           
  4950                           ; BSR set to: 0
  4951  011AD8  EE21  F3A3         	lfsr	2,_C+164	;volatile
  4952  011ADC  006F FF7B FFE6     	movff	postinc2,postinc1
  4953  011AE2  006F FF7B FFE6     	movff	postinc2,postinc1
  4954  011AE8  006F FF7B FFE6     	movff	postinc2,postinc1
  4955  011AEE  006F FF7B FFE6     	movff	postinc2,postinc1
  4956                           
  4957                           ;stkvar	_main$3754 @ sp[(-21)+0]
  4958  011AF4  0EEB               	movlw	-21
  4959  011AF6  006F FF8F FFE6     	movff	plusw1,postinc1
  4960  011AFC  006F FF8F FFE6     	movff	plusw1,postinc1
  4961  011B02  0E9C               	movlw	low STR_25
  4962  011B04  6EE6               	movwf	postinc1,c
  4963  011B06  0EFD               	movlw	high STR_25
  4964  011B08  6EE6               	movwf	postinc1,c
  4965  011B0A  0E01               	movlw	1
  4966  011B0C  6EE6               	movwf	postinc1,c
  4967  011B0E  0E00               	movlw	0
  4968  011B10  6EE6               	movwf	postinc1,c
  4969  011B12  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  4970  011B16  0060  F007  FFE6   	movff	btemp,postinc1
  4971  011B1C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4972  011B22  0E0A               	movlw	10
  4973  011B24  6EE6               	movwf	postinc1,c
  4974  011B26  EC92  F0CD         	call	_sprintf	;wreg free
  4975                           
  4976                           ; BSR set to: 0
  4977                           ;main.c: 353:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f     ", C.loadkw);
  4978  011B2A  EE21  F3AB         	lfsr	2,_C+172	;volatile
  4979  011B2E  006F FF7B FFE6     	movff	postinc2,postinc1
  4980  011B34  006F FF7B FFE6     	movff	postinc2,postinc1
  4981  011B3A  006F FF7B FFE6     	movff	postinc2,postinc1
  4982  011B40  006F FF7B FFE6     	movff	postinc2,postinc1
  4983  011B46  0E99               	movlw	low STR_26
  4984  011B48  6EE6               	movwf	postinc1,c
  4985  011B4A  0EFE               	movlw	high STR_26
  4986  011B4C  6EE6               	movwf	postinc1,c
  4987  011B4E  0E01               	movlw	1
  4988  011B50  6EE6               	movwf	postinc1,c
  4989  011B52  0E01               	movlw	1
  4990  011B54  6EE6               	movwf	postinc1,c
  4991  011B56  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  4992  011B5A  0060  F007  FFE6   	movff	btemp,postinc1
  4993  011B60  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4994  011B66  0E08               	movlw	8
  4995  011B68  6EE6               	movwf	postinc1,c
  4996  011B6A  EC92  F0CD         	call	_sprintf	;wreg free
  4997                           
  4998                           ; BSR set to: 0
  4999                           ;main.c: 354:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f     ", C.invkw);
  5000  011B6E  EE21  F3A7         	lfsr	2,_C+168	;volatile
  5001  011B72  006F FF7B FFE6     	movff	postinc2,postinc1
  5002  011B78  006F FF7B FFE6     	movff	postinc2,postinc1
  5003  011B7E  006F FF7B FFE6     	movff	postinc2,postinc1
  5004  011B84  006F FF7B FFE6     	movff	postinc2,postinc1
  5005  011B8A  0E86               	movlw	low STR_27
  5006  011B8C  6EE6               	movwf	postinc1,c
  5007  011B8E  0EFE               	movlw	high STR_27
  5008  011B90  6EE6               	movwf	postinc1,c
  5009  011B92  0E01               	movlw	1
  5010  011B94  6EE6               	movwf	postinc1,c
  5011  011B96  0E02               	movlw	2
  5012  011B98  6EE6               	movwf	postinc1,c
  5013  011B9A  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  5014  011B9E  0060  F007  FFE6   	movff	btemp,postinc1
  5015  011BA4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5016  011BAA  0E08               	movlw	8
  5017  011BAC  6EE6               	movwf	postinc1,c
  5018  011BAE  EC92  F0CD         	call	_sprintf	;wreg free
  5019                           
  5020                           ;main.c: 355:      break;
  5021  011BB2  D328               	goto	l13131
  5022  011BB4                     l1360:
  5023                           
  5024                           ; BSR set to: 1
  5025                           ;main.c: 357:      V.calib = 0;
  5026  011BB4  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  5027                           
  5028                           ; BSR set to: 1
  5029                           ;main.c: 358:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  5030  011BB6  EE21  F303         	lfsr	2,_C+4	;volatile
  5031  011BBA  006F FF7B FFE6     	movff	postinc2,postinc1
  5032  011BC0  006F FF7B FFE6     	movff	postinc2,postinc1
  5033  011BC6  006F FF7B FFE6     	movff	postinc2,postinc1
  5034  011BCC  006F FF7B FFE6     	movff	postinc2,postinc1
  5035  011BD2  EE21  F313         	lfsr	2,_C+20	;volatile
  5036  011BD6  006F FF7B FFE6     	movff	postinc2,postinc1
  5037  011BDC  006F FF7B FFE6     	movff	postinc2,postinc1
  5038  011BE2  006F FF7B FFE6     	movff	postinc2,postinc1
  5039  011BE8  006F FF7B FFE6     	movff	postinc2,postinc1
  5040  011BEE  0EF8               	movlw	low STR_28
  5041  011BF0  6EE6               	movwf	postinc1,c
  5042  011BF2  0EFE               	movlw	high STR_28
  5043  011BF4  6EE6               	movwf	postinc1,c
  5044  011BF6  0E00               	movlw	0
  5045  011BF8  6EE6               	movwf	postinc1,c
  5046  011BFA  0E00               	movlw	0
  5047  011BFC  6EE6               	movwf	postinc1,c
  5048  011BFE  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  5049  011C02  0060  F007  FFE6   	movff	btemp,postinc1
  5050  011C08  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5051  011C0E  0E0C               	movlw	12
  5052  011C10  6EE6               	movwf	postinc1,c
  5053  011C12  EC92  F0CD         	call	_sprintf	;wreg free
  5054                           
  5055                           ;main.c: 359:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  5056  011C16  EE21  F2FF         	lfsr	2,_C
  5057  011C1A  006F FF7B FFE6     	movff	postinc2,postinc1
  5058  011C20  006F FF7B FFE6     	movff	postinc2,postinc1
  5059  011C26  006F FF7B FFE6     	movff	postinc2,postinc1
  5060  011C2C  006F FF7B FFE6     	movff	postinc2,postinc1
  5061  011C32  EE21  F30F         	lfsr	2,_C+16	;volatile
  5062  011C36  006F FF7B FFE6     	movff	postinc2,postinc1
  5063  011C3C  006F FF7B FFE6     	movff	postinc2,postinc1
  5064  011C42  006F FF7B FFE6     	movff	postinc2,postinc1
  5065  011C48  006F FF7B FFE6     	movff	postinc2,postinc1
  5066  011C4E  0ED2               	movlw	low STR_29
  5067  011C50  6EE6               	movwf	postinc1,c
  5068  011C52  0EFE               	movlw	high STR_29
  5069  011C54  6EE6               	movwf	postinc1,c
  5070  011C56  0E00               	movlw	0
  5071  011C58  6EE6               	movwf	postinc1,c
  5072  011C5A  0E01               	movlw	1
  5073  011C5C  6EE6               	movwf	postinc1,c
  5074  011C5E  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  5075  011C62  0060  F007  FFE6   	movff	btemp,postinc1
  5076  011C68  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5077  011C6E  0E0C               	movlw	12
  5078  011C70  6EE6               	movwf	postinc1,c
  5079  011C72  EC92  F0CD         	call	_sprintf	;wreg free
  5080                           
  5081                           ;main.c: 360:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  5082  011C76  EE21  F33F         	lfsr	2,_C+64	;volatile
  5083  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  5084  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  5085  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  5086  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  5087  011C92  EE21  F307         	lfsr	2,_C+8	;volatile
  5088  011C96  006F FF7B FFE6     	movff	postinc2,postinc1
  5089  011C9C  006F FF7B FFE6     	movff	postinc2,postinc1
  5090  011CA2  006F FF7B FFE6     	movff	postinc2,postinc1
  5091  011CA8  006F FF7B FFE6     	movff	postinc2,postinc1
  5092  011CAE  0EE5               	movlw	low STR_30
  5093  011CB0  6EE6               	movwf	postinc1,c
  5094  011CB2  0EFE               	movlw	high STR_30
  5095  011CB4  6EE6               	movwf	postinc1,c
  5096  011CB6  0E00               	movlw	0
  5097  011CB8  6EE6               	movwf	postinc1,c
  5098  011CBA  0E02               	movlw	2
  5099  011CBC  6EE6               	movwf	postinc1,c
  5100  011CBE  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  5101  011CC2  0060  F007  FFE6   	movff	btemp,postinc1
  5102  011CC8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5103  011CCE  0E0C               	movlw	12
  5104  011CD0  6EE6               	movwf	postinc1,c
  5105  011CD2  EC92  F0CD         	call	_sprintf	;wreg free
  5106                           
  5107                           ;main.c: 362:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f     ", C.bkwi);
  5108  011CD6  EE21  F39B         	lfsr	2,_C+156	;volatile
  5109  011CDA  006F FF7B FFE6     	movff	postinc2,postinc1
  5110  011CE0  006F FF7B FFE6     	movff	postinc2,postinc1
  5111  011CE6  006F FF7B FFE6     	movff	postinc2,postinc1
  5112  011CEC  006F FF7B FFE6     	movff	postinc2,postinc1
  5113  011CF2  0E4D               	movlw	low STR_31
  5114  011CF4  6EE6               	movwf	postinc1,c
  5115  011CF6  0EFE               	movlw	high STR_31
  5116  011CF8  6EE6               	movwf	postinc1,c
  5117  011CFA  0E01               	movlw	1
  5118  011CFC  6EE6               	movwf	postinc1,c
  5119  011CFE  0E00               	movlw	0
  5120  011D00  6EE6               	movwf	postinc1,c
  5121  011D02  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  5122  011D06  0060  F007  FFE6   	movff	btemp,postinc1
  5123  011D0C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5124  011D12  0E08               	movlw	8
  5125  011D14  6EE6               	movwf	postinc1,c
  5126  011D16  EC92  F0CD         	call	_sprintf	;wreg free
  5127                           
  5128                           ;main.c: 363:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f     ", C.bkwo);
  5129  011D1A  EE21  F39F         	lfsr	2,_C+160	;volatile
  5130  011D1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5131  011D24  006F FF7B FFE6     	movff	postinc2,postinc1
  5132  011D2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5133  011D30  006F FF7B FFE6     	movff	postinc2,postinc1
  5134  011D36  0E60               	movlw	low STR_32
  5135  011D38  6EE6               	movwf	postinc1,c
  5136  011D3A  0EFE               	movlw	high STR_32
  5137  011D3C  6EE6               	movwf	postinc1,c
  5138  011D3E  0E01               	movlw	1
  5139  011D40  6EE6               	movwf	postinc1,c
  5140  011D42  0E01               	movlw	1
  5141  011D44  6EE6               	movwf	postinc1,c
  5142  011D46  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  5143  011D4A  0060  F007  FFE6   	movff	btemp,postinc1
  5144  011D50  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5145  011D56  0E08               	movlw	8
  5146  011D58  6EE6               	movwf	postinc1,c
  5147  011D5A  EC92  F0CD         	call	_sprintf	;wreg free
  5148                           
  5149                           ;main.c: 364:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f     ", C.bkwi + C.bkwo);
  5150  011D5E  EE21  F39F         	lfsr	2,_C+160	;volatile
  5151  011D62  006F FF7B FFE6     	movff	postinc2,postinc1
  5152  011D68  006F FF7B FFE6     	movff	postinc2,postinc1
  5153  011D6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5154  011D74  006F FF7B FFE6     	movff	postinc2,postinc1
  5155  011D7A  EE21  F39B         	lfsr	2,_C+156	;volatile
  5156  011D7E  006F FF7B FFE6     	movff	postinc2,postinc1
  5157  011D84  006F FF7B FFE6     	movff	postinc2,postinc1
  5158  011D8A  006F FF7B FFE6     	movff	postinc2,postinc1
  5159  011D90  006F FF7B FFE6     	movff	postinc2,postinc1
  5160  011D96  ECB4  F09D         	call	___fladd	;wreg free
  5161  011D9A  0060  F007  FFE6   	movff	btemp,postinc1
  5162  011DA0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5163  011DA6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5164  011DAC  0060  F013  FFE6   	movff	btemp+3,postinc1
  5165  011DB2  0E73               	movlw	low STR_33
  5166  011DB4  6EE6               	movwf	postinc1,c
  5167  011DB6  0EFE               	movlw	high STR_33
  5168  011DB8  6EE6               	movwf	postinc1,c
  5169  011DBA  0E01               	movlw	1
  5170  011DBC  6EE6               	movwf	postinc1,c
  5171  011DBE  0E02               	movlw	2
  5172  011DC0  6EE6               	movwf	postinc1,c
  5173  011DC2  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  5174  011DC6  0060  F007  FFE6   	movff	btemp,postinc1
  5175  011DCC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5176  011DD2  0E08               	movlw	8
  5177  011DD4  6EE6               	movwf	postinc1,c
  5178  011DD6  EC92  F0CD         	call	_sprintf	;wreg free
  5179                           
  5180                           ;main.c: 365:      break;
  5181  011DDA  D214               	goto	l13131
  5182  011DDC                     l1361:
  5183                           
  5184                           ; BSR set to: 1
  5185                           ;main.c: 367:      V.calib = 0;
  5186  011DDC  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  5187                           
  5188                           ; BSR set to: 1
  5189                           ;main.c: 368:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f     ", C.p_bat);
  5190  011DDE  EE21  F37F         	lfsr	2,_C+128	;volatile
  5191  011DE2  006F FF7B FFE6     	movff	postinc2,postinc1
  5192  011DE8  006F FF7B FFE6     	movff	postinc2,postinc1
  5193  011DEE  006F FF7B FFE6     	movff	postinc2,postinc1
  5194  011DF4  006F FF7B FFE6     	movff	postinc2,postinc1
  5195  011DFA  0EB0               	movlw	low STR_34
  5196  011DFC  6EE6               	movwf	postinc1,c
  5197  011DFE  0EFD               	movlw	high STR_34
  5198  011E00  6EE6               	movwf	postinc1,c
  5199  011E02  0E00               	movlw	0
  5200  011E04  6EE6               	movwf	postinc1,c
  5201  011E06  0E00               	movlw	0
  5202  011E08  6EE6               	movwf	postinc1,c
  5203  011E0A  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  5204  011E0E  0060  F007  FFE6   	movff	btemp,postinc1
  5205  011E14  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5206  011E1A  0E08               	movlw	8
  5207  011E1C  6EE6               	movwf	postinc1,c
  5208  011E1E  EC92  F0CD         	call	_sprintf	;wreg free
  5209                           
  5210                           ;main.c: 369:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f   ", C.dynamic_ah, C.p
      +                          v_ah);
  5211  011E22  EE21  F393         	lfsr	2,_C+148	;volatile
  5212  011E26  006F FF7B FFE6     	movff	postinc2,postinc1
  5213  011E2C  006F FF7B FFE6     	movff	postinc2,postinc1
  5214  011E32  006F FF7B FFE6     	movff	postinc2,postinc1
  5215  011E38  006F FF7B FFE6     	movff	postinc2,postinc1
  5216  011E3E  EE21  F38F         	lfsr	2,_C+144	;volatile
  5217  011E42  006F FF7B FFE6     	movff	postinc2,postinc1
  5218  011E48  006F FF7B FFE6     	movff	postinc2,postinc1
  5219  011E4E  006F FF7B FFE6     	movff	postinc2,postinc1
  5220  011E54  006F FF7B FFE6     	movff	postinc2,postinc1
  5221  011E5A  0E00               	movlw	low STR_35
  5222  011E5C  6EE6               	movwf	postinc1,c
  5223  011E5E  0EFE               	movlw	high STR_35
  5224  011E60  6EE6               	movwf	postinc1,c
  5225  011E62  0E00               	movlw	0
  5226  011E64  6EE6               	movwf	postinc1,c
  5227  011E66  0E01               	movlw	1
  5228  011E68  6EE6               	movwf	postinc1,c
  5229  011E6A  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  5230  011E6E  0060  F007  FFE6   	movff	btemp,postinc1
  5231  011E74  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5232  011E7A  0E0C               	movlw	12
  5233  011E7C  6EE6               	movwf	postinc1,c
  5234  011E7E  EC92  F0CD         	call	_sprintf	;wreg free
  5235                           
  5236                           ;main.c: 370:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d     ", spinners(5, 0), C
      +                          .soc, C.runtime);
  5237  011E82  EE21  F3AF         	lfsr	2,_C+176	;volatile
  5238  011E86  006F FF78  F00B    	movff	postinc2,btemp+10
  5239  011E8C  006F FF74  F00C    	movff	postdec2,btemp+11
  5240  011E92  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5241  011E98  0060  F033  FFE6   	movff	btemp+11,postinc1
  5242  011E9E  EE21  F3B1         	lfsr	2,_C+178	;volatile
  5243  011EA2  006F FF78  F00B    	movff	postinc2,btemp+10
  5244  011EA8  006F FF74  F00C    	movff	postdec2,btemp+11
  5245  011EAE  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5246  011EB4  0060  F033  FFE6   	movff	btemp+11,postinc1
  5247  011EBA  0E00               	movlw	0
  5248  011EBC  6EE6               	movwf	postinc1,c
  5249  011EBE  0E05               	movlw	5
  5250  011EC0  6EE6               	movwf	postinc1,c
  5251  011EC2  EC98  F0CE         	call	_spinners	;wreg free
  5252  011EC6  5001               	movf	btemp^0,w,c
  5253  011EC8  6EE6               	movwf	postinc1,c
  5254  011ECA  0E00               	movlw	0
  5255  011ECC  6EE6               	movwf	postinc1,c
  5256  011ECE  0E88               	movlw	low STR_36
  5257  011ED0  6EE6               	movwf	postinc1,c
  5258  011ED2  0EFD               	movlw	high STR_36
  5259  011ED4  6EE6               	movwf	postinc1,c
  5260  011ED6  0E00               	movlw	0
  5261  011ED8  6EE6               	movwf	postinc1,c
  5262  011EDA  0E02               	movlw	2
  5263  011EDC  6EE6               	movwf	postinc1,c
  5264  011EDE  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  5265  011EE2  0060  F007  FFE6   	movff	btemp,postinc1
  5266  011EE8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5267  011EEE  0E0A               	movlw	10
  5268  011EF0  6EE6               	movwf	postinc1,c
  5269  011EF2  EC92  F0CD         	call	_sprintf	;wreg free
  5270                           
  5271                           ;main.c: 372:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f         ", C.esr);
  5272  011EF6  EE21  F387         	lfsr	2,_C+136	;volatile
  5273  011EFA  006F FF7B FFE6     	movff	postinc2,postinc1
  5274  011F00  006F FF7B FFE6     	movff	postinc2,postinc1
  5275  011F06  006F FF7B FFE6     	movff	postinc2,postinc1
  5276  011F0C  006F FF7B FFE6     	movff	postinc2,postinc1
  5277  011F12  0E74               	movlw	low STR_37
  5278  011F14  6EE6               	movwf	postinc1,c
  5279  011F16  0EFD               	movlw	high STR_37
  5280  011F18  6EE6               	movwf	postinc1,c
  5281  011F1A  0E01               	movlw	1
  5282  011F1C  6EE6               	movwf	postinc1,c
  5283  011F1E  0E00               	movlw	0
  5284  011F20  6EE6               	movwf	postinc1,c
  5285  011F22  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  5286  011F26  0060  F007  FFE6   	movff	btemp,postinc1
  5287  011F2C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5288  011F32  0E08               	movlw	8
  5289  011F34  6EE6               	movwf	postinc1,c
  5290  011F36  EC92  F0CD         	call	_sprintf	;wreg free
  5291                           
  5292                           ;main.c: 373:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f     ", C.bv_one_load, C.
      +                          load_i1);
  5293  011F3A  EE22  F009         	lfsr	2,_C+266	;volatile
  5294  011F3E  006F FF7B FFE6     	movff	postinc2,postinc1
  5295  011F44  006F FF7B FFE6     	movff	postinc2,postinc1
  5296  011F4A  006F FF7B FFE6     	movff	postinc2,postinc1
  5297  011F50  006F FF7B FFE6     	movff	postinc2,postinc1
  5298  011F56  EE22  F015         	lfsr	2,_C+278	;volatile
  5299  011F5A  006F FF7B FFE6     	movff	postinc2,postinc1
  5300  011F60  006F FF7B FFE6     	movff	postinc2,postinc1
  5301  011F66  006F FF7B FFE6     	movff	postinc2,postinc1
  5302  011F6C  006F FF7B FFE6     	movff	postinc2,postinc1
  5303  011F72  0EC4               	movlw	low STR_38
  5304  011F74  6EE6               	movwf	postinc1,c
  5305  011F76  0EFD               	movlw	high STR_38
  5306  011F78  6EE6               	movwf	postinc1,c
  5307  011F7A  0E01               	movlw	1
  5308  011F7C  6EE6               	movwf	postinc1,c
  5309  011F7E  0E01               	movlw	1
  5310  011F80  6EE6               	movwf	postinc1,c
  5311  011F82  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  5312  011F86  0060  F007  FFE6   	movff	btemp,postinc1
  5313  011F8C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5314  011F92  0E0C               	movlw	12
  5315  011F94  6EE6               	movwf	postinc1,c
  5316  011F96  EC92  F0CD         	call	_sprintf	;wreg free
  5317                           
  5318                           ;main.c: 374:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f     ", C.bv_full_load, C
      +                          .load_i2);
  5319  011F9A  EE22  F00D         	lfsr	2,_C+270	;volatile
  5320  011F9E  006F FF7B FFE6     	movff	postinc2,postinc1
  5321  011FA4  006F FF7B FFE6     	movff	postinc2,postinc1
  5322  011FAA  006F FF7B FFE6     	movff	postinc2,postinc1
  5323  011FB0  006F FF7B FFE6     	movff	postinc2,postinc1
  5324  011FB6  EE22  F019         	lfsr	2,_C+282	;volatile
  5325  011FBA  006F FF7B FFE6     	movff	postinc2,postinc1
  5326  011FC0  006F FF7B FFE6     	movff	postinc2,postinc1
  5327  011FC6  006F FF7B FFE6     	movff	postinc2,postinc1
  5328  011FCC  006F FF7B FFE6     	movff	postinc2,postinc1
  5329  011FD2  0ED8               	movlw	low STR_39
  5330  011FD4  6EE6               	movwf	postinc1,c
  5331  011FD6  0EFD               	movlw	high STR_39
  5332  011FD8  6EE6               	movwf	postinc1,c
  5333  011FDA  0E01               	movlw	1
  5334  011FDC  6EE6               	movwf	postinc1,c
  5335  011FDE  0E02               	movlw	2
  5336  011FE0  6EE6               	movwf	postinc1,c
  5337  011FE2  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  5338  011FE6  0060  F007  FFE6   	movff	btemp,postinc1
  5339  011FEC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5340  011FF2  0E0C               	movlw	12
  5341  011FF4  6EE6               	movwf	postinc1,c
  5342  011FF6  EC92  F0CD         	call	_sprintf	;wreg free
  5343                           
  5344                           ;main.c: 375:      break;
  5345  011FFA  D104               	goto	l13131
  5346  011FFC                     l13115:
  5347                           
  5348                           ; BSR set to: 1
  5349                           ;main.c: 377:      if (!V.calib) {
  5350  011FFC  51AC               	movf	(_V+172)& (0+255),w,b	;volatile
  5351  011FFE  A4D8               	btfss	status,2,c
  5352  012000  D02D               	goto	l13119
  5353                           
  5354                           ; BSR set to: 1
  5355                           ;main.c: 378:       lp_filter(0.0, i, -1);
  5356  012002  0EFF               	movlw	255
  5357  012004  6EE6               	movwf	postinc1,c
  5358                           
  5359                           ;stkvar	_i @ sp[(-18)+13]
  5360  012006  0EFB               	movlw	-5
  5361  012008  50E3               	movf	plusw1,w,c
  5362  01200A  6EE6               	movwf	postinc1,c
  5363  01200C  0E00               	movlw	0
  5364  01200E  6EE6               	movwf	postinc1,c
  5365  012010  0E00               	movlw	0
  5366  012012  6EE6               	movwf	postinc1,c
  5367  012014  0E00               	movlw	0
  5368  012016  6EE6               	movwf	postinc1,c
  5369  012018  0E00               	movlw	0
  5370  01201A  6EE6               	movwf	postinc1,c
  5371  01201C  EC85  F0C2         	call	_lp_filter	;wreg free
  5372                           
  5373                           ;main.c: 379:       lp_filter(0.0, j, -1);
  5374  012020  0EFF               	movlw	255
  5375  012022  6EE6               	movwf	postinc1,c
  5376                           
  5377                           ;stkvar	_j @ sp[(-18)+12]
  5378  012024  0EFA               	movlw	-6
  5379  012026  50E3               	movf	plusw1,w,c
  5380  012028  6EE6               	movwf	postinc1,c
  5381  01202A  0E00               	movlw	0
  5382  01202C  6EE6               	movwf	postinc1,c
  5383  01202E  0E00               	movlw	0
  5384  012030  6EE6               	movwf	postinc1,c
  5385  012032  0E00               	movlw	0
  5386  012034  6EE6               	movwf	postinc1,c
  5387  012036  0E00               	movlw	0
  5388  012038  6EE6               	movwf	postinc1,c
  5389  01203A  EC85  F0C2         	call	_lp_filter	;wreg free
  5390                           
  5391                           ;main.c: 380:       lp_filter(0.0, k, -1);
  5392  01203E  0EFF               	movlw	255
  5393  012040  6EE6               	movwf	postinc1,c
  5394                           
  5395                           ;stkvar	_k @ sp[(-18)+11]
  5396  012042  0EF9               	movlw	-7
  5397  012044  50E3               	movf	plusw1,w,c
  5398  012046  6EE6               	movwf	postinc1,c
  5399  012048  0E00               	movlw	0
  5400  01204A  6EE6               	movwf	postinc1,c
  5401  01204C  0E00               	movlw	0
  5402  01204E  6EE6               	movwf	postinc1,c
  5403  012050  0E00               	movlw	0
  5404  012052  6EE6               	movwf	postinc1,c
  5405  012054  0E00               	movlw	0
  5406  012056  6EE6               	movwf	postinc1,c
  5407  012058  EC85  F0C2         	call	_lp_filter	;wreg free
  5408  01205C                     l13119:
  5409                           
  5410                           ;main.c: 382:      V.calib = 1;
  5411  01205C  0E01               	movlw	1
  5412  01205E  0101               	movlb	1	; () banked
  5413  012060  6FAC               	movwf	(_V+172)& (0+255),b	;volatile
  5414                           
  5415                           ; BSR set to: 1
  5416                           ;main.c: 383:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  5417  012062  0E02               	movlw	2
  5418  012064  6EE6               	movwf	postinc1,c
  5419  012066  ECB5  F0DB         	call	_get_switch	;wreg free
  5420  01206A  5001               	movf	btemp^0,w,c
  5421  01206C  6EE6               	movwf	postinc1,c
  5422  01206E  0E00               	movlw	0
  5423  012070  6EE6               	movwf	postinc1,c
  5424                           
  5425                           ;stkvar	_i @ sp[(-19)+13]
  5426  012072  0EFA               	movlw	-6
  5427  012074  50E3               	movf	plusw1,w,c
  5428  012076  0D04               	mullw	4
  5429  012078  0EFF               	movlw	low _C
  5430  01207A  24F3               	addwf	243,w,c
  5431  01207C  6ED9               	movwf	fsr2l,c
  5432  01207E  0E06               	movlw	high _C
  5433  012080  20F4               	addwfc	prodh,w,c
  5434  012082  6EDA               	movwf	fsr2h,c
  5435  012084  006F FF7B FFE6     	movff	postinc2,postinc1
  5436  01208A  006F FF7B FFE6     	movff	postinc2,postinc1
  5437  012090  006F FF7B FFE6     	movff	postinc2,postinc1
  5438  012096  006F FF7B FFE6     	movff	postinc2,postinc1
  5439                           
  5440                           ;stkvar	_i @ sp[(-23)+13]
  5441  01209C  0EF6               	movlw	-10
  5442  01209E  50E3               	movf	plusw1,w,c
  5443  0120A0  6EE6               	movwf	postinc1,c
  5444  0120A2  EC3F  F0DE         	call	_get_raw_result	;wreg free
  5445  0120A6  0060  F007  FFE6   	movff	btemp,postinc1
  5446  0120AC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5447  0120B2  0E83               	movlw	low STR_19
  5448  0120B4  6EE6               	movwf	postinc1,c
  5449  0120B6  0EFF               	movlw	high STR_19
  5450  0120B8  6EE6               	movwf	postinc1,c
  5451  0120BA  0E00               	movlw	0
  5452  0120BC  6EE6               	movwf	postinc1,c
  5453  0120BE  0E00               	movlw	0
  5454  0120C0  6EE6               	movwf	postinc1,c
  5455  0120C2  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  5456  0120C6  0060  F007  FFE6   	movff	btemp,postinc1
  5457  0120CC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5458  0120D2  0E0C               	movlw	12
  5459  0120D4  6EE6               	movwf	postinc1,c
  5460  0120D6  EC92  F0CD         	call	_sprintf	;wreg free
  5461                           
  5462                           ; BSR set to: 0
  5463                           ;main.c: 384:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  5464  0120DA  0E03               	movlw	3
  5465  0120DC  6EE6               	movwf	postinc1,c
  5466  0120DE  ECB5  F0DB         	call	_get_switch	;wreg free
  5467  0120E2  5001               	movf	btemp^0,w,c
  5468  0120E4  6EE6               	movwf	postinc1,c
  5469  0120E6  0E00               	movlw	0
  5470  0120E8  6EE6               	movwf	postinc1,c
  5471                           
  5472                           ;stkvar	_j @ sp[(-19)+12]
  5473  0120EA  0EF9               	movlw	-7
  5474  0120EC  50E3               	movf	plusw1,w,c
  5475  0120EE  0D04               	mullw	4
  5476  0120F0  0EFF               	movlw	low _C
  5477  0120F2  24F3               	addwf	243,w,c
  5478  0120F4  6ED9               	movwf	fsr2l,c
  5479  0120F6  0E06               	movlw	high _C
  5480  0120F8  20F4               	addwfc	prodh,w,c
  5481  0120FA  6EDA               	movwf	fsr2h,c
  5482  0120FC  006F FF7B FFE6     	movff	postinc2,postinc1
  5483  012102  006F FF7B FFE6     	movff	postinc2,postinc1
  5484  012108  006F FF7B FFE6     	movff	postinc2,postinc1
  5485  01210E  006F FF7B FFE6     	movff	postinc2,postinc1
  5486                           
  5487                           ;stkvar	_j @ sp[(-23)+12]
  5488  012114  0EF5               	movlw	-11
  5489  012116  50E3               	movf	plusw1,w,c
  5490  012118  6EE6               	movwf	postinc1,c
  5491  01211A  EC3F  F0DE         	call	_get_raw_result	;wreg free
  5492  01211E  0060  F007  FFE6   	movff	btemp,postinc1
  5493  012124  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5494  01212A  0E83               	movlw	low STR_19
  5495  01212C  6EE6               	movwf	postinc1,c
  5496  01212E  0EFF               	movlw	high STR_19
  5497  012130  6EE6               	movwf	postinc1,c
  5498  012132  0E00               	movlw	0
  5499  012134  6EE6               	movwf	postinc1,c
  5500  012136  0E01               	movlw	1
  5501  012138  6EE6               	movwf	postinc1,c
  5502  01213A  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  5503  01213E  0060  F007  FFE6   	movff	btemp,postinc1
  5504  012144  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5505  01214A  0E0C               	movlw	12
  5506  01214C  6EE6               	movwf	postinc1,c
  5507  01214E  EC92  F0CD         	call	_sprintf	;wreg free
  5508                           
  5509                           ; BSR set to: 0
  5510                           ;main.c: 385:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  5511                           ;stkvar	_inp_index @ sp[(-17)+14]
  5512  012152  0EFD               	movlw	-3
  5513  012154  50E3               	movf	plusw1,w,c
  5514  012156  6E0B               	movwf	(btemp+10)^0,c
  5515  012158  6A0C               	clrf	(btemp+11)^0,c
  5516  01215A  0E01               	movlw	1
  5517  01215C  260B               	addwf	(btemp+10)^0,f,c
  5518  01215E  0E00               	movlw	0
  5519  012160  220C               	addwfc	(btemp+11)^0,f,c
  5520  012162  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5521  012168  0060  F033  FFE6   	movff	btemp+11,postinc1
  5522                           
  5523                           ;stkvar	_k @ sp[(-19)+11]
  5524  01216E  0EF8               	movlw	-8
  5525  012170  50E3               	movf	plusw1,w,c
  5526  012172  0D04               	mullw	4
  5527  012174  0EFF               	movlw	low _C
  5528  012176  24F3               	addwf	243,w,c
  5529  012178  6ED9               	movwf	fsr2l,c
  5530  01217A  0E06               	movlw	high _C
  5531  01217C  20F4               	addwfc	prodh,w,c
  5532  01217E  6EDA               	movwf	fsr2h,c
  5533  012180  006F FF7B FFE6     	movff	postinc2,postinc1
  5534  012186  006F FF7B FFE6     	movff	postinc2,postinc1
  5535  01218C  006F FF7B FFE6     	movff	postinc2,postinc1
  5536  012192  006F FF7B FFE6     	movff	postinc2,postinc1
  5537                           
  5538                           ;stkvar	_k @ sp[(-23)+11]
  5539  012198  0EF4               	movlw	-12
  5540  01219A  50E3               	movf	plusw1,w,c
  5541  01219C  6EE6               	movwf	postinc1,c
  5542  01219E  EC3F  F0DE         	call	_get_raw_result	;wreg free
  5543  0121A2  0060  F007  FFE6   	movff	btemp,postinc1
  5544  0121A8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5545  0121AE  0E61               	movlw	low STR_21
  5546  0121B0  6EE6               	movwf	postinc1,c
  5547  0121B2  0EFF               	movlw	high STR_21
  5548  0121B4  6EE6               	movwf	postinc1,c
  5549  0121B6  0E00               	movlw	0
  5550  0121B8  6EE6               	movwf	postinc1,c
  5551  0121BA  0E02               	movlw	2
  5552  0121BC  6EE6               	movwf	postinc1,c
  5553  0121BE  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  5554  0121C2  0060  F007  FFE6   	movff	btemp,postinc1
  5555  0121C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5556  0121CE  0E0C               	movlw	12
  5557  0121D0  6EE6               	movwf	postinc1,c
  5558  0121D2  EC92  F0CD         	call	_sprintf	;wreg free
  5559                           
  5560                           ;main.c: 386:      break;
  5561  0121D6  D016               	goto	l13131
  5562  0121D8                     l13129:
  5563  0121D8  0101               	movlb	1	; () banked
  5564  0121DA  51BF               	movf	_H& (0+255),w,b
  5565  0121DC  6E0B               	movwf	(btemp+10)^0,c
  5566  0121DE  6A0C               	clrf	(btemp+11)^0,c
  5567                           
  5568                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5569                           ; Switch size 1, requested type "simple"
  5570                           ; Number of cases is 1, Range of values is 0 to 0
  5571                           ; switch strategies available:
  5572                           ; Name         Instructions Cycles
  5573                           ; simple_byte            4     3 (average)
  5574                           ;	Chosen strategy is simple_byte
  5575  0121E0  500C               	movf	(btemp+11)^0,w,c
  5576  0121E2  0A00               	xorlw	0	; case 0
  5577  0121E4  A4D8               	btfss	status,2,c
  5578  0121E6  D00E               	goto	l13131
  5579                           
  5580                           ; BSR set to: 1
  5581                           ; Switch size 1, requested type "simple"
  5582                           ; Number of cases is 4, Range of values is 0 to 3
  5583                           ; switch strategies available:
  5584                           ; Name         Instructions Cycles
  5585                           ; simple_byte           13     7 (average)
  5586                           ;	Chosen strategy is simple_byte
  5587  0121E8  500B               	movf	(btemp+10)^0,w,c
  5588  0121EA  0A00               	xorlw	0	; case 0
  5589  0121EC  B4D8               	btfsc	status,2,c
  5590  0121EE  D4E2               	goto	l1360
  5591  0121F0  0A01               	xorlw	1	; case 1
  5592  0121F2  B4D8               	btfsc	status,2,c
  5593  0121F4  EFD8  F08C         	goto	l1350
  5594  0121F8  0A03               	xorlw	3	; case 2
  5595  0121FA  B4D8               	btfsc	status,2,c
  5596  0121FC  D5EF               	goto	l1361
  5597  0121FE  0A01               	xorlw	1	; case 3
  5598  012200  B4D8               	btfsc	status,2,c
  5599  012202  D6FC               	goto	l13115
  5600  012204                     l13131:
  5601                           
  5602                           ;main.c: 390:     clear_hid_pflags(&H);
  5603  012204  0EBF               	movlw	low _H
  5604  012206  6EE6               	movwf	postinc1,c
  5605  012208  0E01               	movlw	high _H
  5606  01220A  6EE6               	movwf	postinc1,c
  5607  01220C  EC35  F0D9         	call	_clear_hid_pflags	;wreg free
  5608                           
  5609                           ;main.c: 392:    StartTimer(TMR_DISPLAY, 250);
  5610  012210  0EFA               	movlw	250
  5611  012212  6EE6               	movwf	postinc1,c
  5612  012214  0E00               	movlw	0
  5613  012216  6EE6               	movwf	postinc1,c
  5614  012218  0E0A               	movlw	10
  5615  01221A  6EE6               	movwf	postinc1,c
  5616  01221C  ECE1  F0D9         	call	_StartTimer	;wreg free
  5617                           
  5618                           ;main.c: 393:    V.enter = check_enter_button(&H);
  5619  012220  0EBF               	movlw	low _H
  5620  012222  6EE6               	movwf	postinc1,c
  5621  012224  0E01               	movlw	high _H
  5622  012226  6EE6               	movwf	postinc1,c
  5623  012228  ECB5  F0D5         	call	_check_enter_button	;wreg free
  5624  01222C  5001               	movf	btemp^0,w,c
  5625  01222E  0101               	movlb	1	; () banked
  5626  012230  6FAD               	movwf	(_V+173)& (0+255),b	;volatile
  5627                           
  5628                           ; BSR set to: 1
  5629                           ;main.c: 394:    if (V.enter && (H.hid_display != HID_AUX)) {
  5630  012232  51AD               	movf	(_V+173)& (0+255),w,b	;volatile
  5631  012234  B4D8               	btfsc	status,2,c
  5632  012236  D011               	goto	l13145
  5633                           
  5634                           ; BSR set to: 1
  5635  012238  0E03               	movlw	3
  5636  01223A  19BF               	xorwf	_H& (0+255),w,b
  5637  01223C  B4D8               	btfsc	status,2,c
  5638  01223E  D00D               	goto	l13145
  5639                           
  5640                           ; BSR set to: 1
  5641                           ;main.c: 395:     V.enter = 0;
  5642  012240  6BAD               	clrf	(_V+173)& (0+255),b	;volatile
  5643                           
  5644                           ; BSR set to: 1
  5645                           ;main.c: 396:     V.screen = ~V.screen;
  5646  012242  A19C               	btfss	(_V+156)& (0+255),0,b	;volatile
  5647  012244  D002               	goto	u12670
  5648  012246  0E01               	movlw	1
  5649  012248  D001               	goto	u12676
  5650  01224A                     u12670:
  5651  01224A  0E00               	movlw	0
  5652  01224C                     u12676:
  5653  01224C  0AFF               	xorlw	255
  5654  01224E  6E0C               	movwf	(btemp+11)^0,c
  5655  012250  519C               	movf	(_V+156)& (0+255),w,b	;volatile
  5656  012252  180C               	xorwf	(btemp+11)^0,w,c
  5657  012254  0BFE               	andlw	-2
  5658  012256  180C               	xorwf	(btemp+11)^0,w,c
  5659  012258  6F9C               	movwf	(_V+156)& (0+255),b	;volatile
  5660  01225A                     l13145:
  5661                           
  5662                           ; BSR set to: 1
  5663                           ;main.c: 398:    set_vterm(V.screen);
  5664  01225A  A19C               	btfss	(_V+156)& (0+255),0,b	;volatile
  5665  01225C  D002               	goto	u12680
  5666  01225E  0E01               	movlw	1
  5667  012260  D001               	goto	u12686
  5668  012262                     u12680:
  5669  012262  0E00               	movlw	0
  5670  012264                     u12686:
  5671  012264  6EE6               	movwf	postinc1,c
  5672  012266  EC21  F0DE         	call	_set_vterm	;wreg free
  5673                           
  5674                           ;main.c: 399:    update_lcd(V.screen);
  5675  01226A  0101               	movlb	1	; () banked
  5676  01226C  A19C               	btfss	(_V+156)& (0+255),0,b	;volatile
  5677  01226E  D002               	goto	u12690
  5678  012270  0E01               	movlw	1
  5679  012272  D001               	goto	u12696
  5680  012274                     u12690:
  5681  012274  0E00               	movlw	0
  5682  012276                     u12696:
  5683  012276  6EE6               	movwf	postinc1,c
  5684  012278  EC0A  F0CD         	call	_update_lcd	;wreg free
  5685  01227C                     l13149:
  5686                           
  5687                           ;main.c: 405:   check_help(V.flipper);
  5688  01227C  0101               	movlb	1	; () banked
  5689  01227E  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  5690  012280  6EE6               	movwf	postinc1,c
  5691  012282  EC8C  F0BF         	call	_check_help	;wreg free
  5692                           
  5693                           ;main.c: 407:   if (V.enter) {
  5694  012286  0101               	movlb	1	; () banked
  5695  012288  51AD               	movf	(_V+173)& (0+255),w,b	;volatile
  5696  01228A  B4D8               	btfsc	status,2,c
  5697  01228C  D062               	goto	l1366
  5698                           
  5699                           ; BSR set to: 1
  5700                           ;main.c: 408:    V.enter = 0;
  5701  01228E  6BAD               	clrf	(_V+173)& (0+255),b	;volatile
  5702                           
  5703                           ;main.c: 409:    V.calib = 0;
  5704  012290  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  5705                           
  5706                           ; BSR set to: 1
  5707                           ;main.c: 410:    inp_index += 3;
  5708                           ;stkvar	_inp_index @ sp[(-17)+14]
  5709  012292  0EFD               	movlw	-3
  5710  012294  006F FF8C  F001    	movff	plusw1,btemp
  5711  01229A  0E03               	movlw	3
  5712  01229C  2601               	addwf	btemp^0,f,c
  5713  01229E  0EFD               	movlw	-3
  5714  0122A0  0060  F007  FFE3   	movff	btemp,plusw1
  5715                           
  5716                           ;main.c: 411:    if (inp_index > 9)
  5717                           ;stkvar	_inp_index @ sp[(-17)+14]
  5718  0122A6  0EFD               	movlw	-3
  5719  0122A8  006F FF8C  F001    	movff	plusw1,btemp
  5720  0122AE  0E09               	movlw	9
  5721  0122B0  6401               	cpfsgt	btemp^0,c
  5722  0122B2  D03A               	goto	l13177
  5723                           
  5724                           ; BSR set to: 1
  5725                           ;main.c: 412:     inp_index = 0;
  5726                           ;stkvar	_inp_index @ sp[(-17)+14]
  5727  0122B4  0EFD               	movlw	-3
  5728  0122B6  6AE3               	clrf	plusw1,c
  5729  0122B8  D037               	goto	l13177
  5730  0122BA                     l13159:
  5731                           
  5732                           ; BSR set to: 1
  5733                           ;main.c: 415:     i = C_BATT;
  5734                           ;stkvar	_i @ sp[(-17)+13]
  5735  0122BA  0EFC               	movlw	-4
  5736  0122BC  6AE3               	clrf	plusw1,c
  5737                           
  5738                           ; BSR set to: 1
  5739                           ;main.c: 416:     j = C_PV;
  5740                           ;stkvar	_j @ sp[(-17)+12]
  5741  0122BE  0EFB               	movlw	-5
  5742  0122C0  6AE3               	clrf	plusw1,c
  5743  0122C2  2AE3               	incf	plusw1,f,c
  5744                           
  5745                           ; BSR set to: 1
  5746                           ;main.c: 417:     k = V_CC;
  5747                           ;stkvar	_k @ sp[(-17)+11]
  5748  0122C4  0EFA               	movlw	-6
  5749  0122C6  6AE3               	clrf	plusw1,c
  5750  0122C8  82E3               	bsf	plusw1,1,c
  5751                           
  5752                           ;main.c: 418:     break;
  5753  0122CA  D043               	goto	l1366
  5754  0122CC                     l13165:
  5755                           
  5756                           ; BSR set to: 1
  5757                           ;main.c: 420:     i = V_BAT;
  5758                           ;stkvar	_i @ sp[(-17)+13]
  5759  0122CC  0EFC               	movlw	-4
  5760  0122CE  6AE3               	clrf	plusw1,c
  5761  0122D0  84E3               	bsf	plusw1,2,c
  5762                           
  5763                           ;main.c: 421:     j = V_PV;
  5764                           ;stkvar	_j @ sp[(-17)+12]
  5765  0122D2  0EFB               	movlw	-5
  5766  0122D4  6AE3               	clrf	plusw1,c
  5767  0122D6  80E3               	bsf	plusw1,0,c
  5768  0122D8  84E3               	bsf	plusw1,2,c	;indir
  5769                           
  5770                           ;main.c: 422:     k = V_CBUS;
  5771                           ;stkvar	_k @ sp[(-17)+11]
  5772  0122DA  0EFA               	movlw	-6
  5773  0122DC  6AE3               	clrf	plusw1,c
  5774  0122DE  82E3               	bsf	plusw1,1,c
  5775  0122E0  84E3               	bsf	plusw1,2,c	;indir
  5776                           
  5777                           ;main.c: 423:     break;
  5778  0122E2  D037               	goto	l1366
  5779  0122E4                     l13167:
  5780                           
  5781                           ; BSR set to: 1
  5782                           ;main.c: 425:     i = V_BBAT;
  5783                           ;stkvar	_i @ sp[(-17)+13]
  5784  0122E4  0EFC               	movlw	-4
  5785  0122E6  6AE3               	clrf	plusw1,c
  5786  0122E8  82E3               	bsf	plusw1,1,c
  5787  0122EA  86E3               	bsf	plusw1,3,c	;indir
  5788                           
  5789                           ; BSR set to: 1
  5790                           ;main.c: 426:     j = V_TEMP;
  5791  0122EC  0E0B               	movlw	11
  5792  0122EE  6E0C               	movwf	(btemp+11)^0,c
  5793                           
  5794                           ;stkvar	_j @ sp[(-17)+12]
  5795  0122F0  0EFB               	movlw	-5
  5796  0122F2  0060  F033  FFE3   	movff	btemp+11,plusw1
  5797                           
  5798                           ; BSR set to: 1
  5799                           ;main.c: 427:     k = V_INVERTER;
  5800                           ;stkvar	_k @ sp[(-17)+11]
  5801  0122F8  0EFA               	movlw	-6
  5802  0122FA  6AE3               	clrf	plusw1,c
  5803  0122FC  84E3               	bsf	plusw1,2,c
  5804  0122FE  86E3               	bsf	plusw1,3,c	;indir
  5805                           
  5806                           ;main.c: 428:     break;
  5807  012300  D028               	goto	l1366
  5808  012302                     l13173:
  5809                           
  5810                           ; BSR set to: 1
  5811                           ;main.c: 430:     i = V_LIGHT_SENSOR;
  5812  012302  0E0D               	movlw	13
  5813  012304  6E0C               	movwf	(btemp+11)^0,c
  5814                           
  5815                           ;stkvar	_i @ sp[(-17)+13]
  5816  012306  0EFC               	movlw	-4
  5817  012308  0060  F033  FFE3   	movff	btemp+11,plusw1
  5818                           
  5819                           ;main.c: 431:     j = V_LIGHT_SENSOR;
  5820  01230E  0E0D               	movlw	13
  5821  012310  6E0C               	movwf	(btemp+11)^0,c
  5822                           
  5823                           ;stkvar	_j @ sp[(-17)+12]
  5824  012312  0EFB               	movlw	-5
  5825  012314  0060  F033  FFE3   	movff	btemp+11,plusw1
  5826                           
  5827                           ;main.c: 432:     k = V_LIGHT_SENSOR;
  5828  01231A  0E0D               	movlw	13
  5829  01231C  6E0C               	movwf	(btemp+11)^0,c
  5830                           
  5831                           ;stkvar	_k @ sp[(-17)+11]
  5832  01231E  0EFA               	movlw	-6
  5833  012320  0060  F033  FFE3   	movff	btemp+11,plusw1
  5834                           
  5835                           ;main.c: 433:     break;
  5836  012326  D015               	goto	l1366
  5837  012328                     l13177:
  5838                           
  5839                           ; BSR set to: 1
  5840                           ;stkvar	_inp_index @ sp[(-17)+14]
  5841  012328  0EFD               	movlw	-3
  5842  01232A  50E3               	movf	plusw1,w,c
  5843  01232C  6E0B               	movwf	(btemp+10)^0,c
  5844  01232E  6A0C               	clrf	(btemp+11)^0,c
  5845                           
  5846                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5847                           ; Switch size 1, requested type "simple"
  5848                           ; Number of cases is 1, Range of values is 0 to 0
  5849                           ; switch strategies available:
  5850                           ; Name         Instructions Cycles
  5851                           ; simple_byte            4     3 (average)
  5852                           ;	Chosen strategy is simple_byte
  5853  012330  500C               	movf	(btemp+11)^0,w,c
  5854  012332  0A00               	xorlw	0	; case 0
  5855  012334  A4D8               	btfss	status,2,c
  5856  012336  D00D               	goto	l1366
  5857                           
  5858                           ; BSR set to: 1
  5859                           ; Switch size 1, requested type "simple"
  5860                           ; Number of cases is 4, Range of values is 0 to 9
  5861                           ; switch strategies available:
  5862                           ; Name         Instructions Cycles
  5863                           ; simple_byte           13     7 (average)
  5864                           ;	Chosen strategy is simple_byte
  5865  012338  500B               	movf	(btemp+10)^0,w,c
  5866  01233A  0A00               	xorlw	0	; case 0
  5867  01233C  B4D8               	btfsc	status,2,c
  5868  01233E  D7BD               	goto	l13159
  5869  012340  0A03               	xorlw	3	; case 3
  5870  012342  B4D8               	btfsc	status,2,c
  5871  012344  D7C3               	goto	l13165
  5872  012346  0A05               	xorlw	5	; case 6
  5873  012348  B4D8               	btfsc	status,2,c
  5874  01234A  D7CC               	goto	l13167
  5875  01234C  0A0F               	xorlw	15	; case 9
  5876  01234E  B4D8               	btfsc	status,2,c
  5877  012350  D7D8               	goto	l13173
  5878  012352                     l1366:
  5879                           
  5880                           ; BSR set to: 1
  5881                           ;main.c: 442:   if (V.set_sequ) {
  5882  012352  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  5883  012354  EF8A  F08C         	goto	l13059
  5884                           
  5885                           ; BSR set to: 1
  5886                           ;main.c: 443:    if (TimerDone(TMR_INFO)) {
  5887  012358  0E07               	movlw	7
  5888  01235A  6EE6               	movwf	postinc1,c
  5889  01235C  EC5D  F0DC         	call	_TimerDone	;wreg free
  5890  012360  5001               	movf	btemp^0,w,c
  5891  012362  B4D8               	btfsc	status,2,c
  5892  012364  D00C               	goto	l13187
  5893                           
  5894                           ;main.c: 444:     V.set_sequ = 0;
  5895  012366  0101               	movlb	1	; () banked
  5896  012368  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  5897                           
  5898                           ; BSR set to: 1
  5899                           ;main.c: 445:     set_vterm(0);
  5900  01236A  0E00               	movlw	0
  5901  01236C  6EE6               	movwf	postinc1,c
  5902  01236E  EC21  F0DE         	call	_set_vterm	;wreg free
  5903                           
  5904                           ;main.c: 446:     update_lcd(0);
  5905  012372  0E00               	movlw	0
  5906  012374  6EE6               	movwf	postinc1,c
  5907  012376  EC0A  F0CD         	call	_update_lcd	;wreg free
  5908                           
  5909                           ;main.c: 447:    } else {
  5910  01237A  EF8A  F08C         	goto	l13059
  5911  01237E                     l13187:
  5912                           
  5913                           ;main.c: 448:     set_vterm(2);
  5914  01237E  0E02               	movlw	2
  5915  012380  6EE6               	movwf	postinc1,c
  5916  012382  EC21  F0DE         	call	_set_vterm	;wreg free
  5917                           
  5918                           ;main.c: 449:     update_lcd(2);
  5919  012386  0E02               	movlw	2
  5920  012388  6EE6               	movwf	postinc1,c
  5921  01238A  EC0A  F0CD         	call	_update_lcd	;wreg free
  5922  01238E  EF8A  F08C         	goto	l13059
  5923  012392                     __end_of_main:
  5924                           	opt callstack 0
  5925                           
  5926 ;; *************** function _static_soc *****************
  5927 ;; Defined at:
  5928 ;;		line 117 in file "mbmc.c"
  5929 ;; Parameters:    Size  Location     Type
  5930 ;;		None
  5931 ;; Auto vars:     Size  Location     Type
  5932 ;;		None
  5933 ;; Return value:  Size  Location     Type
  5934 ;;                  1  [STACK] void 
  5935 ;; Registers used:
  5936 ;;		wreg, fsr2l, fsr2h
  5937 ;; Tracked objects:
  5938 ;;		On entry : 0/0
  5939 ;;		On exit  : 0/0
  5940 ;;		Unchanged: 0/0
  5941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5946 ;;Total ram usage:        0 bytes
  5947 ;; Hardware stack levels used:    1
  5948 ;; Hardware stack levels required when called:   15
  5949 ;; This function calls:
  5950 ;;		Nothing
  5951 ;; This function is called by:
  5952 ;;		_main
  5953 ;; This function uses a reentrant model
  5954 ;;
  5955                           
  5956                           	psect	text1
  5957  01B482                     __ptext1:
  5958                           	opt callstack 0
  5959  01B482                     _static_soc:
  5960                           	opt callstack 15
  5961                           
  5962                           ;mbmc.c: 119:  C.runtime = 120;
  5963                           
  5964                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5965                           ;incstack = 0
  5966  01B482  0E78               	movlw	120
  5967  01B484  006F FFA0  F7AF    	movff	wreg,_C+176	;volatile
  5968  01B48A  0E00               	movlw	0
  5969  01B48C  006F FFA0  F7B0    	movff	wreg,_C+177	;volatile
  5970                           
  5971                           ;mbmc.c: 120:  C.soc = 100;
  5972  01B492  0E64               	movlw	100
  5973  01B494  006F FFA0  F7B1    	movff	wreg,_C+178	;volatile
  5974  01B49A  0E00               	movlw	0
  5975  01B49C  006F FFA0  F7B2    	movff	wreg,_C+179	;volatile
  5976                           
  5977                           ;mbmc.c: 121:  C.dynamic_ah = C.bank_ah;
  5978  01B4A2  EE21  F38B         	lfsr	2,_C+140	;volatile
  5979  01B4A6  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
  5980  01B4AC  006F FF78  F790    	movff	postinc2,_C+145	;volatile
  5981  01B4B2  006F FF78  F791    	movff	postinc2,_C+146	;volatile
  5982  01B4B8  006F FF74  F792    	movff	postdec2,_C+147	;volatile
  5983                           
  5984                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5985  01B4BE  0012               	return		;funcret
  5986  01B4C0                     __end_of_static_soc:
  5987                           	opt callstack 0
  5988                           
  5989 ;; *************** function _start_switch_handler *****************
  5990 ;; Defined at:
  5991 ;;		line 121 in file "dio.c"
  5992 ;; Parameters:    Size  Location     Type
  5993 ;;		None
  5994 ;; Auto vars:     Size  Location     Type
  5995 ;;		None
  5996 ;; Return value:  Size  Location     Type
  5997 ;;                  1  [STACK] void 
  5998 ;; Registers used:
  5999 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  6000 ;; Tracked objects:
  6001 ;;		On entry : 1/0
  6002 ;;		On exit  : 3F/39
  6003 ;;		Unchanged: 0/0
  6004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6009 ;;Total ram usage:        0 bytes
  6010 ;; Hardware stack levels used:    1
  6011 ;; Hardware stack levels required when called:   16
  6012 ;; This function calls:
  6013 ;;		_INT1_SetInterruptHandler
  6014 ;; This function is called by:
  6015 ;;		_main
  6016 ;; This function uses a reentrant model
  6017 ;;
  6018                           
  6019                           	psect	text2
  6020  01BBE4                     __ptext2:
  6021                           	opt callstack 0
  6022  01BBE4                     _start_switch_handler:
  6023                           	opt callstack 14
  6024                           
  6025                           ;dio.c: 123:  (PIE5bits.INT1IE = 0);
  6026                           
  6027                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6028                           ;incstack = 0
  6029  01BBE4  0139               	movlb	57	; () banked
  6030  01BBE6  9195               	bcf	149,0,b	;volatile
  6031                           
  6032                           ; BSR set to: 57
  6033                           ;dio.c: 124:  INT1_SetInterruptHandler(switch_handler);
  6034  01BBE8  0E28               	movlw	low _switch_handler
  6035  01BBEA  6EE6               	movwf	postinc1,c
  6036  01BBEC  0E92               	movlw	high _switch_handler
  6037  01BBEE  6EE6               	movwf	postinc1,c
  6038  01BBF0  0E01               	movlw	low (_switch_handler shr (0+16))
  6039  01BBF2  6EE6               	movwf	postinc1,c
  6040  01BBF4  ECE9  F0DC         	call	_INT1_SetInterruptHandler	;wreg free
  6041                           
  6042                           ;dio.c: 125:  S.button[SNULL].sw = SW_INVALID;
  6043  01BBF8  0E02               	movlw	2
  6044  01BBFA  0101               	movlb	1	; () banked
  6045  01BBFC  6FE9               	movwf	(_S+35)& (0+255),b	;volatile
  6046                           
  6047                           ; BSR set to: 1
  6048                           ;dio.c: 126:  (PIE5bits.INT1IE = 1);
  6049  01BBFE  0139               	movlb	57	; () banked
  6050  01BC00  8195               	bsf	149,0,b	;volatile
  6051                           
  6052                           ; BSR set to: 57
  6053                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  6054  01BC02  0012               	return		;funcret
  6055  01BC04                     __end_of_start_switch_handler:
  6056                           	opt callstack 0
  6057                           
  6058 ;; *************** function _srand *****************
  6059 ;; Defined at:
  6060 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  6061 ;; Parameters:    Size  Location     Type
  6062 ;;  s               2  [STACK] unsigned int 
  6063 ;; Auto vars:     Size  Location     Type
  6064 ;;		None
  6065 ;; Return value:  Size  Location     Type
  6066 ;;                  1  [STACK] void 
  6067 ;; Registers used:
  6068 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  6069 ;; Tracked objects:
  6070 ;;		On entry : 0/0
  6071 ;;		On exit  : 3F/2
  6072 ;;		Unchanged: 0/0
  6073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6078 ;;Total ram usage:        0 bytes
  6079 ;; Hardware stack levels used:    1
  6080 ;; Hardware stack levels required when called:   15
  6081 ;; This function calls:
  6082 ;;		Nothing
  6083 ;; This function is called by:
  6084 ;;		_main
  6085 ;; This function uses a reentrant model
  6086 ;;
  6087                           
  6088                           	psect	text3
  6089  01B614                     __ptext3:
  6090                           	opt callstack 0
  6091  01B614                     _srand:
  6092                           	opt callstack 15
  6093                           
  6094                           ;stkvar	_s @ sp[(0)+-2]
  6095                           
  6096                           ; BSR set to: 57
  6097                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6098                           ;incstack = 0
  6099  01B614  0EFE               	movlw	-2
  6100  01B616  50E3               	movf	plusw1,w,c
  6101  01B618  0FFF               	addlw	255
  6102  01B61A  6E0B               	movwf	(btemp+10)^0,c
  6103  01B61C  0EFF               	movlw	-1
  6104  01B61E  006F FF8C  F00C    	movff	plusw1,btemp+11
  6105  01B624  0EFF               	movlw	255
  6106  01B626  220C               	addwfc	(btemp+11)^0,f,c
  6107  01B628  0060  F02C  F2C6   	movff	btemp+10,_seed
  6108  01B62E  0060  F030  F2C7   	movff	btemp+11,_seed+1
  6109  01B634  0102               	movlb	2	; () banked
  6110  01B636  6BC8               	clrf	(_seed+2)& (0+255),b
  6111  01B638  6BC9               	clrf	(_seed+3)& (0+255),b
  6112  01B63A  6BCA               	clrf	(_seed+4)& (0+255),b
  6113  01B63C  6BCB               	clrf	(_seed+5)& (0+255),b
  6114  01B63E  6BCC               	clrf	(_seed+6)& (0+255),b
  6115  01B640  6BCD               	clrf	(_seed+7)& (0+255),b
  6116                           
  6117                           ; BSR set to: 2
  6118                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  6119  01B642  52E5               	movf	postdec1,f,c
  6120  01B644  52E5               	movf	postdec1,f,c
  6121  01B646  0012               	return		;funcret
  6122  01B648                     __end_of_srand:
  6123                           	opt callstack 0
  6124                           
  6125 ;; *************** function _spinners *****************
  6126 ;; Defined at:
  6127 ;;		line 145 in file "mbmc.c"
  6128 ;; Parameters:    Size  Location     Type
  6129 ;;  shape           1  [STACK] unsigned char 
  6130 ;;  reset           1  [STACK] unsigned char 
  6131 ;; Auto vars:     Size  Location     Type
  6132 ;;  c               1  [STACK] unsigned char 
  6133 ;; Return value:  Size  Location     Type
  6134 ;;                  1  [STACK] unsigned char 
  6135 ;; Registers used:
  6136 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
  6137 ;; Tracked objects:
  6138 ;;		On entry : 0/0
  6139 ;;		On exit  : 0/0
  6140 ;;		Unchanged: 0/0
  6141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6146 ;;Total ram usage:        0 bytes
  6147 ;; Hardware stack levels used:    1
  6148 ;; Hardware stack levels required when called:   16
  6149 ;; This function calls:
  6150 ;;		_strlen
  6151 ;; This function is called by:
  6152 ;;		_main
  6153 ;; This function uses a reentrant model
  6154 ;;
  6155                           
  6156                           	psect	text4
  6157  019D30                     __ptext4:
  6158                           	opt callstack 0
  6159  019D30                     _spinners:
  6160                           	opt callstack 0
  6161                           
  6162                           ; BSR set to: 2
  6163                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6164  019D30  52E6               	movf	postinc1,f,c
  6165                           
  6166                           ;mbmc.c: 145: char spinners(uint8_t shape, uint8_t reset);mbmc.c: 146: {;mbmc.c: 147:  s
      +                          tatic uint8_t s[6];;mbmc.c: 148:  char c;;mbmc.c: 150:  if (shape > (6 - 1))
  6167                           ;stkvar	_shape @ sp[(-1)+-1]
  6168                           
  6169                           ;incstack = 0
  6170  019D32  0EFE               	movlw	-2
  6171  019D34  006F FF8C  F001    	movff	plusw1,btemp
  6172  019D3A  0E05               	movlw	5
  6173  019D3C  6401               	cpfsgt	btemp^0,c
  6174  019D3E  D002               	goto	l1882
  6175                           
  6176                           ;mbmc.c: 151:   shape = 0;
  6177                           ;stkvar	_shape @ sp[(-1)+-1]
  6178  019D40  0EFE               	movlw	-2
  6179  019D42  6AE3               	clrf	plusw1,c
  6180  019D44                     l1882:
  6181                           
  6182                           ;mbmc.c: 152:  if (reset)
  6183                           ;stkvar	_reset @ sp[(-1)+-2]
  6184  019D44  0EFD               	movlw	-3
  6185  019D46  50E3               	movf	plusw1,w,c
  6186  019D48  B4D8               	btfsc	status,2,c
  6187  019D4A  D00C               	goto	l10725
  6188                           
  6189                           ;mbmc.c: 153:   s[shape] = 0;
  6190                           ;stkvar	_shape @ sp[(-1)+-1]
  6191  019D4C  0EFE               	movlw	-2
  6192  019D4E  50E3               	movf	plusw1,w,c
  6193  019D50  6E0B               	movwf	(btemp+10)^0,c
  6194  019D52  6A0C               	clrf	(btemp+11)^0,c
  6195  019D54  0EEF               	movlw	low spinners@s
  6196  019D56  240B               	addwf	(btemp+10)^0,w,c
  6197  019D58  6ED9               	movwf	fsr2l,c
  6198  019D5A  0E01               	movlw	high spinners@s
  6199  019D5C  200C               	addwfc	(btemp+11)^0,w,c
  6200  019D5E  6EDA               	movwf	fsr2h,c
  6201  019D60  0E00               	movlw	0
  6202  019D62  6EDF               	movwf	indf2,c
  6203  019D64                     l10725:
  6204                           
  6205                           ;mbmc.c: 154:  c = spin[shape][s[shape]];
  6206                           ;stkvar	_shape @ sp[(-1)+-1]
  6207  019D64  0EFE               	movlw	-2
  6208  019D66  50E3               	movf	plusw1,w,c
  6209  019D68  0D14               	mullw	20
  6210  019D6A  0EC7               	movlw	low _spin
  6211  019D6C  6E0B               	movwf	(btemp+10)^0,c
  6212  019D6E  0EFB               	movlw	high _spin
  6213  019D70  6E0C               	movwf	(btemp+11)^0,c
  6214  019D72  50F3               	movf	243,w,c
  6215  019D74  260B               	addwf	(btemp+10)^0,f,c
  6216  019D76  50F4               	movf	244,w,c
  6217  019D78  220C               	addwfc	(btemp+11)^0,f,c
  6218                           
  6219                           ;stkvar	_shape @ sp[(-1)+-1]
  6220  019D7A  0EFE               	movlw	-2
  6221  019D7C  50E3               	movf	plusw1,w,c
  6222  019D7E  6E09               	movwf	(btemp+8)^0,c
  6223  019D80  6A0A               	clrf	(btemp+9)^0,c
  6224  019D82  0EEF               	movlw	low spinners@s
  6225  019D84  2409               	addwf	(btemp+8)^0,w,c
  6226  019D86  6ED9               	movwf	fsr2l,c
  6227  019D88  0E01               	movlw	high spinners@s
  6228  019D8A  200A               	addwfc	(btemp+9)^0,w,c
  6229  019D8C  6EDA               	movwf	fsr2h,c
  6230  019D8E  50DF               	movf	indf2,w,c
  6231  019D90  260B               	addwf	(btemp+10)^0,f,c
  6232  019D92  0E00               	movlw	0
  6233  019D94  220C               	addwfc	(btemp+11)^0,f,c
  6234  019D96  0060  F02F  FFF6   	movff	btemp+10,tblptrl
  6235  019D9C  0060  F033  FFF7   	movff	btemp+11,tblptrh
  6236  019DA2                     	if	0	;tblptru may be non-zero
  6237  019DA2                     	endif
  6238  019DA2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6239  019DA2  0E00               	movlw	low (__mediumconst shr (0+16))
  6240  019DA4  6EF8               	movwf	tblptru,c
  6241  019DA6                     	endif
  6242                           
  6243                           ;stkvar	_c @ sp[(-1)+0]
  6244  019DA6  0008               	tblrd		*
  6245  019DA8  0EFF               	movlw	-1
  6246  019DAA  006F FFD7 FFE3     	movff	tablat,plusw1
  6247                           
  6248                           ;mbmc.c: 155:  if (++s[shape] >= strlen(spin[shape]))
  6249                           ;stkvar	_shape @ sp[(-1)+-1]
  6250  019DB0  0EFE               	movlw	-2
  6251  019DB2  50E3               	movf	plusw1,w,c
  6252  019DB4  0D14               	mullw	20
  6253  019DB6  0EC7               	movlw	low _spin
  6254  019DB8  6E0B               	movwf	(btemp+10)^0,c
  6255  019DBA  0EFB               	movlw	high _spin
  6256  019DBC  6E0C               	movwf	(btemp+11)^0,c
  6257  019DBE  50F3               	movf	243,w,c
  6258  019DC0  260B               	addwf	(btemp+10)^0,f,c
  6259  019DC2  50F4               	movf	244,w,c
  6260  019DC4  220C               	addwfc	(btemp+11)^0,f,c
  6261  019DC6  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6262  019DCC  0060  F033  FFE6   	movff	btemp+11,postinc1
  6263  019DD2  EC42  F0D3         	call	_strlen	;wreg free
  6264                           
  6265                           ;stkvar	_shape @ sp[(-1)+-1]
  6266  019DD6  0EFE               	movlw	-2
  6267  019DD8  50E3               	movf	plusw1,w,c
  6268  019DDA  6E0B               	movwf	(btemp+10)^0,c
  6269  019DDC  6A0C               	clrf	(btemp+11)^0,c
  6270  019DDE  0EEF               	movlw	low spinners@s
  6271  019DE0  240B               	addwf	(btemp+10)^0,w,c
  6272  019DE2  6ED9               	movwf	fsr2l,c
  6273  019DE4  0E01               	movlw	high spinners@s
  6274  019DE6  200C               	addwfc	(btemp+11)^0,w,c
  6275  019DE8  6EDA               	movwf	fsr2h,c
  6276  019DEA  2ADF               	incf	indf2,f,c
  6277  019DEC  50DF               	movf	indf2,w,c
  6278  019DEE  6E0B               	movwf	(btemp+10)^0,c
  6279  019DF0  6A0C               	clrf	(btemp+11)^0,c
  6280  019DF2  5001               	movf	btemp^0,w,c
  6281  019DF4  5C0B               	subwf	(btemp+10)^0,w,c
  6282  019DF6  5002               	movf	(btemp+1)^0,w,c
  6283  019DF8  580C               	subwfb	(btemp+11)^0,w,c
  6284  019DFA  A0D8               	btfss	status,0,c
  6285  019DFC  D00C               	goto	l10731
  6286                           
  6287                           ;mbmc.c: 156:   s[shape] = 0;
  6288                           ;stkvar	_shape @ sp[(-1)+-1]
  6289  019DFE  0EFE               	movlw	-2
  6290  019E00  50E3               	movf	plusw1,w,c
  6291  019E02  6E0B               	movwf	(btemp+10)^0,c
  6292  019E04  6A0C               	clrf	(btemp+11)^0,c
  6293  019E06  0EEF               	movlw	low spinners@s
  6294  019E08  240B               	addwf	(btemp+10)^0,w,c
  6295  019E0A  6ED9               	movwf	fsr2l,c
  6296  019E0C  0E01               	movlw	high spinners@s
  6297  019E0E  200C               	addwfc	(btemp+11)^0,w,c
  6298  019E10  6EDA               	movwf	fsr2h,c
  6299  019E12  0E00               	movlw	0
  6300  019E14  6EDF               	movwf	indf2,c
  6301  019E16                     l10731:
  6302                           
  6303                           ;mbmc.c: 157:  return c;
  6304                           ;stkvar	_c @ sp[(-1)+0]
  6305  019E16  0EFF               	movlw	-1
  6306  019E18  006F FF8C  F001    	movff	plusw1,btemp
  6307                           
  6308                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  6309  019E1E  52E5               	movf	postdec1,f,c
  6310  019E20  52E5               	movf	postdec1,f,c
  6311  019E22  52E5               	movf	postdec1,f,c
  6312  019E24  0012               	return		;funcret
  6313  019E26                     __end_of_spinners:
  6314                           	opt callstack 0
  6315                           
  6316 ;; *************** function _init_port_dma *****************
  6317 ;; Defined at:
  6318 ;;		line 90 in file "eadog.c"
  6319 ;; Parameters:    Size  Location     Type
  6320 ;;		None
  6321 ;; Auto vars:     Size  Location     Type
  6322 ;;		None
  6323 ;; Return value:  Size  Location     Type
  6324 ;;                  1  [STACK] void 
  6325 ;; Registers used:
  6326 ;;		wreg, status,2
  6327 ;; Tracked objects:
  6328 ;;		On entry : 0/1
  6329 ;;		On exit  : 3F/3B
  6330 ;;		Unchanged: 0/0
  6331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6336 ;;Total ram usage:        0 bytes
  6337 ;; Hardware stack levels used:    1
  6338 ;; Hardware stack levels required when called:   15
  6339 ;; This function calls:
  6340 ;;		Nothing
  6341 ;; This function is called by:
  6342 ;;		_main
  6343 ;; This function uses a reentrant model
  6344 ;;
  6345                           
  6346                           	psect	text5
  6347  01B67C                     __ptext5:
  6348                           	opt callstack 0
  6349  01B67C                     _init_port_dma:
  6350                           	opt callstack 15
  6351                           
  6352                           ;eadog.c: 92:  DMA2CON1bits.DMODE = 0;
  6353                           
  6354                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6355                           ;incstack = 0
  6356  01B67C  0E3F               	movlw	-193
  6357  01B67E  013B               	movlb	59	; () banked
  6358  01B680  17DD               	andwf	221,f,b	;volatile
  6359                           
  6360                           ; BSR set to: 59
  6361                           ;eadog.c: 93:  DMA2CON1bits.DSTP = 0;
  6362  01B682  9BDD               	bcf	221,5,b	;volatile
  6363                           
  6364                           ;eadog.c: 94:  DMA2CON1bits.SMODE = 1;
  6365  01B684  51DD               	movf	221,w,b	;volatile
  6366  01B686  0BF9               	andlw	-7
  6367  01B688  0902               	iorlw	2
  6368  01B68A  6FDD               	movwf	221,b	;volatile
  6369                           
  6370                           ;eadog.c: 95:  DMA2CON1bits.SMR = 0;
  6371  01B68C  0EE7               	movlw	-25
  6372  01B68E  17DD               	andwf	221,f,b	;volatile
  6373                           
  6374                           ; BSR set to: 59
  6375                           ;eadog.c: 96:  DMA2CON1bits.SSTP = 1;
  6376  01B690  81DD               	bsf	221,0,b	;volatile
  6377                           
  6378                           ; BSR set to: 59
  6379                           ;eadog.c: 97:  DMA2CON0bits.SIRQEN = 0;
  6380  01B692  9DDC               	bcf	220,6,b	;volatile
  6381                           
  6382                           ;eadog.c: 98:  DMA2DSA = 0x3DEA;
  6383  01B694  0E3D               	movlw	61
  6384  01B696  6FD1               	movwf	209,b	;volatile
  6385  01B698  0EEA               	movlw	234
  6386  01B69A  6FD0               	movwf	208,b	;volatile
  6387                           
  6388                           ;eadog.c: 99:  DMA2SSA = (uint32_t) port_data;
  6389  01B69C  0EFF               	movlw	low _port_data
  6390  01B69E  6FD9               	movwf	217,b	;volatile
  6391  01B6A0  0E04               	movlw	high _port_data
  6392  01B6A2  6FDA               	movwf	218,b	;volatile
  6393  01B6A4  0E00               	movlw	low (_port_data shr (0+16))
  6394  01B6A6  6FDB               	movwf	219,b	;volatile
  6395                           
  6396                           ; BSR set to: 59
  6397                           ;eadog.c: 100:  DMA2CON0bits.DGO = 0;
  6398  01B6A8  9BDC               	bcf	220,5,b	;volatile
  6399                           
  6400                           ; BSR set to: 59
  6401                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  6402  01B6AA  0012               	return		;funcret
  6403  01B6AC                     __end_of_init_port_dma:
  6404                           	opt callstack 0
  6405                           
  6406 ;; *************** function _init_display *****************
  6407 ;; Defined at:
  6408 ;;		line 38 in file "eadog.c"
  6409 ;; Parameters:    Size  Location     Type
  6410 ;;		None
  6411 ;; Auto vars:     Size  Location     Type
  6412 ;;		None
  6413 ;; Return value:  Size  Location     Type
  6414 ;;                  1  [STACK] void 
  6415 ;; Registers used:
  6416 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6417 ;; Tracked objects:
  6418 ;;		On entry : 3F/3B
  6419 ;;		On exit  : 3F/3D
  6420 ;;		Unchanged: 0/0
  6421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6426 ;;Total ram usage:        0 bytes
  6427 ;; Hardware stack levels used:    1
  6428 ;; Hardware stack levels required when called:   17
  6429 ;; This function calls:
  6430 ;;		_ringBufS_init
  6431 ;;		_send_lcd_cmd
  6432 ;;		_send_lcd_cmd_long
  6433 ;;		_wdtdelay
  6434 ;; This function is called by:
  6435 ;;		_main
  6436 ;; This function uses a reentrant model
  6437 ;;
  6438                           
  6439                           	psect	text6
  6440  019E26                     __ptext6:
  6441                           	opt callstack 0
  6442  019E26                     _init_display:
  6443                           	opt callstack 13
  6444                           
  6445                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  6446                           
  6447                           ; BSR set to: 59
  6448                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6449                           ;incstack = 0
  6450  019E26  0E83               	movlw	low _ring_buf1
  6451  019E28  0100               	movlb	0	; () banked
  6452  019E2A  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  6453  019E2C  0E03               	movlw	high _ring_buf1
  6454  019E2E  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  6455                           
  6456                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  6457  019E30  0E40               	movlw	low _ring_buf2
  6458  019E32  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  6459  019E34  0E03               	movlw	high _ring_buf2
  6460  019E36  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  6461                           
  6462                           ; BSR set to: 0
  6463                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  6464  019E38  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  6465  019E3E  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  6466  019E44  EC49  F0DC         	call	_ringBufS_init	;wreg free
  6467                           
  6468                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  6469  019E48  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  6470  019E4E  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  6471  019E54  EC49  F0DC         	call	_ringBufS_init	;wreg free
  6472                           
  6473                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  6474  019E58  84BE               	bsf	190,2,c	;volatile
  6475  019E5A  84BC               	bsf	188,2,c	;volatile
  6476                           
  6477                           ;eadog.c: 59:  wdtdelay(350000);
  6478  019E5C  0E30               	movlw	48
  6479  019E5E  6EE6               	movwf	postinc1,c
  6480  019E60  0E57               	movlw	87
  6481  019E62  6EE6               	movwf	postinc1,c
  6482  019E64  0E05               	movlw	5
  6483  019E66  6EE6               	movwf	postinc1,c
  6484  019E68  0E00               	movlw	0
  6485  019E6A  6EE6               	movwf	postinc1,c
  6486  019E6C  EC84  F0D7         	call	_wdtdelay	;wreg free
  6487                           
  6488                           ; BSR set to: 0
  6489                           ;eadog.c: 60:  send_lcd_cmd(0x39);
  6490  019E70  0E39               	movlw	57
  6491  019E72  6EE6               	movwf	postinc1,c
  6492  019E74  EC35  F0DC         	call	_send_lcd_cmd	;wreg free
  6493                           
  6494                           ; BSR set to: 0
  6495                           ;eadog.c: 61:  send_lcd_cmd(0x1d);
  6496  019E78  0E1D               	movlw	29
  6497  019E7A  6EE6               	movwf	postinc1,c
  6498  019E7C  EC35  F0DC         	call	_send_lcd_cmd	;wreg free
  6499                           
  6500                           ; BSR set to: 0
  6501                           ;eadog.c: 62:  send_lcd_cmd(0x50);
  6502  019E80  0E50               	movlw	80
  6503  019E82  6EE6               	movwf	postinc1,c
  6504  019E84  EC35  F0DC         	call	_send_lcd_cmd	;wreg free
  6505                           
  6506                           ; BSR set to: 0
  6507                           ;eadog.c: 63:  send_lcd_cmd(0x6c);
  6508  019E88  0E6C               	movlw	108
  6509  019E8A  6EE6               	movwf	postinc1,c
  6510  019E8C  EC35  F0DC         	call	_send_lcd_cmd	;wreg free
  6511                           
  6512                           ; BSR set to: 0
  6513                           ;eadog.c: 64:  send_lcd_cmd(0x76);
  6514  019E90  0E76               	movlw	118
  6515  019E92  6EE6               	movwf	postinc1,c
  6516  019E94  EC35  F0DC         	call	_send_lcd_cmd	;wreg free
  6517                           
  6518                           ; BSR set to: 0
  6519                           ;eadog.c: 65:  send_lcd_cmd_long(0x38);
  6520  019E98  0E38               	movlw	56
  6521  019E9A  6EE6               	movwf	postinc1,c
  6522  019E9C  EC21  F0DC         	call	_send_lcd_cmd_long	;wreg free
  6523                           
  6524                           ; BSR set to: 0
  6525                           ;eadog.c: 66:  send_lcd_cmd(0x0f);
  6526  019EA0  0E0F               	movlw	15
  6527  019EA2  6EE6               	movwf	postinc1,c
  6528  019EA4  EC35  F0DC         	call	_send_lcd_cmd	;wreg free
  6529                           
  6530                           ; BSR set to: 0
  6531                           ;eadog.c: 67:  send_lcd_cmd_long(0x01);
  6532  019EA8  0E01               	movlw	1
  6533  019EAA  6EE6               	movwf	postinc1,c
  6534  019EAC  EC21  F0DC         	call	_send_lcd_cmd_long	;wreg free
  6535                           
  6536                           ; BSR set to: 0
  6537                           ;eadog.c: 68:  send_lcd_cmd(0x02);
  6538  019EB0  0E02               	movlw	2
  6539  019EB2  6EE6               	movwf	postinc1,c
  6540  019EB4  EC35  F0DC         	call	_send_lcd_cmd	;wreg free
  6541                           
  6542                           ; BSR set to: 0
  6543                           ;eadog.c: 69:  send_lcd_cmd(0x06);
  6544  019EB8  0E06               	movlw	6
  6545  019EBA  6EE6               	movwf	postinc1,c
  6546  019EBC  EC35  F0DC         	call	_send_lcd_cmd	;wreg free
  6547                           
  6548                           ; BSR set to: 0
  6549                           ;eadog.c: 70:  wdtdelay(30);
  6550  019EC0  0E1E               	movlw	30
  6551  019EC2  6EE6               	movwf	postinc1,c
  6552  019EC4  0E00               	movlw	0
  6553  019EC6  6EE6               	movwf	postinc1,c
  6554  019EC8  0E00               	movlw	0
  6555  019ECA  6EE6               	movwf	postinc1,c
  6556  019ECC  0E00               	movlw	0
  6557  019ECE  6EE6               	movwf	postinc1,c
  6558  019ED0  EC84  F0D7         	call	_wdtdelay	;wreg free
  6559                           
  6560                           ; BSR set to: 0
  6561                           ;eadog.c: 71:  SPI1CON2 = 0x02;
  6562  019ED4  0E02               	movlw	2
  6563  019ED6  013D               	movlb	61	; () banked
  6564  019ED8  6F16               	movwf	22,b	;volatile
  6565                           
  6566                           ; BSR set to: 61
  6567                           ;eadog.c: 72:  SPI1CON1 = 0x40;
  6568  019EDA  0E40               	movlw	64
  6569  019EDC  6F15               	movwf	21,b	;volatile
  6570                           
  6571                           ; BSR set to: 61
  6572                           ;eadog.c: 73:  SPI1CON0 = 0x83;
  6573  019EDE  0E83               	movlw	131
  6574  019EE0  6F14               	movwf	20,b	;volatile
  6575                           
  6576                           ; BSR set to: 61
  6577                           ;eadog.c: 75:  SPI1INTFbits.SPI1TXUIF = 0;
  6578  019EE2  931A               	bcf	26,1,b	;volatile
  6579                           
  6580                           ; BSR set to: 61
  6581                           ;eadog.c: 76:  DMA1CON1bits.DMODE = 0;
  6582  019EE4  0E3F               	movlw	-193
  6583  019EE6  013B               	movlb	59	; () banked
  6584  019EE8  17FD               	andwf	253,f,b	;volatile
  6585                           
  6586                           ; BSR set to: 59
  6587                           ;eadog.c: 77:  DMA1CON1bits.DSTP = 0;
  6588  019EEA  9BFD               	bcf	253,5,b	;volatile
  6589                           
  6590                           ; BSR set to: 59
  6591                           ;eadog.c: 78:  DMA1CON1bits.SMODE = 1;
  6592  019EEC  51FD               	movf	253,w,b	;volatile
  6593  019EEE  0BF9               	andlw	-7
  6594  019EF0  0902               	iorlw	2
  6595  019EF2  6FFD               	movwf	253,b	;volatile
  6596                           
  6597                           ; BSR set to: 59
  6598                           ;eadog.c: 79:  DMA1CON1bits.SMR = 0;
  6599  019EF4  0EE7               	movlw	-25
  6600  019EF6  17FD               	andwf	253,f,b	;volatile
  6601                           
  6602                           ; BSR set to: 59
  6603                           ;eadog.c: 80:  DMA1CON1bits.SSTP = 1;
  6604  019EF8  81FD               	bsf	253,0,b	;volatile
  6605                           
  6606                           ; BSR set to: 59
  6607                           ;eadog.c: 81:  DMA1SSA = (uint32_t) & ring_buf1;
  6608  019EFA  0E83               	movlw	low _ring_buf1
  6609  019EFC  6FF9               	movwf	249,b	;volatile
  6610  019EFE  0E03               	movlw	high _ring_buf1
  6611  019F00  6FFA               	movwf	250,b	;volatile
  6612  019F02  0E00               	movlw	low (_ring_buf1 shr (0+16))
  6613  019F04  6FFB               	movwf	251,b	;volatile
  6614                           
  6615                           ; BSR set to: 59
  6616                           ;eadog.c: 82:  DMA1CON0bits.DGO = 0;
  6617  019F06  9BFC               	bcf	252,5,b	;volatile
  6618                           
  6619                           ; BSR set to: 59
  6620                           ;eadog.c: 83:  SPI1INTFbits.SPI1TXUIF = 1;
  6621  019F08  013D               	movlb	61	; () banked
  6622  019F0A  831A               	bsf	26,1,b	;volatile
  6623                           
  6624                           ; BSR set to: 61
  6625                           ;eadog.c: 84:  LATEbits.LATE2 = 0;
  6626  019F0C  94BE               	bcf	190,2,c	;volatile
  6627                           
  6628                           ; BSR set to: 61
  6629                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6630  019F0E  0012               	return		;funcret
  6631  019F10                     __end_of_init_display:
  6632                           	opt callstack 0
  6633                           
  6634 ;; *************** function _send_lcd_cmd_long *****************
  6635 ;; Defined at:
  6636 ;;		line 129 in file "eadog.c"
  6637 ;; Parameters:    Size  Location     Type
  6638 ;;  cmd             1  [STACK] const unsigned char 
  6639 ;; Auto vars:     Size  Location     Type
  6640 ;;		None
  6641 ;; Return value:  Size  Location     Type
  6642 ;;                  1  [STACK] void 
  6643 ;; Registers used:
  6644 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6645 ;; Tracked objects:
  6646 ;;		On entry : 3F/0
  6647 ;;		On exit  : 3F/0
  6648 ;;		Unchanged: 0/0
  6649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6654 ;;Total ram usage:        0 bytes
  6655 ;; Hardware stack levels used:    1
  6656 ;; Hardware stack levels required when called:   16
  6657 ;; This function calls:
  6658 ;;		_SPI1_Exchange8bit
  6659 ;;		_wdtdelay
  6660 ;; This function is called by:
  6661 ;;		_init_display
  6662 ;; This function uses a reentrant model
  6663 ;;
  6664                           
  6665                           	psect	text7
  6666  01B842                     __ptext7:
  6667                           	opt callstack 0
  6668  01B842                     _send_lcd_cmd_long:
  6669                           	opt callstack 13
  6670                           
  6671                           ; BSR set to: 61
  6672                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6673                           ;incstack = 0
  6674                           ;eadog.c: 129: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 130: {;eadog.c:
      +                           131:  do { LATCbits.LATC1 = 0; } while(0);
  6675  01B842  92BC               	bcf	188,1,c	;volatile
  6676                           
  6677                           ;eadog.c: 132:  do { LATCbits.LATC2 = 0; } while(0);
  6678  01B844  94BC               	bcf	188,2,c	;volatile
  6679                           
  6680                           ;eadog.c: 133:  SPI1_Exchange8bit(cmd);
  6681                           ;stkvar	_cmd @ sp[(0)+-1]
  6682  01B846  0EFF               	movlw	-1
  6683  01B848  50E3               	movf	plusw1,w,c
  6684  01B84A  6EE6               	movwf	postinc1,c
  6685  01B84C  EC12  F0DE         	call	_SPI1_Exchange8bit	;wreg free
  6686                           
  6687                           ; BSR set to: 57
  6688                           ;eadog.c: 134:  wdtdelay(800);
  6689  01B850  0E20               	movlw	32
  6690  01B852  6EE6               	movwf	postinc1,c
  6691  01B854  0E03               	movlw	3
  6692  01B856  6EE6               	movwf	postinc1,c
  6693  01B858  0E00               	movlw	0
  6694  01B85A  6EE6               	movwf	postinc1,c
  6695  01B85C  0E00               	movlw	0
  6696  01B85E  6EE6               	movwf	postinc1,c
  6697  01B860  EC84  F0D7         	call	_wdtdelay	;wreg free
  6698                           
  6699                           ; BSR set to: 0
  6700  01B864  82BC               	bsf	188,1,c	;volatile
  6701                           
  6702                           ; BSR set to: 0
  6703                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6704  01B866  52E5               	movf	postdec1,f,c
  6705  01B868  0012               	return		;funcret
  6706  01B86A                     __end_of_send_lcd_cmd_long:
  6707                           	opt callstack 0
  6708                           
  6709 ;; *************** function _send_lcd_cmd *****************
  6710 ;; Defined at:
  6711 ;;		line 117 in file "eadog.c"
  6712 ;; Parameters:    Size  Location     Type
  6713 ;;  cmd             1  [STACK] const unsigned char 
  6714 ;; Auto vars:     Size  Location     Type
  6715 ;;		None
  6716 ;; Return value:  Size  Location     Type
  6717 ;;                  1  [STACK] void 
  6718 ;; Registers used:
  6719 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6720 ;; Tracked objects:
  6721 ;;		On entry : 3F/0
  6722 ;;		On exit  : 3F/0
  6723 ;;		Unchanged: 0/0
  6724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6729 ;;Total ram usage:        0 bytes
  6730 ;; Hardware stack levels used:    1
  6731 ;; Hardware stack levels required when called:   16
  6732 ;; This function calls:
  6733 ;;		_SPI1_Exchange8bit
  6734 ;;		_wdtdelay
  6735 ;; This function is called by:
  6736 ;;		_init_display
  6737 ;; This function uses a reentrant model
  6738 ;;
  6739                           
  6740                           	psect	text8
  6741  01B86A                     __ptext8:
  6742                           	opt callstack 0
  6743  01B86A                     _send_lcd_cmd:
  6744                           	opt callstack 13
  6745                           
  6746                           ; BSR set to: 0
  6747                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6748                           ;incstack = 0
  6749                           ;eadog.c: 117: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 118: {;eadog.c: 119:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  6750  01B86A  92BC               	bcf	188,1,c	;volatile
  6751                           
  6752                           ;eadog.c: 120:  do { LATCbits.LATC2 = 0; } while(0);
  6753  01B86C  94BC               	bcf	188,2,c	;volatile
  6754                           
  6755                           ;eadog.c: 121:  SPI1_Exchange8bit(cmd);
  6756                           ;stkvar	_cmd @ sp[(0)+-1]
  6757  01B86E  0EFF               	movlw	-1
  6758  01B870  50E3               	movf	plusw1,w,c
  6759  01B872  6EE6               	movwf	postinc1,c
  6760  01B874  EC12  F0DE         	call	_SPI1_Exchange8bit	;wreg free
  6761                           
  6762                           ; BSR set to: 57
  6763                           ;eadog.c: 122:  wdtdelay(30);
  6764  01B878  0E1E               	movlw	30
  6765  01B87A  6EE6               	movwf	postinc1,c
  6766  01B87C  0E00               	movlw	0
  6767  01B87E  6EE6               	movwf	postinc1,c
  6768  01B880  0E00               	movlw	0
  6769  01B882  6EE6               	movwf	postinc1,c
  6770  01B884  0E00               	movlw	0
  6771  01B886  6EE6               	movwf	postinc1,c
  6772  01B888  EC84  F0D7         	call	_wdtdelay	;wreg free
  6773                           
  6774                           ; BSR set to: 0
  6775  01B88C  82BC               	bsf	188,1,c	;volatile
  6776                           
  6777                           ; BSR set to: 0
  6778                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  6779  01B88E  52E5               	movf	postdec1,f,c
  6780  01B890  0012               	return		;funcret
  6781  01B892                     __end_of_send_lcd_cmd:
  6782                           	opt callstack 0
  6783                           
  6784 ;; *************** function _SPI1_Exchange8bit *****************
  6785 ;; Defined at:
  6786 ;;		line 79 in file "mcc_generated_files/spi1.c"
  6787 ;; Parameters:    Size  Location     Type
  6788 ;;  data            1  [STACK] unsigned char 
  6789 ;; Auto vars:     Size  Location     Type
  6790 ;;		None
  6791 ;; Return value:  Size  Location     Type
  6792 ;;                  1  [STACK] unsigned char 
  6793 ;; Registers used:
  6794 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  6795 ;; Tracked objects:
  6796 ;;		On entry : 0/0
  6797 ;;		On exit  : 3F/39
  6798 ;;		Unchanged: 0/0
  6799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6804 ;;Total ram usage:        0 bytes
  6805 ;; Hardware stack levels used:    1
  6806 ;; Hardware stack levels required when called:   15
  6807 ;; This function calls:
  6808 ;;		Nothing
  6809 ;; This function is called by:
  6810 ;;		_send_lcd_cmd
  6811 ;;		_send_lcd_cmd_long
  6812 ;; This function uses a reentrant model
  6813 ;;
  6814                           
  6815                           	psect	text9
  6816  01BC24                     __ptext9:
  6817                           	opt callstack 0
  6818  01BC24                     _SPI1_Exchange8bit:
  6819                           	opt callstack 13
  6820                           
  6821                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  6822                           
  6823                           ; BSR set to: 0
  6824                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6825                           ;incstack = 0
  6826  01BC24  0E01               	movlw	1
  6827  01BC26  013D               	movlb	61	; () banked
  6828  01BC28  6F12               	movwf	18,b	;volatile
  6829                           
  6830                           ; BSR set to: 61
  6831                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  6832                           ;stkvar	_data @ sp[(0)+-1]
  6833  01BC2A  0EFF               	movlw	-1
  6834  01BC2C  006F FF8F FD11     	movff	plusw1,15633	;volatile
  6835  01BC32                     l807:
  6836                           
  6837                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  6838  01BC32  0139               	movlb	57	; () banked
  6839  01BC34  A9A2               	btfss	162,4,b	;volatile
  6840  01BC36  D7FD               	goto	l807
  6841                           
  6842                           ; BSR set to: 57
  6843                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  6844  01BC38  006F F440  F001    	movff	15632,btemp	;volatile
  6845                           
  6846                           ; BSR set to: 57
  6847                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6848  01BC3E  52E5               	movf	postdec1,f,c
  6849  01BC40  0012               	return		;funcret
  6850  01BC42                     __end_of_SPI1_Exchange8bit:
  6851                           	opt callstack 0
  6852                           
  6853 ;; *************** function _ringBufS_init *****************
  6854 ;; Defined at:
  6855 ;;		line 22 in file "ringbufs.c"
  6856 ;; Parameters:    Size  Location     Type
  6857 ;;  _this           2  [STACK] PTR volatile struct ring
  6858 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6859 ;; Auto vars:     Size  Location     Type
  6860 ;;		None
  6861 ;; Return value:  Size  Location     Type
  6862 ;;                  1  [STACK] void 
  6863 ;; Registers used:
  6864 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6865 ;; Tracked objects:
  6866 ;;		On entry : 0/0
  6867 ;;		On exit  : 0/0
  6868 ;;		Unchanged: 0/0
  6869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6874 ;;Total ram usage:        0 bytes
  6875 ;; Hardware stack levels used:    1
  6876 ;; Hardware stack levels required when called:   16
  6877 ;; This function calls:
  6878 ;;		_memset
  6879 ;; This function is called by:
  6880 ;;		_init_display
  6881 ;; This function uses a reentrant model
  6882 ;;
  6883                           
  6884                           	psect	text10
  6885  01B892                     __ptext10:
  6886                           	opt callstack 0
  6887  01B892                     _ringBufS_init:
  6888                           	opt callstack 13
  6889                           
  6890                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  6891                           
  6892                           ; BSR set to: 57
  6893                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6894                           ;incstack = 0
  6895  01B892  0E43               	movlw	67
  6896  01B894  6EE6               	movwf	postinc1,c
  6897  01B896  0E00               	movlw	0
  6898  01B898  6EE6               	movwf	postinc1,c
  6899  01B89A  0E00               	movlw	0
  6900  01B89C  6EE6               	movwf	postinc1,c
  6901  01B89E  0E00               	movlw	0
  6902  01B8A0  6EE6               	movwf	postinc1,c
  6903                           
  6904                           ;stkvar	__this @ sp[(-4)+-2]
  6905  01B8A2  0EFA               	movlw	-6
  6906  01B8A4  006F FF8F FFE6     	movff	plusw1,postinc1
  6907  01B8AA  006F FF8F FFE6     	movff	plusw1,postinc1
  6908  01B8B0  EC90  F0B5         	call	_memset	;wreg free
  6909                           
  6910                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  6911  01B8B4  52E5               	movf	postdec1,f,c
  6912  01B8B6  52E5               	movf	postdec1,f,c
  6913  01B8B8  0012               	return		;funcret
  6914  01B8BA                     __end_of_ringBufS_init:
  6915                           	opt callstack 0
  6916                           
  6917 ;; *************** function _init_bsoc *****************
  6918 ;; Defined at:
  6919 ;;		line 95 in file "bsoc.c"
  6920 ;; Parameters:    Size  Location     Type
  6921 ;;		None
  6922 ;; Auto vars:     Size  Location     Type
  6923 ;;		None
  6924 ;; Return value:  Size  Location     Type
  6925 ;;                  1  [STACK] void 
  6926 ;; Registers used:
  6927 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  6928 ;; Tracked objects:
  6929 ;;		On entry : 0/0
  6930 ;;		On exit  : 0/0
  6931 ;;		Unchanged: 0/0
  6932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6937 ;;Total ram usage:        0 bytes
  6938 ;; Hardware stack levels used:    1
  6939 ;; Hardware stack levels required when called:   18
  6940 ;; This function calls:
  6941 ;;		_TMR3_SetInterruptHandler
  6942 ;;		_Volts_to_SOC
  6943 ;;		___fldiv
  6944 ;;		___flmul
  6945 ;;		___fltol
  6946 ;;		___xxtofl
  6947 ;;		_conv_raw_result
  6948 ;; This function is called by:
  6949 ;;		_main
  6950 ;; This function uses a reentrant model
  6951 ;;
  6952                           
  6953                           	psect	text11
  6954  017ACE                     __ptext11:
  6955                           	opt callstack 0
  6956  017ACE                     _init_bsoc:
  6957                           	opt callstack 12
  6958                           
  6959                           ;bsoc.c: 100:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  6960                           
  6961                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6962                           ;incstack = 0
  6963  017ACE  0E00               	movlw	0
  6964  017AD0  6EE6               	movwf	postinc1,c
  6965  017AD2  0E00               	movlw	0
  6966  017AD4  6EE6               	movwf	postinc1,c
  6967  017AD6  0E7A               	movlw	122
  6968  017AD8  6EE6               	movwf	postinc1,c
  6969  017ADA  0E44               	movlw	68
  6970  017ADC  6EE6               	movwf	postinc1,c
  6971  017ADE  0E00               	movlw	0
  6972  017AE0  6EE6               	movwf	postinc1,c
  6973  017AE2  0E04               	movlw	4
  6974  017AE4  6EE6               	movwf	postinc1,c
  6975  017AE6  EC0D  F0A8         	call	_conv_raw_result	;wreg free
  6976  017AEA  0060  F007  FFE6   	movff	btemp,postinc1
  6977  017AF0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6978  017AF6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6979  017AFC  0060  F013  FFE6   	movff	btemp+3,postinc1
  6980  017B02  ECB1  F0C5         	call	___fltol	;wreg free
  6981  017B06  0060  F007  FFE6   	movff	btemp,postinc1
  6982  017B0C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6983  017B12  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6984  017B18  0060  F013  FFE6   	movff	btemp+3,postinc1
  6985  017B1E  0E00               	movlw	0
  6986  017B20  6EE6               	movwf	postinc1,c
  6987  017B22  EC95  F0C0         	call	___xxtofl	;wreg free
  6988  017B26  0060  F007  FFE6   	movff	btemp,postinc1
  6989  017B2C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6990  017B32  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6991  017B38  0060  F013  FFE6   	movff	btemp+3,postinc1
  6992  017B3E  EC9F  F099         	call	___flmul	;wreg free
  6993  017B42  0060  F007  FFE6   	movff	btemp,postinc1
  6994  017B48  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6995  017B4E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6996  017B54  0060  F013  FFE6   	movff	btemp+3,postinc1
  6997  017B5A  ECB1  F0C5         	call	___fltol	;wreg free
  6998  017B5E  0060  F007  FFE6   	movff	btemp,postinc1
  6999  017B64  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7000  017B6A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7001  017B70  0060  F013  FFE6   	movff	btemp+3,postinc1
  7002  017B76  ECDD  F0CA         	call	_Volts_to_SOC	;wreg free
  7003  017B7A  0060  F004  F7B1   	movff	btemp,_C+178	;volatile
  7004  017B80  0060  F008  F7B2   	movff	btemp+1,_C+179	;volatile
  7005                           
  7006                           ;bsoc.c: 101:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  7007  017B86  EE21  F38B         	lfsr	2,_C+140	;volatile
  7008  017B8A  006F FF7B FFE6     	movff	postinc2,postinc1
  7009  017B90  006F FF7B FFE6     	movff	postinc2,postinc1
  7010  017B96  006F FF7B FFE6     	movff	postinc2,postinc1
  7011  017B9C  006F FF7B FFE6     	movff	postinc2,postinc1
  7012  017BA2  0E00               	movlw	0
  7013  017BA4  6EE6               	movwf	postinc1,c
  7014  017BA6  0E00               	movlw	0
  7015  017BA8  6EE6               	movwf	postinc1,c
  7016  017BAA  0EC8               	movlw	200
  7017  017BAC  6EE6               	movwf	postinc1,c
  7018  017BAE  0E42               	movlw	66
  7019  017BB0  6EE6               	movwf	postinc1,c
  7020  017BB2  0E00               	movlw	0
  7021  017BB4  6EE6               	movwf	postinc1,c
  7022  017BB6  0E00               	movlw	0
  7023  017BB8  6EE6               	movwf	postinc1,c
  7024  017BBA  0E7A               	movlw	122
  7025  017BBC  6EE6               	movwf	postinc1,c
  7026  017BBE  0E44               	movlw	68
  7027  017BC0  6EE6               	movwf	postinc1,c
  7028  017BC2  0E00               	movlw	0
  7029  017BC4  6EE6               	movwf	postinc1,c
  7030  017BC6  0E04               	movlw	4
  7031  017BC8  6EE6               	movwf	postinc1,c
  7032  017BCA  EC0D  F0A8         	call	_conv_raw_result	;wreg free
  7033  017BCE  0060  F007  FFE6   	movff	btemp,postinc1
  7034  017BD4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7035  017BDA  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7036  017BE0  0060  F013  FFE6   	movff	btemp+3,postinc1
  7037  017BE6  ECB1  F0C5         	call	___fltol	;wreg free
  7038  017BEA  0060  F007  FFE6   	movff	btemp,postinc1
  7039  017BF0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7040  017BF6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7041  017BFC  0060  F013  FFE6   	movff	btemp+3,postinc1
  7042  017C02  0E00               	movlw	0
  7043  017C04  6EE6               	movwf	postinc1,c
  7044  017C06  EC95  F0C0         	call	___xxtofl	;wreg free
  7045  017C0A  0060  F007  FFE6   	movff	btemp,postinc1
  7046  017C10  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7047  017C16  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7048  017C1C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7049  017C22  EC9F  F099         	call	___flmul	;wreg free
  7050  017C26  0060  F007  FFE6   	movff	btemp,postinc1
  7051  017C2C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7052  017C32  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7053  017C38  0060  F013  FFE6   	movff	btemp+3,postinc1
  7054  017C3E  ECB1  F0C5         	call	___fltol	;wreg free
  7055  017C42  0060  F007  FFE6   	movff	btemp,postinc1
  7056  017C48  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7057  017C4E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7058  017C54  0060  F013  FFE6   	movff	btemp+3,postinc1
  7059  017C5A  ECDD  F0CA         	call	_Volts_to_SOC	;wreg free
  7060  017C5E  0060  F004  F00B   	movff	btemp,btemp+10
  7061  017C64  0060  F008  F00C   	movff	btemp+1,btemp+11
  7062  017C6A  500B               	movf	(btemp+10)^0,w,c
  7063  017C6C  6E05               	movwf	(btemp+4)^0,c
  7064  017C6E  500C               	movf	(btemp+11)^0,w,c
  7065  017C70  6E06               	movwf	(btemp+5)^0,c
  7066  017C72  6A07               	clrf	(btemp+6)^0,c
  7067  017C74  6A08               	clrf	(btemp+7)^0,c
  7068  017C76  0060  F017  FFE6   	movff	btemp+4,postinc1
  7069  017C7C  0060  F01B  FFE6   	movff	btemp+5,postinc1
  7070  017C82  0060  F01F  FFE6   	movff	btemp+6,postinc1
  7071  017C88  0060  F023  FFE6   	movff	btemp+7,postinc1
  7072  017C8E  0E00               	movlw	0
  7073  017C90  6EE6               	movwf	postinc1,c
  7074  017C92  EC95  F0C0         	call	___xxtofl	;wreg free
  7075  017C96  0060  F007  FFE6   	movff	btemp,postinc1
  7076  017C9C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7077  017CA2  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7078  017CA8  0060  F013  FFE6   	movff	btemp+3,postinc1
  7079  017CAE  EC50  F0A5         	call	___fldiv	;wreg free
  7080  017CB2  0060  F007  FFE6   	movff	btemp,postinc1
  7081  017CB8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7082  017CBE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7083  017CC4  0060  F013  FFE6   	movff	btemp+3,postinc1
  7084  017CCA  EC9F  F099         	call	___flmul	;wreg free
  7085  017CCE  0060  F004  F78F   	movff	btemp,_C+144	;volatile
  7086  017CD4  0060  F008  F790   	movff	btemp+1,_C+145	;volatile
  7087  017CDA  0060  F00C  F791   	movff	btemp+2,_C+146	;volatile
  7088  017CE0  0060  F010  F792   	movff	btemp+3,_C+147	;volatile
  7089                           
  7090                           ;bsoc.c: 102:  TMR3_SetInterruptHandler(calc_bsoc);
  7091  017CE6  0E24               	movlw	low _calc_bsoc
  7092  017CE8  6EE6               	movwf	postinc1,c
  7093  017CEA  0E43               	movlw	high _calc_bsoc
  7094  017CEC  6EE6               	movwf	postinc1,c
  7095  017CEE  0E01               	movlw	low (_calc_bsoc shr (0+16))
  7096  017CF0  6EE6               	movwf	postinc1,c
  7097  017CF2  ECD5  F0DC         	call	_TMR3_SetInterruptHandler	;wreg free
  7098                           
  7099                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  7100  017CF6  0012               	return		;funcret
  7101  017CF8                     __end_of_init_bsoc:
  7102                           	opt callstack 0
  7103                           
  7104 ;; *************** function _Volts_to_SOC *****************
  7105 ;; Defined at:
  7106 ;;		line 159 in file "bsoc.c"
  7107 ;; Parameters:    Size  Location     Type
  7108 ;;  cvoltage        4  [STACK] unsigned long 
  7109 ;; Auto vars:     Size  Location     Type
  7110 ;;  soc             4  [STACK] float 
  7111 ;;  slot            1  [STACK] unsigned char 
  7112 ;; Return value:  Size  Location     Type
  7113 ;;                  2  [STACK] unsigned short 
  7114 ;; Registers used:
  7115 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  7116 ;; Tracked objects:
  7117 ;;		On entry : 0/0
  7118 ;;		On exit  : 0/0
  7119 ;;		Unchanged: 0/0
  7120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7125 ;;Total ram usage:        0 bytes
  7126 ;; Hardware stack levels used:    1
  7127 ;; Hardware stack levels required when called:   16
  7128 ;; This function calls:
  7129 ;;		___fltol
  7130 ;;		___xxtofl
  7131 ;; This function is called by:
  7132 ;;		_init_bsoc
  7133 ;; This function uses a reentrant model
  7134 ;;
  7135                           
  7136                           	psect	text12
  7137  0195BA                     __ptext12:
  7138                           	opt callstack 0
  7139  0195BA                     _Volts_to_SOC:
  7140                           	opt callstack 0
  7141                           
  7142                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7143  0195BA  0E05               	movlw	5
  7144  0195BC  26E1               	addwf	fsr1l,f,c
  7145  0195BE  0E00               	movlw	0
  7146  0195C0  22E2               	addwfc	fsr1h,f,c
  7147                           
  7148                           ;bsoc.c: 159: uint16_t Volts_to_SOC(uint32_t cvoltage);bsoc.c: 160: {;bsoc.c: 161:  uint
      +                          8_t slot;;bsoc.c: 162:  float soc = 0;
  7149                           
  7150                           ;incstack = 0
  7151  0195C2  0E00               	movlw	0
  7152  0195C4  6E09               	movwf	(btemp+8)^0,c
  7153  0195C6  0E00               	movlw	0
  7154  0195C8  6E0A               	movwf	(btemp+9)^0,c
  7155  0195CA  0E00               	movlw	0
  7156  0195CC  6E0B               	movwf	(btemp+10)^0,c
  7157  0195CE  0E00               	movlw	0
  7158  0195D0  6E0C               	movwf	(btemp+11)^0,c
  7159                           
  7160                           ;stkvar	_soc @ sp[(-5)+0]
  7161  0195D2  0EFB               	movlw	-5
  7162  0195D4  0060  F027  FFE3   	movff	btemp+8,plusw1
  7163  0195DA  0EFC               	movlw	-4
  7164  0195DC  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7165  0195E2  0EFD               	movlw	-3
  7166  0195E4  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7167  0195EA  0EFE               	movlw	-2
  7168  0195EC  0060  F033  FFE3   	movff	btemp+11,plusw1
  7169                           
  7170                           ;bsoc.c: 164:  for (slot = 0; slot < 26; slot++) {
  7171                           ;stkvar	_slot @ sp[(-5)+4]
  7172  0195F2  0EFF               	movlw	-1
  7173  0195F4  6AE3               	clrf	plusw1,c
  7174  0195F6                     l10501:
  7175                           
  7176                           ;bsoc.c: 165:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  7177                           ;stkvar	_cvoltage @ sp[(-5)+-4]
  7178                           ;stkvar	_slot @ sp[(-5)+4]
  7179  0195F6  0EFF               	movlw	-1
  7180  0195F8  50E3               	movf	plusw1,w,c
  7181  0195FA  0D08               	mullw	8
  7182  0195FC  0E67               	movlw	low _BVSOC_TABLE
  7183  0195FE  24F3               	addwf	243,w,c
  7184  019600  6EF6               	movwf	tblptrl,c
  7185  019602  0EFA               	movlw	high _BVSOC_TABLE
  7186  019604  20F4               	addwfc	244,w,c
  7187  019606  6EF7               	movwf	tblptrh,c
  7188  019608                     	if	1	;There are 3 active tblptr bytes
  7189  019608  6AF8               	clrf	tblptru,c
  7190  01960A  0E00               	movlw	low (__mediumconst shr (0+16))
  7191  01960C  22F8               	addwfc	tblptru,f,c
  7192  01960E                     	endif
  7193  01960E  0EF7               	movlw	-9
  7194  019610  50E3               	movf	plusw1,w,c
  7195  019612  0009               	tblrd		*+
  7196  019614  5CF5               	subwf	tablat,w,c
  7197  019616  0EF8               	movlw	-8
  7198  019618  50E3               	movf	plusw1,w,c
  7199  01961A  0009               	tblrd		*+
  7200  01961C  58F5               	subwfb	tablat,w,c
  7201  01961E  0EF9               	movlw	-7
  7202  019620  50E3               	movf	plusw1,w,c
  7203  019622  0009               	tblrd		*+
  7204  019624  58F5               	subwfb	tablat,w,c
  7205  019626  0EFA               	movlw	-6
  7206  019628  50E3               	movf	plusw1,w,c
  7207  01962A  0009               	tblrd		*+
  7208  01962C  58F5               	subwfb	tablat,w,c
  7209  01962E  B0D8               	btfsc	status,0,c
  7210  019630  D034               	goto	l10505
  7211                           
  7212                           ;bsoc.c: 166:    soc = BVSOC_TABLE[slot][1];
  7213                           ;stkvar	_slot @ sp[(-5)+4]
  7214  019632  0EFF               	movlw	-1
  7215  019634  50E3               	movf	plusw1,w,c
  7216  019636  0D08               	mullw	8
  7217  019638  0E04               	movlw	4
  7218  01963A  26F3               	addwf	243,f,c
  7219  01963C  0E00               	movlw	0
  7220  01963E  22F4               	addwfc	244,f,c
  7221  019640  0E67               	movlw	low _BVSOC_TABLE
  7222  019642  24F3               	addwf	243,w,c
  7223  019644  6EF6               	movwf	tblptrl,c
  7224  019646  0EFA               	movlw	high _BVSOC_TABLE
  7225  019648  20F4               	addwfc	244,w,c
  7226  01964A  6EF7               	movwf	tblptrh,c
  7227  01964C                     	if	1	;There are 3 active tblptr bytes
  7228  01964C  6AF8               	clrf	tblptru,c
  7229  01964E  0E00               	movlw	low (__mediumconst shr (0+16))
  7230  019650  22F8               	addwfc	tblptru,f,c
  7231  019652                     	endif
  7232  019652  0009               	tblrd		*+
  7233  019654  006F FFD7 FFE6     	movff	tablat,postinc1
  7234  01965A  0009               	tblrd		*+
  7235  01965C  006F FFD7 FFE6     	movff	tablat,postinc1
  7236  019662  0009               	tblrd		*+
  7237  019664  006F FFD7 FFE6     	movff	tablat,postinc1
  7238  01966A  0009               	tblrd		*+
  7239  01966C  006F FFD7 FFE6     	movff	tablat,postinc1
  7240  019672  0E00               	movlw	0
  7241  019674  6EE6               	movwf	postinc1,c
  7242  019676  EC95  F0C0         	call	___xxtofl	;wreg free
  7243                           
  7244                           ;stkvar	_soc @ sp[(-5)+0]
  7245  01967A  0EFB               	movlw	-5
  7246  01967C  0060  F007  FFE3   	movff	btemp,plusw1
  7247  019682  0EFC               	movlw	-4
  7248  019684  0060  F00B  FFE3   	movff	btemp+1,plusw1
  7249  01968A  0EFD               	movlw	-3
  7250  01968C  0060  F00F  FFE3   	movff	btemp+2,plusw1
  7251  019692  0EFE               	movlw	-2
  7252  019694  0060  F013  FFE3   	movff	btemp+3,plusw1
  7253  01969A                     l10505:
  7254                           
  7255                           ;bsoc.c: 168:  }
  7256                           ;stkvar	_slot @ sp[(-5)+4]
  7257  01969A  0EFF               	movlw	-1
  7258  01969C  2AE3               	incf	plusw1,f,c
  7259                           
  7260                           ;stkvar	_slot @ sp[(-5)+4]
  7261  01969E  0EFF               	movlw	-1
  7262  0196A0  006F FF8C  F001    	movff	plusw1,btemp
  7263  0196A6  0E19               	movlw	25
  7264  0196A8  6401               	cpfsgt	btemp^0,c
  7265  0196AA  D7A5               	goto	l10501
  7266                           
  7267                           ;bsoc.c: 169:  return soc;
  7268                           ;stkvar	_soc @ sp[(-5)+0]
  7269  0196AC  0EFB               	movlw	-5
  7270  0196AE  006F FF8F FFE6     	movff	plusw1,postinc1
  7271  0196B4  006F FF8F FFE6     	movff	plusw1,postinc1
  7272  0196BA  006F FF8F FFE6     	movff	plusw1,postinc1
  7273  0196C0  006F FF8F FFE6     	movff	plusw1,postinc1
  7274  0196C6  ECB1  F0C5         	call	___fltol	;wreg free
  7275                           
  7276                           ; _Volts_to_SOC: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  7277  0196CA  0EF7               	movlw	247
  7278  0196CC  26E1               	addwf	fsr1l,f,c
  7279  0196CE  0EFF               	movlw	255
  7280  0196D0  22E2               	addwfc	fsr1h,f,c
  7281  0196D2  0012               	return		;funcret
  7282  0196D4                     __end_of_Volts_to_SOC:
  7283                           	opt callstack 0
  7284                           
  7285 ;; *************** function _hid_display *****************
  7286 ;; Defined at:
  7287 ;;		line 17 in file "hid.c"
  7288 ;; Parameters:    Size  Location     Type
  7289 ;;  h               2  [STACK] PTR struct H_data
  7290 ;;		 -> H(7), 
  7291 ;; Auto vars:     Size  Location     Type
  7292 ;;		None
  7293 ;; Return value:  Size  Location     Type
  7294 ;;                  2  [STACK] PTR struct H_data
  7295 ;; Registers used:
  7296 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
  7297 ;; Tracked objects:
  7298 ;;		On entry : 3F/39
  7299 ;;		On exit  : 0/0
  7300 ;;		Unchanged: 0/0
  7301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7306 ;;Total ram usage:        0 bytes
  7307 ;; Hardware stack levels used:    1
  7308 ;; Hardware stack levels required when called:   17
  7309 ;; This function calls:
  7310 ;;		_hid_input
  7311 ;; This function is called by:
  7312 ;;		_main
  7313 ;; This function uses a reentrant model
  7314 ;;
  7315                           
  7316                           	psect	text13
  7317  01832E                     __ptext13:
  7318                           	opt callstack 0
  7319  01832E                     _hid_display:
  7320                           	opt callstack 13
  7321                           
  7322                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  7323                           ;stkvar	_h @ sp[(0)+-2]
  7324                           
  7325                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7326                           ;incstack = 0
  7327  01832E  0EFE               	movlw	-2
  7328  018330  006F FF8F FFE6     	movff	plusw1,postinc1
  7329  018336  006F FF8F FFE6     	movff	plusw1,postinc1
  7330  01833C  EC63  F0D0         	call	_hid_input	;wreg free
  7331                           
  7332                           ;hid.c: 21:  switch (h->h_state) {
  7333  018340  D0C6               	goto	l12821
  7334  018342                     l12799:
  7335                           
  7336                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  7337                           ;stkvar	_h @ sp[(0)+-2]
  7338  018342  0EFE               	movlw	-2
  7339  018344  006F FF8C  F00B    	movff	plusw1,btemp+10
  7340  01834A  0EFF               	movlw	-1
  7341  01834C  006F FF8C  F00C    	movff	plusw1,btemp+11
  7342  018352  0E01               	movlw	1
  7343  018354  240B               	addwf	(btemp+10)^0,w,c
  7344  018356  6ED9               	movwf	fsr2l,c
  7345  018358  0E00               	movlw	0
  7346  01835A  200C               	addwfc	(btemp+11)^0,w,c
  7347  01835C  6EDA               	movwf	fsr2h,c
  7348  01835E  0E01               	movlw	1
  7349  018360  6EDF               	movwf	indf2,c
  7350                           
  7351                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  7352                           ;stkvar	_h @ sp[(0)+-2]
  7353  018362  0EFE               	movlw	-2
  7354  018364  006F FF8F FFD9     	movff	plusw1,fsr2l
  7355  01836A  0EFF               	movlw	-1
  7356  01836C  006F FF8F FFDA     	movff	plusw1,fsr2h
  7357  018372  0E00               	movlw	0
  7358  018374  6EDF               	movwf	indf2,c
  7359                           
  7360                           ;hid.c: 25:   h->wait_enter = 1;
  7361                           ;stkvar	_h @ sp[(0)+-2]
  7362  018376  0EFE               	movlw	-2
  7363  018378  006F FF8C  F00B    	movff	plusw1,btemp+10
  7364  01837E  0EFF               	movlw	-1
  7365  018380  006F FF8C  F00C    	movff	plusw1,btemp+11
  7366  018386  0E04               	movlw	4
  7367  018388  240B               	addwf	(btemp+10)^0,w,c
  7368  01838A  6ED9               	movwf	fsr2l,c
  7369  01838C  0E00               	movlw	0
  7370  01838E  200C               	addwfc	(btemp+11)^0,w,c
  7371  018390  6EDA               	movwf	fsr2h,c
  7372  018392  0E01               	movlw	1
  7373  018394  6EDF               	movwf	indf2,c
  7374                           
  7375                           ;hid.c: 26:   h->wait_select = 1;
  7376                           ;stkvar	_h @ sp[(0)+-2]
  7377  018396  0EFE               	movlw	-2
  7378  018398  006F FF8C  F00B    	movff	plusw1,btemp+10
  7379  01839E  0EFF               	movlw	-1
  7380  0183A0  006F FF8C  F00C    	movff	plusw1,btemp+11
  7381  0183A6  0E02               	movlw	2
  7382  0183A8  240B               	addwf	(btemp+10)^0,w,c
  7383  0183AA  6ED9               	movwf	fsr2l,c
  7384  0183AC  0E00               	movlw	0
  7385  0183AE  200C               	addwfc	(btemp+11)^0,w,c
  7386  0183B0  6EDA               	movwf	fsr2h,c
  7387  0183B2  0E01               	movlw	1
  7388  0183B4  6EDF               	movwf	indf2,c
  7389                           
  7390                           ;hid.c: 27:   h->select_p = SW_OFF;
  7391                           ;stkvar	_h @ sp[(0)+-2]
  7392  0183B6  0EFE               	movlw	-2
  7393  0183B8  006F FF8C  F00B    	movff	plusw1,btemp+10
  7394  0183BE  0EFF               	movlw	-1
  7395  0183C0  006F FF8C  F00C    	movff	plusw1,btemp+11
  7396  0183C6  0E03               	movlw	3
  7397  0183C8  240B               	addwf	(btemp+10)^0,w,c
  7398  0183CA  6ED9               	movwf	fsr2l,c
  7399  0183CC  0E00               	movlw	0
  7400  0183CE  200C               	addwfc	(btemp+11)^0,w,c
  7401  0183D0  6EDA               	movwf	fsr2h,c
  7402  0183D2  0E00               	movlw	0
  7403  0183D4  6EDF               	movwf	indf2,c
  7404                           
  7405                           ;hid.c: 28:   h->enter_p = SW_OFF;
  7406                           ;stkvar	_h @ sp[(0)+-2]
  7407  0183D6  0EFE               	movlw	-2
  7408  0183D8  006F FF8C  F00B    	movff	plusw1,btemp+10
  7409  0183DE  0EFF               	movlw	-1
  7410  0183E0  006F FF8C  F00C    	movff	plusw1,btemp+11
  7411  0183E6  0E05               	movlw	5
  7412  0183E8  240B               	addwf	(btemp+10)^0,w,c
  7413  0183EA  6ED9               	movwf	fsr2l,c
  7414  0183EC  0E00               	movlw	0
  7415  0183EE  200C               	addwfc	(btemp+11)^0,w,c
  7416  0183F0  6EDA               	movwf	fsr2h,c
  7417  0183F2  0E00               	movlw	0
  7418  0183F4  D06A               	goto	L3
  7419  0183F6                     l12811:
  7420                           
  7421                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  7422                           ;stkvar	_h @ sp[(0)+-2]
  7423  0183F6  0EFE               	movlw	-2
  7424  0183F8  006F FF8C  F00B    	movff	plusw1,btemp+10
  7425  0183FE  0EFF               	movlw	-1
  7426  018400  006F FF8C  F00C    	movff	plusw1,btemp+11
  7427  018406  0E02               	movlw	2
  7428  018408  240B               	addwf	(btemp+10)^0,w,c
  7429  01840A  6ED9               	movwf	fsr2l,c
  7430  01840C  0E00               	movlw	0
  7431  01840E  200C               	addwfc	(btemp+11)^0,w,c
  7432  018410  6EDA               	movwf	fsr2h,c
  7433  018412  50DF               	movf	indf2,w,c
  7434  018414  A4D8               	btfss	status,2,c
  7435  018416  D076               	goto	l1972
  7436                           
  7437                           ;stkvar	_h @ sp[(0)+-2]
  7438  018418  0EFE               	movlw	-2
  7439  01841A  006F FF8C  F00B    	movff	plusw1,btemp+10
  7440  018420  0EFF               	movlw	-1
  7441  018422  006F FF8C  F00C    	movff	plusw1,btemp+11
  7442  018428  0E03               	movlw	3
  7443  01842A  240B               	addwf	(btemp+10)^0,w,c
  7444  01842C  6ED9               	movwf	fsr2l,c
  7445  01842E  0E00               	movlw	0
  7446  018430  200C               	addwfc	(btemp+11)^0,w,c
  7447  018432  6EDA               	movwf	fsr2h,c
  7448  018434  50DF               	movf	indf2,w,c
  7449  018436  A4D8               	btfss	status,2,c
  7450  018438  D065               	goto	l1972
  7451                           
  7452                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  7453                           ;stkvar	_h @ sp[(0)+-2]
  7454  01843A  0EFE               	movlw	-2
  7455  01843C  006F FF8C  F00B    	movff	plusw1,btemp+10
  7456  018442  0EFF               	movlw	-1
  7457  018444  006F FF8C  F00C    	movff	plusw1,btemp+11
  7458  01844A  0E06               	movlw	6
  7459  01844C  240B               	addwf	(btemp+10)^0,w,c
  7460  01844E  6ED9               	movwf	fsr2l,c
  7461  018450  0E00               	movlw	0
  7462  018452  200C               	addwfc	(btemp+11)^0,w,c
  7463  018454  6EDA               	movwf	fsr2h,c
  7464                           
  7465                           ;stkvar	_h @ sp[(0)+-2]
  7466  018456  0EFE               	movlw	-2
  7467  018458  006F FF8C  F00B    	movff	plusw1,btemp+10
  7468  01845E  0EFF               	movlw	-1
  7469  018460  006F FF8C  F00C    	movff	plusw1,btemp+11
  7470  018466  0E06               	movlw	6
  7471  018468  240B               	addwf	(btemp+10)^0,w,c
  7472  01846A  6EE9               	movwf	fsr0l,c
  7473  01846C  0E00               	movlw	0
  7474  01846E  200C               	addwfc	(btemp+11)^0,w,c
  7475  018470  6EEA               	movwf	fsr0h,c
  7476  018472  2AEF               	incf	indf0,f,c
  7477  018474  50EF               	movf	indf0,w,c
  7478  018476  0B03               	andlw	3
  7479  018478  6EDF               	movwf	indf2,c
  7480                           
  7481                           ;hid.c: 34:    h->hid_display = h->sequence;
  7482                           ;stkvar	_h @ sp[(0)+-2]
  7483  01847A  0EFE               	movlw	-2
  7484  01847C  006F FF8C  F00B    	movff	plusw1,btemp+10
  7485  018482  0EFF               	movlw	-1
  7486  018484  006F FF8C  F00C    	movff	plusw1,btemp+11
  7487  01848A  0E06               	movlw	6
  7488  01848C  240B               	addwf	(btemp+10)^0,w,c
  7489  01848E  6ED9               	movwf	fsr2l,c
  7490  018490  0E00               	movlw	0
  7491  018492  200C               	addwfc	(btemp+11)^0,w,c
  7492  018494  6EDA               	movwf	fsr2h,c
  7493                           
  7494                           ;stkvar	_h @ sp[(0)+-2]
  7495  018496  0EFE               	movlw	-2
  7496  018498  006F FF8F FFE9     	movff	plusw1,fsr0l
  7497  01849E  0EFF               	movlw	-1
  7498  0184A0  006F FF8F FFEA     	movff	plusw1,fsr0h
  7499  0184A6  006F FF7F FFEF     	movff	indf2,indf0
  7500                           
  7501                           ;hid.c: 35:    h->wait_select = 1;
  7502                           ;stkvar	_h @ sp[(0)+-2]
  7503  0184AC  0EFE               	movlw	-2
  7504  0184AE  006F FF8C  F00B    	movff	plusw1,btemp+10
  7505  0184B4  0EFF               	movlw	-1
  7506  0184B6  006F FF8C  F00C    	movff	plusw1,btemp+11
  7507  0184BC  0E02               	movlw	2
  7508  0184BE  240B               	addwf	(btemp+10)^0,w,c
  7509  0184C0  6ED9               	movwf	fsr2l,c
  7510  0184C2  0E00               	movlw	0
  7511  0184C4  200C               	addwfc	(btemp+11)^0,w,c
  7512  0184C6  6EDA               	movwf	fsr2h,c
  7513  0184C8  0E01               	movlw	1
  7514  0184CA                     L3:
  7515  0184CA  6EDF               	movwf	indf2,c
  7516  0184CC  D01B               	goto	l1972
  7517  0184CE                     l12821:
  7518                           
  7519                           ;stkvar	_h @ sp[(0)+-2]
  7520  0184CE  0EFE               	movlw	-2
  7521  0184D0  006F FF8C  F00B    	movff	plusw1,btemp+10
  7522  0184D6  0EFF               	movlw	-1
  7523  0184D8  006F FF8C  F00C    	movff	plusw1,btemp+11
  7524  0184DE  0E01               	movlw	1
  7525  0184E0  240B               	addwf	(btemp+10)^0,w,c
  7526  0184E2  6ED9               	movwf	fsr2l,c
  7527  0184E4  0E00               	movlw	0
  7528  0184E6  200C               	addwfc	(btemp+11)^0,w,c
  7529  0184E8  6EDA               	movwf	fsr2h,c
  7530  0184EA  50DF               	movf	indf2,w,c
  7531  0184EC  6E0B               	movwf	(btemp+10)^0,c
  7532  0184EE  6A0C               	clrf	(btemp+11)^0,c
  7533                           
  7534                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7535                           ; Switch size 1, requested type "simple"
  7536                           ; Number of cases is 1, Range of values is 0 to 0
  7537                           ; switch strategies available:
  7538                           ; Name         Instructions Cycles
  7539                           ; simple_byte            4     3 (average)
  7540                           ;	Chosen strategy is simple_byte
  7541  0184F0  500C               	movf	(btemp+11)^0,w,c
  7542  0184F2  0A00               	xorlw	0	; case 0
  7543  0184F4  A4D8               	btfss	status,2,c
  7544  0184F6  D77F               	goto	l12811
  7545                           
  7546                           ; Switch size 1, requested type "simple"
  7547                           ; Number of cases is 2, Range of values is 0 to 1
  7548                           ; switch strategies available:
  7549                           ; Name         Instructions Cycles
  7550                           ; simple_byte            7     4 (average)
  7551                           ;	Chosen strategy is simple_byte
  7552  0184F8  500B               	movf	(btemp+10)^0,w,c
  7553  0184FA  0A00               	xorlw	0	; case 0
  7554  0184FC  B4D8               	btfsc	status,2,c
  7555  0184FE  D721               	goto	l12799
  7556  018500  0A01               	xorlw	1	; case 1
  7557  018502  D779               	goto	l12811
  7558  018504                     l1972:
  7559                           
  7560                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
  7561  018504  52E5               	movf	postdec1,f,c
  7562  018506  52E5               	movf	postdec1,f,c
  7563  018508  0012               	return		;funcret
  7564  01850A                     __end_of_hid_display:
  7565                           	opt callstack 0
  7566                           
  7567 ;; *************** function _hid_input *****************
  7568 ;; Defined at:
  7569 ;;		line 3 in file "hid.c"
  7570 ;; Parameters:    Size  Location     Type
  7571 ;;  h               2  [STACK] PTR struct H_data
  7572 ;;		 -> H(7), 
  7573 ;; Auto vars:     Size  Location     Type
  7574 ;;		None
  7575 ;; Return value:  Size  Location     Type
  7576 ;;                  2  [STACK] PTR struct H_data
  7577 ;; Registers used:
  7578 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7579 ;; Tracked objects:
  7580 ;;		On entry : 0/39
  7581 ;;		On exit  : 0/0
  7582 ;;		Unchanged: 0/0
  7583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7588 ;;Total ram usage:        0 bytes
  7589 ;; Hardware stack levels used:    1
  7590 ;; Hardware stack levels required when called:   16
  7591 ;; This function calls:
  7592 ;;		_get_switch
  7593 ;; This function is called by:
  7594 ;;		_hid_display
  7595 ;; This function uses a reentrant model
  7596 ;;
  7597                           
  7598                           	psect	text14
  7599  01A0C6                     __ptext14:
  7600                           	opt callstack 0
  7601  01A0C6                     _hid_input:
  7602                           	opt callstack 13
  7603                           
  7604                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  7605                           
  7606                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7607                           ;incstack = 0
  7608  01A0C6  0E02               	movlw	2
  7609  01A0C8  6EE6               	movwf	postinc1,c
  7610  01A0CA  ECB5  F0DB         	call	_get_switch	;wreg free
  7611  01A0CE  5001               	movf	btemp^0,w,c
  7612  01A0D0  B4D8               	btfsc	status,2,c
  7613  01A0D2  D02C               	goto	l12623
  7614                           
  7615                           ;hid.c: 6:   h->wait_select = 0;
  7616                           ;stkvar	_h @ sp[(0)+-2]
  7617  01A0D4  0EFE               	movlw	-2
  7618  01A0D6  006F FF8C  F00B    	movff	plusw1,btemp+10
  7619  01A0DC  0EFF               	movlw	-1
  7620  01A0DE  006F FF8C  F00C    	movff	plusw1,btemp+11
  7621  01A0E4  0E02               	movlw	2
  7622  01A0E6  240B               	addwf	(btemp+10)^0,w,c
  7623  01A0E8  6ED9               	movwf	fsr2l,c
  7624  01A0EA  0E00               	movlw	0
  7625  01A0EC  200C               	addwfc	(btemp+11)^0,w,c
  7626  01A0EE  6EDA               	movwf	fsr2h,c
  7627  01A0F0  0E00               	movlw	0
  7628  01A0F2  6EDF               	movwf	indf2,c
  7629                           
  7630                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  7631  01A0F4  0E02               	movlw	2
  7632  01A0F6  6EE6               	movwf	postinc1,c
  7633  01A0F8  ECB5  F0DB         	call	_get_switch	;wreg free
  7634  01A0FC  5001               	movf	btemp^0,w,c
  7635  01A0FE  B4D8               	btfsc	status,2,c
  7636  01A100  D003               	goto	u12190
  7637  01A102  6A0C               	clrf	(btemp+11)^0,c
  7638  01A104  2A0C               	incf	(btemp+11)^0,f,c
  7639  01A106  D001               	goto	u12208
  7640  01A108                     u12190:
  7641  01A108  6A0C               	clrf	(btemp+11)^0,c
  7642  01A10A                     u12208:
  7643                           
  7644                           ;stkvar	_h @ sp[(0)+-2]
  7645  01A10A  0EFE               	movlw	-2
  7646  01A10C  006F FF8C  F009    	movff	plusw1,btemp+8
  7647  01A112  0EFF               	movlw	-1
  7648  01A114  006F FF8C  F00A    	movff	plusw1,btemp+9
  7649  01A11A  0E03               	movlw	3
  7650  01A11C  2409               	addwf	(btemp+8)^0,w,c
  7651  01A11E  6ED9               	movwf	fsr2l,c
  7652  01A120  0E00               	movlw	0
  7653  01A122  200A               	addwfc	(btemp+9)^0,w,c
  7654  01A124  6EDA               	movwf	fsr2h,c
  7655  01A126  0060  F033  FFDF   	movff	btemp+11,indf2
  7656  01A12C                     l12623:
  7657                           
  7658                           ;hid.c: 10:  if (get_switch(SENTER)) {
  7659  01A12C  0E03               	movlw	3
  7660  01A12E  6EE6               	movwf	postinc1,c
  7661  01A130  ECB5  F0DB         	call	_get_switch	;wreg free
  7662  01A134  5001               	movf	btemp^0,w,c
  7663  01A136  B4D8               	btfsc	status,2,c
  7664  01A138  D02C               	goto	l1963
  7665                           
  7666                           ;hid.c: 11:   h->wait_enter = 0;
  7667                           ;stkvar	_h @ sp[(0)+-2]
  7668  01A13A  0EFE               	movlw	-2
  7669  01A13C  006F FF8C  F00B    	movff	plusw1,btemp+10
  7670  01A142  0EFF               	movlw	-1
  7671  01A144  006F FF8C  F00C    	movff	plusw1,btemp+11
  7672  01A14A  0E04               	movlw	4
  7673  01A14C  240B               	addwf	(btemp+10)^0,w,c
  7674  01A14E  6ED9               	movwf	fsr2l,c
  7675  01A150  0E00               	movlw	0
  7676  01A152  200C               	addwfc	(btemp+11)^0,w,c
  7677  01A154  6EDA               	movwf	fsr2h,c
  7678  01A156  0E00               	movlw	0
  7679  01A158  6EDF               	movwf	indf2,c
  7680                           
  7681                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  7682  01A15A  0E03               	movlw	3
  7683  01A15C  6EE6               	movwf	postinc1,c
  7684  01A15E  ECB5  F0DB         	call	_get_switch	;wreg free
  7685  01A162  5001               	movf	btemp^0,w,c
  7686  01A164  B4D8               	btfsc	status,2,c
  7687  01A166  D003               	goto	u12220
  7688  01A168  6A0C               	clrf	(btemp+11)^0,c
  7689  01A16A  2A0C               	incf	(btemp+11)^0,f,c
  7690  01A16C  D001               	goto	u12238
  7691  01A16E                     u12220:
  7692  01A16E  6A0C               	clrf	(btemp+11)^0,c
  7693  01A170                     u12238:
  7694                           
  7695                           ;stkvar	_h @ sp[(0)+-2]
  7696  01A170  0EFE               	movlw	-2
  7697  01A172  006F FF8C  F009    	movff	plusw1,btemp+8
  7698  01A178  0EFF               	movlw	-1
  7699  01A17A  006F FF8C  F00A    	movff	plusw1,btemp+9
  7700  01A180  0E05               	movlw	5
  7701  01A182  2409               	addwf	(btemp+8)^0,w,c
  7702  01A184  6ED9               	movwf	fsr2l,c
  7703  01A186  0E00               	movlw	0
  7704  01A188  200A               	addwfc	(btemp+9)^0,w,c
  7705  01A18A  6EDA               	movwf	fsr2h,c
  7706  01A18C  0060  F033  FFDF   	movff	btemp+11,indf2
  7707  01A192                     l1963:
  7708                           
  7709                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
  7710  01A192  52E5               	movf	postdec1,f,c
  7711  01A194  52E5               	movf	postdec1,f,c
  7712  01A196  0012               	return		;funcret
  7713  01A198                     __end_of_hid_input:
  7714                           	opt callstack 0
  7715                           
  7716 ;; *************** function _get_switch *****************
  7717 ;; Defined at:
  7718 ;;		line 18 in file "dio.c"
  7719 ;; Parameters:    Size  Location     Type
  7720 ;;  i               1  [STACK] unsigned char 
  7721 ;; Auto vars:     Size  Location     Type
  7722 ;;		None
  7723 ;; Return value:  Size  Location     Type
  7724 ;;                  1  [STACK] enum E17021
  7725 ;; Registers used:
  7726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  7727 ;; Tracked objects:
  7728 ;;		On entry : 0/1
  7729 ;;		On exit  : 0/0
  7730 ;;		Unchanged: 0/0
  7731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7736 ;;Total ram usage:        0 bytes
  7737 ;; Hardware stack levels used:    1
  7738 ;; Hardware stack levels required when called:   15
  7739 ;; This function calls:
  7740 ;;		Nothing
  7741 ;; This function is called by:
  7742 ;;		_main
  7743 ;;		_hid_input
  7744 ;; This function uses a reentrant model
  7745 ;;
  7746                           
  7747                           	psect	text15
  7748  01B76A                     __ptext15:
  7749                           	opt callstack 0
  7750  01B76A                     _get_switch:
  7751                           	opt callstack 13
  7752                           
  7753                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  7754                           ;stkvar	_i @ sp[(0)+-1]
  7755                           
  7756                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7757                           ;incstack = 0
  7758  01B76A  0EFF               	movlw	-1
  7759  01B76C  006F FF8C  F001    	movff	plusw1,btemp
  7760  01B772  0E03               	movlw	3
  7761  01B774  6401               	cpfsgt	btemp^0,c
  7762  01B776  D002               	goto	l9821
  7763                           
  7764                           ;dio.c: 21:   return SW_OFF;
  7765  01B778  0E00               	movlw	0
  7766  01B77A  D00A               	goto	L4
  7767  01B77C                     l9821:
  7768                           
  7769                           ;dio.c: 23:  return S.button[i].sw;
  7770                           ;stkvar	_i @ sp[(0)+-1]
  7771  01B77C  0EFF               	movlw	-1
  7772  01B77E  50E3               	movf	plusw1,w,c
  7773  01B780  0D05               	mullw	5
  7774  01B782  0EC6               	movlw	low _S
  7775  01B784  24F3               	addwf	243,w,c
  7776  01B786  6ED9               	movwf	fsr2l,c
  7777  01B788  0E01               	movlw	high _S
  7778  01B78A  20F4               	addwfc	prodh,w,c
  7779  01B78C  6EDA               	movwf	fsr2h,c
  7780  01B78E  50DF               	movf	indf2,w,c
  7781  01B790                     L4:
  7782  01B790  6E01               	movwf	btemp^0,c
  7783                           
  7784                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7785  01B792  52E5               	movf	postdec1,f,c
  7786  01B794  0012               	return		;funcret
  7787  01B796                     __end_of_get_switch:
  7788                           	opt callstack 0
  7789                           
  7790 ;; *************** function _esr_check *****************
  7791 ;; Defined at:
  7792 ;;		line 178 in file "bsoc.c"
  7793 ;; Parameters:    Size  Location     Type
  7794 ;;  fsm             1  [STACK] unsigned char 
  7795 ;; Auto vars:     Size  Location     Type
  7796 ;;		None
  7797 ;; Return value:  Size  Location     Type
  7798 ;;                  4  [STACK] float 
  7799 ;; Registers used:
  7800 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7801 ;; Tracked objects:
  7802 ;;		On entry : 0/0
  7803 ;;		On exit  : 0/0
  7804 ;;		Unchanged: 0/0
  7805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7810 ;;Total ram usage:        0 bytes
  7811 ;; Hardware stack levels used:    1
  7812 ;; Hardware stack levels required when called:   18
  7813 ;; This function calls:
  7814 ;;		_StartTimer
  7815 ;;		_TimerDone
  7816 ;;		___fldiv
  7817 ;;		___flsub
  7818 ;;		_conv_raw_result
  7819 ;;		_fabsf
  7820 ;;		_set_load_relay_one
  7821 ;;		_set_load_relay_two
  7822 ;;		_update_adc_result
  7823 ;; This function is called by:
  7824 ;;		_main
  7825 ;; This function uses a reentrant model
  7826 ;;
  7827                           
  7828                           	psect	text16
  7829  016E0C                     __ptext16:
  7830                           	opt callstack 0
  7831  016E0C                     _esr_check:
  7832                           	opt callstack 12
  7833                           
  7834                           ;bsoc.c: 178: float esr_check(uint8_t fsm);bsoc.c: 179: {;bsoc.c: 180:  static uint8_t e
      +                          sr_state = 0;;bsoc.c: 182:  if (fsm) {
  7835                           ;stkvar	_fsm @ sp[(0)+-1]
  7836                           
  7837                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7838                           ;incstack = 0
  7839  016E0C  0EFF               	movlw	-1
  7840  016E0E  50E3               	movf	plusw1,w,c
  7841  016E10  B4D8               	btfsc	status,2,c
  7842  016E12  D146               	goto	l10819
  7843                           
  7844                           ;bsoc.c: 183:   esr_state = 0;
  7845  016E14  6A40               	clrf	esr_check@esr_state^0,c
  7846                           
  7847                           ;bsoc.c: 184:   return -10.0;
  7848  016E16  0E00               	movlw	0
  7849  016E18  6E01               	movwf	btemp^0,c
  7850  016E1A  0E00               	movlw	0
  7851  016E1C  6E02               	movwf	(btemp+1)^0,c
  7852  016E1E  0E20               	movlw	32
  7853  016E20  6E03               	movwf	(btemp+2)^0,c
  7854  016E22  0EC1               	movlw	193
  7855  016E24  D158               	goto	L5
  7856  016E26                     l10751:
  7857                           
  7858                           ;bsoc.c: 189:   StartTimer(TMR_ESR, 10000);
  7859  016E26  0E10               	movlw	16
  7860  016E28  6EE6               	movwf	postinc1,c
  7861  016E2A  0E27               	movlw	39
  7862  016E2C  6EE6               	movwf	postinc1,c
  7863  016E2E  0E0C               	movlw	12
  7864  016E30  6EE6               	movwf	postinc1,c
  7865  016E32  ECE1  F0D9         	call	_StartTimer	;wreg free
  7866  016E36                     l10753:
  7867                           
  7868                           ;bsoc.c: 190:   esr_state++;
  7869  016E36  2A40               	incf	esr_check@esr_state^0,f,c
  7870                           
  7871                           ;bsoc.c: 191:   break;
  7872  016E38  D147               	goto	l10821
  7873  016E3A                     l10755:
  7874                           
  7875                           ;bsoc.c: 196:   set_load_relay_one(0);
  7876  016E3A  0E00               	movlw	0
  7877  016E3C  6EE6               	movwf	postinc1,c
  7878  016E3E  ECCB  F0DE         	call	_set_load_relay_one	;wreg free
  7879                           
  7880                           ;bsoc.c: 197:   set_load_relay_two(0);
  7881  016E42  0E00               	movlw	0
  7882  016E44  6EE6               	movwf	postinc1,c
  7883  016E46  ECC3  F0DE         	call	_set_load_relay_two	;wreg free
  7884                           
  7885                           ;bsoc.c: 198:   if (TimerDone(TMR_ESR)) {
  7886  016E4A  0E0C               	movlw	12
  7887  016E4C  6EE6               	movwf	postinc1,c
  7888  016E4E  EC5D  F0DC         	call	_TimerDone	;wreg free
  7889  016E52  5001               	movf	btemp^0,w,c
  7890  016E54  B4D8               	btfsc	status,2,c
  7891  016E56  D009               	goto	l10761
  7892                           
  7893                           ;bsoc.c: 199:    StartTimer(TMR_ESR, 10000);
  7894  016E58  0E10               	movlw	16
  7895  016E5A  6EE6               	movwf	postinc1,c
  7896  016E5C  0E27               	movlw	39
  7897  016E5E  6EE6               	movwf	postinc1,c
  7898  016E60  0E0C               	movlw	12
  7899  016E62  6EE6               	movwf	postinc1,c
  7900  016E64  ECE1  F0D9         	call	_StartTimer	;wreg free
  7901                           
  7902                           ;bsoc.c: 200:   } else {
  7903  016E68  D006               	goto	l10765
  7904  016E6A                     l10761:
  7905                           
  7906                           ;bsoc.c: 201:    return -2.0;
  7907  016E6A  0E00               	movlw	0
  7908  016E6C  6E01               	movwf	btemp^0,c
  7909  016E6E  0E00               	movlw	0
  7910  016E70  6E02               	movwf	(btemp+1)^0,c
  7911  016E72  0E00               	movlw	0
  7912  016E74  D066               	goto	L7
  7913  016E76                     l10765:
  7914                           
  7915                           ;bsoc.c: 206:   update_adc_result();
  7916  016E76  EC7F  F0DA         	call	_update_adc_result	;wreg free
  7917                           
  7918                           ;bsoc.c: 207:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  7919  016E7A  0E00               	movlw	0
  7920  016E7C  6EE6               	movwf	postinc1,c
  7921  016E7E  0E04               	movlw	4
  7922  016E80  6EE6               	movwf	postinc1,c
  7923  016E82  EC0D  F0A8         	call	_conv_raw_result	;wreg free
  7924  016E86  0060  F004  F811   	movff	btemp,_C+274	;volatile
  7925  016E8C  0060  F008  F812   	movff	btemp+1,_C+275	;volatile
  7926  016E92  0060  F00C  F813   	movff	btemp+2,_C+276	;volatile
  7927  016E98  0060  F010  F814   	movff	btemp+3,_C+277	;volatile
  7928  016E9E  D7CB               	goto	l10753
  7929  016EA0                     l10771:
  7930                           
  7931                           ;bsoc.c: 211:   set_load_relay_one(1);
  7932  016EA0  0E01               	movlw	1
  7933  016EA2  6EE6               	movwf	postinc1,c
  7934  016EA4  ECCB  F0DE         	call	_set_load_relay_one	;wreg free
  7935                           
  7936                           ;bsoc.c: 212:   if (TimerDone(TMR_ESR)) {
  7937  016EA8  0E0C               	movlw	12
  7938  016EAA  6EE6               	movwf	postinc1,c
  7939  016EAC  EC5D  F0DC         	call	_TimerDone	;wreg free
  7940  016EB0  5001               	movf	btemp^0,w,c
  7941  016EB2  B4D8               	btfsc	status,2,c
  7942  016EB4  D009               	goto	l10777
  7943                           
  7944                           ;bsoc.c: 213:    StartTimer(TMR_ESR, 10000);
  7945  016EB6  0E10               	movlw	16
  7946  016EB8  6EE6               	movwf	postinc1,c
  7947  016EBA  0E27               	movlw	39
  7948  016EBC  6EE6               	movwf	postinc1,c
  7949  016EBE  0E0C               	movlw	12
  7950  016EC0  6EE6               	movwf	postinc1,c
  7951  016EC2  ECE1  F0D9         	call	_StartTimer	;wreg free
  7952                           
  7953                           ;bsoc.c: 214:   } else {
  7954  016EC6  D006               	goto	l10781
  7955  016EC8                     l10777:
  7956                           
  7957                           ;bsoc.c: 215:    return -3.0;
  7958  016EC8  0E00               	movlw	0
  7959  016ECA  6E01               	movwf	btemp^0,c
  7960  016ECC  0E00               	movlw	0
  7961  016ECE  6E02               	movwf	(btemp+1)^0,c
  7962  016ED0  0E40               	movlw	64
  7963  016ED2  D037               	goto	L7
  7964  016ED4                     l10781:
  7965                           
  7966                           ;bsoc.c: 218:   update_adc_result();
  7967  016ED4  EC7F  F0DA         	call	_update_adc_result	;wreg free
  7968                           
  7969                           ;bsoc.c: 219:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  7970  016ED8  0E00               	movlw	0
  7971  016EDA  6EE6               	movwf	postinc1,c
  7972  016EDC  0E04               	movlw	4
  7973  016EDE  6EE6               	movwf	postinc1,c
  7974  016EE0  EC0D  F0A8         	call	_conv_raw_result	;wreg free
  7975  016EE4  0060  F004  F815   	movff	btemp,_C+278	;volatile
  7976  016EEA  0060  F008  F816   	movff	btemp+1,_C+279	;volatile
  7977  016EF0  0060  F00C  F817   	movff	btemp+2,_C+280	;volatile
  7978  016EF6  0060  F010  F818   	movff	btemp+3,_C+281	;volatile
  7979                           
  7980                           ;bsoc.c: 220:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  7981  016EFC  0E00               	movlw	0
  7982  016EFE  6EE6               	movwf	postinc1,c
  7983  016F00  0E00               	movlw	0
  7984  016F02  6EE6               	movwf	postinc1,c
  7985  016F04  EC0D  F0A8         	call	_conv_raw_result	;wreg free
  7986  016F08  0060  F004  F809   	movff	btemp,_C+266	;volatile
  7987  016F0E  0060  F008  F80A   	movff	btemp+1,_C+267	;volatile
  7988  016F14  0060  F00C  F80B   	movff	btemp+2,_C+268	;volatile
  7989  016F1A  0060  F010  F80C   	movff	btemp+3,_C+269	;volatile
  7990  016F20  D78A               	goto	l10753
  7991  016F22                     l10789:
  7992                           
  7993                           ;bsoc.c: 224:   set_load_relay_two(1);
  7994  016F22  0E01               	movlw	1
  7995  016F24  6EE6               	movwf	postinc1,c
  7996  016F26  ECC3  F0DE         	call	_set_load_relay_two	;wreg free
  7997                           
  7998                           ;bsoc.c: 225:   if (!TimerDone(TMR_ESR))
  7999  016F2A  0E0C               	movlw	12
  8000  016F2C  6EE6               	movwf	postinc1,c
  8001  016F2E  EC5D  F0DC         	call	_TimerDone	;wreg free
  8002  016F32  5001               	movf	btemp^0,w,c
  8003  016F34  A4D8               	btfss	status,2,c
  8004  016F36  D008               	goto	l10797
  8005                           
  8006                           ;bsoc.c: 226:    return -4.0;
  8007  016F38  0E00               	movlw	0
  8008  016F3A  6E01               	movwf	btemp^0,c
  8009  016F3C  0E00               	movlw	0
  8010  016F3E  6E02               	movwf	(btemp+1)^0,c
  8011  016F40  0E80               	movlw	128
  8012  016F42                     L7:
  8013  016F42  6E03               	movwf	(btemp+2)^0,c
  8014  016F44  0EC0               	movlw	192
  8015  016F46  D0C7               	goto	L5
  8016  016F48                     l10797:
  8017                           
  8018                           ;bsoc.c: 228:   update_adc_result();
  8019  016F48  EC7F  F0DA         	call	_update_adc_result	;wreg free
  8020                           
  8021                           ;bsoc.c: 229:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  8022  016F4C  0E00               	movlw	0
  8023  016F4E  6EE6               	movwf	postinc1,c
  8024  016F50  0E04               	movlw	4
  8025  016F52  6EE6               	movwf	postinc1,c
  8026  016F54  EC0D  F0A8         	call	_conv_raw_result	;wreg free
  8027  016F58  0060  F004  F819   	movff	btemp,_C+282	;volatile
  8028  016F5E  0060  F008  F81A   	movff	btemp+1,_C+283	;volatile
  8029  016F64  0060  F00C  F81B   	movff	btemp+2,_C+284	;volatile
  8030  016F6A  0060  F010  F81C   	movff	btemp+3,_C+285	;volatile
  8031                           
  8032                           ;bsoc.c: 230:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  8033  016F70  0E00               	movlw	0
  8034  016F72  6EE6               	movwf	postinc1,c
  8035  016F74  0E00               	movlw	0
  8036  016F76  6EE6               	movwf	postinc1,c
  8037  016F78  EC0D  F0A8         	call	_conv_raw_result	;wreg free
  8038  016F7C  0060  F004  F80D   	movff	btemp,_C+270	;volatile
  8039  016F82  0060  F008  F80E   	movff	btemp+1,_C+271	;volatile
  8040  016F88  0060  F00C  F80F   	movff	btemp+2,_C+272	;volatile
  8041  016F8E  0060  F010  F810   	movff	btemp+3,_C+273	;volatile
  8042                           
  8043                           ;bsoc.c: 232:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  8044  016F94  EE22  F00D         	lfsr	2,_C+270	;volatile
  8045  016F98  006F FF7B FFE6     	movff	postinc2,postinc1
  8046  016F9E  006F FF7B FFE6     	movff	postinc2,postinc1
  8047  016FA4  006F FF7B FFE6     	movff	postinc2,postinc1
  8048  016FAA  006F FF7B FFE6     	movff	postinc2,postinc1
  8049  016FB0  EE22  F009         	lfsr	2,_C+266	;volatile
  8050  016FB4  006F FF7B FFE6     	movff	postinc2,postinc1
  8051  016FBA  006F FF7B FFE6     	movff	postinc2,postinc1
  8052  016FC0  006F FF7B FFE6     	movff	postinc2,postinc1
  8053  016FC6  006F FF7B FFE6     	movff	postinc2,postinc1
  8054  016FCC  EC7B  F0D9         	call	___flsub	;wreg free
  8055  016FD0  0060  F007  FFE6   	movff	btemp,postinc1
  8056  016FD6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8057  016FDC  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8058  016FE2  0060  F013  FFE6   	movff	btemp+3,postinc1
  8059  016FE8  EE22  F019         	lfsr	2,_C+282	;volatile
  8060  016FEC  006F FF7B FFE6     	movff	postinc2,postinc1
  8061  016FF2  006F FF7B FFE6     	movff	postinc2,postinc1
  8062  016FF8  006F FF7B FFE6     	movff	postinc2,postinc1
  8063  016FFE  006F FF7B FFE6     	movff	postinc2,postinc1
  8064  017004  EE22  F015         	lfsr	2,_C+278	;volatile
  8065  017008  006F FF7B FFE6     	movff	postinc2,postinc1
  8066  01700E  006F FF7B FFE6     	movff	postinc2,postinc1
  8067  017014  006F FF7B FFE6     	movff	postinc2,postinc1
  8068  01701A  006F FF7B FFE6     	movff	postinc2,postinc1
  8069  017020  EC7B  F0D9         	call	___flsub	;wreg free
  8070  017024  0060  F007  FFE6   	movff	btemp,postinc1
  8071  01702A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8072  017030  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8073  017036  0060  F013  FFE6   	movff	btemp+3,postinc1
  8074  01703C  EC50  F0A5         	call	___fldiv	;wreg free
  8075  017040  0060  F007  FFE6   	movff	btemp,postinc1
  8076  017046  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8077  01704C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8078  017052  0060  F013  FFE6   	movff	btemp+3,postinc1
  8079  017058  ECED  F0D1         	call	_fabsf	;wreg free
  8080  01705C  0060  F004  F787   	movff	btemp,_C+136	;volatile
  8081  017062  0060  F008  F788   	movff	btemp+1,_C+137	;volatile
  8082  017068  0060  F00C  F789   	movff	btemp+2,_C+138	;volatile
  8083  01706E  0060  F010  F78A   	movff	btemp+3,_C+139	;volatile
  8084                           
  8085                           ;bsoc.c: 233:   set_load_relay_one(0);
  8086  017074  0E00               	movlw	0
  8087  017076  6EE6               	movwf	postinc1,c
  8088  017078  ECCB  F0DE         	call	_set_load_relay_one	;wreg free
  8089                           
  8090                           ;bsoc.c: 234:   set_load_relay_two(0);
  8091  01707C  0E00               	movlw	0
  8092  01707E  6EE6               	movwf	postinc1,c
  8093  017080  ECC3  F0DE         	call	_set_load_relay_two	;wreg free
  8094                           
  8095                           ;bsoc.c: 235:   esr_state = 0;
  8096  017084  6A40               	clrf	esr_check@esr_state^0,c
  8097                           
  8098                           ;bsoc.c: 236:   return C.esr;
  8099  017086  0061  FE1C  F001   	movff	_C+136,btemp	;volatile
  8100  01708C  0061  FE20  F002   	movff	_C+137,btemp+1	;volatile
  8101  017092  0061  FE24  F003   	movff	_C+138,btemp+2	;volatile
  8102  017098  0061  FE28  F004   	movff	_C+139,btemp+3	;volatile
  8103  01709E  D01C               	goto	l2080
  8104  0170A0                     l10819:
  8105  0170A0  5040               	movf	esr_check@esr_state^0,w,c
  8106  0170A2  6E0B               	movwf	(btemp+10)^0,c
  8107  0170A4  6A0C               	clrf	(btemp+11)^0,c
  8108                           
  8109                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8110                           ; Switch size 1, requested type "simple"
  8111                           ; Number of cases is 1, Range of values is 0 to 0
  8112                           ; switch strategies available:
  8113                           ; Name         Instructions Cycles
  8114                           ; simple_byte            4     3 (average)
  8115                           ;	Chosen strategy is simple_byte
  8116  0170A6  500C               	movf	(btemp+11)^0,w,c
  8117  0170A8  0A00               	xorlw	0	; case 0
  8118  0170AA  A4D8               	btfss	status,2,c
  8119  0170AC  D00D               	goto	l10821
  8120                           
  8121                           ; Switch size 1, requested type "simple"
  8122                           ; Number of cases is 4, Range of values is 0 to 3
  8123                           ; switch strategies available:
  8124                           ; Name         Instructions Cycles
  8125                           ; simple_byte           13     7 (average)
  8126                           ;	Chosen strategy is simple_byte
  8127  0170AE  500B               	movf	(btemp+10)^0,w,c
  8128  0170B0  0A00               	xorlw	0	; case 0
  8129  0170B2  B4D8               	btfsc	status,2,c
  8130  0170B4  D6B8               	goto	l10751
  8131  0170B6  0A01               	xorlw	1	; case 1
  8132  0170B8  B4D8               	btfsc	status,2,c
  8133  0170BA  D6BF               	goto	l10755
  8134  0170BC  0A03               	xorlw	3	; case 2
  8135  0170BE  B4D8               	btfsc	status,2,c
  8136  0170C0  D6EF               	goto	l10771
  8137  0170C2  0A01               	xorlw	1	; case 3
  8138  0170C4  B4D8               	btfsc	status,2,c
  8139  0170C6  D72D               	goto	l10789
  8140  0170C8                     l10821:
  8141                           
  8142                           ;bsoc.c: 241:  return -1.0;
  8143  0170C8  0E00               	movlw	0
  8144  0170CA  6E01               	movwf	btemp^0,c
  8145  0170CC  0E00               	movlw	0
  8146  0170CE  6E02               	movwf	(btemp+1)^0,c
  8147  0170D0  0E80               	movlw	128
  8148  0170D2  6E03               	movwf	(btemp+2)^0,c
  8149  0170D4  0EBF               	movlw	191
  8150  0170D6                     L5:
  8151  0170D6  6E04               	movwf	(btemp+3)^0,c
  8152  0170D8                     l2080:
  8153                           
  8154                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  8155  0170D8  52E5               	movf	postdec1,f,c
  8156  0170DA  0012               	return		;funcret
  8157  0170DC                     __end_of_esr_check:
  8158                           	opt callstack 0
  8159                           
  8160 ;; *************** function _update_adc_result *****************
  8161 ;; Defined at:
  8162 ;;		line 71 in file "daq.c"
  8163 ;; Parameters:    Size  Location     Type
  8164 ;;		None
  8165 ;; Auto vars:     Size  Location     Type
  8166 ;;		None
  8167 ;; Return value:  Size  Location     Type
  8168 ;;                  1  [STACK] _Bool 
  8169 ;; Registers used:
  8170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  8171 ;; Tracked objects:
  8172 ;;		On entry : 0/0
  8173 ;;		On exit  : 0/0
  8174 ;;		Unchanged: 0/0
  8175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8180 ;;Total ram usage:        0 bytes
  8181 ;; Hardware stack levels used:    1
  8182 ;; Hardware stack levels required when called:   17
  8183 ;; This function calls:
  8184 ;;		_StartTimer
  8185 ;;		_TimerDone
  8186 ;;		_check_adc_scan
  8187 ;;		_clear_adc_scan
  8188 ;;		_start_adc_scan
  8189 ;; This function is called by:
  8190 ;;		_esr_check
  8191 ;; This function uses a reentrant model
  8192 ;;
  8193                           
  8194                           	psect	text17
  8195  01B4FE                     __ptext17:
  8196                           	opt callstack 0
  8197  01B4FE                     _update_adc_result:
  8198                           	opt callstack 12
  8199                           
  8200                           ;daq.c: 73:  if (R.done) {
  8201                           
  8202                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8203                           ;incstack = 0
  8204  01B4FE  0100               	movlb	0	; () banked
  8205  01B500  51E4               	movf	(_R+39)& (0+255),w,b	;volatile
  8206  01B502  B4D8               	btfsc	status,2,c
  8207  01B504  0012               	return	
  8208                           
  8209                           ; BSR set to: 0
  8210                           ;daq.c: 74:   clear_adc_scan();
  8211  01B506  EC3B  F0DF         	call	_clear_adc_scan	;wreg free
  8212                           
  8213                           ; BSR set to: 0
  8214                           ;daq.c: 75:   start_adc_scan();
  8215  01B50A  ECC0  F0D6         	call	_start_adc_scan	;wreg free
  8216                           
  8217                           ;daq.c: 76:   StartTimer(TMR_ADC, 200);
  8218  01B50E  0EC8               	movlw	200
  8219  01B510  6EE6               	movwf	postinc1,c
  8220  01B512  0E00               	movlw	0
  8221  01B514  6EE6               	movwf	postinc1,c
  8222  01B516  0E01               	movlw	1
  8223  01B518  6EE6               	movwf	postinc1,c
  8224  01B51A  ECE1  F0D9         	call	_StartTimer	;wreg free
  8225  01B51E                     l10371:
  8226  01B51E  0E01               	movlw	1
  8227  01B520  6EE6               	movwf	postinc1,c
  8228  01B522  EC5D  F0DC         	call	_TimerDone	;wreg free
  8229  01B526  5001               	movf	btemp^0,w,c
  8230  01B528  A4D8               	btfss	status,2,c
  8231  01B52A  0012               	return	
  8232  01B52C  EC27  F0DF         	call	_check_adc_scan	;wreg free
  8233  01B530  5001               	movf	btemp^0,w,c
  8234  01B532  A4D8               	btfss	status,2,c
  8235  01B534  0012               	return	
  8236  01B536  D7F3               	goto	l10371
  8237  01B538                     __end_of_update_adc_result:
  8238                           	opt callstack 0
  8239                           
  8240 ;; *************** function _start_adc_scan *****************
  8241 ;; Defined at:
  8242 ;;		line 32 in file "daq.c"
  8243 ;; Parameters:    Size  Location     Type
  8244 ;;		None
  8245 ;; Auto vars:     Size  Location     Type
  8246 ;;		None
  8247 ;; Return value:  Size  Location     Type
  8248 ;;                  1  [STACK] _Bool 
  8249 ;; Registers used:
  8250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  8251 ;; Tracked objects:
  8252 ;;		On entry : 0/0
  8253 ;;		On exit  : 1/0
  8254 ;;		Unchanged: 0/0
  8255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8260 ;;Total ram usage:        0 bytes
  8261 ;; Hardware stack levels used:    1
  8262 ;; Hardware stack levels required when called:   16
  8263 ;; This function calls:
  8264 ;;		_ADCC_DischargeSampleCapacitor
  8265 ;;		_ADCC_SetADIInterruptHandler
  8266 ;;		_ADCC_SetADTIInterruptHandler
  8267 ;;		_ADCC_StartConversion
  8268 ;; This function is called by:
  8269 ;;		_main
  8270 ;;		_update_adc_result
  8271 ;; This function uses a reentrant model
  8272 ;;
  8273                           
  8274                           	psect	text18
  8275  01AD80                     __ptext18:
  8276                           	opt callstack 0
  8277  01AD80                     _start_adc_scan:
  8278                           	opt callstack 14
  8279                           
  8280                           ;daq.c: 34:  if (R.done)
  8281                           
  8282                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8283                           ;incstack = 0
  8284  01AD80  0100               	movlb	0	; () banked
  8285  01AD82  51E4               	movf	(_R+39)& (0+255),w,b	;volatile
  8286  01AD84  A4D8               	btfss	status,2,c
  8287  01AD86  0012               	return	
  8288                           
  8289                           ; BSR set to: 0
  8290                           ;daq.c: 37:  R.scan_index = 0;
  8291  01AD88  6BE1               	clrf	(_R+36)& (0+255),b	;volatile
  8292                           
  8293                           ; BSR set to: 0
  8294                           ;daq.c: 38:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  8295  01AD8A  013A               	movlb	58	; () banked
  8296  01AD8C  5140               	movf	64,w,b	;volatile
  8297  01AD8E  006E F940  F001    	movff	14928,btemp	;volatile
  8298  01AD94  6A02               	clrf	(btemp+1)^0,c
  8299  01AD96  0060  F004  F002   	movff	btemp,btemp+1
  8300  01AD9C  6A01               	clrf	btemp^0,c
  8301  01AD9E  2601               	addwf	btemp^0,f,c
  8302  01ADA0  0E00               	movlw	0
  8303  01ADA2  2202               	addwfc	(btemp+1)^0,f,c
  8304  01ADA4  0E77               	movlw	119
  8305  01ADA6  1401               	andwf	btemp^0,w,c
  8306  01ADA8  0100               	movlb	0	; () banked
  8307  01ADAA  6FE2               	movwf	(_R+37)& (0+255),b	;volatile
  8308  01ADAC  0E3C               	movlw	60
  8309  01ADAE  1402               	andwf	(btemp+1)^0,w,c
  8310  01ADB0  6FE3               	movwf	(_R+38)& (0+255),b	;volatile
  8311                           
  8312                           ; BSR set to: 0
  8313                           ;daq.c: 39:  ADCC_SetADIInterruptHandler(adc_int_handler);
  8314  01ADB2  0E9E               	movlw	low _adc_int_handler
  8315  01ADB4  6EE6               	movwf	postinc1,c
  8316  01ADB6  0EBE               	movlw	high _adc_int_handler
  8317  01ADB8  6EE6               	movwf	postinc1,c
  8318  01ADBA  0E01               	movlw	low (_adc_int_handler shr (0+16))
  8319  01ADBC  6EE6               	movwf	postinc1,c
  8320  01ADBE  EC25  F0DD         	call	_ADCC_SetADIInterruptHandler	;wreg free
  8321                           
  8322                           ;daq.c: 40:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  8323  01ADC2  0E74               	movlw	low _adc_int_t_handler
  8324  01ADC4  6EE6               	movwf	postinc1,c
  8325  01ADC6  0EAA               	movlw	high _adc_int_t_handler
  8326  01ADC8  6EE6               	movwf	postinc1,c
  8327  01ADCA  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  8328  01ADCC  6EE6               	movwf	postinc1,c
  8329  01ADCE  EC11  F0DD         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  8330                           
  8331                           ;daq.c: 41:  ADCC_DischargeSampleCapacitor();
  8332  01ADD2  EC23  F0DF         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  8333                           
  8334                           ; BSR set to: 62
  8335                           ;daq.c: 42:  ADCC_StartConversion(R.scan_index & 0xf);
  8336  01ADD6  0100               	movlb	0	; () banked
  8337  01ADD8  51E1               	movf	(_R+36)& (0+255),w,b	;volatile
  8338  01ADDA  0B0F               	andlw	15
  8339  01ADDC  6EE6               	movwf	postinc1,c
  8340  01ADDE  ECBA  F0DE         	call	_ADCC_StartConversion	;wreg free
  8341                           
  8342                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8343  01ADE2  0012               	return		;funcret
  8344  01ADE4                     __end_of_start_adc_scan:
  8345                           	opt callstack 0
  8346                           
  8347 ;; *************** function _ADCC_StartConversion *****************
  8348 ;; Defined at:
  8349 ;;		line 128 in file "mcc_generated_files/adcc.c"
  8350 ;; Parameters:    Size  Location     Type
  8351 ;;  channel         1  [STACK] enum E16136
  8352 ;; Auto vars:     Size  Location     Type
  8353 ;;		None
  8354 ;; Return value:  Size  Location     Type
  8355 ;;                  1  [STACK] void 
  8356 ;; Registers used:
  8357 ;;		fsr1l, fsr1h
  8358 ;; Tracked objects:
  8359 ;;		On entry : 3F/0
  8360 ;;		On exit  : 3F/3E
  8361 ;;		Unchanged: 0/0
  8362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8367 ;;Total ram usage:        0 bytes
  8368 ;; Hardware stack levels used:    1
  8369 ;; Hardware stack levels required when called:   15
  8370 ;; This function calls:
  8371 ;;		Nothing
  8372 ;; This function is called by:
  8373 ;;		_start_adc_scan
  8374 ;;		_adc_int_t_handler
  8375 ;; This function uses a reentrant model
  8376 ;;
  8377                           
  8378                           	psect	text19
  8379  01BD74                     __ptext19:
  8380                           	opt callstack 0
  8381  01BD74                     _ADCC_StartConversion:
  8382                           	opt callstack 0
  8383                           
  8384                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  8385                           ;stkvar	_channel @ sp[(0)+-1]
  8386                           
  8387                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8388                           ;incstack = 0
  8389 ;; hardware stack exceeded
  8390  01BD74  0EFF               	movlw	-1
  8391  01BD76  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  8392                           
  8393                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  8394  01BD7C  013E               	movlb	62	; () banked
  8395  01BD7E  8FF8               	bsf	248,7,b	;volatile
  8396                           
  8397                           ; BSR set to: 62
  8398                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  8399  01BD80  81F8               	bsf	248,0,b	;volatile
  8400                           
  8401                           ; BSR set to: 62
  8402                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  8403  01BD82  52E5               	movf	postdec1,f,c
  8404  01BD84  0012               	return		;funcret
  8405  01BD86                     __end_of_ADCC_StartConversion:
  8406                           	opt callstack 0
  8407                           
  8408 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  8409 ;; Defined at:
  8410 ;;		line 189 in file "mcc_generated_files/adcc.c"
  8411 ;; Parameters:    Size  Location     Type
  8412 ;;		None
  8413 ;; Auto vars:     Size  Location     Type
  8414 ;;		None
  8415 ;; Return value:  Size  Location     Type
  8416 ;;                  1  [STACK] void 
  8417 ;; Registers used:
  8418 ;;		wreg, status,2
  8419 ;; Tracked objects:
  8420 ;;		On entry : 0/0
  8421 ;;		On exit  : 3F/3E
  8422 ;;		Unchanged: 0/0
  8423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8428 ;;Total ram usage:        0 bytes
  8429 ;; Hardware stack levels used:    1
  8430 ;; Hardware stack levels required when called:   15
  8431 ;; This function calls:
  8432 ;;		Nothing
  8433 ;; This function is called by:
  8434 ;;		_start_adc_scan
  8435 ;;		_adc_int_t_handler
  8436 ;; This function uses a reentrant model
  8437 ;;
  8438                           
  8439                           	psect	text20
  8440  01BE46                     __ptext20:
  8441                           	opt callstack 0
  8442  01BE46                     _ADCC_DischargeSampleCapacitor:
  8443                           	opt callstack 0
  8444                           
  8445                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  8446                           
  8447                           ; BSR set to: 62
  8448                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8449                           ;incstack = 0
  8450 ;; hardware stack exceeded
  8451  01BE46  0E3B               	movlw	59
  8452  01BE48  013E               	movlb	62	; () banked
  8453  01BE4A  6FF1               	movwf	241,b	;volatile
  8454                           
  8455                           ; BSR set to: 62
  8456                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  8457  01BE4C  0012               	return		;funcret
  8458  01BE4E                     __end_of_ADCC_DischargeSampleCapacitor:
  8459                           	opt callstack 0
  8460                           
  8461 ;; *************** function _clear_adc_scan *****************
  8462 ;; Defined at:
  8463 ;;		line 63 in file "daq.c"
  8464 ;; Parameters:    Size  Location     Type
  8465 ;;		None
  8466 ;; Auto vars:     Size  Location     Type
  8467 ;;		None
  8468 ;; Return value:  Size  Location     Type
  8469 ;;                  1  [STACK] void 
  8470 ;; Registers used:
  8471 ;;		None
  8472 ;; Tracked objects:
  8473 ;;		On entry : 0/0
  8474 ;;		On exit  : 3F/0
  8475 ;;		Unchanged: 0/0
  8476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8481 ;;Total ram usage:        0 bytes
  8482 ;; Hardware stack levels used:    1
  8483 ;; Hardware stack levels required when called:   15
  8484 ;; This function calls:
  8485 ;;		Nothing
  8486 ;; This function is called by:
  8487 ;;		_main
  8488 ;;		_update_adc_result
  8489 ;; This function uses a reentrant model
  8490 ;;
  8491                           
  8492                           	psect	text21
  8493  01BE76                     __ptext21:
  8494                           	opt callstack 0
  8495  01BE76                     _clear_adc_scan:
  8496                           	opt callstack 13
  8497                           
  8498                           ;daq.c: 65:  R.done = 0;
  8499                           
  8500                           ; BSR set to: 62
  8501                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8502                           ;incstack = 0
  8503  01BE76  0100               	movlb	0	; () banked
  8504  01BE78  6BE4               	clrf	(_R+39)& (0+255),b	;volatile
  8505                           
  8506                           ; BSR set to: 0
  8507                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8508  01BE7A  0012               	return		;funcret
  8509  01BE7C                     __end_of_clear_adc_scan:
  8510                           	opt callstack 0
  8511                           
  8512 ;; *************** function _check_adc_scan *****************
  8513 ;; Defined at:
  8514 ;;		line 55 in file "daq.c"
  8515 ;; Parameters:    Size  Location     Type
  8516 ;;		None
  8517 ;; Auto vars:     Size  Location     Type
  8518 ;;		None
  8519 ;; Return value:  Size  Location     Type
  8520 ;;                  1  [STACK] _Bool 
  8521 ;; Registers used:
  8522 ;;		btemp
  8523 ;; Tracked objects:
  8524 ;;		On entry : 0/1
  8525 ;;		On exit  : 0/0
  8526 ;;		Unchanged: 0/0
  8527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8532 ;;Total ram usage:        0 bytes
  8533 ;; Hardware stack levels used:    1
  8534 ;; Hardware stack levels required when called:   15
  8535 ;; This function calls:
  8536 ;;		Nothing
  8537 ;; This function is called by:
  8538 ;;		_main
  8539 ;;		_update_adc_result
  8540 ;; This function uses a reentrant model
  8541 ;;
  8542                           
  8543                           	psect	text22
  8544  01BE4E                     __ptext22:
  8545                           	opt callstack 0
  8546  01BE4E                     _check_adc_scan:
  8547                           	opt callstack 13
  8548                           
  8549                           ;daq.c: 57:  return R.done;
  8550                           
  8551                           ; BSR set to: 0
  8552                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8553                           ;incstack = 0
  8554  01BE4E  0060  F390  F001   	movff	_R+39,btemp	;volatile
  8555                           
  8556                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8557  01BE54  0012               	return		;funcret
  8558  01BE56                     __end_of_check_adc_scan:
  8559                           	opt callstack 0
  8560                           
  8561 ;; *************** function _set_load_relay_two *****************
  8562 ;; Defined at:
  8563 ;;		line 129 in file "mbmc.c"
  8564 ;; Parameters:    Size  Location     Type
  8565 ;;  mode            1  [STACK] _Bool 
  8566 ;; Auto vars:     Size  Location     Type
  8567 ;;		None
  8568 ;; Return value:  Size  Location     Type
  8569 ;;                  1  [STACK] void 
  8570 ;; Registers used:
  8571 ;;		wreg, fsr1l, fsr1h
  8572 ;; Tracked objects:
  8573 ;;		On entry : 0/0
  8574 ;;		On exit  : 0/0
  8575 ;;		Unchanged: 0/0
  8576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8581 ;;Total ram usage:        0 bytes
  8582 ;; Hardware stack levels used:    1
  8583 ;; Hardware stack levels required when called:   15
  8584 ;; This function calls:
  8585 ;;		Nothing
  8586 ;; This function is called by:
  8587 ;;		_main
  8588 ;;		_esr_check
  8589 ;; This function uses a reentrant model
  8590 ;;
  8591                           
  8592                           	psect	text23
  8593  01BD86                     __ptext23:
  8594                           	opt callstack 0
  8595  01BD86                     _set_load_relay_two:
  8596                           	opt callstack 15
  8597                           
  8598                           ;mbmc.c: 129: void set_load_relay_two(_Bool mode);mbmc.c: 130: {;mbmc.c: 131:  LATDbits.
      +                          LATD5 = mode;
  8599                           ;stkvar	_mode @ sp[(0)+-1]
  8600                           
  8601                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8602                           ;incstack = 0
  8603  01BD86  0EFF               	movlw	-1
  8604  01BD88  B0E3               	btfsc	plusw1,0,c
  8605  01BD8A  D002               	bra	u9415
  8606  01BD8C  9ABD               	bcf	189,5,c	;volatile
  8607  01BD8E  D001               	bra	u9416
  8608  01BD90                     u9415:
  8609  01BD90  8ABD               	bsf	189,5,c	;volatile
  8610  01BD92                     u9416:
  8611                           
  8612                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8613  01BD92  52E5               	movf	postdec1,f,c
  8614  01BD94  0012               	return		;funcret
  8615  01BD96                     __end_of_set_load_relay_two:
  8616                           	opt callstack 0
  8617                           
  8618 ;; *************** function _set_load_relay_one *****************
  8619 ;; Defined at:
  8620 ;;		line 124 in file "mbmc.c"
  8621 ;; Parameters:    Size  Location     Type
  8622 ;;  mode            1  [STACK] _Bool 
  8623 ;; Auto vars:     Size  Location     Type
  8624 ;;		None
  8625 ;; Return value:  Size  Location     Type
  8626 ;;                  1  [STACK] void 
  8627 ;; Registers used:
  8628 ;;		wreg, fsr1l, fsr1h
  8629 ;; Tracked objects:
  8630 ;;		On entry : 0/0
  8631 ;;		On exit  : 0/0
  8632 ;;		Unchanged: 0/0
  8633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8638 ;;Total ram usage:        0 bytes
  8639 ;; Hardware stack levels used:    1
  8640 ;; Hardware stack levels required when called:   15
  8641 ;; This function calls:
  8642 ;;		Nothing
  8643 ;; This function is called by:
  8644 ;;		_main
  8645 ;;		_esr_check
  8646 ;; This function uses a reentrant model
  8647 ;;
  8648                           
  8649                           	psect	text24
  8650  01BD96                     __ptext24:
  8651                           	opt callstack 0
  8652  01BD96                     _set_load_relay_one:
  8653                           	opt callstack 15
  8654                           
  8655                           ;mbmc.c: 124: void set_load_relay_one(_Bool mode);mbmc.c: 125: {;mbmc.c: 126:  LATDbits.
      +                          LATD4 = mode;
  8656                           ;stkvar	_mode @ sp[(0)+-1]
  8657                           
  8658                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8659                           ;incstack = 0
  8660  01BD96  0EFF               	movlw	-1
  8661  01BD98  B0E3               	btfsc	plusw1,0,c
  8662  01BD9A  D002               	bra	u9405
  8663  01BD9C  98BD               	bcf	189,4,c	;volatile
  8664  01BD9E  D001               	bra	u9406
  8665  01BDA0                     u9405:
  8666  01BDA0  88BD               	bsf	189,4,c	;volatile
  8667  01BDA2                     u9406:
  8668                           
  8669                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8670  01BDA2  52E5               	movf	postdec1,f,c
  8671  01BDA4  0012               	return		;funcret
  8672  01BDA6                     __end_of_set_load_relay_one:
  8673                           	opt callstack 0
  8674                           
  8675 ;; *************** function _eaDogM_WriteCommand *****************
  8676 ;; Defined at:
  8677 ;;		line 175 in file "eadog.c"
  8678 ;; Parameters:    Size  Location     Type
  8679 ;;  cmd             1  [STACK] const unsigned char 
  8680 ;; Auto vars:     Size  Location     Type
  8681 ;;		None
  8682 ;; Return value:  Size  Location     Type
  8683 ;;                  1  [STACK] void 
  8684 ;; Registers used:
  8685 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8686 ;; Tracked objects:
  8687 ;;		On entry : 3F/3D
  8688 ;;		On exit  : 3F/0
  8689 ;;		Unchanged: 0/0
  8690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8695 ;;Total ram usage:        0 bytes
  8696 ;; Hardware stack levels used:    1
  8697 ;; Hardware stack levels required when called:   25
  8698 ;; This function calls:
  8699 ;;		_send_lcd_cmd_dma
  8700 ;; This function is called by:
  8701 ;;		_main
  8702 ;; This function uses a reentrant model
  8703 ;;
  8704                           
  8705                           	psect	text25
  8706  01BDC6                     __ptext25:
  8707                           	opt callstack 0
  8708  01BDC6                     _eaDogM_WriteCommand:
  8709                           	opt callstack 5
  8710                           
  8711                           ;eadog.c: 175: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 176: {;eadog.c: 177:
      +                            send_lcd_cmd_dma(cmd);
  8712                           ;stkvar	_cmd @ sp[(0)+-1]
  8713                           
  8714                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8715                           ;incstack = 0
  8716  01BDC6  0EFF               	movlw	-1
  8717  01BDC8  50E3               	movf	plusw1,w,c
  8718  01BDCA  6EE6               	movwf	postinc1,c
  8719  01BDCC  ECDE  F0D7         	call	_send_lcd_cmd_dma	;wreg free
  8720                           
  8721                           ; BSR set to: 0
  8722                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  8723  01BDD0  52E5               	movf	postdec1,f,c
  8724  01BDD2  0012               	return		;funcret
  8725  01BDD4                     __end_of_eaDogM_WriteCommand:
  8726                           	opt callstack 0
  8727                           
  8728 ;; *************** function _convert_adc_data *****************
  8729 ;; Defined at:
  8730 ;;		line 51 in file "mbmc.c"
  8731 ;; Parameters:    Size  Location     Type
  8732 ;;		None
  8733 ;; Auto vars:     Size  Location     Type
  8734 ;;  i               1  [STACK] unsigned char 
  8735 ;; Return value:  Size  Location     Type
  8736 ;;                  1  [STACK] void 
  8737 ;; Registers used:
  8738 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8739 ;; Tracked objects:
  8740 ;;		On entry : 0/1
  8741 ;;		On exit  : 0/0
  8742 ;;		Unchanged: 0/0
  8743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8748 ;;Total ram usage:        0 bytes
  8749 ;; Hardware stack levels used:    1
  8750 ;; Hardware stack levels required when called:   18
  8751 ;; This function calls:
  8752 ;;		_conv_raw_result
  8753 ;;		_lp_filter
  8754 ;; This function is called by:
  8755 ;;		_main
  8756 ;; This function uses a reentrant model
  8757 ;;
  8758                           
  8759                           	psect	text26
  8760  01A322                     __ptext26:
  8761                           	opt callstack 0
  8762  01A322                     _convert_adc_data:
  8763                           	opt callstack 0
  8764                           
  8765                           ; BSR set to: 0
  8766                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8767  01A322  52E6               	movf	postinc1,f,c
  8768                           
  8769                           ;mbmc.c: 53:  uint8_t i = 0;
  8770                           ;stkvar	_i @ sp[(-1)+0]
  8771                           
  8772                           ;incstack = 0
  8773  01A324  0EFF               	movlw	-1
  8774  01A326  6AE3               	clrf	plusw1,c
  8775  01A328                     l10831:
  8776                           
  8777                           ;mbmc.c: 56:   if (V.calib) {
  8778  01A328  0101               	movlb	1	; () banked
  8779  01A32A  51AC               	movf	(_V+172)& (0+255),w,b	;volatile
  8780  01A32C  B4D8               	btfsc	status,2,c
  8781  01A32E  D01B               	goto	l10835
  8782                           
  8783                           ; BSR set to: 1
  8784                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  8785  01A330  0E01               	movlw	1
  8786  01A332  6EE6               	movwf	postinc1,c
  8787                           
  8788                           ;stkvar	_i @ sp[(-2)+0]
  8789  01A334  0EFE               	movlw	-2
  8790  01A336  50E3               	movf	plusw1,w,c
  8791  01A338  6EE6               	movwf	postinc1,c
  8792  01A33A  0E01               	movlw	1
  8793  01A33C  6EE6               	movwf	postinc1,c
  8794                           
  8795                           ;stkvar	_i @ sp[(-4)+0]
  8796  01A33E  0EFC               	movlw	-4
  8797  01A340  50E3               	movf	plusw1,w,c
  8798  01A342  6EE6               	movwf	postinc1,c
  8799  01A344  EC0D  F0A8         	call	_conv_raw_result	;wreg free
  8800  01A348  0060  F007  FFE6   	movff	btemp,postinc1
  8801  01A34E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8802  01A354  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8803  01A35A  0060  F013  FFE6   	movff	btemp+3,postinc1
  8804  01A360  EC85  F0C2         	call	_lp_filter	;wreg free
  8805  01A364  D01A               	goto	L8
  8806  01A366                     l10835:
  8807                           
  8808                           ; BSR set to: 1
  8809                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  8810  01A366  0E00               	movlw	0
  8811  01A368  6EE6               	movwf	postinc1,c
  8812                           
  8813                           ;stkvar	_i @ sp[(-2)+0]
  8814  01A36A  0EFE               	movlw	-2
  8815  01A36C  50E3               	movf	plusw1,w,c
  8816  01A36E  6EE6               	movwf	postinc1,c
  8817  01A370  0E00               	movlw	0
  8818  01A372  6EE6               	movwf	postinc1,c
  8819                           
  8820                           ;stkvar	_i @ sp[(-4)+0]
  8821  01A374  0EFC               	movlw	-4
  8822  01A376  50E3               	movf	plusw1,w,c
  8823  01A378  6EE6               	movwf	postinc1,c
  8824  01A37A  EC0D  F0A8         	call	_conv_raw_result	;wreg free
  8825  01A37E  0060  F007  FFE6   	movff	btemp,postinc1
  8826  01A384  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8827  01A38A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8828  01A390  0060  F013  FFE6   	movff	btemp+3,postinc1
  8829  01A396  EC85  F0C2         	call	_lp_filter	;wreg free
  8830  01A39A                     L8:
  8831                           
  8832                           ;stkvar	_i @ sp[(-1)+0]
  8833  01A39A  0EFF               	movlw	-1
  8834  01A39C  50E3               	movf	plusw1,w,c
  8835  01A39E  0D04               	mullw	4
  8836  01A3A0  0EFF               	movlw	low _C
  8837  01A3A2  24F3               	addwf	243,w,c
  8838  01A3A4  6ED9               	movwf	fsr2l,c
  8839  01A3A6  0E06               	movlw	high _C
  8840  01A3A8  20F4               	addwfc	prodh,w,c
  8841  01A3AA  6EDA               	movwf	fsr2h,c
  8842  01A3AC  0060  F007  FFDE   	movff	btemp,postinc2
  8843  01A3B2  0060  F00B  FFDE   	movff	btemp+1,postinc2
  8844  01A3B8  0060  F00F  FFDE   	movff	btemp+2,postinc2
  8845  01A3BE  0060  F013  FFDE   	movff	btemp+3,postinc2
  8846                           
  8847                           ;mbmc.c: 61:  } while (++i < 16);
  8848                           ;stkvar	_i @ sp[(-1)+0]
  8849  01A3C4  0EFF               	movlw	-1
  8850  01A3C6  2AE3               	incf	plusw1,f,c
  8851  01A3C8  0EFF               	movlw	-1
  8852  01A3CA  006F FF8C  F001    	movff	plusw1,btemp
  8853  01A3D0  0E0F               	movlw	15
  8854  01A3D2  6401               	cpfsgt	btemp^0,c
  8855  01A3D4  D7A9               	goto	l10831
  8856                           
  8857                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  8858  01A3D6  52E5               	movf	postdec1,f,c
  8859  01A3D8  0012               	return		;funcret
  8860  01A3DA                     __end_of_convert_adc_data:
  8861                           	opt callstack 0
  8862                           
  8863 ;; *************** function _clear_hid_pflags *****************
  8864 ;; Defined at:
  8865 ;;		line 51 in file "hid.c"
  8866 ;; Parameters:    Size  Location     Type
  8867 ;;  h               2  [STACK] PTR struct H_data
  8868 ;;		 -> H(7), 
  8869 ;; Auto vars:     Size  Location     Type
  8870 ;;		None
  8871 ;; Return value:  Size  Location     Type
  8872 ;;                  1  [STACK] void 
  8873 ;; Registers used:
  8874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
  8875 ;; Tracked objects:
  8876 ;;		On entry : 3E/0
  8877 ;;		On exit  : 0/0
  8878 ;;		Unchanged: 0/0
  8879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8884 ;;Total ram usage:        0 bytes
  8885 ;; Hardware stack levels used:    1
  8886 ;; Hardware stack levels required when called:   15
  8887 ;; This function calls:
  8888 ;;		Nothing
  8889 ;; This function is called by:
  8890 ;;		_main
  8891 ;; This function uses a reentrant model
  8892 ;;
  8893                           
  8894                           	psect	text27
  8895  01B26A                     __ptext27:
  8896                           	opt callstack 0
  8897  01B26A                     _clear_hid_pflags:
  8898                           	opt callstack 15
  8899                           
  8900                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  8901                           ;stkvar	_h @ sp[(0)+-2]
  8902                           
  8903                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8904                           ;incstack = 0
  8905  01B26A  0EFE               	movlw	-2
  8906  01B26C  006F FF8C  F00B    	movff	plusw1,btemp+10
  8907  01B272  0EFF               	movlw	-1
  8908  01B274  006F FF8C  F00C    	movff	plusw1,btemp+11
  8909  01B27A  0E03               	movlw	3
  8910  01B27C  240B               	addwf	(btemp+10)^0,w,c
  8911  01B27E  6ED9               	movwf	fsr2l,c
  8912  01B280  0E00               	movlw	0
  8913  01B282  200C               	addwfc	(btemp+11)^0,w,c
  8914  01B284  6EDA               	movwf	fsr2h,c
  8915  01B286  0E00               	movlw	0
  8916  01B288  6EDF               	movwf	indf2,c
  8917                           
  8918                           ;hid.c: 54:  h->enter_p = SW_OFF;
  8919                           ;stkvar	_h @ sp[(0)+-2]
  8920  01B28A  0EFE               	movlw	-2
  8921  01B28C  006F FF8C  F00B    	movff	plusw1,btemp+10
  8922  01B292  0EFF               	movlw	-1
  8923  01B294  006F FF8C  F00C    	movff	plusw1,btemp+11
  8924  01B29A  0E05               	movlw	5
  8925  01B29C  240B               	addwf	(btemp+10)^0,w,c
  8926  01B29E  6ED9               	movwf	fsr2l,c
  8927  01B2A0  0E00               	movlw	0
  8928  01B2A2  200C               	addwfc	(btemp+11)^0,w,c
  8929  01B2A4  6EDA               	movwf	fsr2h,c
  8930  01B2A6  0E00               	movlw	0
  8931  01B2A8  6EDF               	movwf	indf2,c
  8932                           
  8933                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
  8934  01B2AA  52E5               	movf	postdec1,f,c
  8935  01B2AC  52E5               	movf	postdec1,f,c
  8936  01B2AE  0012               	return		;funcret
  8937  01B2B0                     __end_of_clear_hid_pflags:
  8938                           	opt callstack 0
  8939                           
  8940 ;; *************** function _check_help *****************
  8941 ;; Defined at:
  8942 ;;		line 40 in file "mconfig.c"
  8943 ;; Parameters:    Size  Location     Type
  8944 ;;  flipper         1  [STACK] const _Bool 
  8945 ;; Auto vars:     Size  Location     Type
  8946 ;;  estatus         1    0        _Bool 
  8947 ;; Return value:  Size  Location     Type
  8948 ;;                  1  [STACK] _Bool 
  8949 ;; Registers used:
  8950 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8951 ;; Tracked objects:
  8952 ;;		On entry : 3F/1
  8953 ;;		On exit  : 0/0
  8954 ;;		Unchanged: 0/0
  8955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8960 ;;Total ram usage:        0 bytes
  8961 ;; Hardware stack levels used:    1
  8962 ;; Hardware stack levels required when called:   27
  8963 ;; This function calls:
  8964 ;;		_StartTimer
  8965 ;;		_TimerDone
  8966 ;;		_display_help
  8967 ;;		_display_info
  8968 ;;		_get_vterm_ptr
  8969 ;;		_help_button
  8970 ;;		_mode_lamp_bright
  8971 ;;		_mode_lamp_dim
  8972 ;;		_set_display_info
  8973 ;;		_set_temp_display_help
  8974 ;;		_set_vterm
  8975 ;;		_sprintf
  8976 ;;		_update_lcd
  8977 ;;		_vterm_dump
  8978 ;; This function is called by:
  8979 ;;		_main
  8980 ;; This function uses a reentrant model
  8981 ;;
  8982                           
  8983                           	psect	text28
  8984  017F18                     __ptext28:
  8985                           	opt callstack 0
  8986  017F18                     _check_help:
  8987                           	opt callstack 3
  8988                           
  8989                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  8990                           
  8991                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8992                           ;incstack = 0
  8993  017F18  EC9C  F0DA         	call	_help_button	;wreg free
  8994  017F1C  5001               	movf	btemp^0,w,c
  8995  017F1E  B4D8               	btfsc	status,2,c
  8996  017F20  D0D0               	goto	l12879
  8997  017F22  EC2B  F0DF         	call	_display_info	;wreg free
  8998  017F26  0401               	decf	btemp^0,w,c
  8999  017F28  B4D8               	btfsc	status,2,c
  9000  017F2A  D0CB               	goto	l12879
  9001                           
  9002                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  9003  017F2C  0EDC               	movlw	220
  9004  017F2E  6EE6               	movwf	postinc1,c
  9005  017F30  0E05               	movlw	5
  9006  017F32  6EE6               	movwf	postinc1,c
  9007  017F34  0E0B               	movlw	11
  9008  017F36  6EE6               	movwf	postinc1,c
  9009  017F38  ECE1  F0D9         	call	_StartTimer	;wreg free
  9010                           
  9011                           ;mconfig.c: 48:   if (V.debug)
  9012  017F3C  0101               	movlb	1	; () banked
  9013  017F3E  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  9014                           
  9015                           ; BSR set to: 1
  9016                           ;mconfig.c: 49:    vterm_dump();
  9017  017F40  ECB4  F0C9         	call	_vterm_dump	;wreg free
  9018                           
  9019                           ;mconfig.c: 51:   set_vterm(1);
  9020  017F44  0E01               	movlw	1
  9021  017F46  6EE6               	movwf	postinc1,c
  9022  017F48  EC21  F0DE         	call	_set_vterm	;wreg free
  9023                           
  9024                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  9025  017F4C  EC2B  F0DF         	call	_display_info	;wreg free
  9026  017F50  5001               	movf	btemp^0,w,c
  9027  017F52  6EE6               	movwf	postinc1,c
  9028  017F54  ECD3  F0DE         	call	_set_temp_display_help	;wreg free
  9029                           
  9030                           ; BSR set to: 1
  9031                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  9032  017F58  0E01               	movlw	1
  9033  017F5A  6EE6               	movwf	postinc1,c
  9034  017F5C  EC30  F0DE         	call	_set_display_info	;wreg free
  9035                           
  9036                           ;mconfig.c: 54:   if (flipper) {
  9037                           ;stkvar	_flipper @ sp[(0)+-1]
  9038  017F60  0EFF               	movlw	-1
  9039  017F62  50E3               	movf	plusw1,w,c
  9040  017F64  B4D8               	btfsc	status,2,c
  9041  017F66  D019               	goto	l12865
  9042                           
  9043                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  9044  017F68  0EB1               	movlw	low STR_46
  9045  017F6A  6EE6               	movwf	postinc1,c
  9046  017F6C  0EFF               	movlw	high STR_46
  9047  017F6E  6EE6               	movwf	postinc1,c
  9048  017F70  0E27               	movlw	low STR_48
  9049  017F72  6EE6               	movwf	postinc1,c
  9050  017F74  0EFE               	movlw	high STR_48
  9051  017F76  6EE6               	movwf	postinc1,c
  9052  017F78  0E01               	movlw	1
  9053  017F7A  6EE6               	movwf	postinc1,c
  9054  017F7C  0E00               	movlw	0
  9055  017F7E  6EE6               	movwf	postinc1,c
  9056  017F80  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  9057  017F84  0060  F007  FFE6   	movff	btemp,postinc1
  9058  017F8A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9059  017F90  0E06               	movlw	6
  9060  017F92  6EE6               	movwf	postinc1,c
  9061  017F94  EC92  F0CD         	call	_sprintf	;wreg free
  9062                           
  9063                           ;mconfig.c: 56:   } else {
  9064  017F98  D018               	goto	l1674
  9065  017F9A                     l12865:
  9066                           
  9067                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  9068  017F9A  0EC7               	movlw	low STR_47
  9069  017F9C  6EE6               	movwf	postinc1,c
  9070  017F9E  0EFF               	movlw	high STR_47
  9071  017FA0  6EE6               	movwf	postinc1,c
  9072  017FA2  0E27               	movlw	low STR_48
  9073  017FA4  6EE6               	movwf	postinc1,c
  9074  017FA6  0EFE               	movlw	high STR_48
  9075  017FA8  6EE6               	movwf	postinc1,c
  9076  017FAA  0E01               	movlw	1
  9077  017FAC  6EE6               	movwf	postinc1,c
  9078  017FAE  0E00               	movlw	0
  9079  017FB0  6EE6               	movwf	postinc1,c
  9080  017FB2  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  9081  017FB6  0060  F007  FFE6   	movff	btemp,postinc1
  9082  017FBC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9083  017FC2  0E06               	movlw	6
  9084  017FC4  6EE6               	movwf	postinc1,c
  9085  017FC6  EC92  F0CD         	call	_sprintf	;wreg free
  9086  017FCA                     l1674:
  9087                           
  9088                           ; BSR set to: 0
  9089                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  9090  017FCA  0101               	movlb	1	; () banked
  9091  017FCC  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  9092  017FCE  32E8               	rrcf	wreg,f,c
  9093  017FD0  32E8               	rrcf	wreg,f,c
  9094  017FD2  0B03               	andlw	3
  9095  017FD4  0D24               	mullw	36
  9096  017FD6  0E12               	movlw	18
  9097  017FD8  26F3               	addwf	243,f,c
  9098  017FDA  0E00               	movlw	0
  9099  017FDC  22F4               	addwfc	244,f,c
  9100  017FDE  0E37               	movlw	low _T
  9101  017FE0  6E0B               	movwf	(btemp+10)^0,c
  9102  017FE2  0EFB               	movlw	high _T
  9103  017FE4  6E0C               	movwf	(btemp+11)^0,c
  9104  017FE6  50F3               	movf	243,w,c
  9105  017FE8  260B               	addwf	(btemp+10)^0,f,c
  9106  017FEA  50F4               	movf	244,w,c
  9107  017FEC  220C               	addwfc	(btemp+11)^0,f,c
  9108  017FEE  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9109  017FF4  0060  F033  FFE6   	movff	btemp+11,postinc1
  9110  017FFA  0EBD               	movlw	low STR_50
  9111  017FFC  6EE6               	movwf	postinc1,c
  9112  017FFE  0EFF               	movlw	high STR_50
  9113  018000  6EE6               	movwf	postinc1,c
  9114  018002  0E01               	movlw	1
  9115  018004  6EE6               	movwf	postinc1,c
  9116  018006  0E01               	movlw	1
  9117  018008  6EE6               	movwf	postinc1,c
  9118  01800A  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  9119  01800E  0060  F007  FFE6   	movff	btemp,postinc1
  9120  018014  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9121  01801A  0E06               	movlw	6
  9122  01801C  6EE6               	movwf	postinc1,c
  9123  01801E  EC92  F0CD         	call	_sprintf	;wreg free
  9124                           
  9125                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  9126  018022  0101               	movlb	1	; () banked
  9127  018024  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  9128  018026  32E8               	rrcf	wreg,f,c
  9129  018028  32E8               	rrcf	wreg,f,c
  9130  01802A  0B03               	andlw	3
  9131  01802C  0D24               	mullw	36
  9132  01802E  0E37               	movlw	low _T
  9133  018030  6E0B               	movwf	(btemp+10)^0,c
  9134  018032  0EFB               	movlw	high _T
  9135  018034  6E0C               	movwf	(btemp+11)^0,c
  9136  018036  50F3               	movf	243,w,c
  9137  018038  260B               	addwf	(btemp+10)^0,f,c
  9138  01803A  50F4               	movf	244,w,c
  9139  01803C  220C               	addwfc	(btemp+11)^0,f,c
  9140  01803E  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9141  018044  0060  F033  FFE6   	movff	btemp+11,postinc1
  9142  01804A  0EBD               	movlw	low STR_50
  9143  01804C  6EE6               	movwf	postinc1,c
  9144  01804E  0EFF               	movlw	high STR_50
  9145  018050  6EE6               	movwf	postinc1,c
  9146  018052  0E01               	movlw	1
  9147  018054  6EE6               	movwf	postinc1,c
  9148  018056  0E02               	movlw	2
  9149  018058  6EE6               	movwf	postinc1,c
  9150  01805A  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  9151  01805E  0060  F007  FFE6   	movff	btemp,postinc1
  9152  018064  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9153  01806A  0E06               	movlw	6
  9154  01806C  6EE6               	movwf	postinc1,c
  9155  01806E  EC92  F0CD         	call	_sprintf	;wreg free
  9156                           
  9157                           ; BSR set to: 0
  9158                           ;mconfig.c: 61:   V.help_id++;
  9159  018072  EE20  F19B         	lfsr	2,_V+155	;volatile
  9160  018076  38DF               	swapf	223,w,c
  9161  018078  6E0C               	movwf	(btemp+11)^0,c
  9162  01807A  320C               	rrcf	(btemp+11)^0,f,c
  9163  01807C  300C               	rrcf	(btemp+11)^0,w,c
  9164  01807E  0B03               	andlw	3
  9165  018080  6E0C               	movwf	(btemp+11)^0,c
  9166  018082  2A0C               	incf	(btemp+11)^0,f,c
  9167  018084  3A0C               	swapf	(btemp+11)^0,f,c
  9168  018086  360C               	rlcf	(btemp+11)^0,f,c
  9169  018088  360C               	rlcf	(btemp+11)^0,f,c
  9170  01808A  50DF               	movf	223,w,c
  9171  01808C  180C               	xorwf	(btemp+11)^0,w,c
  9172  01808E  0B3F               	andlw	-193
  9173  018090  180C               	xorwf	(btemp+11)^0,w,c
  9174  018092  6EDF               	movwf	223,c
  9175                           
  9176                           ; BSR set to: 0
  9177                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  9178  018094  0EB8               	movlw	184
  9179  018096  6EE6               	movwf	postinc1,c
  9180  018098  0E0B               	movlw	11
  9181  01809A  6EE6               	movwf	postinc1,c
  9182  01809C  0E09               	movlw	9
  9183  01809E  6EE6               	movwf	postinc1,c
  9184  0180A0  ECE1  F0D9         	call	_StartTimer	;wreg free
  9185                           
  9186                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  9187  0180A4  0EB8               	movlw	184
  9188  0180A6  6EE6               	movwf	postinc1,c
  9189  0180A8  0E0B               	movlw	11
  9190  0180AA  6EE6               	movwf	postinc1,c
  9191  0180AC  0E07               	movlw	7
  9192  0180AE  6EE6               	movwf	postinc1,c
  9193  0180B0  ECE1  F0D9         	call	_StartTimer	;wreg free
  9194                           
  9195                           ;mconfig.c: 64:   mode_lamp_bright();
  9196  0180B4  ECEA  F0DE         	call	_mode_lamp_bright	;wreg free
  9197                           
  9198                           ;mconfig.c: 65:   update_lcd(1);
  9199  0180B8  0E01               	movlw	1
  9200  0180BA  6EE6               	movwf	postinc1,c
  9201  0180BC  EC0A  F0CD         	call	_update_lcd	;wreg free
  9202                           
  9203                           ;mconfig.c: 67:  } else {
  9204  0180C0  D032               	goto	l1675
  9205  0180C2                     l12879:
  9206                           
  9207                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  9208  0180C2  0E09               	movlw	9
  9209  0180C4  6EE6               	movwf	postinc1,c
  9210  0180C6  EC5D  F0DC         	call	_TimerDone	;wreg free
  9211  0180CA  5001               	movf	btemp^0,w,c
  9212  0180CC  B4D8               	btfsc	status,2,c
  9213  0180CE  D02B               	goto	l1675
  9214                           
  9215                           ;mconfig.c: 69:    set_vterm(0);
  9216  0180D0  0E00               	movlw	0
  9217  0180D2  6EE6               	movwf	postinc1,c
  9218  0180D4  EC21  F0DE         	call	_set_vterm	;wreg free
  9219                           
  9220                           ;mconfig.c: 70:    V.help = 0;
  9221  0180D8  0101               	movlb	1	; () banked
  9222  0180DA  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  9223                           
  9224                           ; BSR set to: 1
  9225                           ;mconfig.c: 71:    set_display_info(display_help());
  9226  0180DC  EC2F  F0DF         	call	_display_help	;wreg free
  9227  0180E0  5001               	movf	btemp^0,w,c
  9228  0180E2  6EE6               	movwf	postinc1,c
  9229  0180E4  EC30  F0DE         	call	_set_display_info	;wreg free
  9230                           
  9231                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  9232  0180E8  0060  F657  FFE6   	movff	_V+149,postinc1
  9233  0180EE  0060  F65B  FFE6   	movff	_V+150,postinc1
  9234  0180F4  EC77  F0DE         	call	_mode_lamp_dim	;wreg free
  9235                           
  9236                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  9237  0180F8  0E0B               	movlw	11
  9238  0180FA  6EE6               	movwf	postinc1,c
  9239  0180FC  EC5D  F0DC         	call	_TimerDone	;wreg free
  9240  018100  5001               	movf	btemp^0,w,c
  9241  018102  B4D8               	btfsc	status,2,c
  9242  018104  D010               	goto	l1675
  9243                           
  9244                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  9245  018106  0101               	movlb	1	; () banked
  9246  018108  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  9247  01810A  A4D8               	btfss	status,2,c
  9248  01810C  D002               	goto	u12470
  9249  01810E  0E01               	movlw	1
  9250  018110  D001               	goto	u12480
  9251  018112                     u12470:
  9252  018112  0E00               	movlw	0
  9253  018114                     u12480:
  9254  018114  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
  9255                           
  9256                           ; BSR set to: 1
  9257                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  9258  018116  0EDC               	movlw	220
  9259  018118  6EE6               	movwf	postinc1,c
  9260  01811A  0E05               	movlw	5
  9261  01811C  6EE6               	movwf	postinc1,c
  9262  01811E  0E0B               	movlw	11
  9263  018120  6EE6               	movwf	postinc1,c
  9264  018122  ECE1  F0D9         	call	_StartTimer	;wreg free
  9265  018126                     l1675:
  9266                           
  9267                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  9268  018126  52E5               	movf	postdec1,f,c
  9269  018128  0012               	return		;funcret
  9270  01812A                     __end_of_check_help:
  9271                           	opt callstack 0
  9272                           
  9273 ;; *************** function _vterm_dump *****************
  9274 ;; Defined at:
  9275 ;;		line 121 in file "mconfig.c"
  9276 ;; Parameters:    Size  Location     Type
  9277 ;;		None
  9278 ;; Auto vars:     Size  Location     Type
  9279 ;;		None
  9280 ;; Return value:  Size  Location     Type
  9281 ;;                  1  [STACK] void 
  9282 ;; Registers used:
  9283 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9284 ;; Tracked objects:
  9285 ;;		On entry : 3F/1
  9286 ;;		On exit  : 0/0
  9287 ;;		Unchanged: 0/0
  9288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9293 ;;Total ram usage:        0 bytes
  9294 ;; Hardware stack levels used:    1
  9295 ;; Hardware stack levels required when called:   26
  9296 ;; This function calls:
  9297 ;;		_WaitMs
  9298 ;;		_eaDogM_WriteStringAtPos
  9299 ;;		_get_vterm_ptr
  9300 ;;		_sprintf
  9301 ;;		_wait_lcd_done
  9302 ;; This function is called by:
  9303 ;;		_check_help
  9304 ;; This function uses a reentrant model
  9305 ;;
  9306                           
  9307                           	psect	text29
  9308  019368                     __ptext29:
  9309                           	opt callstack 0
  9310  019368                     _vterm_dump:
  9311                           	opt callstack 3
  9312                           
  9313                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  9314                           
  9315                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9316                           ;incstack = 0
  9317  019368  0E01               	movlw	1
  9318  01936A  6EE6               	movwf	postinc1,c
  9319  01936C  0E00               	movlw	0
  9320  01936E  6EE6               	movwf	postinc1,c
  9321  019370  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  9322  019374  0060  F007  FFE6   	movff	btemp,postinc1
  9323  01937A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9324  019380  0E00               	movlw	0
  9325  019382  6EE6               	movwf	postinc1,c
  9326  019384  0E00               	movlw	0
  9327  019386  6EE6               	movwf	postinc1,c
  9328  019388  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  9329  01938C  0060  F007  FFE6   	movff	btemp,postinc1
  9330  019392  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9331  019398  0E93               	movlw	low STR_52
  9332  01939A  6EE6               	movwf	postinc1,c
  9333  01939C  0EFF               	movlw	high STR_52
  9334  01939E  6EE6               	movwf	postinc1,c
  9335  0193A0  0E01               	movlw	low (_V+1)
  9336  0193A2  6EE6               	movwf	postinc1,c
  9337  0193A4  0E01               	movlw	high (_V+1)
  9338  0193A6  6EE6               	movwf	postinc1,c
  9339  0193A8  0E08               	movlw	8
  9340  0193AA  6EE6               	movwf	postinc1,c
  9341  0193AC  EC92  F0CD         	call	_sprintf	;wreg free
  9342                           
  9343                           ; BSR set to: 0
  9344                           ;mconfig.c: 124:  wait_lcd_done();
  9345  0193B0  EC4E  F0DE         	call	_wait_lcd_done	;wreg free
  9346                           
  9347                           ; BSR set to: 0
  9348                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  9349  0193B4  0E01               	movlw	low (_V+1)
  9350  0193B6  6EE6               	movwf	postinc1,c
  9351  0193B8  0E01               	movlw	high (_V+1)
  9352  0193BA  6EE6               	movwf	postinc1,c
  9353  0193BC  0E00               	movlw	0
  9354  0193BE  6EE6               	movwf	postinc1,c
  9355  0193C0  0E00               	movlw	0
  9356  0193C2  6EE6               	movwf	postinc1,c
  9357  0193C4  ECEF  F0DA         	call	_eaDogM_WriteStringAtPos	;wreg free
  9358                           
  9359                           ; BSR set to: 59
  9360                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  9361  0193C8  0E01               	movlw	1
  9362  0193CA  6EE6               	movwf	postinc1,c
  9363  0193CC  0E01               	movlw	1
  9364  0193CE  6EE6               	movwf	postinc1,c
  9365  0193D0  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  9366  0193D4  0060  F007  FFE6   	movff	btemp,postinc1
  9367  0193DA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9368  0193E0  0E00               	movlw	0
  9369  0193E2  6EE6               	movwf	postinc1,c
  9370  0193E4  0E01               	movlw	1
  9371  0193E6  6EE6               	movwf	postinc1,c
  9372  0193E8  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  9373  0193EC  0060  F007  FFE6   	movff	btemp,postinc1
  9374  0193F2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9375  0193F8  0E93               	movlw	low STR_52
  9376  0193FA  6EE6               	movwf	postinc1,c
  9377  0193FC  0EFF               	movlw	high STR_52
  9378  0193FE  6EE6               	movwf	postinc1,c
  9379  019400  0E01               	movlw	low (_V+1)
  9380  019402  6EE6               	movwf	postinc1,c
  9381  019404  0E01               	movlw	high (_V+1)
  9382  019406  6EE6               	movwf	postinc1,c
  9383  019408  0E08               	movlw	8
  9384  01940A  6EE6               	movwf	postinc1,c
  9385  01940C  EC92  F0CD         	call	_sprintf	;wreg free
  9386                           
  9387                           ; BSR set to: 0
  9388                           ;mconfig.c: 127:  wait_lcd_done();
  9389  019410  EC4E  F0DE         	call	_wait_lcd_done	;wreg free
  9390                           
  9391                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  9392  019414  0E01               	movlw	low (_V+1)
  9393  019416  6EE6               	movwf	postinc1,c
  9394  019418  0E01               	movlw	high (_V+1)
  9395  01941A  6EE6               	movwf	postinc1,c
  9396  01941C  0E00               	movlw	0
  9397  01941E  6EE6               	movwf	postinc1,c
  9398  019420  0E01               	movlw	1
  9399  019422  6EE6               	movwf	postinc1,c
  9400  019424  ECEF  F0DA         	call	_eaDogM_WriteStringAtPos	;wreg free
  9401                           
  9402                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  9403  019428  0E01               	movlw	1
  9404  01942A  6EE6               	movwf	postinc1,c
  9405  01942C  0E02               	movlw	2
  9406  01942E  6EE6               	movwf	postinc1,c
  9407  019430  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  9408  019434  0060  F007  FFE6   	movff	btemp,postinc1
  9409  01943A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9410  019440  0E00               	movlw	0
  9411  019442  6EE6               	movwf	postinc1,c
  9412  019444  0E02               	movlw	2
  9413  019446  6EE6               	movwf	postinc1,c
  9414  019448  EC9E  F0DB         	call	_get_vterm_ptr	;wreg free
  9415  01944C  0060  F007  FFE6   	movff	btemp,postinc1
  9416  019452  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9417  019458  0E93               	movlw	low STR_52
  9418  01945A  6EE6               	movwf	postinc1,c
  9419  01945C  0EFF               	movlw	high STR_52
  9420  01945E  6EE6               	movwf	postinc1,c
  9421  019460  0E01               	movlw	low (_V+1)
  9422  019462  6EE6               	movwf	postinc1,c
  9423  019464  0E01               	movlw	high (_V+1)
  9424  019466  6EE6               	movwf	postinc1,c
  9425  019468  0E08               	movlw	8
  9426  01946A  6EE6               	movwf	postinc1,c
  9427  01946C  EC92  F0CD         	call	_sprintf	;wreg free
  9428                           
  9429                           ; BSR set to: 0
  9430                           ;mconfig.c: 130:  wait_lcd_done();
  9431  019470  EC4E  F0DE         	call	_wait_lcd_done	;wreg free
  9432                           
  9433                           ; BSR set to: 0
  9434                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  9435  019474  0E01               	movlw	low (_V+1)
  9436  019476  6EE6               	movwf	postinc1,c
  9437  019478  0E01               	movlw	high (_V+1)
  9438  01947A  6EE6               	movwf	postinc1,c
  9439  01947C  0E00               	movlw	0
  9440  01947E  6EE6               	movwf	postinc1,c
  9441  019480  0E02               	movlw	2
  9442  019482  6EE6               	movwf	postinc1,c
  9443  019484  ECEF  F0DA         	call	_eaDogM_WriteStringAtPos	;wreg free
  9444                           
  9445                           ; BSR set to: 59
  9446                           ;mconfig.c: 132:  WaitMs(3000);
  9447  019488  0EB8               	movlw	184
  9448  01948A  6EE6               	movwf	postinc1,c
  9449  01948C  0E0B               	movlw	11
  9450  01948E  6EE6               	movwf	postinc1,c
  9451  019490  ECD4  F0DA         	call	_WaitMs	;wreg free
  9452                           
  9453                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  9454  019494  0012               	return		;funcret
  9455  019496                     __end_of_vterm_dump:
  9456                           	opt callstack 0
  9457                           
  9458 ;; *************** function _sprintf *****************
  9459 ;; Defined at:
  9460 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  9461 ;; Parameters:    Size  Location     Type
  9462 ;;  s               2  [STACK] PTR unsigned char 
  9463 ;;		 -> D.lcd(480), D(482), port_data(512), V(191), 
  9464 ;;  fmt             2  [STACK] PTR const unsigned char 
  9465 ;;		 -> STR_65(103), STR_63(3), STR_62(3), STR_61(19), 
  9466 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
  9467 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
  9468 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
  9469 ;;		 -> STR_48(19), STR_42(17), STR_41(16), STR_40(16), 
  9470 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
  9471 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
  9472 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
  9473 ;;		 -> STR_27(19), STR_26(19), STR_25(20), STR_24(19), 
  9474 ;;		 -> STR_23(19), STR_22(20), STR_21(17), STR_20(16), 
  9475 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
  9476 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
  9477 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
  9478 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
  9479 ;;		 -> STR_2(15), STR_1(17), 
  9480 ;; Auto vars:     Size  Location     Type
  9481 ;;  f               6  [STACK] struct _IO_FILE
  9482 ;;  ap              2  [STACK] PTR void [1]
  9483 ;;		 -> ?_printf(2), ?_sprintf(2), 
  9484 ;;  ret             2    0        int 
  9485 ;; Return value:  Size  Location     Type
  9486 ;;                  2  [STACK] int 
  9487 ;; Registers used:
  9488 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9489 ;; Tracked objects:
  9490 ;;		On entry : 0/2
  9491 ;;		On exit  : 3F/0
  9492 ;;		Unchanged: 0/0
  9493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9498 ;;Total ram usage:        0 bytes
  9499 ;; Hardware stack levels used:    1
  9500 ;; Hardware stack levels required when called:   23
  9501 ;; This function calls:
  9502 ;;		_vfprintf
  9503 ;; This function is called by:
  9504 ;;		_main
  9505 ;;		_check_help
  9506 ;;		_vterm_dump
  9507 ;;		_calc_bsoc
  9508 ;; This function uses a reentrant model
  9509 ;;
  9510                           
  9511                           	psect	text30
  9512  019B24                     __ptext30:
  9513                           	opt callstack 0
  9514  019B24                     _sprintf:
  9515                           	opt callstack 0
  9516                           
  9517                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 74, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9518  019B24  0E08               	movlw	8
  9519  019B26  26E1               	addwf	fsr1l,f,c
  9520  019B28  0E00               	movlw	0
  9521  019B2A  22E2               	addwfc	fsr1h,f,c
  9522                           
  9523                           ;incstack = 0
  9524 ;; hardware stack exceeded
  9525  019B2C  0EFE               	movlw	254
  9526  019B2E  6E0B               	movwf	(btemp+10)^0,c
  9527  019B30  0EFF               	movlw	255
  9528  019B32  6E0C               	movwf	(btemp+11)^0,c
  9529                           
  9530                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  9531  019B34  0EF5               	movlw	245
  9532  019B36  24E1               	addwf	fsr1l,w,c
  9533  019B38  6E09               	movwf	(btemp+8)^0,c
  9534  019B3A  0EFF               	movlw	255
  9535  019B3C  20E2               	addwfc	fsr1h,w,c
  9536  019B3E  6E0A               	movwf	(btemp+9)^0,c
  9537  019B40  500B               	movf	(btemp+10)^0,w,c
  9538  019B42  2609               	addwf	(btemp+8)^0,f,c
  9539  019B44  500C               	movf	(btemp+11)^0,w,c
  9540  019B46  220A               	addwfc	(btemp+9)^0,f,c
  9541                           
  9542                           ;stkvar	_ap @ sp[(-8)+6]
  9543  019B48  0EFF               	movlw	-1
  9544  019B4A  0060  F02B  FFE3   	movff	btemp+9,plusw1
  9545  019B50  0EFE               	movlw	-2
  9546  019B52  0060  F027  FFE3   	movff	btemp+8,plusw1
  9547                           
  9548                           ;stkvar	_s @ sp[(-8)+-3]
  9549  019B58  0EF5               	movlw	-11
  9550  019B5A  006F FF8C  F00B    	movff	plusw1,btemp+10
  9551  019B60  0EF6               	movlw	-10
  9552  019B62  006F FF8C  F00C    	movff	plusw1,btemp+11
  9553                           
  9554                           ;stkvar	_f @ sp[(-8)+0]
  9555  019B68  0EF9               	movlw	-7
  9556  019B6A  0060  F033  FFE3   	movff	btemp+11,plusw1
  9557  019B70  0EF8               	movlw	-8
  9558  019B72  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9559                           
  9560                           ;stkvar	_f @ sp[(-8)+0]
  9561  019B78  0EFA               	movlw	250
  9562  019B7A  24E1               	addwf	fsr1l,w,c
  9563  019B7C  6ED9               	movwf	fsr2l,c
  9564  019B7E  0EFF               	movlw	255
  9565  019B80  20E2               	addwfc	fsr1h,w,c
  9566  019B82  6EDA               	movwf	fsr2h,c
  9567  019B84  0E00               	movlw	0
  9568  019B86  6EDE               	movwf	postinc2,c
  9569  019B88  0E00               	movlw	0
  9570  019B8A  6EDD               	movwf	postdec2,c
  9571                           
  9572                           ;stkvar	_f @ sp[(-8)+0]
  9573  019B8C  0EFC               	movlw	252
  9574  019B8E  24E1               	addwf	fsr1l,w,c
  9575  019B90  6ED9               	movwf	fsr2l,c
  9576  019B92  0EFF               	movlw	255
  9577  019B94  20E2               	addwfc	fsr1h,w,c
  9578  019B96  6EDA               	movwf	fsr2h,c
  9579  019B98  0E00               	movlw	0
  9580  019B9A  6EDE               	movwf	postinc2,c
  9581  019B9C  0E00               	movlw	0
  9582  019B9E  6EDD               	movwf	postdec2,c
  9583                           
  9584                           ;stkvar	_ap @ sp[(-8)+6]
  9585  019BA0  0EFE               	movlw	254
  9586  019BA2  24E1               	addwf	fsr1l,w,c
  9587  019BA4  6E01               	movwf	btemp^0,c
  9588  019BA6  0EFF               	movlw	255
  9589  019BA8  20E2               	addwfc	fsr1h,w,c
  9590  019BAA  6E02               	movwf	(btemp+1)^0,c
  9591  019BAC  0060  F007  FFE6   	movff	btemp,postinc1
  9592  019BB2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9593                           
  9594                           ;stkvar	_fmt @ sp[(-10)+-5]
  9595  019BB8  0EF1               	movlw	-15
  9596  019BBA  006F FF8F FFE6     	movff	plusw1,postinc1
  9597  019BC0  006F FF8F FFE6     	movff	plusw1,postinc1
  9598                           
  9599                           ;stkvar	_f @ sp[(-12)+0]
  9600  019BC6  0EF4               	movlw	244
  9601  019BC8  24E1               	addwf	fsr1l,w,c
  9602  019BCA  6E01               	movwf	btemp^0,c
  9603  019BCC  0EFF               	movlw	255
  9604  019BCE  20E2               	addwfc	fsr1h,w,c
  9605  019BD0  6E02               	movwf	(btemp+1)^0,c
  9606  019BD2  0060  F007  FFE6   	movff	btemp,postinc1
  9607  019BD8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9608  019BDE  EC44  F0D2         	call	_vfprintf	;wreg free
  9609                           
  9610                           ; BSR set to: 0
  9611                           ;stkvar	_f @ sp[(-8)+0]
  9612  019BE2  0EFA               	movlw	250
  9613  019BE4  24E1               	addwf	fsr1l,w,c
  9614  019BE6  6ED9               	movwf	fsr2l,c
  9615  019BE8  0EFF               	movlw	255
  9616  019BEA  20E2               	addwfc	fsr1h,w,c
  9617  019BEC  6EDA               	movwf	fsr2h,c
  9618  019BEE  006F FF78  F00B    	movff	postinc2,btemp+10
  9619  019BF4  006F FF74  F00C    	movff	postdec2,btemp+11
  9620                           
  9621                           ;stkvar	_s @ sp[(-8)+-3]
  9622  019BFA  0EF5               	movlw	-11
  9623  019BFC  006F FF8C  F009    	movff	plusw1,btemp+8
  9624  019C02  0EF6               	movlw	-10
  9625  019C04  006F FF8C  F00A    	movff	plusw1,btemp+9
  9626  019C0A  500B               	movf	(btemp+10)^0,w,c
  9627  019C0C  2409               	addwf	(btemp+8)^0,w,c
  9628  019C0E  6ED9               	movwf	fsr2l,c
  9629  019C10  500C               	movf	(btemp+11)^0,w,c
  9630  019C12  200A               	addwfc	(btemp+9)^0,w,c
  9631  019C14  6EDA               	movwf	fsr2h,c
  9632  019C16  0E00               	movlw	0
  9633  019C18  6EDF               	movwf	indf2,c
  9634                           
  9635                           ; BSR set to: 0
  9636                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 74, args
      +                          ize = 4, vargsize = 0
  9637  019C1A  0EF8               	movlw	248
  9638  019C1C  26E1               	addwf	fsr1l,f,c
  9639  019C1E  0EFF               	movlw	255
  9640  019C20  22E2               	addwfc	fsr1h,f,c
  9641  019C22  52E5               	movf	postdec1,f,c
  9642  019C24  50E7               	movf	indf1,w,c
  9643  019C26  5EE1               	subwf	fsr1l,f,c
  9644  019C28  0E00               	movlw	0
  9645  019C2A  5AE2               	subwfb	fsr1h,f,c
  9646  019C2C  0012               	return		;funcret
  9647  019C2E                     __end_of_sprintf:
  9648                           	opt callstack 0
  9649                           
  9650 ;; *************** function _get_vterm_ptr *****************
  9651 ;; Defined at:
  9652 ;;		line 116 in file "mconfig.c"
  9653 ;; Parameters:    Size  Location     Type
  9654 ;;  line            1  [STACK] const unsigned char 
  9655 ;;  vterm           1  [STACK] const unsigned char 
  9656 ;; Auto vars:     Size  Location     Type
  9657 ;;		None
  9658 ;; Return value:  Size  Location     Type
  9659 ;;                  2  [STACK] PTR unsigned char 
  9660 ;; Registers used:
  9661 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  9662 ;; Tracked objects:
  9663 ;;		On entry : 0/2
  9664 ;;		On exit  : 0/0
  9665 ;;		Unchanged: 0/0
  9666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9671 ;;Total ram usage:        0 bytes
  9672 ;; Hardware stack levels used:    1
  9673 ;; Hardware stack levels required when called:   15
  9674 ;; This function calls:
  9675 ;;		Nothing
  9676 ;; This function is called by:
  9677 ;;		_main
  9678 ;;		_check_help
  9679 ;;		_vterm_dump
  9680 ;; This function uses a reentrant model
  9681 ;;
  9682                           
  9683                           	psect	text31
  9684  01B73C                     __ptext31:
  9685                           	opt callstack 0
  9686  01B73C                     _get_vterm_ptr:
  9687                           	opt callstack 15
  9688                           
  9689                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  9690                           ;stkvar	_vterm @ sp[(0)+-2]
  9691                           
  9692                           ; BSR set to: 0
  9693                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9694                           ;incstack = 0
  9695  01B73C  0EFE               	movlw	-2
  9696  01B73E  50E3               	movf	plusw1,w,c
  9697  01B740  0B03               	andlw	3
  9698  01B742  0D78               	mullw	120
  9699  01B744  0E26               	movlw	low _D
  9700  01B746  6E01               	movwf	btemp^0,c
  9701  01B748  0E08               	movlw	high _D
  9702  01B74A  6E02               	movwf	(btemp+1)^0,c
  9703  01B74C  50F3               	movf	243,w,c
  9704  01B74E  2601               	addwf	btemp^0,f,c
  9705  01B750  50F4               	movf	244,w,c
  9706  01B752  2202               	addwfc	(btemp+1)^0,f,c
  9707                           
  9708                           ;stkvar	_line @ sp[(0)+-1]
  9709  01B754  0EFF               	movlw	-1
  9710  01B756  50E3               	movf	plusw1,w,c
  9711  01B758  0B03               	andlw	3
  9712  01B75A  0D28               	mullw	40
  9713  01B75C  50F3               	movf	243,w,c
  9714  01B75E  2601               	addwf	btemp^0,f,c
  9715  01B760  50F4               	movf	244,w,c
  9716  01B762  2202               	addwfc	(btemp+1)^0,f,c
  9717                           
  9718                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  9719  01B764  52E5               	movf	postdec1,f,c
  9720  01B766  52E5               	movf	postdec1,f,c
  9721  01B768  0012               	return		;funcret
  9722  01B76A                     __end_of_get_vterm_ptr:
  9723                           	opt callstack 0
  9724                           
  9725 ;; *************** function _WaitMs *****************
  9726 ;; Defined at:
  9727 ;;		line 32 in file "timers.c"
  9728 ;; Parameters:    Size  Location     Type
  9729 ;;  numMilliseco    2  [STACK] const unsigned short 
  9730 ;; Auto vars:     Size  Location     Type
  9731 ;;		None
  9732 ;; Return value:  Size  Location     Type
  9733 ;;                  1  [STACK] void 
  9734 ;; Registers used:
  9735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9736 ;; Tracked objects:
  9737 ;;		On entry : 0/1
  9738 ;;		On exit  : 0/0
  9739 ;;		Unchanged: 0/0
  9740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9745 ;;Total ram usage:        0 bytes
  9746 ;; Hardware stack levels used:    1
  9747 ;; Hardware stack levels required when called:   16
  9748 ;; This function calls:
  9749 ;;		_StartTimer
  9750 ;;		_TimerDone
  9751 ;; This function is called by:
  9752 ;;		_main
  9753 ;;		_vterm_dump
  9754 ;; This function uses a reentrant model
  9755 ;;
  9756                           
  9757                           	psect	text32
  9758  01B5A8                     __ptext32:
  9759                           	opt callstack 0
  9760  01B5A8                     _WaitMs:
  9761                           	opt callstack 12
  9762                           
  9763                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  9764                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  9765                           
  9766                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9767                           ;incstack = 0
  9768  01B5A8  0EFE               	movlw	-2
  9769  01B5AA  006F FF8F FFE6     	movff	plusw1,postinc1
  9770  01B5B0  006F FF8F FFE6     	movff	plusw1,postinc1
  9771  01B5B6  0E00               	movlw	0
  9772  01B5B8  6EE6               	movwf	postinc1,c
  9773  01B5BA  ECE1  F0D9         	call	_StartTimer	;wreg free
  9774                           
  9775                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9776  01B5BE  D005               	goto	l9763
  9777  01B5C0                     l1606:
  9778                           
  9779                           ;timers.c: 36:   __nop();
  9780  01B5C0  F000               	nop	
  9781                           
  9782                           ;timers.c: 37:   __nop();
  9783  01B5C2  F000               	nop	
  9784                           
  9785                           ;timers.c: 38:   __nop();
  9786  01B5C4  F000               	nop	
  9787                           
  9788                           ;timers.c: 39:   __nop();
  9789  01B5C6  F000               	nop	
  9790  01B5C8  0004               	clrwdt		;# 
  9791  01B5CA                     l9763:
  9792                           
  9793                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9794  01B5CA  0E00               	movlw	0
  9795  01B5CC  6EE6               	movwf	postinc1,c
  9796  01B5CE  EC5D  F0DC         	call	_TimerDone	;wreg free
  9797  01B5D2  5001               	movf	btemp^0,w,c
  9798  01B5D4  B4D8               	btfsc	status,2,c
  9799  01B5D6  D7F4               	goto	l1606
  9800                           
  9801                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  9802  01B5D8  52E5               	movf	postdec1,f,c
  9803  01B5DA  52E5               	movf	postdec1,f,c
  9804  01B5DC  0012               	return		;funcret
  9805  01B5DE                     __end_of_WaitMs:
  9806                           	opt callstack 0
  9807                           
  9808 ;; *************** function _update_lcd *****************
  9809 ;; Defined at:
  9810 ;;		line 85 in file "mconfig.c"
  9811 ;; Parameters:    Size  Location     Type
  9812 ;;  vterm           1  [STACK] unsigned char 
  9813 ;; Auto vars:     Size  Location     Type
  9814 ;;		None
  9815 ;; Return value:  Size  Location     Type
  9816 ;;                  1  [STACK] unsigned char 
  9817 ;; Registers used:
  9818 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9819 ;; Tracked objects:
  9820 ;;		On entry : 0/0
  9821 ;;		On exit  : 0/0
  9822 ;;		Unchanged: 0/0
  9823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9828 ;;Total ram usage:        0 bytes
  9829 ;; Hardware stack levels used:    1
  9830 ;; Hardware stack levels required when called:   26
  9831 ;; This function calls:
  9832 ;;		_eaDogM_WriteStringAtPos
  9833 ;;		_wait_lcd_done
  9834 ;; This function is called by:
  9835 ;;		_main
  9836 ;;		_check_help
  9837 ;; This function uses a reentrant model
  9838 ;;
  9839                           
  9840                           	psect	text33
  9841  019A14                     __ptext33:
  9842                           	opt callstack 0
  9843  019A14                     _update_lcd:
  9844                           	opt callstack 4
  9845                           
  9846                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  9847                           ;stkvar	_vterm @ sp[(0)+-1]
  9848                           
  9849                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9850                           ;incstack = 0
  9851  019A14  0EFF               	movlw	-1
  9852  019A16  006F FF8C  F001    	movff	plusw1,btemp
  9853  019A1C  0E03               	movlw	3
  9854  019A1E  1601               	andwf	btemp^0,f,c
  9855  019A20  0EFF               	movlw	-1
  9856  019A22  0060  F007  FFE3   	movff	btemp,plusw1
  9857                           
  9858                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  9859  019A28  EE22  F206         	lfsr	2,_D+480
  9860  019A2C  A0DF               	btfss	indf2,0,c
  9861  019A2E  D004               	goto	l12583
  9862                           
  9863                           ;stkvar	_vterm @ sp[(0)+-1]
  9864  019A30  0EFF               	movlw	-1
  9865  019A32  50E3               	movf	plusw1,w,c
  9866  019A34  B4D8               	btfsc	status,2,c
  9867  019A36  D074               	goto	l1682
  9868  019A38                     l12583:
  9869                           
  9870                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  9871                           ;stkvar	_vterm @ sp[(0)+-1]
  9872  019A38  0EFF               	movlw	-1
  9873  019A3A  50E3               	movf	plusw1,w,c
  9874  019A3C  0D78               	mullw	120
  9875  019A3E  0E36               	movlw	low (_D+16)
  9876  019A40  24F3               	addwf	243,w,c
  9877  019A42  6ED9               	movwf	fsr2l,c
  9878  019A44  0E08               	movlw	high (_D+16)
  9879  019A46  20F4               	addwfc	prodh,w,c
  9880  019A48  6EDA               	movwf	fsr2h,c
  9881  019A4A  0E00               	movlw	0
  9882  019A4C  6EDF               	movwf	indf2,c
  9883                           
  9884                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  9885                           ;stkvar	_vterm @ sp[(0)+-1]
  9886  019A4E  0EFF               	movlw	-1
  9887  019A50  50E3               	movf	plusw1,w,c
  9888  019A52  0D78               	mullw	120
  9889  019A54  0E5E               	movlw	low (_D+56)
  9890  019A56  24F3               	addwf	243,w,c
  9891  019A58  6ED9               	movwf	fsr2l,c
  9892  019A5A  0E08               	movlw	high (_D+56)
  9893  019A5C  20F4               	addwfc	prodh,w,c
  9894  019A5E  6EDA               	movwf	fsr2h,c
  9895  019A60  0E00               	movlw	0
  9896  019A62  6EDF               	movwf	indf2,c
  9897                           
  9898                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  9899                           ;stkvar	_vterm @ sp[(0)+-1]
  9900  019A64  0EFF               	movlw	-1
  9901  019A66  50E3               	movf	plusw1,w,c
  9902  019A68  0D78               	mullw	120
  9903  019A6A  0E86               	movlw	low (_D+96)
  9904  019A6C  24F3               	addwf	243,w,c
  9905  019A6E  6ED9               	movwf	fsr2l,c
  9906  019A70  0E08               	movlw	high (_D+96)
  9907  019A72  20F4               	addwfc	prodh,w,c
  9908  019A74  6EDA               	movwf	fsr2h,c
  9909  019A76  0E00               	movlw	0
  9910  019A78  6EDF               	movwf	indf2,c
  9911                           
  9912                           ;mconfig.c: 95:  wait_lcd_done();
  9913  019A7A  EC4E  F0DE         	call	_wait_lcd_done	;wreg free
  9914                           
  9915                           ; BSR set to: 0
  9916                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  9917                           ;stkvar	_vterm @ sp[(0)+-1]
  9918  019A7E  0EFF               	movlw	-1
  9919  019A80  50E3               	movf	plusw1,w,c
  9920  019A82  0D78               	mullw	120
  9921  019A84  0E26               	movlw	low _D
  9922  019A86  6E0B               	movwf	(btemp+10)^0,c
  9923  019A88  0E08               	movlw	high _D
  9924  019A8A  6E0C               	movwf	(btemp+11)^0,c
  9925  019A8C  50F3               	movf	243,w,c
  9926  019A8E  260B               	addwf	(btemp+10)^0,f,c
  9927  019A90  50F4               	movf	244,w,c
  9928  019A92  220C               	addwfc	(btemp+11)^0,f,c
  9929  019A94  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9930  019A9A  0060  F033  FFE6   	movff	btemp+11,postinc1
  9931  019AA0  0E00               	movlw	0
  9932  019AA2  6EE6               	movwf	postinc1,c
  9933  019AA4  0E00               	movlw	0
  9934  019AA6  6EE6               	movwf	postinc1,c
  9935  019AA8  ECEF  F0DA         	call	_eaDogM_WriteStringAtPos	;wreg free
  9936                           
  9937                           ; BSR set to: 59
  9938                           ;mconfig.c: 97:  wait_lcd_done();
  9939  019AAC  EC4E  F0DE         	call	_wait_lcd_done	;wreg free
  9940                           
  9941                           ; BSR set to: 0
  9942                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  9943                           ;stkvar	_vterm @ sp[(0)+-1]
  9944  019AB0  0EFF               	movlw	-1
  9945  019AB2  50E3               	movf	plusw1,w,c
  9946  019AB4  0D78               	mullw	120
  9947  019AB6  0E26               	movlw	low _D
  9948  019AB8  6E0B               	movwf	(btemp+10)^0,c
  9949  019ABA  0E08               	movlw	high _D
  9950  019ABC  6E0C               	movwf	(btemp+11)^0,c
  9951  019ABE  0E28               	movlw	40
  9952  019AC0  260B               	addwf	(btemp+10)^0,f,c
  9953  019AC2  0E00               	movlw	0
  9954  019AC4  220C               	addwfc	(btemp+11)^0,f,c
  9955  019AC6  50F3               	movf	243,w,c
  9956  019AC8  260B               	addwf	(btemp+10)^0,f,c
  9957  019ACA  50F4               	movf	244,w,c
  9958  019ACC  220C               	addwfc	(btemp+11)^0,f,c
  9959  019ACE  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9960  019AD4  0060  F033  FFE6   	movff	btemp+11,postinc1
  9961  019ADA  0E00               	movlw	0
  9962  019ADC  6EE6               	movwf	postinc1,c
  9963  019ADE  0E01               	movlw	1
  9964  019AE0  6EE6               	movwf	postinc1,c
  9965  019AE2  ECEF  F0DA         	call	_eaDogM_WriteStringAtPos	;wreg free
  9966                           
  9967                           ; BSR set to: 59
  9968                           ;mconfig.c: 99:  wait_lcd_done();
  9969  019AE6  EC4E  F0DE         	call	_wait_lcd_done	;wreg free
  9970                           
  9971                           ; BSR set to: 0
  9972                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  9973                           ;stkvar	_vterm @ sp[(0)+-1]
  9974  019AEA  0EFF               	movlw	-1
  9975  019AEC  50E3               	movf	plusw1,w,c
  9976  019AEE  0D78               	mullw	120
  9977  019AF0  0E26               	movlw	low _D
  9978  019AF2  6E0B               	movwf	(btemp+10)^0,c
  9979  019AF4  0E08               	movlw	high _D
  9980  019AF6  6E0C               	movwf	(btemp+11)^0,c
  9981  019AF8  0E50               	movlw	80
  9982  019AFA  260B               	addwf	(btemp+10)^0,f,c
  9983  019AFC  0E00               	movlw	0
  9984  019AFE  220C               	addwfc	(btemp+11)^0,f,c
  9985  019B00  50F3               	movf	243,w,c
  9986  019B02  260B               	addwf	(btemp+10)^0,f,c
  9987  019B04  50F4               	movf	244,w,c
  9988  019B06  220C               	addwfc	(btemp+11)^0,f,c
  9989  019B08  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9990  019B0E  0060  F033  FFE6   	movff	btemp+11,postinc1
  9991  019B14  0E00               	movlw	0
  9992  019B16  6EE6               	movwf	postinc1,c
  9993  019B18  0E02               	movlw	2
  9994  019B1A  6EE6               	movwf	postinc1,c
  9995  019B1C  ECEF  F0DA         	call	_eaDogM_WriteStringAtPos	;wreg free
  9996  019B20                     l1682:
  9997                           
  9998                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  9999  019B20  52E5               	movf	postdec1,f,c
 10000  019B22  0012               	return		;funcret
 10001  019B24                     __end_of_update_lcd:
 10002                           	opt callstack 0
 10003                           
 10004 ;; *************** function _eaDogM_WriteStringAtPos *****************
 10005 ;; Defined at:
 10006 ;;		line 278 in file "eadog.c"
 10007 ;; Parameters:    Size  Location     Type
 10008 ;;  r               1  [STACK] const unsigned char 
 10009 ;;  c               1  [STACK] const unsigned char 
 10010 ;;  strPtr          2  [STACK] PTR unsigned char 
 10011 ;;		 -> D.lcd(480), D(482), V(191), 
 10012 ;; Auto vars:     Size  Location     Type
 10013 ;;		None
 10014 ;; Return value:  Size  Location     Type
 10015 ;;                  1  [STACK] void 
 10016 ;; Registers used:
 10017 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10018 ;; Tracked objects:
 10019 ;;		On entry : 3F/0
 10020 ;;		On exit  : 3F/3B
 10021 ;;		Unchanged: 0/0
 10022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10027 ;;Total ram usage:        0 bytes
 10028 ;; Hardware stack levels used:    1
 10029 ;; Hardware stack levels required when called:   25
 10030 ;; This function calls:
 10031 ;;		_eaDogM_WriteString
 10032 ;;		_send_lcd_cmd_dma
 10033 ;; This function is called by:
 10034 ;;		_update_lcd
 10035 ;;		_vterm_dump
 10036 ;; This function uses a reentrant model
 10037 ;;
 10038                           
 10039                           	psect	text34
 10040  01B5DE                     __ptext34:
 10041                           	opt callstack 0
 10042  01B5DE                     _eaDogM_WriteStringAtPos:
 10043                           	opt callstack 4
 10044                           
 10045                           ;eadog.c: 278: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 279: {;eadog.c: 280:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
 10046                           ;stkvar	_c @ sp[(0)+-2]
 10047                           
 10048                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10049                           ;incstack = 0
 10050  01B5DE  0EFE               	movlw	-2
 10051  01B5E0  006F FF8C  F00C    	movff	plusw1,btemp+11
 10052                           
 10053                           ;stkvar	_r @ sp[(0)+-1]
 10054  01B5E6  0EFF               	movlw	-1
 10055  01B5E8  50E3               	movf	plusw1,w,c
 10056  01B5EA  0D10               	mullw	16
 10057  01B5EC  50F3               	movf	243,w,c
 10058  01B5EE  240C               	addwf	(btemp+11)^0,w,c
 10059  01B5F0  0F80               	addlw	128
 10060  01B5F2  6EE6               	movwf	postinc1,c
 10061  01B5F4  ECDE  F0D7         	call	_send_lcd_cmd_dma	;wreg free
 10062                           
 10063                           ;eadog.c: 281:  eaDogM_WriteString(strPtr);
 10064                           ;stkvar	_strPtr @ sp[(0)+-4]
 10065  01B5F8  0EFC               	movlw	-4
 10066  01B5FA  006F FF8F FFE6     	movff	plusw1,postinc1
 10067  01B600  006F FF8F FFE6     	movff	plusw1,postinc1
 10068  01B606  ECEF  F0D2         	call	_eaDogM_WriteString	;wreg free
 10069                           
 10070                           ; BSR set to: 59
 10071                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 10072  01B60A  52E5               	movf	postdec1,f,c
 10073  01B60C  52E5               	movf	postdec1,f,c
 10074  01B60E  52E5               	movf	postdec1,f,c
 10075  01B610  52E5               	movf	postdec1,f,c
 10076  01B612  0012               	return		;funcret
 10077  01B614                     __end_of_eaDogM_WriteStringAtPos:
 10078                           	opt callstack 0
 10079                           
 10080 ;; *************** function _send_lcd_cmd_dma *****************
 10081 ;; Defined at:
 10082 ;;		line 220 in file "eadog.c"
 10083 ;; Parameters:    Size  Location     Type
 10084 ;;  strPtr          1  [STACK] unsigned char 
 10085 ;; Auto vars:     Size  Location     Type
 10086 ;;		None
 10087 ;; Return value:  Size  Location     Type
 10088 ;;                  1  [STACK] void 
 10089 ;; Registers used:
 10090 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10091 ;; Tracked objects:
 10092 ;;		On entry : 0/3D
 10093 ;;		On exit  : 3F/0
 10094 ;;		Unchanged: 0/0
 10095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10100 ;;Total ram usage:        0 bytes
 10101 ;; Hardware stack levels used:    1
 10102 ;; Hardware stack levels required when called:   24
 10103 ;; This function calls:
 10104 ;;		_printf
 10105 ;;		_ringBufS_flush
 10106 ;;		_start_lcd
 10107 ;;		_wait_lcd_done
 10108 ;;		_wait_lcd_set
 10109 ;; This function is called by:
 10110 ;;		_eaDogM_WriteCommand
 10111 ;;		_eaDogM_WriteStringAtPos
 10112 ;; This function uses a reentrant model
 10113 ;;
 10114                           
 10115                           	psect	text35
 10116  01AFBC                     __ptext35:
 10117                           	opt callstack 0
 10118  01AFBC                     _send_lcd_cmd_dma:
 10119                           	opt callstack 4
 10120                           
 10121                           ;eadog.c: 220: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 221: {;eadog.c: 223:  wait
      +                          _lcd_set();
 10122                           
 10123                           ; BSR set to: 59
 10124                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10125                           ;incstack = 0
 10126  01AFBC  EC3E  F0DF         	call	_wait_lcd_set	;wreg free
 10127                           
 10128                           ; BSR set to: 0
 10129                           ;eadog.c: 225:  ringBufS_flush(spi_link.tx1a, 0);
 10130  01AFC0  0E00               	movlw	0
 10131  01AFC2  6EE6               	movwf	postinc1,c
 10132  01AFC4  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 10133  01AFCA  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 10134  01AFD0  EC29  F0D4         	call	_ringBufS_flush	;wreg free
 10135  01AFD4  92BC               	bcf	188,1,c	;volatile
 10136  01AFD6  94BC               	bcf	188,2,c	;volatile
 10137                           
 10138                           ;eadog.c: 228:  DMA1CON0bits.EN = 0;
 10139  01AFD8  013B               	movlb	59	; () banked
 10140  01AFDA  9FFC               	bcf	252,7,b	;volatile
 10141                           
 10142                           ; BSR set to: 59
 10143                           ;eadog.c: 229:  DMA1SSZ = 1;
 10144  01AFDC  0E00               	movlw	0
 10145  01AFDE  6FF8               	movwf	248,b	;volatile
 10146  01AFE0  0E01               	movlw	1
 10147  01AFE2  6FF7               	movwf	247,b	;volatile
 10148                           
 10149                           ; BSR set to: 59
 10150                           ;eadog.c: 230:  DMA1CON0bits.EN = 1;
 10151  01AFE4  8FFC               	bsf	252,7,b	;volatile
 10152                           
 10153                           ; BSR set to: 59
 10154                           ;eadog.c: 231:  printf("%c", strPtr);
 10155                           ;stkvar	_strPtr @ sp[(0)+-1]
 10156  01AFE6  0EFF               	movlw	-1
 10157  01AFE8  50E3               	movf	plusw1,w,c
 10158  01AFEA  6EE6               	movwf	postinc1,c
 10159  01AFEC  0E00               	movlw	0
 10160  01AFEE  6EE6               	movwf	postinc1,c
 10161  01AFF0  0EF8               	movlw	low STR_44
 10162  01AFF2  6EE6               	movwf	postinc1,c
 10163  01AFF4  0EFF               	movlw	high STR_44
 10164  01AFF6  6EE6               	movwf	postinc1,c
 10165  01AFF8  0E04               	movlw	4
 10166  01AFFA  6EE6               	movwf	postinc1,c
 10167  01AFFC  ECF2  F0D6         	call	_printf	;wreg free
 10168                           
 10169                           ; BSR set to: 0
 10170                           ;eadog.c: 232:  start_lcd();
 10171  01B000  EC41  F0DF         	call	_start_lcd	;wreg free
 10172                           
 10173                           ; BSR set to: 59
 10174                           ;eadog.c: 233:  wait_lcd_done();
 10175  01B004  EC4E  F0DE         	call	_wait_lcd_done	;wreg free
 10176                           
 10177                           ; BSR set to: 0
 10178  01B008  82BC               	bsf	188,1,c	;volatile
 10179                           
 10180                           ; BSR set to: 0
 10181                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 10182  01B00A  52E5               	movf	postdec1,f,c
 10183  01B00C  0012               	return		;funcret
 10184  01B00E                     __end_of_send_lcd_cmd_dma:
 10185                           	opt callstack 0
 10186                           
 10187 ;; *************** function _wait_lcd_done *****************
 10188 ;; Defined at:
 10189 ;;		line 156 in file "eadog.c"
 10190 ;; Parameters:    Size  Location     Type
 10191 ;;		None
 10192 ;; Auto vars:     Size  Location     Type
 10193 ;;		None
 10194 ;; Return value:  Size  Location     Type
 10195 ;;                  1  [STACK] void 
 10196 ;; Registers used:
 10197 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 10198 ;; Tracked objects:
 10199 ;;		On entry : 0/0
 10200 ;;		On exit  : 3F/0
 10201 ;;		Unchanged: 0/0
 10202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10207 ;;Total ram usage:        0 bytes
 10208 ;; Hardware stack levels used:    1
 10209 ;; Hardware stack levels required when called:   16
 10210 ;; This function calls:
 10211 ;;		_wdtdelay
 10212 ;; This function is called by:
 10213 ;;		_send_lcd_cmd_dma
 10214 ;;		_update_lcd
 10215 ;;		_vterm_dump
 10216 ;; This function uses a reentrant model
 10217 ;;
 10218                           
 10219                           	psect	text36
 10220  01BC9C                     __ptext36:
 10221                           	opt callstack 0
 10222  01BC9C                     _wait_lcd_done:
 10223                           	opt callstack 13
 10224                           
 10225                           ;eadog.c: 158:  while (spi_link.LCD_DATA);
 10226                           
 10227                           ; BSR set to: 0
 10228                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10229                           ;incstack = 0
 10230  01BC9C  0100               	movlb	0	; () banked
 10231  01BC9E  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
 10232  01BCA0  D7FD               	goto	_wait_lcd_done
 10233                           
 10234                           ; BSR set to: 0
 10235                           ;eadog.c: 159:  wdtdelay(50);
 10236  01BCA2  0E32               	movlw	50
 10237  01BCA4  6EE6               	movwf	postinc1,c
 10238  01BCA6  0E00               	movlw	0
 10239  01BCA8  6EE6               	movwf	postinc1,c
 10240  01BCAA  0E00               	movlw	0
 10241  01BCAC  6EE6               	movwf	postinc1,c
 10242  01BCAE  0E00               	movlw	0
 10243  01BCB0  6EE6               	movwf	postinc1,c
 10244  01BCB2  EC84  F0D7         	call	_wdtdelay	;wreg free
 10245                           
 10246                           ; BSR set to: 0
 10247                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 10248  01BCB6  0012               	return		;funcret
 10249  01BCB8                     __end_of_wait_lcd_done:
 10250                           	opt callstack 0
 10251                           
 10252 ;; *************** function _wdtdelay *****************
 10253 ;; Defined at:
 10254 ;;		line 23 in file "eadog.c"
 10255 ;; Parameters:    Size  Location     Type
 10256 ;;  delay           4  [STACK] const unsigned long 
 10257 ;; Auto vars:     Size  Location     Type
 10258 ;;		None
 10259 ;; Return value:  Size  Location     Type
 10260 ;;                  1  [STACK] void 
 10261 ;; Registers used:
 10262 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 10263 ;; Tracked objects:
 10264 ;;		On entry : 0/0
 10265 ;;		On exit  : 3F/0
 10266 ;;		Unchanged: 0/0
 10267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10272 ;;Total ram usage:        0 bytes
 10273 ;; Hardware stack levels used:    1
 10274 ;; Hardware stack levels required when called:   15
 10275 ;; This function calls:
 10276 ;;		Nothing
 10277 ;; This function is called by:
 10278 ;;		_init_display
 10279 ;;		_send_lcd_cmd
 10280 ;;		_send_lcd_cmd_long
 10281 ;;		_wait_lcd_done
 10282 ;; This function uses a reentrant model
 10283 ;;
 10284                           
 10285                           	psect	text37
 10286  01AF08                     __ptext37:
 10287                           	opt callstack 0
 10288  01AF08                     _wdtdelay:
 10289                           	opt callstack 13
 10290                           
 10291                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 10292                           
 10293                           ; BSR set to: 0
 10294                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10295                           ;incstack = 0
 10296  01AF08  0100               	movlb	0	; () banked
 10297  01AF0A  6B88               	clrf	wdtdelay@dcount& (0+255),b
 10298  01AF0C  6B89               	clrf	(wdtdelay@dcount+1)& (0+255),b
 10299  01AF0E  6B8A               	clrf	(wdtdelay@dcount+2)& (0+255),b
 10300  01AF10  6B8B               	clrf	(wdtdelay@dcount+3)& (0+255),b
 10301  01AF12                     l1447:
 10302                           
 10303                           ; BSR set to: 0
 10304                           ;eadog.c: 28:   __nop();
 10305  01AF12  F000               	nop	
 10306  01AF14  0004               	clrwdt		;# 
 10307                           
 10308                           ;eadog.c: 30:  };
 10309  01AF16  0E01               	movlw	1
 10310  01AF18  0100               	movlb	0	; () banked
 10311  01AF1A  2788               	addwf	wdtdelay@dcount& (0+255),f,b
 10312  01AF1C  0E00               	movlw	0
 10313  01AF1E  2389               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 10314  01AF20  238A               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 10315  01AF22  238B               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 10316                           
 10317                           ; BSR set to: 0
 10318                           ;stkvar	_delay @ sp[(0)+-4]
 10319  01AF24  0EFC               	movlw	-4
 10320  01AF26  006F FF8C  F001    	movff	plusw1,btemp
 10321  01AF2C  5188               	movf	wdtdelay@dcount& (0+255),w,b
 10322  01AF2E  5C01               	subwf	btemp^0,w,c
 10323  01AF30  0EFD               	movlw	-3
 10324  01AF32  006F FF8C  F001    	movff	plusw1,btemp
 10325  01AF38  5189               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 10326  01AF3A  5801               	subwfb	btemp^0,w,c
 10327  01AF3C  0EFE               	movlw	-2
 10328  01AF3E  006F FF8C  F001    	movff	plusw1,btemp
 10329  01AF44  518A               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 10330  01AF46  5801               	subwfb	btemp^0,w,c
 10331  01AF48  0EFF               	movlw	-1
 10332  01AF4A  006F FF8C  F001    	movff	plusw1,btemp
 10333  01AF50  518B               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 10334  01AF52  5801               	subwfb	btemp^0,w,c
 10335  01AF54  B0D8               	btfsc	status,0,c
 10336  01AF56  D7DD               	goto	l1447
 10337                           
 10338                           ; BSR set to: 0
 10339                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 10340  01AF58  52E5               	movf	postdec1,f,c
 10341  01AF5A  52E5               	movf	postdec1,f,c
 10342  01AF5C  52E5               	movf	postdec1,f,c
 10343  01AF5E  52E5               	movf	postdec1,f,c
 10344  01AF60  0012               	return		;funcret
 10345  01AF62                     __end_of_wdtdelay:
 10346                           	opt callstack 0
 10347                           
 10348 ;; *************** function _eaDogM_WriteString *****************
 10349 ;; Defined at:
 10350 ;;		line 199 in file "eadog.c"
 10351 ;; Parameters:    Size  Location     Type
 10352 ;;  strPtr          2  [STACK] PTR unsigned char 
 10353 ;;		 -> D.lcd(480), D(482), V(191), 
 10354 ;; Auto vars:     Size  Location     Type
 10355 ;;		None
 10356 ;; Return value:  Size  Location     Type
 10357 ;;                  1  [STACK] void 
 10358 ;; Registers used:
 10359 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10360 ;; Tracked objects:
 10361 ;;		On entry : 3F/0
 10362 ;;		On exit  : 3F/3B
 10363 ;;		Unchanged: 0/0
 10364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10369 ;;Total ram usage:        0 bytes
 10370 ;; Hardware stack levels used:    1
 10371 ;; Hardware stack levels required when called:   24
 10372 ;; This function calls:
 10373 ;;		_printf
 10374 ;;		_ringBufS_flush
 10375 ;;		_start_lcd
 10376 ;;		_strlen
 10377 ;;		_wait_lcd_set
 10378 ;; This function is called by:
 10379 ;;		_eaDogM_WriteStringAtPos
 10380 ;; This function uses a reentrant model
 10381 ;;
 10382                           
 10383                           	psect	text38
 10384  01A5DE                     __ptext38:
 10385                           	opt callstack 0
 10386  01A5DE                     _eaDogM_WriteString:
 10387                           	opt callstack 4
 10388                           
 10389                           ;eadog.c: 199: void eaDogM_WriteString(char *strPtr);eadog.c: 200: {;eadog.c: 202:  wait
      +                          _lcd_set();
 10390                           
 10391                           ; BSR set to: 0
 10392                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10393                           ;incstack = 0
 10394  01A5DE  EC3E  F0DF         	call	_wait_lcd_set	;wreg free
 10395                           
 10396                           ; BSR set to: 0
 10397                           ;eadog.c: 204:  ringBufS_flush(spi_link.tx1a, 0);
 10398  01A5E2  0E00               	movlw	0
 10399  01A5E4  6EE6               	movwf	postinc1,c
 10400  01A5E6  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 10401  01A5EC  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 10402  01A5F2  EC29  F0D4         	call	_ringBufS_flush	;wreg free
 10403  01A5F6  94BC               	bcf	188,2,c	;volatile
 10404                           
 10405                           ;eadog.c: 206:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 10406                           ;stkvar	_strPtr @ sp[(0)+-2]
 10407  01A5F8  0EFE               	movlw	-2
 10408  01A5FA  006F FF8F FFE6     	movff	plusw1,postinc1
 10409  01A600  006F FF8F FFE6     	movff	plusw1,postinc1
 10410  01A606  EC42  F0D3         	call	_strlen	;wreg free
 10411  01A60A  5002               	movf	(btemp+1)^0,w,c
 10412  01A60C  E104               	bnz	u12140
 10413  01A60E  0E41               	movlw	65
 10414  01A610  5C01               	subwf	btemp^0,w,c
 10415  01A612  A0D8               	btfss	status,0,c
 10416  01A614  D010               	goto	l12495
 10417  01A616                     u12140:
 10418                           
 10419                           ;stkvar	_strPtr @ sp[(0)+-2]
 10420  01A616  0EFE               	movlw	-2
 10421  01A618  006F FF8C  F00B    	movff	plusw1,btemp+10
 10422  01A61E  0EFF               	movlw	-1
 10423  01A620  006F FF8C  F00C    	movff	plusw1,btemp+11
 10424  01A626  0E40               	movlw	64
 10425  01A628  240B               	addwf	(btemp+10)^0,w,c
 10426  01A62A  6ED9               	movwf	fsr2l,c
 10427  01A62C  0E00               	movlw	0
 10428  01A62E  200C               	addwfc	(btemp+11)^0,w,c
 10429  01A630  6EDA               	movwf	fsr2h,c
 10430  01A632  0E00               	movlw	0
 10431  01A634  6EDF               	movwf	indf2,c
 10432  01A636                     l12495:
 10433                           
 10434                           ;eadog.c: 207:  DMA1CON0bits.EN = 0;
 10435  01A636  013B               	movlb	59	; () banked
 10436  01A638  9FFC               	bcf	252,7,b	;volatile
 10437                           
 10438                           ; BSR set to: 59
 10439                           ;eadog.c: 208:  DMA1SSZ = strlen(strPtr);
 10440                           ;stkvar	_strPtr @ sp[(0)+-2]
 10441  01A63A  0EFE               	movlw	-2
 10442  01A63C  006F FF8F FFE6     	movff	plusw1,postinc1
 10443  01A642  006F FF8F FFE6     	movff	plusw1,postinc1
 10444  01A648  EC42  F0D3         	call	_strlen	;wreg free
 10445  01A64C  0060  F007  FBF7   	movff	btemp,15351	;volatile
 10446  01A652  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
 10447                           
 10448                           ;eadog.c: 209:  DMA1CON0bits.EN = 1;
 10449  01A658  013B               	movlb	59	; () banked
 10450  01A65A  8FFC               	bsf	252,7,b	;volatile
 10451                           
 10452                           ; BSR set to: 59
 10453                           ;eadog.c: 210:  printf("%s", strPtr);
 10454                           ;stkvar	_strPtr @ sp[(0)+-2]
 10455  01A65C  0EFE               	movlw	-2
 10456  01A65E  006F FF8F FFE6     	movff	plusw1,postinc1
 10457  01A664  006F FF8F FFE6     	movff	plusw1,postinc1
 10458  01A66A  0EFB               	movlw	low STR_43
 10459  01A66C  6EE6               	movwf	postinc1,c
 10460  01A66E  0EFF               	movlw	high STR_43
 10461  01A670  6EE6               	movwf	postinc1,c
 10462  01A672  0E04               	movlw	4
 10463  01A674  6EE6               	movwf	postinc1,c
 10464  01A676  ECF2  F0D6         	call	_printf	;wreg free
 10465                           
 10466                           ; BSR set to: 0
 10467                           ;eadog.c: 211:  start_lcd();
 10468  01A67A  EC41  F0DF         	call	_start_lcd	;wreg free
 10469                           
 10470                           ; BSR set to: 59
 10471                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 10472  01A67E  52E5               	movf	postdec1,f,c
 10473  01A680  52E5               	movf	postdec1,f,c
 10474  01A682  0012               	return		;funcret
 10475  01A684                     __end_of_eaDogM_WriteString:
 10476                           	opt callstack 0
 10477                           
 10478 ;; *************** function _wait_lcd_set *****************
 10479 ;; Defined at:
 10480 ;;		line 146 in file "eadog.c"
 10481 ;; Parameters:    Size  Location     Type
 10482 ;;		None
 10483 ;; Auto vars:     Size  Location     Type
 10484 ;;		None
 10485 ;; Return value:  Size  Location     Type
 10486 ;;                  1  [STACK] void 
 10487 ;; Registers used:
 10488 ;;		None
 10489 ;; Tracked objects:
 10490 ;;		On entry : 0/3D
 10491 ;;		On exit  : 3F/0
 10492 ;;		Unchanged: 0/0
 10493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10498 ;;Total ram usage:        0 bytes
 10499 ;; Hardware stack levels used:    1
 10500 ;; Hardware stack levels required when called:   15
 10501 ;; This function calls:
 10502 ;;		Nothing
 10503 ;; This function is called by:
 10504 ;;		_eaDogM_WriteString
 10505 ;;		_send_lcd_cmd_dma
 10506 ;; This function uses a reentrant model
 10507 ;;
 10508                           
 10509                           	psect	text39
 10510  01BE7C                     __ptext39:
 10511                           	opt callstack 0
 10512  01BE7C                     _wait_lcd_set:
 10513                           	opt callstack 12
 10514                           
 10515                           ;eadog.c: 148:  spi_link.LCD_DATA = 1;
 10516                           
 10517                           ; BSR set to: 59
 10518                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10519                           ;incstack = 0
 10520  01BE7C  0100               	movlb	0	; () banked
 10521  01BE7E  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 10522                           
 10523                           ; BSR set to: 0
 10524                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 10525  01BE80  0012               	return		;funcret
 10526  01BE82                     __end_of_wait_lcd_set:
 10527                           	opt callstack 0
 10528                           
 10529 ;; *************** function _start_lcd *****************
 10530 ;; Defined at:
 10531 ;;		line 141 in file "eadog.c"
 10532 ;; Parameters:    Size  Location     Type
 10533 ;;		None
 10534 ;; Auto vars:     Size  Location     Type
 10535 ;;		None
 10536 ;; Return value:  Size  Location     Type
 10537 ;;                  1  [STACK] void 
 10538 ;; Registers used:
 10539 ;;		None
 10540 ;; Tracked objects:
 10541 ;;		On entry : 3F/0
 10542 ;;		On exit  : 3F/3B
 10543 ;;		Unchanged: 0/0
 10544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10549 ;;Total ram usage:        0 bytes
 10550 ;; Hardware stack levels used:    1
 10551 ;; Hardware stack levels required when called:   15
 10552 ;; This function calls:
 10553 ;;		Nothing
 10554 ;; This function is called by:
 10555 ;;		_eaDogM_WriteString
 10556 ;;		_send_lcd_cmd_dma
 10557 ;; This function uses a reentrant model
 10558 ;;
 10559                           
 10560                           	psect	text40
 10561  01BE82                     __ptext40:
 10562                           	opt callstack 0
 10563  01BE82                     _start_lcd:
 10564                           	opt callstack 12
 10565                           
 10566                           ;eadog.c: 143:  DMA1CON0bits.DMA1SIRQEN = 1;
 10567                           
 10568                           ; BSR set to: 0
 10569                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10570                           ;incstack = 0
 10571  01BE82  013B               	movlb	59	; () banked
 10572  01BE84  8DFC               	bsf	252,6,b	;volatile
 10573                           
 10574                           ; BSR set to: 59
 10575                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 10576  01BE86  0012               	return		;funcret
 10577  01BE88                     __end_of_start_lcd:
 10578                           	opt callstack 0
 10579                           
 10580 ;; *************** function _ringBufS_flush *****************
 10581 ;; Defined at:
 10582 ;;		line 76 in file "ringbufs.c"
 10583 ;; Parameters:    Size  Location     Type
 10584 ;;  _this           2  [STACK] PTR struct ringBufS_t
 10585 ;;		 -> ring_buf1(67), 
 10586 ;;  clearBuffer     1  [STACK] const char 
 10587 ;; Auto vars:     Size  Location     Type
 10588 ;;		None
 10589 ;; Return value:  Size  Location     Type
 10590 ;;                  1  [STACK] void 
 10591 ;; Registers used:
 10592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10593 ;; Tracked objects:
 10594 ;;		On entry : 3F/0
 10595 ;;		On exit  : 0/0
 10596 ;;		Unchanged: 0/0
 10597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10602 ;;Total ram usage:        0 bytes
 10603 ;; Hardware stack levels used:    1
 10604 ;; Hardware stack levels required when called:   16
 10605 ;; This function calls:
 10606 ;;		_memset
 10607 ;; This function is called by:
 10608 ;;		_eaDogM_WriteString
 10609 ;;		_send_lcd_cmd_dma
 10610 ;; This function uses a reentrant model
 10611 ;;
 10612                           
 10613                           	psect	text41
 10614  01A852                     __ptext41:
 10615                           	opt callstack 0
 10616  01A852                     _ringBufS_flush:
 10617                           	opt callstack 11
 10618                           
 10619                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 10620                           ;stkvar	__this @ sp[(0)+-2]
 10621                           
 10622                           ; BSR set to: 59
 10623                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10624                           ;incstack = 0
 10625  01A852  0EFE               	movlw	-2
 10626  01A854  006F FF8C  F00B    	movff	plusw1,btemp+10
 10627  01A85A  0EFF               	movlw	-1
 10628  01A85C  006F FF8C  F00C    	movff	plusw1,btemp+11
 10629  01A862  0E42               	movlw	66
 10630  01A864  240B               	addwf	(btemp+10)^0,w,c
 10631  01A866  6ED9               	movwf	fsr2l,c
 10632  01A868  0E00               	movlw	0
 10633  01A86A  200C               	addwfc	(btemp+11)^0,w,c
 10634  01A86C  6EDA               	movwf	fsr2h,c
 10635  01A86E  0E00               	movlw	0
 10636  01A870  6EDF               	movwf	indf2,c
 10637                           
 10638                           ;ringbufs.c: 79:  _this->head = 0;
 10639                           ;stkvar	__this @ sp[(0)+-2]
 10640  01A872  0EFE               	movlw	-2
 10641  01A874  006F FF8C  F00B    	movff	plusw1,btemp+10
 10642  01A87A  0EFF               	movlw	-1
 10643  01A87C  006F FF8C  F00C    	movff	plusw1,btemp+11
 10644  01A882  0E40               	movlw	64
 10645  01A884  240B               	addwf	(btemp+10)^0,w,c
 10646  01A886  6ED9               	movwf	fsr2l,c
 10647  01A888  0E00               	movlw	0
 10648  01A88A  200C               	addwfc	(btemp+11)^0,w,c
 10649  01A88C  6EDA               	movwf	fsr2h,c
 10650  01A88E  0E00               	movlw	0
 10651  01A890  6EDF               	movwf	indf2,c
 10652                           
 10653                           ;ringbufs.c: 80:  _this->tail = 0;
 10654                           ;stkvar	__this @ sp[(0)+-2]
 10655  01A892  0EFE               	movlw	-2
 10656  01A894  006F FF8C  F00B    	movff	plusw1,btemp+10
 10657  01A89A  0EFF               	movlw	-1
 10658  01A89C  006F FF8C  F00C    	movff	plusw1,btemp+11
 10659  01A8A2  0E41               	movlw	65
 10660  01A8A4  240B               	addwf	(btemp+10)^0,w,c
 10661  01A8A6  6ED9               	movwf	fsr2l,c
 10662  01A8A8  0E00               	movlw	0
 10663  01A8AA  200C               	addwfc	(btemp+11)^0,w,c
 10664  01A8AC  6EDA               	movwf	fsr2h,c
 10665  01A8AE  0E00               	movlw	0
 10666  01A8B0  6EDF               	movwf	indf2,c
 10667                           
 10668                           ;ringbufs.c: 81:  if (clearBuffer) {
 10669                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 10670  01A8B2  0EFD               	movlw	-3
 10671  01A8B4  50E3               	movf	plusw1,w,c
 10672  01A8B6  B4D8               	btfsc	status,2,c
 10673  01A8B8  D011               	goto	l1591
 10674                           
 10675                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 10676  01A8BA  0E40               	movlw	64
 10677  01A8BC  6EE6               	movwf	postinc1,c
 10678  01A8BE  0E00               	movlw	0
 10679  01A8C0  6EE6               	movwf	postinc1,c
 10680  01A8C2  0E00               	movlw	0
 10681  01A8C4  6EE6               	movwf	postinc1,c
 10682  01A8C6  0E00               	movlw	0
 10683  01A8C8  6EE6               	movwf	postinc1,c
 10684                           
 10685                           ;stkvar	__this @ sp[(-4)+-2]
 10686  01A8CA  0EFA               	movlw	-6
 10687  01A8CC  006F FF8F FFE6     	movff	plusw1,postinc1
 10688  01A8D2  006F FF8F FFE6     	movff	plusw1,postinc1
 10689  01A8D8  EC90  F0B5         	call	_memset	;wreg free
 10690  01A8DC                     l1591:
 10691                           
 10692                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 10693  01A8DC  52E5               	movf	postdec1,f,c
 10694  01A8DE  52E5               	movf	postdec1,f,c
 10695  01A8E0  52E5               	movf	postdec1,f,c
 10696  01A8E2  0012               	return		;funcret
 10697  01A8E4                     __end_of_ringBufS_flush:
 10698                           	opt callstack 0
 10699                           
 10700 ;; *************** function _memset *****************
 10701 ;; Defined at:
 10702 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 10703 ;; Parameters:    Size  Location     Type
 10704 ;;  dest            2  [STACK] PTR void 
 10705 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10706 ;;  c               2  [STACK] int 
 10707 ;;  n               2  [STACK] unsigned int 
 10708 ;; Auto vars:     Size  Location     Type
 10709 ;;  s               2  [STACK] PTR unsigned char 
 10710 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10711 ;;  k               2  [STACK] unsigned int 
 10712 ;; Return value:  Size  Location     Type
 10713 ;;                  2  [STACK] PTR void 
 10714 ;; Registers used:
 10715 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10716 ;; Tracked objects:
 10717 ;;		On entry : 0/0
 10718 ;;		On exit  : 0/0
 10719 ;;		Unchanged: 0/0
 10720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10725 ;;Total ram usage:        0 bytes
 10726 ;; Hardware stack levels used:    1
 10727 ;; Hardware stack levels required when called:   15
 10728 ;; This function calls:
 10729 ;;		Nothing
 10730 ;; This function is called by:
 10731 ;;		_ringBufS_init
 10732 ;;		_ringBufS_flush
 10733 ;; This function uses a reentrant model
 10734 ;;
 10735                           
 10736                           	psect	text42
 10737  016B20                     __ptext42:
 10738                           	opt callstack 0
 10739  016B20                     _memset:
 10740                           	opt callstack 0
 10741                           
 10742                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10743  016B20  52E6               	movf	postinc1,f,c
 10744  016B22  52E6               	movf	postinc1,f,c
 10745  016B24  52E6               	movf	postinc1,f,c
 10746  016B26  52E6               	movf	postinc1,f,c
 10747                           
 10748                           ;stkvar	_dest @ sp[(-4)+-2]
 10749                           
 10750                           ;incstack = 0
 10751  016B28  0EFA               	movlw	-6
 10752  016B2A  006F FF8C  F00B    	movff	plusw1,btemp+10
 10753  016B30  0EFB               	movlw	-5
 10754  016B32  006F FF8C  F00C    	movff	plusw1,btemp+11
 10755                           
 10756                           ;stkvar	_s @ sp[(-4)+0]
 10757  016B38  0EFD               	movlw	-3
 10758  016B3A  0060  F033  FFE3   	movff	btemp+11,plusw1
 10759  016B40  0EFC               	movlw	-4
 10760  016B42  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10761                           
 10762                           ;stkvar	_n @ sp[(-4)+-6]
 10763  016B48  0EF6               	movlw	-10
 10764  016B4A  006F FF8C  F001    	movff	plusw1,btemp
 10765  016B50  0EF7               	movlw	-9
 10766  016B52  50E3               	movf	plusw1,w,c
 10767  016B54  1001               	iorwf	btemp^0,w,c
 10768  016B56  B4D8               	btfsc	status,2,c
 10769  016B58  D154               	goto	u10750
 10770                           
 10771                           ;stkvar	_c @ sp[(-4)+-4]
 10772                           ;stkvar	_s @ sp[(-4)+0]
 10773  016B5A  0EFC               	movlw	-4
 10774  016B5C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10775  016B62  0EFD               	movlw	-3
 10776  016B64  006F FF8F FFDA     	movff	plusw1,fsr2h
 10777  016B6A  0EF8               	movlw	-8
 10778  016B6C  006F FF8F FFDF     	movff	plusw1,indf2
 10779                           
 10780                           ;stkvar	_c @ sp[(-4)+-4]
 10781                           ;stkvar	_n @ sp[(-4)+-6]
 10782                           ;stkvar	_s @ sp[(-4)+0]
 10783  016B72  0EFC               	movlw	-4
 10784  016B74  006F FF8C  F00B    	movff	plusw1,btemp+10
 10785  016B7A  0EFD               	movlw	-3
 10786  016B7C  006F FF8C  F00C    	movff	plusw1,btemp+11
 10787  016B82  0EF6               	movlw	-10
 10788  016B84  50E3               	movf	plusw1,w,c
 10789  016B86  260B               	addwf	(btemp+10)^0,f,c
 10790  016B88  0EF7               	movlw	-9
 10791  016B8A  50E3               	movf	plusw1,w,c
 10792  016B8C  220C               	addwfc	(btemp+11)^0,f,c
 10793  016B8E  0EFF               	movlw	255
 10794  016B90  240B               	addwf	(btemp+10)^0,w,c
 10795  016B92  6ED9               	movwf	fsr2l,c
 10796  016B94  0EFF               	movlw	255
 10797  016B96  200C               	addwfc	(btemp+11)^0,w,c
 10798  016B98  6EDA               	movwf	fsr2h,c
 10799  016B9A  0EF8               	movlw	-8
 10800  016B9C  006F FF8F FFDF     	movff	plusw1,indf2
 10801                           
 10802                           ;stkvar	_n @ sp[(-4)+-6]
 10803  016BA2  0EF7               	movlw	-9
 10804  016BA4  50E3               	movf	plusw1,w,c
 10805  016BA6  E108               	bnz	l11667
 10806  016BA8  0EF6               	movlw	-10
 10807  016BAA  006F FF8C  F001    	movff	plusw1,btemp
 10808  016BB0  0E03               	movlw	3
 10809  016BB2  5E01               	subwf	btemp^0,f,c
 10810  016BB4  A0D8               	btfss	status,0,c
 10811  016BB6  D125               	goto	u10750
 10812  016BB8                     l11667:
 10813                           
 10814                           ;stkvar	_c @ sp[(-4)+-4]
 10815                           ;stkvar	_s @ sp[(-4)+0]
 10816  016BB8  0EFC               	movlw	-4
 10817  016BBA  006F FF8C  F00B    	movff	plusw1,btemp+10
 10818  016BC0  0EFD               	movlw	-3
 10819  016BC2  006F FF8C  F00C    	movff	plusw1,btemp+11
 10820  016BC8  0E01               	movlw	1
 10821  016BCA  240B               	addwf	(btemp+10)^0,w,c
 10822  016BCC  6ED9               	movwf	fsr2l,c
 10823  016BCE  0E00               	movlw	0
 10824  016BD0  200C               	addwfc	(btemp+11)^0,w,c
 10825  016BD2  6EDA               	movwf	fsr2h,c
 10826  016BD4  0EF8               	movlw	-8
 10827  016BD6  006F FF8F FFDF     	movff	plusw1,indf2
 10828                           
 10829                           ;stkvar	_c @ sp[(-4)+-4]
 10830                           ;stkvar	_s @ sp[(-4)+0]
 10831  016BDC  0EFC               	movlw	-4
 10832  016BDE  006F FF8C  F00B    	movff	plusw1,btemp+10
 10833  016BE4  0EFD               	movlw	-3
 10834  016BE6  006F FF8C  F00C    	movff	plusw1,btemp+11
 10835  016BEC  0E02               	movlw	2
 10836  016BEE  240B               	addwf	(btemp+10)^0,w,c
 10837  016BF0  6ED9               	movwf	fsr2l,c
 10838  016BF2  0E00               	movlw	0
 10839  016BF4  200C               	addwfc	(btemp+11)^0,w,c
 10840  016BF6  6EDA               	movwf	fsr2h,c
 10841  016BF8  0EF8               	movlw	-8
 10842  016BFA  006F FF8F FFDF     	movff	plusw1,indf2
 10843                           
 10844                           ;stkvar	_c @ sp[(-4)+-4]
 10845                           ;stkvar	_n @ sp[(-4)+-6]
 10846                           ;stkvar	_s @ sp[(-4)+0]
 10847  016C00  0EFC               	movlw	-4
 10848  016C02  006F FF8C  F00B    	movff	plusw1,btemp+10
 10849  016C08  0EFD               	movlw	-3
 10850  016C0A  006F FF8C  F00C    	movff	plusw1,btemp+11
 10851  016C10  0EF6               	movlw	-10
 10852  016C12  50E3               	movf	plusw1,w,c
 10853  016C14  260B               	addwf	(btemp+10)^0,f,c
 10854  016C16  0EF7               	movlw	-9
 10855  016C18  50E3               	movf	plusw1,w,c
 10856  016C1A  220C               	addwfc	(btemp+11)^0,f,c
 10857  016C1C  0EFE               	movlw	254
 10858  016C1E  240B               	addwf	(btemp+10)^0,w,c
 10859  016C20  6ED9               	movwf	fsr2l,c
 10860  016C22  0EFF               	movlw	255
 10861  016C24  200C               	addwfc	(btemp+11)^0,w,c
 10862  016C26  6EDA               	movwf	fsr2h,c
 10863  016C28  0EF8               	movlw	-8
 10864  016C2A  006F FF8F FFDF     	movff	plusw1,indf2
 10865                           
 10866                           ;stkvar	_c @ sp[(-4)+-4]
 10867                           ;stkvar	_n @ sp[(-4)+-6]
 10868                           ;stkvar	_s @ sp[(-4)+0]
 10869  016C30  0EFC               	movlw	-4
 10870  016C32  006F FF8C  F00B    	movff	plusw1,btemp+10
 10871  016C38  0EFD               	movlw	-3
 10872  016C3A  006F FF8C  F00C    	movff	plusw1,btemp+11
 10873  016C40  0EF6               	movlw	-10
 10874  016C42  50E3               	movf	plusw1,w,c
 10875  016C44  260B               	addwf	(btemp+10)^0,f,c
 10876  016C46  0EF7               	movlw	-9
 10877  016C48  50E3               	movf	plusw1,w,c
 10878  016C4A  220C               	addwfc	(btemp+11)^0,f,c
 10879  016C4C  0EFD               	movlw	253
 10880  016C4E  240B               	addwf	(btemp+10)^0,w,c
 10881  016C50  6ED9               	movwf	fsr2l,c
 10882  016C52  0EFF               	movlw	255
 10883  016C54  200C               	addwfc	(btemp+11)^0,w,c
 10884  016C56  6EDA               	movwf	fsr2h,c
 10885  016C58  0EF8               	movlw	-8
 10886  016C5A  006F FF8F FFDF     	movff	plusw1,indf2
 10887                           
 10888                           ;stkvar	_n @ sp[(-4)+-6]
 10889  016C60  0EF7               	movlw	-9
 10890  016C62  50E3               	movf	plusw1,w,c
 10891  016C64  E108               	bnz	l11673
 10892  016C66  0EF6               	movlw	-10
 10893  016C68  006F FF8C  F001    	movff	plusw1,btemp
 10894  016C6E  0E07               	movlw	7
 10895  016C70  5E01               	subwf	btemp^0,f,c
 10896  016C72  A0D8               	btfss	status,0,c
 10897  016C74  D0C6               	goto	u10750
 10898  016C76                     l11673:
 10899                           
 10900                           ;stkvar	_c @ sp[(-4)+-4]
 10901                           ;stkvar	_s @ sp[(-4)+0]
 10902  016C76  0EFC               	movlw	-4
 10903  016C78  006F FF8C  F00B    	movff	plusw1,btemp+10
 10904  016C7E  0EFD               	movlw	-3
 10905  016C80  006F FF8C  F00C    	movff	plusw1,btemp+11
 10906  016C86  0E03               	movlw	3
 10907  016C88  240B               	addwf	(btemp+10)^0,w,c
 10908  016C8A  6ED9               	movwf	fsr2l,c
 10909  016C8C  0E00               	movlw	0
 10910  016C8E  200C               	addwfc	(btemp+11)^0,w,c
 10911  016C90  6EDA               	movwf	fsr2h,c
 10912  016C92  0EF8               	movlw	-8
 10913  016C94  006F FF8F FFDF     	movff	plusw1,indf2
 10914                           
 10915                           ;stkvar	_c @ sp[(-4)+-4]
 10916                           ;stkvar	_n @ sp[(-4)+-6]
 10917                           ;stkvar	_s @ sp[(-4)+0]
 10918  016C9A  0EFC               	movlw	-4
 10919  016C9C  006F FF8C  F00B    	movff	plusw1,btemp+10
 10920  016CA2  0EFD               	movlw	-3
 10921  016CA4  006F FF8C  F00C    	movff	plusw1,btemp+11
 10922  016CAA  0EF6               	movlw	-10
 10923  016CAC  50E3               	movf	plusw1,w,c
 10924  016CAE  260B               	addwf	(btemp+10)^0,f,c
 10925  016CB0  0EF7               	movlw	-9
 10926  016CB2  50E3               	movf	plusw1,w,c
 10927  016CB4  220C               	addwfc	(btemp+11)^0,f,c
 10928  016CB6  0EFC               	movlw	252
 10929  016CB8  240B               	addwf	(btemp+10)^0,w,c
 10930  016CBA  6ED9               	movwf	fsr2l,c
 10931  016CBC  0EFF               	movlw	255
 10932  016CBE  200C               	addwfc	(btemp+11)^0,w,c
 10933  016CC0  6EDA               	movwf	fsr2h,c
 10934  016CC2  0EF8               	movlw	-8
 10935  016CC4  006F FF8F FFDF     	movff	plusw1,indf2
 10936                           
 10937                           ;stkvar	_n @ sp[(-4)+-6]
 10938  016CCA  0EF7               	movlw	-9
 10939  016CCC  50E3               	movf	plusw1,w,c
 10940  016CCE  E108               	bnz	l11679
 10941  016CD0  0EF6               	movlw	-10
 10942  016CD2  006F FF8C  F001    	movff	plusw1,btemp
 10943  016CD8  0E09               	movlw	9
 10944  016CDA  5E01               	subwf	btemp^0,f,c
 10945  016CDC  A0D8               	btfss	status,0,c
 10946  016CDE  D091               	goto	u10750
 10947  016CE0                     l11679:
 10948                           
 10949                           ;stkvar	_s @ sp[(-4)+0]
 10950  016CE0  0EFC               	movlw	-4
 10951  016CE2  006F FF8C  F00B    	movff	plusw1,btemp+10
 10952  016CE8  1E0B               	comf	(btemp+10)^0,f,c
 10953  016CEA  0EFD               	movlw	-3
 10954  016CEC  006F FF8C  F00C    	movff	plusw1,btemp+11
 10955  016CF2  1E0C               	comf	(btemp+11)^0,f,c
 10956  016CF4  2A0B               	incf	(btemp+10)^0,f,c
 10957  016CF6  B4D8               	btfsc	status,2,c
 10958  016CF8  2A0C               	incf	(btemp+11)^0,f,c
 10959  016CFA  0E03               	movlw	3
 10960  016CFC  160B               	andwf	(btemp+10)^0,f,c
 10961  016CFE  0E00               	movlw	0
 10962  016D00  160C               	andwf	(btemp+11)^0,f,c
 10963                           
 10964                           ;stkvar	_k @ sp[(-4)+2]
 10965  016D02  0EFE               	movlw	-2
 10966  016D04  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10967  016D0A  0EFF               	movlw	-1
 10968  016D0C  0060  F033  FFE3   	movff	btemp+11,plusw1
 10969                           
 10970                           ;stkvar	_k @ sp[(-4)+2]
 10971                           ;stkvar	_s @ sp[(-4)+0]
 10972  016D12  0EFC               	movlw	-4
 10973  016D14  50E3               	movf	plusw1,w,c
 10974  016D16  6E01               	movwf	btemp^0,c
 10975  016D18  0EFE               	movlw	-2
 10976  016D1A  50E3               	movf	plusw1,w,c
 10977  016D1C  2601               	addwf	btemp^0,f,c
 10978  016D1E  0EFC               	movlw	-4
 10979  016D20  0060  F007  FFE3   	movff	btemp,plusw1
 10980  016D26  0EFD               	movlw	-3
 10981  016D28  50E3               	movf	plusw1,w,c
 10982  016D2A  6E01               	movwf	btemp^0,c
 10983  016D2C  0EFF               	movlw	-1
 10984  016D2E  50E3               	movf	plusw1,w,c
 10985  016D30  2201               	addwfc	btemp^0,f,c
 10986  016D32  0EFD               	movlw	-3
 10987  016D34  0060  F007  FFE3   	movff	btemp,plusw1
 10988                           
 10989                           ;stkvar	_k @ sp[(-4)+2]
 10990                           ;stkvar	_n @ sp[(-4)+-6]
 10991  016D3A  0EF6               	movlw	-10
 10992  016D3C  50E3               	movf	plusw1,w,c
 10993  016D3E  6E01               	movwf	btemp^0,c
 10994  016D40  0EFE               	movlw	-2
 10995  016D42  50E3               	movf	plusw1,w,c
 10996  016D44  5E01               	subwf	btemp^0,f,c
 10997  016D46  0EF6               	movlw	-10
 10998  016D48  0060  F007  FFE3   	movff	btemp,plusw1
 10999  016D4E  0EF7               	movlw	-9
 11000  016D50  50E3               	movf	plusw1,w,c
 11001  016D52  6E01               	movwf	btemp^0,c
 11002  016D54  0EFF               	movlw	-1
 11003  016D56  50E3               	movf	plusw1,w,c
 11004  016D58  5A01               	subwfb	btemp^0,f,c
 11005  016D5A  0EF7               	movlw	-9
 11006  016D5C  0060  F007  FFE3   	movff	btemp,plusw1
 11007  016D62  0EFC               	movlw	252
 11008  016D64  6E0B               	movwf	(btemp+10)^0,c
 11009  016D66  0EFF               	movlw	255
 11010  016D68  6E0C               	movwf	(btemp+11)^0,c
 11011                           
 11012                           ;stkvar	_n @ sp[(-4)+-6]
 11013  016D6A  0EF6               	movlw	-10
 11014  016D6C  006F FF8C  F001    	movff	plusw1,btemp
 11015  016D72  500B               	movf	(btemp+10)^0,w,c
 11016  016D74  1601               	andwf	btemp^0,f,c
 11017  016D76  0EF6               	movlw	-10
 11018  016D78  0060  F007  FFE3   	movff	btemp,plusw1
 11019  016D7E  0EF7               	movlw	-9
 11020  016D80  006F FF8C  F001    	movff	plusw1,btemp
 11021  016D86  500C               	movf	(btemp+11)^0,w,c
 11022  016D88  1601               	andwf	btemp^0,f,c
 11023  016D8A  0EF7               	movlw	-9
 11024  016D8C  D02E               	goto	L9
 11025  016D8E                     l11687:
 11026                           
 11027                           ;stkvar	_c @ sp[(-4)+-4]
 11028                           ;stkvar	_s @ sp[(-4)+0]
 11029  016D8E  0EFC               	movlw	-4
 11030  016D90  006F FF8F FFD9     	movff	plusw1,fsr2l
 11031  016D96  0EFD               	movlw	-3
 11032  016D98  006F FF8F FFDA     	movff	plusw1,fsr2h
 11033  016D9E  0EF8               	movlw	-8
 11034  016DA0  006F FF8F FFDF     	movff	plusw1,indf2
 11035                           
 11036                           ;stkvar	_n @ sp[(-4)+-6]
 11037  016DA6  0EF6               	movlw	-10
 11038  016DA8  006F FF8C  F001    	movff	plusw1,btemp
 11039  016DAE  0E01               	movlw	1
 11040  016DB0  5E01               	subwf	btemp^0,f,c
 11041  016DB2  0EF6               	movlw	-10
 11042  016DB4  0060  F007  FFE3   	movff	btemp,plusw1
 11043  016DBA  0EF7               	movlw	-9
 11044  016DBC  006F FF8C  F001    	movff	plusw1,btemp
 11045  016DC2  0E00               	movlw	0
 11046  016DC4  5A01               	subwfb	btemp^0,f,c
 11047  016DC6  0EF7               	movlw	-9
 11048  016DC8  0060  F007  FFE3   	movff	btemp,plusw1
 11049                           
 11050                           ;stkvar	_s @ sp[(-4)+0]
 11051  016DCE  0EFC               	movlw	-4
 11052  016DD0  50E3               	movf	plusw1,w,c
 11053  016DD2  0F01               	addlw	1
 11054  016DD4  6E01               	movwf	btemp^0,c
 11055  016DD6  0EFC               	movlw	-4
 11056  016DD8  0060  F007  FFE3   	movff	btemp,plusw1
 11057  016DDE  6A01               	clrf	btemp^0,c
 11058  016DE0  0EFD               	movlw	-3
 11059  016DE2  50E3               	movf	plusw1,w,c
 11060  016DE4  2001               	addwfc	btemp^0,w,c
 11061  016DE6  6E01               	movwf	btemp^0,c
 11062  016DE8  0EFD               	movlw	-3
 11063  016DEA                     L9:
 11064  016DEA  0060  F007  FFE3   	movff	btemp,plusw1
 11065                           
 11066                           ;stkvar	_n @ sp[(-4)+-6]
 11067  016DF0  0EF6               	movlw	-10
 11068  016DF2  006F FF8C  F001    	movff	plusw1,btemp
 11069  016DF8  0EF7               	movlw	-9
 11070  016DFA  50E3               	movf	plusw1,w,c
 11071  016DFC  1001               	iorwf	btemp^0,w,c
 11072  016DFE  A4D8               	btfss	status,2,c
 11073  016E00  D7C6               	goto	l11687
 11074  016E02                     u10750:
 11075                           
 11076                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 11077  016E02  0EF6               	movlw	246
 11078  016E04  26E1               	addwf	fsr1l,f,c
 11079  016E06  0EFF               	movlw	255
 11080  016E08  22E2               	addwfc	fsr1h,f,c
 11081  016E0A  0012               	return		;funcret
 11082  016E0C                     __end_of_memset:
 11083                           	opt callstack 0
 11084                           
 11085 ;; *************** function _printf *****************
 11086 ;; Defined at:
 11087 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 11088 ;; Parameters:    Size  Location     Type
 11089 ;;  fmt             2  [STACK] PTR const unsigned char 
 11090 ;;		 -> STR_45(3), STR_44(3), STR_43(3), 
 11091 ;; Auto vars:     Size  Location     Type
 11092 ;;  ap              2  [STACK] PTR void [1]
 11093 ;;		 -> ?_printf(2), ?_sprintf(2), 
 11094 ;;  ret             2    0        int 
 11095 ;; Return value:  Size  Location     Type
 11096 ;;                  2  [STACK] int 
 11097 ;; Registers used:
 11098 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11099 ;; Tracked objects:
 11100 ;;		On entry : 3F/3B
 11101 ;;		On exit  : 3F/0
 11102 ;;		Unchanged: 0/0
 11103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11108 ;;Total ram usage:        0 bytes
 11109 ;; Hardware stack levels used:    1
 11110 ;; Hardware stack levels required when called:   23
 11111 ;; This function calls:
 11112 ;;		_vfprintf
 11113 ;; This function is called by:
 11114 ;;		_eaDogM_WriteString
 11115 ;;		_send_lcd_cmd_dma
 11116 ;; This function uses a reentrant model
 11117 ;;
 11118                           
 11119                           	psect	text43
 11120  01ADE4                     __ptext43:
 11121                           	opt callstack 0
 11122  01ADE4                     _printf:
 11123                           	opt callstack 0
 11124                           
 11125                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11126  01ADE4  52E6               	movf	postinc1,f,c
 11127  01ADE6  52E6               	movf	postinc1,f,c
 11128                           
 11129                           ;stkvar	?_printf @ sp[(-2)+-3]
 11130                           
 11131                           ;incstack = 0
 11132  01ADE8  0EFB               	movlw	251
 11133  01ADEA  24E1               	addwf	fsr1l,w,c
 11134  01ADEC  6E0B               	movwf	(btemp+10)^0,c
 11135  01ADEE  0EFF               	movlw	255
 11136  01ADF0  20E2               	addwfc	fsr1h,w,c
 11137  01ADF2  6E0C               	movwf	(btemp+11)^0,c
 11138                           
 11139                           ;stkvar	_ap @ sp[(-2)+0]
 11140  01ADF4  0EFF               	movlw	-1
 11141  01ADF6  0060  F033  FFE3   	movff	btemp+11,plusw1
 11142  01ADFC  0EFE               	movlw	-2
 11143  01ADFE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11144                           
 11145                           ;stkvar	_ap @ sp[(-2)+0]
 11146  01AE04  0EFE               	movlw	254
 11147  01AE06  24E1               	addwf	fsr1l,w,c
 11148  01AE08  6E01               	movwf	btemp^0,c
 11149  01AE0A  0EFF               	movlw	255
 11150  01AE0C  20E2               	addwfc	fsr1h,w,c
 11151  01AE0E  6E02               	movwf	(btemp+1)^0,c
 11152  01AE10  0060  F007  FFE6   	movff	btemp,postinc1
 11153  01AE16  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11154                           
 11155                           ;stkvar	_fmt @ sp[(-4)+-3]
 11156  01AE1C  0EF9               	movlw	-7
 11157  01AE1E  006F FF8F FFE6     	movff	plusw1,postinc1
 11158  01AE24  006F FF8F FFE6     	movff	plusw1,postinc1
 11159  01AE2A  0E00               	movlw	0
 11160  01AE2C  6EE6               	movwf	postinc1,c
 11161  01AE2E  0E00               	movlw	0
 11162  01AE30  6EE6               	movwf	postinc1,c
 11163  01AE32  EC44  F0D2         	call	_vfprintf	;wreg free
 11164                           
 11165                           ; BSR set to: 0
 11166                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 11167  01AE36  52E5               	movf	postdec1,f,c
 11168  01AE38  52E5               	movf	postdec1,f,c
 11169  01AE3A  52E5               	movf	postdec1,f,c
 11170  01AE3C  50E7               	movf	indf1,w,c
 11171  01AE3E  5EE1               	subwf	fsr1l,f,c
 11172  01AE40  0E00               	movlw	0
 11173  01AE42  5AE2               	subwfb	fsr1h,f,c
 11174  01AE44  0012               	return		;funcret
 11175  01AE46                     __end_of_printf:
 11176                           	opt callstack 0
 11177                           
 11178 ;; *************** function _vfprintf *****************
 11179 ;; Defined at:
 11180 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11181 ;; Parameters:    Size  Location     Type
 11182 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11183 ;;		 -> f(6), NULL(0), 
 11184 ;;  fmt             2  [STACK] PTR const unsigned char 
 11185 ;;		 -> STR_65(103), STR_63(3), STR_62(3), STR_61(19), 
 11186 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 11187 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 11188 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 11189 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 11190 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 11191 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 11192 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 11193 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 11194 ;;		 -> STR_26(19), STR_25(20), STR_24(19), STR_23(19), 
 11195 ;;		 -> STR_22(20), STR_21(17), STR_20(16), STR_19(16), 
 11196 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 11197 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 11198 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 11199 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 11200 ;;		 -> STR_1(17), 
 11201 ;;  ap              2  [STACK] PTR PTR void 
 11202 ;;		 -> ap(2), ap(2), 
 11203 ;; Auto vars:     Size  Location     Type
 11204 ;;  cfmt            2  [STACK] PTR unsigned char 
 11205 ;;		 -> STR_65(103), STR_63(3), STR_62(3), STR_61(19), 
 11206 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 11207 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 11208 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 11209 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 11210 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 11211 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 11212 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 11213 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 11214 ;;		 -> STR_26(19), STR_25(20), STR_24(19), STR_23(19), 
 11215 ;;		 -> STR_22(20), STR_21(17), STR_20(16), STR_19(16), 
 11216 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 11217 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 11218 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 11219 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 11220 ;;		 -> STR_1(17), 
 11221 ;; Return value:  Size  Location     Type
 11222 ;;                  2  [STACK] int 
 11223 ;; Registers used:
 11224 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11225 ;; Tracked objects:
 11226 ;;		On entry : 0/2
 11227 ;;		On exit  : 3F/0
 11228 ;;		Unchanged: 0/0
 11229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11234 ;;Total ram usage:        0 bytes
 11235 ;; Hardware stack levels used:    1
 11236 ;; Hardware stack levels required when called:   22
 11237 ;; This function calls:
 11238 ;;		_vfpfcnvrt
 11239 ;; This function is called by:
 11240 ;;		_sprintf
 11241 ;;		_printf
 11242 ;; This function uses a reentrant model
 11243 ;;
 11244                           
 11245                           	psect	text44
 11246  01A488                     __ptext44:
 11247                           	opt callstack 0
 11248  01A488                     _vfprintf:
 11249                           	opt callstack 0
 11250                           
 11251                           ; BSR set to: 0
 11252                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11253  01A488  52E6               	movf	postinc1,f,c
 11254  01A48A  52E6               	movf	postinc1,f,c
 11255                           
 11256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 11257                           ;stkvar	_fmt @ sp[(-2)+-4]
 11258                           
 11259                           ;incstack = 0
 11260 ;; hardware stack exceeded
 11261  01A48C  0EFA               	movlw	-6
 11262  01A48E  006F FF8C  F00B    	movff	plusw1,btemp+10
 11263  01A494  0EFB               	movlw	-5
 11264  01A496  006F FF8C  F00C    	movff	plusw1,btemp+11
 11265                           
 11266                           ;stkvar	_cfmt @ sp[(-2)+0]
 11267  01A49C  0EFF               	movlw	-1
 11268  01A49E  0060  F033  FFE3   	movff	btemp+11,plusw1
 11269  01A4A4  0EFE               	movlw	-2
 11270  01A4A6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11271                           
 11272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 11273  01A4AC  0100               	movlb	0	; () banked
 11274  01A4AE  6BAE               	clrf	_nout& (0+255),b
 11275  01A4B0  6BAF               	clrf	(_nout+1)& (0+255),b
 11276                           
 11277                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 11278  01A4B2  D021               	goto	l12511
 11279  01A4B4                     l12509:
 11280                           
 11281                           ; BSR set to: 0
 11282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 11283                           ;stkvar	_ap @ sp[(-2)+-6]
 11284  01A4B4  0EF8               	movlw	-8
 11285  01A4B6  006F FF8F FFE6     	movff	plusw1,postinc1
 11286  01A4BC  006F FF8F FFE6     	movff	plusw1,postinc1
 11287                           
 11288                           ;stkvar	_cfmt @ sp[(-4)+0]
 11289  01A4C2  0EFC               	movlw	252
 11290  01A4C4  24E1               	addwf	fsr1l,w,c
 11291  01A4C6  6E01               	movwf	btemp^0,c
 11292  01A4C8  0EFF               	movlw	255
 11293  01A4CA  20E2               	addwfc	fsr1h,w,c
 11294  01A4CC  6E02               	movwf	(btemp+1)^0,c
 11295  01A4CE  0060  F007  FFE6   	movff	btemp,postinc1
 11296  01A4D4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11297                           
 11298                           ;stkvar	_fp @ sp[(-6)+-2]
 11299  01A4DA  0EF8               	movlw	-8
 11300  01A4DC  006F FF8F FFE6     	movff	plusw1,postinc1
 11301  01A4E2  006F FF8F FFE6     	movff	plusw1,postinc1
 11302  01A4E8  ECC9  F091         	call	_vfpfcnvrt	;wreg free
 11303  01A4EC  5001               	movf	btemp^0,w,c
 11304  01A4EE  0100               	movlb	0	; () banked
 11305  01A4F0  27AE               	addwf	_nout& (0+255),f,b
 11306  01A4F2  5002               	movf	(btemp+1)^0,w,c
 11307  01A4F4  23AF               	addwfc	(_nout+1)& (0+255),f,b
 11308  01A4F6                     l12511:
 11309                           
 11310                           ; BSR set to: 0
 11311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 11312                           ;stkvar	_cfmt @ sp[(-2)+0]
 11313  01A4F6  50E1               	movf	fsr1l,w,c
 11314  01A4F8  0FFE               	addlw	-2
 11315  01A4FA  6ED9               	movwf	fsr2l,c
 11316  01A4FC  50E2               	movf	fsr1h,w,c
 11317  01A4FE  6EDA               	movwf	fsr2h,c
 11318  01A500  0EFF               	movlw	255
 11319  01A502  22DA               	addwfc	fsr2h,f,c
 11320  01A504  006F FF7B FFF6     	movff	postinc2,tblptrl
 11321  01A50A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11322  01A510                     	if	0	;tblptru may be non-zero
 11323  01A510                     	endif
 11324  01A510                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11325  01A510  0E00               	movlw	low (__mediumconst shr (0+16))
 11326  01A512  6EF8               	movwf	tblptru,c
 11327  01A514                     	endif
 11328  01A514  0008               	tblrd		*
 11329  01A516  50F5               	movf	tablat,w,c
 11330  01A518  0900               	iorlw	0
 11331  01A51A  A4D8               	btfss	status,2,c
 11332  01A51C  D7CB               	goto	l12509
 11333                           
 11334                           ; BSR set to: 0
 11335                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 11336  01A51E  0060  F2B8  F001   	movff	_nout,btemp
 11337  01A524  0060  F2BC  F002   	movff	_nout+1,btemp+1
 11338                           
 11339                           ; BSR set to: 0
 11340                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 11341  01A52A  0EF8               	movlw	248
 11342  01A52C  26E1               	addwf	fsr1l,f,c
 11343  01A52E  0EFF               	movlw	255
 11344  01A530  22E2               	addwfc	fsr1h,f,c
 11345  01A532  0012               	return		;funcret
 11346  01A534                     __end_of_vfprintf:
 11347                           	opt callstack 0
 11348                           
 11349 ;; *************** function _vfpfcnvrt *****************
 11350 ;; Defined at:
 11351 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11352 ;; Parameters:    Size  Location     Type
 11353 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11354 ;;		 -> f(6), NULL(0), 
 11355 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 11356 ;;		 -> cfmt(2), 
 11357 ;;  ap              2  [STACK] PTR PTR void 
 11358 ;;		 -> ap(2), ap(2), 
 11359 ;; Auto vars:     Size  Location     Type
 11360 ;;  llu             8  [STACK] unsigned long long 
 11361 ;;  ll              8  [STACK] long long 
 11362 ;;  f               4  [STACK] long long 
 11363 ;;  ct              3  [STACK] unsigned char [3]
 11364 ;;  vp              3    0        PTR void 
 11365 ;;  cp              2  [STACK] PTR unsigned char 
 11366 ;;		 -> ?_printf(2), ?_sprintf(2), STR_47(9), STR_46(12), 
 11367 ;;		 -> D.lcd(480), D(482), T(144), STR_3(6), 
 11368 ;;		 -> V(191), 
 11369 ;;  i               2    0        int 
 11370 ;;  done            2    0        int 
 11371 ;;  c               1  [STACK] unsigned char 
 11372 ;; Return value:  Size  Location     Type
 11373 ;;                  2  [STACK] int 
 11374 ;; Registers used:
 11375 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11376 ;; Tracked objects:
 11377 ;;		On entry : 0/0
 11378 ;;		On exit  : 0/0
 11379 ;;		Unchanged: 0/0
 11380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11385 ;;Total ram usage:        0 bytes
 11386 ;; Hardware stack levels used:    1
 11387 ;; Hardware stack levels required when called:   21
 11388 ;; This function calls:
 11389 ;;		_atoi
 11390 ;;		_ctoa
 11391 ;;		_dtoa
 11392 ;;		_efgtoa
 11393 ;;		_fputc
 11394 ;;		_isdigit
 11395 ;;		_isupper
 11396 ;;		_stoa
 11397 ;;		_strncmp
 11398 ;;		_tolower
 11399 ;;		_utoa
 11400 ;;		_xtoa
 11401 ;; This function is called by:
 11402 ;;		_vfprintf
 11403 ;; This function uses a reentrant model
 11404 ;;
 11405                           
 11406                           	psect	text45
 11407  012392                     __ptext45:
 11408                           	opt callstack 0
 11409  012392                     _vfpfcnvrt:
 11410                           	opt callstack 0
 11411                           
 11412                           ; BSR set to: 0
 11413                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11414  012392  0E20               	movlw	32
 11415  012394  26E1               	addwf	fsr1l,f,c
 11416  012396  0E00               	movlw	0
 11417  012398  22E2               	addwfc	fsr1h,f,c
 11418                           
 11419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 11420                           ;stkvar	_fmt @ sp[(-32)+-4]
 11421                           
 11422                           ;incstack = 0
 11423 ;; hardware stack exceeded
 11424  01239A  0EDC               	movlw	-36
 11425  01239C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11426  0123A2  0EDD               	movlw	-35
 11427  0123A4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11428  0123AA  006F FF7B FFF6     	movff	postinc2,tblptrl
 11429  0123B0  006F FF77 FFF7     	movff	postdec2,tblptrh
 11430  0123B6                     	if	0	;tblptru may be non-zero
 11431  0123B6                     	endif
 11432  0123B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11433  0123B6  0E00               	movlw	low (__mediumconst shr (0+16))
 11434  0123B8  6EF8               	movwf	tblptru,c
 11435  0123BA                     	endif
 11436  0123BA  0008               	tblrd		*
 11437  0123BC  50F5               	movf	tablat,w,c
 11438  0123BE  0A25               	xorlw	37
 11439  0123C0  A4D8               	btfss	status,2,c
 11440  0123C2  EF70  F099         	goto	l12455
 11441                           
 11442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 11443                           ;stkvar	_fmt @ sp[(-32)+-4]
 11444  0123C6  0EDC               	movlw	-36
 11445  0123C8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11446  0123CE  0EDD               	movlw	-35
 11447  0123D0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11448  0123D6  2ADE               	incf	postinc2,f,c
 11449  0123D8  0E00               	movlw	0
 11450  0123DA  22DD               	addwfc	postdec2,f,c
 11451                           
 11452                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 11453  0123DC  6A3A               	clrf	_width^0,c
 11454  0123DE  6A3B               	clrf	(_width+1)^0,c
 11455  0123E0  6A3E               	clrf	_flags^0,c
 11456  0123E2  6A3F               	clrf	(_flags+1)^0,c
 11457                           
 11458                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 11459  0123E4  683C               	setf	_prec^0,c
 11460  0123E6  683D               	setf	(_prec+1)^0,c
 11461                           
 11462                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 11463                           ;stkvar	_fmt @ sp[(-32)+-4]
 11464  0123E8  0EDC               	movlw	-36
 11465  0123EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11466  0123F0  0EDD               	movlw	-35
 11467  0123F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11468  0123F8  006F FF7B FFF6     	movff	postinc2,tblptrl
 11469  0123FE  006F FF77 FFF7     	movff	postdec2,tblptrh
 11470  012404                     	if	0	;tblptru may be non-zero
 11471  012404                     	endif
 11472  012404                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11473  012404  0E00               	movlw	low (__mediumconst shr (0+16))
 11474  012406  6EF8               	movwf	tblptru,c
 11475  012408                     	endif
 11476  012408  0008               	tblrd		*
 11477  01240A  50F5               	movf	tablat,w,c
 11478  01240C  0A2A               	xorlw	42
 11479  01240E  A4D8               	btfss	status,2,c
 11480  012410  D031               	goto	l12273
 11481                           
 11482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 11483                           ;stkvar	_fmt @ sp[(-32)+-4]
 11484  012412  0EDC               	movlw	-36
 11485  012414  006F FF8F FFD9     	movff	plusw1,fsr2l
 11486  01241A  0EDD               	movlw	-35
 11487  01241C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11488  012422  2ADE               	incf	postinc2,f,c
 11489  012424  0E00               	movlw	0
 11490  012426  22DD               	addwfc	postdec2,f,c
 11491                           
 11492                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 11493                           ;stkvar	_ap @ sp[(-32)+-6]
 11494  012428  0EDA               	movlw	-38
 11495  01242A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11496  012430  0EDB               	movlw	-37
 11497  012432  006F FF8F FFDA     	movff	plusw1,fsr2h
 11498  012438  0E02               	movlw	2
 11499  01243A  5EDE               	subwf	postinc2,f,c
 11500  01243C  0E00               	movlw	0
 11501  01243E  5ADD               	subwfb	postdec2,f,c
 11502  012440  006F FF78  F00B    	movff	postinc2,btemp+10
 11503  012446  006F FF74  F00C    	movff	postdec2,btemp+11
 11504  01244C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11505  012452  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11506  012458  006F FF78  F03A    	movff	postinc2,_width
 11507  01245E  006F FF74  F03B    	movff	postdec2,_width+1
 11508                           
 11509                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 11510  012464  AE3B               	btfss	(_width+1)^0,7,c
 11511  012466  D066               	goto	u11880
 11512                           
 11513                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 11514  012468  803E               	bsf	_flags^0,0,c
 11515                           
 11516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 11517  01246A  6C3A               	negf	_width^0,c
 11518  01246C  1E3B               	comf	(_width+1)^0,f,c
 11519  01246E  B0D8               	btfsc	status,0,c
 11520  012470  2A3B               	incf	(_width+1)^0,f,c
 11521  012472  D060               	goto	u11880
 11522  012474                     l12273:
 11523                           
 11524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 11525                           ;stkvar	_fmt @ sp[(-32)+-4]
 11526  012474  0EDC               	movlw	-36
 11527  012476  006F FF8F FFD9     	movff	plusw1,fsr2l
 11528  01247C  0EDD               	movlw	-35
 11529  01247E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11530  012484  006F FF78  F00B    	movff	postinc2,btemp+10
 11531  01248A  006F FF74  F00C    	movff	postdec2,btemp+11
 11532  012490  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11533  012496  0060  F033  FFE6   	movff	btemp+11,postinc1
 11534  01249C  EC0D  F0BB         	call	_atoi	;wreg free
 11535  0124A0  0060  F004  F03A   	movff	btemp,_width
 11536  0124A6  0060  F008  F03B   	movff	btemp+1,_width+1
 11537                           
 11538                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11539  0124AC  D00B               	goto	l12277
 11540  0124AE                     l12275:
 11541                           
 11542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 11543                           ;stkvar	_fmt @ sp[(-32)+-4]
 11544  0124AE  0EDC               	movlw	-36
 11545  0124B0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11546  0124B6  0EDD               	movlw	-35
 11547  0124B8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11548  0124BE  2ADE               	incf	postinc2,f,c
 11549  0124C0  0E00               	movlw	0
 11550  0124C2  22DD               	addwfc	postdec2,f,c
 11551  0124C4                     l12277:
 11552  0124C4  0ED0               	movlw	208
 11553  0124C6  6E0B               	movwf	(btemp+10)^0,c
 11554  0124C8  0EFF               	movlw	255
 11555  0124CA  6E0C               	movwf	(btemp+11)^0,c
 11556                           
 11557                           ;stkvar	_fmt @ sp[(-32)+-4]
 11558  0124CC  0EDC               	movlw	-36
 11559  0124CE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11560  0124D4  0EDD               	movlw	-35
 11561  0124D6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11562  0124DC  006F FF7B FFF6     	movff	postinc2,tblptrl
 11563  0124E2  006F FF77 FFF7     	movff	postdec2,tblptrh
 11564  0124E8                     	if	0	;tblptru may be non-zero
 11565  0124E8                     	endif
 11566  0124E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11567  0124E8  0E00               	movlw	low (__mediumconst shr (0+16))
 11568  0124EA  6EF8               	movwf	tblptru,c
 11569  0124EC                     	endif
 11570  0124EC  0008               	tblrd		*
 11571  0124EE  50F5               	movf	tablat,w,c
 11572  0124F0  6E09               	movwf	(btemp+8)^0,c
 11573  0124F2  6A0A               	clrf	(btemp+9)^0,c
 11574  0124F4  500B               	movf	(btemp+10)^0,w,c
 11575  0124F6  2609               	addwf	(btemp+8)^0,f,c
 11576  0124F8  500C               	movf	(btemp+11)^0,w,c
 11577  0124FA  220A               	addwfc	(btemp+9)^0,f,c
 11578  0124FC  500A               	movf	(btemp+9)^0,w,c
 11579  0124FE  E106               	bnz	u11860
 11580  012500  0E0A               	movlw	10
 11581  012502  5C09               	subwf	(btemp+8)^0,w,c
 11582  012504  B0D8               	btfsc	status,0,c
 11583  012506  D002               	goto	u11860
 11584  012508  0E01               	movlw	1
 11585  01250A  D001               	goto	u11870
 11586  01250C                     u11860:
 11587  01250C  0E00               	movlw	0
 11588  01250E                     u11870:
 11589  01250E  6E0B               	movwf	(btemp+10)^0,c
 11590  012510  6A0C               	clrf	(btemp+11)^0,c
 11591                           
 11592                           ;stkvar	_vfpfcnvrt$5544 @ sp[(-32)+4]
 11593  012512  0EE4               	movlw	-28
 11594  012514  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11595  01251A  0EE5               	movlw	-27
 11596  01251C  0060  F033  FFE3   	movff	btemp+11,plusw1
 11597                           
 11598                           ;stkvar	_vfpfcnvrt$5544 @ sp[(-32)+4]
 11599  012522  0EE4               	movlw	-28
 11600  012524  006F FF8C  F001    	movff	plusw1,btemp
 11601  01252A  0EE5               	movlw	-27
 11602  01252C  50E3               	movf	plusw1,w,c
 11603  01252E  1001               	iorwf	btemp^0,w,c
 11604  012530  A4D8               	btfss	status,2,c
 11605  012532  D7BD               	goto	l12275
 11606  012534                     u11880:
 11607                           
 11608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 11609                           ;stkvar	_fmt @ sp[(-32)+-4]
 11610  012534  0EDC               	movlw	-36
 11611  012536  006F FF8F FFD9     	movff	plusw1,fsr2l
 11612  01253C  0EDD               	movlw	-35
 11613  01253E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11614  012544  006F FF7B FFF6     	movff	postinc2,tblptrl
 11615  01254A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11616  012550                     	if	0	;tblptru may be non-zero
 11617  012550                     	endif
 11618  012550                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11619  012550  0E00               	movlw	low (__mediumconst shr (0+16))
 11620  012552  6EF8               	movwf	tblptru,c
 11621  012554                     	endif
 11622  012554  0008               	tblrd		*
 11623  012556  50F5               	movf	tablat,w,c
 11624  012558  0A2E               	xorlw	46
 11625  01255A  A4D8               	btfss	status,2,c
 11626  01255C  D0AC               	goto	u11930
 11627                           
 11628                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 11629  01255E  6A3C               	clrf	_prec^0,c
 11630  012560  6A3D               	clrf	(_prec+1)^0,c
 11631                           
 11632                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 11633                           ;stkvar	_fmt @ sp[(-32)+-4]
 11634  012562  0EDC               	movlw	-36
 11635  012564  006F FF8F FFD9     	movff	plusw1,fsr2l
 11636  01256A  0EDD               	movlw	-35
 11637  01256C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11638  012572  2ADE               	incf	postinc2,f,c
 11639  012574  0E00               	movlw	0
 11640  012576  22DD               	addwfc	postdec2,f,c
 11641                           
 11642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 11643                           ;stkvar	_fmt @ sp[(-32)+-4]
 11644  012578  0EDC               	movlw	-36
 11645  01257A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11646  012580  0EDD               	movlw	-35
 11647  012582  006F FF8F FFDA     	movff	plusw1,fsr2h
 11648  012588  006F FF7B FFF6     	movff	postinc2,tblptrl
 11649  01258E  006F FF77 FFF7     	movff	postdec2,tblptrh
 11650  012594                     	if	0	;tblptru may be non-zero
 11651  012594                     	endif
 11652  012594                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11653  012594  0E00               	movlw	low (__mediumconst shr (0+16))
 11654  012596  6EF8               	movwf	tblptru,c
 11655  012598                     	endif
 11656  012598  0008               	tblrd		*
 11657  01259A  50F5               	movf	tablat,w,c
 11658  01259C  0A2A               	xorlw	42
 11659  01259E  A4D8               	btfss	status,2,c
 11660  0125A0  D02A               	goto	l12295
 11661                           
 11662                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 11663                           ;stkvar	_fmt @ sp[(-32)+-4]
 11664  0125A2  0EDC               	movlw	-36
 11665  0125A4  006F FF8F FFD9     	movff	plusw1,fsr2l
 11666  0125AA  0EDD               	movlw	-35
 11667  0125AC  006F FF8F FFDA     	movff	plusw1,fsr2h
 11668  0125B2  2ADE               	incf	postinc2,f,c
 11669  0125B4  0E00               	movlw	0
 11670  0125B6  22DD               	addwfc	postdec2,f,c
 11671                           
 11672                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 11673                           ;stkvar	_ap @ sp[(-32)+-6]
 11674  0125B8  0EDA               	movlw	-38
 11675  0125BA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11676  0125C0  0EDB               	movlw	-37
 11677  0125C2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11678  0125C8  0E02               	movlw	2
 11679  0125CA  5EDE               	subwf	postinc2,f,c
 11680  0125CC  0E00               	movlw	0
 11681  0125CE  5ADD               	subwfb	postdec2,f,c
 11682  0125D0  006F FF78  F00B    	movff	postinc2,btemp+10
 11683  0125D6  006F FF74  F00C    	movff	postdec2,btemp+11
 11684  0125DC  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11685  0125E2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11686  0125E8  006F FF78  F03C    	movff	postinc2,_prec
 11687  0125EE  006F FF74  F03D    	movff	postdec2,_prec+1
 11688                           
 11689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 11690  0125F4  D060               	goto	u11930
 11691  0125F6                     l12295:
 11692                           
 11693                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 11694                           ;stkvar	_fmt @ sp[(-32)+-4]
 11695  0125F6  0EDC               	movlw	-36
 11696  0125F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11697  0125FE  0EDD               	movlw	-35
 11698  012600  006F FF8F FFDA     	movff	plusw1,fsr2h
 11699  012606  006F FF78  F00B    	movff	postinc2,btemp+10
 11700  01260C  006F FF74  F00C    	movff	postdec2,btemp+11
 11701  012612  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11702  012618  0060  F033  FFE6   	movff	btemp+11,postinc1
 11703  01261E  EC0D  F0BB         	call	_atoi	;wreg free
 11704  012622  0060  F004  F03C   	movff	btemp,_prec
 11705  012628  0060  F008  F03D   	movff	btemp+1,_prec+1
 11706                           
 11707                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11708  01262E  D00B               	goto	l12299
 11709  012630                     l12297:
 11710                           
 11711                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 11712                           ;stkvar	_fmt @ sp[(-32)+-4]
 11713  012630  0EDC               	movlw	-36
 11714  012632  006F FF8F FFD9     	movff	plusw1,fsr2l
 11715  012638  0EDD               	movlw	-35
 11716  01263A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11717  012640  2ADE               	incf	postinc2,f,c
 11718  012642  0E00               	movlw	0
 11719  012644  22DD               	addwfc	postdec2,f,c
 11720  012646                     l12299:
 11721  012646  0ED0               	movlw	208
 11722  012648  6E0B               	movwf	(btemp+10)^0,c
 11723  01264A  0EFF               	movlw	255
 11724  01264C  6E0C               	movwf	(btemp+11)^0,c
 11725                           
 11726                           ;stkvar	_fmt @ sp[(-32)+-4]
 11727  01264E  0EDC               	movlw	-36
 11728  012650  006F FF8F FFD9     	movff	plusw1,fsr2l
 11729  012656  0EDD               	movlw	-35
 11730  012658  006F FF8F FFDA     	movff	plusw1,fsr2h
 11731  01265E  006F FF7B FFF6     	movff	postinc2,tblptrl
 11732  012664  006F FF77 FFF7     	movff	postdec2,tblptrh
 11733  01266A                     	if	0	;tblptru may be non-zero
 11734  01266A                     	endif
 11735  01266A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11736  01266A  0E00               	movlw	low (__mediumconst shr (0+16))
 11737  01266C  6EF8               	movwf	tblptru,c
 11738  01266E                     	endif
 11739  01266E  0008               	tblrd		*
 11740  012670  50F5               	movf	tablat,w,c
 11741  012672  6E09               	movwf	(btemp+8)^0,c
 11742  012674  6A0A               	clrf	(btemp+9)^0,c
 11743  012676  500B               	movf	(btemp+10)^0,w,c
 11744  012678  2609               	addwf	(btemp+8)^0,f,c
 11745  01267A  500C               	movf	(btemp+11)^0,w,c
 11746  01267C  220A               	addwfc	(btemp+9)^0,f,c
 11747  01267E  500A               	movf	(btemp+9)^0,w,c
 11748  012680  E106               	bnz	u11910
 11749  012682  0E0A               	movlw	10
 11750  012684  5C09               	subwf	(btemp+8)^0,w,c
 11751  012686  B0D8               	btfsc	status,0,c
 11752  012688  D002               	goto	u11910
 11753  01268A  0E01               	movlw	1
 11754  01268C  D001               	goto	u11920
 11755  01268E                     u11910:
 11756  01268E  0E00               	movlw	0
 11757  012690                     u11920:
 11758  012690  6E0B               	movwf	(btemp+10)^0,c
 11759  012692  6A0C               	clrf	(btemp+11)^0,c
 11760                           
 11761                           ;stkvar	_vfpfcnvrt$5545 @ sp[(-32)+0]
 11762  012694  0EE0               	movlw	-32
 11763  012696  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11764  01269C  0EE1               	movlw	-31
 11765  01269E  0060  F033  FFE3   	movff	btemp+11,plusw1
 11766                           
 11767                           ;stkvar	_vfpfcnvrt$5545 @ sp[(-32)+0]
 11768  0126A4  0EE0               	movlw	-32
 11769  0126A6  006F FF8C  F001    	movff	plusw1,btemp
 11770  0126AC  0EE1               	movlw	-31
 11771  0126AE  50E3               	movf	plusw1,w,c
 11772  0126B0  1001               	iorwf	btemp^0,w,c
 11773  0126B2  A4D8               	btfss	status,2,c
 11774  0126B4  D7BD               	goto	l12297
 11775  0126B6                     u11930:
 11776                           
 11777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 11778                           ;stkvar	_fmt @ sp[(-32)+-4]
 11779  0126B6  0EDC               	movlw	-36
 11780  0126B8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11781  0126BE  0EDD               	movlw	-35
 11782  0126C0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11783  0126C6  006F FF7B FFF6     	movff	postinc2,tblptrl
 11784  0126CC  006F FF77 FFF7     	movff	postdec2,tblptrh
 11785  0126D2                     	if	0	;tblptru may be non-zero
 11786  0126D2                     	endif
 11787  0126D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11788  0126D2  0E00               	movlw	low (__mediumconst shr (0+16))
 11789  0126D4  6EF8               	movwf	tblptru,c
 11790  0126D6                     	endif
 11791  0126D6  0008               	tblrd		*
 11792  0126D8  50F5               	movf	tablat,w,c
 11793  0126DA  6EE6               	movwf	postinc1,c
 11794  0126DC  0E00               	movlw	0
 11795  0126DE  6EE6               	movwf	postinc1,c
 11796  0126E0  ECF8  F0D4         	call	_tolower	;wreg free
 11797                           
 11798                           ;stkvar	_ct @ sp[(-32)+26]
 11799  0126E4  0EFA               	movlw	-6
 11800  0126E6  0060  F007  FFE3   	movff	btemp,plusw1
 11801                           
 11802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 11803                           ;stkvar	_ct @ sp[(-32)+26]
 11804  0126EC  0EFA               	movlw	-6
 11805  0126EE  50E3               	movf	plusw1,w,c
 11806  0126F0  B4D8               	btfsc	status,2,c
 11807  0126F2  D05B               	goto	l12315
 11808                           
 11809                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 11810                           ;stkvar	_ct @ sp[(-32)+26]
 11811  0126F4  0EFB               	movlw	251
 11812  0126F6  24E1               	addwf	fsr1l,w,c
 11813  0126F8  6ED9               	movwf	fsr2l,c
 11814  0126FA  0EFF               	movlw	255
 11815  0126FC  20E2               	addwfc	fsr1h,w,c
 11816  0126FE  6EDA               	movwf	fsr2h,c
 11817                           
 11818                           ;stkvar	_fmt @ sp[(-32)+-4]
 11819  012700  0EDC               	movlw	-36
 11820  012702  006F FF8F FFE9     	movff	plusw1,fsr0l
 11821  012708  0EDD               	movlw	-35
 11822  01270A  006F FF8F FFEA     	movff	plusw1,fsr0h
 11823  012710  006F FFB8  F00B    	movff	postinc0,btemp+10
 11824  012716  006F FFB4  F00C    	movff	postdec0,btemp+11
 11825  01271C  0E01               	movlw	1
 11826  01271E  260B               	addwf	(btemp+10)^0,f,c
 11827  012720  0E00               	movlw	0
 11828  012722  220C               	addwfc	(btemp+11)^0,f,c
 11829  012724  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 11830  01272A  0060  F033  FFF7   	movff	btemp+11,tblptrh
 11831  012730                     	if	0	;tblptru may be non-zero
 11832  012730                     	endif
 11833  012730                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11834  012730  0E00               	movlw	low (__mediumconst shr (0+16))
 11835  012732  6EF8               	movwf	tblptru,c
 11836  012734                     	endif
 11837  012734  0008               	tblrd		*
 11838  012736  50F5               	movf	tablat,w,c
 11839  012738  6EE6               	movwf	postinc1,c
 11840  01273A  0E00               	movlw	0
 11841  01273C  6EE6               	movwf	postinc1,c
 11842  01273E  ECF8  F0D4         	call	_tolower	;wreg free
 11843  012742  5001               	movf	btemp^0,w,c
 11844  012744  6EDF               	movwf	indf2,c
 11845                           
 11846                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 11847                           ;stkvar	_ct @ sp[(-32)+26]
 11848  012746  0EFB               	movlw	251
 11849  012748  24E1               	addwf	fsr1l,w,c
 11850  01274A  6ED9               	movwf	fsr2l,c
 11851  01274C  0EFF               	movlw	255
 11852  01274E  20E2               	addwfc	fsr1h,w,c
 11853  012750  6EDA               	movwf	fsr2h,c
 11854  012752  50DF               	movf	indf2,w,c
 11855  012754  B4D8               	btfsc	status,2,c
 11856  012756  D029               	goto	l12315
 11857                           
 11858                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 11859                           ;stkvar	_ct @ sp[(-32)+26]
 11860  012758  0EFC               	movlw	252
 11861  01275A  24E1               	addwf	fsr1l,w,c
 11862  01275C  6ED9               	movwf	fsr2l,c
 11863  01275E  0EFF               	movlw	255
 11864  012760  20E2               	addwfc	fsr1h,w,c
 11865  012762  6EDA               	movwf	fsr2h,c
 11866                           
 11867                           ;stkvar	_fmt @ sp[(-32)+-4]
 11868  012764  0EDC               	movlw	-36
 11869  012766  006F FF8F FFE9     	movff	plusw1,fsr0l
 11870  01276C  0EDD               	movlw	-35
 11871  01276E  006F FF8F FFEA     	movff	plusw1,fsr0h
 11872  012774  006F FFB8  F00B    	movff	postinc0,btemp+10
 11873  01277A  006F FFB4  F00C    	movff	postdec0,btemp+11
 11874  012780  0E02               	movlw	2
 11875  012782  260B               	addwf	(btemp+10)^0,f,c
 11876  012784  0E00               	movlw	0
 11877  012786  220C               	addwfc	(btemp+11)^0,f,c
 11878  012788  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 11879  01278E  0060  F033  FFF7   	movff	btemp+11,tblptrh
 11880  012794                     	if	0	;tblptru may be non-zero
 11881  012794                     	endif
 11882  012794                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11883  012794  0E00               	movlw	low (__mediumconst shr (0+16))
 11884  012796  6EF8               	movwf	tblptru,c
 11885  012798                     	endif
 11886  012798  0008               	tblrd		*
 11887  01279A  50F5               	movf	tablat,w,c
 11888  01279C  6EE6               	movwf	postinc1,c
 11889  01279E  0E00               	movlw	0
 11890  0127A0  6EE6               	movwf	postinc1,c
 11891  0127A2  ECF8  F0D4         	call	_tolower	;wreg free
 11892  0127A6  5001               	movf	btemp^0,w,c
 11893  0127A8  6EDF               	movwf	indf2,c
 11894  0127AA                     l12315:
 11895                           
 11896                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 11897                           ;stkvar	_fmt @ sp[(-32)+-4]
 11898  0127AA  0EDC               	movlw	-36
 11899  0127AC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11900  0127B2  0EDD               	movlw	-35
 11901  0127B4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11902  0127BA  006F FF7B FFF6     	movff	postinc2,tblptrl
 11903  0127C0  006F FF77 FFF7     	movff	postdec2,tblptrh
 11904  0127C6                     	if	0	;tblptru may be non-zero
 11905  0127C6                     	endif
 11906  0127C6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11907  0127C6  0E00               	movlw	low (__mediumconst shr (0+16))
 11908  0127C8  6EF8               	movwf	tblptru,c
 11909  0127CA                     	endif
 11910  0127CA  0008               	tblrd		*
 11911  0127CC  50F5               	movf	tablat,w,c
 11912  0127CE  0A63               	xorlw	99
 11913  0127D0  A4D8               	btfss	status,2,c
 11914  0127D2  D037               	goto	l12325
 11915                           
 11916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 11917                           ;stkvar	_fmt @ sp[(-32)+-4]
 11918  0127D4  0EDC               	movlw	-36
 11919  0127D6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11920  0127DC  0EDD               	movlw	-35
 11921  0127DE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11922  0127E4  2ADE               	incf	postinc2,f,c
 11923  0127E6  0E00               	movlw	0
 11924  0127E8  22DD               	addwfc	postdec2,f,c
 11925                           
 11926                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 11927                           ;stkvar	_ap @ sp[(-32)+-6]
 11928  0127EA  0EDA               	movlw	-38
 11929  0127EC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11930  0127F2  0EDB               	movlw	-37
 11931  0127F4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11932  0127FA  0E02               	movlw	2
 11933  0127FC  5EDE               	subwf	postinc2,f,c
 11934  0127FE  0E00               	movlw	0
 11935  012800  5ADD               	subwfb	postdec2,f,c
 11936  012802  006F FF78  F00B    	movff	postinc2,btemp+10
 11937  012808  006F FF74  F00C    	movff	postdec2,btemp+11
 11938  01280E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11939  012814  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11940  01281A  50DF               	movf	indf2,w,c
 11941  01281C  6E0C               	movwf	(btemp+11)^0,c
 11942                           
 11943                           ;stkvar	_c @ sp[(-32)+31]
 11944  01281E  0EFF               	movlw	-1
 11945  012820  0060  F033  FFE3   	movff	btemp+11,plusw1
 11946                           
 11947                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 11948                           ;stkvar	_c @ sp[(-32)+31]
 11949  012826  0EFF               	movlw	-1
 11950  012828  50E3               	movf	plusw1,w,c
 11951  01282A  6EE6               	movwf	postinc1,c
 11952                           
 11953                           ;stkvar	_fp @ sp[(-33)+-2]
 11954  01282C  0EDD               	movlw	-35
 11955  01282E  006F FF8F FFE6     	movff	plusw1,postinc1
 11956  012834  006F FF8F FFE6     	movff	plusw1,postinc1
 11957  01283A  EC72  F0D4         	call	_ctoa	;wreg free
 11958  01283E  EF9A  F099         	goto	l2363
 11959  012842                     l12325:
 11960                           
 11961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 11962                           ;stkvar	_fmt @ sp[(-32)+-4]
 11963  012842  0EDC               	movlw	-36
 11964  012844  006F FF8F FFD9     	movff	plusw1,fsr2l
 11965  01284A  0EDD               	movlw	-35
 11966  01284C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11967  012852  006F FF7B FFF6     	movff	postinc2,tblptrl
 11968  012858  006F FF77 FFF7     	movff	postdec2,tblptrh
 11969  01285E                     	if	0	;tblptru may be non-zero
 11970  01285E                     	endif
 11971  01285E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11972  01285E  0E00               	movlw	low (__mediumconst shr (0+16))
 11973  012860  6EF8               	movwf	tblptru,c
 11974  012862                     	endif
 11975  012862  0008               	tblrd		*
 11976  012864  50F5               	movf	tablat,w,c
 11977  012866  0A64               	xorlw	100
 11978  012868  B4D8               	btfsc	status,2,c
 11979  01286A  D015               	goto	u11980
 11980                           
 11981                           ;stkvar	_fmt @ sp[(-32)+-4]
 11982  01286C  0EDC               	movlw	-36
 11983  01286E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11984  012874  0EDD               	movlw	-35
 11985  012876  006F FF8F FFDA     	movff	plusw1,fsr2h
 11986  01287C  006F FF7B FFF6     	movff	postinc2,tblptrl
 11987  012882  006F FF77 FFF7     	movff	postdec2,tblptrh
 11988  012888                     	if	0	;tblptru may be non-zero
 11989  012888                     	endif
 11990  012888                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11991  012888  0E00               	movlw	low (__mediumconst shr (0+16))
 11992  01288A  6EF8               	movwf	tblptru,c
 11993  01288C                     	endif
 11994  01288C  0008               	tblrd		*
 11995  01288E  50F5               	movf	tablat,w,c
 11996  012890  0A69               	xorlw	105
 11997  012892  A4D8               	btfss	status,2,c
 11998  012894  D076               	goto	l12337
 11999  012896                     u11980:
 12000                           
 12001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 12002                           ;stkvar	_fmt @ sp[(-32)+-4]
 12003  012896  0EDC               	movlw	-36
 12004  012898  006F FF8F FFD9     	movff	plusw1,fsr2l
 12005  01289E  0EDD               	movlw	-35
 12006  0128A0  006F FF8F FFDA     	movff	plusw1,fsr2h
 12007  0128A6  2ADE               	incf	postinc2,f,c
 12008  0128A8  0E00               	movlw	0
 12009  0128AA  22DD               	addwfc	postdec2,f,c
 12010                           
 12011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 12012                           ;stkvar	_ap @ sp[(-32)+-6]
 12013  0128AC  0EDA               	movlw	-38
 12014  0128AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 12015  0128B4  0EDB               	movlw	-37
 12016  0128B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 12017  0128BC  0E02               	movlw	2
 12018  0128BE  5EDE               	subwf	postinc2,f,c
 12019  0128C0  0E00               	movlw	0
 12020  0128C2  5ADD               	subwfb	postdec2,f,c
 12021  0128C4  006F FF78  F00B    	movff	postinc2,btemp+10
 12022  0128CA  006F FF74  F00C    	movff	postdec2,btemp+11
 12023  0128D0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12024  0128D6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12025  0128DC  006F FF78  F00B    	movff	postinc2,btemp+10
 12026  0128E2  006F FF74  F00C    	movff	postdec2,btemp+11
 12027                           
 12028                           ;stkvar	_ll @ sp[(-32)+14]
 12029  0128E8  0EEE               	movlw	-18
 12030  0128EA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12031  0128F0  0EEF               	movlw	-17
 12032  0128F2  0060  F033  FFE3   	movff	btemp+11,plusw1
 12033  0128F8  6A01               	clrf	btemp^0,c
 12034  0128FA  BEE3               	btfsc	plusw1,7,c
 12035  0128FC  6801               	setf	btemp^0,c
 12036  0128FE  0EF0               	movlw	-16
 12037  012900  0060  F007  FFE3   	movff	btemp,plusw1
 12038  012906  0EF1               	movlw	-15
 12039  012908  0060  F007  FFE3   	movff	btemp,plusw1
 12040  01290E  0EF2               	movlw	-14
 12041  012910  0060  F007  FFE3   	movff	btemp,plusw1
 12042  012916  0EF3               	movlw	-13
 12043  012918  0060  F007  FFE3   	movff	btemp,plusw1
 12044  01291E  0EF4               	movlw	-12
 12045  012920  0060  F007  FFE3   	movff	btemp,plusw1
 12046  012926  0EF5               	movlw	-11
 12047  012928  0060  F007  FFE3   	movff	btemp,plusw1
 12048  01292E                     l12333:
 12049                           
 12050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 12051                           ;stkvar	_ll @ sp[(-32)+14]
 12052  01292E  50E1               	movf	fsr1l,w,c
 12053  012930  0FEE               	addlw	-18
 12054  012932  6ED9               	movwf	fsr2l,c
 12055  012934  50E2               	movf	fsr1h,w,c
 12056  012936  6EDA               	movwf	fsr2h,c
 12057  012938  0EFF               	movlw	255
 12058  01293A  22DA               	addwfc	fsr2h,f,c
 12059  01293C  006F FF7B FFE6     	movff	postinc2,postinc1
 12060  012942  006F FF7B FFE6     	movff	postinc2,postinc1
 12061  012948  006F FF7B FFE6     	movff	postinc2,postinc1
 12062  01294E  006F FF7B FFE6     	movff	postinc2,postinc1
 12063  012954  006F FF7B FFE6     	movff	postinc2,postinc1
 12064  01295A  006F FF7B FFE6     	movff	postinc2,postinc1
 12065  012960  006F FF7B FFE6     	movff	postinc2,postinc1
 12066  012966  006F FF7B FFE6     	movff	postinc2,postinc1
 12067                           
 12068                           ;stkvar	_fp @ sp[(-40)+-2]
 12069  01296C  0ED6               	movlw	-42
 12070  01296E  006F FF8F FFE6     	movff	plusw1,postinc1
 12071  012974  006F FF8F FFE6     	movff	plusw1,postinc1
 12072  01297A  EC63  F0AA         	call	_dtoa	;wreg free
 12073  01297E  EF9A  F099         	goto	l2363
 12074  012982                     l12337:
 12075                           
 12076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 12077  012982  0E02               	movlw	2
 12078  012984  6EE6               	movwf	postinc1,c
 12079  012986  0E00               	movlw	0
 12080  012988  6EE6               	movwf	postinc1,c
 12081  01298A  0EE9               	movlw	low STR_74
 12082  01298C  6EE6               	movwf	postinc1,c
 12083  01298E  0EFF               	movlw	high STR_74
 12084  012990  6EE6               	movwf	postinc1,c
 12085                           
 12086                           ;stkvar	_fmt @ sp[(-36)+-4]
 12087  012992  0ED8               	movlw	-40
 12088  012994  006F FF8F FFD9     	movff	plusw1,fsr2l
 12089  01299A  0ED9               	movlw	-39
 12090  01299C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12091  0129A2  006F FF78  F00B    	movff	postinc2,btemp+10
 12092  0129A8  006F FF74  F00C    	movff	postdec2,btemp+11
 12093  0129AE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12094  0129B4  0060  F033  FFE6   	movff	btemp+11,postinc1
 12095  0129BA  EC7C  F0BE         	call	_strncmp	;wreg free
 12096  0129BE  5001               	movf	btemp^0,w,c
 12097  0129C0  1002               	iorwf	(btemp+1)^0,w,c
 12098  0129C2  B4D8               	btfsc	status,2,c
 12099  0129C4  D022               	goto	u12000
 12100  0129C6  0E02               	movlw	2
 12101  0129C8  6EE6               	movwf	postinc1,c
 12102  0129CA  0E00               	movlw	0
 12103  0129CC  6EE6               	movwf	postinc1,c
 12104  0129CE  0EEF               	movlw	low STR_78
 12105  0129D0  6EE6               	movwf	postinc1,c
 12106  0129D2  0EFF               	movlw	high STR_78
 12107  0129D4  6EE6               	movwf	postinc1,c
 12108                           
 12109                           ;stkvar	_fmt @ sp[(-36)+-4]
 12110  0129D6  0ED8               	movlw	-40
 12111  0129D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 12112  0129DE  0ED9               	movlw	-39
 12113  0129E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 12114  0129E6  006F FF78  F00B    	movff	postinc2,btemp+10
 12115  0129EC  006F FF74  F00C    	movff	postdec2,btemp+11
 12116  0129F2  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12117  0129F8  0060  F033  FFE6   	movff	btemp+11,postinc1
 12118  0129FE  EC7C  F0BE         	call	_strncmp	;wreg free
 12119  012A02  5001               	movf	btemp^0,w,c
 12120  012A04  1002               	iorwf	(btemp+1)^0,w,c
 12121  012A06  A4D8               	btfss	status,2,c
 12122  012A08  D069               	goto	l12349
 12123  012A0A                     u12000:
 12124                           
 12125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 12126                           ;stkvar	_fmt @ sp[(-32)+-4]
 12127  012A0A  0EDC               	movlw	-36
 12128  012A0C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12129  012A12  0EDD               	movlw	-35
 12130  012A14  006F FF8F FFDA     	movff	plusw1,fsr2h
 12131  012A1A  0E02               	movlw	2
 12132  012A1C  26DE               	addwf	postinc2,f,c
 12133  012A1E  0E00               	movlw	0
 12134  012A20  22DD               	addwfc	postdec2,f,c
 12135                           
 12136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 12137                           ;stkvar	_ap @ sp[(-32)+-6]
 12138  012A22  0EDA               	movlw	-38
 12139  012A24  006F FF8F FFD9     	movff	plusw1,fsr2l
 12140  012A2A  0EDB               	movlw	-37
 12141  012A2C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12142  012A32  0E04               	movlw	4
 12143  012A34  5EDE               	subwf	postinc2,f,c
 12144  012A36  0E00               	movlw	0
 12145  012A38  5ADD               	subwfb	postdec2,f,c
 12146  012A3A  006F FF78  F00B    	movff	postinc2,btemp+10
 12147  012A40  006F FF74  F00C    	movff	postdec2,btemp+11
 12148  012A46  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12149  012A4C  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12150  012A52  006F FF78  F009    	movff	postinc2,btemp+8
 12151  012A58  006F FF78  F00A    	movff	postinc2,btemp+9
 12152  012A5E  006F FF78  F00B    	movff	postinc2,btemp+10
 12153  012A64  006F FF78  F00C    	movff	postinc2,btemp+11
 12154  012A6A  0060  F024  F011   	movff	btemp+8,btemp+16
 12155  012A70  0060  F028  F012   	movff	btemp+9,btemp+17
 12156  012A76  0060  F02C  F013   	movff	btemp+10,btemp+18
 12157  012A7C  0060  F030  F014   	movff	btemp+11,btemp+19
 12158  012A82  6A15               	clrf	(btemp+20)^0,c
 12159  012A84  BE14               	btfsc	(btemp+19)^0,7,c
 12160  012A86  6815               	setf	(btemp+20)^0,c
 12161  012A88  0060  F054  F016   	movff	btemp+20,btemp+21
 12162  012A8E  0060  F054  F017   	movff	btemp+20,btemp+22
 12163  012A94  0060  F054  F018   	movff	btemp+20,btemp+23
 12164                           
 12165                           ;stkvar	_ll @ sp[(-32)+14]
 12166  012A9A  0EEE               	movlw	-18
 12167  012A9C  0060  F047  FFE3   	movff	btemp+16,plusw1
 12168  012AA2  0EEF               	movlw	-17
 12169  012AA4  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12170  012AAA  0EF0               	movlw	-16
 12171  012AAC  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12172  012AB2  0EF1               	movlw	-15
 12173  012AB4  0060  F053  FFE3   	movff	btemp+19,plusw1
 12174  012ABA  0EF2               	movlw	-14
 12175  012ABC  0060  F057  FFE3   	movff	btemp+20,plusw1
 12176  012AC2  0EF3               	movlw	-13
 12177  012AC4  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12178  012ACA  0EF4               	movlw	-12
 12179  012ACC  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12180  012AD2  0EF5               	movlw	-11
 12181  012AD4  0060  F063  FFE3   	movff	btemp+23,plusw1
 12182  012ADA  D729               	goto	l12333
 12183  012ADC                     l12349:
 12184                           
 12185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 12186                           ;stkvar	_ct @ sp[(-32)+26]
 12187  012ADC  0EFA               	movlw	-6
 12188  012ADE  006F FF8C  F001    	movff	plusw1,btemp
 12189  012AE4  0E66               	movlw	102
 12190  012AE6  1801               	xorwf	btemp^0,w,c
 12191  012AE8  A4D8               	btfss	status,2,c
 12192  012AEA  D06E               	goto	l12361
 12193                           
 12194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 12195                           ;stkvar	_fmt @ sp[(-32)+-4]
 12196  012AEC  0EDC               	movlw	-36
 12197  012AEE  006F FF8F FFD9     	movff	plusw1,fsr2l
 12198  012AF4  0EDD               	movlw	-35
 12199  012AF6  006F FF8F FFDA     	movff	plusw1,fsr2h
 12200  012AFC  006F FF7B FFF6     	movff	postinc2,tblptrl
 12201  012B02  006F FF77 FFF7     	movff	postdec2,tblptrh
 12202  012B08                     	if	0	;tblptru may be non-zero
 12203  012B08                     	endif
 12204  012B08                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12205  012B08  0E00               	movlw	low (__mediumconst shr (0+16))
 12206  012B0A  6EF8               	movwf	tblptru,c
 12207  012B0C                     	endif
 12208                           
 12209                           ;stkvar	_c @ sp[(-32)+31]
 12210  012B0C  0008               	tblrd		*
 12211  012B0E  0EFF               	movlw	-1
 12212  012B10  006F FFD7 FFE3     	movff	tablat,plusw1
 12213                           
 12214                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 12215                           ;stkvar	_fmt @ sp[(-32)+-4]
 12216  012B16  0EDC               	movlw	-36
 12217  012B18  006F FF8F FFD9     	movff	plusw1,fsr2l
 12218  012B1E  0EDD               	movlw	-35
 12219  012B20  006F FF8F FFDA     	movff	plusw1,fsr2h
 12220  012B26  2ADE               	incf	postinc2,f,c
 12221  012B28  0E00               	movlw	0
 12222  012B2A  22DD               	addwfc	postdec2,f,c
 12223                           
 12224                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 12225                           ;stkvar	_ap @ sp[(-32)+-6]
 12226  012B2C  0EDA               	movlw	-38
 12227  012B2E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12228  012B34  0EDB               	movlw	-37
 12229  012B36  006F FF8F FFDA     	movff	plusw1,fsr2h
 12230  012B3C  0E04               	movlw	4
 12231  012B3E  5EDE               	subwf	postinc2,f,c
 12232  012B40  0E00               	movlw	0
 12233  012B42  5ADD               	subwfb	postdec2,f,c
 12234  012B44  006F FF78  F00B    	movff	postinc2,btemp+10
 12235  012B4A  006F FF74  F00C    	movff	postdec2,btemp+11
 12236  012B50  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12237  012B56  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12238  012B5C  006F FF78  F009    	movff	postinc2,btemp+8
 12239  012B62  006F FF78  F00A    	movff	postinc2,btemp+9
 12240  012B68  006F FF78  F00B    	movff	postinc2,btemp+10
 12241  012B6E  006F FF78  F00C    	movff	postinc2,btemp+11
 12242                           
 12243                           ;stkvar	_f @ sp[(-32)+22]
 12244  012B74  0EF6               	movlw	-10
 12245  012B76  0060  F027  FFE3   	movff	btemp+8,plusw1
 12246  012B7C  0EF7               	movlw	-9
 12247  012B7E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12248  012B84  0EF8               	movlw	-8
 12249  012B86  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12250  012B8C  0EF9               	movlw	-7
 12251  012B8E  0060  F033  FFE3   	movff	btemp+11,plusw1
 12252  012B94                     l12357:
 12253                           
 12254                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 12255                           ;stkvar	_c @ sp[(-32)+31]
 12256  012B94  0EFF               	movlw	-1
 12257  012B96  50E3               	movf	plusw1,w,c
 12258  012B98  6EE6               	movwf	postinc1,c
 12259                           
 12260                           ;stkvar	_f @ sp[(-33)+22]
 12261  012B9A  0EF5               	movlw	-11
 12262  012B9C  006F FF8F FFE6     	movff	plusw1,postinc1
 12263  012BA2  006F FF8F FFE6     	movff	plusw1,postinc1
 12264  012BA8  006F FF8F FFE6     	movff	plusw1,postinc1
 12265  012BAE  006F FF8F FFE6     	movff	plusw1,postinc1
 12266                           
 12267                           ;stkvar	_fp @ sp[(-37)+-2]
 12268  012BB4  0ED9               	movlw	-39
 12269  012BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 12270  012BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 12271  012BC2  EC00  F080         	call	_efgtoa	;wreg free
 12272  012BC6  D3B6               	goto	l2363
 12273  012BC8                     l12361:
 12274                           
 12275                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 12276  012BC8  0E02               	movlw	2
 12277  012BCA  6EE6               	movwf	postinc1,c
 12278  012BCC  0E00               	movlw	0
 12279  012BCE  6EE6               	movwf	postinc1,c
 12280  012BD0  0EEC               	movlw	low STR_83
 12281  012BD2  6EE6               	movwf	postinc1,c
 12282  012BD4  0EFF               	movlw	high STR_83
 12283  012BD6  6EE6               	movwf	postinc1,c
 12284                           
 12285                           ;stkvar	_ct @ sp[(-36)+26]
 12286  012BD8  0EF6               	movlw	246
 12287  012BDA  24E1               	addwf	fsr1l,w,c
 12288  012BDC  6E01               	movwf	btemp^0,c
 12289  012BDE  0EFF               	movlw	255
 12290  012BE0  20E2               	addwfc	fsr1h,w,c
 12291  012BE2  6E02               	movwf	(btemp+1)^0,c
 12292  012BE4  0060  F007  FFE6   	movff	btemp,postinc1
 12293  012BEA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12294  012BF0  EC7C  F0BE         	call	_strncmp	;wreg free
 12295  012BF4  5001               	movf	btemp^0,w,c
 12296  012BF6  1002               	iorwf	(btemp+1)^0,w,c
 12297  012BF8  A4D8               	btfss	status,2,c
 12298  012BFA  D096               	goto	l12381
 12299                           
 12300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 12301                           ;stkvar	_fmt @ sp[(-32)+-4]
 12302  012BFC  0EDC               	movlw	-36
 12303  012BFE  006F FF8F FFD9     	movff	plusw1,fsr2l
 12304  012C04  0EDD               	movlw	-35
 12305  012C06  006F FF8F FFDA     	movff	plusw1,fsr2h
 12306  012C0C  006F FF78  F00B    	movff	postinc2,btemp+10
 12307  012C12  006F FF74  F00C    	movff	postdec2,btemp+11
 12308  012C18  0E01               	movlw	1
 12309  012C1A  260B               	addwf	(btemp+10)^0,f,c
 12310  012C1C  0E00               	movlw	0
 12311  012C1E  220C               	addwfc	(btemp+11)^0,f,c
 12312  012C20  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12313  012C26  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12314  012C2C                     	if	0	;tblptru may be non-zero
 12315  012C2C                     	endif
 12316  012C2C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12317  012C2C  0E00               	movlw	low (__mediumconst shr (0+16))
 12318  012C2E  6EF8               	movwf	tblptru,c
 12319  012C30                     	endif
 12320                           
 12321                           ;stkvar	_c @ sp[(-32)+31]
 12322  012C30  0008               	tblrd		*
 12323  012C32  0EFF               	movlw	-1
 12324  012C34  006F FFD7 FFE3     	movff	tablat,plusw1
 12325  012C3A  0EBF               	movlw	191
 12326  012C3C  6E0B               	movwf	(btemp+10)^0,c
 12327  012C3E  0EFF               	movlw	255
 12328  012C40  6E0C               	movwf	(btemp+11)^0,c
 12329                           
 12330                           ;stkvar	_fmt @ sp[(-32)+-4]
 12331  012C42  0EDC               	movlw	-36
 12332  012C44  006F FF8F FFD9     	movff	plusw1,fsr2l
 12333  012C4A  0EDD               	movlw	-35
 12334  012C4C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12335  012C52  006F FF7B FFF6     	movff	postinc2,tblptrl
 12336  012C58  006F FF77 FFF7     	movff	postdec2,tblptrh
 12337  012C5E                     	if	0	;tblptru may be non-zero
 12338  012C5E                     	endif
 12339  012C5E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12340  012C5E  0E00               	movlw	low (__mediumconst shr (0+16))
 12341  012C60  6EF8               	movwf	tblptru,c
 12342  012C62                     	endif
 12343  012C62  0008               	tblrd		*
 12344  012C64  50F5               	movf	tablat,w,c
 12345  012C66  6E09               	movwf	(btemp+8)^0,c
 12346  012C68  6A0A               	clrf	(btemp+9)^0,c
 12347  012C6A  500B               	movf	(btemp+10)^0,w,c
 12348  012C6C  2609               	addwf	(btemp+8)^0,f,c
 12349  012C6E  500C               	movf	(btemp+11)^0,w,c
 12350  012C70  220A               	addwfc	(btemp+9)^0,f,c
 12351  012C72  500A               	movf	(btemp+9)^0,w,c
 12352  012C74  E106               	bnz	u12030
 12353  012C76  0E1A               	movlw	26
 12354  012C78  5C09               	subwf	(btemp+8)^0,w,c
 12355  012C7A  B0D8               	btfsc	status,0,c
 12356  012C7C  D002               	goto	u12030
 12357  012C7E  0E01               	movlw	1
 12358  012C80  D001               	goto	u12040
 12359  012C82                     u12030:
 12360  012C82  0E00               	movlw	0
 12361  012C84                     u12040:
 12362  012C84  6E0B               	movwf	(btemp+10)^0,c
 12363  012C86  6A0C               	clrf	(btemp+11)^0,c
 12364                           
 12365                           ;stkvar	_vfpfcnvrt$5556 @ sp[(-32)+2]
 12366  012C88  0EE2               	movlw	-30
 12367  012C8A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12368  012C90  0EE3               	movlw	-29
 12369  012C92  0060  F033  FFE3   	movff	btemp+11,plusw1
 12370                           
 12371                           ;stkvar	_vfpfcnvrt$5556 @ sp[(-32)+2]
 12372  012C98  0EE2               	movlw	-30
 12373  012C9A  006F FF8C  F001    	movff	plusw1,btemp
 12374  012CA0  0EE3               	movlw	-29
 12375  012CA2  50E3               	movf	plusw1,w,c
 12376  012CA4  1001               	iorwf	btemp^0,w,c
 12377                           
 12378                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 12379                           ;stkvar	_ap @ sp[(-32)+-6]
 12380                           
 12381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 12382                           
 12383                           ;stkvar	_f @ sp[(-32)+22]
 12384                           
 12385                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 12386                           ;stkvar	_ap @ sp[(-32)+-6]
 12387  012CA6  0EDA               	movlw	-38
 12388  012CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
 12389  012CAE  0EDB               	movlw	-37
 12390  012CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
 12391  012CB6  0E04               	movlw	4
 12392  012CB8  5EDE               	subwf	postinc2,f,c
 12393  012CBA  0E00               	movlw	0
 12394  012CBC  5ADD               	subwfb	postdec2,f,c
 12395  012CBE  006F FF78  F00B    	movff	postinc2,btemp+10
 12396  012CC4  006F FF74  F00C    	movff	postdec2,btemp+11
 12397  012CCA  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12398  012CD0  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12399  012CD6  006F FF78  F009    	movff	postinc2,btemp+8
 12400  012CDC  006F FF78  F00A    	movff	postinc2,btemp+9
 12401  012CE2  006F FF78  F00B    	movff	postinc2,btemp+10
 12402  012CE8  006F FF78  F00C    	movff	postinc2,btemp+11
 12403                           
 12404                           ;stkvar	_f @ sp[(-32)+22]
 12405  012CEE  0EF6               	movlw	-10
 12406  012CF0  0060  F027  FFE3   	movff	btemp+8,plusw1
 12407  012CF6  0EF7               	movlw	-9
 12408  012CF8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12409  012CFE  0EF8               	movlw	-8
 12410  012D00  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12411  012D06  0EF9               	movlw	-7
 12412  012D08  0060  F033  FFE3   	movff	btemp+11,plusw1
 12413                           
 12414                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 12415                           ;stkvar	_fmt @ sp[(-32)+-4]
 12416  012D0E  0EDC               	movlw	-36
 12417  012D10  006F FF8F FFD9     	movff	plusw1,fsr2l
 12418  012D16  0EDD               	movlw	-35
 12419  012D18  006F FF8F FFDA     	movff	plusw1,fsr2h
 12420  012D1E  0E02               	movlw	2
 12421  012D20  26DE               	addwf	postinc2,f,c
 12422  012D22  0E00               	movlw	0
 12423  012D24  22DD               	addwfc	postdec2,f,c
 12424  012D26  D736               	goto	l12357
 12425  012D28                     l12381:
 12426                           
 12427                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 12428                           ;stkvar	_fmt @ sp[(-32)+-4]
 12429  012D28  0EDC               	movlw	-36
 12430  012D2A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12431  012D30  0EDD               	movlw	-35
 12432  012D32  006F FF8F FFDA     	movff	plusw1,fsr2h
 12433  012D38  006F FF7B FFF6     	movff	postinc2,tblptrl
 12434  012D3E  006F FF77 FFF7     	movff	postdec2,tblptrh
 12435  012D44                     	if	0	;tblptru may be non-zero
 12436  012D44                     	endif
 12437  012D44                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12438  012D44  0E00               	movlw	low (__mediumconst shr (0+16))
 12439  012D46  6EF8               	movwf	tblptru,c
 12440  012D48                     	endif
 12441  012D48  0008               	tblrd		*
 12442  012D4A  50F5               	movf	tablat,w,c
 12443  012D4C  0A73               	xorlw	115
 12444  012D4E  A4D8               	btfss	status,2,c
 12445  012D50  D042               	goto	l12391
 12446                           
 12447                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 12448                           ;stkvar	_fmt @ sp[(-32)+-4]
 12449  012D52  0EDC               	movlw	-36
 12450  012D54  006F FF8F FFD9     	movff	plusw1,fsr2l
 12451  012D5A  0EDD               	movlw	-35
 12452  012D5C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12453  012D62  2ADE               	incf	postinc2,f,c
 12454  012D64  0E00               	movlw	0
 12455  012D66  22DD               	addwfc	postdec2,f,c
 12456                           
 12457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 12458                           ;stkvar	_ap @ sp[(-32)+-6]
 12459  012D68  0EDA               	movlw	-38
 12460  012D6A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12461  012D70  0EDB               	movlw	-37
 12462  012D72  006F FF8F FFDA     	movff	plusw1,fsr2h
 12463  012D78  0E02               	movlw	2
 12464  012D7A  5EDE               	subwf	postinc2,f,c
 12465  012D7C  0E00               	movlw	0
 12466  012D7E  5ADD               	subwfb	postdec2,f,c
 12467  012D80  006F FF78  F00B    	movff	postinc2,btemp+10
 12468  012D86  006F FF74  F00C    	movff	postdec2,btemp+11
 12469  012D8C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12470  012D92  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12471  012D98  006F FF78  F00B    	movff	postinc2,btemp+10
 12472  012D9E  006F FF74  F00C    	movff	postdec2,btemp+11
 12473                           
 12474                           ;stkvar	_cp @ sp[(-32)+29]
 12475  012DA4  0EFE               	movlw	-2
 12476  012DA6  0060  F033  FFE3   	movff	btemp+11,plusw1
 12477  012DAC  0EFD               	movlw	-3
 12478  012DAE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12479                           
 12480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 12481                           ;stkvar	_cp @ sp[(-32)+29]
 12482  012DB4  0EFD               	movlw	-3
 12483  012DB6  006F FF8F FFE6     	movff	plusw1,postinc1
 12484  012DBC  006F FF8F FFE6     	movff	plusw1,postinc1
 12485                           
 12486                           ;stkvar	_fp @ sp[(-34)+-2]
 12487  012DC2  0EDC               	movlw	-36
 12488  012DC4  006F FF8F FFE6     	movff	plusw1,postinc1
 12489  012DCA  006F FF8F FFE6     	movff	plusw1,postinc1
 12490  012DD0  EC6E  F0B8         	call	_stoa	;wreg free
 12491  012DD4  D2AF               	goto	l2363
 12492  012DD6                     l12391:
 12493                           
 12494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 12495                           ;stkvar	_fmt @ sp[(-32)+-4]
 12496  012DD6  0EDC               	movlw	-36
 12497  012DD8  006F FF8F FFD9     	movff	plusw1,fsr2l
 12498  012DDE  0EDD               	movlw	-35
 12499  012DE0  006F FF8F FFDA     	movff	plusw1,fsr2h
 12500  012DE6  006F FF7B FFF6     	movff	postinc2,tblptrl
 12501  012DEC  006F FF77 FFF7     	movff	postdec2,tblptrh
 12502  012DF2                     	if	0	;tblptru may be non-zero
 12503  012DF2                     	endif
 12504  012DF2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12505  012DF2  0E00               	movlw	low (__mediumconst shr (0+16))
 12506  012DF4  6EF8               	movwf	tblptru,c
 12507  012DF6                     	endif
 12508  012DF6  0008               	tblrd		*
 12509  012DF8  50F5               	movf	tablat,w,c
 12510  012DFA  0A75               	xorlw	117
 12511  012DFC  A4D8               	btfss	status,2,c
 12512  012DFE  D07C               	goto	l12401
 12513                           
 12514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 12515                           ;stkvar	_fmt @ sp[(-32)+-4]
 12516  012E00  0EDC               	movlw	-36
 12517  012E02  006F FF8F FFD9     	movff	plusw1,fsr2l
 12518  012E08  0EDD               	movlw	-35
 12519  012E0A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12520  012E10  2ADE               	incf	postinc2,f,c
 12521  012E12  0E00               	movlw	0
 12522  012E14  22DD               	addwfc	postdec2,f,c
 12523                           
 12524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 12525                           ;stkvar	_ap @ sp[(-32)+-6]
 12526  012E16  0EDA               	movlw	-38
 12527  012E18  006F FF8F FFD9     	movff	plusw1,fsr2l
 12528  012E1E  0EDB               	movlw	-37
 12529  012E20  006F FF8F FFDA     	movff	plusw1,fsr2h
 12530  012E26  0E02               	movlw	2
 12531  012E28  5EDE               	subwf	postinc2,f,c
 12532  012E2A  0E00               	movlw	0
 12533  012E2C  5ADD               	subwfb	postdec2,f,c
 12534  012E2E  006F FF78  F00B    	movff	postinc2,btemp+10
 12535  012E34  006F FF74  F00C    	movff	postdec2,btemp+11
 12536  012E3A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12537  012E40  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12538  012E46  006F FF78  F00B    	movff	postinc2,btemp+10
 12539  012E4C  006F FF74  F00C    	movff	postdec2,btemp+11
 12540  012E52  500B               	movf	(btemp+10)^0,w,c
 12541  012E54  6E11               	movwf	(btemp+16)^0,c
 12542  012E56  500C               	movf	(btemp+11)^0,w,c
 12543  012E58  6E12               	movwf	(btemp+17)^0,c
 12544  012E5A  6A13               	clrf	(btemp+18)^0,c
 12545  012E5C  6A14               	clrf	(btemp+19)^0,c
 12546  012E5E  6A15               	clrf	(btemp+20)^0,c
 12547  012E60  6A16               	clrf	(btemp+21)^0,c
 12548  012E62  6A17               	clrf	(btemp+22)^0,c
 12549  012E64  6A18               	clrf	(btemp+23)^0,c
 12550                           
 12551                           ;stkvar	_llu @ sp[(-32)+6]
 12552  012E66  0EE6               	movlw	-26
 12553  012E68  0060  F047  FFE3   	movff	btemp+16,plusw1
 12554  012E6E  0EE7               	movlw	-25
 12555  012E70  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12556  012E76  0EE8               	movlw	-24
 12557  012E78  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12558  012E7E  0EE9               	movlw	-23
 12559  012E80  0060  F053  FFE3   	movff	btemp+19,plusw1
 12560  012E86  0EEA               	movlw	-22
 12561  012E88  0060  F057  FFE3   	movff	btemp+20,plusw1
 12562  012E8E  0EEB               	movlw	-21
 12563  012E90  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12564  012E96  0EEC               	movlw	-20
 12565  012E98  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12566  012E9E  0EED               	movlw	-19
 12567  012EA0  0060  F063  FFE3   	movff	btemp+23,plusw1
 12568                           
 12569                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 12570                           ;stkvar	_llu @ sp[(-32)+6]
 12571  012EA6  50E1               	movf	fsr1l,w,c
 12572  012EA8  0FE6               	addlw	-26
 12573  012EAA  6ED9               	movwf	fsr2l,c
 12574  012EAC  50E2               	movf	fsr1h,w,c
 12575  012EAE  6EDA               	movwf	fsr2h,c
 12576  012EB0  0EFF               	movlw	255
 12577  012EB2  22DA               	addwfc	fsr2h,f,c
 12578  012EB4  006F FF7B FFE6     	movff	postinc2,postinc1
 12579  012EBA  006F FF7B FFE6     	movff	postinc2,postinc1
 12580  012EC0  006F FF7B FFE6     	movff	postinc2,postinc1
 12581  012EC6  006F FF7B FFE6     	movff	postinc2,postinc1
 12582  012ECC  006F FF7B FFE6     	movff	postinc2,postinc1
 12583  012ED2  006F FF7B FFE6     	movff	postinc2,postinc1
 12584  012ED8  006F FF7B FFE6     	movff	postinc2,postinc1
 12585  012EDE  006F FF7B FFE6     	movff	postinc2,postinc1
 12586                           
 12587                           ;stkvar	_fp @ sp[(-40)+-2]
 12588  012EE4  0ED6               	movlw	-42
 12589  012EE6  006F FF8F FFE6     	movff	plusw1,postinc1
 12590  012EEC  006F FF8F FFE6     	movff	plusw1,postinc1
 12591  012EF2  EC5C  F0B2         	call	_utoa	;wreg free
 12592  012EF6  D21E               	goto	l2363
 12593  012EF8                     l12401:
 12594                           
 12595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 12596  012EF8  0E02               	movlw	2
 12597  012EFA  6EE6               	movwf	postinc1,c
 12598  012EFC  0E00               	movlw	0
 12599  012EFE  6EE6               	movwf	postinc1,c
 12600  012F00  0EF2               	movlw	low STR_88
 12601  012F02  6EE6               	movwf	postinc1,c
 12602  012F04  0EFF               	movlw	high STR_88
 12603  012F06  6EE6               	movwf	postinc1,c
 12604                           
 12605                           ;stkvar	_fmt @ sp[(-36)+-4]
 12606  012F08  0ED8               	movlw	-40
 12607  012F0A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12608  012F10  0ED9               	movlw	-39
 12609  012F12  006F FF8F FFDA     	movff	plusw1,fsr2h
 12610  012F18  006F FF78  F00B    	movff	postinc2,btemp+10
 12611  012F1E  006F FF74  F00C    	movff	postdec2,btemp+11
 12612  012F24  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12613  012F2A  0060  F033  FFE6   	movff	btemp+11,postinc1
 12614  012F30  EC7C  F0BE         	call	_strncmp	;wreg free
 12615  012F34  5001               	movf	btemp^0,w,c
 12616  012F36  1002               	iorwf	(btemp+1)^0,w,c
 12617  012F38  A4D8               	btfss	status,2,c
 12618  012F3A  D039               	goto	l12411
 12619                           
 12620                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 12621                           ;stkvar	_fmt @ sp[(-32)+-4]
 12622  012F3C  0EDC               	movlw	-36
 12623  012F3E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12624  012F44  0EDD               	movlw	-35
 12625  012F46  006F FF8F FFDA     	movff	plusw1,fsr2h
 12626  012F4C  0E02               	movlw	2
 12627  012F4E  26DE               	addwf	postinc2,f,c
 12628  012F50  0E00               	movlw	0
 12629  012F52  22DD               	addwfc	postdec2,f,c
 12630                           
 12631                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 12632                           ;stkvar	_ap @ sp[(-32)+-6]
 12633  012F54  0EDA               	movlw	-38
 12634  012F56  006F FF8F FFD9     	movff	plusw1,fsr2l
 12635  012F5C  0EDB               	movlw	-37
 12636  012F5E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12637  012F64  0E04               	movlw	4
 12638  012F66  5EDE               	subwf	postinc2,f,c
 12639  012F68  0E00               	movlw	0
 12640  012F6A  5ADD               	subwfb	postdec2,f,c
 12641  012F6C  006F FF78  F00B    	movff	postinc2,btemp+10
 12642  012F72  006F FF74  F00C    	movff	postdec2,btemp+11
 12643  012F78  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12644  012F7E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12645  012F84  006F FF78  F009    	movff	postinc2,btemp+8
 12646  012F8A  006F FF78  F00A    	movff	postinc2,btemp+9
 12647  012F90  006F FF78  F00B    	movff	postinc2,btemp+10
 12648  012F96  006F FF78  F00C    	movff	postinc2,btemp+11
 12649  012F9C  5009               	movf	(btemp+8)^0,w,c
 12650  012F9E  6E11               	movwf	(btemp+16)^0,c
 12651  012FA0  500A               	movf	(btemp+9)^0,w,c
 12652  012FA2  6E12               	movwf	(btemp+17)^0,c
 12653  012FA4  500B               	movf	(btemp+10)^0,w,c
 12654  012FA6  6E13               	movwf	(btemp+18)^0,c
 12655  012FA8  500C               	movf	(btemp+11)^0,w,c
 12656  012FAA  6E14               	movwf	(btemp+19)^0,c
 12657  012FAC  D758               	goto	L10
 12658  012FAE                     l12411:
 12659                           
 12660                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 12661                           ;stkvar	_fmt @ sp[(-32)+-4]
 12662  012FAE  0EDC               	movlw	-36
 12663  012FB0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12664  012FB6  0EDD               	movlw	-35
 12665  012FB8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12666  012FBE  006F FF7B FFF6     	movff	postinc2,tblptrl
 12667  012FC4  006F FF77 FFF7     	movff	postdec2,tblptrh
 12668  012FCA                     	if	0	;tblptru may be non-zero
 12669  012FCA                     	endif
 12670  012FCA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12671  012FCA  0E00               	movlw	low (__mediumconst shr (0+16))
 12672  012FCC  6EF8               	movwf	tblptru,c
 12673  012FCE                     	endif
 12674  012FCE  0008               	tblrd		*
 12675  012FD0  50F5               	movf	tablat,w,c
 12676  012FD2  0A78               	xorlw	120
 12677  012FD4  B4D8               	btfsc	status,2,c
 12678  012FD6  D015               	goto	u12100
 12679                           
 12680                           ;stkvar	_fmt @ sp[(-32)+-4]
 12681  012FD8  0EDC               	movlw	-36
 12682  012FDA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12683  012FE0  0EDD               	movlw	-35
 12684  012FE2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12685  012FE8  006F FF7B FFF6     	movff	postinc2,tblptrl
 12686  012FEE  006F FF77 FFF7     	movff	postdec2,tblptrh
 12687  012FF4                     	if	0	;tblptru may be non-zero
 12688  012FF4                     	endif
 12689  012FF4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12690  012FF4  0E00               	movlw	low (__mediumconst shr (0+16))
 12691  012FF6  6EF8               	movwf	tblptru,c
 12692  012FF8                     	endif
 12693  012FF8  0008               	tblrd		*
 12694  012FFA  50F5               	movf	tablat,w,c
 12695  012FFC  0A58               	xorlw	88
 12696  012FFE  A4D8               	btfss	status,2,c
 12697  013000  D094               	goto	l12425
 12698  013002                     u12100:
 12699                           
 12700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 12701                           ;stkvar	_fmt @ sp[(-32)+-4]
 12702  013002  0EDC               	movlw	-36
 12703  013004  006F FF8F FFD9     	movff	plusw1,fsr2l
 12704  01300A  0EDD               	movlw	-35
 12705  01300C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12706  013012  006F FF7B FFF6     	movff	postinc2,tblptrl
 12707  013018  006F FF77 FFF7     	movff	postdec2,tblptrh
 12708  01301E                     	if	0	;tblptru may be non-zero
 12709  01301E                     	endif
 12710  01301E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12711  01301E  0E00               	movlw	low (__mediumconst shr (0+16))
 12712  013020  6EF8               	movwf	tblptru,c
 12713  013022                     	endif
 12714                           
 12715                           ;stkvar	_c @ sp[(-32)+31]
 12716  013022  0008               	tblrd		*
 12717  013024  0EFF               	movlw	-1
 12718  013026  006F FFD7 FFE3     	movff	tablat,plusw1
 12719                           
 12720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 12721                           ;stkvar	_fmt @ sp[(-32)+-4]
 12722  01302C  0EDC               	movlw	-36
 12723  01302E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12724  013034  0EDD               	movlw	-35
 12725  013036  006F FF8F FFDA     	movff	plusw1,fsr2h
 12726  01303C  2ADE               	incf	postinc2,f,c
 12727  01303E  0E00               	movlw	0
 12728  013040  22DD               	addwfc	postdec2,f,c
 12729                           
 12730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 12731                           ;stkvar	_ap @ sp[(-32)+-6]
 12732  013042  0EDA               	movlw	-38
 12733  013044  006F FF8F FFD9     	movff	plusw1,fsr2l
 12734  01304A  0EDB               	movlw	-37
 12735  01304C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12736  013052  0E02               	movlw	2
 12737  013054  5EDE               	subwf	postinc2,f,c
 12738  013056  0E00               	movlw	0
 12739  013058  5ADD               	subwfb	postdec2,f,c
 12740  01305A  006F FF78  F00B    	movff	postinc2,btemp+10
 12741  013060  006F FF74  F00C    	movff	postdec2,btemp+11
 12742  013066  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12743  01306C  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12744  013072  006F FF78  F00B    	movff	postinc2,btemp+10
 12745  013078  006F FF74  F00C    	movff	postdec2,btemp+11
 12746  01307E  500B               	movf	(btemp+10)^0,w,c
 12747  013080  6E11               	movwf	(btemp+16)^0,c
 12748  013082  500C               	movf	(btemp+11)^0,w,c
 12749  013084  6E12               	movwf	(btemp+17)^0,c
 12750  013086  6A13               	clrf	(btemp+18)^0,c
 12751  013088  6A14               	clrf	(btemp+19)^0,c
 12752  01308A  6A15               	clrf	(btemp+20)^0,c
 12753  01308C  6A16               	clrf	(btemp+21)^0,c
 12754  01308E  6A17               	clrf	(btemp+22)^0,c
 12755  013090  6A18               	clrf	(btemp+23)^0,c
 12756                           
 12757                           ;stkvar	_llu @ sp[(-32)+6]
 12758  013092  0EE6               	movlw	-26
 12759  013094  0060  F047  FFE3   	movff	btemp+16,plusw1
 12760  01309A  0EE7               	movlw	-25
 12761  01309C  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12762  0130A2  0EE8               	movlw	-24
 12763  0130A4  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12764  0130AA  0EE9               	movlw	-23
 12765  0130AC  0060  F053  FFE3   	movff	btemp+19,plusw1
 12766  0130B2  0EEA               	movlw	-22
 12767  0130B4  0060  F057  FFE3   	movff	btemp+20,plusw1
 12768  0130BA  0EEB               	movlw	-21
 12769  0130BC  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12770  0130C2  0EEC               	movlw	-20
 12771  0130C4  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12772  0130CA  0EED               	movlw	-19
 12773  0130CC  0060  F063  FFE3   	movff	btemp+23,plusw1
 12774                           
 12775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 12776                           ;stkvar	_c @ sp[(-32)+31]
 12777  0130D2  0EFF               	movlw	-1
 12778  0130D4  50E3               	movf	plusw1,w,c
 12779  0130D6  6EE6               	movwf	postinc1,c
 12780                           
 12781                           ;stkvar	_llu @ sp[(-33)+6]
 12782  0130D8  50E1               	movf	fsr1l,w,c
 12783  0130DA  0FE5               	addlw	-27
 12784  0130DC  6ED9               	movwf	fsr2l,c
 12785  0130DE  50E2               	movf	fsr1h,w,c
 12786  0130E0  6EDA               	movwf	fsr2h,c
 12787  0130E2  0EFF               	movlw	255
 12788  0130E4  22DA               	addwfc	fsr2h,f,c
 12789  0130E6  006F FF7B FFE6     	movff	postinc2,postinc1
 12790  0130EC  006F FF7B FFE6     	movff	postinc2,postinc1
 12791  0130F2  006F FF7B FFE6     	movff	postinc2,postinc1
 12792  0130F8  006F FF7B FFE6     	movff	postinc2,postinc1
 12793  0130FE  006F FF7B FFE6     	movff	postinc2,postinc1
 12794  013104  006F FF7B FFE6     	movff	postinc2,postinc1
 12795  01310A  006F FF7B FFE6     	movff	postinc2,postinc1
 12796  013110  006F FF7B FFE6     	movff	postinc2,postinc1
 12797                           
 12798                           ;stkvar	_fp @ sp[(-41)+-2]
 12799  013116  0ED5               	movlw	-43
 12800  013118  006F FF8F FFE6     	movff	plusw1,postinc1
 12801  01311E  006F FF8F FFE6     	movff	plusw1,postinc1
 12802  013124  ECC9  F0AE         	call	_xtoa	;wreg free
 12803  013128  D105               	goto	l2363
 12804  01312A                     l12425:
 12805                           
 12806                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 12807  01312A  0E02               	movlw	2
 12808  01312C  6EE6               	movwf	postinc1,c
 12809  01312E  0E00               	movlw	0
 12810  013130  6EE6               	movwf	postinc1,c
 12811  013132  0EF5               	movlw	low STR_93
 12812  013134  6EE6               	movwf	postinc1,c
 12813  013136  0EFF               	movlw	high STR_93
 12814  013138  6EE6               	movwf	postinc1,c
 12815                           
 12816                           ;stkvar	_fmt @ sp[(-36)+-4]
 12817  01313A  0ED8               	movlw	-40
 12818  01313C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12819  013142  0ED9               	movlw	-39
 12820  013144  006F FF8F FFDA     	movff	plusw1,fsr2h
 12821  01314A  006F FF78  F00B    	movff	postinc2,btemp+10
 12822  013150  006F FF74  F00C    	movff	postdec2,btemp+11
 12823  013156  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12824  01315C  0060  F033  FFE6   	movff	btemp+11,postinc1
 12825  013162  EC7C  F0BE         	call	_strncmp	;wreg free
 12826  013166  5001               	movf	btemp^0,w,c
 12827  013168  1002               	iorwf	(btemp+1)^0,w,c
 12828  01316A  B4D8               	btfsc	status,2,c
 12829  01316C  D022               	goto	u12120
 12830  01316E  0E02               	movlw	2
 12831  013170  6EE6               	movwf	postinc1,c
 12832  013172  0E00               	movlw	0
 12833  013174  6EE6               	movwf	postinc1,c
 12834  013176  0EE6               	movlw	low STR_97
 12835  013178  6EE6               	movwf	postinc1,c
 12836  01317A  0EFF               	movlw	high STR_97
 12837  01317C  6EE6               	movwf	postinc1,c
 12838                           
 12839                           ;stkvar	_fmt @ sp[(-36)+-4]
 12840  01317E  0ED8               	movlw	-40
 12841  013180  006F FF8F FFD9     	movff	plusw1,fsr2l
 12842  013186  0ED9               	movlw	-39
 12843  013188  006F FF8F FFDA     	movff	plusw1,fsr2h
 12844  01318E  006F FF78  F00B    	movff	postinc2,btemp+10
 12845  013194  006F FF74  F00C    	movff	postdec2,btemp+11
 12846  01319A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12847  0131A0  0060  F033  FFE6   	movff	btemp+11,postinc1
 12848  0131A6  EC7C  F0BE         	call	_strncmp	;wreg free
 12849  0131AA  5001               	movf	btemp^0,w,c
 12850  0131AC  1002               	iorwf	(btemp+1)^0,w,c
 12851  0131AE  A4D8               	btfss	status,2,c
 12852  0131B0  D058               	goto	l12439
 12853  0131B2                     u12120:
 12854                           
 12855                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 12856                           ;stkvar	_fmt @ sp[(-32)+-4]
 12857  0131B2  0EDC               	movlw	-36
 12858  0131B4  006F FF8F FFD9     	movff	plusw1,fsr2l
 12859  0131BA  0EDD               	movlw	-35
 12860  0131BC  006F FF8F FFDA     	movff	plusw1,fsr2h
 12861  0131C2  006F FF78  F00B    	movff	postinc2,btemp+10
 12862  0131C8  006F FF74  F00C    	movff	postdec2,btemp+11
 12863  0131CE  0E01               	movlw	1
 12864  0131D0  260B               	addwf	(btemp+10)^0,f,c
 12865  0131D2  0E00               	movlw	0
 12866  0131D4  220C               	addwfc	(btemp+11)^0,f,c
 12867  0131D6  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12868  0131DC  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12869  0131E2                     	if	0	;tblptru may be non-zero
 12870  0131E2                     	endif
 12871  0131E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12872  0131E2  0E00               	movlw	low (__mediumconst shr (0+16))
 12873  0131E4  6EF8               	movwf	tblptru,c
 12874  0131E6                     	endif
 12875                           
 12876                           ;stkvar	_c @ sp[(-32)+31]
 12877  0131E6  0008               	tblrd		*
 12878  0131E8  0EFF               	movlw	-1
 12879  0131EA  006F FFD7 FFE3     	movff	tablat,plusw1
 12880                           
 12881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 12882                           ;stkvar	_fmt @ sp[(-32)+-4]
 12883  0131F0  0EDC               	movlw	-36
 12884  0131F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12885  0131F8  0EDD               	movlw	-35
 12886  0131FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12887  013200  0E02               	movlw	2
 12888  013202  26DE               	addwf	postinc2,f,c
 12889  013204  0E00               	movlw	0
 12890  013206  22DD               	addwfc	postdec2,f,c
 12891                           
 12892                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 12893                           ;stkvar	_ap @ sp[(-32)+-6]
 12894  013208  0EDA               	movlw	-38
 12895  01320A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12896  013210  0EDB               	movlw	-37
 12897  013212  006F FF8F FFDA     	movff	plusw1,fsr2h
 12898  013218  0E04               	movlw	4
 12899  01321A  5EDE               	subwf	postinc2,f,c
 12900  01321C  0E00               	movlw	0
 12901  01321E  5ADD               	subwfb	postdec2,f,c
 12902  013220  006F FF78  F00B    	movff	postinc2,btemp+10
 12903  013226  006F FF74  F00C    	movff	postdec2,btemp+11
 12904  01322C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12905  013232  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12906  013238  006F FF78  F009    	movff	postinc2,btemp+8
 12907  01323E  006F FF78  F00A    	movff	postinc2,btemp+9
 12908  013244  006F FF78  F00B    	movff	postinc2,btemp+10
 12909  01324A  006F FF78  F00C    	movff	postinc2,btemp+11
 12910  013250  5009               	movf	(btemp+8)^0,w,c
 12911  013252  6E11               	movwf	(btemp+16)^0,c
 12912  013254  500A               	movf	(btemp+9)^0,w,c
 12913  013256  6E12               	movwf	(btemp+17)^0,c
 12914  013258  500B               	movf	(btemp+10)^0,w,c
 12915  01325A  6E13               	movwf	(btemp+18)^0,c
 12916  01325C  500C               	movf	(btemp+11)^0,w,c
 12917  01325E  6E14               	movwf	(btemp+19)^0,c
 12918  013260  D714               	goto	L11
 12919  013262                     l12439:
 12920                           
 12921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 12922                           ;stkvar	_fmt @ sp[(-32)+-4]
 12923  013262  0EDC               	movlw	-36
 12924  013264  006F FF8F FFD9     	movff	plusw1,fsr2l
 12925  01326A  0EDD               	movlw	-35
 12926  01326C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12927  013272  006F FF7B FFF6     	movff	postinc2,tblptrl
 12928  013278  006F FF77 FFF7     	movff	postdec2,tblptrh
 12929  01327E                     	if	0	;tblptru may be non-zero
 12930  01327E                     	endif
 12931  01327E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12932  01327E  0E00               	movlw	low (__mediumconst shr (0+16))
 12933  013280  6EF8               	movwf	tblptru,c
 12934  013282                     	endif
 12935  013282  0008               	tblrd		*
 12936  013284  50F5               	movf	tablat,w,c
 12937  013286  0A25               	xorlw	37
 12938  013288  A4D8               	btfss	status,2,c
 12939  01328A  D01A               	goto	l12449
 12940                           
 12941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 12942                           ;stkvar	_fmt @ sp[(-32)+-4]
 12943  01328C  0EDC               	movlw	-36
 12944  01328E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12945  013294  0EDD               	movlw	-35
 12946  013296  006F FF8F FFDA     	movff	plusw1,fsr2h
 12947  01329C  2ADE               	incf	postinc2,f,c
 12948  01329E  0E00               	movlw	0
 12949  0132A0  22DD               	addwfc	postdec2,f,c
 12950                           
 12951                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 12952                           ;stkvar	_fp @ sp[(-32)+-2]
 12953  0132A2  0EDE               	movlw	-34
 12954  0132A4  006F FF8F FFE6     	movff	plusw1,postinc1
 12955  0132AA  006F FF8F FFE6     	movff	plusw1,postinc1
 12956  0132B0  0E25               	movlw	37
 12957  0132B2  6EE6               	movwf	postinc1,c
 12958  0132B4  0E00               	movlw	0
 12959  0132B6  6EE6               	movwf	postinc1,c
 12960  0132B8  EC4B  F0CA         	call	_fputc	;wreg free
 12961  0132BC                     l12445:
 12962                           
 12963                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 12964  0132BC  0E01               	movlw	1
 12965  0132BE  D00C               	goto	L12
 12966  0132C0                     l12449:
 12967                           
 12968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 12969                           ;stkvar	_fmt @ sp[(-32)+-4]
 12970  0132C0  0EDC               	movlw	-36
 12971  0132C2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12972  0132C8  0EDD               	movlw	-35
 12973  0132CA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12974  0132D0  2ADE               	incf	postinc2,f,c
 12975  0132D2  0E00               	movlw	0
 12976  0132D4  22DD               	addwfc	postdec2,f,c
 12977                           
 12978                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 12979  0132D6  0E00               	movlw	0
 12980  0132D8                     L12:
 12981  0132D8  6E01               	movwf	btemp^0,c
 12982  0132DA  0E00               	movlw	0
 12983  0132DC  6E02               	movwf	(btemp+1)^0,c
 12984  0132DE  D02A               	goto	l2363
 12985  0132E0                     l12455:
 12986                           
 12987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 12988                           ;stkvar	_fp @ sp[(-32)+-2]
 12989  0132E0  0EDE               	movlw	-34
 12990  0132E2  006F FF8F FFE6     	movff	plusw1,postinc1
 12991  0132E8  006F FF8F FFE6     	movff	plusw1,postinc1
 12992                           
 12993                           ;stkvar	_fmt @ sp[(-34)+-4]
 12994  0132EE  0EDA               	movlw	-38
 12995  0132F0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12996  0132F6  0EDB               	movlw	-37
 12997  0132F8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12998  0132FE  006F FF7B FFF6     	movff	postinc2,tblptrl
 12999  013304  006F FF77 FFF7     	movff	postdec2,tblptrh
 13000  01330A                     	if	0	;tblptru may be non-zero
 13001  01330A                     	endif
 13002  01330A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13003  01330A  0E00               	movlw	low (__mediumconst shr (0+16))
 13004  01330C  6EF8               	movwf	tblptru,c
 13005  01330E                     	endif
 13006  01330E  0008               	tblrd		*
 13007  013310  50F5               	movf	tablat,w,c
 13008  013312  6EE6               	movwf	postinc1,c
 13009  013314  0E00               	movlw	0
 13010  013316  6EE6               	movwf	postinc1,c
 13011  013318  EC4B  F0CA         	call	_fputc	;wreg free
 13012                           
 13013                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 13014                           ;stkvar	_fmt @ sp[(-32)+-4]
 13015  01331C  0EDC               	movlw	-36
 13016  01331E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13017  013324  0EDD               	movlw	-35
 13018  013326  006F FF8F FFDA     	movff	plusw1,fsr2h
 13019  01332C  2ADE               	incf	postinc2,f,c
 13020  01332E  0E00               	movlw	0
 13021  013330  22DD               	addwfc	postdec2,f,c
 13022  013332  D7C4               	goto	l12445
 13023  013334                     l2363:
 13024                           
 13025                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 13026  013334  0EDA               	movlw	218
 13027  013336  26E1               	addwf	fsr1l,f,c
 13028  013338  0EFF               	movlw	255
 13029  01333A  22E2               	addwfc	fsr1h,f,c
 13030  01333C  0012               	return		;funcret
 13031  01333E                     __end_of_vfpfcnvrt:
 13032                           	opt callstack 0
 13033                           
 13034 ;; *************** function _xtoa *****************
 13035 ;; Defined at:
 13036 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13037 ;; Parameters:    Size  Location     Type
 13038 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13039 ;;		 -> f(6), NULL(0), 
 13040 ;;  d               8  [STACK] unsigned long long 
 13041 ;;  x               1  [STACK] unsigned char 
 13042 ;; Auto vars:     Size  Location     Type
 13043 ;;  n               8  [STACK] unsigned long long 
 13044 ;;  c               2  [STACK] int 
 13045 ;;  i               2  [STACK] int 
 13046 ;;  w               2  [STACK] int 
 13047 ;;  p               2  [STACK] int 
 13048 ;; Return value:  Size  Location     Type
 13049 ;;                  2  [STACK] int 
 13050 ;; Registers used:
 13051 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 13052 ;; Tracked objects:
 13053 ;;		On entry : 0/0
 13054 ;;		On exit  : 0/0
 13055 ;;		Unchanged: 0/0
 13056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13061 ;;Total ram usage:        0 bytes
 13062 ;; Hardware stack levels used:    1
 13063 ;; Hardware stack levels required when called:   20
 13064 ;; This function calls:
 13065 ;;		_isalpha
 13066 ;;		_isupper
 13067 ;;		_pad
 13068 ;;		_toupper
 13069 ;; This function is called by:
 13070 ;;		_vfpfcnvrt
 13071 ;; This function uses a reentrant model
 13072 ;;
 13073                           
 13074                           	psect	text46
 13075  015D92                     __ptext46:
 13076                           	opt callstack 0
 13077  015D92                     _xtoa:
 13078                           	opt callstack 0
 13079                           
 13080                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 13081  015D92  0E14               	movlw	20
 13082  015D94  26E1               	addwf	fsr1l,f,c
 13083  015D96  0E00               	movlw	0
 13084  015D98  22E2               	addwfc	fsr1h,f,c
 13085                           
 13086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 13087                           
 13088                           ;incstack = 0
 13089 ;; hardware stack exceeded
 13090  015D9A  AE3D               	btfss	(_prec+1)^0,7,c
 13091                           
 13092                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 13093  015D9C  923E               	bcf	_flags^0,1,c
 13094                           
 13095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 13096  015D9E  BE3D               	btfsc	(_prec+1)^0,7,c
 13097  015DA0  D005               	goto	u11650
 13098  015DA2  503D               	movf	(_prec+1)^0,w,c
 13099  015DA4  E110               	bnz	l12179
 13100  015DA6  043C               	decf	_prec^0,w,c
 13101  015DA8  B0D8               	btfsc	status,0,c
 13102  015DAA  D00D               	goto	l12179
 13103  015DAC                     u11650:
 13104  015DAC  0E01               	movlw	1
 13105  015DAE  6E0B               	movwf	(btemp+10)^0,c
 13106  015DB0  0E00               	movlw	0
 13107  015DB2  6E0C               	movwf	(btemp+11)^0,c
 13108                           
 13109                           ;stkvar	_p @ sp[(-20)+18]
 13110  015DB4  0EFE               	movlw	-2
 13111  015DB6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13112  015DBC  0EFF               	movlw	-1
 13113  015DBE  0060  F033  FFE3   	movff	btemp+11,plusw1
 13114  015DC4  D008               	goto	l2313
 13115  015DC6                     l12179:
 13116                           
 13117                           ;stkvar	_p @ sp[(-20)+18]
 13118  015DC6  0EFE               	movlw	-2
 13119  015DC8  0060  F0F3  FFE3   	movff	_prec,plusw1
 13120  015DCE  0EFF               	movlw	-1
 13121  015DD0  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 13122  015DD6                     l2313:
 13123                           
 13124                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 13125                           ;stkvar	_w @ sp[(-20)+16]
 13126  015DD6  0EFC               	movlw	-4
 13127  015DD8  0060  F0EB  FFE3   	movff	_width,plusw1
 13128  015DDE  0EFD               	movlw	-3
 13129  015DE0  0060  F0EF  FFE3   	movff	_width+1,plusw1
 13130                           
 13131                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 13132  015DE6  A83E               	btfss	_flags^0,4,c
 13133  015DE8  D00B               	goto	l12185
 13134                           
 13135                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 13136                           ;stkvar	_w @ sp[(-20)+16]
 13137  015DEA  50E1               	movf	fsr1l,w,c
 13138  015DEC  0FFC               	addlw	-4
 13139  015DEE  6ED9               	movwf	fsr2l,c
 13140  015DF0  50E2               	movf	fsr1h,w,c
 13141  015DF2  6EDA               	movwf	fsr2h,c
 13142  015DF4  0EFF               	movlw	255
 13143  015DF6  22DA               	addwfc	fsr2h,f,c
 13144  015DF8  0EFE               	movlw	254
 13145  015DFA  26DE               	addwf	postinc2,f,c
 13146  015DFC  0EFF               	movlw	255
 13147  015DFE  22DD               	addwfc	postdec2,f,c
 13148  015E00                     l12185:
 13149                           
 13150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 13151                           ;stkvar	_d @ sp[(-20)+-10]
 13152  015E00  0EE2               	movlw	226
 13153  015E02  24E1               	addwf	fsr1l,w,c
 13154  015E04  6ED9               	movwf	fsr2l,c
 13155  015E06  0EFF               	movlw	255
 13156  015E08  20E2               	addwfc	fsr1h,w,c
 13157  015E0A  6EDA               	movwf	fsr2h,c
 13158                           
 13159                           ;stkvar	_n @ sp[(-20)+4]
 13160  015E0C  0E08               	movlw	8
 13161  015E0E  6E01               	movwf	btemp^0,c
 13162  015E10  0EF0               	movlw	-16
 13163  015E12                     us1167999:
 13164  015E12  006F FF7B FFE3     	movff	postinc2,plusw1
 13165  015E18  28E8               	incf	wreg,w,c
 13166  015E1A  2E01               	decfsz	btemp^0,f,c
 13167  015E1C  D7FA               	bra	us1167999
 13168                           
 13169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 13170  015E1E  0E4F               	movlw	79
 13171  015E20  6E0B               	movwf	(btemp+10)^0,c
 13172  015E22  0E00               	movlw	0
 13173  015E24  6E0C               	movwf	(btemp+11)^0,c
 13174                           
 13175                           ;stkvar	_i @ sp[(-20)+14]
 13176  015E26  0EFA               	movlw	-6
 13177  015E28  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13178  015E2E  0EFB               	movlw	-5
 13179  015E30  0060  F033  FFE3   	movff	btemp+11,plusw1
 13180                           
 13181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 13182  015E36  0102               	movlb	2	; () banked
 13183  015E38  6BC5               	clrf	(_dbuf+79)& (0+255),b
 13184                           
 13185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13186  015E3A  D0EE               	goto	l12223
 13187  015E3C                     l12191:
 13188                           
 13189                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 13190                           ;stkvar	_i @ sp[(-20)+14]
 13191  015E3C  50E1               	movf	fsr1l,w,c
 13192  015E3E  0FFA               	addlw	-6
 13193  015E40  6ED9               	movwf	fsr2l,c
 13194  015E42  50E2               	movf	fsr1h,w,c
 13195  015E44  6EDA               	movwf	fsr2h,c
 13196  015E46  0EFF               	movlw	255
 13197  015E48  22DA               	addwfc	fsr2h,f,c
 13198  015E4A  06DE               	decf	postinc2,f,c
 13199  015E4C  0E00               	movlw	0
 13200  015E4E  5ADD               	subwfb	postdec2,f,c
 13201                           
 13202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 13203                           ;stkvar	_n @ sp[(-20)+4]
 13204  015E50  0EF0               	movlw	-16
 13205  015E52  006F FF8C  F00B    	movff	plusw1,btemp+10
 13206  015E58  0EF1               	movlw	-15
 13207  015E5A  006F FF8C  F00C    	movff	plusw1,btemp+11
 13208  015E60  0E0F               	movlw	15
 13209  015E62  160B               	andwf	(btemp+10)^0,f,c
 13210  015E64  0E00               	movlw	0
 13211  015E66  160C               	andwf	(btemp+11)^0,f,c
 13212                           
 13213                           ;stkvar	_c @ sp[(-20)+12]
 13214  015E68  0EF8               	movlw	-8
 13215  015E6A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13216  015E70  0EF9               	movlw	-7
 13217  015E72  0060  F033  FFE3   	movff	btemp+11,plusw1
 13218                           
 13219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 13220                           ;stkvar	_c @ sp[(-20)+12]
 13221  015E78  0EF9               	movlw	-7
 13222  015E7A  BEE3               	btfsc	plusw1,7,c
 13223  015E7C  D00F               	goto	l12199
 13224  015E7E  0EF9               	movlw	-7
 13225  015E80  50E3               	movf	plusw1,w,c
 13226  015E82  E108               	bnz	u11680
 13227  015E84  0EF8               	movlw	-8
 13228  015E86  006F FF8C  F001    	movff	plusw1,btemp
 13229  015E8C  0E0A               	movlw	10
 13230  015E8E  5E01               	subwf	btemp^0,f,c
 13231  015E90  A0D8               	btfss	status,0,c
 13232  015E92  D004               	goto	l12199
 13233  015E94                     u11680:
 13234                           
 13235                           ;stkvar	_c @ sp[(-20)+12]
 13236  015E94  0EF8               	movlw	-8
 13237  015E96  50E3               	movf	plusw1,w,c
 13238  015E98  0F57               	addlw	87
 13239  015E9A  D003               	goto	L13
 13240  015E9C                     l12199:
 13241                           
 13242                           ;stkvar	_c @ sp[(-20)+12]
 13243  015E9C  0EF8               	movlw	-8
 13244  015E9E  50E3               	movf	plusw1,w,c
 13245  015EA0  0F30               	addlw	48
 13246  015EA2                     L13:
 13247  015EA2  6E0B               	movwf	(btemp+10)^0,c
 13248  015EA4  0EF9               	movlw	-7
 13249  015EA6  006F FF8C  F00C    	movff	plusw1,btemp+11
 13250  015EAC  0E00               	movlw	0
 13251  015EAE  220C               	addwfc	(btemp+11)^0,f,c
 13252                           
 13253                           ;stkvar	_c @ sp[(-20)+12]
 13254  015EB0  0EF8               	movlw	-8
 13255  015EB2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13256  015EB8  0EF9               	movlw	-7
 13257  015EBA  0060  F033  FFE3   	movff	btemp+11,plusw1
 13258  015EC0  0EBF               	movlw	191
 13259  015EC2  6E0B               	movwf	(btemp+10)^0,c
 13260  015EC4  0EFF               	movlw	255
 13261  015EC6  6E0C               	movwf	(btemp+11)^0,c
 13262                           
 13263                           ;stkvar	_x @ sp[(-20)+-11]
 13264  015EC8  0EE1               	movlw	-31
 13265  015ECA  50E3               	movf	plusw1,w,c
 13266  015ECC  6E09               	movwf	(btemp+8)^0,c
 13267  015ECE  6A0A               	clrf	(btemp+9)^0,c
 13268  015ED0  500B               	movf	(btemp+10)^0,w,c
 13269  015ED2  2609               	addwf	(btemp+8)^0,f,c
 13270  015ED4  500C               	movf	(btemp+11)^0,w,c
 13271  015ED6  220A               	addwfc	(btemp+9)^0,f,c
 13272  015ED8  500A               	movf	(btemp+9)^0,w,c
 13273  015EDA  E106               	bnz	u11690
 13274  015EDC  0E1A               	movlw	26
 13275  015EDE  5C09               	subwf	(btemp+8)^0,w,c
 13276  015EE0  B0D8               	btfsc	status,0,c
 13277  015EE2  D002               	goto	u11690
 13278  015EE4  0E01               	movlw	1
 13279  015EE6  D001               	goto	u11700
 13280  015EE8                     u11690:
 13281  015EE8  0E00               	movlw	0
 13282  015EEA                     u11700:
 13283  015EEA  6E0B               	movwf	(btemp+10)^0,c
 13284  015EEC  6A0C               	clrf	(btemp+11)^0,c
 13285                           
 13286                           ;stkvar	_xtoa$5529 @ sp[(-20)+2]
 13287  015EEE  0EEE               	movlw	-18
 13288  015EF0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13289  015EF6  0EEF               	movlw	-17
 13290  015EF8  0060  F033  FFE3   	movff	btemp+11,plusw1
 13291                           
 13292                           ;stkvar	_xtoa$5529 @ sp[(-20)+2]
 13293  015EFE  0EEE               	movlw	-18
 13294  015F00  006F FF8C  F001    	movff	plusw1,btemp
 13295  015F06  0EEF               	movlw	-17
 13296  015F08  50E3               	movf	plusw1,w,c
 13297  015F0A  1001               	iorwf	btemp^0,w,c
 13298  015F0C  B4D8               	btfsc	status,2,c
 13299  015F0E  D041               	goto	l12215
 13300  015F10  0E9F               	movlw	159
 13301  015F12  6E0B               	movwf	(btemp+10)^0,c
 13302  015F14  0EFF               	movlw	255
 13303  015F16  6E0C               	movwf	(btemp+11)^0,c
 13304                           
 13305                           ;stkvar	_c @ sp[(-20)+12]
 13306  015F18  0EF8               	movlw	-8
 13307  015F1A  006F FF8C  F009    	movff	plusw1,btemp+8
 13308  015F20  0EF9               	movlw	-7
 13309  015F22  006F FF8C  F00A    	movff	plusw1,btemp+9
 13310  015F28  0E20               	movlw	32
 13311  015F2A  1209               	iorwf	(btemp+8)^0,f,c
 13312  015F2C  0E00               	movlw	0
 13313  015F2E  120A               	iorwf	(btemp+9)^0,f,c
 13314  015F30  500B               	movf	(btemp+10)^0,w,c
 13315  015F32  2609               	addwf	(btemp+8)^0,f,c
 13316  015F34  500C               	movf	(btemp+11)^0,w,c
 13317  015F36  220A               	addwfc	(btemp+9)^0,f,c
 13318  015F38  500A               	movf	(btemp+9)^0,w,c
 13319  015F3A  E106               	bnz	u11720
 13320  015F3C  0E1A               	movlw	26
 13321  015F3E  5C09               	subwf	(btemp+8)^0,w,c
 13322  015F40  B0D8               	btfsc	status,0,c
 13323  015F42  D002               	goto	u11720
 13324  015F44  0E01               	movlw	1
 13325  015F46  D001               	goto	u11730
 13326  015F48                     u11720:
 13327  015F48  0E00               	movlw	0
 13328  015F4A                     u11730:
 13329  015F4A  6E0B               	movwf	(btemp+10)^0,c
 13330  015F4C  6A0C               	clrf	(btemp+11)^0,c
 13331                           
 13332                           ;stkvar	_xtoa$5530 @ sp[(-20)+0]
 13333  015F4E  0EEC               	movlw	-20
 13334  015F50  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13335  015F56  0EED               	movlw	-19
 13336  015F58  0060  F033  FFE3   	movff	btemp+11,plusw1
 13337                           
 13338                           ;stkvar	_xtoa$5530 @ sp[(-20)+0]
 13339  015F5E  0EEC               	movlw	-20
 13340  015F60  006F FF8C  F001    	movff	plusw1,btemp
 13341  015F66  0EED               	movlw	-19
 13342  015F68  50E3               	movf	plusw1,w,c
 13343  015F6A  1001               	iorwf	btemp^0,w,c
 13344  015F6C  B4D8               	btfsc	status,2,c
 13345  015F6E  D011               	goto	l12215
 13346                           
 13347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 13348                           ;stkvar	_c @ sp[(-20)+12]
 13349  015F70  0EF8               	movlw	-8
 13350  015F72  006F FF8F FFE6     	movff	plusw1,postinc1
 13351  015F78  006F FF8F FFE6     	movff	plusw1,postinc1
 13352  015F7E  ECB6  F0D4         	call	_toupper	;wreg free
 13353                           
 13354                           ;stkvar	_c @ sp[(-20)+12]
 13355  015F82  0EF8               	movlw	-8
 13356  015F84  0060  F007  FFE3   	movff	btemp,plusw1
 13357  015F8A  0EF9               	movlw	-7
 13358  015F8C  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13359  015F92                     l12215:
 13360                           
 13361                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 13362                           ;stkvar	_c @ sp[(-20)+12]
 13363                           ;stkvar	_i @ sp[(-20)+14]
 13364  015F92  0EFA               	movlw	-6
 13365  015F94  006F FF8C  F00B    	movff	plusw1,btemp+10
 13366  015F9A  0EFB               	movlw	-5
 13367  015F9C  006F FF8C  F00C    	movff	plusw1,btemp+11
 13368  015FA2  0E76               	movlw	low _dbuf
 13369  015FA4  240B               	addwf	(btemp+10)^0,w,c
 13370  015FA6  6ED9               	movwf	fsr2l,c
 13371  015FA8  0E02               	movlw	high _dbuf
 13372  015FAA  200C               	addwfc	(btemp+11)^0,w,c
 13373  015FAC  6EDA               	movwf	fsr2h,c
 13374  015FAE  0EF8               	movlw	-8
 13375  015FB0  006F FF8F FFDF     	movff	plusw1,indf2
 13376                           
 13377                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 13378                           ;stkvar	_p @ sp[(-20)+18]
 13379  015FB6  50E1               	movf	fsr1l,w,c
 13380  015FB8  0FFE               	addlw	-2
 13381  015FBA  6ED9               	movwf	fsr2l,c
 13382  015FBC  50E2               	movf	fsr1h,w,c
 13383  015FBE  6EDA               	movwf	fsr2h,c
 13384  015FC0  0EFF               	movlw	255
 13385  015FC2  22DA               	addwfc	fsr2h,f,c
 13386  015FC4  06DE               	decf	postinc2,f,c
 13387  015FC6  0E00               	movlw	0
 13388  015FC8  5ADD               	subwfb	postdec2,f,c
 13389                           
 13390                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 13391                           ;stkvar	_w @ sp[(-20)+16]
 13392  015FCA  50E1               	movf	fsr1l,w,c
 13393  015FCC  0FFC               	addlw	-4
 13394  015FCE  6ED9               	movwf	fsr2l,c
 13395  015FD0  50E2               	movf	fsr1h,w,c
 13396  015FD2  6EDA               	movwf	fsr2h,c
 13397  015FD4  0EFF               	movlw	255
 13398  015FD6  22DA               	addwfc	fsr2h,f,c
 13399  015FD8  06DE               	decf	postinc2,f,c
 13400  015FDA  0E00               	movlw	0
 13401  015FDC  5ADD               	subwfb	postdec2,f,c
 13402                           
 13403                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 13404  015FDE  0E04               	movlw	4
 13405  015FE0  6E0C               	movwf	(btemp+11)^0,c
 13406                           
 13407                           ;stkvar	_n @ sp[(-20)+4]
 13408  015FE2  50E1               	movf	fsr1l,w,c
 13409  015FE4  0FF0               	addlw	-16
 13410  015FE6  6ED9               	movwf	fsr2l,c
 13411  015FE8  50E2               	movf	fsr1h,w,c
 13412  015FEA  6EDA               	movwf	fsr2h,c
 13413  015FEC  0EFF               	movlw	255
 13414  015FEE  22DA               	addwfc	fsr2h,f,c
 13415  015FF0  280C               	incf	(btemp+11)^0,w,c
 13416  015FF2  52DE               	movf	postinc2,f,c
 13417  015FF4  D00F               	goto	u11750
 13418  015FF6                     u11755:
 13419  015FF6  52DE               	movf	postinc2,f,c
 13420  015FF8  52DE               	movf	postinc2,f,c
 13421  015FFA  52DE               	movf	postinc2,f,c
 13422  015FFC  52DE               	movf	postinc2,f,c
 13423  015FFE  52DE               	movf	postinc2,f,c
 13424  016000  52DE               	movf	postinc2,f,c
 13425  016002  90D8               	bcf	status,0,c
 13426  016004  32DD               	rrcf	postdec2,f,c
 13427  016006  32DD               	rrcf	postdec2,f,c
 13428  016008  32DD               	rrcf	postdec2,f,c
 13429  01600A  32DD               	rrcf	postdec2,f,c
 13430  01600C  32DD               	rrcf	postdec2,f,c
 13431  01600E  32DD               	rrcf	postdec2,f,c
 13432  016010  32DD               	rrcf	postdec2,f,c
 13433  016012  32DE               	rrcf	postinc2,f,c
 13434  016014                     u11750:
 13435  016014  2EE8               	decfsz	wreg,f,c
 13436  016016  D7EF               	goto	u11755
 13437  016018                     l12223:
 13438                           
 13439                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13440                           ;stkvar	_i @ sp[(-20)+14]
 13441  016018  0EFB               	movlw	-5
 13442  01601A  BEE3               	btfsc	plusw1,7,c
 13443  01601C  D03A               	goto	u11800
 13444  01601E  0EFB               	movlw	-5
 13445  016020  50E3               	movf	plusw1,w,c
 13446  016022  E108               	bnz	u11760
 13447  016024  0EFA               	movlw	-6
 13448  016026  006F FF8C  F001    	movff	plusw1,btemp
 13449  01602C  0E02               	movlw	2
 13450  01602E  5E01               	subwf	btemp^0,f,c
 13451  016030  A0D8               	btfss	status,0,c
 13452  016032  D02F               	goto	u11800
 13453  016034                     u11760:
 13454                           
 13455                           ;stkvar	_n @ sp[(-20)+4]
 13456  016034  0EF0               	movlw	-16
 13457  016036  50E3               	movf	plusw1,w,c
 13458  016038  E115               	bnz	u11771
 13459  01603A  0EF1               	movlw	-15
 13460  01603C  50E3               	movf	plusw1,w,c
 13461  01603E  E112               	bnz	u11771
 13462  016040  0EF2               	movlw	-14
 13463  016042  50E3               	movf	plusw1,w,c
 13464  016044  E10F               	bnz	u11771
 13465  016046  0EF3               	movlw	-13
 13466  016048  50E3               	movf	plusw1,w,c
 13467  01604A  E10C               	bnz	u11771
 13468  01604C  0EF4               	movlw	-12
 13469  01604E  50E3               	movf	plusw1,w,c
 13470  016050  E109               	bnz	u11771
 13471  016052  0EF5               	movlw	-11
 13472  016054  50E3               	movf	plusw1,w,c
 13473  016056  E106               	bnz	u11771
 13474  016058  0EF6               	movlw	-10
 13475  01605A  50E3               	movf	plusw1,w,c
 13476  01605C  E103               	bnz	u11771
 13477  01605E  0EF7               	movlw	-9
 13478  016060  50E3               	movf	plusw1,w,c
 13479  016062  A4D8               	btfss	status,2,c
 13480  016064                     u11771:
 13481  016064  D6EB               	goto	l12191
 13482                           
 13483                           ;stkvar	_p @ sp[(-20)+18]
 13484  016066  0EFF               	movlw	-1
 13485  016068  BEE3               	btfsc	plusw1,7,c
 13486  01606A  D007               	goto	u11780
 13487  01606C  0EFF               	movlw	-1
 13488  01606E  50E3               	movf	plusw1,w,c
 13489  016070  E103               	bnz	u11781
 13490  016072  0EFE               	movlw	-2
 13491  016074  04E3               	decf	plusw1,w,c
 13492  016076  B0D8               	btfsc	status,0,c
 13493  016078                     u11781:
 13494  016078  D6E1               	goto	l12191
 13495  01607A                     u11780:
 13496                           
 13497                           ;stkvar	_w @ sp[(-20)+16]
 13498  01607A  0EFD               	movlw	-3
 13499  01607C  BEE3               	btfsc	plusw1,7,c
 13500  01607E  D009               	goto	u11800
 13501  016080  0EFD               	movlw	-3
 13502  016082  50E3               	movf	plusw1,w,c
 13503  016084  E104               	bnz	u11790
 13504  016086  0EFC               	movlw	-4
 13505  016088  04E3               	decf	plusw1,w,c
 13506  01608A  A0D8               	btfss	status,0,c
 13507  01608C  D002               	goto	u11800
 13508  01608E                     u11790:
 13509  01608E  B23E               	btfsc	_flags^0,1,c
 13510  016090  D6D5               	goto	l12191
 13511  016092                     u11800:
 13512                           
 13513                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 13514  016092  A83E               	btfss	_flags^0,4,c
 13515  016094  D036               	goto	l12239
 13516                           
 13517                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 13518                           ;stkvar	_i @ sp[(-20)+14]
 13519  016096  50E1               	movf	fsr1l,w,c
 13520  016098  0FFA               	addlw	-6
 13521  01609A  6ED9               	movwf	fsr2l,c
 13522  01609C  50E2               	movf	fsr1h,w,c
 13523  01609E  6EDA               	movwf	fsr2h,c
 13524  0160A0  0EFF               	movlw	255
 13525  0160A2  22DA               	addwfc	fsr2h,f,c
 13526  0160A4  06DE               	decf	postinc2,f,c
 13527  0160A6  0E00               	movlw	0
 13528  0160A8  5ADD               	subwfb	postdec2,f,c
 13529                           
 13530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 13531                           ;stkvar	_x @ sp[(-20)+-11]
 13532                           ;stkvar	_i @ sp[(-20)+14]
 13533  0160AA  0EFA               	movlw	-6
 13534  0160AC  006F FF8C  F00B    	movff	plusw1,btemp+10
 13535  0160B2  0EFB               	movlw	-5
 13536  0160B4  006F FF8C  F00C    	movff	plusw1,btemp+11
 13537  0160BA  0E76               	movlw	low _dbuf
 13538  0160BC  240B               	addwf	(btemp+10)^0,w,c
 13539  0160BE  6ED9               	movwf	fsr2l,c
 13540  0160C0  0E02               	movlw	high _dbuf
 13541  0160C2  200C               	addwfc	(btemp+11)^0,w,c
 13542  0160C4  6EDA               	movwf	fsr2h,c
 13543  0160C6  0EE1               	movlw	-31
 13544  0160C8  006F FF8F FFDF     	movff	plusw1,indf2
 13545                           
 13546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 13547                           ;stkvar	_i @ sp[(-20)+14]
 13548  0160CE  50E1               	movf	fsr1l,w,c
 13549  0160D0  0FFA               	addlw	-6
 13550  0160D2  6ED9               	movwf	fsr2l,c
 13551  0160D4  50E2               	movf	fsr1h,w,c
 13552  0160D6  6EDA               	movwf	fsr2h,c
 13553  0160D8  0EFF               	movlw	255
 13554  0160DA  22DA               	addwfc	fsr2h,f,c
 13555  0160DC  06DE               	decf	postinc2,f,c
 13556  0160DE  0E00               	movlw	0
 13557  0160E0  5ADD               	subwfb	postdec2,f,c
 13558                           
 13559                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 13560                           ;stkvar	_i @ sp[(-20)+14]
 13561  0160E2  0EFA               	movlw	-6
 13562  0160E4  006F FF8C  F00B    	movff	plusw1,btemp+10
 13563  0160EA  0EFB               	movlw	-5
 13564  0160EC  006F FF8C  F00C    	movff	plusw1,btemp+11
 13565  0160F2  0E76               	movlw	low _dbuf
 13566  0160F4  240B               	addwf	(btemp+10)^0,w,c
 13567  0160F6  6ED9               	movwf	fsr2l,c
 13568  0160F8  0E02               	movlw	high _dbuf
 13569  0160FA  200C               	addwfc	(btemp+11)^0,w,c
 13570  0160FC  6EDA               	movwf	fsr2h,c
 13571  0160FE  0E30               	movlw	48
 13572  016100  6EDF               	movwf	indf2,c
 13573  016102                     l12239:
 13574                           
 13575                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 13576                           ;stkvar	_w @ sp[(-20)+16]
 13577  016102  0EFC               	movlw	-4
 13578  016104  006F FF8F FFE6     	movff	plusw1,postinc1
 13579  01610A  006F FF8F FFE6     	movff	plusw1,postinc1
 13580                           
 13581                           ;stkvar	_i @ sp[(-22)+14]
 13582  016110  0E76               	movlw	low _dbuf
 13583  016112  6E0B               	movwf	(btemp+10)^0,c
 13584  016114  0E02               	movlw	high _dbuf
 13585  016116  6E0C               	movwf	(btemp+11)^0,c
 13586  016118  0EF8               	movlw	-8
 13587  01611A  50E3               	movf	plusw1,w,c
 13588  01611C  260B               	addwf	(btemp+10)^0,f,c
 13589  01611E  0EF9               	movlw	-7
 13590  016120  50E3               	movf	plusw1,w,c
 13591  016122  220C               	addwfc	(btemp+11)^0,f,c
 13592  016124  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13593  01612A  0060  F033  FFE6   	movff	btemp+11,postinc1
 13594                           
 13595                           ;stkvar	_fp @ sp[(-24)+-2]
 13596  016130  0EE6               	movlw	-26
 13597  016132  006F FF8F FFE6     	movff	plusw1,postinc1
 13598  016138  006F FF8F FFE6     	movff	plusw1,postinc1
 13599  01613E  ECF6  F0CB         	call	_pad	;wreg free
 13600                           
 13601                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 13602  016142  0EE1               	movlw	225
 13603  016144  26E1               	addwf	fsr1l,f,c
 13604  016146  0EFF               	movlw	255
 13605  016148  22E2               	addwfc	fsr1h,f,c
 13606  01614A  0012               	return		;funcret
 13607  01614C                     __end_of_xtoa:
 13608                           	opt callstack 0
 13609                           
 13610 ;; *************** function _toupper *****************
 13611 ;; Defined at:
 13612 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 13613 ;; Parameters:    Size  Location     Type
 13614 ;;  c               2  [STACK] int 
 13615 ;; Auto vars:     Size  Location     Type
 13616 ;;		None
 13617 ;; Return value:  Size  Location     Type
 13618 ;;                  2  [STACK] int 
 13619 ;; Registers used:
 13620 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13621 ;; Tracked objects:
 13622 ;;		On entry : 0/2
 13623 ;;		On exit  : 0/0
 13624 ;;		Unchanged: 0/0
 13625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13630 ;;Total ram usage:        0 bytes
 13631 ;; Hardware stack levels used:    1
 13632 ;; Hardware stack levels required when called:   16
 13633 ;; This function calls:
 13634 ;;		_islower
 13635 ;; This function is called by:
 13636 ;;		_xtoa
 13637 ;; This function uses a reentrant model
 13638 ;;
 13639                           
 13640                           	psect	text47
 13641  01A96C                     __ptext47:
 13642                           	opt callstack 0
 13643  01A96C                     _toupper:
 13644                           	opt callstack 0
 13645                           
 13646                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13647  01A96C  52E6               	movf	postinc1,f,c
 13648  01A96E  52E6               	movf	postinc1,f,c
 13649                           
 13650                           ;stkvar	_c @ sp[(-2)+-2]
 13651                           
 13652                           ;incstack = 0
 13653 ;; hardware stack exceeded
 13654  01A970  0EFC               	movlw	-4
 13655  01A972  50E3               	movf	plusw1,w,c
 13656  01A974  0F9F               	addlw	159
 13657  01A976  6E0B               	movwf	(btemp+10)^0,c
 13658  01A978  0EFD               	movlw	-3
 13659  01A97A  006F FF8C  F00C    	movff	plusw1,btemp+11
 13660  01A980  0EFF               	movlw	255
 13661  01A982  220C               	addwfc	(btemp+11)^0,f,c
 13662  01A984  500C               	movf	(btemp+11)^0,w,c
 13663  01A986  E106               	bnz	u6130
 13664  01A988  0E1A               	movlw	26
 13665  01A98A  5C0B               	subwf	(btemp+10)^0,w,c
 13666  01A98C  B0D8               	btfsc	status,0,c
 13667  01A98E  D002               	goto	u6130
 13668  01A990  0E01               	movlw	1
 13669  01A992  D001               	goto	u6140
 13670  01A994                     u6130:
 13671  01A994  0E00               	movlw	0
 13672  01A996                     u6140:
 13673  01A996  6E0B               	movwf	(btemp+10)^0,c
 13674  01A998  6A0C               	clrf	(btemp+11)^0,c
 13675                           
 13676                           ;stkvar	_toupper$6336 @ sp[(-2)+0]
 13677  01A99A  0EFE               	movlw	-2
 13678  01A99C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13679  01A9A2  0EFF               	movlw	-1
 13680  01A9A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 13681                           
 13682                           ;stkvar	_toupper$6336 @ sp[(-2)+0]
 13683  01A9AA  0EFE               	movlw	-2
 13684  01A9AC  006F FF8C  F001    	movff	plusw1,btemp
 13685  01A9B2  0EFF               	movlw	-1
 13686  01A9B4  50E3               	movf	plusw1,w,c
 13687  01A9B6  1001               	iorwf	btemp^0,w,c
 13688  01A9B8  B4D8               	btfsc	status,2,c
 13689  01A9BA  D00D               	goto	l7965
 13690                           
 13691                           ;stkvar	_c @ sp[(-2)+-2]
 13692  01A9BC  0EFC               	movlw	-4
 13693  01A9BE  006F FF8C  F001    	movff	plusw1,btemp
 13694  01A9C4  0EFD               	movlw	-3
 13695  01A9C6  006F FF8C  F002    	movff	plusw1,btemp+1
 13696  01A9CC  0E5F               	movlw	95
 13697  01A9CE  1601               	andwf	btemp^0,f,c
 13698  01A9D0  0E00               	movlw	0
 13699  01A9D2  1602               	andwf	(btemp+1)^0,f,c
 13700  01A9D4  D008               	goto	l3480
 13701  01A9D6                     l7965:
 13702                           
 13703                           ;stkvar	_c @ sp[(-2)+-2]
 13704  01A9D6  0EFC               	movlw	-4
 13705  01A9D8  006F FF8C  F001    	movff	plusw1,btemp
 13706  01A9DE  0EFD               	movlw	-3
 13707  01A9E0  006F FF8C  F002    	movff	plusw1,btemp+1
 13708  01A9E6                     l3480:
 13709                           
 13710                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13711  01A9E6  52E5               	movf	postdec1,f,c
 13712  01A9E8  52E5               	movf	postdec1,f,c
 13713  01A9EA  52E5               	movf	postdec1,f,c
 13714  01A9EC  52E5               	movf	postdec1,f,c
 13715  01A9EE  0012               	return		;funcret
 13716  01A9F0                     __end_of_toupper:
 13717                           	opt callstack 0
 13718                           
 13719 ;; *************** function _islower *****************
 13720 ;; Defined at:
 13721 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 13722 ;; Parameters:    Size  Location     Type
 13723 ;;  c               2  [STACK] int 
 13724 ;; Auto vars:     Size  Location     Type
 13725 ;;		None
 13726 ;; Return value:  Size  Location     Type
 13727 ;;                  2  [STACK] int 
 13728 ;; Registers used:
 13729 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13730 ;; Tracked objects:
 13731 ;;		On entry : 0/0
 13732 ;;		On exit  : 0/0
 13733 ;;		Unchanged: 0/0
 13734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13739 ;;Total ram usage:        0 bytes
 13740 ;; Hardware stack levels used:    1
 13741 ;; Hardware stack levels required when called:   15
 13742 ;; This function calls:
 13743 ;;		Nothing
 13744 ;; This function is called by:
 13745 ;;		_toupper
 13746 ;; This function uses a reentrant model
 13747 ;;
 13748                           
 13749                           	psect	text48
 13750  01B6AC                     __ptext48:
 13751                           	opt callstack 0
 13752  01B6AC                     _islower:
 13753                           	opt callstack 0
 13754                           
 13755                           ;stkvar	_c @ sp[(0)+-2]
 13756                           
 13757                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13758                           ;incstack = 0
 13759 ;; hardware stack exceeded
 13760  01B6AC  0EFE               	movlw	-2
 13761  01B6AE  50E3               	movf	plusw1,w,c
 13762  01B6B0  0F9F               	addlw	159
 13763  01B6B2  6E0B               	movwf	(btemp+10)^0,c
 13764  01B6B4  0EFF               	movlw	-1
 13765  01B6B6  006F FF8C  F00C    	movff	plusw1,btemp+11
 13766  01B6BC  0EFF               	movlw	255
 13767  01B6BE  220C               	addwfc	(btemp+11)^0,f,c
 13768  01B6C0  500C               	movf	(btemp+11)^0,w,c
 13769  01B6C2  E106               	bnz	u5820
 13770  01B6C4  0E1A               	movlw	26
 13771  01B6C6  5C0B               	subwf	(btemp+10)^0,w,c
 13772  01B6C8  B0D8               	btfsc	status,0,c
 13773  01B6CA  D002               	goto	u5820
 13774  01B6CC  0E01               	movlw	1
 13775  01B6CE  D001               	goto	u5830
 13776  01B6D0                     u5820:
 13777  01B6D0  0E00               	movlw	0
 13778  01B6D2                     u5830:
 13779  01B6D2  6E01               	movwf	btemp^0,c
 13780  01B6D4  6A02               	clrf	(btemp+1)^0,c
 13781                           
 13782                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13783  01B6D6  52E5               	movf	postdec1,f,c
 13784  01B6D8  52E5               	movf	postdec1,f,c
 13785  01B6DA  0012               	return		;funcret
 13786  01B6DC                     __end_of_islower:
 13787                           	opt callstack 0
 13788                           
 13789 ;; *************** function _isalpha *****************
 13790 ;; Defined at:
 13791 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 13792 ;; Parameters:    Size  Location     Type
 13793 ;;  c               2  [STACK] int 
 13794 ;; Auto vars:     Size  Location     Type
 13795 ;;		None
 13796 ;; Return value:  Size  Location     Type
 13797 ;;                  2  [STACK] int 
 13798 ;; Registers used:
 13799 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 13800 ;; Tracked objects:
 13801 ;;		On entry : 0/0
 13802 ;;		On exit  : 0/0
 13803 ;;		Unchanged: 0/0
 13804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13809 ;;Total ram usage:        0 bytes
 13810 ;; Hardware stack levels used:    1
 13811 ;; Hardware stack levels required when called:   15
 13812 ;; This function calls:
 13813 ;;		Nothing
 13814 ;; This function is called by:
 13815 ;;		_xtoa
 13816 ;; This function uses a reentrant model
 13817 ;;
 13818                           
 13819                           	psect	text49
 13820  01B33C                     __ptext49:
 13821                           	opt callstack 0
 13822  01B33C                     _isalpha:
 13823                           	opt callstack 0
 13824                           
 13825                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13826                           ;incstack = 0
 13827 ;; hardware stack exceeded
 13828  01B33C  0E9F               	movlw	159
 13829  01B33E  6E0B               	movwf	(btemp+10)^0,c
 13830  01B340  0EFF               	movlw	255
 13831  01B342  6E0C               	movwf	(btemp+11)^0,c
 13832                           
 13833                           ;stkvar	_c @ sp[(0)+-2]
 13834  01B344  0EFE               	movlw	-2
 13835  01B346  006F FF8C  F009    	movff	plusw1,btemp+8
 13836  01B34C  0EFF               	movlw	-1
 13837  01B34E  006F FF8C  F00A    	movff	plusw1,btemp+9
 13838  01B354  0E20               	movlw	32
 13839  01B356  1209               	iorwf	(btemp+8)^0,f,c
 13840  01B358  0E00               	movlw	0
 13841  01B35A  120A               	iorwf	(btemp+9)^0,f,c
 13842  01B35C  500B               	movf	(btemp+10)^0,w,c
 13843  01B35E  2609               	addwf	(btemp+8)^0,f,c
 13844  01B360  500C               	movf	(btemp+11)^0,w,c
 13845  01B362  220A               	addwfc	(btemp+9)^0,f,c
 13846  01B364  500A               	movf	(btemp+9)^0,w,c
 13847  01B366  E106               	bnz	u6110
 13848  01B368  0E1A               	movlw	26
 13849  01B36A  5C09               	subwf	(btemp+8)^0,w,c
 13850  01B36C  B0D8               	btfsc	status,0,c
 13851  01B36E  D002               	goto	u6110
 13852  01B370  0E01               	movlw	1
 13853  01B372  D001               	goto	u6120
 13854  01B374                     u6110:
 13855  01B374  0E00               	movlw	0
 13856  01B376                     u6120:
 13857  01B376  6E01               	movwf	btemp^0,c
 13858  01B378  6A02               	clrf	(btemp+1)^0,c
 13859                           
 13860                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13861  01B37A  52E5               	movf	postdec1,f,c
 13862  01B37C  52E5               	movf	postdec1,f,c
 13863  01B37E  0012               	return		;funcret
 13864  01B380                     __end_of_isalpha:
 13865                           	opt callstack 0
 13866                           
 13867 ;; *************** function _utoa *****************
 13868 ;; Defined at:
 13869 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13870 ;; Parameters:    Size  Location     Type
 13871 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13872 ;;		 -> f(6), NULL(0), 
 13873 ;;  d               8  [STACK] unsigned long long 
 13874 ;; Auto vars:     Size  Location     Type
 13875 ;;  n               8  [STACK] unsigned long long 
 13876 ;;  i               2  [STACK] int 
 13877 ;;  w               2  [STACK] int 
 13878 ;;  p               2  [STACK] int 
 13879 ;; Return value:  Size  Location     Type
 13880 ;;                  2  [STACK] int 
 13881 ;; Registers used:
 13882 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 13883 ;; Tracked objects:
 13884 ;;		On entry : 0/0
 13885 ;;		On exit  : 0/0
 13886 ;;		Unchanged: 0/0
 13887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13892 ;;Total ram usage:        0 bytes
 13893 ;; Hardware stack levels used:    1
 13894 ;; Hardware stack levels required when called:   20
 13895 ;; This function calls:
 13896 ;;		___lodiv
 13897 ;;		___lomod
 13898 ;;		_pad
 13899 ;; This function is called by:
 13900 ;;		_vfpfcnvrt
 13901 ;; This function uses a reentrant model
 13902 ;;
 13903                           
 13904                           	psect	text50
 13905  0164B8                     __ptext50:
 13906                           	opt callstack 0
 13907  0164B8                     _utoa:
 13908                           	opt callstack 0
 13909                           
 13910                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 13911  0164B8  0E0E               	movlw	14
 13912  0164BA  26E1               	addwf	fsr1l,f,c
 13913  0164BC  0E00               	movlw	0
 13914  0164BE  22E2               	addwfc	fsr1h,f,c
 13915                           
 13916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 13917                           
 13918                           ;incstack = 0
 13919 ;; hardware stack exceeded
 13920  0164C0  AE3D               	btfss	(_prec+1)^0,7,c
 13921                           
 13922                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 13923  0164C2  923E               	bcf	_flags^0,1,c
 13924                           
 13925                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 13926  0164C4  BE3D               	btfsc	(_prec+1)^0,7,c
 13927  0164C6  D005               	goto	u11570
 13928  0164C8  503D               	movf	(_prec+1)^0,w,c
 13929  0164CA  E110               	bnz	l12139
 13930  0164CC  043C               	decf	_prec^0,w,c
 13931  0164CE  B0D8               	btfsc	status,0,c
 13932  0164D0  D00D               	goto	l12139
 13933  0164D2                     u11570:
 13934  0164D2  0E01               	movlw	1
 13935  0164D4  6E0B               	movwf	(btemp+10)^0,c
 13936  0164D6  0E00               	movlw	0
 13937  0164D8  6E0C               	movwf	(btemp+11)^0,c
 13938                           
 13939                           ;stkvar	_p @ sp[(-14)+12]
 13940  0164DA  0EFE               	movlw	-2
 13941  0164DC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13942  0164E2  0EFF               	movlw	-1
 13943  0164E4  0060  F033  FFE3   	movff	btemp+11,plusw1
 13944  0164EA  D008               	goto	l2298
 13945  0164EC                     l12139:
 13946                           
 13947                           ;stkvar	_p @ sp[(-14)+12]
 13948  0164EC  0EFE               	movlw	-2
 13949  0164EE  0060  F0F3  FFE3   	movff	_prec,plusw1
 13950  0164F4  0EFF               	movlw	-1
 13951  0164F6  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 13952  0164FC                     l2298:
 13953                           
 13954                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 13955                           ;stkvar	_w @ sp[(-14)+10]
 13956  0164FC  0EFC               	movlw	-4
 13957  0164FE  0060  F0EB  FFE3   	movff	_width,plusw1
 13958  016504  0EFD               	movlw	-3
 13959  016506  0060  F0EF  FFE3   	movff	_width+1,plusw1
 13960                           
 13961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 13962                           ;stkvar	_d @ sp[(-14)+-10]
 13963  01650C  0EE8               	movlw	232
 13964  01650E  24E1               	addwf	fsr1l,w,c
 13965  016510  6ED9               	movwf	fsr2l,c
 13966  016512  0EFF               	movlw	255
 13967  016514  20E2               	addwfc	fsr1h,w,c
 13968  016516  6EDA               	movwf	fsr2h,c
 13969                           
 13970                           ;stkvar	_n @ sp[(-14)+0]
 13971  016518  0E08               	movlw	8
 13972  01651A  6E01               	movwf	btemp^0,c
 13973  01651C  0EF2               	movlw	-14
 13974  01651E                     us1158999:
 13975  01651E  006F FF7B FFE3     	movff	postinc2,plusw1
 13976  016524  28E8               	incf	wreg,w,c
 13977  016526  2E01               	decfsz	btemp^0,f,c
 13978  016528  D7FA               	bra	us1158999
 13979                           
 13980                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 13981  01652A  0E4F               	movlw	79
 13982  01652C  6E0B               	movwf	(btemp+10)^0,c
 13983  01652E  0E00               	movlw	0
 13984  016530  6E0C               	movwf	(btemp+11)^0,c
 13985                           
 13986                           ;stkvar	_i @ sp[(-14)+8]
 13987  016532  0EFA               	movlw	-6
 13988  016534  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13989  01653A  0EFB               	movlw	-5
 13990  01653C  0060  F033  FFE3   	movff	btemp+11,plusw1
 13991                           
 13992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 13993  016542  0102               	movlb	2	; () banked
 13994  016544  6BC5               	clrf	(_dbuf+79)& (0+255),b
 13995                           
 13996                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 13997  016546  D0FB               	goto	l12157
 13998  016548                     l12147:
 13999                           
 14000                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 14001                           ;stkvar	_i @ sp[(-14)+8]
 14002  016548  50E1               	movf	fsr1l,w,c
 14003  01654A  0FFA               	addlw	-6
 14004  01654C  6ED9               	movwf	fsr2l,c
 14005  01654E  50E2               	movf	fsr1h,w,c
 14006  016550  6EDA               	movwf	fsr2h,c
 14007  016552  0EFF               	movlw	255
 14008  016554  22DA               	addwfc	fsr2h,f,c
 14009  016556  06DE               	decf	postinc2,f,c
 14010  016558  0E00               	movlw	0
 14011  01655A  5ADD               	subwfb	postdec2,f,c
 14012                           
 14013                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 14014  01655C  0E0A               	movlw	10
 14015  01655E  6EE6               	movwf	postinc1,c
 14016  016560  0E00               	movlw	0
 14017  016562  6EE6               	movwf	postinc1,c
 14018  016564  0E00               	movlw	0
 14019  016566  6EE6               	movwf	postinc1,c
 14020  016568  0E00               	movlw	0
 14021  01656A  6EE6               	movwf	postinc1,c
 14022  01656C  0E00               	movlw	0
 14023  01656E  6EE6               	movwf	postinc1,c
 14024  016570  0E00               	movlw	0
 14025  016572  6EE6               	movwf	postinc1,c
 14026  016574  0E00               	movlw	0
 14027  016576  6EE6               	movwf	postinc1,c
 14028  016578  0E00               	movlw	0
 14029  01657A  6EE6               	movwf	postinc1,c
 14030                           
 14031                           ;stkvar	_n @ sp[(-22)+0]
 14032  01657C  50E1               	movf	fsr1l,w,c
 14033  01657E  0FEA               	addlw	-22
 14034  016580  6ED9               	movwf	fsr2l,c
 14035  016582  50E2               	movf	fsr1h,w,c
 14036  016584  6EDA               	movwf	fsr2h,c
 14037  016586  0EFF               	movlw	255
 14038  016588  22DA               	addwfc	fsr2h,f,c
 14039  01658A  006F FF7B FFE6     	movff	postinc2,postinc1
 14040  016590  006F FF7B FFE6     	movff	postinc2,postinc1
 14041  016596  006F FF7B FFE6     	movff	postinc2,postinc1
 14042  01659C  006F FF7B FFE6     	movff	postinc2,postinc1
 14043  0165A2  006F FF7B FFE6     	movff	postinc2,postinc1
 14044  0165A8  006F FF7B FFE6     	movff	postinc2,postinc1
 14045  0165AE  006F FF7B FFE6     	movff	postinc2,postinc1
 14046  0165B4  006F FF7B FFE6     	movff	postinc2,postinc1
 14047  0165BA  EC74  F0C8         	call	___lomod	;wreg free
 14048  0165BE  52E5               	movf	postdec1,f,c
 14049  0165C0  006F FF9C  F018    	movff	indf1,btemp+23
 14050  0165C6  52E5               	movf	postdec1,f,c
 14051  0165C8  006F FF9C  F017    	movff	indf1,btemp+22
 14052  0165CE  52E5               	movf	postdec1,f,c
 14053  0165D0  006F FF9C  F016    	movff	indf1,btemp+21
 14054  0165D6  52E5               	movf	postdec1,f,c
 14055  0165D8  006F FF9C  F015    	movff	indf1,btemp+20
 14056  0165DE  52E5               	movf	postdec1,f,c
 14057  0165E0  006F FF9C  F014    	movff	indf1,btemp+19
 14058  0165E6  52E5               	movf	postdec1,f,c
 14059  0165E8  006F FF9C  F013    	movff	indf1,btemp+18
 14060  0165EE  52E5               	movf	postdec1,f,c
 14061  0165F0  006F FF9C  F012    	movff	indf1,btemp+17
 14062  0165F6  52E5               	movf	postdec1,f,c
 14063  0165F8  006F FF9C  F011    	movff	indf1,btemp+16
 14064  0165FE  0EF8               	movlw	248
 14065  016600  26E1               	addwf	fsr1l,f,c
 14066  016602  0EFF               	movlw	255
 14067  016604  22E2               	addwfc	fsr1h,f,c
 14068  016606  0E30               	movlw	48
 14069  016608  2611               	addwf	(btemp+16)^0,f,c
 14070                           
 14071                           ;stkvar	_i @ sp[(-14)+8]
 14072  01660A  0EFA               	movlw	-6
 14073  01660C  006F FF8C  F00B    	movff	plusw1,btemp+10
 14074  016612  0EFB               	movlw	-5
 14075  016614  006F FF8C  F00C    	movff	plusw1,btemp+11
 14076  01661A  0E76               	movlw	low _dbuf
 14077  01661C  240B               	addwf	(btemp+10)^0,w,c
 14078  01661E  6ED9               	movwf	fsr2l,c
 14079  016620  0E02               	movlw	high _dbuf
 14080  016622  200C               	addwfc	(btemp+11)^0,w,c
 14081  016624  6EDA               	movwf	fsr2h,c
 14082  016626  0060  F047  FFDF   	movff	btemp+16,indf2
 14083                           
 14084                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 14085                           ;stkvar	_p @ sp[(-14)+12]
 14086  01662C  50E1               	movf	fsr1l,w,c
 14087  01662E  0FFE               	addlw	-2
 14088  016630  6ED9               	movwf	fsr2l,c
 14089  016632  50E2               	movf	fsr1h,w,c
 14090  016634  6EDA               	movwf	fsr2h,c
 14091  016636  0EFF               	movlw	255
 14092  016638  22DA               	addwfc	fsr2h,f,c
 14093  01663A  06DE               	decf	postinc2,f,c
 14094  01663C  0E00               	movlw	0
 14095  01663E  5ADD               	subwfb	postdec2,f,c
 14096                           
 14097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 14098                           ;stkvar	_w @ sp[(-14)+10]
 14099  016640  50E1               	movf	fsr1l,w,c
 14100  016642  0FFC               	addlw	-4
 14101  016644  6ED9               	movwf	fsr2l,c
 14102  016646  50E2               	movf	fsr1h,w,c
 14103  016648  6EDA               	movwf	fsr2h,c
 14104  01664A  0EFF               	movlw	255
 14105  01664C  22DA               	addwfc	fsr2h,f,c
 14106  01664E  06DE               	decf	postinc2,f,c
 14107  016650  0E00               	movlw	0
 14108  016652  5ADD               	subwfb	postdec2,f,c
 14109                           
 14110                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 14111  016654  0E0A               	movlw	10
 14112  016656  6EE6               	movwf	postinc1,c
 14113  016658  0E00               	movlw	0
 14114  01665A  6EE6               	movwf	postinc1,c
 14115  01665C  0E00               	movlw	0
 14116  01665E  6EE6               	movwf	postinc1,c
 14117  016660  0E00               	movlw	0
 14118  016662  6EE6               	movwf	postinc1,c
 14119  016664  0E00               	movlw	0
 14120  016666  6EE6               	movwf	postinc1,c
 14121  016668  0E00               	movlw	0
 14122  01666A  6EE6               	movwf	postinc1,c
 14123  01666C  0E00               	movlw	0
 14124  01666E  6EE6               	movwf	postinc1,c
 14125  016670  0E00               	movlw	0
 14126  016672  6EE6               	movwf	postinc1,c
 14127                           
 14128                           ;stkvar	_n @ sp[(-22)+0]
 14129  016674  50E1               	movf	fsr1l,w,c
 14130  016676  0FEA               	addlw	-22
 14131  016678  6ED9               	movwf	fsr2l,c
 14132  01667A  50E2               	movf	fsr1h,w,c
 14133  01667C  6EDA               	movwf	fsr2h,c
 14134  01667E  0EFF               	movlw	255
 14135  016680  22DA               	addwfc	fsr2h,f,c
 14136  016682  006F FF7B FFE6     	movff	postinc2,postinc1
 14137  016688  006F FF7B FFE6     	movff	postinc2,postinc1
 14138  01668E  006F FF7B FFE6     	movff	postinc2,postinc1
 14139  016694  006F FF7B FFE6     	movff	postinc2,postinc1
 14140  01669A  006F FF7B FFE6     	movff	postinc2,postinc1
 14141  0166A0  006F FF7B FFE6     	movff	postinc2,postinc1
 14142  0166A6  006F FF7B FFE6     	movff	postinc2,postinc1
 14143  0166AC  006F FF7B FFE6     	movff	postinc2,postinc1
 14144  0166B2  ECF1  F0C4         	call	___lodiv	;wreg free
 14145  0166B6  52E5               	movf	postdec1,f,c
 14146  0166B8  006F FF9C  F018    	movff	indf1,btemp+23
 14147  0166BE  52E5               	movf	postdec1,f,c
 14148  0166C0  006F FF9C  F017    	movff	indf1,btemp+22
 14149  0166C6  52E5               	movf	postdec1,f,c
 14150  0166C8  006F FF9C  F016    	movff	indf1,btemp+21
 14151  0166CE  52E5               	movf	postdec1,f,c
 14152  0166D0  006F FF9C  F015    	movff	indf1,btemp+20
 14153  0166D6  52E5               	movf	postdec1,f,c
 14154  0166D8  006F FF9C  F014    	movff	indf1,btemp+19
 14155  0166DE  52E5               	movf	postdec1,f,c
 14156  0166E0  006F FF9C  F013    	movff	indf1,btemp+18
 14157  0166E6  52E5               	movf	postdec1,f,c
 14158  0166E8  006F FF9C  F012    	movff	indf1,btemp+17
 14159  0166EE  52E5               	movf	postdec1,f,c
 14160  0166F0  006F FF9C  F011    	movff	indf1,btemp+16
 14161  0166F6  0EF8               	movlw	248
 14162  0166F8  26E1               	addwf	fsr1l,f,c
 14163  0166FA  0EFF               	movlw	255
 14164  0166FC  22E2               	addwfc	fsr1h,f,c
 14165                           
 14166                           ;stkvar	_n @ sp[(-14)+0]
 14167  0166FE  0EF2               	movlw	-14
 14168  016700  0060  F047  FFE3   	movff	btemp+16,plusw1
 14169  016706  0EF3               	movlw	-13
 14170  016708  0060  F04B  FFE3   	movff	btemp+17,plusw1
 14171  01670E  0EF4               	movlw	-12
 14172  016710  0060  F04F  FFE3   	movff	btemp+18,plusw1
 14173  016716  0EF5               	movlw	-11
 14174  016718  0060  F053  FFE3   	movff	btemp+19,plusw1
 14175  01671E  0EF6               	movlw	-10
 14176  016720  0060  F057  FFE3   	movff	btemp+20,plusw1
 14177  016726  0EF7               	movlw	-9
 14178  016728  0060  F05B  FFE3   	movff	btemp+21,plusw1
 14179  01672E  0EF8               	movlw	-8
 14180  016730  0060  F05F  FFE3   	movff	btemp+22,plusw1
 14181  016736  0EF9               	movlw	-7
 14182  016738  0060  F063  FFE3   	movff	btemp+23,plusw1
 14183  01673E                     l12157:
 14184                           
 14185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 14186                           ;stkvar	_i @ sp[(-14)+8]
 14187  01673E  0EFA               	movlw	-6
 14188  016740  006F FF8C  F001    	movff	plusw1,btemp
 14189  016746  0EFB               	movlw	-5
 14190  016748  50E3               	movf	plusw1,w,c
 14191  01674A  1001               	iorwf	btemp^0,w,c
 14192  01674C  B4D8               	btfsc	status,2,c
 14193  01674E  D02F               	goto	u11630
 14194                           
 14195                           ;stkvar	_n @ sp[(-14)+0]
 14196  016750  0EF2               	movlw	-14
 14197  016752  50E3               	movf	plusw1,w,c
 14198  016754  E115               	bnz	u11601
 14199  016756  0EF3               	movlw	-13
 14200  016758  50E3               	movf	plusw1,w,c
 14201  01675A  E112               	bnz	u11601
 14202  01675C  0EF4               	movlw	-12
 14203  01675E  50E3               	movf	plusw1,w,c
 14204  016760  E10F               	bnz	u11601
 14205  016762  0EF5               	movlw	-11
 14206  016764  50E3               	movf	plusw1,w,c
 14207  016766  E10C               	bnz	u11601
 14208  016768  0EF6               	movlw	-10
 14209  01676A  50E3               	movf	plusw1,w,c
 14210  01676C  E109               	bnz	u11601
 14211  01676E  0EF7               	movlw	-9
 14212  016770  50E3               	movf	plusw1,w,c
 14213  016772  E106               	bnz	u11601
 14214  016774  0EF8               	movlw	-8
 14215  016776  50E3               	movf	plusw1,w,c
 14216  016778  E103               	bnz	u11601
 14217  01677A  0EF9               	movlw	-7
 14218  01677C  50E3               	movf	plusw1,w,c
 14219  01677E  A4D8               	btfss	status,2,c
 14220  016780                     u11601:
 14221  016780  D6E3               	goto	l12147
 14222                           
 14223                           ;stkvar	_p @ sp[(-14)+12]
 14224  016782  0EFF               	movlw	-1
 14225  016784  BEE3               	btfsc	plusw1,7,c
 14226  016786  D007               	goto	u11610
 14227  016788  0EFF               	movlw	-1
 14228  01678A  50E3               	movf	plusw1,w,c
 14229  01678C  E103               	bnz	u11611
 14230  01678E  0EFE               	movlw	-2
 14231  016790  04E3               	decf	plusw1,w,c
 14232  016792  B0D8               	btfsc	status,0,c
 14233  016794                     u11611:
 14234  016794  D6D9               	goto	l12147
 14235  016796                     u11610:
 14236                           
 14237                           ;stkvar	_w @ sp[(-14)+10]
 14238  016796  0EFD               	movlw	-3
 14239  016798  BEE3               	btfsc	plusw1,7,c
 14240  01679A  D009               	goto	u11630
 14241  01679C  0EFD               	movlw	-3
 14242  01679E  50E3               	movf	plusw1,w,c
 14243  0167A0  E104               	bnz	u11620
 14244  0167A2  0EFC               	movlw	-4
 14245  0167A4  04E3               	decf	plusw1,w,c
 14246  0167A6  A0D8               	btfss	status,0,c
 14247  0167A8  D002               	goto	u11630
 14248  0167AA                     u11620:
 14249  0167AA  B23E               	btfsc	_flags^0,1,c
 14250  0167AC  D6CD               	goto	l12147
 14251  0167AE                     u11630:
 14252                           
 14253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 14254                           ;stkvar	_w @ sp[(-14)+10]
 14255  0167AE  0EFC               	movlw	-4
 14256  0167B0  006F FF8F FFE6     	movff	plusw1,postinc1
 14257  0167B6  006F FF8F FFE6     	movff	plusw1,postinc1
 14258                           
 14259                           ;stkvar	_i @ sp[(-16)+8]
 14260  0167BC  0E76               	movlw	low _dbuf
 14261  0167BE  6E0B               	movwf	(btemp+10)^0,c
 14262  0167C0  0E02               	movlw	high _dbuf
 14263  0167C2  6E0C               	movwf	(btemp+11)^0,c
 14264  0167C4  0EF8               	movlw	-8
 14265  0167C6  50E3               	movf	plusw1,w,c
 14266  0167C8  260B               	addwf	(btemp+10)^0,f,c
 14267  0167CA  0EF9               	movlw	-7
 14268  0167CC  50E3               	movf	plusw1,w,c
 14269  0167CE  220C               	addwfc	(btemp+11)^0,f,c
 14270  0167D0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14271  0167D6  0060  F033  FFE6   	movff	btemp+11,postinc1
 14272                           
 14273                           ;stkvar	_fp @ sp[(-18)+-2]
 14274  0167DC  0EEC               	movlw	-20
 14275  0167DE  006F FF8F FFE6     	movff	plusw1,postinc1
 14276  0167E4  006F FF8F FFE6     	movff	plusw1,postinc1
 14277  0167EA  ECF6  F0CB         	call	_pad	;wreg free
 14278                           
 14279                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 14280  0167EE  0EE8               	movlw	232
 14281  0167F0  26E1               	addwf	fsr1l,f,c
 14282  0167F2  0EFF               	movlw	255
 14283  0167F4  22E2               	addwfc	fsr1h,f,c
 14284  0167F6  0012               	return		;funcret
 14285  0167F8                     __end_of_utoa:
 14286                           	opt callstack 0
 14287                           
 14288 ;; *************** function ___lomod *****************
 14289 ;; Defined at:
 14290 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 14291 ;; Parameters:    Size  Location     Type
 14292 ;;  dividend        8  [STACK] unsigned long long 
 14293 ;;  divisor         8  [STACK] unsigned long long 
 14294 ;; Auto vars:     Size  Location     Type
 14295 ;;  counter         1  [STACK] unsigned char 
 14296 ;; Return value:  Size  Location     Type
 14297 ;;                  8  [STACK] unsigned long long 
 14298 ;; Registers used:
 14299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 14300 ;; Tracked objects:
 14301 ;;		On entry : 0/2
 14302 ;;		On exit  : 0/0
 14303 ;;		Unchanged: 0/0
 14304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14309 ;;Total ram usage:        0 bytes
 14310 ;; Hardware stack levels used:    1
 14311 ;; Hardware stack levels required when called:   15
 14312 ;; This function calls:
 14313 ;;		Nothing
 14314 ;; This function is called by:
 14315 ;;		_utoa
 14316 ;; This function uses a reentrant model
 14317 ;;
 14318                           
 14319                           	psect	text51
 14320  0190E8                     __ptext51:
 14321                           	opt callstack 0
 14322  0190E8                     ___lomod:
 14323                           	opt callstack 0
 14324                           
 14325                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 14326  0190E8  52E6               	movf	postinc1,f,c
 14327                           
 14328                           ;stkvar	_divisor @ sp[(-1)+-16]
 14329                           
 14330                           ;incstack = 0
 14331 ;; hardware stack exceeded
 14332  0190EA  0EEF               	movlw	-17
 14333  0190EC  50E3               	movf	plusw1,w,c
 14334  0190EE  E116               	bnz	u7260
 14335  0190F0  0EF0               	movlw	-16
 14336  0190F2  50E3               	movf	plusw1,w,c
 14337  0190F4  E113               	bnz	u7260
 14338  0190F6  0EF1               	movlw	-15
 14339  0190F8  50E3               	movf	plusw1,w,c
 14340  0190FA  E110               	bnz	u7260
 14341  0190FC  0EF2               	movlw	-14
 14342  0190FE  50E3               	movf	plusw1,w,c
 14343  019100  E10D               	bnz	u7260
 14344  019102  0EF3               	movlw	-13
 14345  019104  50E3               	movf	plusw1,w,c
 14346  019106  E10A               	bnz	u7260
 14347  019108  0EF4               	movlw	-12
 14348  01910A  50E3               	movf	plusw1,w,c
 14349  01910C  E107               	bnz	u7260
 14350  01910E  0EF5               	movlw	-11
 14351  019110  50E3               	movf	plusw1,w,c
 14352  019112  E104               	bnz	u7260
 14353  019114  0EF6               	movlw	-10
 14354  019116  50E3               	movf	plusw1,w,c
 14355  019118  B4D8               	btfsc	status,2,c
 14356  01911A  D075               	goto	u7290
 14357  01911C                     u7260:
 14358                           
 14359                           ;stkvar	_counter @ sp[(-1)+0]
 14360  01911C  0EFF               	movlw	-1
 14361  01911E  6AE3               	clrf	plusw1,c
 14362  019120  D012               	goto	L14
 14363  019122                     l8575:
 14364                           
 14365                           ;stkvar	_divisor @ sp[(-1)+-16]
 14366  019122  90D8               	bcf	status,0,c
 14367  019124  0EEF               	movlw	-17
 14368  019126  36E3               	rlcf	plusw1,f,c
 14369  019128  0EF0               	movlw	-16
 14370  01912A  36E3               	rlcf	plusw1,f,c
 14371  01912C  0EF1               	movlw	-15
 14372  01912E  36E3               	rlcf	plusw1,f,c
 14373  019130  0EF2               	movlw	-14
 14374  019132  36E3               	rlcf	plusw1,f,c
 14375  019134  0EF3               	movlw	-13
 14376  019136  36E3               	rlcf	plusw1,f,c
 14377  019138  0EF4               	movlw	-12
 14378  01913A  36E3               	rlcf	plusw1,f,c
 14379  01913C  0EF5               	movlw	-11
 14380  01913E  36E3               	rlcf	plusw1,f,c
 14381  019140  0EF6               	movlw	-10
 14382  019142  36E3               	rlcf	plusw1,f,c
 14383                           
 14384                           ;stkvar	_counter @ sp[(-1)+0]
 14385  019144  0EFF               	movlw	-1
 14386  019146                     L14:
 14387  019146  2AE3               	incf	plusw1,f,c
 14388                           
 14389                           ;stkvar	_divisor @ sp[(-1)+-16]
 14390  019148  0EF6               	movlw	-10
 14391  01914A  AEE3               	btfss	plusw1,7,c
 14392  01914C  D7EA               	goto	l8575
 14393  01914E                     u7270:
 14394                           
 14395                           ;stkvar	_divisor @ sp[(-1)+-16]
 14396                           ;stkvar	_dividend @ sp[(-1)+-8]
 14397  01914E  50E1               	movf	fsr1l,w,c
 14398  019150  0FF7               	addlw	-9
 14399  019152  6ED9               	movwf	fsr2l,c
 14400  019154  50E2               	movf	fsr1h,w,c
 14401  019156  6EDA               	movwf	fsr2h,c
 14402  019158  0EFF               	movlw	255
 14403  01915A  22DA               	addwfc	fsr2h,f,c
 14404  01915C  0EEF               	movlw	-17
 14405  01915E  50E3               	movf	plusw1,w,c
 14406  019160  5CDE               	subwf	postinc2,w,c
 14407  019162  0EF0               	movlw	-16
 14408  019164  50E3               	movf	plusw1,w,c
 14409  019166  58DE               	subwfb	postinc2,w,c
 14410  019168  0EF1               	movlw	-15
 14411  01916A  50E3               	movf	plusw1,w,c
 14412  01916C  58DE               	subwfb	postinc2,w,c
 14413  01916E  0EF2               	movlw	-14
 14414  019170  50E3               	movf	plusw1,w,c
 14415  019172  58DE               	subwfb	postinc2,w,c
 14416  019174  0EF3               	movlw	-13
 14417  019176  50E3               	movf	plusw1,w,c
 14418  019178  58DE               	subwfb	postinc2,w,c
 14419  01917A  0EF4               	movlw	-12
 14420  01917C  50E3               	movf	plusw1,w,c
 14421  01917E  58DE               	subwfb	postinc2,w,c
 14422  019180  0EF5               	movlw	-11
 14423  019182  50E3               	movf	plusw1,w,c
 14424  019184  58DE               	subwfb	postinc2,w,c
 14425  019186  0EF6               	movlw	-10
 14426  019188  50E3               	movf	plusw1,w,c
 14427  01918A  58DE               	subwfb	postinc2,w,c
 14428  01918C  A0D8               	btfss	status,0,c
 14429  01918E  D01F               	goto	l8583
 14430                           
 14431                           ;stkvar	_divisor @ sp[(-1)+-16]
 14432                           ;stkvar	_dividend @ sp[(-1)+-8]
 14433  019190  50E1               	movf	fsr1l,w,c
 14434  019192  0FF7               	addlw	-9
 14435  019194  6ED9               	movwf	fsr2l,c
 14436  019196  50E2               	movf	fsr1h,w,c
 14437  019198  6EDA               	movwf	fsr2h,c
 14438  01919A  0EFF               	movlw	255
 14439  01919C  22DA               	addwfc	fsr2h,f,c
 14440  01919E  0EEF               	movlw	-17
 14441  0191A0  50E3               	movf	plusw1,w,c
 14442  0191A2  5EDE               	subwf	postinc2,f,c
 14443  0191A4  0EF0               	movlw	-16
 14444  0191A6  50E3               	movf	plusw1,w,c
 14445  0191A8  5ADE               	subwfb	postinc2,f,c
 14446  0191AA  0EF1               	movlw	-15
 14447  0191AC  50E3               	movf	plusw1,w,c
 14448  0191AE  5ADE               	subwfb	postinc2,f,c
 14449  0191B0  0EF2               	movlw	-14
 14450  0191B2  50E3               	movf	plusw1,w,c
 14451  0191B4  5ADE               	subwfb	postinc2,f,c
 14452  0191B6  0EF3               	movlw	-13
 14453  0191B8  50E3               	movf	plusw1,w,c
 14454  0191BA  5ADE               	subwfb	postinc2,f,c
 14455  0191BC  0EF4               	movlw	-12
 14456  0191BE  50E3               	movf	plusw1,w,c
 14457  0191C0  5ADE               	subwfb	postinc2,f,c
 14458  0191C2  0EF5               	movlw	-11
 14459  0191C4  50E3               	movf	plusw1,w,c
 14460  0191C6  5ADE               	subwfb	postinc2,f,c
 14461  0191C8  0EF6               	movlw	-10
 14462  0191CA  50E3               	movf	plusw1,w,c
 14463  0191CC  5ADE               	subwfb	postinc2,f,c
 14464  0191CE                     l8583:
 14465                           
 14466                           ;stkvar	_divisor @ sp[(-1)+-16]
 14467  0191CE  90D8               	bcf	status,0,c
 14468  0191D0  0EF6               	movlw	-10
 14469  0191D2  32E3               	rrcf	plusw1,f,c
 14470  0191D4  0EF5               	movlw	-11
 14471  0191D6  32E3               	rrcf	plusw1,f,c
 14472  0191D8  0EF4               	movlw	-12
 14473  0191DA  32E3               	rrcf	plusw1,f,c
 14474  0191DC  0EF3               	movlw	-13
 14475  0191DE  32E3               	rrcf	plusw1,f,c
 14476  0191E0  0EF2               	movlw	-14
 14477  0191E2  32E3               	rrcf	plusw1,f,c
 14478  0191E4  0EF1               	movlw	-15
 14479  0191E6  32E3               	rrcf	plusw1,f,c
 14480  0191E8  0EF0               	movlw	-16
 14481  0191EA  32E3               	rrcf	plusw1,f,c
 14482  0191EC  0EEF               	movlw	-17
 14483  0191EE  32E3               	rrcf	plusw1,f,c
 14484                           
 14485                           ;stkvar	_counter @ sp[(-1)+0]
 14486  0191F0  0EFF               	movlw	-1
 14487  0191F2  50E3               	movf	plusw1,w,c
 14488  0191F4  6E01               	movwf	btemp^0,c
 14489  0191F6  0E01               	movlw	1
 14490  0191F8  5E01               	subwf	btemp^0,f,c
 14491  0191FA  0EFF               	movlw	-1
 14492  0191FC  0060  F007  FFE3   	movff	btemp,plusw1
 14493  019202  A4D8               	btfss	status,2,c
 14494  019204  D7A4               	goto	u7270
 14495  019206                     u7290:
 14496                           
 14497                           ;stkvar	_dividend @ sp[(-1)+-8]
 14498  019206  0EF7               	movlw	247
 14499  019208  24E1               	addwf	fsr1l,w,c
 14500  01920A  6ED9               	movwf	fsr2l,c
 14501  01920C  0EFF               	movlw	255
 14502  01920E  20E2               	addwfc	fsr1h,w,c
 14503  019210  6EDA               	movwf	fsr2h,c
 14504                           
 14505                           ;stkvar	?___lomod @ sp[(-1)+-8]
 14506  019212  0E08               	movlw	8
 14507  019214  6E01               	movwf	btemp^0,c
 14508  019216  0EF7               	movlw	-9
 14509  019218                     us730999:
 14510  019218  006F FF7B FFE3     	movff	postinc2,plusw1
 14511  01921E  28E8               	incf	wreg,w,c
 14512  019220  2E01               	decfsz	btemp^0,f,c
 14513  019222  D7FA               	bra	us730999
 14514                           
 14515                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 14516  019224  52E5               	movf	postdec1,f,c
 14517  019226  0012               	return		;funcret
 14518  019228                     __end_of___lomod:
 14519                           	opt callstack 0
 14520                           
 14521 ;; *************** function ___lodiv *****************
 14522 ;; Defined at:
 14523 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 14524 ;; Parameters:    Size  Location     Type
 14525 ;;  dividend        8  [STACK] unsigned long long 
 14526 ;;  divisor         8  [STACK] unsigned long long 
 14527 ;; Auto vars:     Size  Location     Type
 14528 ;;  quotient        8  [STACK] unsigned long long 
 14529 ;;  counter         1  [STACK] unsigned char 
 14530 ;; Return value:  Size  Location     Type
 14531 ;;                  8  [STACK] unsigned long long 
 14532 ;; Registers used:
 14533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 14534 ;; Tracked objects:
 14535 ;;		On entry : 0/2
 14536 ;;		On exit  : 0/0
 14537 ;;		Unchanged: 0/0
 14538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14543 ;;Total ram usage:        0 bytes
 14544 ;; Hardware stack levels used:    1
 14545 ;; Hardware stack levels required when called:   15
 14546 ;; This function calls:
 14547 ;;		Nothing
 14548 ;; This function is called by:
 14549 ;;		_utoa
 14550 ;; This function uses a reentrant model
 14551 ;;
 14552                           
 14553                           	psect	text52
 14554  0189E2                     __ptext52:
 14555                           	opt callstack 0
 14556  0189E2                     ___lodiv:
 14557                           	opt callstack 0
 14558                           
 14559                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 14560  0189E2  0E09               	movlw	9
 14561  0189E4  26E1               	addwf	fsr1l,f,c
 14562  0189E6  0E00               	movlw	0
 14563  0189E8  22E2               	addwfc	fsr1h,f,c
 14564                           
 14565                           ;stkvar	_quotient @ sp[(-9)+0]
 14566                           
 14567                           ;incstack = 0
 14568 ;; hardware stack exceeded
 14569  0189EA  0E07               	movlw	7
 14570  0189EC  6E01               	movwf	btemp^0,c
 14571  0189EE  0EF7               	movlw	-9
 14572  0189F0                     u7201:
 14573  0189F0  6AE3               	clrf	plusw1,c
 14574  0189F2  2AE8               	incf	wreg,f,c
 14575  0189F4  0601               	decf	btemp^0,f,c
 14576  0189F6  E2FC               	bc	u7201
 14577                           
 14578                           ;stkvar	_divisor @ sp[(-9)+-16]
 14579  0189F8  0EE7               	movlw	-25
 14580  0189FA  50E3               	movf	plusw1,w,c
 14581  0189FC  E116               	bnz	u7210
 14582  0189FE  0EE8               	movlw	-24
 14583  018A00  50E3               	movf	plusw1,w,c
 14584  018A02  E113               	bnz	u7210
 14585  018A04  0EE9               	movlw	-23
 14586  018A06  50E3               	movf	plusw1,w,c
 14587  018A08  E110               	bnz	u7210
 14588  018A0A  0EEA               	movlw	-22
 14589  018A0C  50E3               	movf	plusw1,w,c
 14590  018A0E  E10D               	bnz	u7210
 14591  018A10  0EEB               	movlw	-21
 14592  018A12  50E3               	movf	plusw1,w,c
 14593  018A14  E10A               	bnz	u7210
 14594  018A16  0EEC               	movlw	-20
 14595  018A18  50E3               	movf	plusw1,w,c
 14596  018A1A  E107               	bnz	u7210
 14597  018A1C  0EED               	movlw	-19
 14598  018A1E  50E3               	movf	plusw1,w,c
 14599  018A20  E104               	bnz	u7210
 14600  018A22  0EEE               	movlw	-18
 14601  018A24  50E3               	movf	plusw1,w,c
 14602  018A26  B4D8               	btfsc	status,2,c
 14603  018A28  D088               	goto	u7240
 14604  018A2A                     u7210:
 14605                           
 14606                           ;stkvar	_counter @ sp[(-9)+8]
 14607  018A2A  0EFF               	movlw	-1
 14608  018A2C  6AE3               	clrf	plusw1,c
 14609  018A2E  D012               	goto	L15
 14610  018A30                     l8551:
 14611                           
 14612                           ;stkvar	_divisor @ sp[(-9)+-16]
 14613  018A30  90D8               	bcf	status,0,c
 14614  018A32  0EE7               	movlw	-25
 14615  018A34  36E3               	rlcf	plusw1,f,c
 14616  018A36  0EE8               	movlw	-24
 14617  018A38  36E3               	rlcf	plusw1,f,c
 14618  018A3A  0EE9               	movlw	-23
 14619  018A3C  36E3               	rlcf	plusw1,f,c
 14620  018A3E  0EEA               	movlw	-22
 14621  018A40  36E3               	rlcf	plusw1,f,c
 14622  018A42  0EEB               	movlw	-21
 14623  018A44  36E3               	rlcf	plusw1,f,c
 14624  018A46  0EEC               	movlw	-20
 14625  018A48  36E3               	rlcf	plusw1,f,c
 14626  018A4A  0EED               	movlw	-19
 14627  018A4C  36E3               	rlcf	plusw1,f,c
 14628  018A4E  0EEE               	movlw	-18
 14629  018A50  36E3               	rlcf	plusw1,f,c
 14630                           
 14631                           ;stkvar	_counter @ sp[(-9)+8]
 14632  018A52  0EFF               	movlw	-1
 14633  018A54                     L15:
 14634  018A54  2AE3               	incf	plusw1,f,c
 14635                           
 14636                           ;stkvar	_divisor @ sp[(-9)+-16]
 14637  018A56  0EEE               	movlw	-18
 14638  018A58  AEE3               	btfss	plusw1,7,c
 14639  018A5A  D7EA               	goto	l8551
 14640  018A5C                     u7220:
 14641                           
 14642                           ;stkvar	_quotient @ sp[(-9)+0]
 14643  018A5C  90D8               	bcf	status,0,c
 14644  018A5E  0EF7               	movlw	-9
 14645  018A60  36E3               	rlcf	plusw1,f,c
 14646  018A62  0EF8               	movlw	-8
 14647  018A64  36E3               	rlcf	plusw1,f,c
 14648  018A66  0EF9               	movlw	-7
 14649  018A68  36E3               	rlcf	plusw1,f,c
 14650  018A6A  0EFA               	movlw	-6
 14651  018A6C  36E3               	rlcf	plusw1,f,c
 14652  018A6E  0EFB               	movlw	-5
 14653  018A70  36E3               	rlcf	plusw1,f,c
 14654  018A72  0EFC               	movlw	-4
 14655  018A74  36E3               	rlcf	plusw1,f,c
 14656  018A76  0EFD               	movlw	-3
 14657  018A78  36E3               	rlcf	plusw1,f,c
 14658  018A7A  0EFE               	movlw	-2
 14659  018A7C  36E3               	rlcf	plusw1,f,c
 14660                           
 14661                           ;stkvar	_divisor @ sp[(-9)+-16]
 14662                           ;stkvar	_dividend @ sp[(-9)+-8]
 14663  018A7E  50E1               	movf	fsr1l,w,c
 14664  018A80  0FEF               	addlw	-17
 14665  018A82  6ED9               	movwf	fsr2l,c
 14666  018A84  50E2               	movf	fsr1h,w,c
 14667  018A86  6EDA               	movwf	fsr2h,c
 14668  018A88  0EFF               	movlw	255
 14669  018A8A  22DA               	addwfc	fsr2h,f,c
 14670  018A8C  0EE7               	movlw	-25
 14671  018A8E  50E3               	movf	plusw1,w,c
 14672  018A90  5CDE               	subwf	postinc2,w,c
 14673  018A92  0EE8               	movlw	-24
 14674  018A94  50E3               	movf	plusw1,w,c
 14675  018A96  58DE               	subwfb	postinc2,w,c
 14676  018A98  0EE9               	movlw	-23
 14677  018A9A  50E3               	movf	plusw1,w,c
 14678  018A9C  58DE               	subwfb	postinc2,w,c
 14679  018A9E  0EEA               	movlw	-22
 14680  018AA0  50E3               	movf	plusw1,w,c
 14681  018AA2  58DE               	subwfb	postinc2,w,c
 14682  018AA4  0EEB               	movlw	-21
 14683  018AA6  50E3               	movf	plusw1,w,c
 14684  018AA8  58DE               	subwfb	postinc2,w,c
 14685  018AAA  0EEC               	movlw	-20
 14686  018AAC  50E3               	movf	plusw1,w,c
 14687  018AAE  58DE               	subwfb	postinc2,w,c
 14688  018AB0  0EED               	movlw	-19
 14689  018AB2  50E3               	movf	plusw1,w,c
 14690  018AB4  58DE               	subwfb	postinc2,w,c
 14691  018AB6  0EEE               	movlw	-18
 14692  018AB8  50E3               	movf	plusw1,w,c
 14693  018ABA  58DE               	subwfb	postinc2,w,c
 14694  018ABC  A0D8               	btfss	status,0,c
 14695  018ABE  D021               	goto	l8563
 14696                           
 14697                           ;stkvar	_divisor @ sp[(-9)+-16]
 14698                           ;stkvar	_dividend @ sp[(-9)+-8]
 14699  018AC0  50E1               	movf	fsr1l,w,c
 14700  018AC2  0FEF               	addlw	-17
 14701  018AC4  6ED9               	movwf	fsr2l,c
 14702  018AC6  50E2               	movf	fsr1h,w,c
 14703  018AC8  6EDA               	movwf	fsr2h,c
 14704  018ACA  0EFF               	movlw	255
 14705  018ACC  22DA               	addwfc	fsr2h,f,c
 14706  018ACE  0EE7               	movlw	-25
 14707  018AD0  50E3               	movf	plusw1,w,c
 14708  018AD2  5EDE               	subwf	postinc2,f,c
 14709  018AD4  0EE8               	movlw	-24
 14710  018AD6  50E3               	movf	plusw1,w,c
 14711  018AD8  5ADE               	subwfb	postinc2,f,c
 14712  018ADA  0EE9               	movlw	-23
 14713  018ADC  50E3               	movf	plusw1,w,c
 14714  018ADE  5ADE               	subwfb	postinc2,f,c
 14715  018AE0  0EEA               	movlw	-22
 14716  018AE2  50E3               	movf	plusw1,w,c
 14717  018AE4  5ADE               	subwfb	postinc2,f,c
 14718  018AE6  0EEB               	movlw	-21
 14719  018AE8  50E3               	movf	plusw1,w,c
 14720  018AEA  5ADE               	subwfb	postinc2,f,c
 14721  018AEC  0EEC               	movlw	-20
 14722  018AEE  50E3               	movf	plusw1,w,c
 14723  018AF0  5ADE               	subwfb	postinc2,f,c
 14724  018AF2  0EED               	movlw	-19
 14725  018AF4  50E3               	movf	plusw1,w,c
 14726  018AF6  5ADE               	subwfb	postinc2,f,c
 14727  018AF8  0EEE               	movlw	-18
 14728  018AFA  50E3               	movf	plusw1,w,c
 14729  018AFC  5ADE               	subwfb	postinc2,f,c
 14730                           
 14731                           ;stkvar	_quotient @ sp[(-9)+0]
 14732  018AFE  0EF7               	movlw	-9
 14733  018B00  80E3               	bsf	plusw1,0,c
 14734  018B02                     l8563:
 14735                           
 14736                           ;stkvar	_divisor @ sp[(-9)+-16]
 14737  018B02  90D8               	bcf	status,0,c
 14738  018B04  0EEE               	movlw	-18
 14739  018B06  32E3               	rrcf	plusw1,f,c
 14740  018B08  0EED               	movlw	-19
 14741  018B0A  32E3               	rrcf	plusw1,f,c
 14742  018B0C  0EEC               	movlw	-20
 14743  018B0E  32E3               	rrcf	plusw1,f,c
 14744  018B10  0EEB               	movlw	-21
 14745  018B12  32E3               	rrcf	plusw1,f,c
 14746  018B14  0EEA               	movlw	-22
 14747  018B16  32E3               	rrcf	plusw1,f,c
 14748  018B18  0EE9               	movlw	-23
 14749  018B1A  32E3               	rrcf	plusw1,f,c
 14750  018B1C  0EE8               	movlw	-24
 14751  018B1E  32E3               	rrcf	plusw1,f,c
 14752  018B20  0EE7               	movlw	-25
 14753  018B22  32E3               	rrcf	plusw1,f,c
 14754                           
 14755                           ;stkvar	_counter @ sp[(-9)+8]
 14756  018B24  0EFF               	movlw	-1
 14757  018B26  50E3               	movf	plusw1,w,c
 14758  018B28  6E01               	movwf	btemp^0,c
 14759  018B2A  0E01               	movlw	1
 14760  018B2C  5E01               	subwf	btemp^0,f,c
 14761  018B2E  0EFF               	movlw	-1
 14762  018B30  0060  F007  FFE3   	movff	btemp,plusw1
 14763  018B36  A4D8               	btfss	status,2,c
 14764  018B38  D791               	goto	u7220
 14765  018B3A                     u7240:
 14766                           
 14767                           ;stkvar	_quotient @ sp[(-9)+0]
 14768  018B3A  0EF7               	movlw	247
 14769  018B3C  24E1               	addwf	fsr1l,w,c
 14770  018B3E  6ED9               	movwf	fsr2l,c
 14771  018B40  0EFF               	movlw	255
 14772  018B42  20E2               	addwfc	fsr1h,w,c
 14773  018B44  6EDA               	movwf	fsr2h,c
 14774                           
 14775                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 14776  018B46  0E08               	movlw	8
 14777  018B48  6E01               	movwf	btemp^0,c
 14778  018B4A  0EEF               	movlw	-17
 14779  018B4C                     us725999:
 14780  018B4C  006F FF7B FFE3     	movff	postinc2,plusw1
 14781  018B52  28E8               	incf	wreg,w,c
 14782  018B54  2E01               	decfsz	btemp^0,f,c
 14783  018B56  D7FA               	bra	us725999
 14784                           
 14785                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 14786  018B58  0EF7               	movlw	247
 14787  018B5A  26E1               	addwf	fsr1l,f,c
 14788  018B5C  0EFF               	movlw	255
 14789  018B5E  22E2               	addwfc	fsr1h,f,c
 14790  018B60  0012               	return		;funcret
 14791  018B62                     __end_of___lodiv:
 14792                           	opt callstack 0
 14793                           
 14794 ;; *************** function _strncmp *****************
 14795 ;; Defined at:
 14796 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 14797 ;; Parameters:    Size  Location     Type
 14798 ;;  _l              2  [STACK] PTR const unsigned char 
 14799 ;;		 -> ct(3), STR_65(103), STR_63(3), STR_62(3), 
 14800 ;;		 -> STR_61(19), STR_60(19), STR_59(19), STR_58(19), 
 14801 ;;		 -> STR_57(19), STR_56(19), STR_55(24), STR_54(15), 
 14802 ;;		 -> STR_53(15), STR_52(15), STR_51(10), STR_50(10), 
 14803 ;;		 -> STR_49(19), STR_48(19), STR_45(3), STR_44(3), 
 14804 ;;		 -> STR_43(3), STR_42(17), STR_41(16), STR_40(16), 
 14805 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
 14806 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
 14807 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
 14808 ;;		 -> STR_27(19), STR_26(19), STR_25(20), STR_24(19), 
 14809 ;;		 -> STR_23(19), STR_22(20), STR_21(17), STR_20(16), 
 14810 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 14811 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
 14812 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
 14813 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 14814 ;;		 -> STR_2(15), STR_1(17), 
 14815 ;;  _r              2  [STACK] PTR const unsigned char 
 14816 ;;		 -> STR_99(3), STR_95(3), STR_90(3), STR_85(3), 
 14817 ;;		 -> STR_80(3), STR_76(3), 
 14818 ;;  n               2  [STACK] unsigned int 
 14819 ;; Auto vars:     Size  Location     Type
 14820 ;;  r               2  [STACK] PTR const unsigned char 
 14821 ;;		 -> STR_99(3), STR_95(3), STR_90(3), STR_85(3), 
 14822 ;;		 -> STR_80(3), STR_76(3), 
 14823 ;;  l               2  [STACK] PTR const unsigned char 
 14824 ;;		 -> ct(3), STR_65(103), STR_63(3), STR_62(3), 
 14825 ;;		 -> STR_61(19), STR_60(19), STR_59(19), STR_58(19), 
 14826 ;;		 -> STR_57(19), STR_56(19), STR_55(24), STR_54(15), 
 14827 ;;		 -> STR_53(15), STR_52(15), STR_51(10), STR_50(10), 
 14828 ;;		 -> STR_49(19), STR_48(19), STR_45(3), STR_44(3), 
 14829 ;;		 -> STR_43(3), STR_42(17), STR_41(16), STR_40(16), 
 14830 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
 14831 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
 14832 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
 14833 ;;		 -> STR_27(19), STR_26(19), STR_25(20), STR_24(19), 
 14834 ;;		 -> STR_23(19), STR_22(20), STR_21(17), STR_20(16), 
 14835 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 14836 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
 14837 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
 14838 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 14839 ;;		 -> STR_2(15), STR_1(17), 
 14840 ;; Return value:  Size  Location     Type
 14841 ;;                  2  [STACK] int 
 14842 ;; Registers used:
 14843 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 14844 ;; Tracked objects:
 14845 ;;		On entry : 0/0
 14846 ;;		On exit  : 0/0
 14847 ;;		Unchanged: 0/0
 14848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14853 ;;Total ram usage:        0 bytes
 14854 ;; Hardware stack levels used:    1
 14855 ;; Hardware stack levels required when called:   15
 14856 ;; This function calls:
 14857 ;;		Nothing
 14858 ;; This function is called by:
 14859 ;;		_vfpfcnvrt
 14860 ;; This function uses a reentrant model
 14861 ;;
 14862                           
 14863                           	psect	text53
 14864  017CF8                     __ptext53:
 14865                           	opt callstack 0
 14866  017CF8                     _strncmp:
 14867                           	opt callstack 0
 14868                           
 14869                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14870  017CF8  52E6               	movf	postinc1,f,c
 14871  017CFA  52E6               	movf	postinc1,f,c
 14872  017CFC  52E6               	movf	postinc1,f,c
 14873  017CFE  52E6               	movf	postinc1,f,c
 14874                           
 14875                           ;stkvar	__l @ sp[(-4)+-2]
 14876                           
 14877                           ;incstack = 0
 14878 ;; hardware stack exceeded
 14879  017D00  0EFA               	movlw	-6
 14880  017D02  006F FF8C  F00B    	movff	plusw1,btemp+10
 14881  017D08  0EFB               	movlw	-5
 14882  017D0A  006F FF8C  F00C    	movff	plusw1,btemp+11
 14883                           
 14884                           ;stkvar	_l @ sp[(-4)+2]
 14885  017D10  0EFF               	movlw	-1
 14886  017D12  0060  F033  FFE3   	movff	btemp+11,plusw1
 14887  017D18  0EFE               	movlw	-2
 14888  017D1A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14889                           
 14890                           ;stkvar	__r @ sp[(-4)+-4]
 14891  017D20  0EF8               	movlw	-8
 14892  017D22  006F FF8C  F00B    	movff	plusw1,btemp+10
 14893  017D28  0EF9               	movlw	-7
 14894  017D2A  006F FF8C  F00C    	movff	plusw1,btemp+11
 14895                           
 14896                           ;stkvar	_r @ sp[(-4)+0]
 14897  017D30  0EFD               	movlw	-3
 14898  017D32  0060  F033  FFE3   	movff	btemp+11,plusw1
 14899  017D38  0EFC               	movlw	-4
 14900  017D3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14901                           
 14902                           ;stkvar	_n @ sp[(-4)+-6]
 14903  017D40  0EF6               	movlw	-10
 14904  017D42  006F FF8C  F001    	movff	plusw1,btemp
 14905  017D48  0E01               	movlw	1
 14906  017D4A  5E01               	subwf	btemp^0,f,c
 14907  017D4C  0EF6               	movlw	-10
 14908  017D4E  0060  F007  FFE3   	movff	btemp,plusw1
 14909  017D54  0EF7               	movlw	-9
 14910  017D56  006F FF8C  F001    	movff	plusw1,btemp
 14911  017D5C  0E00               	movlw	0
 14912  017D5E  5A01               	subwfb	btemp^0,f,c
 14913  017D60  0EF7               	movlw	-9
 14914  017D62  0060  F007  FFE3   	movff	btemp,plusw1
 14915  017D68  0EF6               	movlw	-10
 14916  017D6A  28E3               	incf	plusw1,w,c
 14917  017D6C  E13F               	bnz	l9259
 14918  017D6E  0EF7               	movlw	-9
 14919  017D70  28E3               	incf	plusw1,w,c
 14920  017D72  A4D8               	btfss	status,2,c
 14921  017D74  D03B               	goto	l9259
 14922  017D76  0E00               	movlw	0
 14923  017D78  6E01               	movwf	btemp^0,c
 14924  017D7A  0E00               	movlw	0
 14925  017D7C  6E02               	movwf	(btemp+1)^0,c
 14926  017D7E  D0C7               	goto	l3452
 14927  017D80                     l9257:
 14928                           
 14929                           ;stkvar	_l @ sp[(-4)+2]
 14930  017D80  0EFE               	movlw	-2
 14931  017D82  50E3               	movf	plusw1,w,c
 14932  017D84  0F01               	addlw	1
 14933  017D86  6E01               	movwf	btemp^0,c
 14934  017D88  0EFE               	movlw	-2
 14935  017D8A  0060  F007  FFE3   	movff	btemp,plusw1
 14936  017D90  6A01               	clrf	btemp^0,c
 14937  017D92  0EFF               	movlw	-1
 14938  017D94  50E3               	movf	plusw1,w,c
 14939  017D96  2001               	addwfc	btemp^0,w,c
 14940  017D98  6E01               	movwf	btemp^0,c
 14941  017D9A  0EFF               	movlw	-1
 14942  017D9C  0060  F007  FFE3   	movff	btemp,plusw1
 14943                           
 14944                           ;stkvar	_r @ sp[(-4)+0]
 14945  017DA2  0EFC               	movlw	-4
 14946  017DA4  50E3               	movf	plusw1,w,c
 14947  017DA6  0F01               	addlw	1
 14948  017DA8  6E01               	movwf	btemp^0,c
 14949  017DAA  0EFC               	movlw	-4
 14950  017DAC  0060  F007  FFE3   	movff	btemp,plusw1
 14951  017DB2  6A01               	clrf	btemp^0,c
 14952  017DB4  0EFD               	movlw	-3
 14953  017DB6  50E3               	movf	plusw1,w,c
 14954  017DB8  2001               	addwfc	btemp^0,w,c
 14955  017DBA  6E01               	movwf	btemp^0,c
 14956  017DBC  0EFD               	movlw	-3
 14957  017DBE  0060  F007  FFE3   	movff	btemp,plusw1
 14958                           
 14959                           ;stkvar	_n @ sp[(-4)+-6]
 14960  017DC4  0EF6               	movlw	-10
 14961  017DC6  006F FF8C  F001    	movff	plusw1,btemp
 14962  017DCC  0E01               	movlw	1
 14963  017DCE  5E01               	subwf	btemp^0,f,c
 14964  017DD0  0EF6               	movlw	-10
 14965  017DD2  0060  F007  FFE3   	movff	btemp,plusw1
 14966  017DD8  0EF7               	movlw	-9
 14967  017DDA  006F FF8C  F001    	movff	plusw1,btemp
 14968  017DE0  0E00               	movlw	0
 14969  017DE2  5A01               	subwfb	btemp^0,f,c
 14970  017DE4  0EF7               	movlw	-9
 14971  017DE6  0060  F007  FFE3   	movff	btemp,plusw1
 14972  017DEC                     l9259:
 14973                           
 14974                           ;stkvar	_l @ sp[(-4)+2]
 14975  017DEC  0EFE               	movlw	-2
 14976  017DEE  006F FF8F FFF6     	movff	plusw1,tblptrl
 14977  017DF4  0EFF               	movlw	-1
 14978  017DF6  006F FF8F FFF7     	movff	plusw1,tblptrh
 14979  017DFC  0E00               	movlw	low (__mediumconst shr (0+16))
 14980  017DFE  6EF8               	movwf	tblptru,c
 14981  017E00  0E1F               	movlw	(high __ramtop+-1)
 14982  017E02  64F7               	cpfsgt	tblptrh,c
 14983  017E04  D003               	bra	u8537
 14984  017E06  0008               	tblrd		*
 14985  017E08  50F5               	movf	tablat,w,c
 14986  017E0A  D007               	bra	u8530
 14987  017E0C                     u8537:
 14988  017E0C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14989  017E12  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14990  017E18  50EF               	movf	indf0,w,c
 14991  017E1A                     u8530:
 14992  017E1A  0900               	iorlw	0
 14993  017E1C  B4D8               	btfsc	status,2,c
 14994  017E1E  D04A               	goto	u8570
 14995                           
 14996                           ;stkvar	_r @ sp[(-4)+0]
 14997  017E20  50E1               	movf	fsr1l,w,c
 14998  017E22  0FFC               	addlw	-4
 14999  017E24  6ED9               	movwf	fsr2l,c
 15000  017E26  50E2               	movf	fsr1h,w,c
 15001  017E28  6EDA               	movwf	fsr2h,c
 15002  017E2A  0EFF               	movlw	255
 15003  017E2C  22DA               	addwfc	fsr2h,f,c
 15004  017E2E  006F FF7B FFF6     	movff	postinc2,tblptrl
 15005  017E34  006F FF77 FFF7     	movff	postdec2,tblptrh
 15006  017E3A                     	if	0	;tblptru may be non-zero
 15007  017E3A                     	endif
 15008  017E3A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15009  017E3A  0E00               	movlw	low (__mediumconst shr (0+16))
 15010  017E3C  6EF8               	movwf	tblptru,c
 15011  017E3E                     	endif
 15012  017E3E  0008               	tblrd		*
 15013  017E40  50F5               	movf	tablat,w,c
 15014  017E42  0900               	iorlw	0
 15015  017E44  B4D8               	btfsc	status,2,c
 15016  017E46  D036               	goto	u8570
 15017                           
 15018                           ;stkvar	_n @ sp[(-4)+-6]
 15019  017E48  0EF6               	movlw	-10
 15020  017E4A  006F FF8C  F001    	movff	plusw1,btemp
 15021  017E50  0EF7               	movlw	-9
 15022  017E52  50E3               	movf	plusw1,w,c
 15023  017E54  1001               	iorwf	btemp^0,w,c
 15024  017E56  B4D8               	btfsc	status,2,c
 15025  017E58  D02D               	goto	u8570
 15026                           
 15027                           ;stkvar	_r @ sp[(-4)+0]
 15028  017E5A  50E1               	movf	fsr1l,w,c
 15029  017E5C  0FFC               	addlw	-4
 15030  017E5E  6ED9               	movwf	fsr2l,c
 15031  017E60  50E2               	movf	fsr1h,w,c
 15032  017E62  6EDA               	movwf	fsr2h,c
 15033  017E64  0EFF               	movlw	255
 15034  017E66  22DA               	addwfc	fsr2h,f,c
 15035  017E68  006F FF7B FFF6     	movff	postinc2,tblptrl
 15036  017E6E  006F FF77 FFF7     	movff	postdec2,tblptrh
 15037  017E74                     	if	0	;tblptru may be non-zero
 15038  017E74                     	endif
 15039  017E74                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15040  017E74  0E00               	movlw	low (__mediumconst shr (0+16))
 15041  017E76  6EF8               	movwf	tblptru,c
 15042  017E78                     	endif
 15043  017E78  0008               	tblrd		*
 15044  017E7A  006F FFD4  F00C    	movff	tablat,btemp+11
 15045                           
 15046                           ;stkvar	_l @ sp[(-4)+2]
 15047  017E80  0EFE               	movlw	-2
 15048  017E82  006F FF8F FFF6     	movff	plusw1,tblptrl
 15049  017E88  0EFF               	movlw	-1
 15050  017E8A  006F FF8F FFF7     	movff	plusw1,tblptrh
 15051  017E90  0E00               	movlw	low (__mediumconst shr (0+16))
 15052  017E92  6EF8               	movwf	tblptru,c
 15053  017E94  0E1F               	movlw	(high __ramtop+-1)
 15054  017E96  64F7               	cpfsgt	tblptrh,c
 15055  017E98  D003               	bra	u8577
 15056  017E9A  0008               	tblrd		*
 15057  017E9C  50F5               	movf	tablat,w,c
 15058  017E9E  D007               	bra	u8575
 15059  017EA0                     u8577:
 15060  017EA0  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15061  017EA6  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15062  017EAC  50EF               	movf	indf0,w,c
 15063  017EAE                     u8575:
 15064  017EAE  180C               	xorwf	(btemp+11)^0,w,c
 15065  017EB0  B4D8               	btfsc	status,2,c
 15066  017EB2  D766               	goto	l9257
 15067  017EB4                     u8570:
 15068                           
 15069                           ;stkvar	_l @ sp[(-4)+2]
 15070  017EB4  0EFE               	movlw	-2
 15071  017EB6  006F FF8F FFF6     	movff	plusw1,tblptrl
 15072  017EBC  0EFF               	movlw	-1
 15073  017EBE  006F FF8F FFF7     	movff	plusw1,tblptrh
 15074  017EC4  0E00               	movlw	low (__mediumconst shr (0+16))
 15075  017EC6  6EF8               	movwf	tblptru,c
 15076  017EC8  0E1F               	movlw	(high __ramtop+-1)
 15077  017ECA  64F7               	cpfsgt	tblptrh,c
 15078  017ECC  D003               	bra	u8587
 15079  017ECE  0008               	tblrd		*
 15080  017ED0  50F5               	movf	tablat,w,c
 15081  017ED2  D007               	bra	u8580
 15082  017ED4                     u8587:
 15083  017ED4  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15084  017EDA  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15085  017EE0  50EF               	movf	indf0,w,c
 15086  017EE2                     u8580:
 15087  017EE2  6E01               	movwf	btemp^0,c
 15088  017EE4  6A02               	clrf	(btemp+1)^0,c
 15089                           
 15090                           ;stkvar	_r @ sp[(-4)+0]
 15091  017EE6  50E1               	movf	fsr1l,w,c
 15092  017EE8  0FFC               	addlw	-4
 15093  017EEA  6ED9               	movwf	fsr2l,c
 15094  017EEC  50E2               	movf	fsr1h,w,c
 15095  017EEE  6EDA               	movwf	fsr2h,c
 15096  017EF0  0EFF               	movlw	255
 15097  017EF2  22DA               	addwfc	fsr2h,f,c
 15098  017EF4  006F FF7B FFF6     	movff	postinc2,tblptrl
 15099  017EFA  006F FF77 FFF7     	movff	postdec2,tblptrh
 15100  017F00                     	if	0	;tblptru may be non-zero
 15101  017F00                     	endif
 15102  017F00                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15103  017F00  0E00               	movlw	low (__mediumconst shr (0+16))
 15104  017F02  6EF8               	movwf	tblptru,c
 15105  017F04                     	endif
 15106  017F04  0008               	tblrd		*
 15107  017F06  50F5               	movf	tablat,w,c
 15108  017F08  5E01               	subwf	btemp^0,f,c
 15109  017F0A  0E00               	movlw	0
 15110  017F0C  5A02               	subwfb	(btemp+1)^0,f,c
 15111  017F0E                     l3452:
 15112                           
 15113                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 15114  017F0E  0EF6               	movlw	246
 15115  017F10  26E1               	addwf	fsr1l,f,c
 15116  017F12  0EFF               	movlw	255
 15117  017F14  22E2               	addwfc	fsr1h,f,c
 15118  017F16  0012               	return		;funcret
 15119  017F18                     __end_of_strncmp:
 15120                           	opt callstack 0
 15121                           
 15122 ;; *************** function _stoa *****************
 15123 ;; Defined at:
 15124 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15125 ;; Parameters:    Size  Location     Type
 15126 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15127 ;;		 -> f(6), NULL(0), 
 15128 ;;  s               2  [STACK] PTR unsigned char 
 15129 ;;		 -> ?_printf(2), ?_sprintf(2), STR_47(9), STR_46(12), 
 15130 ;;		 -> D.lcd(480), D(482), T(144), STR_3(6), 
 15131 ;;		 -> V(191), 
 15132 ;; Auto vars:     Size  Location     Type
 15133 ;;  nuls            7  [STACK] unsigned char [7]
 15134 ;;  l               2  [STACK] int 
 15135 ;;  p               2  [STACK] int 
 15136 ;;  cp              2  [STACK] PTR unsigned char 
 15137 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_47(9), 
 15138 ;;		 -> STR_46(12), D.lcd(480), D(482), T(144), 
 15139 ;;		 -> STR_3(6), V(191), 
 15140 ;;  w               2  [STACK] int 
 15141 ;;  i               2  [STACK] int 
 15142 ;; Return value:  Size  Location     Type
 15143 ;;                  2  [STACK] int 
 15144 ;; Registers used:
 15145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 15146 ;; Tracked objects:
 15147 ;;		On entry : 0/0
 15148 ;;		On exit  : 0/0
 15149 ;;		Unchanged: 0/0
 15150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15155 ;;Total ram usage:        0 bytes
 15156 ;; Hardware stack levels used:    1
 15157 ;; Hardware stack levels required when called:   18
 15158 ;; This function calls:
 15159 ;;		_fputc
 15160 ;;		_strlen
 15161 ;; This function is called by:
 15162 ;;		_vfpfcnvrt
 15163 ;; This function uses a reentrant model
 15164 ;;
 15165                           
 15166                           	psect	text54
 15167  0170DC                     __ptext54:
 15168                           	opt callstack 0
 15169  0170DC                     _stoa:
 15170                           	opt callstack 0
 15171                           
 15172                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15173  0170DC  0E11               	movlw	17
 15174  0170DE  26E1               	addwf	fsr1l,f,c
 15175  0170E0  0E00               	movlw	0
 15176  0170E2  22E2               	addwfc	fsr1h,f,c
 15177                           
 15178                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 15179                           
 15180                           ;incstack = 0
 15181 ;; hardware stack exceeded
 15182  0170E4  EE20  F2CE         	lfsr	2,stoa@F1166
 15183                           
 15184                           ;stkvar	_nuls @ sp[(-17)+0]
 15185  0170E8  0E07               	movlw	7
 15186  0170EA  6E01               	movwf	btemp^0,c
 15187  0170EC  0EEF               	movlw	-17
 15188  0170EE                     us1146999:
 15189  0170EE  006F FF7B FFE3     	movff	postinc2,plusw1
 15190  0170F4  28E8               	incf	wreg,w,c
 15191  0170F6  2E01               	decfsz	btemp^0,f,c
 15192  0170F8  D7FA               	bra	us1146999
 15193                           
 15194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 15195                           ;stkvar	_s @ sp[(-17)+-4]
 15196  0170FA  0EEB               	movlw	-21
 15197  0170FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 15198  017102  0EEC               	movlw	-20
 15199  017104  006F FF8C  F00C    	movff	plusw1,btemp+11
 15200                           
 15201                           ;stkvar	_cp @ sp[(-17)+11]
 15202  01710A  0EFB               	movlw	-5
 15203  01710C  0060  F033  FFE3   	movff	btemp+11,plusw1
 15204  017112  0EFA               	movlw	-6
 15205  017114  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15206                           
 15207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 15208                           ;stkvar	_cp @ sp[(-17)+11]
 15209  01711A  0EFA               	movlw	-6
 15210  01711C  006F FF8C  F001    	movff	plusw1,btemp
 15211  017122  0EFB               	movlw	-5
 15212  017124  50E3               	movf	plusw1,w,c
 15213  017126  1001               	iorwf	btemp^0,w,c
 15214  017128  A4D8               	btfss	status,2,c
 15215  01712A  D00E               	goto	l12087
 15216                           
 15217                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 15218                           ;stkvar	_nuls @ sp[(-17)+0]
 15219  01712C  0EEF               	movlw	239
 15220  01712E  24E1               	addwf	fsr1l,w,c
 15221  017130  6E0B               	movwf	(btemp+10)^0,c
 15222  017132  0EFF               	movlw	255
 15223  017134  20E2               	addwfc	fsr1h,w,c
 15224  017136  6E0C               	movwf	(btemp+11)^0,c
 15225                           
 15226                           ;stkvar	_cp @ sp[(-17)+11]
 15227  017138  0EFB               	movlw	-5
 15228  01713A  0060  F033  FFE3   	movff	btemp+11,plusw1
 15229  017140  0EFA               	movlw	-6
 15230  017142  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15231  017148                     l12087:
 15232                           
 15233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 15234                           ;stkvar	_cp @ sp[(-17)+11]
 15235  017148  0EFA               	movlw	-6
 15236  01714A  006F FF8F FFE6     	movff	plusw1,postinc1
 15237  017150  006F FF8F FFE6     	movff	plusw1,postinc1
 15238  017156  EC42  F0D3         	call	_strlen	;wreg free
 15239                           
 15240                           ;stkvar	_l @ sp[(-17)+7]
 15241  01715A  0EF6               	movlw	-10
 15242  01715C  0060  F007  FFE3   	movff	btemp,plusw1
 15243  017162  0EF7               	movlw	-9
 15244  017164  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15245                           
 15246                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 15247                           ;stkvar	_p @ sp[(-17)+9]
 15248  01716A  0EF8               	movlw	-8
 15249  01716C  0060  F0F3  FFE3   	movff	_prec,plusw1
 15250  017172  0EF9               	movlw	-7
 15251  017174  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 15252                           
 15253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 15254                           ;stkvar	_p @ sp[(-17)+9]
 15255  01717A  0EF9               	movlw	-7
 15256  01717C  BEE3               	btfsc	plusw1,7,c
 15257  01717E  D023               	goto	l2277
 15258                           
 15259                           ;stkvar	_l @ sp[(-17)+7]
 15260                           ;stkvar	_p @ sp[(-17)+9]
 15261  017180  50E1               	movf	fsr1l,w,c
 15262  017182  0FF8               	addlw	-8
 15263  017184  6ED9               	movwf	fsr2l,c
 15264  017186  50E2               	movf	fsr1h,w,c
 15265  017188  6EDA               	movwf	fsr2h,c
 15266  01718A  0EFF               	movlw	255
 15267  01718C  22DA               	addwfc	fsr2h,f,c
 15268  01718E  0EF6               	movlw	-10
 15269  017190  50E3               	movf	plusw1,w,c
 15270  017192  5CDE               	subwf	postinc2,w,c
 15271  017194  50DE               	movf	postinc2,w,c
 15272  017196  0A80               	xorlw	128
 15273  017198  6E01               	movwf	btemp^0,c
 15274  01719A  0EF7               	movlw	-9
 15275  01719C  50E3               	movf	plusw1,w,c
 15276  01719E  0A80               	xorlw	128
 15277  0171A0  5801               	subwfb	btemp^0,w,c
 15278  0171A2  B0D8               	btfsc	status,0,c
 15279  0171A4  D010               	goto	l2277
 15280                           
 15281                           ;stkvar	_p @ sp[(-17)+9]
 15282                           ;stkvar	_l @ sp[(-17)+7]
 15283  0171A6  0EF8               	movlw	-8
 15284  0171A8  006F FF8C  F001    	movff	plusw1,btemp
 15285  0171AE  0EF6               	movlw	-10
 15286  0171B0  0060  F007  FFE3   	movff	btemp,plusw1
 15287  0171B6  0EF9               	movlw	-7
 15288  0171B8  006F FF8C  F001    	movff	plusw1,btemp
 15289  0171BE  0EF7               	movlw	-9
 15290  0171C0  0060  F007  FFE3   	movff	btemp,plusw1
 15291  0171C6                     l2277:
 15292                           
 15293                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 15294                           ;stkvar	_l @ sp[(-17)+7]
 15295                           ;stkvar	_p @ sp[(-17)+9]
 15296  0171C6  0EF6               	movlw	-10
 15297  0171C8  006F FF8C  F001    	movff	plusw1,btemp
 15298  0171CE  0EF8               	movlw	-8
 15299  0171D0  0060  F007  FFE3   	movff	btemp,plusw1
 15300  0171D6  0EF7               	movlw	-9
 15301  0171D8  006F FF8C  F001    	movff	plusw1,btemp
 15302  0171DE  0EF9               	movlw	-7
 15303  0171E0  0060  F007  FFE3   	movff	btemp,plusw1
 15304                           
 15305                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 15306                           ;stkvar	_w @ sp[(-17)+13]
 15307  0171E6  0EFC               	movlw	-4
 15308  0171E8  0060  F0EB  FFE3   	movff	_width,plusw1
 15309  0171EE  0EFD               	movlw	-3
 15310  0171F0  0060  F0EF  FFE3   	movff	_width+1,plusw1
 15311                           
 15312                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 15313  0171F6  A03E               	btfss	_flags^0,0,c
 15314  0171F8  D01F               	goto	l12107
 15315  0171FA  D031               	goto	u11510
 15316  0171FC                     l12103:
 15317                           
 15318                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 15319                           ;stkvar	_fp @ sp[(-17)+-2]
 15320  0171FC  0EED               	movlw	-19
 15321  0171FE  006F FF8F FFE6     	movff	plusw1,postinc1
 15322  017204  006F FF8F FFE6     	movff	plusw1,postinc1
 15323  01720A  0E20               	movlw	32
 15324  01720C  6EE6               	movwf	postinc1,c
 15325  01720E  0E00               	movlw	0
 15326  017210  6EE6               	movwf	postinc1,c
 15327  017212  EC4B  F0CA         	call	_fputc	;wreg free
 15328                           
 15329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 15330                           ;stkvar	_l @ sp[(-17)+7]
 15331  017216  0EF6               	movlw	-10
 15332  017218  50E3               	movf	plusw1,w,c
 15333  01721A  0F01               	addlw	1
 15334  01721C  6E01               	movwf	btemp^0,c
 15335  01721E  0EF6               	movlw	-10
 15336  017220  0060  F007  FFE3   	movff	btemp,plusw1
 15337  017226  6A01               	clrf	btemp^0,c
 15338  017228  0EF7               	movlw	-9
 15339  01722A  50E3               	movf	plusw1,w,c
 15340  01722C  2001               	addwfc	btemp^0,w,c
 15341  01722E  6E01               	movwf	btemp^0,c
 15342  017230  0EF7               	movlw	-9
 15343  017232  0060  F007  FFE3   	movff	btemp,plusw1
 15344  017238                     l12107:
 15345                           
 15346                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 15347                           ;stkvar	_w @ sp[(-17)+13]
 15348                           ;stkvar	_l @ sp[(-17)+7]
 15349  017238  50E1               	movf	fsr1l,w,c
 15350  01723A  0FF6               	addlw	-10
 15351  01723C  6ED9               	movwf	fsr2l,c
 15352  01723E  50E2               	movf	fsr1h,w,c
 15353  017240  6EDA               	movwf	fsr2h,c
 15354  017242  0EFF               	movlw	255
 15355  017244  22DA               	addwfc	fsr2h,f,c
 15356  017246  0EFC               	movlw	-4
 15357  017248  50E3               	movf	plusw1,w,c
 15358  01724A  5CDE               	subwf	postinc2,w,c
 15359  01724C  50DE               	movf	postinc2,w,c
 15360  01724E  0A80               	xorlw	128
 15361  017250  6E01               	movwf	btemp^0,c
 15362  017252  0EFD               	movlw	-3
 15363  017254  50E3               	movf	plusw1,w,c
 15364  017256  0A80               	xorlw	128
 15365  017258  5801               	subwfb	btemp^0,w,c
 15366  01725A  A0D8               	btfss	status,0,c
 15367  01725C  D7CF               	goto	l12103
 15368  01725E                     u11510:
 15369                           
 15370                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 15371                           ;stkvar	_i @ sp[(-17)+15]
 15372  01725E  0EFE               	movlw	-2
 15373  017260  6AE3               	clrf	plusw1,c
 15374  017262  0EFF               	movlw	-1
 15375  017264  6AE3               	clrf	plusw1,c
 15376                           
 15377                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15378  017266  D045               	goto	l12117
 15379  017268                     l12111:
 15380                           
 15381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 15382                           ;stkvar	_fp @ sp[(-17)+-2]
 15383  017268  0EED               	movlw	-19
 15384  01726A  006F FF8F FFE6     	movff	plusw1,postinc1
 15385  017270  006F FF8F FFE6     	movff	plusw1,postinc1
 15386                           
 15387                           ;stkvar	_cp @ sp[(-19)+11]
 15388  017276  0EF8               	movlw	-8
 15389  017278  006F FF8F FFF6     	movff	plusw1,tblptrl
 15390  01727E  0EF9               	movlw	-7
 15391  017280  006F FF8F FFF7     	movff	plusw1,tblptrh
 15392  017286  0E00               	movlw	low (__mediumconst shr (0+16))
 15393  017288  6EF8               	movwf	tblptru,c
 15394  01728A  0E1F               	movlw	(high __ramtop+-1)
 15395  01728C  64F7               	cpfsgt	tblptrh,c
 15396  01728E  D003               	bra	u11527
 15397  017290  0008               	tblrd		*
 15398  017292  50F5               	movf	tablat,w,c
 15399  017294  D007               	bra	u11520
 15400  017296                     u11527:
 15401  017296  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15402  01729C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15403  0172A2  50EF               	movf	indf0,w,c
 15404  0172A4                     u11520:
 15405  0172A4  6EE6               	movwf	postinc1,c
 15406  0172A6  0E00               	movlw	0
 15407  0172A8  6EE6               	movwf	postinc1,c
 15408  0172AA  EC4B  F0CA         	call	_fputc	;wreg free
 15409                           
 15410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 15411                           ;stkvar	_cp @ sp[(-17)+11]
 15412  0172AE  0EFA               	movlw	-6
 15413  0172B0  50E3               	movf	plusw1,w,c
 15414  0172B2  0F01               	addlw	1
 15415  0172B4  6E01               	movwf	btemp^0,c
 15416  0172B6  0EFA               	movlw	-6
 15417  0172B8  0060  F007  FFE3   	movff	btemp,plusw1
 15418  0172BE  6A01               	clrf	btemp^0,c
 15419  0172C0  0EFB               	movlw	-5
 15420  0172C2  50E3               	movf	plusw1,w,c
 15421  0172C4  2001               	addwfc	btemp^0,w,c
 15422  0172C6  6E01               	movwf	btemp^0,c
 15423  0172C8  0EFB               	movlw	-5
 15424  0172CA  0060  F007  FFE3   	movff	btemp,plusw1
 15425                           
 15426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 15427                           ;stkvar	_i @ sp[(-17)+15]
 15428  0172D0  0EFE               	movlw	-2
 15429  0172D2  50E3               	movf	plusw1,w,c
 15430  0172D4  0F01               	addlw	1
 15431  0172D6  6E01               	movwf	btemp^0,c
 15432  0172D8  0EFE               	movlw	-2
 15433  0172DA  0060  F007  FFE3   	movff	btemp,plusw1
 15434  0172E0  6A01               	clrf	btemp^0,c
 15435  0172E2  0EFF               	movlw	-1
 15436  0172E4  50E3               	movf	plusw1,w,c
 15437  0172E6  2001               	addwfc	btemp^0,w,c
 15438  0172E8  6E01               	movwf	btemp^0,c
 15439  0172EA  0EFF               	movlw	-1
 15440  0172EC  0060  F007  FFE3   	movff	btemp,plusw1
 15441  0172F2                     l12117:
 15442                           
 15443                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15444                           ;stkvar	_p @ sp[(-17)+9]
 15445                           ;stkvar	_i @ sp[(-17)+15]
 15446  0172F2  50E1               	movf	fsr1l,w,c
 15447  0172F4  0FFE               	addlw	-2
 15448  0172F6  6ED9               	movwf	fsr2l,c
 15449  0172F8  50E2               	movf	fsr1h,w,c
 15450  0172FA  6EDA               	movwf	fsr2h,c
 15451  0172FC  0EFF               	movlw	255
 15452  0172FE  22DA               	addwfc	fsr2h,f,c
 15453  017300  0EF8               	movlw	-8
 15454  017302  50E3               	movf	plusw1,w,c
 15455  017304  5CDE               	subwf	postinc2,w,c
 15456  017306  50DE               	movf	postinc2,w,c
 15457  017308  0A80               	xorlw	128
 15458  01730A  6E01               	movwf	btemp^0,c
 15459  01730C  0EF9               	movlw	-7
 15460  01730E  50E3               	movf	plusw1,w,c
 15461  017310  0A80               	xorlw	128
 15462  017312  5801               	subwfb	btemp^0,w,c
 15463  017314  A0D8               	btfss	status,0,c
 15464  017316  D7A8               	goto	l12111
 15465                           
 15466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 15467  017318  B03E               	btfsc	_flags^0,0,c
 15468  01731A  D01F               	goto	l12125
 15469  01731C  D031               	goto	u11550
 15470  01731E                     l12121:
 15471                           
 15472                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 15473                           ;stkvar	_fp @ sp[(-17)+-2]
 15474  01731E  0EED               	movlw	-19
 15475  017320  006F FF8F FFE6     	movff	plusw1,postinc1
 15476  017326  006F FF8F FFE6     	movff	plusw1,postinc1
 15477  01732C  0E20               	movlw	32
 15478  01732E  6EE6               	movwf	postinc1,c
 15479  017330  0E00               	movlw	0
 15480  017332  6EE6               	movwf	postinc1,c
 15481  017334  EC4B  F0CA         	call	_fputc	;wreg free
 15482                           
 15483                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 15484                           ;stkvar	_l @ sp[(-17)+7]
 15485  017338  0EF6               	movlw	-10
 15486  01733A  50E3               	movf	plusw1,w,c
 15487  01733C  0F01               	addlw	1
 15488  01733E  6E01               	movwf	btemp^0,c
 15489  017340  0EF6               	movlw	-10
 15490  017342  0060  F007  FFE3   	movff	btemp,plusw1
 15491  017348  6A01               	clrf	btemp^0,c
 15492  01734A  0EF7               	movlw	-9
 15493  01734C  50E3               	movf	plusw1,w,c
 15494  01734E  2001               	addwfc	btemp^0,w,c
 15495  017350  6E01               	movwf	btemp^0,c
 15496  017352  0EF7               	movlw	-9
 15497  017354  0060  F007  FFE3   	movff	btemp,plusw1
 15498  01735A                     l12125:
 15499                           
 15500                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 15501                           ;stkvar	_w @ sp[(-17)+13]
 15502                           ;stkvar	_l @ sp[(-17)+7]
 15503  01735A  50E1               	movf	fsr1l,w,c
 15504  01735C  0FF6               	addlw	-10
 15505  01735E  6ED9               	movwf	fsr2l,c
 15506  017360  50E2               	movf	fsr1h,w,c
 15507  017362  6EDA               	movwf	fsr2h,c
 15508  017364  0EFF               	movlw	255
 15509  017366  22DA               	addwfc	fsr2h,f,c
 15510  017368  0EFC               	movlw	-4
 15511  01736A  50E3               	movf	plusw1,w,c
 15512  01736C  5CDE               	subwf	postinc2,w,c
 15513  01736E  50DE               	movf	postinc2,w,c
 15514  017370  0A80               	xorlw	128
 15515  017372  6E01               	movwf	btemp^0,c
 15516  017374  0EFD               	movlw	-3
 15517  017376  50E3               	movf	plusw1,w,c
 15518  017378  0A80               	xorlw	128
 15519  01737A  5801               	subwfb	btemp^0,w,c
 15520  01737C  A0D8               	btfss	status,0,c
 15521  01737E  D7CF               	goto	l12121
 15522  017380                     u11550:
 15523                           
 15524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 15525                           ;stkvar	_l @ sp[(-17)+7]
 15526  017380  0EF6               	movlw	-10
 15527  017382  006F FF8C  F001    	movff	plusw1,btemp
 15528  017388  0EF7               	movlw	-9
 15529  01738A  006F FF8C  F002    	movff	plusw1,btemp+1
 15530                           
 15531                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 15532  017390  0EEB               	movlw	235
 15533  017392  26E1               	addwf	fsr1l,f,c
 15534  017394  0EFF               	movlw	255
 15535  017396  22E2               	addwfc	fsr1h,f,c
 15536  017398  0012               	return		;funcret
 15537  01739A                     __end_of_stoa:
 15538                           	opt callstack 0
 15539                           
 15540 ;; *************** function _efgtoa *****************
 15541 ;; Defined at:
 15542 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15543 ;; Parameters:    Size  Location     Type
 15544 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15545 ;;		 -> f(6), NULL(0), 
 15546 ;;  f               4  [STACK] PTR struct _IO_FILE
 15547 ;;  c               1  [STACK] unsigned char 
 15548 ;; Auto vars:     Size  Location     Type
 15549 ;;  u               4  [STACK] unsigned char 
 15550 ;;  g               4  [STACK] unsigned char 
 15551 ;;  l               4  [STACK] unsigned char 
 15552 ;;  h               4  [STACK] unsigned char 
 15553 ;;  ou              4  [STACK] unsigned char 
 15554 ;;  n               2  [STACK] int 
 15555 ;;  e               2  [STACK] int 
 15556 ;;  i               2  [STACK] int 
 15557 ;;  w               2  [STACK] int 
 15558 ;;  p               2  [STACK] int 
 15559 ;;  sign            2  [STACK] int 
 15560 ;;  d               2  [STACK] int 
 15561 ;;  ne              2  [STACK] int 
 15562 ;;  m               2  [STACK] int 
 15563 ;;  pp              2  [STACK] int 
 15564 ;;  t               2  [STACK] int 
 15565 ;;  mode            1  [STACK] unsigned char 
 15566 ;;  nmode           1  [STACK] unsigned char 
 15567 ;; Return value:  Size  Location     Type
 15568 ;;                  2  [STACK] int 
 15569 ;; Registers used:
 15570 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15571 ;; Tracked objects:
 15572 ;;		On entry : 0/0
 15573 ;;		On exit  : 0/0
 15574 ;;		Unchanged: 0/0
 15575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15580 ;;Total ram usage:        0 bytes
 15581 ;; Hardware stack levels used:    1
 15582 ;; Hardware stack levels required when called:   20
 15583 ;; This function calls:
 15584 ;;		___awdiv
 15585 ;;		___awmod
 15586 ;;		___fladd
 15587 ;;		___fldiv
 15588 ;;		___fleq
 15589 ;;		___flge
 15590 ;;		___flmul
 15591 ;;		___flneg
 15592 ;;		___flsub
 15593 ;;		___fltol
 15594 ;;		___fpclassifyf
 15595 ;;		_floorf
 15596 ;;		_isupper
 15597 ;;		_pad
 15598 ;;		_strcpy
 15599 ;;		_tolower
 15600 ;; This function is called by:
 15601 ;;		_vfpfcnvrt
 15602 ;; This function uses a reentrant model
 15603 ;;
 15604                           
 15605                           	psect	text55
 15606  010000                     __ptext55:
 15607                           	opt callstack 0
 15608  010000                     _efgtoa:
 15609                           	opt callstack 0
 15610                           
 15611                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15612  010000  0E38               	movlw	56
 15613  010002  26E1               	addwf	fsr1l,f,c
 15614  010004  0E00               	movlw	0
 15615  010006  22E2               	addwfc	fsr1h,f,c
 15616                           
 15617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 15618                           ;stkvar	_sign @ sp[(-56)+42]
 15619                           
 15620                           ;incstack = 0
 15621 ;; hardware stack exceeded
 15622  010008  0EF2               	movlw	-14
 15623  01000A  6AE3               	clrf	plusw1,c
 15624  01000C  0EF3               	movlw	-13
 15625  01000E  6AE3               	clrf	plusw1,c
 15626                           
 15627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 15628                           ;stkvar	_f @ sp[(-56)+-6]
 15629  010010  0EC2               	movlw	-62
 15630  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 15631  010018  0EC3               	movlw	-61
 15632  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 15633  010020  0EC4               	movlw	-60
 15634  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 15635  010028  0EC5               	movlw	-59
 15636  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 15637                           
 15638                           ;stkvar	_g @ sp[(-56)+16]
 15639  010030  0ED8               	movlw	-40
 15640  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 15641  010038  0ED9               	movlw	-39
 15642  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15643  010040  0EDA               	movlw	-38
 15644  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15645  010048  0EDB               	movlw	-37
 15646  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 15647                           
 15648                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 15649                           ;stkvar	_g @ sp[(-56)+16]
 15650  010050  0EDB               	movlw	-37
 15651  010052  AEE3               	btfss	plusw1,7,c
 15652  010054  D02B               	goto	l11785
 15653                           
 15654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 15655  010056  0E01               	movlw	1
 15656  010058  6E0B               	movwf	(btemp+10)^0,c
 15657  01005A  0E00               	movlw	0
 15658  01005C  6E0C               	movwf	(btemp+11)^0,c
 15659                           
 15660                           ;stkvar	_sign @ sp[(-56)+42]
 15661  01005E  0EF2               	movlw	-14
 15662  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15663  010066  0EF3               	movlw	-13
 15664  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 15665                           
 15666                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 15667                           ;stkvar	_g @ sp[(-56)+16]
 15668  01006E  0ED8               	movlw	-40
 15669  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 15670  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 15671  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 15672  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 15673  010088  ECA5  F0D8         	call	___flneg	;wreg free
 15674                           
 15675                           ;stkvar	_g @ sp[(-56)+16]
 15676  01008C  0ED8               	movlw	-40
 15677  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 15678  010094  0ED9               	movlw	-39
 15679  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15680  01009C  0EDA               	movlw	-38
 15681  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15682  0100A4  0EDB               	movlw	-37
 15683  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 15684  0100AC                     l11785:
 15685                           
 15686                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 15687                           ;stkvar	_n @ sp[(-56)+32]
 15688  0100AC  0EE8               	movlw	-24
 15689  0100AE  6AE3               	clrf	plusw1,c
 15690  0100B0  0EE9               	movlw	-23
 15691  0100B2  6AE3               	clrf	plusw1,c
 15692                           
 15693                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 15694                           ;stkvar	_w @ sp[(-56)+38]
 15695  0100B4  0EEE               	movlw	-18
 15696  0100B6  0060  F0EB  FFE3   	movff	_width,plusw1
 15697  0100BC  0EEF               	movlw	-17
 15698  0100BE  0060  F0EF  FFE3   	movff	_width+1,plusw1
 15699                           
 15700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 15701                           ;stkvar	_sign @ sp[(-56)+42]
 15702  0100C4  0EF2               	movlw	-14
 15703  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 15704  0100CC  0EF3               	movlw	-13
 15705  0100CE  50E3               	movf	plusw1,w,c
 15706  0100D0  1001               	iorwf	btemp^0,w,c
 15707  0100D2  A4D8               	btfss	status,2,c
 15708  0100D4  D002               	goto	u10960
 15709  0100D6  A43E               	btfss	_flags^0,2,c
 15710  0100D8  D036               	goto	l11805
 15711  0100DA                     u10960:
 15712                           
 15713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 15714                           ;stkvar	_sign @ sp[(-56)+42]
 15715  0100DA  0EF2               	movlw	-14
 15716  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 15717  0100E2  0EF3               	movlw	-13
 15718  0100E4  50E3               	movf	plusw1,w,c
 15719  0100E6  1001               	iorwf	btemp^0,w,c
 15720  0100E8  A4D8               	btfss	status,2,c
 15721  0100EA  D002               	goto	l11797
 15722  0100EC  0E2B               	movlw	43
 15723  0100EE  D001               	goto	L16
 15724  0100F0                     l11797:
 15725  0100F0  0E2D               	movlw	45
 15726  0100F2                     L16:
 15727  0100F2  6E0B               	movwf	(btemp+10)^0,c
 15728  0100F4  0E00               	movlw	0
 15729  0100F6  6E0C               	movwf	(btemp+11)^0,c
 15730                           
 15731                           ;stkvar	_efgtoa$5491 @ sp[(-56)+10]
 15732  0100F8  0ED2               	movlw	-46
 15733  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15734  010100  0ED3               	movlw	-45
 15735  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 15736                           
 15737                           ;stkvar	_efgtoa$5491 @ sp[(-56)+10]
 15738  010108  0ED2               	movlw	-46
 15739  01010A  006F FF8C  F276    	movff	plusw1,_dbuf
 15740                           
 15741                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 15742                           ;stkvar	_n @ sp[(-56)+32]
 15743  010110  0EE8               	movlw	-24
 15744  010112  50E3               	movf	plusw1,w,c
 15745  010114  0F01               	addlw	1
 15746  010116  6E01               	movwf	btemp^0,c
 15747  010118  0EE8               	movlw	-24
 15748  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 15749  010120  6A01               	clrf	btemp^0,c
 15750  010122  0EE9               	movlw	-23
 15751  010124  50E3               	movf	plusw1,w,c
 15752  010126  2001               	addwfc	btemp^0,w,c
 15753  010128  6E01               	movwf	btemp^0,c
 15754  01012A  0EE9               	movlw	-23
 15755  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 15756                           
 15757                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 15758                           ;stkvar	_w @ sp[(-56)+38]
 15759  010132  50E1               	movf	fsr1l,w,c
 15760  010134  0FEE               	addlw	-18
 15761  010136  6ED9               	movwf	fsr2l,c
 15762  010138  50E2               	movf	fsr1h,w,c
 15763  01013A  6EDA               	movwf	fsr2h,c
 15764  01013C  0EFF               	movlw	255
 15765  01013E  22DA               	addwfc	fsr2h,f,c
 15766  010140  06DE               	decf	postinc2,f,c
 15767  010142  0E00               	movlw	0
 15768  010144  5ADD               	subwfb	postdec2,f,c
 15769  010146                     l11805:
 15770                           
 15771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15772                           ;stkvar	_g @ sp[(-56)+16]
 15773  010146  0ED8               	movlw	-40
 15774  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 15775  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 15776  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 15777  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 15778  010160  EC63  F0C3         	call	___fpclassifyf	;wreg free
 15779  010164  0401               	decf	btemp^0,w,c
 15780  010166  1002               	iorwf	(btemp+1)^0,w,c
 15781  010168  A4D8               	btfss	status,2,c
 15782  01016A  D076               	goto	l11823
 15783  01016C  0EBF               	movlw	191
 15784  01016E  6E0B               	movwf	(btemp+10)^0,c
 15785  010170  0EFF               	movlw	255
 15786  010172  6E0C               	movwf	(btemp+11)^0,c
 15787                           
 15788                           ;stkvar	_c @ sp[(-56)+-7]
 15789  010174  0EC1               	movlw	-63
 15790  010176  50E3               	movf	plusw1,w,c
 15791  010178  6E09               	movwf	(btemp+8)^0,c
 15792  01017A  6A0A               	clrf	(btemp+9)^0,c
 15793  01017C  500B               	movf	(btemp+10)^0,w,c
 15794  01017E  2609               	addwf	(btemp+8)^0,f,c
 15795  010180  500C               	movf	(btemp+11)^0,w,c
 15796  010182  220A               	addwfc	(btemp+9)^0,f,c
 15797  010184  500A               	movf	(btemp+9)^0,w,c
 15798  010186  E106               	bnz	u10990
 15799  010188  0E1A               	movlw	26
 15800  01018A  5C09               	subwf	(btemp+8)^0,w,c
 15801  01018C  B0D8               	btfsc	status,0,c
 15802  01018E  D002               	goto	u10990
 15803  010190  0E01               	movlw	1
 15804  010192  D001               	goto	u11000
 15805  010194                     u10990:
 15806  010194  0E00               	movlw	0
 15807  010196                     u11000:
 15808  010196  6E0B               	movwf	(btemp+10)^0,c
 15809  010198  6A0C               	clrf	(btemp+11)^0,c
 15810                           
 15811                           ;stkvar	_efgtoa$5492 @ sp[(-56)+8]
 15812  01019A  0ED0               	movlw	-48
 15813  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15814  0101A2  0ED1               	movlw	-47
 15815  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 15816                           
 15817                           ;stkvar	_efgtoa$5492 @ sp[(-56)+8]
 15818  0101AA  0ED0               	movlw	-48
 15819  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 15820  0101B2  0ED1               	movlw	-47
 15821  0101B4  50E3               	movf	plusw1,w,c
 15822  0101B6  1001               	iorwf	btemp^0,w,c
 15823  0101B8  B4D8               	btfsc	status,2,c
 15824  0101BA  D017               	goto	l11815
 15825                           
 15826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 15827  0101BC  0ED6               	movlw	low STR_66
 15828  0101BE  6EE6               	movwf	postinc1,c
 15829  0101C0  0EFF               	movlw	high STR_66
 15830  0101C2  6EE6               	movwf	postinc1,c
 15831                           
 15832                           ;stkvar	_n @ sp[(-58)+32]
 15833  0101C4  0E76               	movlw	low _dbuf
 15834  0101C6  6E0B               	movwf	(btemp+10)^0,c
 15835  0101C8  0E02               	movlw	high _dbuf
 15836  0101CA  6E0C               	movwf	(btemp+11)^0,c
 15837  0101CC  0EE6               	movlw	-26
 15838  0101CE  50E3               	movf	plusw1,w,c
 15839  0101D0  260B               	addwf	(btemp+10)^0,f,c
 15840  0101D2  0EE7               	movlw	-25
 15841  0101D4  50E3               	movf	plusw1,w,c
 15842  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 15843  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15844  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 15845  0101E4  ECF9  F0CF         	call	_strcpy	;wreg free
 15846                           
 15847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 15848  0101E8  D016               	goto	l11817
 15849  0101EA                     l11815:
 15850                           
 15851                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 15852  0101EA  0EDE               	movlw	low STR_67
 15853  0101EC  6EE6               	movwf	postinc1,c
 15854  0101EE  0EFF               	movlw	high STR_67
 15855  0101F0  6EE6               	movwf	postinc1,c
 15856                           
 15857                           ;stkvar	_n @ sp[(-58)+32]
 15858  0101F2  0E76               	movlw	low _dbuf
 15859  0101F4  6E0B               	movwf	(btemp+10)^0,c
 15860  0101F6  0E02               	movlw	high _dbuf
 15861  0101F8  6E0C               	movwf	(btemp+11)^0,c
 15862  0101FA  0EE6               	movlw	-26
 15863  0101FC  50E3               	movf	plusw1,w,c
 15864  0101FE  260B               	addwf	(btemp+10)^0,f,c
 15865  010200  0EE7               	movlw	-25
 15866  010202  50E3               	movf	plusw1,w,c
 15867  010204  220C               	addwfc	(btemp+11)^0,f,c
 15868  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15869  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 15870  010212  ECF9  F0CF         	call	_strcpy	;wreg free
 15871  010216                     l11817:
 15872                           
 15873                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 15874                           ;stkvar	_w @ sp[(-56)+38]
 15875  010216  50E1               	movf	fsr1l,w,c
 15876  010218  0FEE               	addlw	-18
 15877  01021A  6ED9               	movwf	fsr2l,c
 15878  01021C  50E2               	movf	fsr1h,w,c
 15879  01021E  6EDA               	movwf	fsr2h,c
 15880  010220  0EFF               	movlw	255
 15881  010222  22DA               	addwfc	fsr2h,f,c
 15882  010224  0EFD               	movlw	253
 15883  010226  26DE               	addwf	postinc2,f,c
 15884  010228  0EFF               	movlw	255
 15885  01022A  22DD               	addwfc	postdec2,f,c
 15886  01022C                     l11819:
 15887                           
 15888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 15889                           ;stkvar	_w @ sp[(-56)+38]
 15890  01022C  0EEE               	movlw	-18
 15891  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 15892  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 15893  01023A  0E76               	movlw	low _dbuf
 15894  01023C  6EE6               	movwf	postinc1,c
 15895  01023E  0E02               	movlw	high _dbuf
 15896  010240  6EE6               	movwf	postinc1,c
 15897                           
 15898                           ;stkvar	_fp @ sp[(-60)+-2]
 15899  010242  0EC2               	movlw	-62
 15900  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 15901  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 15902  010250  ECF6  F0CB         	call	_pad	;wreg free
 15903  010254  EF1D  F089         	goto	l2195
 15904  010258                     l11823:
 15905                           
 15906                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15907                           ;stkvar	_g @ sp[(-56)+16]
 15908  010258  0ED8               	movlw	-40
 15909  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 15910  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 15911  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 15912  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 15913  010272  EC63  F0C3         	call	___fpclassifyf	;wreg free
 15914  010276  5001               	movf	btemp^0,w,c
 15915  010278  1002               	iorwf	(btemp+1)^0,w,c
 15916  01027A  A4D8               	btfss	status,2,c
 15917  01027C  D056               	goto	l11841
 15918  01027E  0EBF               	movlw	191
 15919  010280  6E0B               	movwf	(btemp+10)^0,c
 15920  010282  0EFF               	movlw	255
 15921  010284  6E0C               	movwf	(btemp+11)^0,c
 15922                           
 15923                           ;stkvar	_c @ sp[(-56)+-7]
 15924  010286  0EC1               	movlw	-63
 15925  010288  50E3               	movf	plusw1,w,c
 15926  01028A  6E09               	movwf	(btemp+8)^0,c
 15927  01028C  6A0A               	clrf	(btemp+9)^0,c
 15928  01028E  500B               	movf	(btemp+10)^0,w,c
 15929  010290  2609               	addwf	(btemp+8)^0,f,c
 15930  010292  500C               	movf	(btemp+11)^0,w,c
 15931  010294  220A               	addwfc	(btemp+9)^0,f,c
 15932  010296  500A               	movf	(btemp+9)^0,w,c
 15933  010298  E106               	bnz	u11030
 15934  01029A  0E1A               	movlw	26
 15935  01029C  5C09               	subwf	(btemp+8)^0,w,c
 15936  01029E  B0D8               	btfsc	status,0,c
 15937  0102A0  D002               	goto	u11030
 15938  0102A2  0E01               	movlw	1
 15939  0102A4  D001               	goto	u11040
 15940  0102A6                     u11030:
 15941  0102A6  0E00               	movlw	0
 15942  0102A8                     u11040:
 15943  0102A8  6E0B               	movwf	(btemp+10)^0,c
 15944  0102AA  6A0C               	clrf	(btemp+11)^0,c
 15945                           
 15946                           ;stkvar	_efgtoa$5496 @ sp[(-56)+6]
 15947  0102AC  0ECE               	movlw	-50
 15948  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15949  0102B4  0ECF               	movlw	-49
 15950  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 15951                           
 15952                           ;stkvar	_efgtoa$5496 @ sp[(-56)+6]
 15953  0102BC  0ECE               	movlw	-50
 15954  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 15955  0102C4  0ECF               	movlw	-49
 15956  0102C6  50E3               	movf	plusw1,w,c
 15957  0102C8  1001               	iorwf	btemp^0,w,c
 15958  0102CA  B4D8               	btfsc	status,2,c
 15959  0102CC  D017               	goto	l11833
 15960                           
 15961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 15962  0102CE  0EDA               	movlw	low STR_70
 15963  0102D0  6EE6               	movwf	postinc1,c
 15964  0102D2  0EFF               	movlw	high STR_70
 15965  0102D4  6EE6               	movwf	postinc1,c
 15966                           
 15967                           ;stkvar	_n @ sp[(-58)+32]
 15968  0102D6  0E76               	movlw	low _dbuf
 15969  0102D8  6E0B               	movwf	(btemp+10)^0,c
 15970  0102DA  0E02               	movlw	high _dbuf
 15971  0102DC  6E0C               	movwf	(btemp+11)^0,c
 15972  0102DE  0EE6               	movlw	-26
 15973  0102E0  50E3               	movf	plusw1,w,c
 15974  0102E2  260B               	addwf	(btemp+10)^0,f,c
 15975  0102E4  0EE7               	movlw	-25
 15976  0102E6  50E3               	movf	plusw1,w,c
 15977  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 15978  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15979  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 15980  0102F6  ECF9  F0CF         	call	_strcpy	;wreg free
 15981                           
 15982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 15983  0102FA  D78D               	goto	l11817
 15984  0102FC                     l11833:
 15985                           
 15986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 15987  0102FC  0EE2               	movlw	low STR_71
 15988  0102FE  6EE6               	movwf	postinc1,c
 15989  010300  0EFF               	movlw	high STR_71
 15990  010302  6EE6               	movwf	postinc1,c
 15991                           
 15992                           ;stkvar	_n @ sp[(-58)+32]
 15993  010304  0E76               	movlw	low _dbuf
 15994  010306  6E0B               	movwf	(btemp+10)^0,c
 15995  010308  0E02               	movlw	high _dbuf
 15996  01030A  6E0C               	movwf	(btemp+11)^0,c
 15997  01030C  0EE6               	movlw	-26
 15998  01030E  50E3               	movf	plusw1,w,c
 15999  010310  260B               	addwf	(btemp+10)^0,f,c
 16000  010312  0EE7               	movlw	-25
 16001  010314  50E3               	movf	plusw1,w,c
 16002  010316  220C               	addwfc	(btemp+11)^0,f,c
 16003  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16004  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 16005  010324  ECF9  F0CF         	call	_strcpy	;wreg free
 16006  010328  D776               	goto	l11817
 16007  01032A                     l11841:
 16008                           
 16009                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 16010  01032A  0E00               	movlw	0
 16011  01032C  6E09               	movwf	(btemp+8)^0,c
 16012  01032E  0E00               	movlw	0
 16013  010330  6E0A               	movwf	(btemp+9)^0,c
 16014  010332  0E80               	movlw	128
 16015  010334  6E0B               	movwf	(btemp+10)^0,c
 16016  010336  0E3F               	movlw	63
 16017  010338  6E0C               	movwf	(btemp+11)^0,c
 16018                           
 16019                           ;stkvar	_u @ sp[(-56)+12]
 16020  01033A  0ED4               	movlw	-44
 16021  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 16022  010342  0ED5               	movlw	-43
 16023  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16024  01034A  0ED6               	movlw	-42
 16025  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16026  010352  0ED7               	movlw	-41
 16027  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 16028                           
 16029                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 16030                           ;stkvar	_e @ sp[(-56)+34]
 16031  01035A  0EEA               	movlw	-22
 16032  01035C  6AE3               	clrf	plusw1,c
 16033  01035E  0EEB               	movlw	-21
 16034  010360  6AE3               	clrf	plusw1,c
 16035                           
 16036                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 16037  010362  0E00               	movlw	0
 16038  010364  6EE6               	movwf	postinc1,c
 16039  010366  0E00               	movlw	0
 16040  010368  6EE6               	movwf	postinc1,c
 16041  01036A  0E00               	movlw	0
 16042  01036C  6EE6               	movwf	postinc1,c
 16043  01036E  0E00               	movlw	0
 16044  010370  6EE6               	movwf	postinc1,c
 16045                           
 16046                           ;stkvar	_g @ sp[(-60)+16]
 16047  010372  0ED4               	movlw	-44
 16048  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 16049  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 16050  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 16051  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 16052  01038C  EC2F  F0D1         	call	___fleq	;wreg free
 16053  010390  A001               	btfss	btemp& (0+255),0,c
 16054  010392  D039               	goto	l11853
 16055  010394  D0BC               	goto	u11080
 16056  010396                     l11849:
 16057                           
 16058                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 16059  010396  0E00               	movlw	0
 16060  010398  6EE6               	movwf	postinc1,c
 16061  01039A  0E00               	movlw	0
 16062  01039C  6EE6               	movwf	postinc1,c
 16063  01039E  0E20               	movlw	32
 16064  0103A0  6EE6               	movwf	postinc1,c
 16065  0103A2  0E41               	movlw	65
 16066  0103A4  6EE6               	movwf	postinc1,c
 16067                           
 16068                           ;stkvar	_u @ sp[(-60)+12]
 16069  0103A6  0ED0               	movlw	-48
 16070  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16071  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 16072  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 16073  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 16074  0103C0  EC9F  F099         	call	___flmul	;wreg free
 16075                           
 16076                           ;stkvar	_u @ sp[(-56)+12]
 16077  0103C4  0ED4               	movlw	-44
 16078  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 16079  0103CC  0ED5               	movlw	-43
 16080  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16081  0103D4  0ED6               	movlw	-42
 16082  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16083  0103DC  0ED7               	movlw	-41
 16084  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 16085                           
 16086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 16087                           ;stkvar	_e @ sp[(-56)+34]
 16088  0103E4  0EEA               	movlw	-22
 16089  0103E6  50E3               	movf	plusw1,w,c
 16090  0103E8  0F01               	addlw	1
 16091  0103EA  6E01               	movwf	btemp^0,c
 16092  0103EC  0EEA               	movlw	-22
 16093  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 16094  0103F4  6A01               	clrf	btemp^0,c
 16095  0103F6  0EEB               	movlw	-21
 16096  0103F8  50E3               	movf	plusw1,w,c
 16097  0103FA  2001               	addwfc	btemp^0,w,c
 16098  0103FC  6E01               	movwf	btemp^0,c
 16099  0103FE  0EEB               	movlw	-21
 16100  010400  0060  F007  FFE3   	movff	btemp,plusw1
 16101  010406                     l11853:
 16102                           
 16103                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 16104  010406  0E00               	movlw	0
 16105  010408  6EE6               	movwf	postinc1,c
 16106  01040A  0E00               	movlw	0
 16107  01040C  6EE6               	movwf	postinc1,c
 16108  01040E  0E20               	movlw	32
 16109  010410  6EE6               	movwf	postinc1,c
 16110  010412  0E41               	movlw	65
 16111  010414  6EE6               	movwf	postinc1,c
 16112                           
 16113                           ;stkvar	_u @ sp[(-60)+12]
 16114  010416  0ED0               	movlw	-48
 16115  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 16116  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 16117  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 16118  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 16119  010430  EC9F  F099         	call	___flmul	;wreg free
 16120  010434  0060  F007  FFE6   	movff	btemp,postinc1
 16121  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16122  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16123  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 16124                           
 16125                           ;stkvar	_g @ sp[(-60)+16]
 16126  01044C  0ED4               	movlw	-44
 16127  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 16128  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 16129  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 16130  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 16131  010466  EC6A  F0C6         	call	___flge	;wreg free
 16132  01046A  A001               	btfss	btemp& (0+255),0,c
 16133  01046C  D032               	goto	l11859
 16134  01046E  D793               	goto	l11849
 16135  010470                     l11855:
 16136                           
 16137                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 16138  010470  0E00               	movlw	0
 16139  010472  6EE6               	movwf	postinc1,c
 16140  010474  0E00               	movlw	0
 16141  010476  6EE6               	movwf	postinc1,c
 16142  010478  0E20               	movlw	32
 16143  01047A  6EE6               	movwf	postinc1,c
 16144  01047C  0E41               	movlw	65
 16145  01047E  6EE6               	movwf	postinc1,c
 16146                           
 16147                           ;stkvar	_u @ sp[(-60)+12]
 16148  010480  0ED0               	movlw	-48
 16149  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 16150  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 16151  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 16152  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 16153  01049A  EC50  F0A5         	call	___fldiv	;wreg free
 16154                           
 16155                           ;stkvar	_u @ sp[(-56)+12]
 16156  01049E  0ED4               	movlw	-44
 16157  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 16158  0104A6  0ED5               	movlw	-43
 16159  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16160  0104AE  0ED6               	movlw	-42
 16161  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16162  0104B6  0ED7               	movlw	-41
 16163  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 16164                           
 16165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 16166                           ;stkvar	_e @ sp[(-56)+34]
 16167  0104BE  50E1               	movf	fsr1l,w,c
 16168  0104C0  0FEA               	addlw	-22
 16169  0104C2  6ED9               	movwf	fsr2l,c
 16170  0104C4  50E2               	movf	fsr1h,w,c
 16171  0104C6  6EDA               	movwf	fsr2h,c
 16172  0104C8  0EFF               	movlw	255
 16173  0104CA  22DA               	addwfc	fsr2h,f,c
 16174  0104CC  06DE               	decf	postinc2,f,c
 16175  0104CE  0E00               	movlw	0
 16176  0104D0  5ADD               	subwfb	postdec2,f,c
 16177  0104D2                     l11859:
 16178                           
 16179                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 16180                           ;stkvar	_u @ sp[(-56)+12]
 16181  0104D2  0ED4               	movlw	-44
 16182  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16183  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 16184  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 16185  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 16186                           
 16187                           ;stkvar	_g @ sp[(-60)+16]
 16188  0104EC  0ED4               	movlw	-44
 16189  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 16190  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 16191  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 16192  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 16193  010506  EC6A  F0C6         	call	___flge	;wreg free
 16194  01050A  A001               	btfss	btemp& (0+255),0,c
 16195  01050C  D7B1               	goto	l11855
 16196  01050E                     u11080:
 16197                           
 16198                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 16199                           ;stkvar	_c @ sp[(-56)+-7]
 16200  01050E  0EC1               	movlw	-63
 16201  010510  50E3               	movf	plusw1,w,c
 16202  010512  6EE6               	movwf	postinc1,c
 16203  010514  0E00               	movlw	0
 16204  010516  6EE6               	movwf	postinc1,c
 16205  010518  ECF8  F0D4         	call	_tolower	;wreg free
 16206                           
 16207                           ;stkvar	_mode @ sp[(-56)+54]
 16208  01051C  0EFE               	movlw	-2
 16209  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 16210                           
 16211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 16212                           ;stkvar	_mode @ sp[(-56)+54]
 16213                           ;stkvar	_nmode @ sp[(-56)+55]
 16214  010524  0EFE               	movlw	-2
 16215  010526  006F FF8C  F001    	movff	plusw1,btemp
 16216  01052C  0EFF               	movlw	-1
 16217  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 16218                           
 16219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 16220                           ;stkvar	_mode @ sp[(-56)+54]
 16221  010534  0EFE               	movlw	-2
 16222  010536  006F FF8C  F001    	movff	plusw1,btemp
 16223  01053C  0E67               	movlw	103
 16224  01053E  1801               	xorwf	btemp^0,w,c
 16225  010540  A4D8               	btfss	status,2,c
 16226  010542  D025               	goto	l11877
 16227                           
 16228                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 16229  010544  503C               	movf	_prec^0,w,c
 16230  010546  103D               	iorwf	(_prec+1)^0,w,c
 16231  010548  A4D8               	btfss	status,2,c
 16232  01054A  D004               	goto	l11871
 16233                           
 16234                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 16235  01054C  0E00               	movlw	0
 16236  01054E  6E3D               	movwf	(_prec+1)^0,c
 16237  010550  0E01               	movlw	1
 16238  010552  6E3C               	movwf	_prec^0,c
 16239  010554                     l11871:
 16240                           
 16241                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 16242  010554  BE3D               	btfsc	(_prec+1)^0,7,c
 16243  010556  D005               	goto	u11110
 16244  010558  503D               	movf	(_prec+1)^0,w,c
 16245  01055A  E110               	bnz	l11875
 16246  01055C  043C               	decf	_prec^0,w,c
 16247  01055E  B0D8               	btfsc	status,0,c
 16248  010560  D00D               	goto	l11875
 16249  010562                     u11110:
 16250  010562  0E06               	movlw	6
 16251  010564  6E0B               	movwf	(btemp+10)^0,c
 16252  010566  0E00               	movlw	0
 16253  010568  6E0C               	movwf	(btemp+11)^0,c
 16254                           
 16255                           ;stkvar	_p @ sp[(-56)+40]
 16256  01056A  0EF0               	movlw	-16
 16257  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16258  010572  0EF1               	movlw	-15
 16259  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 16260  01057A  D00C               	goto	l11883
 16261  01057C                     l11875:
 16262                           
 16263                           ;stkvar	_p @ sp[(-56)+40]
 16264  01057C  0EF0               	movlw	-16
 16265  01057E  0060  F0F3  FFE3   	movff	_prec,plusw1
 16266  010584  0EF1               	movlw	-15
 16267  010586  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 16268  01058C  D003               	goto	l11883
 16269  01058E                     l11877:
 16270                           
 16271                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 16272  01058E  AE3D               	btfss	(_prec+1)^0,7,c
 16273  010590  D7F5               	goto	l11875
 16274  010592  D7E7               	goto	u11110
 16275  010594                     l11883:
 16276                           
 16277                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 16278                           ;stkvar	_mode @ sp[(-56)+54]
 16279  010594  0EFE               	movlw	-2
 16280  010596  006F FF8C  F001    	movff	plusw1,btemp
 16281  01059C  0E67               	movlw	103
 16282  01059E  1801               	xorwf	btemp^0,w,c
 16283  0105A0  A4D8               	btfss	status,2,c
 16284  0105A2  D02F               	goto	l11893
 16285                           
 16286                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 16287                           ;stkvar	_e @ sp[(-56)+34]
 16288  0105A4  0EEB               	movlw	-21
 16289  0105A6  AEE3               	btfss	plusw1,7,c
 16290  0105A8  D00E               	goto	u11140
 16291  0105AA  0EEA               	movlw	-22
 16292  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 16293  0105B2  0EFC               	movlw	252
 16294  0105B4  5E01               	subwf	btemp^0,f,c
 16295  0105B6  0EEB               	movlw	-21
 16296  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 16297  0105BE  0EFF               	movlw	255
 16298  0105C0  5A01               	subwfb	btemp^0,f,c
 16299  0105C2  A0D8               	btfss	status,0,c
 16300  0105C4  D018               	goto	l11891
 16301  0105C6                     u11140:
 16302                           
 16303                           ;stkvar	_e @ sp[(-56)+34]
 16304                           ;stkvar	_p @ sp[(-56)+40]
 16305  0105C6  0EF0               	movlw	-16
 16306  0105C8  50E3               	movf	plusw1,w,c
 16307  0105CA  0FFF               	addlw	255
 16308  0105CC  6E0B               	movwf	(btemp+10)^0,c
 16309  0105CE  0EF1               	movlw	-15
 16310  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 16311  0105D6  0EFF               	movlw	255
 16312  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 16313  0105DA  0EEA               	movlw	-22
 16314  0105DC  50E3               	movf	plusw1,w,c
 16315  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 16316  0105E0  500C               	movf	(btemp+11)^0,w,c
 16317  0105E2  0A80               	xorlw	128
 16318  0105E4  6E01               	movwf	btemp^0,c
 16319  0105E6  0EEB               	movlw	-21
 16320  0105E8  50E3               	movf	plusw1,w,c
 16321  0105EA  0A80               	xorlw	128
 16322  0105EC  5801               	subwfb	btemp^0,w,c
 16323  0105EE  A0D8               	btfss	status,0,c
 16324  0105F0  D002               	goto	l11891
 16325                           
 16326                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 16327  0105F2  0E66               	movlw	102
 16328  0105F4  D001               	goto	L17
 16329  0105F6                     l11891:
 16330                           
 16331                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 16332  0105F6  0E65               	movlw	101
 16333  0105F8                     L17:
 16334  0105F8  6E0C               	movwf	(btemp+11)^0,c
 16335                           
 16336                           ;stkvar	_nmode @ sp[(-56)+55]
 16337  0105FA  0EFF               	movlw	-1
 16338  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 16339  010602                     l11893:
 16340                           
 16341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 16342                           ;stkvar	_p @ sp[(-56)+40]
 16343                           ;stkvar	_m @ sp[(-56)+48]
 16344  010602  0EF0               	movlw	-16
 16345  010604  006F FF8C  F001    	movff	plusw1,btemp
 16346  01060A  0EF8               	movlw	-8
 16347  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 16348  010612  0EF1               	movlw	-15
 16349  010614  006F FF8C  F001    	movff	plusw1,btemp
 16350  01061A  0EF9               	movlw	-7
 16351  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 16352                           
 16353                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 16354                           ;stkvar	_mode @ sp[(-56)+54]
 16355  010622  0EFE               	movlw	-2
 16356  010624  006F FF8C  F001    	movff	plusw1,btemp
 16357  01062A  0E67               	movlw	103
 16358  01062C  1801               	xorwf	btemp^0,w,c
 16359  01062E  A4D8               	btfss	status,2,c
 16360  010630  D00B               	goto	u11180
 16361                           
 16362                           ;stkvar	_nmode @ sp[(-56)+55]
 16363  010632  0EFF               	movlw	-1
 16364  010634  006F FF8C  F001    	movff	plusw1,btemp
 16365  01063A  0E66               	movlw	102
 16366  01063C  1801               	xorwf	btemp^0,w,c
 16367  01063E  A4D8               	btfss	status,2,c
 16368  010640  D014               	goto	l2224
 16369                           
 16370                           ;stkvar	_e @ sp[(-56)+34]
 16371  010642  0EEB               	movlw	-21
 16372  010644  AEE3               	btfss	plusw1,7,c
 16373  010646  D011               	goto	l2224
 16374  010648                     u11180:
 16375                           
 16376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 16377                           ;stkvar	_m @ sp[(-56)+48]
 16378  010648  0EF8               	movlw	-8
 16379  01064A  50E3               	movf	plusw1,w,c
 16380  01064C  0F01               	addlw	1
 16381  01064E  6E01               	movwf	btemp^0,c
 16382  010650  0EF8               	movlw	-8
 16383  010652  0060  F007  FFE3   	movff	btemp,plusw1
 16384  010658  6A01               	clrf	btemp^0,c
 16385  01065A  0EF9               	movlw	-7
 16386  01065C  50E3               	movf	plusw1,w,c
 16387  01065E  2001               	addwfc	btemp^0,w,c
 16388  010660  6E01               	movwf	btemp^0,c
 16389  010662  0EF9               	movlw	-7
 16390  010664  0060  F007  FFE3   	movff	btemp,plusw1
 16391  01066A                     l2224:
 16392                           
 16393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 16394                           ;stkvar	_nmode @ sp[(-56)+55]
 16395  01066A  0EFF               	movlw	-1
 16396  01066C  006F FF8C  F001    	movff	plusw1,btemp
 16397  010672  0E66               	movlw	102
 16398  010674  1801               	xorwf	btemp^0,w,c
 16399  010676  A4D8               	btfss	status,2,c
 16400  010678  D03B               	goto	l11913
 16401                           
 16402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 16403                           ;stkvar	_e @ sp[(-56)+34]
 16404  01067A  0EEB               	movlw	-21
 16405  01067C  AEE3               	btfss	plusw1,7,c
 16406  01067E  D01C               	goto	l11909
 16407                           
 16408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 16409  010680  0E00               	movlw	0
 16410  010682  6E09               	movwf	(btemp+8)^0,c
 16411  010684  0E00               	movlw	0
 16412  010686  6E0A               	movwf	(btemp+9)^0,c
 16413  010688  0E80               	movlw	128
 16414  01068A  6E0B               	movwf	(btemp+10)^0,c
 16415  01068C  0E3F               	movlw	63
 16416  01068E  6E0C               	movwf	(btemp+11)^0,c
 16417                           
 16418                           ;stkvar	_u @ sp[(-56)+12]
 16419  010690  0ED4               	movlw	-44
 16420  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 16421  010698  0ED5               	movlw	-43
 16422  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16423  0106A0  0ED6               	movlw	-42
 16424  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16425  0106A8  0ED7               	movlw	-41
 16426  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 16427                           
 16428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 16429                           ;stkvar	_e @ sp[(-56)+34]
 16430  0106B0  0EEA               	movlw	-22
 16431  0106B2  6AE3               	clrf	plusw1,c
 16432  0106B4  0EEB               	movlw	-21
 16433  0106B6  6AE3               	clrf	plusw1,c
 16434  0106B8                     l11909:
 16435                           
 16436                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 16437                           ;stkvar	_mode @ sp[(-56)+54]
 16438  0106B8  0EFE               	movlw	-2
 16439  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 16440  0106C0  0E67               	movlw	103
 16441  0106C2  1801               	xorwf	btemp^0,w,c
 16442  0106C4  B4D8               	btfsc	status,2,c
 16443  0106C6  D014               	goto	l11913
 16444                           
 16445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 16446                           ;stkvar	_e @ sp[(-56)+34]
 16447                           ;stkvar	_m @ sp[(-56)+48]
 16448  0106C8  0EF8               	movlw	-8
 16449  0106CA  50E3               	movf	plusw1,w,c
 16450  0106CC  6E01               	movwf	btemp^0,c
 16451  0106CE  0EEA               	movlw	-22
 16452  0106D0  50E3               	movf	plusw1,w,c
 16453  0106D2  2601               	addwf	btemp^0,f,c
 16454  0106D4  0EF8               	movlw	-8
 16455  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 16456  0106DC  0EF9               	movlw	-7
 16457  0106DE  50E3               	movf	plusw1,w,c
 16458  0106E0  6E01               	movwf	btemp^0,c
 16459  0106E2  0EEB               	movlw	-21
 16460  0106E4  50E3               	movf	plusw1,w,c
 16461  0106E6  2201               	addwfc	btemp^0,f,c
 16462  0106E8  0EF9               	movlw	-7
 16463  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 16464  0106F0                     l11913:
 16465                           
 16466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 16467                           ;stkvar	_i @ sp[(-56)+36]
 16468  0106F0  0EEC               	movlw	-20
 16469  0106F2  6AE3               	clrf	plusw1,c
 16470  0106F4  0EED               	movlw	-19
 16471  0106F6  6AE3               	clrf	plusw1,c
 16472                           
 16473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 16474                           ;stkvar	_g @ sp[(-56)+16]
 16475  0106F8  0ED8               	movlw	-40
 16476  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 16477  010700  0ED9               	movlw	-39
 16478  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 16479  010708  0EDA               	movlw	-38
 16480  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 16481  010710  0EDB               	movlw	-37
 16482  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 16483                           
 16484                           ;stkvar	_h @ sp[(-56)+24]
 16485  010718  0EE0               	movlw	-32
 16486  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 16487  010720  0EE1               	movlw	-31
 16488  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16489  010728  0EE2               	movlw	-30
 16490  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16491  010730  0EE3               	movlw	-29
 16492  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 16493                           
 16494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 16495                           ;stkvar	_u @ sp[(-56)+12]
 16496  010738  0ED4               	movlw	-44
 16497  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 16498  010740  0ED5               	movlw	-43
 16499  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 16500  010748  0ED6               	movlw	-42
 16501  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 16502  010750  0ED7               	movlw	-41
 16503  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 16504                           
 16505                           ;stkvar	_ou @ sp[(-56)+28]
 16506  010758  0EE4               	movlw	-28
 16507  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 16508  010760  0EE5               	movlw	-27
 16509  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16510  010768  0EE6               	movlw	-26
 16511  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16512  010770  0EE7               	movlw	-25
 16513  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 16514                           
 16515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16516  010778  D0D6               	goto	l11929
 16517  01077A                     l11919:
 16518                           
 16519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 16520                           ;stkvar	_u @ sp[(-56)+12]
 16521  01077A  0ED4               	movlw	-44
 16522  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 16523  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 16524  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 16525  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 16526                           
 16527                           ;stkvar	_h @ sp[(-60)+24]
 16528  010794  0EDC               	movlw	-36
 16529  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 16530  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 16531  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16532  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16533  0107AE  EC50  F0A5         	call	___fldiv	;wreg free
 16534  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 16535  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16536  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16537  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 16538  0107CA  ECA6  F0B0         	call	_floorf	;wreg free
 16539                           
 16540                           ;stkvar	_l @ sp[(-56)+20]
 16541  0107CE  0EDC               	movlw	-36
 16542  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 16543  0107D6  0EDD               	movlw	-35
 16544  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16545  0107DE  0EDE               	movlw	-34
 16546  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16547  0107E6  0EDF               	movlw	-33
 16548  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 16549                           
 16550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 16551                           ;stkvar	_l @ sp[(-56)+20]
 16552  0107EE  0EDC               	movlw	-36
 16553  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 16554  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 16555  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 16556  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 16557  010808  ECB1  F0C5         	call	___fltol	;wreg free
 16558  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 16559  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 16560                           
 16561                           ;stkvar	_d @ sp[(-56)+44]
 16562  010818  0EF4               	movlw	-12
 16563  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16564  010820  0EF5               	movlw	-11
 16565  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 16566                           
 16567                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 16568                           ;stkvar	_u @ sp[(-56)+12]
 16569  010828  0ED4               	movlw	-44
 16570  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 16571  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 16572  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 16573  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 16574                           
 16575                           ;stkvar	_l @ sp[(-60)+20]
 16576  010842  0ED8               	movlw	-40
 16577  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 16578  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 16579  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 16580  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 16581  01085C  EC9F  F099         	call	___flmul	;wreg free
 16582  010860  0060  F007  FFE6   	movff	btemp,postinc1
 16583  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16584  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16585  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 16586                           
 16587                           ;stkvar	_h @ sp[(-60)+24]
 16588  010878  0EDC               	movlw	-36
 16589  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 16590  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 16591  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 16592  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 16593  010892  EC7B  F0D9         	call	___flsub	;wreg free
 16594                           
 16595                           ;stkvar	_h @ sp[(-56)+24]
 16596  010896  0EE0               	movlw	-32
 16597  010898  0060  F007  FFE3   	movff	btemp,plusw1
 16598  01089E  0EE1               	movlw	-31
 16599  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16600  0108A6  0EE2               	movlw	-30
 16601  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16602  0108AE  0EE3               	movlw	-29
 16603  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 16604                           
 16605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 16606  0108B6  0E00               	movlw	0
 16607  0108B8  6EE6               	movwf	postinc1,c
 16608  0108BA  0E00               	movlw	0
 16609  0108BC  6EE6               	movwf	postinc1,c
 16610  0108BE  0E20               	movlw	32
 16611  0108C0  6EE6               	movwf	postinc1,c
 16612  0108C2  0E41               	movlw	65
 16613  0108C4  6EE6               	movwf	postinc1,c
 16614                           
 16615                           ;stkvar	_u @ sp[(-60)+12]
 16616  0108C6  0ED0               	movlw	-48
 16617  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16618  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 16619  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16620  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 16621  0108E0  EC50  F0A5         	call	___fldiv	;wreg free
 16622                           
 16623                           ;stkvar	_u @ sp[(-56)+12]
 16624  0108E4  0ED4               	movlw	-44
 16625  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 16626  0108EC  0ED5               	movlw	-43
 16627  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16628  0108F4  0ED6               	movlw	-42
 16629  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16630  0108FC  0ED7               	movlw	-41
 16631  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 16632                           
 16633                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 16634                           ;stkvar	_i @ sp[(-56)+36]
 16635  010904  0EEC               	movlw	-20
 16636  010906  50E3               	movf	plusw1,w,c
 16637  010908  0F01               	addlw	1
 16638  01090A  6E01               	movwf	btemp^0,c
 16639  01090C  0EEC               	movlw	-20
 16640  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 16641  010914  6A01               	clrf	btemp^0,c
 16642  010916  0EED               	movlw	-19
 16643  010918  50E3               	movf	plusw1,w,c
 16644  01091A  2001               	addwfc	btemp^0,w,c
 16645  01091C  6E01               	movwf	btemp^0,c
 16646  01091E  0EED               	movlw	-19
 16647  010920  0060  F007  FFE3   	movff	btemp,plusw1
 16648  010926                     l11929:
 16649                           
 16650                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16651                           ;stkvar	_m @ sp[(-56)+48]
 16652                           ;stkvar	_i @ sp[(-56)+36]
 16653  010926  50E1               	movf	fsr1l,w,c
 16654  010928  0FEC               	addlw	-20
 16655  01092A  6ED9               	movwf	fsr2l,c
 16656  01092C  50E2               	movf	fsr1h,w,c
 16657  01092E  6EDA               	movwf	fsr2h,c
 16658  010930  0EFF               	movlw	255
 16659  010932  22DA               	addwfc	fsr2h,f,c
 16660  010934  0EF8               	movlw	-8
 16661  010936  50E3               	movf	plusw1,w,c
 16662  010938  5CDE               	subwf	postinc2,w,c
 16663  01093A  50DE               	movf	postinc2,w,c
 16664  01093C  0A80               	xorlw	128
 16665  01093E  6E01               	movwf	btemp^0,c
 16666  010940  0EF9               	movlw	-7
 16667  010942  50E3               	movf	plusw1,w,c
 16668  010944  0A80               	xorlw	128
 16669  010946  5801               	subwfb	btemp^0,w,c
 16670  010948  A0D8               	btfss	status,0,c
 16671  01094A  D717               	goto	l11919
 16672                           
 16673                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 16674  01094C  0E00               	movlw	0
 16675  01094E  6EE6               	movwf	postinc1,c
 16676  010950  0E00               	movlw	0
 16677  010952  6EE6               	movwf	postinc1,c
 16678  010954  0EA0               	movlw	160
 16679  010956  6EE6               	movwf	postinc1,c
 16680  010958  0E40               	movlw	64
 16681  01095A  6EE6               	movwf	postinc1,c
 16682                           
 16683                           ;stkvar	_u @ sp[(-60)+12]
 16684  01095C  0ED0               	movlw	-48
 16685  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 16686  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 16687  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 16688  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 16689  010976  EC9F  F099         	call	___flmul	;wreg free
 16690                           
 16691                           ;stkvar	_l @ sp[(-56)+20]
 16692  01097A  0EDC               	movlw	-36
 16693  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 16694  010982  0EDD               	movlw	-35
 16695  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16696  01098A  0EDE               	movlw	-34
 16697  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16698  010992  0EDF               	movlw	-33
 16699  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 16700                           
 16701                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 16702                           ;stkvar	_l @ sp[(-56)+20]
 16703  01099A  0EDC               	movlw	-36
 16704  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 16705  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16706  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16707  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 16708                           
 16709                           ;stkvar	_h @ sp[(-60)+24]
 16710  0109B4  0EDC               	movlw	-36
 16711  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 16712  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 16713  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 16714  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16715  0109CE  EC6A  F0C6         	call	___flge	;wreg free
 16716  0109D2  A001               	btfss	btemp& (0+255),0,c
 16717  0109D4  D021               	goto	u11250
 16718                           
 16719                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 16720                           ;stkvar	_l @ sp[(-56)+20]
 16721                           
 16722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 16723                           
 16724                           ;stkvar	_l @ sp[(-56)+20]
 16725                           
 16726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 16727  0109D6  0EDC               	movlw	-36
 16728  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 16729  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 16730  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 16731  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 16732                           
 16733                           ;stkvar	_h @ sp[(-60)+24]
 16734  0109F0  0EDC               	movlw	-36
 16735  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 16736  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 16737  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 16738  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 16739  010A0A  EC2F  F0D1         	call	___fleq	;wreg free
 16740  010A0E  A001               	btfss	btemp& (0+255),0,c
 16741  010A10  D01B               	goto	l11943
 16742                           
 16743                           ;stkvar	_d @ sp[(-56)+44]
 16744  010A12  0EF4               	movlw	-12
 16745  010A14  B0E3               	btfsc	plusw1,0,c
 16746  010A16  D018               	goto	l11943
 16747  010A18                     u11250:
 16748                           
 16749                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 16750  010A18  0E00               	movlw	0
 16751  010A1A  6E09               	movwf	(btemp+8)^0,c
 16752  010A1C  0E00               	movlw	0
 16753  010A1E  6E0A               	movwf	(btemp+9)^0,c
 16754  010A20  0E00               	movlw	0
 16755  010A22  6E0B               	movwf	(btemp+10)^0,c
 16756  010A24  0E00               	movlw	0
 16757  010A26  6E0C               	movwf	(btemp+11)^0,c
 16758                           
 16759                           ;stkvar	_l @ sp[(-56)+20]
 16760  010A28  0EDC               	movlw	-36
 16761  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 16762  010A30  0EDD               	movlw	-35
 16763  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16764  010A38  0EDE               	movlw	-34
 16765  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16766  010A40  0EDF               	movlw	-33
 16767  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 16768  010A48                     l11943:
 16769                           
 16770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 16771                           ;stkvar	_l @ sp[(-56)+20]
 16772  010A48  0EDC               	movlw	-36
 16773  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 16774  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 16775  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 16776  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 16777                           
 16778                           ;stkvar	_g @ sp[(-60)+16]
 16779  010A62  0ED4               	movlw	-44
 16780  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 16781  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 16782  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 16783  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 16784  010A7C  ECB4  F09D         	call	___fladd	;wreg free
 16785                           
 16786                           ;stkvar	_h @ sp[(-56)+24]
 16787  010A80  0EE0               	movlw	-32
 16788  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 16789  010A88  0EE1               	movlw	-31
 16790  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16791  010A90  0EE2               	movlw	-30
 16792  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16793  010A98  0EE3               	movlw	-29
 16794  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 16795                           
 16796                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 16797                           ;stkvar	_ou @ sp[(-56)+28]
 16798  010AA0  0EE4               	movlw	-28
 16799  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 16800  010AA8  0EE5               	movlw	-27
 16801  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 16802  010AB0  0EE6               	movlw	-26
 16803  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 16804  010AB8  0EE7               	movlw	-25
 16805  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 16806                           
 16807                           ;stkvar	_u @ sp[(-56)+12]
 16808  010AC0  0ED4               	movlw	-44
 16809  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 16810  010AC8  0ED5               	movlw	-43
 16811  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16812  010AD0  0ED6               	movlw	-42
 16813  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16814  010AD8  0ED7               	movlw	-41
 16815  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 16816                           
 16817                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 16818                           ;stkvar	_nmode @ sp[(-56)+55]
 16819  010AE0  0EFF               	movlw	-1
 16820  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 16821  010AE8  0E65               	movlw	101
 16822  010AEA  1801               	xorwf	btemp^0,w,c
 16823  010AEC  B4D8               	btfsc	status,2,c
 16824  010AEE  D011               	goto	l11951
 16825                           
 16826                           ;stkvar	_e @ sp[(-56)+34]
 16827                           ;stkvar	_ne @ sp[(-56)+46]
 16828  010AF0  0EEA               	movlw	-22
 16829  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 16830  010AF8  0EF6               	movlw	-10
 16831  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 16832  010B00  0EEB               	movlw	-21
 16833  010B02  006F FF8C  F001    	movff	plusw1,btemp
 16834  010B08  0EF7               	movlw	-9
 16835  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 16836  010B10  D004               	goto	l2239
 16837  010B12                     l11951:
 16838                           
 16839                           ;stkvar	_ne @ sp[(-56)+46]
 16840  010B12  0EF6               	movlw	-10
 16841  010B14  6AE3               	clrf	plusw1,c
 16842  010B16  0EF7               	movlw	-9
 16843  010B18  6AE3               	clrf	plusw1,c
 16844  010B1A                     l2239:
 16845                           
 16846                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 16847                           ;stkvar	_pp @ sp[(-56)+50]
 16848  010B1A  0EFA               	movlw	-6
 16849  010B1C  6AE3               	clrf	plusw1,c
 16850  010B1E  0EFB               	movlw	-5
 16851  010B20  6AE3               	clrf	plusw1,c
 16852                           
 16853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 16854                           ;stkvar	_t @ sp[(-56)+52]
 16855  010B22  0EFC               	movlw	-4
 16856  010B24  6AE3               	clrf	plusw1,c
 16857  010B26  0EFD               	movlw	-3
 16858  010B28  6AE3               	clrf	plusw1,c
 16859                           
 16860                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 16861                           ;stkvar	_i @ sp[(-56)+36]
 16862  010B2A  0EEC               	movlw	-20
 16863  010B2C  6AE3               	clrf	plusw1,c
 16864  010B2E  0EED               	movlw	-19
 16865  010B30  6AE3               	clrf	plusw1,c
 16866                           
 16867                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 16868  010B32  D1B7               	goto	l12003
 16869  010B34                     l11953:
 16870                           
 16871                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 16872                           ;stkvar	_u @ sp[(-56)+12]
 16873  010B34  0ED4               	movlw	-44
 16874  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 16875  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 16876  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 16877  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 16878                           
 16879                           ;stkvar	_h @ sp[(-60)+24]
 16880  010B4E  0EDC               	movlw	-36
 16881  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 16882  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 16883  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 16884  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 16885  010B68  EC50  F0A5         	call	___fldiv	;wreg free
 16886  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 16887  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16888  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16889  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 16890  010B84  ECA6  F0B0         	call	_floorf	;wreg free
 16891                           
 16892                           ;stkvar	_l @ sp[(-56)+20]
 16893  010B88  0EDC               	movlw	-36
 16894  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 16895  010B90  0EDD               	movlw	-35
 16896  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16897  010B98  0EDE               	movlw	-34
 16898  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16899  010BA0  0EDF               	movlw	-33
 16900  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 16901                           
 16902                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 16903                           ;stkvar	_l @ sp[(-56)+20]
 16904  010BA8  0EDC               	movlw	-36
 16905  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 16906  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 16907  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 16908  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 16909  010BC2  ECB1  F0C5         	call	___fltol	;wreg free
 16910  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 16911  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 16912                           
 16913                           ;stkvar	_d @ sp[(-56)+44]
 16914  010BD2  0EF4               	movlw	-12
 16915  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16916  010BDA  0EF5               	movlw	-11
 16917  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 16918                           
 16919                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 16920  010BE2  B83E               	btfsc	_flags^0,4,c
 16921  010BE4  D026               	goto	l11967
 16922                           
 16923                           ;stkvar	_d @ sp[(-56)+44]
 16924  010BE6  0EF4               	movlw	-12
 16925  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 16926  010BEE  0EF5               	movlw	-11
 16927  010BF0  50E3               	movf	plusw1,w,c
 16928  010BF2  1001               	iorwf	btemp^0,w,c
 16929  010BF4  A4D8               	btfss	status,2,c
 16930  010BF6  D01D               	goto	l11967
 16931                           
 16932                           ;stkvar	_mode @ sp[(-56)+54]
 16933  010BF8  0EFE               	movlw	-2
 16934  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 16935  010C00  0E67               	movlw	103
 16936  010C02  1801               	xorwf	btemp^0,w,c
 16937  010C04  A4D8               	btfss	status,2,c
 16938  010C06  D015               	goto	l11967
 16939                           
 16940                           ;stkvar	_ne @ sp[(-56)+46]
 16941  010C08  0EF7               	movlw	-9
 16942  010C0A  AEE3               	btfss	plusw1,7,c
 16943  010C0C  D012               	goto	l11967
 16944                           
 16945                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 16946                           ;stkvar	_t @ sp[(-56)+52]
 16947  010C0E  0EFC               	movlw	-4
 16948  010C10  50E3               	movf	plusw1,w,c
 16949  010C12  0F01               	addlw	1
 16950  010C14  6E01               	movwf	btemp^0,c
 16951  010C16  0EFC               	movlw	-4
 16952  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 16953  010C1E  6A01               	clrf	btemp^0,c
 16954  010C20  0EFD               	movlw	-3
 16955  010C22  50E3               	movf	plusw1,w,c
 16956  010C24  2001               	addwfc	btemp^0,w,c
 16957  010C26  6E01               	movwf	btemp^0,c
 16958  010C28  0EFD               	movlw	-3
 16959  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 16960                           
 16961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 16962  010C30  D0AF               	goto	l11995
 16963  010C32                     l11967:
 16964                           
 16965                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 16966                           ;stkvar	_pp @ sp[(-56)+50]
 16967  010C32  0EFA               	movlw	-6
 16968  010C34  006F FF8C  F001    	movff	plusw1,btemp
 16969  010C3A  0EFB               	movlw	-5
 16970  010C3C  50E3               	movf	plusw1,w,c
 16971  010C3E  1001               	iorwf	btemp^0,w,c
 16972  010C40  A4D8               	btfss	status,2,c
 16973  010C42  D070               	goto	l11987
 16974                           
 16975                           ;stkvar	_ne @ sp[(-56)+46]
 16976  010C44  0EF7               	movlw	-9
 16977  010C46  AEE3               	btfss	plusw1,7,c
 16978  010C48  D06D               	goto	l11987
 16979                           
 16980                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 16981                           ;stkvar	_n @ sp[(-56)+32]
 16982  010C4A  0EE8               	movlw	-24
 16983  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 16984  010C52  0EE9               	movlw	-23
 16985  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 16986  010C5A  0E76               	movlw	low _dbuf
 16987  010C5C  240B               	addwf	(btemp+10)^0,w,c
 16988  010C5E  6ED9               	movwf	fsr2l,c
 16989  010C60  0E02               	movlw	high _dbuf
 16990  010C62  200C               	addwfc	(btemp+11)^0,w,c
 16991  010C64  6EDA               	movwf	fsr2h,c
 16992  010C66  0E2E               	movlw	46
 16993  010C68  6EDF               	movwf	indf2,c
 16994                           
 16995                           ;stkvar	_n @ sp[(-56)+32]
 16996  010C6A  0EE8               	movlw	-24
 16997  010C6C  50E3               	movf	plusw1,w,c
 16998  010C6E  0F01               	addlw	1
 16999  010C70  6E01               	movwf	btemp^0,c
 17000  010C72  0EE8               	movlw	-24
 17001  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 17002  010C7A  6A01               	clrf	btemp^0,c
 17003  010C7C  0EE9               	movlw	-23
 17004  010C7E  50E3               	movf	plusw1,w,c
 17005  010C80  2001               	addwfc	btemp^0,w,c
 17006  010C82  6E01               	movwf	btemp^0,c
 17007  010C84  0EE9               	movlw	-23
 17008  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 17009                           
 17010                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 17011                           ;stkvar	_w @ sp[(-56)+38]
 17012  010C8C  50E1               	movf	fsr1l,w,c
 17013  010C8E  0FEE               	addlw	-18
 17014  010C90  6ED9               	movwf	fsr2l,c
 17015  010C92  50E2               	movf	fsr1h,w,c
 17016  010C94  6EDA               	movwf	fsr2h,c
 17017  010C96  0EFF               	movlw	255
 17018  010C98  22DA               	addwfc	fsr2h,f,c
 17019  010C9A  06DE               	decf	postinc2,f,c
 17020  010C9C  0E00               	movlw	0
 17021  010C9E  5ADD               	subwfb	postdec2,f,c
 17022                           
 17023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 17024  010CA0  0E01               	movlw	1
 17025  010CA2  6E0B               	movwf	(btemp+10)^0,c
 17026  010CA4  0E00               	movlw	0
 17027  010CA6  6E0C               	movwf	(btemp+11)^0,c
 17028                           
 17029                           ;stkvar	_pp @ sp[(-56)+50]
 17030  010CA8  0EFA               	movlw	-6
 17031  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17032  010CB0  0EFB               	movlw	-5
 17033  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 17034  010CB8  D035               	goto	l11987
 17035  010CBA                     l11979:
 17036                           
 17037                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 17038                           ;stkvar	_n @ sp[(-56)+32]
 17039  010CBA  0EE8               	movlw	-24
 17040  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 17041  010CC2  0EE9               	movlw	-23
 17042  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 17043  010CCA  0E76               	movlw	low _dbuf
 17044  010CCC  240B               	addwf	(btemp+10)^0,w,c
 17045  010CCE  6ED9               	movwf	fsr2l,c
 17046  010CD0  0E02               	movlw	high _dbuf
 17047  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 17048  010CD4  6EDA               	movwf	fsr2h,c
 17049  010CD6  0E30               	movlw	48
 17050  010CD8  6EDF               	movwf	indf2,c
 17051                           
 17052                           ;stkvar	_n @ sp[(-56)+32]
 17053  010CDA  0EE8               	movlw	-24
 17054  010CDC  50E3               	movf	plusw1,w,c
 17055  010CDE  0F01               	addlw	1
 17056  010CE0  6E01               	movwf	btemp^0,c
 17057  010CE2  0EE8               	movlw	-24
 17058  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 17059  010CEA  6A01               	clrf	btemp^0,c
 17060  010CEC  0EE9               	movlw	-23
 17061  010CEE  50E3               	movf	plusw1,w,c
 17062  010CF0  2001               	addwfc	btemp^0,w,c
 17063  010CF2  6E01               	movwf	btemp^0,c
 17064  010CF4  0EE9               	movlw	-23
 17065  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 17066                           
 17067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 17068                           ;stkvar	_w @ sp[(-56)+38]
 17069  010CFC  50E1               	movf	fsr1l,w,c
 17070  010CFE  0FEE               	addlw	-18
 17071  010D00  6ED9               	movwf	fsr2l,c
 17072  010D02  50E2               	movf	fsr1h,w,c
 17073  010D04  6EDA               	movwf	fsr2h,c
 17074  010D06  0EFF               	movlw	255
 17075  010D08  22DA               	addwfc	fsr2h,f,c
 17076  010D0A  06DE               	decf	postinc2,f,c
 17077  010D0C  0E00               	movlw	0
 17078  010D0E  5ADD               	subwfb	postdec2,f,c
 17079                           
 17080                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 17081                           ;stkvar	_t @ sp[(-56)+52]
 17082  010D10  50E1               	movf	fsr1l,w,c
 17083  010D12  0FFC               	addlw	-4
 17084  010D14  6ED9               	movwf	fsr2l,c
 17085  010D16  50E2               	movf	fsr1h,w,c
 17086  010D18  6EDA               	movwf	fsr2h,c
 17087  010D1A  0EFF               	movlw	255
 17088  010D1C  22DA               	addwfc	fsr2h,f,c
 17089  010D1E  06DE               	decf	postinc2,f,c
 17090  010D20  0E00               	movlw	0
 17091  010D22  5ADD               	subwfb	postdec2,f,c
 17092  010D24                     l11987:
 17093                           
 17094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 17095                           ;stkvar	_t @ sp[(-56)+52]
 17096  010D24  0EFC               	movlw	-4
 17097  010D26  006F FF8C  F001    	movff	plusw1,btemp
 17098  010D2C  0EFD               	movlw	-3
 17099  010D2E  50E3               	movf	plusw1,w,c
 17100  010D30  1001               	iorwf	btemp^0,w,c
 17101  010D32  A4D8               	btfss	status,2,c
 17102  010D34  D7C2               	goto	l11979
 17103                           
 17104                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 17105                           ;stkvar	_n @ sp[(-56)+32]
 17106  010D36  0EE8               	movlw	-24
 17107  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 17108  010D3E  0EE9               	movlw	-23
 17109  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 17110  010D46  0E76               	movlw	low _dbuf
 17111  010D48  240B               	addwf	(btemp+10)^0,w,c
 17112  010D4A  6ED9               	movwf	fsr2l,c
 17113  010D4C  0E02               	movlw	high _dbuf
 17114  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 17115  010D50  6EDA               	movwf	fsr2h,c
 17116                           
 17117                           ;stkvar	_d @ sp[(-56)+44]
 17118  010D52  0EF4               	movlw	-12
 17119  010D54  50E3               	movf	plusw1,w,c
 17120  010D56  0F30               	addlw	48
 17121  010D58  6EDF               	movwf	indf2,c
 17122                           
 17123                           ;stkvar	_n @ sp[(-56)+32]
 17124  010D5A  0EE8               	movlw	-24
 17125  010D5C  50E3               	movf	plusw1,w,c
 17126  010D5E  0F01               	addlw	1
 17127  010D60  6E01               	movwf	btemp^0,c
 17128  010D62  0EE8               	movlw	-24
 17129  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 17130  010D6A  6A01               	clrf	btemp^0,c
 17131  010D6C  0EE9               	movlw	-23
 17132  010D6E  50E3               	movf	plusw1,w,c
 17133  010D70  2001               	addwfc	btemp^0,w,c
 17134  010D72  6E01               	movwf	btemp^0,c
 17135  010D74  0EE9               	movlw	-23
 17136  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 17137                           
 17138                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 17139                           ;stkvar	_w @ sp[(-56)+38]
 17140  010D7C  50E1               	movf	fsr1l,w,c
 17141  010D7E  0FEE               	addlw	-18
 17142  010D80  6ED9               	movwf	fsr2l,c
 17143  010D82  50E2               	movf	fsr1h,w,c
 17144  010D84  6EDA               	movwf	fsr2h,c
 17145  010D86  0EFF               	movlw	255
 17146  010D88  22DA               	addwfc	fsr2h,f,c
 17147  010D8A  06DE               	decf	postinc2,f,c
 17148  010D8C  0E00               	movlw	0
 17149  010D8E  5ADD               	subwfb	postdec2,f,c
 17150  010D90                     l11995:
 17151                           
 17152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 17153                           ;stkvar	_u @ sp[(-56)+12]
 17154  010D90  0ED4               	movlw	-44
 17155  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 17156  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 17157  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 17158  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 17159                           
 17160                           ;stkvar	_l @ sp[(-60)+20]
 17161  010DAA  0ED8               	movlw	-40
 17162  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 17163  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 17164  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 17165  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 17166  010DC4  EC9F  F099         	call	___flmul	;wreg free
 17167  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 17168  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17169  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17170  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 17171                           
 17172                           ;stkvar	_h @ sp[(-60)+24]
 17173  010DE0  0EDC               	movlw	-36
 17174  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 17175  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 17176  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 17177  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 17178  010DFA  EC7B  F0D9         	call	___flsub	;wreg free
 17179                           
 17180                           ;stkvar	_h @ sp[(-56)+24]
 17181  010DFE  0EE0               	movlw	-32
 17182  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 17183  010E06  0EE1               	movlw	-31
 17184  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17185  010E0E  0EE2               	movlw	-30
 17186  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17187  010E16  0EE3               	movlw	-29
 17188  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 17189                           
 17190                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 17191  010E1E  0E00               	movlw	0
 17192  010E20  6EE6               	movwf	postinc1,c
 17193  010E22  0E00               	movlw	0
 17194  010E24  6EE6               	movwf	postinc1,c
 17195  010E26  0E20               	movlw	32
 17196  010E28  6EE6               	movwf	postinc1,c
 17197  010E2A  0E41               	movlw	65
 17198  010E2C  6EE6               	movwf	postinc1,c
 17199                           
 17200                           ;stkvar	_u @ sp[(-60)+12]
 17201  010E2E  0ED0               	movlw	-48
 17202  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 17203  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 17204  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 17205  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 17206  010E48  EC50  F0A5         	call	___fldiv	;wreg free
 17207                           
 17208                           ;stkvar	_u @ sp[(-56)+12]
 17209  010E4C  0ED4               	movlw	-44
 17210  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 17211  010E54  0ED5               	movlw	-43
 17212  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17213  010E5C  0ED6               	movlw	-42
 17214  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17215  010E64  0ED7               	movlw	-41
 17216  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 17217                           
 17218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 17219                           ;stkvar	_ne @ sp[(-56)+46]
 17220  010E6C  50E1               	movf	fsr1l,w,c
 17221  010E6E  0FF6               	addlw	-10
 17222  010E70  6ED9               	movwf	fsr2l,c
 17223  010E72  50E2               	movf	fsr1h,w,c
 17224  010E74  6EDA               	movwf	fsr2h,c
 17225  010E76  0EFF               	movlw	255
 17226  010E78  22DA               	addwfc	fsr2h,f,c
 17227  010E7A  06DE               	decf	postinc2,f,c
 17228  010E7C  0E00               	movlw	0
 17229  010E7E  5ADD               	subwfb	postdec2,f,c
 17230                           
 17231                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 17232                           ;stkvar	_i @ sp[(-56)+36]
 17233  010E80  0EEC               	movlw	-20
 17234  010E82  50E3               	movf	plusw1,w,c
 17235  010E84  0F01               	addlw	1
 17236  010E86  6E01               	movwf	btemp^0,c
 17237  010E88  0EEC               	movlw	-20
 17238  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 17239  010E90  6A01               	clrf	btemp^0,c
 17240  010E92  0EED               	movlw	-19
 17241  010E94  50E3               	movf	plusw1,w,c
 17242  010E96  2001               	addwfc	btemp^0,w,c
 17243  010E98  6E01               	movwf	btemp^0,c
 17244  010E9A  0EED               	movlw	-19
 17245  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 17246  010EA2                     l12003:
 17247                           
 17248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 17249                           ;stkvar	_m @ sp[(-56)+48]
 17250                           ;stkvar	_i @ sp[(-56)+36]
 17251  010EA2  50E1               	movf	fsr1l,w,c
 17252  010EA4  0FEC               	addlw	-20
 17253  010EA6  6ED9               	movwf	fsr2l,c
 17254  010EA8  50E2               	movf	fsr1h,w,c
 17255  010EAA  6EDA               	movwf	fsr2h,c
 17256  010EAC  0EFF               	movlw	255
 17257  010EAE  22DA               	addwfc	fsr2h,f,c
 17258  010EB0  0EF8               	movlw	-8
 17259  010EB2  50E3               	movf	plusw1,w,c
 17260  010EB4  5CDE               	subwf	postinc2,w,c
 17261  010EB6  50DE               	movf	postinc2,w,c
 17262  010EB8  0A80               	xorlw	128
 17263  010EBA  6E01               	movwf	btemp^0,c
 17264  010EBC  0EF9               	movlw	-7
 17265  010EBE  50E3               	movf	plusw1,w,c
 17266  010EC0  0A80               	xorlw	128
 17267  010EC2  5801               	subwfb	btemp^0,w,c
 17268  010EC4  B0D8               	btfsc	status,0,c
 17269  010EC6  D00E               	goto	u11350
 17270                           
 17271                           ;stkvar	_n @ sp[(-56)+32]
 17272  010EC8  0EE9               	movlw	-23
 17273  010ECA  BEE3               	btfsc	plusw1,7,c
 17274  010ECC  D633               	goto	l11953
 17275  010ECE  0EE9               	movlw	-23
 17276  010ED0  50E3               	movf	plusw1,w,c
 17277  010ED2  E108               	bnz	u11350
 17278  010ED4  0EE8               	movlw	-24
 17279  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 17280  010EDC  0E4B               	movlw	75
 17281  010EDE  5E01               	subwf	btemp^0,f,c
 17282  010EE0  A0D8               	btfss	status,0,c
 17283  010EE2  D628               	goto	l11953
 17284  010EE4                     u11350:
 17285                           
 17286                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 17287                           ;stkvar	_pp @ sp[(-56)+50]
 17288  010EE4  0EFA               	movlw	-6
 17289  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 17290  010EEC  0EFB               	movlw	-5
 17291  010EEE  50E3               	movf	plusw1,w,c
 17292  010EF0  1001               	iorwf	btemp^0,w,c
 17293  010EF2  B4D8               	btfsc	status,2,c
 17294  010EF4  A83E               	btfss	_flags^0,4,c
 17295  010EF6  D021               	goto	l12015
 17296                           
 17297                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 17298                           ;stkvar	_n @ sp[(-56)+32]
 17299  010EF8  0EE8               	movlw	-24
 17300  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 17301  010F00  0EE9               	movlw	-23
 17302  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 17303  010F08  0E76               	movlw	low _dbuf
 17304  010F0A  240B               	addwf	(btemp+10)^0,w,c
 17305  010F0C  6ED9               	movwf	fsr2l,c
 17306  010F0E  0E02               	movlw	high _dbuf
 17307  010F10  200C               	addwfc	(btemp+11)^0,w,c
 17308  010F12  6EDA               	movwf	fsr2h,c
 17309  010F14  0E2E               	movlw	46
 17310  010F16  6EDF               	movwf	indf2,c
 17311                           
 17312                           ;stkvar	_n @ sp[(-56)+32]
 17313  010F18  0EE8               	movlw	-24
 17314  010F1A  50E3               	movf	plusw1,w,c
 17315  010F1C  0F01               	addlw	1
 17316  010F1E  6E01               	movwf	btemp^0,c
 17317  010F20  0EE8               	movlw	-24
 17318  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 17319  010F28  6A01               	clrf	btemp^0,c
 17320  010F2A  0EE9               	movlw	-23
 17321  010F2C  50E3               	movf	plusw1,w,c
 17322  010F2E  2001               	addwfc	btemp^0,w,c
 17323  010F30  6E01               	movwf	btemp^0,c
 17324  010F32  0EE9               	movlw	-23
 17325  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 17326  010F3A                     l12015:
 17327                           
 17328                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 17329                           ;stkvar	_n @ sp[(-56)+32]
 17330  010F3A  0EE8               	movlw	-24
 17331  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 17332  010F42  0EE9               	movlw	-23
 17333  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 17334  010F4A  0E76               	movlw	low _dbuf
 17335  010F4C  240B               	addwf	(btemp+10)^0,w,c
 17336  010F4E  6ED9               	movwf	fsr2l,c
 17337  010F50  0E02               	movlw	high _dbuf
 17338  010F52  200C               	addwfc	(btemp+11)^0,w,c
 17339  010F54  6EDA               	movwf	fsr2h,c
 17340  010F56  0E00               	movlw	0
 17341  010F58  6EDF               	movwf	indf2,c
 17342                           
 17343                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 17344                           ;stkvar	_nmode @ sp[(-56)+55]
 17345  010F5A  0EFF               	movlw	-1
 17346  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 17347  010F62  0E65               	movlw	101
 17348  010F64  1801               	xorwf	btemp^0,w,c
 17349  010F66  A4D8               	btfss	status,2,c
 17350  010F68  EF16  F081         	goto	l11819
 17351                           
 17352                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 17353  010F6C  0E4F               	movlw	79
 17354  010F6E  6E0B               	movwf	(btemp+10)^0,c
 17355  010F70  0E00               	movlw	0
 17356  010F72  6E0C               	movwf	(btemp+11)^0,c
 17357                           
 17358                           ;stkvar	_i @ sp[(-56)+36]
 17359  010F74  0EEC               	movlw	-20
 17360  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17361  010F7C  0EED               	movlw	-19
 17362  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17363                           
 17364                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 17365                           ;stkvar	_i @ sp[(-56)+36]
 17366  010F84  0EEC               	movlw	-20
 17367  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 17368  010F8C  0EED               	movlw	-19
 17369  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17370  010F94  0E76               	movlw	low _dbuf
 17371  010F96  240B               	addwf	(btemp+10)^0,w,c
 17372  010F98  6ED9               	movwf	fsr2l,c
 17373  010F9A  0E02               	movlw	high _dbuf
 17374  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 17375  010F9E  6EDA               	movwf	fsr2h,c
 17376  010FA0  0E00               	movlw	0
 17377  010FA2  6EDF               	movwf	indf2,c
 17378                           
 17379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 17380                           ;stkvar	_sign @ sp[(-56)+42]
 17381  010FA4  0EF2               	movlw	-14
 17382  010FA6  6AE3               	clrf	plusw1,c
 17383  010FA8  0EF3               	movlw	-13
 17384  010FAA  6AE3               	clrf	plusw1,c
 17385                           
 17386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 17387                           ;stkvar	_e @ sp[(-56)+34]
 17388  010FAC  0EEB               	movlw	-21
 17389  010FAE  AEE3               	btfss	plusw1,7,c
 17390  010FB0  D012               	goto	l12029
 17391                           
 17392                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 17393  010FB2  0E01               	movlw	1
 17394  010FB4  6E0B               	movwf	(btemp+10)^0,c
 17395  010FB6  0E00               	movlw	0
 17396  010FB8  6E0C               	movwf	(btemp+11)^0,c
 17397                           
 17398                           ;stkvar	_sign @ sp[(-56)+42]
 17399  010FBA  0EF2               	movlw	-14
 17400  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17401  010FC2  0EF3               	movlw	-13
 17402  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 17403                           
 17404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 17405                           ;stkvar	_e @ sp[(-56)+34]
 17406                           ;stkvar	_e @ sp[(-56)+34]
 17407  010FCA  0EEA               	movlw	-22
 17408  010FCC  6CE3               	negf	plusw1,c
 17409  010FCE  0EEB               	movlw	-21
 17410  010FD0  1EE3               	comf	plusw1,f,c
 17411  010FD2  B0D8               	btfsc	status,0,c
 17412  010FD4  2AE3               	incf	plusw1,f,c
 17413  010FD6                     l12029:
 17414                           
 17415                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 17416  010FD6  0E02               	movlw	2
 17417  010FD8  6E0B               	movwf	(btemp+10)^0,c
 17418  010FDA  0E00               	movlw	0
 17419  010FDC  6E0C               	movwf	(btemp+11)^0,c
 17420                           
 17421                           ;stkvar	_p @ sp[(-56)+40]
 17422  010FDE  0EF0               	movlw	-16
 17423  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17424  010FE6  0EF1               	movlw	-15
 17425  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 17426                           
 17427                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17428  010FEE  D051               	goto	l12041
 17429  010FF0                     l12031:
 17430                           
 17431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 17432                           ;stkvar	_i @ sp[(-56)+36]
 17433  010FF0  50E1               	movf	fsr1l,w,c
 17434  010FF2  0FEC               	addlw	-20
 17435  010FF4  6ED9               	movwf	fsr2l,c
 17436  010FF6  50E2               	movf	fsr1h,w,c
 17437  010FF8  6EDA               	movwf	fsr2h,c
 17438  010FFA  0EFF               	movlw	255
 17439  010FFC  22DA               	addwfc	fsr2h,f,c
 17440  010FFE  06DE               	decf	postinc2,f,c
 17441  011000  0E00               	movlw	0
 17442  011002  5ADD               	subwfb	postdec2,f,c
 17443                           
 17444                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 17445                           ;stkvar	_i @ sp[(-56)+36]
 17446  011004  0EEC               	movlw	-20
 17447  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 17448  01100C  0EED               	movlw	-19
 17449  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17450  011014  0E76               	movlw	low _dbuf
 17451  011016  240B               	addwf	(btemp+10)^0,w,c
 17452  011018  6ED9               	movwf	fsr2l,c
 17453  01101A  0E02               	movlw	high _dbuf
 17454  01101C  200C               	addwfc	(btemp+11)^0,w,c
 17455  01101E  6EDA               	movwf	fsr2h,c
 17456  011020  0E0A               	movlw	10
 17457  011022  6EE6               	movwf	postinc1,c
 17458  011024  0E00               	movlw	0
 17459  011026  6EE6               	movwf	postinc1,c
 17460                           
 17461                           ;stkvar	_e @ sp[(-58)+34]
 17462  011028  0EE8               	movlw	-24
 17463  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 17464  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 17465  011036  EC6A  F0CB         	call	___awmod	;wreg free
 17466  01103A  5001               	movf	btemp^0,w,c
 17467  01103C  0F30               	addlw	48
 17468  01103E  6EDF               	movwf	indf2,c
 17469                           
 17470                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 17471  011040  0E0A               	movlw	10
 17472  011042  6EE6               	movwf	postinc1,c
 17473  011044  0E00               	movlw	0
 17474  011046  6EE6               	movwf	postinc1,c
 17475                           
 17476                           ;stkvar	_e @ sp[(-58)+34]
 17477  011048  0EE8               	movlw	-24
 17478  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 17479  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 17480  011056  ECCD  F0C7         	call	___awdiv	;wreg free
 17481                           
 17482                           ;stkvar	_e @ sp[(-56)+34]
 17483  01105A  0EEA               	movlw	-22
 17484  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 17485  011062  0EEB               	movlw	-21
 17486  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17487                           
 17488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 17489                           ;stkvar	_p @ sp[(-56)+40]
 17490  01106A  50E1               	movf	fsr1l,w,c
 17491  01106C  0FF0               	addlw	-16
 17492  01106E  6ED9               	movwf	fsr2l,c
 17493  011070  50E2               	movf	fsr1h,w,c
 17494  011072  6EDA               	movwf	fsr2h,c
 17495  011074  0EFF               	movlw	255
 17496  011076  22DA               	addwfc	fsr2h,f,c
 17497  011078  06DE               	decf	postinc2,f,c
 17498  01107A  0E00               	movlw	0
 17499  01107C  5ADD               	subwfb	postdec2,f,c
 17500                           
 17501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 17502                           ;stkvar	_w @ sp[(-56)+38]
 17503  01107E  50E1               	movf	fsr1l,w,c
 17504  011080  0FEE               	addlw	-18
 17505  011082  6ED9               	movwf	fsr2l,c
 17506  011084  50E2               	movf	fsr1h,w,c
 17507  011086  6EDA               	movwf	fsr2h,c
 17508  011088  0EFF               	movlw	255
 17509  01108A  22DA               	addwfc	fsr2h,f,c
 17510  01108C  06DE               	decf	postinc2,f,c
 17511  01108E  0E00               	movlw	0
 17512  011090  5ADD               	subwfb	postdec2,f,c
 17513  011092                     l12041:
 17514                           
 17515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17516                           ;stkvar	_e @ sp[(-56)+34]
 17517  011092  0EEA               	movlw	-22
 17518  011094  006F FF8C  F001    	movff	plusw1,btemp
 17519  01109A  0EEB               	movlw	-21
 17520  01109C  50E3               	movf	plusw1,w,c
 17521  01109E  1001               	iorwf	btemp^0,w,c
 17522  0110A0  A4D8               	btfss	status,2,c
 17523  0110A2  D7A6               	goto	l12031
 17524                           
 17525                           ;stkvar	_p @ sp[(-56)+40]
 17526  0110A4  0EF1               	movlw	-15
 17527  0110A6  BEE3               	btfsc	plusw1,7,c
 17528  0110A8  D007               	goto	u11410
 17529  0110AA  0EF1               	movlw	-15
 17530  0110AC  50E3               	movf	plusw1,w,c
 17531  0110AE  E1A0               	bnz	l12031
 17532  0110B0  0EF0               	movlw	-16
 17533  0110B2  04E3               	decf	plusw1,w,c
 17534  0110B4  B0D8               	btfsc	status,0,c
 17535  0110B6  D79C               	goto	l12031
 17536  0110B8                     u11410:
 17537                           
 17538                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 17539                           ;stkvar	_i @ sp[(-56)+36]
 17540  0110B8  50E1               	movf	fsr1l,w,c
 17541  0110BA  0FEC               	addlw	-20
 17542  0110BC  6ED9               	movwf	fsr2l,c
 17543  0110BE  50E2               	movf	fsr1h,w,c
 17544  0110C0  6EDA               	movwf	fsr2h,c
 17545  0110C2  0EFF               	movlw	255
 17546  0110C4  22DA               	addwfc	fsr2h,f,c
 17547  0110C6  06DE               	decf	postinc2,f,c
 17548  0110C8  0E00               	movlw	0
 17549  0110CA  5ADD               	subwfb	postdec2,f,c
 17550                           
 17551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 17552                           ;stkvar	_sign @ sp[(-56)+42]
 17553  0110CC  0EF2               	movlw	-14
 17554  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 17555  0110D4  0EF3               	movlw	-13
 17556  0110D6  50E3               	movf	plusw1,w,c
 17557  0110D8  1001               	iorwf	btemp^0,w,c
 17558  0110DA  A4D8               	btfss	status,2,c
 17559  0110DC  D002               	goto	l12051
 17560  0110DE  0E2B               	movlw	43
 17561  0110E0  D001               	goto	L18
 17562  0110E2                     l12051:
 17563  0110E2  0E2D               	movlw	45
 17564  0110E4                     L18:
 17565  0110E4  6E0B               	movwf	(btemp+10)^0,c
 17566  0110E6  0E00               	movlw	0
 17567  0110E8  6E0C               	movwf	(btemp+11)^0,c
 17568                           
 17569                           ;stkvar	_efgtoa$5500 @ sp[(-56)+4]
 17570  0110EA  0ECC               	movlw	-52
 17571  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17572  0110F2  0ECD               	movlw	-51
 17573  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 17574                           
 17575                           ;stkvar	_efgtoa$5500 @ sp[(-56)+4]
 17576                           ;stkvar	_i @ sp[(-56)+36]
 17577  0110FA  0EEC               	movlw	-20
 17578  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 17579  011102  0EED               	movlw	-19
 17580  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 17581  01110A  0E76               	movlw	low _dbuf
 17582  01110C  240B               	addwf	(btemp+10)^0,w,c
 17583  01110E  6ED9               	movwf	fsr2l,c
 17584  011110  0E02               	movlw	high _dbuf
 17585  011112  200C               	addwfc	(btemp+11)^0,w,c
 17586  011114  6EDA               	movwf	fsr2h,c
 17587  011116  0ECC               	movlw	-52
 17588  011118  006F FF8F FFDF     	movff	plusw1,indf2
 17589                           
 17590                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 17591                           ;stkvar	_w @ sp[(-56)+38]
 17592  01111E  50E1               	movf	fsr1l,w,c
 17593  011120  0FEE               	addlw	-18
 17594  011122  6ED9               	movwf	fsr2l,c
 17595  011124  50E2               	movf	fsr1h,w,c
 17596  011126  6EDA               	movwf	fsr2h,c
 17597  011128  0EFF               	movlw	255
 17598  01112A  22DA               	addwfc	fsr2h,f,c
 17599  01112C  06DE               	decf	postinc2,f,c
 17600  01112E  0E00               	movlw	0
 17601  011130  5ADD               	subwfb	postdec2,f,c
 17602                           
 17603                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 17604                           ;stkvar	_i @ sp[(-56)+36]
 17605  011132  50E1               	movf	fsr1l,w,c
 17606  011134  0FEC               	addlw	-20
 17607  011136  6ED9               	movwf	fsr2l,c
 17608  011138  50E2               	movf	fsr1h,w,c
 17609  01113A  6EDA               	movwf	fsr2h,c
 17610  01113C  0EFF               	movlw	255
 17611  01113E  22DA               	addwfc	fsr2h,f,c
 17612  011140  06DE               	decf	postinc2,f,c
 17613  011142  0E00               	movlw	0
 17614  011144  5ADD               	subwfb	postdec2,f,c
 17615  011146  0EBF               	movlw	191
 17616  011148  6E0B               	movwf	(btemp+10)^0,c
 17617  01114A  0EFF               	movlw	255
 17618  01114C  6E0C               	movwf	(btemp+11)^0,c
 17619                           
 17620                           ;stkvar	_c @ sp[(-56)+-7]
 17621  01114E  0EC1               	movlw	-63
 17622  011150  50E3               	movf	plusw1,w,c
 17623  011152  6E09               	movwf	(btemp+8)^0,c
 17624  011154  6A0A               	clrf	(btemp+9)^0,c
 17625  011156  500B               	movf	(btemp+10)^0,w,c
 17626  011158  2609               	addwf	(btemp+8)^0,f,c
 17627  01115A  500C               	movf	(btemp+11)^0,w,c
 17628  01115C  220A               	addwfc	(btemp+9)^0,f,c
 17629  01115E  500A               	movf	(btemp+9)^0,w,c
 17630  011160  E106               	bnz	u11430
 17631  011162  0E1A               	movlw	26
 17632  011164  5C09               	subwf	(btemp+8)^0,w,c
 17633  011166  B0D8               	btfsc	status,0,c
 17634  011168  D002               	goto	u11430
 17635  01116A  0E01               	movlw	1
 17636  01116C  D001               	goto	u11440
 17637  01116E                     u11430:
 17638  01116E  0E00               	movlw	0
 17639  011170                     u11440:
 17640  011170  6E0B               	movwf	(btemp+10)^0,c
 17641  011172  6A0C               	clrf	(btemp+11)^0,c
 17642                           
 17643                           ;stkvar	_efgtoa$5502 @ sp[(-56)+0]
 17644  011174  0EC8               	movlw	-56
 17645  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17646  01117C  0EC9               	movlw	-55
 17647  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17648                           
 17649                           ;stkvar	_efgtoa$5502 @ sp[(-56)+0]
 17650  011184  0EC8               	movlw	-56
 17651  011186  006F FF8C  F001    	movff	plusw1,btemp
 17652  01118C  0EC9               	movlw	-55
 17653  01118E  50E3               	movf	plusw1,w,c
 17654  011190  1001               	iorwf	btemp^0,w,c
 17655  011192  A4D8               	btfss	status,2,c
 17656  011194  D002               	goto	l12067
 17657  011196  0E65               	movlw	101
 17658  011198  D001               	goto	L19
 17659  01119A                     l12067:
 17660  01119A  0E45               	movlw	69
 17661  01119C                     L19:
 17662  01119C  6E0B               	movwf	(btemp+10)^0,c
 17663  01119E  0E00               	movlw	0
 17664  0111A0  6E0C               	movwf	(btemp+11)^0,c
 17665                           
 17666                           ;stkvar	_efgtoa$5501 @ sp[(-56)+2]
 17667  0111A2  0ECA               	movlw	-54
 17668  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17669  0111AA  0ECB               	movlw	-53
 17670  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17671                           
 17672                           ;stkvar	_efgtoa$5501 @ sp[(-56)+2]
 17673                           ;stkvar	_i @ sp[(-56)+36]
 17674  0111B2  0EEC               	movlw	-20
 17675  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 17676  0111BA  0EED               	movlw	-19
 17677  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 17678  0111C2  0E76               	movlw	low _dbuf
 17679  0111C4  240B               	addwf	(btemp+10)^0,w,c
 17680  0111C6  6ED9               	movwf	fsr2l,c
 17681  0111C8  0E02               	movlw	high _dbuf
 17682  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 17683  0111CC  6EDA               	movwf	fsr2h,c
 17684  0111CE  0ECA               	movlw	-54
 17685  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 17686                           
 17687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 17688                           ;stkvar	_w @ sp[(-56)+38]
 17689  0111D6  50E1               	movf	fsr1l,w,c
 17690  0111D8  0FEE               	addlw	-18
 17691  0111DA  6ED9               	movwf	fsr2l,c
 17692  0111DC  50E2               	movf	fsr1h,w,c
 17693  0111DE  6EDA               	movwf	fsr2h,c
 17694  0111E0  0EFF               	movlw	255
 17695  0111E2  22DA               	addwfc	fsr2h,f,c
 17696  0111E4  06DE               	decf	postinc2,f,c
 17697  0111E6  0E00               	movlw	0
 17698  0111E8  5ADD               	subwfb	postdec2,f,c
 17699                           
 17700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 17701                           ;stkvar	_i @ sp[(-56)+36]
 17702  0111EA  0EEC               	movlw	-20
 17703  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 17704  0111F2  0EED               	movlw	-19
 17705  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 17706  0111FA  0E76               	movlw	low _dbuf
 17707  0111FC  240B               	addwf	(btemp+10)^0,w,c
 17708  0111FE  6E09               	movwf	(btemp+8)^0,c
 17709  011200  0E02               	movlw	high _dbuf
 17710  011202  200C               	addwfc	(btemp+11)^0,w,c
 17711  011204  6E0A               	movwf	(btemp+9)^0,c
 17712  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 17713  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 17714                           
 17715                           ;stkvar	_n @ sp[(-58)+32]
 17716  011212  0E76               	movlw	low _dbuf
 17717  011214  6E0B               	movwf	(btemp+10)^0,c
 17718  011216  0E02               	movlw	high _dbuf
 17719  011218  6E0C               	movwf	(btemp+11)^0,c
 17720  01121A  0EE6               	movlw	-26
 17721  01121C  50E3               	movf	plusw1,w,c
 17722  01121E  260B               	addwf	(btemp+10)^0,f,c
 17723  011220  0EE7               	movlw	-25
 17724  011222  50E3               	movf	plusw1,w,c
 17725  011224  220C               	addwfc	(btemp+11)^0,f,c
 17726  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17727  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 17728  011232  ECF9  F0CF         	call	_strcpy	;wreg free
 17729  011236  EF16  F081         	goto	l11819
 17730  01123A                     l2195:
 17731                           
 17732                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 17733  01123A  0EC1               	movlw	193
 17734  01123C  26E1               	addwf	fsr1l,f,c
 17735  01123E  0EFF               	movlw	255
 17736  011240  22E2               	addwfc	fsr1h,f,c
 17737  011242  0012               	return		;funcret
 17738  011244                     __end_of_efgtoa:
 17739                           	opt callstack 0
 17740                           
 17741 ;; *************** function _tolower *****************
 17742 ;; Defined at:
 17743 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 17744 ;; Parameters:    Size  Location     Type
 17745 ;;  c               2  [STACK] int 
 17746 ;; Auto vars:     Size  Location     Type
 17747 ;;		None
 17748 ;; Return value:  Size  Location     Type
 17749 ;;                  2  [STACK] int 
 17750 ;; Registers used:
 17751 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 17752 ;; Tracked objects:
 17753 ;;		On entry : 0/0
 17754 ;;		On exit  : 0/0
 17755 ;;		Unchanged: 0/0
 17756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17761 ;;Total ram usage:        0 bytes
 17762 ;; Hardware stack levels used:    1
 17763 ;; Hardware stack levels required when called:   16
 17764 ;; This function calls:
 17765 ;;		_isupper
 17766 ;; This function is called by:
 17767 ;;		_efgtoa
 17768 ;;		_vfpfcnvrt
 17769 ;; This function uses a reentrant model
 17770 ;;
 17771                           
 17772                           	psect	text56
 17773  01A9F0                     __ptext56:
 17774                           	opt callstack 0
 17775  01A9F0                     _tolower:
 17776                           	opt callstack 0
 17777                           
 17778                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17779  01A9F0  52E6               	movf	postinc1,f,c
 17780  01A9F2  52E6               	movf	postinc1,f,c
 17781                           
 17782                           ;stkvar	_c @ sp[(-2)+-2]
 17783                           
 17784                           ;incstack = 0
 17785 ;; hardware stack exceeded
 17786  01A9F4  0EFC               	movlw	-4
 17787  01A9F6  50E3               	movf	plusw1,w,c
 17788  01A9F8  0FBF               	addlw	191
 17789  01A9FA  6E0B               	movwf	(btemp+10)^0,c
 17790  01A9FC  0EFD               	movlw	-3
 17791  01A9FE  006F FF8C  F00C    	movff	plusw1,btemp+11
 17792  01AA04  0EFF               	movlw	255
 17793  01AA06  220C               	addwfc	(btemp+11)^0,f,c
 17794  01AA08  500C               	movf	(btemp+11)^0,w,c
 17795  01AA0A  E106               	bnz	u5980
 17796  01AA0C  0E1A               	movlw	26
 17797  01AA0E  5C0B               	subwf	(btemp+10)^0,w,c
 17798  01AA10  B0D8               	btfsc	status,0,c
 17799  01AA12  D002               	goto	u5980
 17800  01AA14  0E01               	movlw	1
 17801  01AA16  D001               	goto	u5990
 17802  01AA18                     u5980:
 17803  01AA18  0E00               	movlw	0
 17804  01AA1A                     u5990:
 17805  01AA1A  6E0B               	movwf	(btemp+10)^0,c
 17806  01AA1C  6A0C               	clrf	(btemp+11)^0,c
 17807                           
 17808                           ;stkvar	_tolower$6321 @ sp[(-2)+0]
 17809  01AA1E  0EFE               	movlw	-2
 17810  01AA20  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17811  01AA26  0EFF               	movlw	-1
 17812  01AA28  0060  F033  FFE3   	movff	btemp+11,plusw1
 17813                           
 17814                           ;stkvar	_tolower$6321 @ sp[(-2)+0]
 17815  01AA2E  0EFE               	movlw	-2
 17816  01AA30  006F FF8C  F001    	movff	plusw1,btemp
 17817  01AA36  0EFF               	movlw	-1
 17818  01AA38  50E3               	movf	plusw1,w,c
 17819  01AA3A  1001               	iorwf	btemp^0,w,c
 17820  01AA3C  B4D8               	btfsc	status,2,c
 17821  01AA3E  D00D               	goto	l7909
 17822                           
 17823                           ;stkvar	_c @ sp[(-2)+-2]
 17824  01AA40  0EFC               	movlw	-4
 17825  01AA42  006F FF8C  F001    	movff	plusw1,btemp
 17826  01AA48  0EFD               	movlw	-3
 17827  01AA4A  006F FF8C  F002    	movff	plusw1,btemp+1
 17828  01AA50  0E20               	movlw	32
 17829  01AA52  1201               	iorwf	btemp^0,f,c
 17830  01AA54  0E00               	movlw	0
 17831  01AA56  1202               	iorwf	(btemp+1)^0,f,c
 17832  01AA58  D008               	goto	l3467
 17833  01AA5A                     l7909:
 17834                           
 17835                           ;stkvar	_c @ sp[(-2)+-2]
 17836  01AA5A  0EFC               	movlw	-4
 17837  01AA5C  006F FF8C  F001    	movff	plusw1,btemp
 17838  01AA62  0EFD               	movlw	-3
 17839  01AA64  006F FF8C  F002    	movff	plusw1,btemp+1
 17840  01AA6A                     l3467:
 17841                           
 17842                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17843  01AA6A  52E5               	movf	postdec1,f,c
 17844  01AA6C  52E5               	movf	postdec1,f,c
 17845  01AA6E  52E5               	movf	postdec1,f,c
 17846  01AA70  52E5               	movf	postdec1,f,c
 17847  01AA72  0012               	return		;funcret
 17848  01AA74                     __end_of_tolower:
 17849                           	opt callstack 0
 17850                           
 17851 ;; *************** function _isupper *****************
 17852 ;; Defined at:
 17853 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 17854 ;; Parameters:    Size  Location     Type
 17855 ;;  c               2  [STACK] int 
 17856 ;; Auto vars:     Size  Location     Type
 17857 ;;		None
 17858 ;; Return value:  Size  Location     Type
 17859 ;;                  2  [STACK] int 
 17860 ;; Registers used:
 17861 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 17862 ;; Tracked objects:
 17863 ;;		On entry : 0/0
 17864 ;;		On exit  : 0/0
 17865 ;;		Unchanged: 0/0
 17866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17871 ;;Total ram usage:        0 bytes
 17872 ;; Hardware stack levels used:    1
 17873 ;; Hardware stack levels required when called:   15
 17874 ;; This function calls:
 17875 ;;		Nothing
 17876 ;; This function is called by:
 17877 ;;		_efgtoa
 17878 ;;		_xtoa
 17879 ;;		_vfpfcnvrt
 17880 ;;		_tolower
 17881 ;; This function uses a reentrant model
 17882 ;;
 17883                           
 17884                           	psect	text57
 17885  01B6DC                     __ptext57:
 17886                           	opt callstack 0
 17887  01B6DC                     _isupper:
 17888                           	opt callstack 0
 17889                           
 17890                           ;stkvar	_c @ sp[(0)+-2]
 17891                           
 17892                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17893                           ;incstack = 0
 17894 ;; hardware stack exceeded
 17895  01B6DC  0EFE               	movlw	-2
 17896  01B6DE  50E3               	movf	plusw1,w,c
 17897  01B6E0  0FBF               	addlw	191
 17898  01B6E2  6E0B               	movwf	(btemp+10)^0,c
 17899  01B6E4  0EFF               	movlw	-1
 17900  01B6E6  006F FF8C  F00C    	movff	plusw1,btemp+11
 17901  01B6EC  0EFF               	movlw	255
 17902  01B6EE  220C               	addwfc	(btemp+11)^0,f,c
 17903  01B6F0  500C               	movf	(btemp+11)^0,w,c
 17904  01B6F2  E106               	bnz	u5380
 17905  01B6F4  0E1A               	movlw	26
 17906  01B6F6  5C0B               	subwf	(btemp+10)^0,w,c
 17907  01B6F8  B0D8               	btfsc	status,0,c
 17908  01B6FA  D002               	goto	u5380
 17909  01B6FC  0E01               	movlw	1
 17910  01B6FE  D001               	goto	u5390
 17911  01B700                     u5380:
 17912  01B700  0E00               	movlw	0
 17913  01B702                     u5390:
 17914  01B702  6E01               	movwf	btemp^0,c
 17915  01B704  6A02               	clrf	(btemp+1)^0,c
 17916                           
 17917                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17918  01B706  52E5               	movf	postdec1,f,c
 17919  01B708  52E5               	movf	postdec1,f,c
 17920  01B70A  0012               	return		;funcret
 17921  01B70C                     __end_of_isupper:
 17922                           	opt callstack 0
 17923                           
 17924 ;; *************** function _strcpy *****************
 17925 ;; Defined at:
 17926 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 17927 ;; Parameters:    Size  Location     Type
 17928 ;;  dest            2  [STACK] PTR unsigned char 
 17929 ;;		 -> dbuf(80), 
 17930 ;;  src             2  [STACK] PTR const unsigned char 
 17931 ;;		 -> STR_71(4), STR_70(4), STR_67(4), STR_66(4), 
 17932 ;;		 -> dbuf(80), 
 17933 ;; Auto vars:     Size  Location     Type
 17934 ;;  d               2  [STACK] PTR unsigned char 
 17935 ;;		 -> dbuf(80), 
 17936 ;;  s               2  [STACK] PTR const unsigned char 
 17937 ;;		 -> STR_71(4), STR_70(4), STR_67(4), STR_66(4), 
 17938 ;;		 -> dbuf(80), 
 17939 ;; Return value:  Size  Location     Type
 17940 ;;                  2  [STACK] PTR unsigned char 
 17941 ;; Registers used:
 17942 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 17943 ;; Tracked objects:
 17944 ;;		On entry : 0/0
 17945 ;;		On exit  : 0/0
 17946 ;;		Unchanged: 0/0
 17947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17952 ;;Total ram usage:        0 bytes
 17953 ;; Hardware stack levels used:    1
 17954 ;; Hardware stack levels required when called:   15
 17955 ;; This function calls:
 17956 ;;		Nothing
 17957 ;; This function is called by:
 17958 ;;		_efgtoa
 17959 ;; This function uses a reentrant model
 17960 ;;
 17961                           
 17962                           	psect	text58
 17963  019FF2                     __ptext58:
 17964                           	opt callstack 0
 17965  019FF2                     _strcpy:
 17966                           	opt callstack 0
 17967                           
 17968                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17969  019FF2  52E6               	movf	postinc1,f,c
 17970  019FF4  52E6               	movf	postinc1,f,c
 17971  019FF6  52E6               	movf	postinc1,f,c
 17972  019FF8  52E6               	movf	postinc1,f,c
 17973                           
 17974                           ;stkvar	_src @ sp[(-4)+-4]
 17975                           
 17976                           ;incstack = 0
 17977 ;; hardware stack exceeded
 17978  019FFA  0EF8               	movlw	-8
 17979  019FFC  006F FF8C  F00B    	movff	plusw1,btemp+10
 17980  01A002  0EF9               	movlw	-7
 17981  01A004  006F FF8C  F00C    	movff	plusw1,btemp+11
 17982                           
 17983                           ;stkvar	_s @ sp[(-4)+2]
 17984  01A00A  0EFF               	movlw	-1
 17985  01A00C  0060  F033  FFE3   	movff	btemp+11,plusw1
 17986  01A012  0EFE               	movlw	-2
 17987  01A014  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17988                           
 17989                           ;stkvar	_dest @ sp[(-4)+-2]
 17990  01A01A  0EFA               	movlw	-6
 17991  01A01C  006F FF8C  F00B    	movff	plusw1,btemp+10
 17992  01A022  0EFB               	movlw	-5
 17993  01A024  006F FF8C  F00C    	movff	plusw1,btemp+11
 17994                           
 17995                           ;stkvar	_d @ sp[(-4)+0]
 17996  01A02A  0EFD               	movlw	-3
 17997  01A02C  0060  F033  FFE3   	movff	btemp+11,plusw1
 17998  01A032  0EFC               	movlw	-4
 17999  01A034  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18000  01A03A                     l11651:
 18001                           
 18002                           ;stkvar	_s @ sp[(-4)+2]
 18003  01A03A  50E1               	movf	fsr1l,w,c
 18004  01A03C  0FFE               	addlw	-2
 18005  01A03E  6ED9               	movwf	fsr2l,c
 18006  01A040  50E2               	movf	fsr1h,w,c
 18007  01A042  6EDA               	movwf	fsr2h,c
 18008  01A044  0EFF               	movlw	255
 18009  01A046  22DA               	addwfc	fsr2h,f,c
 18010  01A048  006F FF7C  F00B    	movff	indf2,btemp+10
 18011  01A04E  0E01               	movlw	1
 18012  01A050  26DE               	addwf	postinc2,f,c
 18013  01A052  006F FF7C  F00C    	movff	indf2,btemp+11
 18014  01A058  0E00               	movlw	0
 18015  01A05A  22DD               	addwfc	postdec2,f,c
 18016  01A05C  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 18017  01A062  0060  F033  FFF7   	movff	btemp+11,tblptrh
 18018  01A068  0E00               	movlw	low (__mediumconst shr (0+16))
 18019  01A06A  6EF8               	movwf	tblptru,c
 18020                           
 18021                           ;stkvar	_d @ sp[(-4)+0]
 18022  01A06C  50E1               	movf	fsr1l,w,c
 18023  01A06E  0FFC               	addlw	-4
 18024  01A070  6ED9               	movwf	fsr2l,c
 18025  01A072  50E2               	movf	fsr1h,w,c
 18026  01A074  6EDA               	movwf	fsr2h,c
 18027  01A076  0EFF               	movlw	255
 18028  01A078  22DA               	addwfc	fsr2h,f,c
 18029  01A07A  006F FF7C  F00B    	movff	indf2,btemp+10
 18030  01A080  0E01               	movlw	1
 18031  01A082  26DE               	addwf	postinc2,f,c
 18032  01A084  006F FF7C  F00C    	movff	indf2,btemp+11
 18033  01A08A  0E00               	movlw	0
 18034  01A08C  22DD               	addwfc	postdec2,f,c
 18035  01A08E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 18036  01A094  0060  F033  FFDA   	movff	btemp+11,fsr2h
 18037  01A09A  0E1F               	movlw	(high __ramtop+-1)
 18038  01A09C  64F7               	cpfsgt	tblptrh,c
 18039  01A09E  D003               	bra	u10697
 18040  01A0A0  0008               	tblrd		*
 18041  01A0A2  50F5               	movf	tablat,w,c
 18042  01A0A4  D007               	bra	u10690
 18043  01A0A6                     u10697:
 18044  01A0A6  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18045  01A0AC  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18046  01A0B2  50EF               	movf	indf0,w,c
 18047  01A0B4                     u10690:
 18048  01A0B4  6EDF               	movwf	indf2,c
 18049  01A0B6  50DF               	movf	indf2,w,c
 18050  01A0B8  A4D8               	btfss	status,2,c
 18051  01A0BA  D7BF               	goto	l11651
 18052                           
 18053                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 18054  01A0BC  0EF8               	movlw	248
 18055  01A0BE  26E1               	addwf	fsr1l,f,c
 18056  01A0C0  0EFF               	movlw	255
 18057  01A0C2  22E2               	addwfc	fsr1h,f,c
 18058  01A0C4  0012               	return		;funcret
 18059  01A0C6                     __end_of_strcpy:
 18060                           	opt callstack 0
 18061                           
 18062 ;; *************** function _floorf *****************
 18063 ;; Defined at:
 18064 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 18065 ;; Parameters:    Size  Location     Type
 18066 ;;  x               4  [STACK] float 
 18067 ;; Auto vars:     Size  Location     Type
 18068 ;;  u               4  [STACK] struct .
 18069 ;;  m               4  [STACK] unsigned long 
 18070 ;;  e               2  [STACK] int 
 18071 ;; Return value:  Size  Location     Type
 18072 ;;                  4  [STACK] float 
 18073 ;; Registers used:
 18074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 18075 ;; Tracked objects:
 18076 ;;		On entry : 0/0
 18077 ;;		On exit  : 0/0
 18078 ;;		Unchanged: 0/0
 18079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18084 ;;Total ram usage:        0 bytes
 18085 ;; Hardware stack levels used:    1
 18086 ;; Hardware stack levels required when called:   15
 18087 ;; This function calls:
 18088 ;;		Nothing
 18089 ;; This function is called by:
 18090 ;;		_efgtoa
 18091 ;; This function uses a reentrant model
 18092 ;;
 18093                           
 18094                           	psect	text59
 18095  01614C                     __ptext59:
 18096                           	opt callstack 0
 18097  01614C                     _floorf:
 18098                           	opt callstack 0
 18099                           
 18100                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 18101  01614C  0E0A               	movlw	10
 18102  01614E  26E1               	addwf	fsr1l,f,c
 18103  016150  0E00               	movlw	0
 18104  016152  22E2               	addwfc	fsr1h,f,c
 18105                           
 18106                           ;incstack = 0
 18107 ;; hardware stack exceeded
 18108  016154  0060  F1B0  F009   	movff	floorf@F524,btemp+8
 18109  01615A  0060  F1B4  F00A   	movff	floorf@F524+1,btemp+9
 18110  016160  0060  F1B8  F00B   	movff	floorf@F524+2,btemp+10
 18111  016166  0060  F1BC  F00C   	movff	floorf@F524+3,btemp+11
 18112                           
 18113                           ;stkvar	_u @ sp[(-10)+0]
 18114  01616C  0EF6               	movlw	-10
 18115  01616E  0060  F027  FFE3   	movff	btemp+8,plusw1
 18116  016174  0EF7               	movlw	-9
 18117  016176  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18118  01617C  0EF8               	movlw	-8
 18119  01617E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18120  016184  0EF9               	movlw	-7
 18121  016186  0060  F033  FFE3   	movff	btemp+11,plusw1
 18122                           
 18123                           ;stkvar	_x @ sp[(-10)+-4]
 18124  01618C  0EF2               	movlw	-14
 18125  01618E  006F FF8C  F009    	movff	plusw1,btemp+8
 18126  016194  0EF3               	movlw	-13
 18127  016196  006F FF8C  F00A    	movff	plusw1,btemp+9
 18128  01619C  0EF4               	movlw	-12
 18129  01619E  006F FF8C  F00B    	movff	plusw1,btemp+10
 18130  0161A4  0EF5               	movlw	-11
 18131  0161A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 18132                           
 18133                           ;stkvar	_u @ sp[(-10)+0]
 18134  0161AC  0EF6               	movlw	-10
 18135  0161AE  0060  F027  FFE3   	movff	btemp+8,plusw1
 18136  0161B4  0EF7               	movlw	-9
 18137  0161B6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18138  0161BC  0EF8               	movlw	-8
 18139  0161BE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18140  0161C4  0EF9               	movlw	-7
 18141  0161C6  0060  F033  FFE3   	movff	btemp+11,plusw1
 18142  0161CC  0E81               	movlw	129
 18143  0161CE  6E0B               	movwf	(btemp+10)^0,c
 18144  0161D0  0EFF               	movlw	255
 18145  0161D2  6E0C               	movwf	(btemp+11)^0,c
 18146                           
 18147                           ;stkvar	_u @ sp[(-10)+0]
 18148  0161D4  0EF6               	movlw	-10
 18149  0161D6  006F FF8C  F005    	movff	plusw1,btemp+4
 18150  0161DC  0EF7               	movlw	-9
 18151  0161DE  006F FF8C  F006    	movff	plusw1,btemp+5
 18152  0161E4  0EF8               	movlw	-8
 18153  0161E6  006F FF8C  F007    	movff	plusw1,btemp+6
 18154  0161EC  0EF9               	movlw	-7
 18155  0161EE  006F FF8C  F008    	movff	plusw1,btemp+7
 18156  0161F4  0E18               	movlw	24
 18157  0161F6  D005               	goto	u6010
 18158  0161F8                     u6015:
 18159  0161F8  90D8               	bcf	status,0,c
 18160  0161FA  3208               	rrcf	(btemp+7)^0,f,c
 18161  0161FC  3207               	rrcf	(btemp+6)^0,f,c
 18162  0161FE  3206               	rrcf	(btemp+5)^0,f,c
 18163  016200  3205               	rrcf	(btemp+4)^0,f,c
 18164  016202                     u6010:
 18165  016202  2EE8               	decfsz	wreg,f,c
 18166  016204  D7F9               	goto	u6015
 18167  016206  0060  F014  F009   	movff	btemp+4,btemp+8
 18168  01620C  0060  F018  F00A   	movff	btemp+5,btemp+9
 18169  016212  0EFF               	movlw	255
 18170  016214  1609               	andwf	(btemp+8)^0,f,c
 18171  016216  0E00               	movlw	0
 18172  016218  160A               	andwf	(btemp+9)^0,f,c
 18173  01621A  500B               	movf	(btemp+10)^0,w,c
 18174  01621C  2609               	addwf	(btemp+8)^0,f,c
 18175  01621E  500C               	movf	(btemp+11)^0,w,c
 18176  016220  220A               	addwfc	(btemp+9)^0,f,c
 18177                           
 18178                           ;stkvar	_e @ sp[(-10)+8]
 18179  016222  0EFE               	movlw	-2
 18180  016224  0060  F027  FFE3   	movff	btemp+8,plusw1
 18181  01622A  0EFF               	movlw	-1
 18182  01622C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18183                           
 18184                           ;stkvar	_e @ sp[(-10)+8]
 18185  016232  0EFF               	movlw	-1
 18186  016234  BEE3               	btfsc	plusw1,7,c
 18187  016236  D019               	goto	l7923
 18188  016238  0EFF               	movlw	-1
 18189  01623A  50E3               	movf	plusw1,w,c
 18190  01623C  E108               	bnz	u6020
 18191  01623E  0EFE               	movlw	-2
 18192  016240  006F FF8C  F001    	movff	plusw1,btemp
 18193  016246  0E17               	movlw	23
 18194  016248  5E01               	subwf	btemp^0,f,c
 18195  01624A  A0D8               	btfss	status,0,c
 18196  01624C  D00E               	goto	l7923
 18197  01624E                     u6020:
 18198                           
 18199                           ;stkvar	_x @ sp[(-10)+-4]
 18200  01624E  0EF2               	movlw	-14
 18201  016250  006F FF8C  F001    	movff	plusw1,btemp
 18202  016256  0EF3               	movlw	-13
 18203  016258  006F FF8C  F002    	movff	plusw1,btemp+1
 18204  01625E  0EF4               	movlw	-12
 18205  016260  006F FF8C  F003    	movff	plusw1,btemp+2
 18206  016266  0EF5               	movlw	-11
 18207  016268  D11F               	goto	L20
 18208  01626A                     l7923:
 18209                           
 18210                           ;stkvar	_e @ sp[(-10)+8]
 18211  01626A  0EFF               	movlw	-1
 18212  01626C  BEE3               	btfsc	plusw1,7,c
 18213  01626E  D0B4               	goto	l7939
 18214                           
 18215                           ;stkvar	_e @ sp[(-10)+8]
 18216  016270  0EFE               	movlw	-2
 18217  016272  006F FF8C  F00C    	movff	plusw1,btemp+11
 18218  016278  0EFF               	movlw	255
 18219  01627A  6E05               	movwf	(btemp+4)^0,c
 18220  01627C  0EFF               	movlw	255
 18221  01627E  6E06               	movwf	(btemp+5)^0,c
 18222  016280  0E7F               	movlw	127
 18223  016282  6E07               	movwf	(btemp+6)^0,c
 18224  016284  0E00               	movlw	0
 18225  016286  6E08               	movwf	(btemp+7)^0,c
 18226  016288                     u6045:
 18227  016288  660C               	tstfsz	(btemp+11)^0,c
 18228  01628A  D001               	goto	u6046
 18229  01628C  D007               	goto	u6047
 18230  01628E                     u6046:
 18231  01628E  3408               	rlcf	(btemp+7)^0,w,c
 18232  016290  3208               	rrcf	(btemp+7)^0,f,c
 18233  016292  3207               	rrcf	(btemp+6)^0,f,c
 18234  016294  3206               	rrcf	(btemp+5)^0,f,c
 18235  016296  3205               	rrcf	(btemp+4)^0,f,c
 18236  016298  2E0C               	decfsz	(btemp+11)^0,f,c
 18237  01629A  D7F6               	goto	u6045
 18238  01629C                     u6047:
 18239                           
 18240                           ;stkvar	_m @ sp[(-10)+4]
 18241  01629C  0EFA               	movlw	-6
 18242  01629E  0060  F017  FFE3   	movff	btemp+4,plusw1
 18243  0162A4  0EFB               	movlw	-5
 18244  0162A6  0060  F01B  FFE3   	movff	btemp+5,plusw1
 18245  0162AC  0EFC               	movlw	-4
 18246  0162AE  0060  F01F  FFE3   	movff	btemp+6,plusw1
 18247  0162B4  0EFD               	movlw	-3
 18248  0162B6  0060  F023  FFE3   	movff	btemp+7,plusw1
 18249                           
 18250                           ;stkvar	_m @ sp[(-10)+4]
 18251                           ;stkvar	_u @ sp[(-10)+0]
 18252  0162BC  0EF6               	movlw	-10
 18253  0162BE  006F FF8C  F009    	movff	plusw1,btemp+8
 18254  0162C4  0EF7               	movlw	-9
 18255  0162C6  006F FF8C  F00A    	movff	plusw1,btemp+9
 18256  0162CC  0EF8               	movlw	-8
 18257  0162CE  006F FF8C  F00B    	movff	plusw1,btemp+10
 18258  0162D4  0EF9               	movlw	-7
 18259  0162D6  006F FF8C  F00C    	movff	plusw1,btemp+11
 18260  0162DC  0EFA               	movlw	-6
 18261  0162DE  50E3               	movf	plusw1,w,c
 18262  0162E0  1609               	andwf	(btemp+8)^0,f,c
 18263  0162E2  0EFB               	movlw	-5
 18264  0162E4  50E3               	movf	plusw1,w,c
 18265  0162E6  160A               	andwf	(btemp+9)^0,f,c
 18266  0162E8  0EFC               	movlw	-4
 18267  0162EA  50E3               	movf	plusw1,w,c
 18268  0162EC  160B               	andwf	(btemp+10)^0,f,c
 18269  0162EE  0EFD               	movlw	-3
 18270  0162F0  50E3               	movf	plusw1,w,c
 18271  0162F2  160C               	andwf	(btemp+11)^0,f,c
 18272  0162F4  5009               	movf	(btemp+8)^0,w,c
 18273  0162F6  100A               	iorwf	(btemp+9)^0,w,c
 18274  0162F8  100B               	iorwf	(btemp+10)^0,w,c
 18275  0162FA  100C               	iorwf	(btemp+11)^0,w,c
 18276  0162FC  B4D8               	btfsc	status,2,c
 18277  0162FE  D7A7               	goto	u6020
 18278                           
 18279                           ;stkvar	_u @ sp[(-10)+0]
 18280  016300  0EF6               	movlw	-10
 18281  016302  006F FF8C  F009    	movff	plusw1,btemp+8
 18282  016308  0EF7               	movlw	-9
 18283  01630A  006F FF8C  F00A    	movff	plusw1,btemp+9
 18284  016310  0EF8               	movlw	-8
 18285  016312  006F FF8C  F00B    	movff	plusw1,btemp+10
 18286  016318  0EF9               	movlw	-7
 18287  01631A  006F FF8C  F00C    	movff	plusw1,btemp+11
 18288  016320  0E20               	movlw	32
 18289  016322  D005               	goto	u6060
 18290  016324                     u6065:
 18291  016324  90D8               	bcf	status,0,c
 18292  016326  320C               	rrcf	(btemp+11)^0,f,c
 18293  016328  320B               	rrcf	(btemp+10)^0,f,c
 18294  01632A  320A               	rrcf	(btemp+9)^0,f,c
 18295  01632C  3209               	rrcf	(btemp+8)^0,f,c
 18296  01632E                     u6060:
 18297  01632E  2EE8               	decfsz	wreg,f,c
 18298  016330  D7F9               	goto	u6065
 18299  016332  5009               	movf	(btemp+8)^0,w,c
 18300  016334  B4D8               	btfsc	status,2,c
 18301  016336  D028               	goto	l7937
 18302                           
 18303                           ;stkvar	_m @ sp[(-10)+4]
 18304                           ;stkvar	_u @ sp[(-10)+0]
 18305  016338  0EF6               	movlw	-10
 18306  01633A  50E3               	movf	plusw1,w,c
 18307  01633C  6E01               	movwf	btemp^0,c
 18308  01633E  0EFA               	movlw	-6
 18309  016340  50E3               	movf	plusw1,w,c
 18310  016342  2601               	addwf	btemp^0,f,c
 18311  016344  0EF6               	movlw	-10
 18312  016346  0060  F007  FFE3   	movff	btemp,plusw1
 18313  01634C  0EF7               	movlw	-9
 18314  01634E  50E3               	movf	plusw1,w,c
 18315  016350  6E01               	movwf	btemp^0,c
 18316  016352  0EFB               	movlw	-5
 18317  016354  50E3               	movf	plusw1,w,c
 18318  016356  2201               	addwfc	btemp^0,f,c
 18319  016358  0EF7               	movlw	-9
 18320  01635A  0060  F007  FFE3   	movff	btemp,plusw1
 18321  016360  0EF8               	movlw	-8
 18322  016362  50E3               	movf	plusw1,w,c
 18323  016364  6E01               	movwf	btemp^0,c
 18324  016366  0EFC               	movlw	-4
 18325  016368  50E3               	movf	plusw1,w,c
 18326  01636A  2201               	addwfc	btemp^0,f,c
 18327  01636C  0EF8               	movlw	-8
 18328  01636E  0060  F007  FFE3   	movff	btemp,plusw1
 18329  016374  0EF9               	movlw	-7
 18330  016376  50E3               	movf	plusw1,w,c
 18331  016378  6E01               	movwf	btemp^0,c
 18332  01637A  0EFD               	movlw	-3
 18333  01637C  50E3               	movf	plusw1,w,c
 18334  01637E  2201               	addwfc	btemp^0,f,c
 18335  016380  0EF9               	movlw	-7
 18336  016382  0060  F007  FFE3   	movff	btemp,plusw1
 18337  016388                     l7937:
 18338                           
 18339                           ;stkvar	_m @ sp[(-10)+4]
 18340  016388  0EFA               	movlw	-6
 18341  01638A  006F FF8C  F009    	movff	plusw1,btemp+8
 18342  016390  0EFB               	movlw	-5
 18343  016392  006F FF8C  F00A    	movff	plusw1,btemp+9
 18344  016398  0EFC               	movlw	-4
 18345  01639A  006F FF8C  F00B    	movff	plusw1,btemp+10
 18346  0163A0  0EFD               	movlw	-3
 18347  0163A2  006F FF8C  F00C    	movff	plusw1,btemp+11
 18348  0163A8  1C09               	comf	(btemp+8)^0,w,c
 18349  0163AA  6E05               	movwf	(btemp+4)^0,c
 18350  0163AC  1C0A               	comf	(btemp+9)^0,w,c
 18351  0163AE  6E06               	movwf	(btemp+5)^0,c
 18352  0163B0  1C0B               	comf	(btemp+10)^0,w,c
 18353  0163B2  6E07               	movwf	(btemp+6)^0,c
 18354  0163B4  1C0C               	comf	(btemp+11)^0,w,c
 18355  0163B6  6E08               	movwf	(btemp+7)^0,c
 18356                           
 18357                           ;stkvar	_u @ sp[(-10)+0]
 18358  0163B8  50E1               	movf	fsr1l,w,c
 18359  0163BA  0FF6               	addlw	-10
 18360  0163BC  6ED9               	movwf	fsr2l,c
 18361  0163BE  50E2               	movf	fsr1h,w,c
 18362  0163C0  6EDA               	movwf	fsr2h,c
 18363  0163C2  0EFF               	movlw	255
 18364  0163C4  22DA               	addwfc	fsr2h,f,c
 18365  0163C6  5005               	movf	(btemp+4)^0,w,c
 18366  0163C8  16DE               	andwf	postinc2,f,c
 18367  0163CA  5006               	movf	(btemp+5)^0,w,c
 18368  0163CC  16DE               	andwf	postinc2,f,c
 18369  0163CE  5007               	movf	(btemp+6)^0,w,c
 18370  0163D0  16DE               	andwf	postinc2,f,c
 18371  0163D2  5008               	movf	(btemp+7)^0,w,c
 18372  0163D4  16DE               	andwf	postinc2,f,c
 18373  0163D6  D05B               	goto	l7947
 18374  0163D8                     l7939:
 18375                           
 18376                           ;stkvar	_u @ sp[(-10)+0]
 18377  0163D8  0EF6               	movlw	-10
 18378  0163DA  006F FF8C  F009    	movff	plusw1,btemp+8
 18379  0163E0  0EF7               	movlw	-9
 18380  0163E2  006F FF8C  F00A    	movff	plusw1,btemp+9
 18381  0163E8  0EF8               	movlw	-8
 18382  0163EA  006F FF8C  F00B    	movff	plusw1,btemp+10
 18383  0163F0  0EF9               	movlw	-7
 18384  0163F2  006F FF8C  F00C    	movff	plusw1,btemp+11
 18385  0163F8  0E20               	movlw	32
 18386  0163FA  D005               	goto	u6080
 18387  0163FC                     u6085:
 18388  0163FC  90D8               	bcf	status,0,c
 18389  0163FE  320C               	rrcf	(btemp+11)^0,f,c
 18390  016400  320B               	rrcf	(btemp+10)^0,f,c
 18391  016402  320A               	rrcf	(btemp+9)^0,f,c
 18392  016404  3209               	rrcf	(btemp+8)^0,f,c
 18393  016406                     u6080:
 18394  016406  2EE8               	decfsz	wreg,f,c
 18395  016408  D7F9               	goto	u6085
 18396  01640A  6609               	tstfsz	(btemp+8)^0,c
 18397  01640C  D009               	goto	l7943
 18398                           
 18399                           ;stkvar	_u @ sp[(-10)+0]
 18400  01640E  0EF6               	movlw	-10
 18401  016410  6AE3               	clrf	plusw1,c
 18402  016412  0EF7               	movlw	-9
 18403  016414  6AE3               	clrf	plusw1,c
 18404  016416  0EF8               	movlw	-8
 18405  016418  6AE3               	clrf	plusw1,c
 18406  01641A  0EF9               	movlw	-7
 18407  01641C  6AE3               	clrf	plusw1,c
 18408  01641E  D037               	goto	l7947
 18409  016420                     l7943:
 18410                           
 18411                           ;stkvar	_u @ sp[(-10)+0]
 18412  016420  0EF6               	movlw	-10
 18413  016422  006F FF8C  F009    	movff	plusw1,btemp+8
 18414  016428  0EF7               	movlw	-9
 18415  01642A  006F FF8C  F00A    	movff	plusw1,btemp+9
 18416  016430  0EF8               	movlw	-8
 18417  016432  006F FF8C  F00B    	movff	plusw1,btemp+10
 18418  016438  0EF9               	movlw	-7
 18419  01643A  006F FF8C  F00C    	movff	plusw1,btemp+11
 18420  016440  90D8               	bcf	status,0,c
 18421  016442  3409               	rlcf	(btemp+8)^0,w,c
 18422  016444  6E05               	movwf	(btemp+4)^0,c
 18423  016446  340A               	rlcf	(btemp+9)^0,w,c
 18424  016448  6E06               	movwf	(btemp+5)^0,c
 18425  01644A  340B               	rlcf	(btemp+10)^0,w,c
 18426  01644C  6E07               	movwf	(btemp+6)^0,c
 18427  01644E  340C               	rlcf	(btemp+11)^0,w,c
 18428  016450  6E08               	movwf	(btemp+7)^0,c
 18429  016452  5005               	movf	(btemp+4)^0,w,c
 18430  016454  1006               	iorwf	(btemp+5)^0,w,c
 18431  016456  1007               	iorwf	(btemp+6)^0,w,c
 18432  016458  1008               	iorwf	(btemp+7)^0,w,c
 18433  01645A  B4D8               	btfsc	status,2,c
 18434  01645C  D018               	goto	l7947
 18435  01645E  0E00               	movlw	0
 18436  016460  6E09               	movwf	(btemp+8)^0,c
 18437  016462  0E00               	movlw	0
 18438  016464  6E0A               	movwf	(btemp+9)^0,c
 18439  016466  0E80               	movlw	128
 18440  016468  6E0B               	movwf	(btemp+10)^0,c
 18441  01646A  0EBF               	movlw	191
 18442  01646C  6E0C               	movwf	(btemp+11)^0,c
 18443                           
 18444                           ;stkvar	_u @ sp[(-10)+0]
 18445  01646E  0EF6               	movlw	-10
 18446  016470  0060  F027  FFE3   	movff	btemp+8,plusw1
 18447  016476  0EF7               	movlw	-9
 18448  016478  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18449  01647E  0EF8               	movlw	-8
 18450  016480  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18451  016486  0EF9               	movlw	-7
 18452  016488  0060  F033  FFE3   	movff	btemp+11,plusw1
 18453  01648E                     l7947:
 18454                           
 18455                           ;stkvar	_u @ sp[(-10)+0]
 18456  01648E  0EF6               	movlw	-10
 18457  016490  006F FF8C  F001    	movff	plusw1,btemp
 18458  016496  0EF7               	movlw	-9
 18459  016498  006F FF8C  F002    	movff	plusw1,btemp+1
 18460  01649E  0EF8               	movlw	-8
 18461  0164A0  006F FF8C  F003    	movff	plusw1,btemp+2
 18462  0164A6  0EF9               	movlw	-7
 18463  0164A8                     L20:
 18464  0164A8  006F FF8C  F004    	movff	plusw1,btemp+3
 18465                           
 18466                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18467  0164AE  0EF2               	movlw	242
 18468  0164B0  26E1               	addwf	fsr1l,f,c
 18469  0164B2  0EFF               	movlw	255
 18470  0164B4  22E2               	addwfc	fsr1h,f,c
 18471  0164B6  0012               	return		;funcret
 18472  0164B8                     __end_of_floorf:
 18473                           	opt callstack 0
 18474                           
 18475 ;; *************** function ___fpclassifyf *****************
 18476 ;; Defined at:
 18477 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 18478 ;; Parameters:    Size  Location     Type
 18479 ;;  x               4  [STACK] float 
 18480 ;; Auto vars:     Size  Location     Type
 18481 ;;  u               4  [STACK] struct .
 18482 ;;  e               2  [STACK] int 
 18483 ;; Return value:  Size  Location     Type
 18484 ;;                  2  [STACK] int 
 18485 ;; Registers used:
 18486 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 18487 ;; Tracked objects:
 18488 ;;		On entry : 0/0
 18489 ;;		On exit  : 0/0
 18490 ;;		Unchanged: 0/0
 18491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18496 ;;Total ram usage:        0 bytes
 18497 ;; Hardware stack levels used:    1
 18498 ;; Hardware stack levels required when called:   15
 18499 ;; This function calls:
 18500 ;;		Nothing
 18501 ;; This function is called by:
 18502 ;;		_efgtoa
 18503 ;; This function uses a reentrant model
 18504 ;;
 18505                           
 18506                           	psect	text60
 18507  0186C6                     __ptext60:
 18508                           	opt callstack 0
 18509  0186C6                     ___fpclassifyf:
 18510                           	opt callstack 0
 18511                           
 18512                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18513  0186C6  0E06               	movlw	6
 18514  0186C8  26E1               	addwf	fsr1l,f,c
 18515  0186CA  0E00               	movlw	0
 18516  0186CC  22E2               	addwfc	fsr1h,f,c
 18517                           
 18518                           ;incstack = 0
 18519 ;; hardware stack exceeded
 18520  0186CE  0060  F1D0  F009   	movff	___fpclassifyf@F463,btemp+8
 18521  0186D4  0060  F1D4  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 18522  0186DA  0060  F1D8  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 18523  0186E0  0060  F1DC  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 18524                           
 18525                           ;stkvar	_u @ sp[(-6)+0]
 18526  0186E6  0EFA               	movlw	-6
 18527  0186E8  0060  F027  FFE3   	movff	btemp+8,plusw1
 18528  0186EE  0EFB               	movlw	-5
 18529  0186F0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18530  0186F6  0EFC               	movlw	-4
 18531  0186F8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18532  0186FE  0EFD               	movlw	-3
 18533  018700  0060  F033  FFE3   	movff	btemp+11,plusw1
 18534                           
 18535                           ;stkvar	_x @ sp[(-6)+-4]
 18536  018706  0EF6               	movlw	-10
 18537  018708  006F FF8C  F009    	movff	plusw1,btemp+8
 18538  01870E  0EF7               	movlw	-9
 18539  018710  006F FF8C  F00A    	movff	plusw1,btemp+9
 18540  018716  0EF8               	movlw	-8
 18541  018718  006F FF8C  F00B    	movff	plusw1,btemp+10
 18542  01871E  0EF9               	movlw	-7
 18543  018720  006F FF8C  F00C    	movff	plusw1,btemp+11
 18544                           
 18545                           ;stkvar	_u @ sp[(-6)+0]
 18546  018726  0EFA               	movlw	-6
 18547  018728  0060  F027  FFE3   	movff	btemp+8,plusw1
 18548  01872E  0EFB               	movlw	-5
 18549  018730  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18550  018736  0EFC               	movlw	-4
 18551  018738  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18552  01873E  0EFD               	movlw	-3
 18553  018740  0060  F033  FFE3   	movff	btemp+11,plusw1
 18554                           
 18555                           ;stkvar	_u @ sp[(-6)+0]
 18556  018746  0EFA               	movlw	-6
 18557  018748  006F FF8C  F009    	movff	plusw1,btemp+8
 18558  01874E  0EFB               	movlw	-5
 18559  018750  006F FF8C  F00A    	movff	plusw1,btemp+9
 18560  018756  0EFC               	movlw	-4
 18561  018758  006F FF8C  F00B    	movff	plusw1,btemp+10
 18562  01875E  0EFD               	movlw	-3
 18563  018760  006F FF8C  F00C    	movff	plusw1,btemp+11
 18564  018766  0E18               	movlw	24
 18565  018768  D005               	goto	u5890
 18566  01876A                     u5895:
 18567  01876A  90D8               	bcf	status,0,c
 18568  01876C  320C               	rrcf	(btemp+11)^0,f,c
 18569  01876E  320B               	rrcf	(btemp+10)^0,f,c
 18570  018770  320A               	rrcf	(btemp+9)^0,f,c
 18571  018772  3209               	rrcf	(btemp+8)^0,f,c
 18572  018774                     u5890:
 18573  018774  2EE8               	decfsz	wreg,f,c
 18574  018776  D7F9               	goto	u5895
 18575  018778  0060  F024  F007   	movff	btemp+8,btemp+6
 18576  01877E  0060  F028  F008   	movff	btemp+9,btemp+7
 18577  018784  0EFF               	movlw	255
 18578  018786  1607               	andwf	(btemp+6)^0,f,c
 18579  018788  0E00               	movlw	0
 18580  01878A  1608               	andwf	(btemp+7)^0,f,c
 18581                           
 18582                           ;stkvar	_e @ sp[(-6)+4]
 18583  01878C  0EFE               	movlw	-2
 18584  01878E  0060  F01F  FFE3   	movff	btemp+6,plusw1
 18585  018794  0EFF               	movlw	-1
 18586  018796  0060  F023  FFE3   	movff	btemp+7,plusw1
 18587                           
 18588                           ;stkvar	_e @ sp[(-6)+4]
 18589  01879C  0EFE               	movlw	-2
 18590  01879E  006F FF8C  F001    	movff	plusw1,btemp
 18591  0187A4  0EFF               	movlw	-1
 18592  0187A6  50E3               	movf	plusw1,w,c
 18593  0187A8  1001               	iorwf	btemp^0,w,c
 18594  0187AA  A4D8               	btfss	status,2,c
 18595  0187AC  D023               	goto	l7885
 18596                           
 18597                           ;stkvar	_u @ sp[(-6)+0]
 18598  0187AE  0EFA               	movlw	-6
 18599  0187B0  006F FF8C  F009    	movff	plusw1,btemp+8
 18600  0187B6  0EFB               	movlw	-5
 18601  0187B8  006F FF8C  F00A    	movff	plusw1,btemp+9
 18602  0187BE  0EFC               	movlw	-4
 18603  0187C0  006F FF8C  F00B    	movff	plusw1,btemp+10
 18604  0187C6  0EFD               	movlw	-3
 18605  0187C8  006F FF8C  F00C    	movff	plusw1,btemp+11
 18606  0187CE  90D8               	bcf	status,0,c
 18607  0187D0  3409               	rlcf	(btemp+8)^0,w,c
 18608  0187D2  6E05               	movwf	(btemp+4)^0,c
 18609  0187D4  340A               	rlcf	(btemp+9)^0,w,c
 18610  0187D6  6E06               	movwf	(btemp+5)^0,c
 18611  0187D8  340B               	rlcf	(btemp+10)^0,w,c
 18612  0187DA  6E07               	movwf	(btemp+6)^0,c
 18613  0187DC  340C               	rlcf	(btemp+11)^0,w,c
 18614  0187DE  6E08               	movwf	(btemp+7)^0,c
 18615  0187E0  5005               	movf	(btemp+4)^0,w,c
 18616  0187E2  1006               	iorwf	(btemp+5)^0,w,c
 18617  0187E4  1007               	iorwf	(btemp+6)^0,w,c
 18618  0187E6  1008               	iorwf	(btemp+7)^0,w,c
 18619  0187E8  A4D8               	btfss	status,2,c
 18620  0187EA  D002               	goto	l7881
 18621  0187EC  0E02               	movlw	2
 18622  0187EE  D02E               	goto	L21
 18623  0187F0                     l7881:
 18624  0187F0  0E03               	movlw	3
 18625  0187F2  D02C               	goto	L21
 18626  0187F4                     l7885:
 18627                           
 18628                           ;stkvar	_e @ sp[(-6)+4]
 18629  0187F4  0EFE               	movlw	-2
 18630  0187F6  28E3               	incf	plusw1,w,c
 18631  0187F8  E128               	bnz	l7891
 18632  0187FA  0EFF               	movlw	-1
 18633  0187FC  50E3               	movf	plusw1,w,c
 18634  0187FE  A4D8               	btfss	status,2,c
 18635  018800  D024               	goto	l7891
 18636                           
 18637                           ;stkvar	_u @ sp[(-6)+0]
 18638  018802  0EFA               	movlw	-6
 18639  018804  006F FF8C  F009    	movff	plusw1,btemp+8
 18640  01880A  0EFB               	movlw	-5
 18641  01880C  006F FF8C  F00A    	movff	plusw1,btemp+9
 18642  018812  0EFC               	movlw	-4
 18643  018814  006F FF8C  F00B    	movff	plusw1,btemp+10
 18644  01881A  0EFD               	movlw	-3
 18645  01881C  006F FF8C  F00C    	movff	plusw1,btemp+11
 18646  018822  0E09               	movlw	9
 18647  018824                     u5935:
 18648  018824  90D8               	bcf	status,0,c
 18649  018826  3609               	rlcf	(btemp+8)^0,f,c
 18650  018828  360A               	rlcf	(btemp+9)^0,f,c
 18651  01882A  360B               	rlcf	(btemp+10)^0,f,c
 18652  01882C  360C               	rlcf	(btemp+11)^0,f,c
 18653  01882E  2EE8               	decfsz	wreg,f,c
 18654  018830  D7F9               	goto	u5935
 18655  018832  5009               	movf	(btemp+8)^0,w,c
 18656  018834  100A               	iorwf	(btemp+9)^0,w,c
 18657  018836  100B               	iorwf	(btemp+10)^0,w,c
 18658  018838  100C               	iorwf	(btemp+11)^0,w,c
 18659  01883A  A4D8               	btfss	status,2,c
 18660  01883C  D002               	goto	u5940
 18661  01883E  0E01               	movlw	1
 18662  018840  D001               	goto	u5950
 18663  018842                     u5940:
 18664  018842  0E00               	movlw	0
 18665  018844                     u5950:
 18666  018844  6E01               	movwf	btemp^0,c
 18667  018846  6A02               	clrf	(btemp+1)^0,c
 18668  018848  D004               	goto	l3077
 18669  01884A                     l7891:
 18670  01884A  0E04               	movlw	4
 18671  01884C                     L21:
 18672  01884C  6E01               	movwf	btemp^0,c
 18673  01884E  0E00               	movlw	0
 18674  018850  6E02               	movwf	(btemp+1)^0,c
 18675  018852                     l3077:
 18676                           
 18677                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 18678  018852  0EF6               	movlw	246
 18679  018854  26E1               	addwf	fsr1l,f,c
 18680  018856  0EFF               	movlw	255
 18681  018858  22E2               	addwfc	fsr1h,f,c
 18682  01885A  0012               	return		;funcret
 18683  01885C                     __end_of___fpclassifyf:
 18684                           	opt callstack 0
 18685                           
 18686 ;; *************** function ___fltol *****************
 18687 ;; Defined at:
 18688 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 18689 ;; Parameters:    Size  Location     Type
 18690 ;;  f1              4  [STACK] int 
 18691 ;; Auto vars:     Size  Location     Type
 18692 ;;  exp1            1  [STACK] unsigned char 
 18693 ;;  sign1           1  [STACK] unsigned char 
 18694 ;; Return value:  Size  Location     Type
 18695 ;;                  4  [STACK] long 
 18696 ;; Registers used:
 18697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 18698 ;; Tracked objects:
 18699 ;;		On entry : 0/0
 18700 ;;		On exit  : 0/0
 18701 ;;		Unchanged: 0/0
 18702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18707 ;;Total ram usage:        0 bytes
 18708 ;; Hardware stack levels used:    1
 18709 ;; Hardware stack levels required when called:   15
 18710 ;; This function calls:
 18711 ;;		Nothing
 18712 ;; This function is called by:
 18713 ;;		_main
 18714 ;;		_calc_bsoc
 18715 ;;		_init_bsoc
 18716 ;;		_Volts_to_SOC
 18717 ;;		_efgtoa
 18718 ;; This function uses a reentrant model
 18719 ;;
 18720                           
 18721                           	psect	text61
 18722  018B62                     __ptext61:
 18723                           	opt callstack 0
 18724  018B62                     ___fltol:
 18725                           	opt callstack 0
 18726                           
 18727                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18728  018B62  52E6               	movf	postinc1,f,c
 18729  018B64  52E6               	movf	postinc1,f,c
 18730                           
 18731                           ;stkvar	_f1 @ sp[(-2)+-4]
 18732                           
 18733                           ;incstack = 0
 18734 ;; hardware stack exceeded
 18735  018B66  0EFA               	movlw	-6
 18736  018B68  006F FF8C  F009    	movff	plusw1,btemp+8
 18737  018B6E  0EFB               	movlw	-5
 18738  018B70  006F FF8C  F00A    	movff	plusw1,btemp+9
 18739  018B76  0EFC               	movlw	-4
 18740  018B78  006F FF8C  F00B    	movff	plusw1,btemp+10
 18741  018B7E  0EFD               	movlw	-3
 18742  018B80  006F FF8C  F00C    	movff	plusw1,btemp+11
 18743  018B86  0E18               	movlw	24
 18744  018B88  D005               	goto	u7100
 18745  018B8A                     u7105:
 18746  018B8A  90D8               	bcf	status,0,c
 18747  018B8C  320C               	rrcf	(btemp+11)^0,f,c
 18748  018B8E  320B               	rrcf	(btemp+10)^0,f,c
 18749  018B90  320A               	rrcf	(btemp+9)^0,f,c
 18750  018B92  3209               	rrcf	(btemp+8)^0,f,c
 18751  018B94                     u7100:
 18752  018B94  2EE8               	decfsz	wreg,f,c
 18753  018B96  D7F9               	goto	u7105
 18754                           
 18755                           ;stkvar	_exp1 @ sp[(-2)+0]
 18756  018B98  0EFE               	movlw	-2
 18757  018B9A  0060  F027  FFE3   	movff	btemp+8,plusw1
 18758  018BA0  0EFE               	movlw	-2
 18759  018BA2  50E3               	movf	plusw1,w,c
 18760  018BA4  A4D8               	btfss	status,2,c
 18761  018BA6  D006               	goto	l8511
 18762  018BA8                     u7110:
 18763  018BA8  0E00               	movlw	0
 18764  018BAA  6E01               	movwf	btemp^0,c
 18765  018BAC  6A02               	clrf	(btemp+1)^0,c
 18766  018BAE  6A03               	clrf	(btemp+2)^0,c
 18767  018BB0  6A04               	clrf	(btemp+3)^0,c
 18768  018BB2  D08B               	goto	l2693
 18769  018BB4                     l8511:
 18770                           
 18771                           ;stkvar	_f1 @ sp[(-2)+-4]
 18772  018BB4  0EFA               	movlw	-6
 18773  018BB6  006F FF8C  F009    	movff	plusw1,btemp+8
 18774  018BBC  0EFB               	movlw	-5
 18775  018BBE  006F FF8C  F00A    	movff	plusw1,btemp+9
 18776  018BC4  0EFC               	movlw	-4
 18777  018BC6  006F FF8C  F00B    	movff	plusw1,btemp+10
 18778  018BCC  0EFD               	movlw	-3
 18779  018BCE  006F FF8C  F00C    	movff	plusw1,btemp+11
 18780  018BD4  0E20               	movlw	32
 18781  018BD6  D005               	goto	u7120
 18782  018BD8                     u7125:
 18783  018BD8  90D8               	bcf	status,0,c
 18784  018BDA  320C               	rrcf	(btemp+11)^0,f,c
 18785  018BDC  320B               	rrcf	(btemp+10)^0,f,c
 18786  018BDE  320A               	rrcf	(btemp+9)^0,f,c
 18787  018BE0  3209               	rrcf	(btemp+8)^0,f,c
 18788  018BE2                     u7120:
 18789  018BE2  2EE8               	decfsz	wreg,f,c
 18790  018BE4  D7F9               	goto	u7125
 18791                           
 18792                           ;stkvar	_sign1 @ sp[(-2)+1]
 18793  018BE6  0EFF               	movlw	-1
 18794  018BE8  0060  F027  FFE3   	movff	btemp+8,plusw1
 18795                           
 18796                           ;stkvar	_f1 @ sp[(-2)+-4]
 18797  018BEE  0EFC               	movlw	-4
 18798  018BF0  8EE3               	bsf	plusw1,7,c
 18799                           
 18800                           ;stkvar	_f1 @ sp[(-2)+-4]
 18801  018BF2  50E1               	movf	fsr1l,w,c
 18802  018BF4  0FFA               	addlw	-6
 18803  018BF6  6ED9               	movwf	fsr2l,c
 18804  018BF8  50E2               	movf	fsr1h,w,c
 18805  018BFA  6EDA               	movwf	fsr2h,c
 18806  018BFC  0EFF               	movlw	255
 18807  018BFE  22DA               	addwfc	fsr2h,f,c
 18808  018C00  0EFF               	movlw	255
 18809  018C02  16DE               	andwf	postinc2,f,c
 18810  018C04  0EFF               	movlw	255
 18811  018C06  16DE               	andwf	postinc2,f,c
 18812  018C08  0EFF               	movlw	255
 18813  018C0A  16DE               	andwf	postinc2,f,c
 18814  018C0C  0E00               	movlw	0
 18815  018C0E  16DE               	andwf	postinc2,f,c
 18816                           
 18817                           ;stkvar	_exp1 @ sp[(-2)+0]
 18818  018C10  0EFE               	movlw	-2
 18819  018C12  006F FF8C  F001    	movff	plusw1,btemp
 18820  018C18  0E96               	movlw	150
 18821  018C1A  5E01               	subwf	btemp^0,f,c
 18822  018C1C  0EFE               	movlw	-2
 18823  018C1E  0060  F007  FFE3   	movff	btemp,plusw1
 18824                           
 18825                           ;stkvar	_exp1 @ sp[(-2)+0]
 18826  018C24  0EFE               	movlw	-2
 18827  018C26  AEE3               	btfss	plusw1,7,c
 18828  018C28  D014               	goto	l8529
 18829                           
 18830                           ;stkvar	_exp1 @ sp[(-2)+0]
 18831  018C2A  0EFE               	movlw	-2
 18832  018C2C  50E3               	movf	plusw1,w,c
 18833  018C2E  0A80               	xorlw	128
 18834  018C30  0F97               	addlw	151
 18835  018C32  A0D8               	btfss	status,0,c
 18836  018C34  D7B9               	goto	u7110
 18837  018C36                     l8527:
 18838                           
 18839                           ;stkvar	_f1 @ sp[(-2)+-4]
 18840  018C36  90D8               	bcf	status,0,c
 18841  018C38  0EFD               	movlw	-3
 18842  018C3A  32E3               	rrcf	plusw1,f,c
 18843  018C3C  0EFC               	movlw	-4
 18844  018C3E  32E3               	rrcf	plusw1,f,c
 18845  018C40  0EFB               	movlw	-5
 18846  018C42  32E3               	rrcf	plusw1,f,c
 18847  018C44  0EFA               	movlw	-6
 18848  018C46  32E3               	rrcf	plusw1,f,c
 18849                           
 18850                           ;stkvar	_exp1 @ sp[(-2)+0]
 18851  018C48  0EFE               	movlw	-2
 18852  018C4A  2AE3               	incf	plusw1,f,c
 18853  018C4C  B4D8               	btfsc	status,2,c
 18854  018C4E  D018               	goto	u7170
 18855  018C50  D7F2               	goto	l8527
 18856  018C52                     l8529:
 18857                           
 18858                           ;stkvar	_exp1 @ sp[(-2)+0]
 18859  018C52  0EFE               	movlw	-2
 18860  018C54  006F FF8C  F001    	movff	plusw1,btemp
 18861  018C5A  0E1F               	movlw	31
 18862  018C5C  6401               	cpfsgt	btemp^0,c
 18863  018C5E  D00C               	goto	l8537
 18864  018C60  D7A3               	goto	u7110
 18865  018C62                     l8535:
 18866                           
 18867                           ;stkvar	_f1 @ sp[(-2)+-4]
 18868  018C62  90D8               	bcf	status,0,c
 18869  018C64  0EFA               	movlw	-6
 18870  018C66  36E3               	rlcf	plusw1,f,c
 18871  018C68  0EFB               	movlw	-5
 18872  018C6A  36E3               	rlcf	plusw1,f,c
 18873  018C6C  0EFC               	movlw	-4
 18874  018C6E  36E3               	rlcf	plusw1,f,c
 18875  018C70  0EFD               	movlw	-3
 18876  018C72  36E3               	rlcf	plusw1,f,c
 18877                           
 18878                           ;stkvar	_exp1 @ sp[(-2)+0]
 18879  018C74  0EFE               	movlw	-2
 18880  018C76  06E3               	decf	plusw1,f,c
 18881  018C78                     l8537:
 18882                           
 18883                           ;stkvar	_exp1 @ sp[(-2)+0]
 18884  018C78  0EFE               	movlw	-2
 18885  018C7A  50E3               	movf	plusw1,w,c
 18886  018C7C  A4D8               	btfss	status,2,c
 18887  018C7E  D7F1               	goto	l8535
 18888  018C80                     u7170:
 18889                           
 18890                           ;stkvar	_sign1 @ sp[(-2)+1]
 18891  018C80  0EFF               	movlw	-1
 18892  018C82  50E3               	movf	plusw1,w,c
 18893  018C84  B4D8               	btfsc	status,2,c
 18894  018C86  D011               	goto	u7190
 18895                           
 18896                           ;stkvar	_f1 @ sp[(-2)+-4]
 18897                           ;stkvar	_f1 @ sp[(-2)+-4]
 18898  018C88  0EFA               	movlw	-6
 18899  018C8A  6CE3               	negf	plusw1,c
 18900  018C8C  0EFB               	movlw	-5
 18901  018C8E  1EE3               	comf	plusw1,f,c
 18902  018C90  0EFC               	movlw	-4
 18903  018C92  1EE3               	comf	plusw1,f,c
 18904  018C94  0EFD               	movlw	-3
 18905  018C96  1EE3               	comf	plusw1,f,c
 18906  018C98  E308               	bnc	u7190
 18907  018C9A  0EFB               	movlw	-5
 18908  018C9C  2AE3               	incf	plusw1,f,c
 18909  018C9E  E305               	bnc	u7190
 18910  018CA0  0EFC               	movlw	-4
 18911  018CA2  2AE3               	incf	plusw1,f,c
 18912  018CA4  E302               	bnc	u7190
 18913  018CA6  0EFD               	movlw	-3
 18914  018CA8  2AE3               	incf	plusw1,f,c
 18915  018CAA                     u7190:
 18916                           
 18917                           ;stkvar	_f1 @ sp[(-2)+-4]
 18918  018CAA  0EFA               	movlw	-6
 18919  018CAC  006F FF8C  F001    	movff	plusw1,btemp
 18920  018CB2  0EFB               	movlw	-5
 18921  018CB4  006F FF8C  F002    	movff	plusw1,btemp+1
 18922  018CBA  0EFC               	movlw	-4
 18923  018CBC  006F FF8C  F003    	movff	plusw1,btemp+2
 18924  018CC2  0EFD               	movlw	-3
 18925  018CC4  006F FF8C  F004    	movff	plusw1,btemp+3
 18926  018CCA                     l2693:
 18927                           
 18928                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18929  018CCA  0EFA               	movlw	250
 18930  018CCC  26E1               	addwf	fsr1l,f,c
 18931  018CCE  0EFF               	movlw	255
 18932  018CD0  22E2               	addwfc	fsr1h,f,c
 18933  018CD2  0012               	return		;funcret
 18934  018CD4                     __end_of___fltol:
 18935                           	opt callstack 0
 18936                           
 18937 ;; *************** function ___flneg *****************
 18938 ;; Defined at:
 18939 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 18940 ;; Parameters:    Size  Location     Type
 18941 ;;  f1              4  [STACK] long 
 18942 ;; Auto vars:     Size  Location     Type
 18943 ;;		None
 18944 ;; Return value:  Size  Location     Type
 18945 ;;                  4  [STACK] long 
 18946 ;; Registers used:
 18947 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18948 ;; Tracked objects:
 18949 ;;		On entry : 0/0
 18950 ;;		On exit  : 0/0
 18951 ;;		Unchanged: 0/0
 18952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18957 ;;Total ram usage:        0 bytes
 18958 ;; Hardware stack levels used:    1
 18959 ;; Hardware stack levels required when called:   15
 18960 ;; This function calls:
 18961 ;;		Nothing
 18962 ;; This function is called by:
 18963 ;;		_calc_bsoc
 18964 ;;		_efgtoa
 18965 ;; This function uses a reentrant model
 18966 ;;
 18967                           
 18968                           	psect	text62
 18969  01B14A                     __ptext62:
 18970                           	opt callstack 0
 18971  01B14A                     ___flneg:
 18972                           	opt callstack 0
 18973                           
 18974                           ;stkvar	_f1 @ sp[(0)+-4]
 18975                           
 18976                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18977                           ;incstack = 0
 18978 ;; hardware stack exceeded
 18979  01B14A  0EFC               	movlw	-4
 18980  01B14C  50E3               	movf	plusw1,w,c
 18981  01B14E  E10A               	bnz	u7090
 18982  01B150  0EFD               	movlw	-3
 18983  01B152  50E3               	movf	plusw1,w,c
 18984  01B154  E107               	bnz	u7090
 18985  01B156  0EFE               	movlw	-2
 18986  01B158  50E3               	movf	plusw1,w,c
 18987  01B15A  E104               	bnz	u7090
 18988  01B15C  0EFF               	movlw	-1
 18989  01B15E  50E3               	movf	plusw1,w,c
 18990  01B160  B4D8               	btfsc	status,2,c
 18991  01B162  D002               	goto	l8501
 18992  01B164                     u7090:
 18993                           
 18994                           ;stkvar	_f1 @ sp[(0)+-4]
 18995  01B164  0EFF               	movlw	-1
 18996  01B166  7EE3               	btg	plusw1,7,c
 18997  01B168                     l8501:
 18998                           
 18999                           ;stkvar	_f1 @ sp[(0)+-4]
 19000  01B168  0EFC               	movlw	-4
 19001  01B16A  006F FF8C  F001    	movff	plusw1,btemp
 19002  01B170  0EFD               	movlw	-3
 19003  01B172  006F FF8C  F002    	movff	plusw1,btemp+1
 19004  01B178  0EFE               	movlw	-2
 19005  01B17A  006F FF8C  F003    	movff	plusw1,btemp+2
 19006  01B180  0EFF               	movlw	-1
 19007  01B182  006F FF8C  F004    	movff	plusw1,btemp+3
 19008                           
 19009                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19010  01B188  52E5               	movf	postdec1,f,c
 19011  01B18A  52E5               	movf	postdec1,f,c
 19012  01B18C  52E5               	movf	postdec1,f,c
 19013  01B18E  52E5               	movf	postdec1,f,c
 19014  01B190  0012               	return		;funcret
 19015  01B192                     __end_of___flneg:
 19016                           	opt callstack 0
 19017                           
 19018 ;; *************** function ___fleq *****************
 19019 ;; Defined at:
 19020 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 19021 ;; Parameters:    Size  Location     Type
 19022 ;;  ff1             4  [STACK] long 
 19023 ;;  ff2             4  [STACK] long 
 19024 ;; Auto vars:     Size  Location     Type
 19025 ;;		None
 19026 ;; Return value:  Size  Location     Type
 19027 ;;		None               void
 19028 ;; Registers used:
 19029 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19030 ;; Tracked objects:
 19031 ;;		On entry : 0/0
 19032 ;;		On exit  : 0/0
 19033 ;;		Unchanged: 0/0
 19034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19039 ;;Total ram usage:        0 bytes
 19040 ;; Hardware stack levels used:    1
 19041 ;; Hardware stack levels required when called:   15
 19042 ;; This function calls:
 19043 ;;		Nothing
 19044 ;; This function is called by:
 19045 ;;		_efgtoa
 19046 ;; This function uses a reentrant model
 19047 ;;
 19048                           
 19049                           	psect	text63
 19050  01A25E                     __ptext63:
 19051                           	opt callstack 0
 19052  01A25E                     ___fleq:
 19053                           	opt callstack 0
 19054                           
 19055                           ;stkvar	_ff1 @ sp[(0)+-4]
 19056                           
 19057                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19058                           ;incstack = 0
 19059 ;; hardware stack exceeded
 19060  01A25E  50E1               	movf	fsr1l,w,c
 19061  01A260  0FFC               	addlw	-4
 19062  01A262  6ED9               	movwf	fsr2l,c
 19063  01A264  50E2               	movf	fsr1h,w,c
 19064  01A266  6EDA               	movwf	fsr2h,c
 19065  01A268  0EFF               	movlw	255
 19066  01A26A  22DA               	addwfc	fsr2h,f,c
 19067  01A26C  0E00               	movlw	0
 19068  01A26E  14DE               	andwf	postinc2,w,c
 19069  01A270  6E09               	movwf	(btemp+8)^0,c
 19070  01A272  0E00               	movlw	0
 19071  01A274  14DE               	andwf	postinc2,w,c
 19072  01A276  6E0A               	movwf	(btemp+9)^0,c
 19073  01A278  0E80               	movlw	128
 19074  01A27A  14DE               	andwf	postinc2,w,c
 19075  01A27C  6E0B               	movwf	(btemp+10)^0,c
 19076  01A27E  0E7F               	movlw	127
 19077  01A280  14DE               	andwf	postinc2,w,c
 19078  01A282  6E0C               	movwf	(btemp+11)^0,c
 19079  01A284  5009               	movf	(btemp+8)^0,w,c
 19080  01A286  100A               	iorwf	(btemp+9)^0,w,c
 19081  01A288  100B               	iorwf	(btemp+10)^0,w,c
 19082  01A28A  100C               	iorwf	(btemp+11)^0,w,c
 19083  01A28C  A4D8               	btfss	status,2,c
 19084  01A28E  D008               	goto	l8459
 19085                           
 19086                           ;stkvar	_ff1 @ sp[(0)+-4]
 19087  01A290  0EFC               	movlw	-4
 19088  01A292  6AE3               	clrf	plusw1,c
 19089  01A294  0EFD               	movlw	-3
 19090  01A296  6AE3               	clrf	plusw1,c
 19091  01A298  0EFE               	movlw	-2
 19092  01A29A  6AE3               	clrf	plusw1,c
 19093  01A29C  0EFF               	movlw	-1
 19094  01A29E  6AE3               	clrf	plusw1,c
 19095  01A2A0                     l8459:
 19096                           
 19097                           ;stkvar	_ff2 @ sp[(0)+-8]
 19098  01A2A0  50E1               	movf	fsr1l,w,c
 19099  01A2A2  0FF8               	addlw	-8
 19100  01A2A4  6ED9               	movwf	fsr2l,c
 19101  01A2A6  50E2               	movf	fsr1h,w,c
 19102  01A2A8  6EDA               	movwf	fsr2h,c
 19103  01A2AA  0EFF               	movlw	255
 19104  01A2AC  22DA               	addwfc	fsr2h,f,c
 19105  01A2AE  0E00               	movlw	0
 19106  01A2B0  14DE               	andwf	postinc2,w,c
 19107  01A2B2  6E09               	movwf	(btemp+8)^0,c
 19108  01A2B4  0E00               	movlw	0
 19109  01A2B6  14DE               	andwf	postinc2,w,c
 19110  01A2B8  6E0A               	movwf	(btemp+9)^0,c
 19111  01A2BA  0E80               	movlw	128
 19112  01A2BC  14DE               	andwf	postinc2,w,c
 19113  01A2BE  6E0B               	movwf	(btemp+10)^0,c
 19114  01A2C0  0E7F               	movlw	127
 19115  01A2C2  14DE               	andwf	postinc2,w,c
 19116  01A2C4  6E0C               	movwf	(btemp+11)^0,c
 19117  01A2C6  5009               	movf	(btemp+8)^0,w,c
 19118  01A2C8  100A               	iorwf	(btemp+9)^0,w,c
 19119  01A2CA  100B               	iorwf	(btemp+10)^0,w,c
 19120  01A2CC  100C               	iorwf	(btemp+11)^0,w,c
 19121  01A2CE  A4D8               	btfss	status,2,c
 19122  01A2D0  D008               	goto	l8463
 19123                           
 19124                           ;stkvar	_ff2 @ sp[(0)+-8]
 19125  01A2D2  0EF8               	movlw	-8
 19126  01A2D4  6AE3               	clrf	plusw1,c
 19127  01A2D6  0EF9               	movlw	-7
 19128  01A2D8  6AE3               	clrf	plusw1,c
 19129  01A2DA  0EFA               	movlw	-6
 19130  01A2DC  6AE3               	clrf	plusw1,c
 19131  01A2DE  0EFB               	movlw	-5
 19132  01A2E0  6AE3               	clrf	plusw1,c
 19133  01A2E2                     l8463:
 19134                           
 19135                           ;stkvar	_ff2 @ sp[(0)+-8]
 19136                           ;stkvar	_ff1 @ sp[(0)+-4]
 19137  01A2E2  50E1               	movf	fsr1l,w,c
 19138  01A2E4  0FFC               	addlw	-4
 19139  01A2E6  6ED9               	movwf	fsr2l,c
 19140  01A2E8  50E2               	movf	fsr1h,w,c
 19141  01A2EA  6EDA               	movwf	fsr2h,c
 19142  01A2EC  0EFF               	movlw	255
 19143  01A2EE  22DA               	addwfc	fsr2h,f,c
 19144  01A2F0  0EF8               	movlw	-8
 19145  01A2F2  50E3               	movf	plusw1,w,c
 19146  01A2F4  18DE               	xorwf	postinc2,w,c
 19147  01A2F6  E10D               	bnz	u7030
 19148  01A2F8  0EF9               	movlw	-7
 19149  01A2FA  50E3               	movf	plusw1,w,c
 19150  01A2FC  18DE               	xorwf	postinc2,w,c
 19151  01A2FE  E109               	bnz	u7030
 19152  01A300  0EFA               	movlw	-6
 19153  01A302  50E3               	movf	plusw1,w,c
 19154  01A304  18DE               	xorwf	postinc2,w,c
 19155  01A306  E105               	bnz	u7030
 19156  01A308  0EFB               	movlw	-5
 19157  01A30A  50E3               	movf	plusw1,w,c
 19158  01A30C  18DE               	xorwf	postinc2,w,c
 19159  01A30E  B4D8               	btfsc	status,2,c
 19160  01A310  D002               	goto	l8467
 19161  01A312                     u7030:
 19162  01A312  9001               	bcf	btemp& (0+255),0,c
 19163  01A314  D001               	goto	l2655
 19164  01A316                     l8467:
 19165  01A316  8001               	bsf	btemp& (0+255),0,c
 19166  01A318                     l2655:
 19167                           
 19168                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 19169  01A318  0EF8               	movlw	248
 19170  01A31A  26E1               	addwf	fsr1l,f,c
 19171  01A31C  0EFF               	movlw	255
 19172  01A31E  22E2               	addwfc	fsr1h,f,c
 19173  01A320  0012               	return		;funcret
 19174  01A322                     __end_of___fleq:
 19175                           	opt callstack 0
 19176                           
 19177 ;; *************** function ___awmod *****************
 19178 ;; Defined at:
 19179 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 19180 ;; Parameters:    Size  Location     Type
 19181 ;;  dividend        2  [STACK] int 
 19182 ;;  divisor         2  [STACK] int 
 19183 ;; Auto vars:     Size  Location     Type
 19184 ;;  sign            1  [STACK] unsigned char 
 19185 ;;  counter         1  [STACK] unsigned char 
 19186 ;; Return value:  Size  Location     Type
 19187 ;;                  2  [STACK] int 
 19188 ;; Registers used:
 19189 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19190 ;; Tracked objects:
 19191 ;;		On entry : 0/0
 19192 ;;		On exit  : 0/0
 19193 ;;		Unchanged: 0/0
 19194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19199 ;;Total ram usage:        0 bytes
 19200 ;; Hardware stack levels used:    1
 19201 ;; Hardware stack levels required when called:   15
 19202 ;; This function calls:
 19203 ;;		Nothing
 19204 ;; This function is called by:
 19205 ;;		_efgtoa
 19206 ;; This function uses a reentrant model
 19207 ;;
 19208                           
 19209                           	psect	text64
 19210  0196D4                     __ptext64:
 19211                           	opt callstack 0
 19212  0196D4                     ___awmod:
 19213                           	opt callstack 0
 19214                           
 19215                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19216  0196D4  52E6               	movf	postinc1,f,c
 19217  0196D6  52E6               	movf	postinc1,f,c
 19218                           
 19219                           ;stkvar	_sign @ sp[(-2)+0]
 19220                           
 19221                           ;incstack = 0
 19222 ;; hardware stack exceeded
 19223  0196D8  0EFE               	movlw	-2
 19224  0196DA  6AE3               	clrf	plusw1,c
 19225                           
 19226                           ;stkvar	_dividend @ sp[(-2)+-2]
 19227  0196DC  0EFD               	movlw	-3
 19228  0196DE  AEE3               	btfss	plusw1,7,c
 19229  0196E0  D009               	goto	l8425
 19230                           
 19231                           ;stkvar	_dividend @ sp[(-2)+-2]
 19232                           ;stkvar	_dividend @ sp[(-2)+-2]
 19233  0196E2  0EFC               	movlw	-4
 19234  0196E4  6CE3               	negf	plusw1,c
 19235  0196E6  0EFD               	movlw	-3
 19236  0196E8  1EE3               	comf	plusw1,f,c
 19237  0196EA  B0D8               	btfsc	status,0,c
 19238  0196EC  2AE3               	incf	plusw1,f,c
 19239                           
 19240                           ;stkvar	_sign @ sp[(-2)+0]
 19241  0196EE  0EFE               	movlw	-2
 19242  0196F0  6AE3               	clrf	plusw1,c
 19243  0196F2  2AE3               	incf	plusw1,f,c
 19244  0196F4                     l8425:
 19245                           
 19246                           ;stkvar	_divisor @ sp[(-2)+-4]
 19247  0196F4  0EFB               	movlw	-5
 19248  0196F6  AEE3               	btfss	plusw1,7,c
 19249  0196F8  D006               	goto	l8429
 19250                           
 19251                           ;stkvar	_divisor @ sp[(-2)+-4]
 19252                           ;stkvar	_divisor @ sp[(-2)+-4]
 19253  0196FA  0EFA               	movlw	-6
 19254  0196FC  6CE3               	negf	plusw1,c
 19255  0196FE  0EFB               	movlw	-5
 19256  019700  1EE3               	comf	plusw1,f,c
 19257  019702  B0D8               	btfsc	status,0,c
 19258  019704  2AE3               	incf	plusw1,f,c
 19259  019706                     l8429:
 19260                           
 19261                           ;stkvar	_divisor @ sp[(-2)+-4]
 19262  019706  0EFA               	movlw	-6
 19263  019708  006F FF8C  F001    	movff	plusw1,btemp
 19264  01970E  0EFB               	movlw	-5
 19265  019710  50E3               	movf	plusw1,w,c
 19266  019712  1001               	iorwf	btemp^0,w,c
 19267  019714  B4D8               	btfsc	status,2,c
 19268  019716  D053               	goto	u6990
 19269                           
 19270                           ;stkvar	_counter @ sp[(-2)+1]
 19271  019718  0EFF               	movlw	-1
 19272  01971A  6AE3               	clrf	plusw1,c
 19273  01971C  D012               	goto	L22
 19274  01971E                     l8433:
 19275                           
 19276                           ;stkvar	_divisor @ sp[(-2)+-4]
 19277  01971E  0EFA               	movlw	-6
 19278  019720  50E3               	movf	plusw1,w,c
 19279  019722  90D8               	bcf	status,0,c
 19280  019724  34E8               	rlcf	wreg,w,c
 19281  019726  6E01               	movwf	btemp^0,c
 19282  019728  0EFA               	movlw	-6
 19283  01972A  0060  F007  FFE3   	movff	btemp,plusw1
 19284  019730  0EFB               	movlw	-5
 19285  019732  50E3               	movf	plusw1,w,c
 19286  019734  34E8               	rlcf	wreg,w,c
 19287  019736  6E01               	movwf	btemp^0,c
 19288  019738  0EFB               	movlw	-5
 19289  01973A  0060  F007  FFE3   	movff	btemp,plusw1
 19290                           
 19291                           ;stkvar	_counter @ sp[(-2)+1]
 19292  019740  0EFF               	movlw	-1
 19293  019742                     L22:
 19294  019742  2AE3               	incf	plusw1,f,c
 19295                           
 19296                           ;stkvar	_divisor @ sp[(-2)+-4]
 19297  019744  0EFB               	movlw	-5
 19298  019746  AEE3               	btfss	plusw1,7,c
 19299  019748  D7EA               	goto	l8433
 19300  01974A                     u6970:
 19301                           
 19302                           ;stkvar	_divisor @ sp[(-2)+-4]
 19303  01974A  0EFA               	movlw	-6
 19304  01974C  006F FF8C  F00B    	movff	plusw1,btemp+10
 19305  019752  0EFB               	movlw	-5
 19306  019754  006F FF8C  F00C    	movff	plusw1,btemp+11
 19307                           
 19308                           ;stkvar	_dividend @ sp[(-2)+-2]
 19309  01975A  0EFC               	movlw	-4
 19310  01975C  006F FF8C  F009    	movff	plusw1,btemp+8
 19311  019762  0EFD               	movlw	-3
 19312  019764  006F FF8C  F00A    	movff	plusw1,btemp+9
 19313  01976A  500B               	movf	(btemp+10)^0,w,c
 19314  01976C  5C09               	subwf	(btemp+8)^0,w,c
 19315  01976E  500C               	movf	(btemp+11)^0,w,c
 19316  019770  580A               	subwfb	(btemp+9)^0,w,c
 19317  019772  A0D8               	btfss	status,0,c
 19318  019774  D014               	goto	l8443
 19319                           
 19320                           ;stkvar	_divisor @ sp[(-2)+-4]
 19321                           ;stkvar	_dividend @ sp[(-2)+-2]
 19322  019776  0EFC               	movlw	-4
 19323  019778  50E3               	movf	plusw1,w,c
 19324  01977A  6E01               	movwf	btemp^0,c
 19325  01977C  0EFA               	movlw	-6
 19326  01977E  50E3               	movf	plusw1,w,c
 19327  019780  5E01               	subwf	btemp^0,f,c
 19328  019782  0EFC               	movlw	-4
 19329  019784  0060  F007  FFE3   	movff	btemp,plusw1
 19330  01978A  0EFD               	movlw	-3
 19331  01978C  50E3               	movf	plusw1,w,c
 19332  01978E  6E01               	movwf	btemp^0,c
 19333  019790  0EFB               	movlw	-5
 19334  019792  50E3               	movf	plusw1,w,c
 19335  019794  5A01               	subwfb	btemp^0,f,c
 19336  019796  0EFD               	movlw	-3
 19337  019798  0060  F007  FFE3   	movff	btemp,plusw1
 19338  01979E                     l8443:
 19339                           
 19340                           ;stkvar	_divisor @ sp[(-2)+-4]
 19341  01979E  90D8               	bcf	status,0,c
 19342  0197A0  0EFB               	movlw	-5
 19343  0197A2  32E3               	rrcf	plusw1,f,c
 19344  0197A4  0EFA               	movlw	-6
 19345  0197A6  32E3               	rrcf	plusw1,f,c
 19346                           
 19347                           ;stkvar	_counter @ sp[(-2)+1]
 19348  0197A8  0EFF               	movlw	-1
 19349  0197AA  50E3               	movf	plusw1,w,c
 19350  0197AC  6E01               	movwf	btemp^0,c
 19351  0197AE  0E01               	movlw	1
 19352  0197B0  5E01               	subwf	btemp^0,f,c
 19353  0197B2  0EFF               	movlw	-1
 19354  0197B4  0060  F007  FFE3   	movff	btemp,plusw1
 19355  0197BA  A4D8               	btfss	status,2,c
 19356  0197BC  D7C6               	goto	u6970
 19357  0197BE                     u6990:
 19358                           
 19359                           ;stkvar	_sign @ sp[(-2)+0]
 19360  0197BE  0EFE               	movlw	-2
 19361  0197C0  50E3               	movf	plusw1,w,c
 19362  0197C2  B4D8               	btfsc	status,2,c
 19363  0197C4  D006               	goto	l8451
 19364                           
 19365                           ;stkvar	_dividend @ sp[(-2)+-2]
 19366                           ;stkvar	_dividend @ sp[(-2)+-2]
 19367  0197C6  0EFC               	movlw	-4
 19368  0197C8  6CE3               	negf	plusw1,c
 19369  0197CA  0EFD               	movlw	-3
 19370  0197CC  1EE3               	comf	plusw1,f,c
 19371  0197CE  B0D8               	btfsc	status,0,c
 19372  0197D0  2AE3               	incf	plusw1,f,c
 19373  0197D2                     l8451:
 19374                           
 19375                           ;stkvar	_dividend @ sp[(-2)+-2]
 19376  0197D2  0EFC               	movlw	-4
 19377  0197D4  006F FF8C  F001    	movff	plusw1,btemp
 19378  0197DA  0EFD               	movlw	-3
 19379  0197DC  006F FF8C  F002    	movff	plusw1,btemp+1
 19380                           
 19381                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19382  0197E2  0EFA               	movlw	250
 19383  0197E4  26E1               	addwf	fsr1l,f,c
 19384  0197E6  0EFF               	movlw	255
 19385  0197E8  22E2               	addwfc	fsr1h,f,c
 19386  0197EA  0012               	return		;funcret
 19387  0197EC                     __end_of___awmod:
 19388                           	opt callstack 0
 19389                           
 19390 ;; *************** function ___awdiv *****************
 19391 ;; Defined at:
 19392 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 19393 ;; Parameters:    Size  Location     Type
 19394 ;;  dividend        2  [STACK] int 
 19395 ;;  divisor         2  [STACK] int 
 19396 ;; Auto vars:     Size  Location     Type
 19397 ;;  quotient        2  [STACK] int 
 19398 ;;  sign            1  [STACK] unsigned char 
 19399 ;;  counter         1  [STACK] unsigned char 
 19400 ;; Return value:  Size  Location     Type
 19401 ;;                  2  [STACK] int 
 19402 ;; Registers used:
 19403 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19404 ;; Tracked objects:
 19405 ;;		On entry : 0/0
 19406 ;;		On exit  : 0/0
 19407 ;;		Unchanged: 0/0
 19408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19413 ;;Total ram usage:        0 bytes
 19414 ;; Hardware stack levels used:    1
 19415 ;; Hardware stack levels required when called:   15
 19416 ;; This function calls:
 19417 ;;		Nothing
 19418 ;; This function is called by:
 19419 ;;		_efgtoa
 19420 ;; This function uses a reentrant model
 19421 ;;
 19422                           
 19423                           	psect	text65
 19424  018F9A                     __ptext65:
 19425                           	opt callstack 0
 19426  018F9A                     ___awdiv:
 19427                           	opt callstack 0
 19428                           
 19429                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19430  018F9A  52E6               	movf	postinc1,f,c
 19431  018F9C  52E6               	movf	postinc1,f,c
 19432  018F9E  52E6               	movf	postinc1,f,c
 19433  018FA0  52E6               	movf	postinc1,f,c
 19434                           
 19435                           ;stkvar	_sign @ sp[(-4)+2]
 19436                           
 19437                           ;incstack = 0
 19438 ;; hardware stack exceeded
 19439  018FA2  0EFE               	movlw	-2
 19440  018FA4  6AE3               	clrf	plusw1,c
 19441                           
 19442                           ;stkvar	_divisor @ sp[(-4)+-4]
 19443  018FA6  0EF9               	movlw	-7
 19444  018FA8  AEE3               	btfss	plusw1,7,c
 19445  018FAA  D009               	goto	l8379
 19446                           
 19447                           ;stkvar	_divisor @ sp[(-4)+-4]
 19448                           ;stkvar	_divisor @ sp[(-4)+-4]
 19449  018FAC  0EF8               	movlw	-8
 19450  018FAE  6CE3               	negf	plusw1,c
 19451  018FB0  0EF9               	movlw	-7
 19452  018FB2  1EE3               	comf	plusw1,f,c
 19453  018FB4  B0D8               	btfsc	status,0,c
 19454  018FB6  2AE3               	incf	plusw1,f,c
 19455                           
 19456                           ;stkvar	_sign @ sp[(-4)+2]
 19457  018FB8  0EFE               	movlw	-2
 19458  018FBA  6AE3               	clrf	plusw1,c
 19459  018FBC  2AE3               	incf	plusw1,f,c
 19460  018FBE                     l8379:
 19461                           
 19462                           ;stkvar	_dividend @ sp[(-4)+-2]
 19463  018FBE  0EFB               	movlw	-5
 19464  018FC0  AEE3               	btfss	plusw1,7,c
 19465  018FC2  D008               	goto	l8385
 19466                           
 19467                           ;stkvar	_dividend @ sp[(-4)+-2]
 19468                           ;stkvar	_dividend @ sp[(-4)+-2]
 19469  018FC4  0EFA               	movlw	-6
 19470  018FC6  6CE3               	negf	plusw1,c
 19471  018FC8  0EFB               	movlw	-5
 19472  018FCA  1EE3               	comf	plusw1,f,c
 19473  018FCC  B0D8               	btfsc	status,0,c
 19474  018FCE  2AE3               	incf	plusw1,f,c
 19475                           
 19476                           ;stkvar	_sign @ sp[(-4)+2]
 19477  018FD0  0EFE               	movlw	-2
 19478  018FD2  70E3               	btg	plusw1,0,c
 19479  018FD4                     l8385:
 19480                           
 19481                           ;stkvar	_quotient @ sp[(-4)+0]
 19482  018FD4  0EFC               	movlw	-4
 19483  018FD6  6AE3               	clrf	plusw1,c
 19484  018FD8  0EFD               	movlw	-3
 19485  018FDA  6AE3               	clrf	plusw1,c
 19486                           
 19487                           ;stkvar	_divisor @ sp[(-4)+-4]
 19488  018FDC  0EF8               	movlw	-8
 19489  018FDE  006F FF8C  F001    	movff	plusw1,btemp
 19490  018FE4  0EF9               	movlw	-7
 19491  018FE6  50E3               	movf	plusw1,w,c
 19492  018FE8  1001               	iorwf	btemp^0,w,c
 19493  018FEA  B4D8               	btfsc	status,2,c
 19494  018FEC  D066               	goto	u6920
 19495                           
 19496                           ;stkvar	_counter @ sp[(-4)+3]
 19497  018FEE  0EFF               	movlw	-1
 19498  018FF0  6AE3               	clrf	plusw1,c
 19499  018FF2  D012               	goto	L23
 19500  018FF4                     l8391:
 19501                           
 19502                           ;stkvar	_divisor @ sp[(-4)+-4]
 19503  018FF4  0EF8               	movlw	-8
 19504  018FF6  50E3               	movf	plusw1,w,c
 19505  018FF8  90D8               	bcf	status,0,c
 19506  018FFA  34E8               	rlcf	wreg,w,c
 19507  018FFC  6E01               	movwf	btemp^0,c
 19508  018FFE  0EF8               	movlw	-8
 19509  019000  0060  F007  FFE3   	movff	btemp,plusw1
 19510  019006  0EF9               	movlw	-7
 19511  019008  50E3               	movf	plusw1,w,c
 19512  01900A  34E8               	rlcf	wreg,w,c
 19513  01900C  6E01               	movwf	btemp^0,c
 19514  01900E  0EF9               	movlw	-7
 19515  019010  0060  F007  FFE3   	movff	btemp,plusw1
 19516                           
 19517                           ;stkvar	_counter @ sp[(-4)+3]
 19518  019016  0EFF               	movlw	-1
 19519  019018                     L23:
 19520  019018  2AE3               	incf	plusw1,f,c
 19521                           
 19522                           ;stkvar	_divisor @ sp[(-4)+-4]
 19523  01901A  0EF9               	movlw	-7
 19524  01901C  AEE3               	btfss	plusw1,7,c
 19525  01901E  D7EA               	goto	l8391
 19526  019020                     u6900:
 19527                           
 19528                           ;stkvar	_quotient @ sp[(-4)+0]
 19529  019020  0EFC               	movlw	-4
 19530  019022  50E3               	movf	plusw1,w,c
 19531  019024  90D8               	bcf	status,0,c
 19532  019026  34E8               	rlcf	wreg,w,c
 19533  019028  6E01               	movwf	btemp^0,c
 19534  01902A  0EFC               	movlw	-4
 19535  01902C  0060  F007  FFE3   	movff	btemp,plusw1
 19536  019032  0EFD               	movlw	-3
 19537  019034  50E3               	movf	plusw1,w,c
 19538  019036  34E8               	rlcf	wreg,w,c
 19539  019038  6E01               	movwf	btemp^0,c
 19540  01903A  0EFD               	movlw	-3
 19541  01903C  0060  F007  FFE3   	movff	btemp,plusw1
 19542                           
 19543                           ;stkvar	_divisor @ sp[(-4)+-4]
 19544  019042  0EF8               	movlw	-8
 19545  019044  006F FF8C  F00B    	movff	plusw1,btemp+10
 19546  01904A  0EF9               	movlw	-7
 19547  01904C  006F FF8C  F00C    	movff	plusw1,btemp+11
 19548                           
 19549                           ;stkvar	_dividend @ sp[(-4)+-2]
 19550  019052  0EFA               	movlw	-6
 19551  019054  006F FF8C  F009    	movff	plusw1,btemp+8
 19552  01905A  0EFB               	movlw	-5
 19553  01905C  006F FF8C  F00A    	movff	plusw1,btemp+9
 19554  019062  500B               	movf	(btemp+10)^0,w,c
 19555  019064  5C09               	subwf	(btemp+8)^0,w,c
 19556  019066  500C               	movf	(btemp+11)^0,w,c
 19557  019068  580A               	subwfb	(btemp+9)^0,w,c
 19558  01906A  A0D8               	btfss	status,0,c
 19559  01906C  D016               	goto	l8405
 19560                           
 19561                           ;stkvar	_divisor @ sp[(-4)+-4]
 19562                           ;stkvar	_dividend @ sp[(-4)+-2]
 19563  01906E  0EFA               	movlw	-6
 19564  019070  50E3               	movf	plusw1,w,c
 19565  019072  6E01               	movwf	btemp^0,c
 19566  019074  0EF8               	movlw	-8
 19567  019076  50E3               	movf	plusw1,w,c
 19568  019078  5E01               	subwf	btemp^0,f,c
 19569  01907A  0EFA               	movlw	-6
 19570  01907C  0060  F007  FFE3   	movff	btemp,plusw1
 19571  019082  0EFB               	movlw	-5
 19572  019084  50E3               	movf	plusw1,w,c
 19573  019086  6E01               	movwf	btemp^0,c
 19574  019088  0EF9               	movlw	-7
 19575  01908A  50E3               	movf	plusw1,w,c
 19576  01908C  5A01               	subwfb	btemp^0,f,c
 19577  01908E  0EFB               	movlw	-5
 19578  019090  0060  F007  FFE3   	movff	btemp,plusw1
 19579                           
 19580                           ;stkvar	_quotient @ sp[(-4)+0]
 19581  019096  0EFC               	movlw	-4
 19582  019098  80E3               	bsf	plusw1,0,c
 19583  01909A                     l8405:
 19584                           
 19585                           ;stkvar	_divisor @ sp[(-4)+-4]
 19586  01909A  90D8               	bcf	status,0,c
 19587  01909C  0EF9               	movlw	-7
 19588  01909E  32E3               	rrcf	plusw1,f,c
 19589  0190A0  0EF8               	movlw	-8
 19590  0190A2  32E3               	rrcf	plusw1,f,c
 19591                           
 19592                           ;stkvar	_counter @ sp[(-4)+3]
 19593  0190A4  0EFF               	movlw	-1
 19594  0190A6  50E3               	movf	plusw1,w,c
 19595  0190A8  6E01               	movwf	btemp^0,c
 19596  0190AA  0E01               	movlw	1
 19597  0190AC  5E01               	subwf	btemp^0,f,c
 19598  0190AE  0EFF               	movlw	-1
 19599  0190B0  0060  F007  FFE3   	movff	btemp,plusw1
 19600  0190B6  A4D8               	btfss	status,2,c
 19601  0190B8  D7B3               	goto	u6900
 19602  0190BA                     u6920:
 19603                           
 19604                           ;stkvar	_sign @ sp[(-4)+2]
 19605  0190BA  0EFE               	movlw	-2
 19606  0190BC  50E3               	movf	plusw1,w,c
 19607  0190BE  B4D8               	btfsc	status,2,c
 19608  0190C0  D006               	goto	l8413
 19609                           
 19610                           ;stkvar	_quotient @ sp[(-4)+0]
 19611                           ;stkvar	_quotient @ sp[(-4)+0]
 19612  0190C2  0EFC               	movlw	-4
 19613  0190C4  6CE3               	negf	plusw1,c
 19614  0190C6  0EFD               	movlw	-3
 19615  0190C8  1EE3               	comf	plusw1,f,c
 19616  0190CA  B0D8               	btfsc	status,0,c
 19617  0190CC  2AE3               	incf	plusw1,f,c
 19618  0190CE                     l8413:
 19619                           
 19620                           ;stkvar	_quotient @ sp[(-4)+0]
 19621  0190CE  0EFC               	movlw	-4
 19622  0190D0  006F FF8C  F001    	movff	plusw1,btemp
 19623  0190D6  0EFD               	movlw	-3
 19624  0190D8  006F FF8C  F002    	movff	plusw1,btemp+1
 19625                           
 19626                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19627  0190DE  0EF8               	movlw	248
 19628  0190E0  26E1               	addwf	fsr1l,f,c
 19629  0190E2  0EFF               	movlw	255
 19630  0190E4  22E2               	addwfc	fsr1h,f,c
 19631  0190E6  0012               	return		;funcret
 19632  0190E8                     __end_of___awdiv:
 19633                           	opt callstack 0
 19634                           
 19635 ;; *************** function _dtoa *****************
 19636 ;; Defined at:
 19637 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19638 ;; Parameters:    Size  Location     Type
 19639 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19640 ;;		 -> f(6), NULL(0), 
 19641 ;;  d               8  [STACK] long long 
 19642 ;; Auto vars:     Size  Location     Type
 19643 ;;  n               8  [STACK] long long 
 19644 ;;  i               2  [STACK] int 
 19645 ;;  s               2  [STACK] int 
 19646 ;;  w               2  [STACK] int 
 19647 ;;  p               2  [STACK] int 
 19648 ;; Return value:  Size  Location     Type
 19649 ;;                  2  [STACK] int 
 19650 ;; Registers used:
 19651 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 19652 ;; Tracked objects:
 19653 ;;		On entry : 0/0
 19654 ;;		On exit  : 0/0
 19655 ;;		Unchanged: 0/0
 19656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19661 ;;Total ram usage:        0 bytes
 19662 ;; Hardware stack levels used:    1
 19663 ;; Hardware stack levels required when called:   20
 19664 ;; This function calls:
 19665 ;;		___aodiv
 19666 ;;		___aomod
 19667 ;;		_abs
 19668 ;;		_pad
 19669 ;; This function is called by:
 19670 ;;		_vfpfcnvrt
 19671 ;; This function uses a reentrant model
 19672 ;;
 19673                           
 19674                           	psect	text66
 19675  0154C6                     __ptext66:
 19676                           	opt callstack 0
 19677  0154C6                     _dtoa:
 19678                           	opt callstack 0
 19679                           
 19680                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 19681  0154C6  0E12               	movlw	18
 19682  0154C8  26E1               	addwf	fsr1l,f,c
 19683  0154CA  0E00               	movlw	0
 19684  0154CC  22E2               	addwfc	fsr1h,f,c
 19685                           
 19686                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 19687                           ;stkvar	_d @ sp[(-18)+-10]
 19688                           
 19689                           ;incstack = 0
 19690 ;; hardware stack exceeded
 19691  0154CE  0EE4               	movlw	228
 19692  0154D0  24E1               	addwf	fsr1l,w,c
 19693  0154D2  6ED9               	movwf	fsr2l,c
 19694  0154D4  0EFF               	movlw	255
 19695  0154D6  20E2               	addwfc	fsr1h,w,c
 19696  0154D8  6EDA               	movwf	fsr2h,c
 19697                           
 19698                           ;stkvar	_n @ sp[(-18)+2]
 19699  0154DA  0E08               	movlw	8
 19700  0154DC  6E01               	movwf	btemp^0,c
 19701  0154DE  0EF0               	movlw	-16
 19702  0154E0                     us1077999:
 19703  0154E0  006F FF7B FFE3     	movff	postinc2,plusw1
 19704  0154E6  28E8               	incf	wreg,w,c
 19705  0154E8  2E01               	decfsz	btemp^0,f,c
 19706  0154EA  D7FA               	bra	us1077999
 19707                           
 19708                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 19709                           ;stkvar	_n @ sp[(-18)+2]
 19710  0154EC  0EF7               	movlw	-9
 19711  0154EE  AEE3               	btfss	plusw1,7,c
 19712  0154F0  D002               	goto	u10780
 19713  0154F2  0E01               	movlw	1
 19714  0154F4  D001               	goto	u10790
 19715  0154F6                     u10780:
 19716  0154F6  0E00               	movlw	0
 19717  0154F8                     u10790:
 19718  0154F8  6E0B               	movwf	(btemp+10)^0,c
 19719  0154FA  6A0C               	clrf	(btemp+11)^0,c
 19720                           
 19721                           ;stkvar	_s @ sp[(-18)+12]
 19722  0154FC  0EFA               	movlw	-6
 19723  0154FE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19724  015504  0EFB               	movlw	-5
 19725  015506  0060  F033  FFE3   	movff	btemp+11,plusw1
 19726                           
 19727                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 19728                           ;stkvar	_s @ sp[(-18)+12]
 19729  01550C  0EFA               	movlw	-6
 19730  01550E  006F FF8C  F001    	movff	plusw1,btemp
 19731  015514  0EFB               	movlw	-5
 19732  015516  50E3               	movf	plusw1,w,c
 19733  015518  1001               	iorwf	btemp^0,w,c
 19734  01551A  B4D8               	btfsc	status,2,c
 19735  01551C  D025               	goto	u10810
 19736                           
 19737                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 19738                           ;stkvar	_n @ sp[(-18)+2]
 19739                           ;stkvar	_n @ sp[(-18)+2]
 19740  01551E  0EF0               	movlw	-16
 19741  015520  6CE3               	negf	plusw1,c
 19742  015522  0EF1               	movlw	-15
 19743  015524  1EE3               	comf	plusw1,f,c
 19744  015526  0EF2               	movlw	-14
 19745  015528  1EE3               	comf	plusw1,f,c
 19746  01552A  0EF3               	movlw	-13
 19747  01552C  1EE3               	comf	plusw1,f,c
 19748  01552E  0EF4               	movlw	-12
 19749  015530  1EE3               	comf	plusw1,f,c
 19750  015532  0EF5               	movlw	-11
 19751  015534  1EE3               	comf	plusw1,f,c
 19752  015536  0EF6               	movlw	-10
 19753  015538  1EE3               	comf	plusw1,f,c
 19754  01553A  0EF7               	movlw	-9
 19755  01553C  1EE3               	comf	plusw1,f,c
 19756  01553E  E314               	bnc	u10810
 19757  015540  0EF1               	movlw	-15
 19758  015542  2AE3               	incf	plusw1,f,c
 19759  015544  E311               	bnc	u10810
 19760  015546  0EF2               	movlw	-14
 19761  015548  2AE3               	incf	plusw1,f,c
 19762  01554A  E30E               	bnc	u10810
 19763  01554C  0EF3               	movlw	-13
 19764  01554E  2AE3               	incf	plusw1,f,c
 19765  015550  E30B               	bnc	u10810
 19766  015552  0EF4               	movlw	-12
 19767  015554  2AE3               	incf	plusw1,f,c
 19768  015556  E308               	bnc	u10810
 19769  015558  0EF5               	movlw	-11
 19770  01555A  2AE3               	incf	plusw1,f,c
 19771  01555C  E305               	bnc	u10810
 19772  01555E  0EF6               	movlw	-10
 19773  015560  2AE3               	incf	plusw1,f,c
 19774  015562  E302               	bnc	u10810
 19775  015564  0EF7               	movlw	-9
 19776  015566  2AE3               	incf	plusw1,f,c
 19777  015568                     u10810:
 19778                           
 19779                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 19780  015568  AE3D               	btfss	(_prec+1)^0,7,c
 19781                           
 19782                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 19783  01556A  923E               	bcf	_flags^0,1,c
 19784                           
 19785                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 19786  01556C  BE3D               	btfsc	(_prec+1)^0,7,c
 19787  01556E  D005               	goto	u10830
 19788  015570  503D               	movf	(_prec+1)^0,w,c
 19789  015572  E110               	bnz	l11725
 19790  015574  043C               	decf	_prec^0,w,c
 19791  015576  B0D8               	btfsc	status,0,c
 19792  015578  D00D               	goto	l11725
 19793  01557A                     u10830:
 19794  01557A  0E01               	movlw	1
 19795  01557C  6E0B               	movwf	(btemp+10)^0,c
 19796  01557E  0E00               	movlw	0
 19797  015580  6E0C               	movwf	(btemp+11)^0,c
 19798                           
 19799                           ;stkvar	_p @ sp[(-18)+16]
 19800  015582  0EFE               	movlw	-2
 19801  015584  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19802  01558A  0EFF               	movlw	-1
 19803  01558C  0060  F033  FFE3   	movff	btemp+11,plusw1
 19804  015592  D008               	goto	l2159
 19805  015594                     l11725:
 19806                           
 19807                           ;stkvar	_p @ sp[(-18)+16]
 19808  015594  0EFE               	movlw	-2
 19809  015596  0060  F0F3  FFE3   	movff	_prec,plusw1
 19810  01559C  0EFF               	movlw	-1
 19811  01559E  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 19812  0155A4                     l2159:
 19813                           
 19814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 19815                           ;stkvar	_w @ sp[(-18)+14]
 19816  0155A4  0EFC               	movlw	-4
 19817  0155A6  0060  F0EB  FFE3   	movff	_width,plusw1
 19818  0155AC  0EFD               	movlw	-3
 19819  0155AE  0060  F0EF  FFE3   	movff	_width+1,plusw1
 19820                           
 19821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 19822                           ;stkvar	_s @ sp[(-18)+12]
 19823  0155B4  0EFA               	movlw	-6
 19824  0155B6  006F FF8C  F001    	movff	plusw1,btemp
 19825  0155BC  0EFB               	movlw	-5
 19826  0155BE  50E3               	movf	plusw1,w,c
 19827  0155C0  1001               	iorwf	btemp^0,w,c
 19828  0155C2  A4D8               	btfss	status,2,c
 19829  0155C4  D002               	goto	u10850
 19830  0155C6  A43E               	btfss	_flags^0,2,c
 19831  0155C8  D00A               	goto	l11733
 19832  0155CA                     u10850:
 19833                           
 19834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 19835                           ;stkvar	_w @ sp[(-18)+14]
 19836  0155CA  50E1               	movf	fsr1l,w,c
 19837  0155CC  0FFC               	addlw	-4
 19838  0155CE  6ED9               	movwf	fsr2l,c
 19839  0155D0  50E2               	movf	fsr1h,w,c
 19840  0155D2  6EDA               	movwf	fsr2h,c
 19841  0155D4  0EFF               	movlw	255
 19842  0155D6  22DA               	addwfc	fsr2h,f,c
 19843  0155D8  06DE               	decf	postinc2,f,c
 19844  0155DA  0E00               	movlw	0
 19845  0155DC  5ADD               	subwfb	postdec2,f,c
 19846  0155DE                     l11733:
 19847                           
 19848                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 19849  0155DE  0E4F               	movlw	79
 19850  0155E0  6E0B               	movwf	(btemp+10)^0,c
 19851  0155E2  0E00               	movlw	0
 19852  0155E4  6E0C               	movwf	(btemp+11)^0,c
 19853                           
 19854                           ;stkvar	_i @ sp[(-18)+10]
 19855  0155E6  0EF8               	movlw	-8
 19856  0155E8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19857  0155EE  0EF9               	movlw	-7
 19858  0155F0  0060  F033  FFE3   	movff	btemp+11,plusw1
 19859                           
 19860                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 19861  0155F6  0102               	movlb	2	; () banked
 19862  0155F8  6BC5               	clrf	(_dbuf+79)& (0+255),b
 19863                           
 19864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19865  0155FA  D109               	goto	l11747
 19866  0155FC                     l11737:
 19867                           
 19868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 19869                           ;stkvar	_i @ sp[(-18)+10]
 19870  0155FC  50E1               	movf	fsr1l,w,c
 19871  0155FE  0FF8               	addlw	-8
 19872  015600  6ED9               	movwf	fsr2l,c
 19873  015602  50E2               	movf	fsr1h,w,c
 19874  015604  6EDA               	movwf	fsr2h,c
 19875  015606  0EFF               	movlw	255
 19876  015608  22DA               	addwfc	fsr2h,f,c
 19877  01560A  06DE               	decf	postinc2,f,c
 19878  01560C  0E00               	movlw	0
 19879  01560E  5ADD               	subwfb	postdec2,f,c
 19880                           
 19881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 19882  015610  0E0A               	movlw	10
 19883  015612  6EE6               	movwf	postinc1,c
 19884  015614  0E00               	movlw	0
 19885  015616  6EE6               	movwf	postinc1,c
 19886  015618  0E00               	movlw	0
 19887  01561A  6EE6               	movwf	postinc1,c
 19888  01561C  0E00               	movlw	0
 19889  01561E  6EE6               	movwf	postinc1,c
 19890  015620  0E00               	movlw	0
 19891  015622  6EE6               	movwf	postinc1,c
 19892  015624  0E00               	movlw	0
 19893  015626  6EE6               	movwf	postinc1,c
 19894  015628  0E00               	movlw	0
 19895  01562A  6EE6               	movwf	postinc1,c
 19896  01562C  0E00               	movlw	0
 19897  01562E  6EE6               	movwf	postinc1,c
 19898                           
 19899                           ;stkvar	_n @ sp[(-26)+2]
 19900  015630  50E1               	movf	fsr1l,w,c
 19901  015632  0FE8               	addlw	-24
 19902  015634  6ED9               	movwf	fsr2l,c
 19903  015636  50E2               	movf	fsr1h,w,c
 19904  015638  6EDA               	movwf	fsr2h,c
 19905  01563A  0EFF               	movlw	255
 19906  01563C  22DA               	addwfc	fsr2h,f,c
 19907  01563E  006F FF7B FFE6     	movff	postinc2,postinc1
 19908  015644  006F FF7B FFE6     	movff	postinc2,postinc1
 19909  01564A  006F FF7B FFE6     	movff	postinc2,postinc1
 19910  015650  006F FF7B FFE6     	movff	postinc2,postinc1
 19911  015656  006F FF7B FFE6     	movff	postinc2,postinc1
 19912  01565C  006F FF7B FFE6     	movff	postinc2,postinc1
 19913  015662  006F FF7B FFE6     	movff	postinc2,postinc1
 19914  015668  006F FF7B FFE6     	movff	postinc2,postinc1
 19915  01566E  EC47  F0BC         	call	___aomod	;wreg free
 19916  015672  52E5               	movf	postdec1,f,c
 19917  015674  006F FF9C  F018    	movff	indf1,btemp+23
 19918  01567A  52E5               	movf	postdec1,f,c
 19919  01567C  006F FF9C  F017    	movff	indf1,btemp+22
 19920  015682  52E5               	movf	postdec1,f,c
 19921  015684  006F FF9C  F016    	movff	indf1,btemp+21
 19922  01568A  52E5               	movf	postdec1,f,c
 19923  01568C  006F FF9C  F015    	movff	indf1,btemp+20
 19924  015692  52E5               	movf	postdec1,f,c
 19925  015694  006F FF9C  F014    	movff	indf1,btemp+19
 19926  01569A  52E5               	movf	postdec1,f,c
 19927  01569C  006F FF9C  F013    	movff	indf1,btemp+18
 19928  0156A2  52E5               	movf	postdec1,f,c
 19929  0156A4  006F FF9C  F012    	movff	indf1,btemp+17
 19930  0156AA  52E5               	movf	postdec1,f,c
 19931  0156AC  006F FF9C  F011    	movff	indf1,btemp+16
 19932  0156B2  0EF8               	movlw	248
 19933  0156B4  26E1               	addwf	fsr1l,f,c
 19934  0156B6  0EFF               	movlw	255
 19935  0156B8  22E2               	addwfc	fsr1h,f,c
 19936  0156BA  0060  F044  F00B   	movff	btemp+16,btemp+10
 19937  0156C0  0060  F048  F00C   	movff	btemp+17,btemp+11
 19938  0156C6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19939  0156CC  0060  F033  FFE6   	movff	btemp+11,postinc1
 19940  0156D2  EC58  F0D9         	call	_abs	;wreg free
 19941  0156D6  0E30               	movlw	48
 19942  0156D8  2601               	addwf	btemp^0,f,c
 19943                           
 19944                           ;stkvar	_i @ sp[(-18)+10]
 19945  0156DA  0EF8               	movlw	-8
 19946  0156DC  006F FF8C  F00B    	movff	plusw1,btemp+10
 19947  0156E2  0EF9               	movlw	-7
 19948  0156E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 19949  0156EA  0E76               	movlw	low _dbuf
 19950  0156EC  240B               	addwf	(btemp+10)^0,w,c
 19951  0156EE  6ED9               	movwf	fsr2l,c
 19952  0156F0  0E02               	movlw	high _dbuf
 19953  0156F2  200C               	addwfc	(btemp+11)^0,w,c
 19954  0156F4  6EDA               	movwf	fsr2h,c
 19955  0156F6  0060  F007  FFDF   	movff	btemp,indf2
 19956                           
 19957                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 19958                           ;stkvar	_p @ sp[(-18)+16]
 19959  0156FC  50E1               	movf	fsr1l,w,c
 19960  0156FE  0FFE               	addlw	-2
 19961  015700  6ED9               	movwf	fsr2l,c
 19962  015702  50E2               	movf	fsr1h,w,c
 19963  015704  6EDA               	movwf	fsr2h,c
 19964  015706  0EFF               	movlw	255
 19965  015708  22DA               	addwfc	fsr2h,f,c
 19966  01570A  06DE               	decf	postinc2,f,c
 19967  01570C  0E00               	movlw	0
 19968  01570E  5ADD               	subwfb	postdec2,f,c
 19969                           
 19970                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 19971                           ;stkvar	_w @ sp[(-18)+14]
 19972  015710  50E1               	movf	fsr1l,w,c
 19973  015712  0FFC               	addlw	-4
 19974  015714  6ED9               	movwf	fsr2l,c
 19975  015716  50E2               	movf	fsr1h,w,c
 19976  015718  6EDA               	movwf	fsr2h,c
 19977  01571A  0EFF               	movlw	255
 19978  01571C  22DA               	addwfc	fsr2h,f,c
 19979  01571E  06DE               	decf	postinc2,f,c
 19980  015720  0E00               	movlw	0
 19981  015722  5ADD               	subwfb	postdec2,f,c
 19982                           
 19983                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 19984  015724  0E0A               	movlw	10
 19985  015726  6EE6               	movwf	postinc1,c
 19986  015728  0E00               	movlw	0
 19987  01572A  6EE6               	movwf	postinc1,c
 19988  01572C  0E00               	movlw	0
 19989  01572E  6EE6               	movwf	postinc1,c
 19990  015730  0E00               	movlw	0
 19991  015732  6EE6               	movwf	postinc1,c
 19992  015734  0E00               	movlw	0
 19993  015736  6EE6               	movwf	postinc1,c
 19994  015738  0E00               	movlw	0
 19995  01573A  6EE6               	movwf	postinc1,c
 19996  01573C  0E00               	movlw	0
 19997  01573E  6EE6               	movwf	postinc1,c
 19998  015740  0E00               	movlw	0
 19999  015742  6EE6               	movwf	postinc1,c
 20000                           
 20001                           ;stkvar	_n @ sp[(-26)+2]
 20002  015744  50E1               	movf	fsr1l,w,c
 20003  015746  0FE8               	addlw	-24
 20004  015748  6ED9               	movwf	fsr2l,c
 20005  01574A  50E2               	movf	fsr1h,w,c
 20006  01574C  6EDA               	movwf	fsr2h,c
 20007  01574E  0EFF               	movlw	255
 20008  015750  22DA               	addwfc	fsr2h,f,c
 20009  015752  006F FF7B FFE6     	movff	postinc2,postinc1
 20010  015758  006F FF7B FFE6     	movff	postinc2,postinc1
 20011  01575E  006F FF7B FFE6     	movff	postinc2,postinc1
 20012  015764  006F FF7B FFE6     	movff	postinc2,postinc1
 20013  01576A  006F FF7B FFE6     	movff	postinc2,postinc1
 20014  015770  006F FF7B FFE6     	movff	postinc2,postinc1
 20015  015776  006F FF7B FFE6     	movff	postinc2,postinc1
 20016  01577C  006F FF7B FFE6     	movff	postinc2,postinc1
 20017  015782  ECCD  F0B9         	call	___aodiv	;wreg free
 20018  015786  52E5               	movf	postdec1,f,c
 20019  015788  006F FF9C  F018    	movff	indf1,btemp+23
 20020  01578E  52E5               	movf	postdec1,f,c
 20021  015790  006F FF9C  F017    	movff	indf1,btemp+22
 20022  015796  52E5               	movf	postdec1,f,c
 20023  015798  006F FF9C  F016    	movff	indf1,btemp+21
 20024  01579E  52E5               	movf	postdec1,f,c
 20025  0157A0  006F FF9C  F015    	movff	indf1,btemp+20
 20026  0157A6  52E5               	movf	postdec1,f,c
 20027  0157A8  006F FF9C  F014    	movff	indf1,btemp+19
 20028  0157AE  52E5               	movf	postdec1,f,c
 20029  0157B0  006F FF9C  F013    	movff	indf1,btemp+18
 20030  0157B6  52E5               	movf	postdec1,f,c
 20031  0157B8  006F FF9C  F012    	movff	indf1,btemp+17
 20032  0157BE  52E5               	movf	postdec1,f,c
 20033  0157C0  006F FF9C  F011    	movff	indf1,btemp+16
 20034  0157C6  0EF8               	movlw	248
 20035  0157C8  26E1               	addwf	fsr1l,f,c
 20036  0157CA  0EFF               	movlw	255
 20037  0157CC  22E2               	addwfc	fsr1h,f,c
 20038                           
 20039                           ;stkvar	_n @ sp[(-18)+2]
 20040  0157CE  0EF0               	movlw	-16
 20041  0157D0  0060  F047  FFE3   	movff	btemp+16,plusw1
 20042  0157D6  0EF1               	movlw	-15
 20043  0157D8  0060  F04B  FFE3   	movff	btemp+17,plusw1
 20044  0157DE  0EF2               	movlw	-14
 20045  0157E0  0060  F04F  FFE3   	movff	btemp+18,plusw1
 20046  0157E6  0EF3               	movlw	-13
 20047  0157E8  0060  F053  FFE3   	movff	btemp+19,plusw1
 20048  0157EE  0EF4               	movlw	-12
 20049  0157F0  0060  F057  FFE3   	movff	btemp+20,plusw1
 20050  0157F6  0EF5               	movlw	-11
 20051  0157F8  0060  F05B  FFE3   	movff	btemp+21,plusw1
 20052  0157FE  0EF6               	movlw	-10
 20053  015800  0060  F05F  FFE3   	movff	btemp+22,plusw1
 20054  015806  0EF7               	movlw	-9
 20055  015808  0060  F063  FFE3   	movff	btemp+23,plusw1
 20056  01580E                     l11747:
 20057                           
 20058                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 20059                           ;stkvar	_i @ sp[(-18)+10]
 20060  01580E  0EF9               	movlw	-7
 20061  015810  BEE3               	btfsc	plusw1,7,c
 20062  015812  D036               	goto	u10900
 20063  015814  0EF9               	movlw	-7
 20064  015816  50E3               	movf	plusw1,w,c
 20065  015818  E104               	bnz	u10860
 20066  01581A  0EF8               	movlw	-8
 20067  01581C  04E3               	decf	plusw1,w,c
 20068  01581E  A0D8               	btfss	status,0,c
 20069  015820  D02F               	goto	u10900
 20070  015822                     u10860:
 20071                           
 20072                           ;stkvar	_n @ sp[(-18)+2]
 20073  015822  0EF0               	movlw	-16
 20074  015824  50E3               	movf	plusw1,w,c
 20075  015826  E115               	bnz	u10871
 20076  015828  0EF1               	movlw	-15
 20077  01582A  50E3               	movf	plusw1,w,c
 20078  01582C  E112               	bnz	u10871
 20079  01582E  0EF2               	movlw	-14
 20080  015830  50E3               	movf	plusw1,w,c
 20081  015832  E10F               	bnz	u10871
 20082  015834  0EF3               	movlw	-13
 20083  015836  50E3               	movf	plusw1,w,c
 20084  015838  E10C               	bnz	u10871
 20085  01583A  0EF4               	movlw	-12
 20086  01583C  50E3               	movf	plusw1,w,c
 20087  01583E  E109               	bnz	u10871
 20088  015840  0EF5               	movlw	-11
 20089  015842  50E3               	movf	plusw1,w,c
 20090  015844  E106               	bnz	u10871
 20091  015846  0EF6               	movlw	-10
 20092  015848  50E3               	movf	plusw1,w,c
 20093  01584A  E103               	bnz	u10871
 20094  01584C  0EF7               	movlw	-9
 20095  01584E  50E3               	movf	plusw1,w,c
 20096  015850  A4D8               	btfss	status,2,c
 20097  015852                     u10871:
 20098  015852  D6D4               	goto	l11737
 20099                           
 20100                           ;stkvar	_p @ sp[(-18)+16]
 20101  015854  0EFF               	movlw	-1
 20102  015856  BEE3               	btfsc	plusw1,7,c
 20103  015858  D007               	goto	u10880
 20104  01585A  0EFF               	movlw	-1
 20105  01585C  50E3               	movf	plusw1,w,c
 20106  01585E  E103               	bnz	u10881
 20107  015860  0EFE               	movlw	-2
 20108  015862  04E3               	decf	plusw1,w,c
 20109  015864  B0D8               	btfsc	status,0,c
 20110  015866                     u10881:
 20111  015866  D6CA               	goto	l11737
 20112  015868                     u10880:
 20113                           
 20114                           ;stkvar	_w @ sp[(-18)+14]
 20115  015868  0EFD               	movlw	-3
 20116  01586A  BEE3               	btfsc	plusw1,7,c
 20117  01586C  D009               	goto	u10900
 20118  01586E  0EFD               	movlw	-3
 20119  015870  50E3               	movf	plusw1,w,c
 20120  015872  E104               	bnz	u10890
 20121  015874  0EFC               	movlw	-4
 20122  015876  04E3               	decf	plusw1,w,c
 20123  015878  A0D8               	btfss	status,0,c
 20124  01587A  D002               	goto	u10900
 20125  01587C                     u10890:
 20126  01587C  B23E               	btfsc	_flags^0,1,c
 20127  01587E  D6BE               	goto	l11737
 20128  015880                     u10900:
 20129                           
 20130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 20131                           ;stkvar	_s @ sp[(-18)+12]
 20132  015880  0EFA               	movlw	-6
 20133  015882  006F FF8C  F001    	movff	plusw1,btemp
 20134  015888  0EFB               	movlw	-5
 20135  01588A  50E3               	movf	plusw1,w,c
 20136  01588C  1001               	iorwf	btemp^0,w,c
 20137  01588E  A4D8               	btfss	status,2,c
 20138  015890  D002               	goto	u10920
 20139  015892  A43E               	btfss	_flags^0,2,c
 20140  015894  D033               	goto	l11771
 20141  015896                     u10920:
 20142                           
 20143                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 20144                           ;stkvar	_i @ sp[(-18)+10]
 20145  015896  50E1               	movf	fsr1l,w,c
 20146  015898  0FF8               	addlw	-8
 20147  01589A  6ED9               	movwf	fsr2l,c
 20148  01589C  50E2               	movf	fsr1h,w,c
 20149  01589E  6EDA               	movwf	fsr2h,c
 20150  0158A0  0EFF               	movlw	255
 20151  0158A2  22DA               	addwfc	fsr2h,f,c
 20152  0158A4  06DE               	decf	postinc2,f,c
 20153  0158A6  0E00               	movlw	0
 20154  0158A8  5ADD               	subwfb	postdec2,f,c
 20155                           
 20156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 20157                           ;stkvar	_s @ sp[(-18)+12]
 20158  0158AA  0EFA               	movlw	-6
 20159  0158AC  006F FF8C  F001    	movff	plusw1,btemp
 20160  0158B2  0EFB               	movlw	-5
 20161  0158B4  50E3               	movf	plusw1,w,c
 20162  0158B6  1001               	iorwf	btemp^0,w,c
 20163  0158B8  A4D8               	btfss	status,2,c
 20164  0158BA  D002               	goto	l11767
 20165  0158BC  0E2B               	movlw	43
 20166  0158BE  D001               	goto	L24
 20167  0158C0                     l11767:
 20168  0158C0  0E2D               	movlw	45
 20169  0158C2                     L24:
 20170  0158C2  6E0B               	movwf	(btemp+10)^0,c
 20171  0158C4  0E00               	movlw	0
 20172  0158C6  6E0C               	movwf	(btemp+11)^0,c
 20173                           
 20174                           ;stkvar	_dtoa$5468 @ sp[(-18)+0]
 20175  0158C8  0EEE               	movlw	-18
 20176  0158CA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20177  0158D0  0EEF               	movlw	-17
 20178  0158D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 20179                           
 20180                           ;stkvar	_dtoa$5468 @ sp[(-18)+0]
 20181                           ;stkvar	_i @ sp[(-18)+10]
 20182  0158D8  0EF8               	movlw	-8
 20183  0158DA  006F FF8C  F00B    	movff	plusw1,btemp+10
 20184  0158E0  0EF9               	movlw	-7
 20185  0158E2  006F FF8C  F00C    	movff	plusw1,btemp+11
 20186  0158E8  0E76               	movlw	low _dbuf
 20187  0158EA  240B               	addwf	(btemp+10)^0,w,c
 20188  0158EC  6ED9               	movwf	fsr2l,c
 20189  0158EE  0E02               	movlw	high _dbuf
 20190  0158F0  200C               	addwfc	(btemp+11)^0,w,c
 20191  0158F2  6EDA               	movwf	fsr2h,c
 20192  0158F4  0EEE               	movlw	-18
 20193  0158F6  006F FF8F FFDF     	movff	plusw1,indf2
 20194  0158FC                     l11771:
 20195                           
 20196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 20197                           ;stkvar	_w @ sp[(-18)+14]
 20198  0158FC  0EFC               	movlw	-4
 20199  0158FE  006F FF8F FFE6     	movff	plusw1,postinc1
 20200  015904  006F FF8F FFE6     	movff	plusw1,postinc1
 20201                           
 20202                           ;stkvar	_i @ sp[(-20)+10]
 20203  01590A  0E76               	movlw	low _dbuf
 20204  01590C  6E0B               	movwf	(btemp+10)^0,c
 20205  01590E  0E02               	movlw	high _dbuf
 20206  015910  6E0C               	movwf	(btemp+11)^0,c
 20207  015912  0EF6               	movlw	-10
 20208  015914  50E3               	movf	plusw1,w,c
 20209  015916  260B               	addwf	(btemp+10)^0,f,c
 20210  015918  0EF7               	movlw	-9
 20211  01591A  50E3               	movf	plusw1,w,c
 20212  01591C  220C               	addwfc	(btemp+11)^0,f,c
 20213  01591E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 20214  015924  0060  F033  FFE6   	movff	btemp+11,postinc1
 20215                           
 20216                           ;stkvar	_fp @ sp[(-22)+-2]
 20217  01592A  0EE8               	movlw	-24
 20218  01592C  006F FF8F FFE6     	movff	plusw1,postinc1
 20219  015932  006F FF8F FFE6     	movff	plusw1,postinc1
 20220  015938  ECF6  F0CB         	call	_pad	;wreg free
 20221                           
 20222                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 20223  01593C  0EE4               	movlw	228
 20224  01593E  26E1               	addwf	fsr1l,f,c
 20225  015940  0EFF               	movlw	255
 20226  015942  22E2               	addwfc	fsr1h,f,c
 20227  015944  0012               	return		;funcret
 20228  015946                     __end_of_dtoa:
 20229                           	opt callstack 0
 20230                           
 20231 ;; *************** function _abs *****************
 20232 ;; Defined at:
 20233 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 20234 ;; Parameters:    Size  Location     Type
 20235 ;;  a               2  [STACK] int 
 20236 ;; Auto vars:     Size  Location     Type
 20237 ;;		None
 20238 ;; Return value:  Size  Location     Type
 20239 ;;                  2  [STACK] int 
 20240 ;; Registers used:
 20241 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 20242 ;; Tracked objects:
 20243 ;;		On entry : 0/2
 20244 ;;		On exit  : 0/0
 20245 ;;		Unchanged: 0/0
 20246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20251 ;;Total ram usage:        0 bytes
 20252 ;; Hardware stack levels used:    1
 20253 ;; Hardware stack levels required when called:   15
 20254 ;; This function calls:
 20255 ;;		Nothing
 20256 ;; This function is called by:
 20257 ;;		_dtoa
 20258 ;; This function uses a reentrant model
 20259 ;;
 20260                           
 20261                           	psect	text67
 20262  01B2B0                     __ptext67:
 20263                           	opt callstack 0
 20264  01B2B0                     _abs:
 20265                           	opt callstack 0
 20266                           
 20267                           ;stkvar	_a @ sp[(0)+-2]
 20268                           
 20269                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20270                           ;incstack = 0
 20271 ;; hardware stack exceeded
 20272  01B2B0  0EFF               	movlw	-1
 20273  01B2B2  BEE3               	btfsc	plusw1,7,c
 20274  01B2B4  D007               	goto	u5880
 20275  01B2B6  0EFF               	movlw	-1
 20276  01B2B8  50E3               	movf	plusw1,w,c
 20277  01B2BA  E112               	bnz	l7867
 20278  01B2BC  0EFE               	movlw	-2
 20279  01B2BE  04E3               	decf	plusw1,w,c
 20280  01B2C0  B0D8               	btfsc	status,0,c
 20281  01B2C2  D00E               	goto	l7867
 20282  01B2C4                     u5880:
 20283                           
 20284                           ;stkvar	_a @ sp[(0)+-2]
 20285  01B2C4  0EFE               	movlw	-2
 20286  01B2C6  006F FF8C  F001    	movff	plusw1,btemp
 20287  01B2CC  1E01               	comf	btemp^0,f,c
 20288  01B2CE  0EFF               	movlw	-1
 20289  01B2D0  006F FF8C  F002    	movff	plusw1,btemp+1
 20290  01B2D6  1E02               	comf	(btemp+1)^0,f,c
 20291  01B2D8  2A01               	incf	btemp^0,f,c
 20292  01B2DA  B4D8               	btfsc	status,2,c
 20293  01B2DC  2A02               	incf	(btemp+1)^0,f,c
 20294  01B2DE  D008               	goto	l3085
 20295  01B2E0                     l7867:
 20296                           
 20297                           ;stkvar	_a @ sp[(0)+-2]
 20298  01B2E0  0EFE               	movlw	-2
 20299  01B2E2  006F FF8C  F001    	movff	plusw1,btemp
 20300  01B2E8  0EFF               	movlw	-1
 20301  01B2EA  006F FF8C  F002    	movff	plusw1,btemp+1
 20302  01B2F0                     l3085:
 20303                           
 20304                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 20305  01B2F0  52E5               	movf	postdec1,f,c
 20306  01B2F2  52E5               	movf	postdec1,f,c
 20307  01B2F4  0012               	return		;funcret
 20308  01B2F6                     __end_of_abs:
 20309                           	opt callstack 0
 20310                           
 20311 ;; *************** function ___aomod *****************
 20312 ;; Defined at:
 20313 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 20314 ;; Parameters:    Size  Location     Type
 20315 ;;  dividend        8  [STACK] long long 
 20316 ;;  divisor         8  [STACK] long long 
 20317 ;; Auto vars:     Size  Location     Type
 20318 ;;  sign            1  [STACK] unsigned char 
 20319 ;;  counter         1  [STACK] unsigned char 
 20320 ;; Return value:  Size  Location     Type
 20321 ;;                  8  [STACK] long long 
 20322 ;; Registers used:
 20323 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20324 ;; Tracked objects:
 20325 ;;		On entry : 0/2
 20326 ;;		On exit  : 0/0
 20327 ;;		Unchanged: 0/0
 20328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20333 ;;Total ram usage:        0 bytes
 20334 ;; Hardware stack levels used:    1
 20335 ;; Hardware stack levels required when called:   15
 20336 ;; This function calls:
 20337 ;;		Nothing
 20338 ;; This function is called by:
 20339 ;;		_dtoa
 20340 ;; This function uses a reentrant model
 20341 ;;
 20342                           
 20343                           	psect	text68
 20344  01788E                     __ptext68:
 20345                           	opt callstack 0
 20346  01788E                     ___aomod:
 20347                           	opt callstack 0
 20348                           
 20349                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 20350  01788E  52E6               	movf	postinc1,f,c
 20351  017890  52E6               	movf	postinc1,f,c
 20352                           
 20353                           ;stkvar	_sign @ sp[(-2)+0]
 20354                           
 20355                           ;incstack = 0
 20356 ;; hardware stack exceeded
 20357  017892  0EFE               	movlw	-2
 20358  017894  6AE3               	clrf	plusw1,c
 20359                           
 20360                           ;stkvar	_dividend @ sp[(-2)+-8]
 20361  017896  0EFD               	movlw	-3
 20362  017898  AEE3               	btfss	plusw1,7,c
 20363  01789A  D028               	goto	l8025
 20364                           
 20365                           ;stkvar	_dividend @ sp[(-2)+-8]
 20366                           ;stkvar	_dividend @ sp[(-2)+-8]
 20367  01789C  0EF6               	movlw	-10
 20368  01789E  6CE3               	negf	plusw1,c
 20369  0178A0  0EF7               	movlw	-9
 20370  0178A2  1EE3               	comf	plusw1,f,c
 20371  0178A4  0EF8               	movlw	-8
 20372  0178A6  1EE3               	comf	plusw1,f,c
 20373  0178A8  0EF9               	movlw	-7
 20374  0178AA  1EE3               	comf	plusw1,f,c
 20375  0178AC  0EFA               	movlw	-6
 20376  0178AE  1EE3               	comf	plusw1,f,c
 20377  0178B0  0EFB               	movlw	-5
 20378  0178B2  1EE3               	comf	plusw1,f,c
 20379  0178B4  0EFC               	movlw	-4
 20380  0178B6  1EE3               	comf	plusw1,f,c
 20381  0178B8  0EFD               	movlw	-3
 20382  0178BA  1EE3               	comf	plusw1,f,c
 20383  0178BC  E314               	bnc	u6310
 20384  0178BE  0EF7               	movlw	-9
 20385  0178C0  2AE3               	incf	plusw1,f,c
 20386  0178C2  E311               	bnc	u6310
 20387  0178C4  0EF8               	movlw	-8
 20388  0178C6  2AE3               	incf	plusw1,f,c
 20389  0178C8  E30E               	bnc	u6310
 20390  0178CA  0EF9               	movlw	-7
 20391  0178CC  2AE3               	incf	plusw1,f,c
 20392  0178CE  E30B               	bnc	u6310
 20393  0178D0  0EFA               	movlw	-6
 20394  0178D2  2AE3               	incf	plusw1,f,c
 20395  0178D4  E308               	bnc	u6310
 20396  0178D6  0EFB               	movlw	-5
 20397  0178D8  2AE3               	incf	plusw1,f,c
 20398  0178DA  E305               	bnc	u6310
 20399  0178DC  0EFC               	movlw	-4
 20400  0178DE  2AE3               	incf	plusw1,f,c
 20401  0178E0  E302               	bnc	u6310
 20402  0178E2  0EFD               	movlw	-3
 20403  0178E4  2AE3               	incf	plusw1,f,c
 20404  0178E6                     u6310:
 20405                           
 20406                           ;stkvar	_sign @ sp[(-2)+0]
 20407  0178E6  0EFE               	movlw	-2
 20408  0178E8  6AE3               	clrf	plusw1,c
 20409  0178EA  2AE3               	incf	plusw1,f,c
 20410  0178EC                     l8025:
 20411                           
 20412                           ;stkvar	_divisor @ sp[(-2)+-16]
 20413  0178EC  0EF5               	movlw	-11
 20414  0178EE  AEE3               	btfss	plusw1,7,c
 20415  0178F0  D025               	goto	u6330
 20416                           
 20417                           ;stkvar	_divisor @ sp[(-2)+-16]
 20418                           ;stkvar	_divisor @ sp[(-2)+-16]
 20419  0178F2  0EEE               	movlw	-18
 20420  0178F4  6CE3               	negf	plusw1,c
 20421  0178F6  0EEF               	movlw	-17
 20422  0178F8  1EE3               	comf	plusw1,f,c
 20423  0178FA  0EF0               	movlw	-16
 20424  0178FC  1EE3               	comf	plusw1,f,c
 20425  0178FE  0EF1               	movlw	-15
 20426  017900  1EE3               	comf	plusw1,f,c
 20427  017902  0EF2               	movlw	-14
 20428  017904  1EE3               	comf	plusw1,f,c
 20429  017906  0EF3               	movlw	-13
 20430  017908  1EE3               	comf	plusw1,f,c
 20431  01790A  0EF4               	movlw	-12
 20432  01790C  1EE3               	comf	plusw1,f,c
 20433  01790E  0EF5               	movlw	-11
 20434  017910  1EE3               	comf	plusw1,f,c
 20435  017912  E314               	bnc	u6330
 20436  017914  0EEF               	movlw	-17
 20437  017916  2AE3               	incf	plusw1,f,c
 20438  017918  E311               	bnc	u6330
 20439  01791A  0EF0               	movlw	-16
 20440  01791C  2AE3               	incf	plusw1,f,c
 20441  01791E  E30E               	bnc	u6330
 20442  017920  0EF1               	movlw	-15
 20443  017922  2AE3               	incf	plusw1,f,c
 20444  017924  E30B               	bnc	u6330
 20445  017926  0EF2               	movlw	-14
 20446  017928  2AE3               	incf	plusw1,f,c
 20447  01792A  E308               	bnc	u6330
 20448  01792C  0EF3               	movlw	-13
 20449  01792E  2AE3               	incf	plusw1,f,c
 20450  017930  E305               	bnc	u6330
 20451  017932  0EF4               	movlw	-12
 20452  017934  2AE3               	incf	plusw1,f,c
 20453  017936  E302               	bnc	u6330
 20454  017938  0EF5               	movlw	-11
 20455  01793A  2AE3               	incf	plusw1,f,c
 20456  01793C                     u6330:
 20457                           
 20458                           ;stkvar	_divisor @ sp[(-2)+-16]
 20459  01793C  0EEE               	movlw	-18
 20460  01793E  50E3               	movf	plusw1,w,c
 20461  017940  E116               	bnz	u6340
 20462  017942  0EEF               	movlw	-17
 20463  017944  50E3               	movf	plusw1,w,c
 20464  017946  E113               	bnz	u6340
 20465  017948  0EF0               	movlw	-16
 20466  01794A  50E3               	movf	plusw1,w,c
 20467  01794C  E110               	bnz	u6340
 20468  01794E  0EF1               	movlw	-15
 20469  017950  50E3               	movf	plusw1,w,c
 20470  017952  E10D               	bnz	u6340
 20471  017954  0EF2               	movlw	-14
 20472  017956  50E3               	movf	plusw1,w,c
 20473  017958  E10A               	bnz	u6340
 20474  01795A  0EF3               	movlw	-13
 20475  01795C  50E3               	movf	plusw1,w,c
 20476  01795E  E107               	bnz	u6340
 20477  017960  0EF4               	movlw	-12
 20478  017962  50E3               	movf	plusw1,w,c
 20479  017964  E104               	bnz	u6340
 20480  017966  0EF5               	movlw	-11
 20481  017968  50E3               	movf	plusw1,w,c
 20482  01796A  B4D8               	btfsc	status,2,c
 20483  01796C  D075               	goto	u6370
 20484  01796E                     u6340:
 20485                           
 20486                           ;stkvar	_counter @ sp[(-2)+1]
 20487  01796E  0EFF               	movlw	-1
 20488  017970  6AE3               	clrf	plusw1,c
 20489  017972  D012               	goto	L25
 20490  017974                     l8033:
 20491                           
 20492                           ;stkvar	_divisor @ sp[(-2)+-16]
 20493  017974  90D8               	bcf	status,0,c
 20494  017976  0EEE               	movlw	-18
 20495  017978  36E3               	rlcf	plusw1,f,c
 20496  01797A  0EEF               	movlw	-17
 20497  01797C  36E3               	rlcf	plusw1,f,c
 20498  01797E  0EF0               	movlw	-16
 20499  017980  36E3               	rlcf	plusw1,f,c
 20500  017982  0EF1               	movlw	-15
 20501  017984  36E3               	rlcf	plusw1,f,c
 20502  017986  0EF2               	movlw	-14
 20503  017988  36E3               	rlcf	plusw1,f,c
 20504  01798A  0EF3               	movlw	-13
 20505  01798C  36E3               	rlcf	plusw1,f,c
 20506  01798E  0EF4               	movlw	-12
 20507  017990  36E3               	rlcf	plusw1,f,c
 20508  017992  0EF5               	movlw	-11
 20509  017994  36E3               	rlcf	plusw1,f,c
 20510                           
 20511                           ;stkvar	_counter @ sp[(-2)+1]
 20512  017996  0EFF               	movlw	-1
 20513  017998                     L25:
 20514  017998  2AE3               	incf	plusw1,f,c
 20515                           
 20516                           ;stkvar	_divisor @ sp[(-2)+-16]
 20517  01799A  0EF5               	movlw	-11
 20518  01799C  AEE3               	btfss	plusw1,7,c
 20519  01799E  D7EA               	goto	l8033
 20520  0179A0                     u6350:
 20521                           
 20522                           ;stkvar	_divisor @ sp[(-2)+-16]
 20523                           ;stkvar	_dividend @ sp[(-2)+-8]
 20524  0179A0  50E1               	movf	fsr1l,w,c
 20525  0179A2  0FF6               	addlw	-10
 20526  0179A4  6ED9               	movwf	fsr2l,c
 20527  0179A6  50E2               	movf	fsr1h,w,c
 20528  0179A8  6EDA               	movwf	fsr2h,c
 20529  0179AA  0EFF               	movlw	255
 20530  0179AC  22DA               	addwfc	fsr2h,f,c
 20531  0179AE  0EEE               	movlw	-18
 20532  0179B0  50E3               	movf	plusw1,w,c
 20533  0179B2  5CDE               	subwf	postinc2,w,c
 20534  0179B4  0EEF               	movlw	-17
 20535  0179B6  50E3               	movf	plusw1,w,c
 20536  0179B8  58DE               	subwfb	postinc2,w,c
 20537  0179BA  0EF0               	movlw	-16
 20538  0179BC  50E3               	movf	plusw1,w,c
 20539  0179BE  58DE               	subwfb	postinc2,w,c
 20540  0179C0  0EF1               	movlw	-15
 20541  0179C2  50E3               	movf	plusw1,w,c
 20542  0179C4  58DE               	subwfb	postinc2,w,c
 20543  0179C6  0EF2               	movlw	-14
 20544  0179C8  50E3               	movf	plusw1,w,c
 20545  0179CA  58DE               	subwfb	postinc2,w,c
 20546  0179CC  0EF3               	movlw	-13
 20547  0179CE  50E3               	movf	plusw1,w,c
 20548  0179D0  58DE               	subwfb	postinc2,w,c
 20549  0179D2  0EF4               	movlw	-12
 20550  0179D4  50E3               	movf	plusw1,w,c
 20551  0179D6  58DE               	subwfb	postinc2,w,c
 20552  0179D8  0EF5               	movlw	-11
 20553  0179DA  50E3               	movf	plusw1,w,c
 20554  0179DC  58DE               	subwfb	postinc2,w,c
 20555  0179DE  A0D8               	btfss	status,0,c
 20556  0179E0  D01F               	goto	l8041
 20557                           
 20558                           ;stkvar	_divisor @ sp[(-2)+-16]
 20559                           ;stkvar	_dividend @ sp[(-2)+-8]
 20560  0179E2  50E1               	movf	fsr1l,w,c
 20561  0179E4  0FF6               	addlw	-10
 20562  0179E6  6ED9               	movwf	fsr2l,c
 20563  0179E8  50E2               	movf	fsr1h,w,c
 20564  0179EA  6EDA               	movwf	fsr2h,c
 20565  0179EC  0EFF               	movlw	255
 20566  0179EE  22DA               	addwfc	fsr2h,f,c
 20567  0179F0  0EEE               	movlw	-18
 20568  0179F2  50E3               	movf	plusw1,w,c
 20569  0179F4  5EDE               	subwf	postinc2,f,c
 20570  0179F6  0EEF               	movlw	-17
 20571  0179F8  50E3               	movf	plusw1,w,c
 20572  0179FA  5ADE               	subwfb	postinc2,f,c
 20573  0179FC  0EF0               	movlw	-16
 20574  0179FE  50E3               	movf	plusw1,w,c
 20575  017A00  5ADE               	subwfb	postinc2,f,c
 20576  017A02  0EF1               	movlw	-15
 20577  017A04  50E3               	movf	plusw1,w,c
 20578  017A06  5ADE               	subwfb	postinc2,f,c
 20579  017A08  0EF2               	movlw	-14
 20580  017A0A  50E3               	movf	plusw1,w,c
 20581  017A0C  5ADE               	subwfb	postinc2,f,c
 20582  017A0E  0EF3               	movlw	-13
 20583  017A10  50E3               	movf	plusw1,w,c
 20584  017A12  5ADE               	subwfb	postinc2,f,c
 20585  017A14  0EF4               	movlw	-12
 20586  017A16  50E3               	movf	plusw1,w,c
 20587  017A18  5ADE               	subwfb	postinc2,f,c
 20588  017A1A  0EF5               	movlw	-11
 20589  017A1C  50E3               	movf	plusw1,w,c
 20590  017A1E  5ADE               	subwfb	postinc2,f,c
 20591  017A20                     l8041:
 20592                           
 20593                           ;stkvar	_divisor @ sp[(-2)+-16]
 20594  017A20  90D8               	bcf	status,0,c
 20595  017A22  0EF5               	movlw	-11
 20596  017A24  32E3               	rrcf	plusw1,f,c
 20597  017A26  0EF4               	movlw	-12
 20598  017A28  32E3               	rrcf	plusw1,f,c
 20599  017A2A  0EF3               	movlw	-13
 20600  017A2C  32E3               	rrcf	plusw1,f,c
 20601  017A2E  0EF2               	movlw	-14
 20602  017A30  32E3               	rrcf	plusw1,f,c
 20603  017A32  0EF1               	movlw	-15
 20604  017A34  32E3               	rrcf	plusw1,f,c
 20605  017A36  0EF0               	movlw	-16
 20606  017A38  32E3               	rrcf	plusw1,f,c
 20607  017A3A  0EEF               	movlw	-17
 20608  017A3C  32E3               	rrcf	plusw1,f,c
 20609  017A3E  0EEE               	movlw	-18
 20610  017A40  32E3               	rrcf	plusw1,f,c
 20611                           
 20612                           ;stkvar	_counter @ sp[(-2)+1]
 20613  017A42  0EFF               	movlw	-1
 20614  017A44  50E3               	movf	plusw1,w,c
 20615  017A46  6E01               	movwf	btemp^0,c
 20616  017A48  0E01               	movlw	1
 20617  017A4A  5E01               	subwf	btemp^0,f,c
 20618  017A4C  0EFF               	movlw	-1
 20619  017A4E  0060  F007  FFE3   	movff	btemp,plusw1
 20620  017A54  A4D8               	btfss	status,2,c
 20621  017A56  D7A4               	goto	u6350
 20622  017A58                     u6370:
 20623                           
 20624                           ;stkvar	_sign @ sp[(-2)+0]
 20625  017A58  0EFE               	movlw	-2
 20626  017A5A  50E3               	movf	plusw1,w,c
 20627  017A5C  B4D8               	btfsc	status,2,c
 20628  017A5E  D025               	goto	u6390
 20629                           
 20630                           ;stkvar	_dividend @ sp[(-2)+-8]
 20631                           ;stkvar	_dividend @ sp[(-2)+-8]
 20632  017A60  0EF6               	movlw	-10
 20633  017A62  6CE3               	negf	plusw1,c
 20634  017A64  0EF7               	movlw	-9
 20635  017A66  1EE3               	comf	plusw1,f,c
 20636  017A68  0EF8               	movlw	-8
 20637  017A6A  1EE3               	comf	plusw1,f,c
 20638  017A6C  0EF9               	movlw	-7
 20639  017A6E  1EE3               	comf	plusw1,f,c
 20640  017A70  0EFA               	movlw	-6
 20641  017A72  1EE3               	comf	plusw1,f,c
 20642  017A74  0EFB               	movlw	-5
 20643  017A76  1EE3               	comf	plusw1,f,c
 20644  017A78  0EFC               	movlw	-4
 20645  017A7A  1EE3               	comf	plusw1,f,c
 20646  017A7C  0EFD               	movlw	-3
 20647  017A7E  1EE3               	comf	plusw1,f,c
 20648  017A80  E314               	bnc	u6390
 20649  017A82  0EF7               	movlw	-9
 20650  017A84  2AE3               	incf	plusw1,f,c
 20651  017A86  E311               	bnc	u6390
 20652  017A88  0EF8               	movlw	-8
 20653  017A8A  2AE3               	incf	plusw1,f,c
 20654  017A8C  E30E               	bnc	u6390
 20655  017A8E  0EF9               	movlw	-7
 20656  017A90  2AE3               	incf	plusw1,f,c
 20657  017A92  E30B               	bnc	u6390
 20658  017A94  0EFA               	movlw	-6
 20659  017A96  2AE3               	incf	plusw1,f,c
 20660  017A98  E308               	bnc	u6390
 20661  017A9A  0EFB               	movlw	-5
 20662  017A9C  2AE3               	incf	plusw1,f,c
 20663  017A9E  E305               	bnc	u6390
 20664  017AA0  0EFC               	movlw	-4
 20665  017AA2  2AE3               	incf	plusw1,f,c
 20666  017AA4  E302               	bnc	u6390
 20667  017AA6  0EFD               	movlw	-3
 20668  017AA8  2AE3               	incf	plusw1,f,c
 20669  017AAA                     u6390:
 20670                           
 20671                           ;stkvar	_dividend @ sp[(-2)+-8]
 20672  017AAA  0EF6               	movlw	246
 20673  017AAC  24E1               	addwf	fsr1l,w,c
 20674  017AAE  6ED9               	movwf	fsr2l,c
 20675  017AB0  0EFF               	movlw	255
 20676  017AB2  20E2               	addwfc	fsr1h,w,c
 20677  017AB4  6EDA               	movwf	fsr2h,c
 20678                           
 20679                           ;stkvar	?___aomod @ sp[(-2)+-8]
 20680  017AB6  0E08               	movlw	8
 20681  017AB8  6E01               	movwf	btemp^0,c
 20682  017ABA  0EF6               	movlw	-10
 20683  017ABC                     us640999:
 20684  017ABC  006F FF7B FFE3     	movff	postinc2,plusw1
 20685  017AC2  28E8               	incf	wreg,w,c
 20686  017AC4  2E01               	decfsz	btemp^0,f,c
 20687  017AC6  D7FA               	bra	us640999
 20688                           
 20689                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 20690  017AC8  52E5               	movf	postdec1,f,c
 20691  017ACA  52E5               	movf	postdec1,f,c
 20692  017ACC  0012               	return		;funcret
 20693  017ACE                     __end_of___aomod:
 20694                           	opt callstack 0
 20695                           
 20696 ;; *************** function ___aodiv *****************
 20697 ;; Defined at:
 20698 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 20699 ;; Parameters:    Size  Location     Type
 20700 ;;  dividend        8  [STACK] long long 
 20701 ;;  divisor         8  [STACK] long long 
 20702 ;; Auto vars:     Size  Location     Type
 20703 ;;  quotient        8  [STACK] long long 
 20704 ;;  sign            1  [STACK] unsigned char 
 20705 ;;  counter         1  [STACK] unsigned char 
 20706 ;; Return value:  Size  Location     Type
 20707 ;;                  8  [STACK] long long 
 20708 ;; Registers used:
 20709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20710 ;; Tracked objects:
 20711 ;;		On entry : 0/2
 20712 ;;		On exit  : 0/0
 20713 ;;		Unchanged: 0/0
 20714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20719 ;;Total ram usage:        0 bytes
 20720 ;; Hardware stack levels used:    1
 20721 ;; Hardware stack levels required when called:   15
 20722 ;; This function calls:
 20723 ;;		Nothing
 20724 ;; This function is called by:
 20725 ;;		_dtoa
 20726 ;; This function uses a reentrant model
 20727 ;;
 20728                           
 20729                           	psect	text69
 20730  01739A                     __ptext69:
 20731                           	opt callstack 0
 20732  01739A                     ___aodiv:
 20733                           	opt callstack 0
 20734                           
 20735                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 20736  01739A  0E0A               	movlw	10
 20737  01739C  26E1               	addwf	fsr1l,f,c
 20738  01739E  0E00               	movlw	0
 20739  0173A0  22E2               	addwfc	fsr1h,f,c
 20740                           
 20741                           ;stkvar	_sign @ sp[(-10)+8]
 20742                           
 20743                           ;incstack = 0
 20744 ;; hardware stack exceeded
 20745  0173A2  0EFE               	movlw	-2
 20746  0173A4  6AE3               	clrf	plusw1,c
 20747                           
 20748                           ;stkvar	_divisor @ sp[(-10)+-16]
 20749  0173A6  0EED               	movlw	-19
 20750  0173A8  AEE3               	btfss	plusw1,7,c
 20751  0173AA  D028               	goto	l7981
 20752                           
 20753                           ;stkvar	_divisor @ sp[(-10)+-16]
 20754                           ;stkvar	_divisor @ sp[(-10)+-16]
 20755  0173AC  0EE6               	movlw	-26
 20756  0173AE  6CE3               	negf	plusw1,c
 20757  0173B0  0EE7               	movlw	-25
 20758  0173B2  1EE3               	comf	plusw1,f,c
 20759  0173B4  0EE8               	movlw	-24
 20760  0173B6  1EE3               	comf	plusw1,f,c
 20761  0173B8  0EE9               	movlw	-23
 20762  0173BA  1EE3               	comf	plusw1,f,c
 20763  0173BC  0EEA               	movlw	-22
 20764  0173BE  1EE3               	comf	plusw1,f,c
 20765  0173C0  0EEB               	movlw	-21
 20766  0173C2  1EE3               	comf	plusw1,f,c
 20767  0173C4  0EEC               	movlw	-20
 20768  0173C6  1EE3               	comf	plusw1,f,c
 20769  0173C8  0EED               	movlw	-19
 20770  0173CA  1EE3               	comf	plusw1,f,c
 20771  0173CC  E314               	bnc	u6190
 20772  0173CE  0EE7               	movlw	-25
 20773  0173D0  2AE3               	incf	plusw1,f,c
 20774  0173D2  E311               	bnc	u6190
 20775  0173D4  0EE8               	movlw	-24
 20776  0173D6  2AE3               	incf	plusw1,f,c
 20777  0173D8  E30E               	bnc	u6190
 20778  0173DA  0EE9               	movlw	-23
 20779  0173DC  2AE3               	incf	plusw1,f,c
 20780  0173DE  E30B               	bnc	u6190
 20781  0173E0  0EEA               	movlw	-22
 20782  0173E2  2AE3               	incf	plusw1,f,c
 20783  0173E4  E308               	bnc	u6190
 20784  0173E6  0EEB               	movlw	-21
 20785  0173E8  2AE3               	incf	plusw1,f,c
 20786  0173EA  E305               	bnc	u6190
 20787  0173EC  0EEC               	movlw	-20
 20788  0173EE  2AE3               	incf	plusw1,f,c
 20789  0173F0  E302               	bnc	u6190
 20790  0173F2  0EED               	movlw	-19
 20791  0173F4  2AE3               	incf	plusw1,f,c
 20792  0173F6                     u6190:
 20793                           
 20794                           ;stkvar	_sign @ sp[(-10)+8]
 20795  0173F6  0EFE               	movlw	-2
 20796  0173F8  6AE3               	clrf	plusw1,c
 20797  0173FA  2AE3               	incf	plusw1,f,c
 20798  0173FC                     l7981:
 20799                           
 20800                           ;stkvar	_dividend @ sp[(-10)+-8]
 20801  0173FC  0EF5               	movlw	-11
 20802  0173FE  AEE3               	btfss	plusw1,7,c
 20803  017400  D027               	goto	l7987
 20804                           
 20805                           ;stkvar	_dividend @ sp[(-10)+-8]
 20806                           ;stkvar	_dividend @ sp[(-10)+-8]
 20807  017402  0EEE               	movlw	-18
 20808  017404  6CE3               	negf	plusw1,c
 20809  017406  0EEF               	movlw	-17
 20810  017408  1EE3               	comf	plusw1,f,c
 20811  01740A  0EF0               	movlw	-16
 20812  01740C  1EE3               	comf	plusw1,f,c
 20813  01740E  0EF1               	movlw	-15
 20814  017410  1EE3               	comf	plusw1,f,c
 20815  017412  0EF2               	movlw	-14
 20816  017414  1EE3               	comf	plusw1,f,c
 20817  017416  0EF3               	movlw	-13
 20818  017418  1EE3               	comf	plusw1,f,c
 20819  01741A  0EF4               	movlw	-12
 20820  01741C  1EE3               	comf	plusw1,f,c
 20821  01741E  0EF5               	movlw	-11
 20822  017420  1EE3               	comf	plusw1,f,c
 20823  017422  E314               	bnc	u6210
 20824  017424  0EEF               	movlw	-17
 20825  017426  2AE3               	incf	plusw1,f,c
 20826  017428  E311               	bnc	u6210
 20827  01742A  0EF0               	movlw	-16
 20828  01742C  2AE3               	incf	plusw1,f,c
 20829  01742E  E30E               	bnc	u6210
 20830  017430  0EF1               	movlw	-15
 20831  017432  2AE3               	incf	plusw1,f,c
 20832  017434  E30B               	bnc	u6210
 20833  017436  0EF2               	movlw	-14
 20834  017438  2AE3               	incf	plusw1,f,c
 20835  01743A  E308               	bnc	u6210
 20836  01743C  0EF3               	movlw	-13
 20837  01743E  2AE3               	incf	plusw1,f,c
 20838  017440  E305               	bnc	u6210
 20839  017442  0EF4               	movlw	-12
 20840  017444  2AE3               	incf	plusw1,f,c
 20841  017446  E302               	bnc	u6210
 20842  017448  0EF5               	movlw	-11
 20843  01744A  2AE3               	incf	plusw1,f,c
 20844  01744C                     u6210:
 20845                           
 20846                           ;stkvar	_sign @ sp[(-10)+8]
 20847  01744C  0EFE               	movlw	-2
 20848  01744E  70E3               	btg	plusw1,0,c
 20849  017450                     l7987:
 20850                           
 20851                           ;stkvar	_quotient @ sp[(-10)+0]
 20852  017450  0E07               	movlw	7
 20853  017452  6E01               	movwf	btemp^0,c
 20854  017454  0EF6               	movlw	-10
 20855  017456                     u6221:
 20856  017456  6AE3               	clrf	plusw1,c
 20857  017458  2AE8               	incf	wreg,f,c
 20858  01745A  0601               	decf	btemp^0,f,c
 20859  01745C  E2FC               	bc	u6221
 20860                           
 20861                           ;stkvar	_divisor @ sp[(-10)+-16]
 20862  01745E  0EE6               	movlw	-26
 20863  017460  50E3               	movf	plusw1,w,c
 20864  017462  E116               	bnz	u6230
 20865  017464  0EE7               	movlw	-25
 20866  017466  50E3               	movf	plusw1,w,c
 20867  017468  E113               	bnz	u6230
 20868  01746A  0EE8               	movlw	-24
 20869  01746C  50E3               	movf	plusw1,w,c
 20870  01746E  E110               	bnz	u6230
 20871  017470  0EE9               	movlw	-23
 20872  017472  50E3               	movf	plusw1,w,c
 20873  017474  E10D               	bnz	u6230
 20874  017476  0EEA               	movlw	-22
 20875  017478  50E3               	movf	plusw1,w,c
 20876  01747A  E10A               	bnz	u6230
 20877  01747C  0EEB               	movlw	-21
 20878  01747E  50E3               	movf	plusw1,w,c
 20879  017480  E107               	bnz	u6230
 20880  017482  0EEC               	movlw	-20
 20881  017484  50E3               	movf	plusw1,w,c
 20882  017486  E104               	bnz	u6230
 20883  017488  0EED               	movlw	-19
 20884  01748A  50E3               	movf	plusw1,w,c
 20885  01748C  B4D8               	btfsc	status,2,c
 20886  01748E  D088               	goto	u6260
 20887  017490                     u6230:
 20888                           
 20889                           ;stkvar	_counter @ sp[(-10)+9]
 20890  017490  0EFF               	movlw	-1
 20891  017492  6AE3               	clrf	plusw1,c
 20892  017494  D012               	goto	L26
 20893  017496                     l7993:
 20894                           
 20895                           ;stkvar	_divisor @ sp[(-10)+-16]
 20896  017496  90D8               	bcf	status,0,c
 20897  017498  0EE6               	movlw	-26
 20898  01749A  36E3               	rlcf	plusw1,f,c
 20899  01749C  0EE7               	movlw	-25
 20900  01749E  36E3               	rlcf	plusw1,f,c
 20901  0174A0  0EE8               	movlw	-24
 20902  0174A2  36E3               	rlcf	plusw1,f,c
 20903  0174A4  0EE9               	movlw	-23
 20904  0174A6  36E3               	rlcf	plusw1,f,c
 20905  0174A8  0EEA               	movlw	-22
 20906  0174AA  36E3               	rlcf	plusw1,f,c
 20907  0174AC  0EEB               	movlw	-21
 20908  0174AE  36E3               	rlcf	plusw1,f,c
 20909  0174B0  0EEC               	movlw	-20
 20910  0174B2  36E3               	rlcf	plusw1,f,c
 20911  0174B4  0EED               	movlw	-19
 20912  0174B6  36E3               	rlcf	plusw1,f,c
 20913                           
 20914                           ;stkvar	_counter @ sp[(-10)+9]
 20915  0174B8  0EFF               	movlw	-1
 20916  0174BA                     L26:
 20917  0174BA  2AE3               	incf	plusw1,f,c
 20918                           
 20919                           ;stkvar	_divisor @ sp[(-10)+-16]
 20920  0174BC  0EED               	movlw	-19
 20921  0174BE  AEE3               	btfss	plusw1,7,c
 20922  0174C0  D7EA               	goto	l7993
 20923  0174C2                     u6240:
 20924                           
 20925                           ;stkvar	_quotient @ sp[(-10)+0]
 20926  0174C2  90D8               	bcf	status,0,c
 20927  0174C4  0EF6               	movlw	-10
 20928  0174C6  36E3               	rlcf	plusw1,f,c
 20929  0174C8  0EF7               	movlw	-9
 20930  0174CA  36E3               	rlcf	plusw1,f,c
 20931  0174CC  0EF8               	movlw	-8
 20932  0174CE  36E3               	rlcf	plusw1,f,c
 20933  0174D0  0EF9               	movlw	-7
 20934  0174D2  36E3               	rlcf	plusw1,f,c
 20935  0174D4  0EFA               	movlw	-6
 20936  0174D6  36E3               	rlcf	plusw1,f,c
 20937  0174D8  0EFB               	movlw	-5
 20938  0174DA  36E3               	rlcf	plusw1,f,c
 20939  0174DC  0EFC               	movlw	-4
 20940  0174DE  36E3               	rlcf	plusw1,f,c
 20941  0174E0  0EFD               	movlw	-3
 20942  0174E2  36E3               	rlcf	plusw1,f,c
 20943                           
 20944                           ;stkvar	_divisor @ sp[(-10)+-16]
 20945                           ;stkvar	_dividend @ sp[(-10)+-8]
 20946  0174E4  50E1               	movf	fsr1l,w,c
 20947  0174E6  0FEE               	addlw	-18
 20948  0174E8  6ED9               	movwf	fsr2l,c
 20949  0174EA  50E2               	movf	fsr1h,w,c
 20950  0174EC  6EDA               	movwf	fsr2h,c
 20951  0174EE  0EFF               	movlw	255
 20952  0174F0  22DA               	addwfc	fsr2h,f,c
 20953  0174F2  0EE6               	movlw	-26
 20954  0174F4  50E3               	movf	plusw1,w,c
 20955  0174F6  5CDE               	subwf	postinc2,w,c
 20956  0174F8  0EE7               	movlw	-25
 20957  0174FA  50E3               	movf	plusw1,w,c
 20958  0174FC  58DE               	subwfb	postinc2,w,c
 20959  0174FE  0EE8               	movlw	-24
 20960  017500  50E3               	movf	plusw1,w,c
 20961  017502  58DE               	subwfb	postinc2,w,c
 20962  017504  0EE9               	movlw	-23
 20963  017506  50E3               	movf	plusw1,w,c
 20964  017508  58DE               	subwfb	postinc2,w,c
 20965  01750A  0EEA               	movlw	-22
 20966  01750C  50E3               	movf	plusw1,w,c
 20967  01750E  58DE               	subwfb	postinc2,w,c
 20968  017510  0EEB               	movlw	-21
 20969  017512  50E3               	movf	plusw1,w,c
 20970  017514  58DE               	subwfb	postinc2,w,c
 20971  017516  0EEC               	movlw	-20
 20972  017518  50E3               	movf	plusw1,w,c
 20973  01751A  58DE               	subwfb	postinc2,w,c
 20974  01751C  0EED               	movlw	-19
 20975  01751E  50E3               	movf	plusw1,w,c
 20976  017520  58DE               	subwfb	postinc2,w,c
 20977  017522  A0D8               	btfss	status,0,c
 20978  017524  D021               	goto	l8005
 20979                           
 20980                           ;stkvar	_divisor @ sp[(-10)+-16]
 20981                           ;stkvar	_dividend @ sp[(-10)+-8]
 20982  017526  50E1               	movf	fsr1l,w,c
 20983  017528  0FEE               	addlw	-18
 20984  01752A  6ED9               	movwf	fsr2l,c
 20985  01752C  50E2               	movf	fsr1h,w,c
 20986  01752E  6EDA               	movwf	fsr2h,c
 20987  017530  0EFF               	movlw	255
 20988  017532  22DA               	addwfc	fsr2h,f,c
 20989  017534  0EE6               	movlw	-26
 20990  017536  50E3               	movf	plusw1,w,c
 20991  017538  5EDE               	subwf	postinc2,f,c
 20992  01753A  0EE7               	movlw	-25
 20993  01753C  50E3               	movf	plusw1,w,c
 20994  01753E  5ADE               	subwfb	postinc2,f,c
 20995  017540  0EE8               	movlw	-24
 20996  017542  50E3               	movf	plusw1,w,c
 20997  017544  5ADE               	subwfb	postinc2,f,c
 20998  017546  0EE9               	movlw	-23
 20999  017548  50E3               	movf	plusw1,w,c
 21000  01754A  5ADE               	subwfb	postinc2,f,c
 21001  01754C  0EEA               	movlw	-22
 21002  01754E  50E3               	movf	plusw1,w,c
 21003  017550  5ADE               	subwfb	postinc2,f,c
 21004  017552  0EEB               	movlw	-21
 21005  017554  50E3               	movf	plusw1,w,c
 21006  017556  5ADE               	subwfb	postinc2,f,c
 21007  017558  0EEC               	movlw	-20
 21008  01755A  50E3               	movf	plusw1,w,c
 21009  01755C  5ADE               	subwfb	postinc2,f,c
 21010  01755E  0EED               	movlw	-19
 21011  017560  50E3               	movf	plusw1,w,c
 21012  017562  5ADE               	subwfb	postinc2,f,c
 21013                           
 21014                           ;stkvar	_quotient @ sp[(-10)+0]
 21015  017564  0EF6               	movlw	-10
 21016  017566  80E3               	bsf	plusw1,0,c
 21017  017568                     l8005:
 21018                           
 21019                           ;stkvar	_divisor @ sp[(-10)+-16]
 21020  017568  90D8               	bcf	status,0,c
 21021  01756A  0EED               	movlw	-19
 21022  01756C  32E3               	rrcf	plusw1,f,c
 21023  01756E  0EEC               	movlw	-20
 21024  017570  32E3               	rrcf	plusw1,f,c
 21025  017572  0EEB               	movlw	-21
 21026  017574  32E3               	rrcf	plusw1,f,c
 21027  017576  0EEA               	movlw	-22
 21028  017578  32E3               	rrcf	plusw1,f,c
 21029  01757A  0EE9               	movlw	-23
 21030  01757C  32E3               	rrcf	plusw1,f,c
 21031  01757E  0EE8               	movlw	-24
 21032  017580  32E3               	rrcf	plusw1,f,c
 21033  017582  0EE7               	movlw	-25
 21034  017584  32E3               	rrcf	plusw1,f,c
 21035  017586  0EE6               	movlw	-26
 21036  017588  32E3               	rrcf	plusw1,f,c
 21037                           
 21038                           ;stkvar	_counter @ sp[(-10)+9]
 21039  01758A  0EFF               	movlw	-1
 21040  01758C  50E3               	movf	plusw1,w,c
 21041  01758E  6E01               	movwf	btemp^0,c
 21042  017590  0E01               	movlw	1
 21043  017592  5E01               	subwf	btemp^0,f,c
 21044  017594  0EFF               	movlw	-1
 21045  017596  0060  F007  FFE3   	movff	btemp,plusw1
 21046  01759C  A4D8               	btfss	status,2,c
 21047  01759E  D791               	goto	u6240
 21048  0175A0                     u6260:
 21049                           
 21050                           ;stkvar	_sign @ sp[(-10)+8]
 21051  0175A0  0EFE               	movlw	-2
 21052  0175A2  50E3               	movf	plusw1,w,c
 21053  0175A4  B4D8               	btfsc	status,2,c
 21054  0175A6  D025               	goto	u6280
 21055                           
 21056                           ;stkvar	_quotient @ sp[(-10)+0]
 21057                           ;stkvar	_quotient @ sp[(-10)+0]
 21058  0175A8  0EF6               	movlw	-10
 21059  0175AA  6CE3               	negf	plusw1,c
 21060  0175AC  0EF7               	movlw	-9
 21061  0175AE  1EE3               	comf	plusw1,f,c
 21062  0175B0  0EF8               	movlw	-8
 21063  0175B2  1EE3               	comf	plusw1,f,c
 21064  0175B4  0EF9               	movlw	-7
 21065  0175B6  1EE3               	comf	plusw1,f,c
 21066  0175B8  0EFA               	movlw	-6
 21067  0175BA  1EE3               	comf	plusw1,f,c
 21068  0175BC  0EFB               	movlw	-5
 21069  0175BE  1EE3               	comf	plusw1,f,c
 21070  0175C0  0EFC               	movlw	-4
 21071  0175C2  1EE3               	comf	plusw1,f,c
 21072  0175C4  0EFD               	movlw	-3
 21073  0175C6  1EE3               	comf	plusw1,f,c
 21074  0175C8  E314               	bnc	u6280
 21075  0175CA  0EF7               	movlw	-9
 21076  0175CC  2AE3               	incf	plusw1,f,c
 21077  0175CE  E311               	bnc	u6280
 21078  0175D0  0EF8               	movlw	-8
 21079  0175D2  2AE3               	incf	plusw1,f,c
 21080  0175D4  E30E               	bnc	u6280
 21081  0175D6  0EF9               	movlw	-7
 21082  0175D8  2AE3               	incf	plusw1,f,c
 21083  0175DA  E30B               	bnc	u6280
 21084  0175DC  0EFA               	movlw	-6
 21085  0175DE  2AE3               	incf	plusw1,f,c
 21086  0175E0  E308               	bnc	u6280
 21087  0175E2  0EFB               	movlw	-5
 21088  0175E4  2AE3               	incf	plusw1,f,c
 21089  0175E6  E305               	bnc	u6280
 21090  0175E8  0EFC               	movlw	-4
 21091  0175EA  2AE3               	incf	plusw1,f,c
 21092  0175EC  E302               	bnc	u6280
 21093  0175EE  0EFD               	movlw	-3
 21094  0175F0  2AE3               	incf	plusw1,f,c
 21095  0175F2                     u6280:
 21096                           
 21097                           ;stkvar	_quotient @ sp[(-10)+0]
 21098  0175F2  0EF6               	movlw	246
 21099  0175F4  24E1               	addwf	fsr1l,w,c
 21100  0175F6  6ED9               	movwf	fsr2l,c
 21101  0175F8  0EFF               	movlw	255
 21102  0175FA  20E2               	addwfc	fsr1h,w,c
 21103  0175FC  6EDA               	movwf	fsr2h,c
 21104                           
 21105                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 21106  0175FE  0E08               	movlw	8
 21107  017600  6E01               	movwf	btemp^0,c
 21108  017602  0EEE               	movlw	-18
 21109  017604                     us629999:
 21110  017604  006F FF7B FFE3     	movff	postinc2,plusw1
 21111  01760A  28E8               	incf	wreg,w,c
 21112  01760C  2E01               	decfsz	btemp^0,f,c
 21113  01760E  D7FA               	bra	us629999
 21114                           
 21115                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 21116  017610  0EF6               	movlw	246
 21117  017612  26E1               	addwf	fsr1l,f,c
 21118  017614  0EFF               	movlw	255
 21119  017616  22E2               	addwfc	fsr1h,f,c
 21120  017618  0012               	return		;funcret
 21121  01761A                     __end_of___aodiv:
 21122                           	opt callstack 0
 21123                           
 21124 ;; *************** function _ctoa *****************
 21125 ;; Defined at:
 21126 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21127 ;; Parameters:    Size  Location     Type
 21128 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21129 ;;		 -> f(6), NULL(0), 
 21130 ;;  c               1  [STACK] unsigned char 
 21131 ;; Auto vars:     Size  Location     Type
 21132 ;;  w               2  [STACK] int 
 21133 ;;  l               2    0        int 
 21134 ;; Return value:  Size  Location     Type
 21135 ;;                  2  [STACK] int 
 21136 ;; Registers used:
 21137 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 21138 ;; Tracked objects:
 21139 ;;		On entry : 0/0
 21140 ;;		On exit  : 0/0
 21141 ;;		Unchanged: 0/0
 21142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21147 ;;Total ram usage:        0 bytes
 21148 ;; Hardware stack levels used:    1
 21149 ;; Hardware stack levels required when called:   20
 21150 ;; This function calls:
 21151 ;;		_pad
 21152 ;; This function is called by:
 21153 ;;		_vfpfcnvrt
 21154 ;; This function uses a reentrant model
 21155 ;;
 21156                           
 21157                           	psect	text70
 21158  01A8E4                     __ptext70:
 21159                           	opt callstack 0
 21160  01A8E4                     _ctoa:
 21161                           	opt callstack 0
 21162                           
 21163                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21164  01A8E4  52E6               	movf	postinc1,f,c
 21165  01A8E6  52E6               	movf	postinc1,f,c
 21166                           
 21167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 21168                           
 21169                           ;incstack = 0
 21170 ;; hardware stack exceeded
 21171  01A8E8  503A               	movf	_width^0,w,c
 21172  01A8EA  103B               	iorwf	(_width+1)^0,w,c
 21173  01A8EC  A4D8               	btfss	status,2,c
 21174  01A8EE  D009               	goto	l11699
 21175                           
 21176                           ;stkvar	_w @ sp[(-2)+0]
 21177  01A8F0  0EFE               	movlw	-2
 21178  01A8F2  0060  F0EB  FFE3   	movff	_width,plusw1
 21179  01A8F8  0EFF               	movlw	-1
 21180  01A8FA  0060  F0EF  FFE3   	movff	_width+1,plusw1
 21181  01A900  D016               	goto	l11701
 21182  01A902                     l11699:
 21183  01A902  0EFF               	movlw	255
 21184  01A904  6E0B               	movwf	(btemp+10)^0,c
 21185  01A906  0EFF               	movlw	255
 21186  01A908  6E0C               	movwf	(btemp+11)^0,c
 21187  01A90A  0060  F0E8  F009   	movff	_width,btemp+8
 21188  01A910  0060  F0EC  F00A   	movff	_width+1,btemp+9
 21189  01A916  500B               	movf	(btemp+10)^0,w,c
 21190  01A918  2609               	addwf	(btemp+8)^0,f,c
 21191  01A91A  500C               	movf	(btemp+11)^0,w,c
 21192  01A91C  220A               	addwfc	(btemp+9)^0,f,c
 21193                           
 21194                           ;stkvar	_w @ sp[(-2)+0]
 21195  01A91E  0EFE               	movlw	-2
 21196  01A920  0060  F027  FFE3   	movff	btemp+8,plusw1
 21197  01A926  0EFF               	movlw	-1
 21198  01A928  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21199  01A92E                     l11701:
 21200                           
 21201                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 21202                           ;stkvar	_c @ sp[(-2)+-3]
 21203  01A92E  0EFB               	movlw	-5
 21204  01A930  006F FF8C  F276    	movff	plusw1,_dbuf
 21205                           
 21206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 21207  01A936  0102               	movlb	2	; () banked
 21208  01A938  6B77               	clrf	(_dbuf+1)& (0+255),b
 21209                           
 21210                           ; BSR set to: 2
 21211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 21212                           ;stkvar	_w @ sp[(-2)+0]
 21213  01A93A  0EFE               	movlw	-2
 21214  01A93C  006F FF8F FFE6     	movff	plusw1,postinc1
 21215  01A942  006F FF8F FFE6     	movff	plusw1,postinc1
 21216  01A948  0E76               	movlw	low _dbuf
 21217  01A94A  6EE6               	movwf	postinc1,c
 21218  01A94C  0E02               	movlw	high _dbuf
 21219  01A94E  6EE6               	movwf	postinc1,c
 21220                           
 21221                           ;stkvar	_fp @ sp[(-6)+-2]
 21222  01A950  0EF8               	movlw	-8
 21223  01A952  006F FF8F FFE6     	movff	plusw1,postinc1
 21224  01A958  006F FF8F FFE6     	movff	plusw1,postinc1
 21225  01A95E  ECF6  F0CB         	call	_pad	;wreg free
 21226                           
 21227                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 21228  01A962  0EFB               	movlw	251
 21229  01A964  26E1               	addwf	fsr1l,f,c
 21230  01A966  0EFF               	movlw	255
 21231  01A968  22E2               	addwfc	fsr1h,f,c
 21232  01A96A  0012               	return		;funcret
 21233  01A96C                     __end_of_ctoa:
 21234                           	opt callstack 0
 21235                           
 21236 ;; *************** function _pad *****************
 21237 ;; Defined at:
 21238 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21239 ;; Parameters:    Size  Location     Type
 21240 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21241 ;;		 -> f(6), NULL(0), 
 21242 ;;  buf             2  [STACK] PTR unsigned char 
 21243 ;;		 -> dbuf(80), 
 21244 ;;  p               2  [STACK] int 
 21245 ;; Auto vars:     Size  Location     Type
 21246 ;;  w               2  [STACK] int 
 21247 ;;  i               2  [STACK] int 
 21248 ;; Return value:  Size  Location     Type
 21249 ;;                  2  [STACK] int 
 21250 ;; Registers used:
 21251 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 21252 ;; Tracked objects:
 21253 ;;		On entry : 0/2
 21254 ;;		On exit  : 0/0
 21255 ;;		Unchanged: 0/0
 21256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21261 ;;Total ram usage:        0 bytes
 21262 ;; Hardware stack levels used:    1
 21263 ;; Hardware stack levels required when called:   19
 21264 ;; This function calls:
 21265 ;;		_fputc
 21266 ;;		_fputs
 21267 ;;		_strlen
 21268 ;; This function is called by:
 21269 ;;		_ctoa
 21270 ;;		_dtoa
 21271 ;;		_efgtoa
 21272 ;;		_utoa
 21273 ;;		_xtoa
 21274 ;; This function uses a reentrant model
 21275 ;;
 21276                           
 21277                           	psect	text71
 21278  0197EC                     __ptext71:
 21279                           	opt callstack 0
 21280  0197EC                     _pad:
 21281                           	opt callstack 0
 21282                           
 21283                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21284  0197EC  52E6               	movf	postinc1,f,c
 21285  0197EE  52E6               	movf	postinc1,f,c
 21286  0197F0  52E6               	movf	postinc1,f,c
 21287  0197F2  52E6               	movf	postinc1,f,c
 21288                           
 21289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 21290                           
 21291                           ;incstack = 0
 21292 ;; hardware stack exceeded
 21293  0197F4  A03E               	btfss	_flags^0,0,c
 21294  0197F6  D010               	goto	l11631
 21295                           
 21296                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 21297                           ;stkvar	_fp @ sp[(-4)+-2]
 21298  0197F8  0EFA               	movlw	-6
 21299  0197FA  006F FF8F FFE6     	movff	plusw1,postinc1
 21300  019800  006F FF8F FFE6     	movff	plusw1,postinc1
 21301                           
 21302                           ;stkvar	_buf @ sp[(-6)+-4]
 21303  019806  0EF6               	movlw	-10
 21304  019808  006F FF8F FFE6     	movff	plusw1,postinc1
 21305  01980E  006F FF8F FFE6     	movff	plusw1,postinc1
 21306  019814  EC93  F0D3         	call	_fputs	;wreg free
 21307  019818                     l11631:
 21308                           
 21309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 21310                           ;stkvar	_p @ sp[(-4)+-6]
 21311  019818  0EF7               	movlw	-9
 21312  01981A  BEE3               	btfsc	plusw1,7,c
 21313  01981C  D011               	goto	l11635
 21314                           
 21315                           ;stkvar	_p @ sp[(-4)+-6]
 21316                           ;stkvar	_w @ sp[(-4)+0]
 21317  01981E  0EF6               	movlw	-10
 21318  019820  006F FF8C  F001    	movff	plusw1,btemp
 21319  019826  0EFC               	movlw	-4
 21320  019828  0060  F007  FFE3   	movff	btemp,plusw1
 21321  01982E  0EF7               	movlw	-9
 21322  019830  006F FF8C  F001    	movff	plusw1,btemp
 21323  019836  0EFD               	movlw	-3
 21324  019838  0060  F007  FFE3   	movff	btemp,plusw1
 21325  01983E  D004               	goto	l2139
 21326  019840                     l11635:
 21327                           
 21328                           ;stkvar	_w @ sp[(-4)+0]
 21329  019840  0EFC               	movlw	-4
 21330  019842  6AE3               	clrf	plusw1,c
 21331  019844  0EFD               	movlw	-3
 21332  019846  6AE3               	clrf	plusw1,c
 21333  019848                     l2139:
 21334                           
 21335                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 21336                           ;stkvar	_i @ sp[(-4)+2]
 21337  019848  0EFE               	movlw	-2
 21338  01984A  6AE3               	clrf	plusw1,c
 21339  01984C  0EFF               	movlw	-1
 21340  01984E  6AE3               	clrf	plusw1,c
 21341                           
 21342                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 21343  019850  D01E               	goto	l11641
 21344  019852                     l11637:
 21345                           
 21346                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 21347                           ;stkvar	_fp @ sp[(-4)+-2]
 21348  019852  0EFA               	movlw	-6
 21349  019854  006F FF8F FFE6     	movff	plusw1,postinc1
 21350  01985A  006F FF8F FFE6     	movff	plusw1,postinc1
 21351  019860  0E20               	movlw	32
 21352  019862  6EE6               	movwf	postinc1,c
 21353  019864  0E00               	movlw	0
 21354  019866  6EE6               	movwf	postinc1,c
 21355  019868  EC4B  F0CA         	call	_fputc	;wreg free
 21356                           
 21357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 21358                           ;stkvar	_i @ sp[(-4)+2]
 21359  01986C  0EFE               	movlw	-2
 21360  01986E  50E3               	movf	plusw1,w,c
 21361  019870  0F01               	addlw	1
 21362  019872  6E01               	movwf	btemp^0,c
 21363  019874  0EFE               	movlw	-2
 21364  019876  0060  F007  FFE3   	movff	btemp,plusw1
 21365  01987C  6A01               	clrf	btemp^0,c
 21366  01987E  0EFF               	movlw	-1
 21367  019880  50E3               	movf	plusw1,w,c
 21368  019882  2001               	addwfc	btemp^0,w,c
 21369  019884  6E01               	movwf	btemp^0,c
 21370  019886  0EFF               	movlw	-1
 21371  019888  0060  F007  FFE3   	movff	btemp,plusw1
 21372  01988E                     l11641:
 21373                           
 21374                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 21375                           ;stkvar	_w @ sp[(-4)+0]
 21376                           ;stkvar	_i @ sp[(-4)+2]
 21377  01988E  50E1               	movf	fsr1l,w,c
 21378  019890  0FFE               	addlw	-2
 21379  019892  6ED9               	movwf	fsr2l,c
 21380  019894  50E2               	movf	fsr1h,w,c
 21381  019896  6EDA               	movwf	fsr2h,c
 21382  019898  0EFF               	movlw	255
 21383  01989A  22DA               	addwfc	fsr2h,f,c
 21384  01989C  0EFC               	movlw	-4
 21385  01989E  50E3               	movf	plusw1,w,c
 21386  0198A0  5CDE               	subwf	postinc2,w,c
 21387  0198A2  50DE               	movf	postinc2,w,c
 21388  0198A4  0A80               	xorlw	128
 21389  0198A6  6E01               	movwf	btemp^0,c
 21390  0198A8  0EFD               	movlw	-3
 21391  0198AA  50E3               	movf	plusw1,w,c
 21392  0198AC  0A80               	xorlw	128
 21393  0198AE  5801               	subwfb	btemp^0,w,c
 21394  0198B0  A0D8               	btfss	status,0,c
 21395  0198B2  D7CF               	goto	l11637
 21396                           
 21397                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 21398  0198B4  B03E               	btfsc	_flags^0,0,c
 21399  0198B6  D010               	goto	l11645
 21400                           
 21401                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 21402                           ;stkvar	_fp @ sp[(-4)+-2]
 21403  0198B8  0EFA               	movlw	-6
 21404  0198BA  006F FF8F FFE6     	movff	plusw1,postinc1
 21405  0198C0  006F FF8F FFE6     	movff	plusw1,postinc1
 21406                           
 21407                           ;stkvar	_buf @ sp[(-6)+-4]
 21408  0198C6  0EF6               	movlw	-10
 21409  0198C8  006F FF8F FFE6     	movff	plusw1,postinc1
 21410  0198CE  006F FF8F FFE6     	movff	plusw1,postinc1
 21411  0198D4  EC93  F0D3         	call	_fputs	;wreg free
 21412  0198D8                     l11645:
 21413                           
 21414                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 21415                           ;stkvar	_w @ sp[(-4)+0]
 21416                           ;stkvar	_buf @ sp[(-4)+-4]
 21417  0198D8  0EF8               	movlw	-8
 21418  0198DA  006F FF8F FFE6     	movff	plusw1,postinc1
 21419  0198E0  006F FF8F FFE6     	movff	plusw1,postinc1
 21420  0198E6  EC42  F0D3         	call	_strlen	;wreg free
 21421  0198EA  0EFC               	movlw	-4
 21422  0198EC  50E3               	movf	plusw1,w,c
 21423  0198EE  2601               	addwf	btemp^0,f,c
 21424  0198F0  0EFD               	movlw	-3
 21425  0198F2  50E3               	movf	plusw1,w,c
 21426  0198F4  2202               	addwfc	(btemp+1)^0,f,c
 21427                           
 21428                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 21429  0198F6  0EF6               	movlw	246
 21430  0198F8  26E1               	addwf	fsr1l,f,c
 21431  0198FA  0EFF               	movlw	255
 21432  0198FC  22E2               	addwfc	fsr1h,f,c
 21433  0198FE  0012               	return		;funcret
 21434  019900                     __end_of_pad:
 21435                           	opt callstack 0
 21436                           
 21437 ;; *************** function _strlen *****************
 21438 ;; Defined at:
 21439 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 21440 ;; Parameters:    Size  Location     Type
 21441 ;;  s               2  [STACK] PTR const unsigned char 
 21442 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21443 ;;		 -> spin(120), STR_47(9), STR_46(12), D.lcd(480), 
 21444 ;;		 -> D(482), T(144), port_data(512), STR_3(6), 
 21445 ;;		 -> V(191), 
 21446 ;; Auto vars:     Size  Location     Type
 21447 ;;  a               2  [STACK] PTR const unsigned char 
 21448 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21449 ;;		 -> spin(120), STR_47(9), STR_46(12), D.lcd(480), 
 21450 ;;		 -> D(482), T(144), port_data(512), STR_3(6), 
 21451 ;;		 -> V(191), 
 21452 ;; Return value:  Size  Location     Type
 21453 ;;                  2  [STACK] unsigned int 
 21454 ;; Registers used:
 21455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 21456 ;; Tracked objects:
 21457 ;;		On entry : 0/0
 21458 ;;		On exit  : 0/0
 21459 ;;		Unchanged: 0/0
 21460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21465 ;;Total ram usage:        0 bytes
 21466 ;; Hardware stack levels used:    1
 21467 ;; Hardware stack levels required when called:   15
 21468 ;; This function calls:
 21469 ;;		Nothing
 21470 ;; This function is called by:
 21471 ;;		_eaDogM_WriteString
 21472 ;;		_spinners
 21473 ;;		_calc_bsoc
 21474 ;;		_pad
 21475 ;;		_stoa
 21476 ;; This function uses a reentrant model
 21477 ;;
 21478                           
 21479                           	psect	text72
 21480  01A684                     __ptext72:
 21481                           	opt callstack 0
 21482  01A684                     _strlen:
 21483                           	opt callstack 0
 21484                           
 21485                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21486  01A684  52E6               	movf	postinc1,f,c
 21487  01A686  52E6               	movf	postinc1,f,c
 21488                           
 21489                           ;stkvar	_s @ sp[(-2)+-2]
 21490                           
 21491                           ;incstack = 0
 21492 ;; hardware stack exceeded
 21493  01A688  0EFC               	movlw	-4
 21494  01A68A  006F FF8C  F00B    	movff	plusw1,btemp+10
 21495  01A690  0EFD               	movlw	-3
 21496  01A692  006F FF8C  F00C    	movff	plusw1,btemp+11
 21497                           
 21498                           ;stkvar	_a @ sp[(-2)+0]
 21499  01A698  0EFF               	movlw	-1
 21500  01A69A  0060  F033  FFE3   	movff	btemp+11,plusw1
 21501  01A6A0  0EFE               	movlw	-2
 21502  01A6A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21503  01A6A8  D011               	goto	l7599
 21504  01A6AA                     l7597:
 21505                           
 21506                           ;stkvar	_s @ sp[(-2)+-2]
 21507  01A6AA  0EFC               	movlw	-4
 21508  01A6AC  50E3               	movf	plusw1,w,c
 21509  01A6AE  0F01               	addlw	1
 21510  01A6B0  6E01               	movwf	btemp^0,c
 21511  01A6B2  0EFC               	movlw	-4
 21512  01A6B4  0060  F007  FFE3   	movff	btemp,plusw1
 21513  01A6BA  6A01               	clrf	btemp^0,c
 21514  01A6BC  0EFD               	movlw	-3
 21515  01A6BE  50E3               	movf	plusw1,w,c
 21516  01A6C0  2001               	addwfc	btemp^0,w,c
 21517  01A6C2  6E01               	movwf	btemp^0,c
 21518  01A6C4  0EFD               	movlw	-3
 21519  01A6C6  0060  F007  FFE3   	movff	btemp,plusw1
 21520  01A6CC                     l7599:
 21521                           
 21522                           ;stkvar	_s @ sp[(-2)+-2]
 21523  01A6CC  0EFC               	movlw	-4
 21524  01A6CE  006F FF8F FFF6     	movff	plusw1,tblptrl
 21525  01A6D4  0EFD               	movlw	-3
 21526  01A6D6  006F FF8F FFF7     	movff	plusw1,tblptrh
 21527  01A6DC  0E00               	movlw	low (__mediumconst shr (0+16))
 21528  01A6DE  6EF8               	movwf	tblptru,c
 21529  01A6E0  0E1F               	movlw	(high __ramtop+-1)
 21530  01A6E2  64F7               	cpfsgt	tblptrh,c
 21531  01A6E4  D003               	bra	u5357
 21532  01A6E6  0008               	tblrd		*
 21533  01A6E8  50F5               	movf	tablat,w,c
 21534  01A6EA  D007               	bra	u5350
 21535  01A6EC                     u5357:
 21536  01A6EC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 21537  01A6F2  006F FFDF FFEA     	movff	tblptrh,fsr0h
 21538  01A6F8  50EF               	movf	indf0,w,c
 21539  01A6FA                     u5350:
 21540  01A6FA  0900               	iorlw	0
 21541  01A6FC  A4D8               	btfss	status,2,c
 21542  01A6FE  D7D5               	goto	l7597
 21543                           
 21544                           ;stkvar	_a @ sp[(-2)+0]
 21545                           ;stkvar	_s @ sp[(-2)+-2]
 21546  01A700  0EFC               	movlw	-4
 21547  01A702  006F FF8C  F001    	movff	plusw1,btemp
 21548  01A708  0EFD               	movlw	-3
 21549  01A70A  006F FF8C  F002    	movff	plusw1,btemp+1
 21550  01A710  0EFE               	movlw	-2
 21551  01A712  50E3               	movf	plusw1,w,c
 21552  01A714  5E01               	subwf	btemp^0,f,c
 21553  01A716  0EFF               	movlw	-1
 21554  01A718  50E3               	movf	plusw1,w,c
 21555  01A71A  5A02               	subwfb	(btemp+1)^0,f,c
 21556                           
 21557                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 21558  01A71C  52E5               	movf	postdec1,f,c
 21559  01A71E  52E5               	movf	postdec1,f,c
 21560  01A720  52E5               	movf	postdec1,f,c
 21561  01A722  52E5               	movf	postdec1,f,c
 21562  01A724  0012               	return		;funcret
 21563  01A726                     __end_of_strlen:
 21564                           	opt callstack 0
 21565                           
 21566 ;; *************** function _fputs *****************
 21567 ;; Defined at:
 21568 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 21569 ;; Parameters:    Size  Location     Type
 21570 ;;  s               2  [STACK] PTR const unsigned char 
 21571 ;;		 -> dbuf(80), 
 21572 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21573 ;;		 -> f(6), NULL(0), 
 21574 ;; Auto vars:     Size  Location     Type
 21575 ;;  i               2  [STACK] int 
 21576 ;;  c               1  [STACK] unsigned char 
 21577 ;; Return value:  Size  Location     Type
 21578 ;;                  2  [STACK] int 
 21579 ;; Registers used:
 21580 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21581 ;; Tracked objects:
 21582 ;;		On entry : 0/2
 21583 ;;		On exit  : 0/0
 21584 ;;		Unchanged: 0/0
 21585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21590 ;;Total ram usage:        0 bytes
 21591 ;; Hardware stack levels used:    1
 21592 ;; Hardware stack levels required when called:   18
 21593 ;; This function calls:
 21594 ;;		_fputc
 21595 ;; This function is called by:
 21596 ;;		_pad
 21597 ;; This function uses a reentrant model
 21598 ;;
 21599                           
 21600                           	psect	text73
 21601  01A726                     __ptext73:
 21602                           	opt callstack 0
 21603  01A726                     _fputs:
 21604                           	opt callstack 0
 21605                           
 21606                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21607  01A726  52E6               	movf	postinc1,f,c
 21608  01A728  52E6               	movf	postinc1,f,c
 21609  01A72A  52E6               	movf	postinc1,f,c
 21610                           
 21611                           ;stkvar	_i @ sp[(-3)+0]
 21612                           
 21613                           ;incstack = 0
 21614 ;; hardware stack exceeded
 21615  01A72C  0EFD               	movlw	-3
 21616  01A72E  6AE3               	clrf	plusw1,c
 21617  01A730  0EFE               	movlw	-2
 21618  01A732  6AE3               	clrf	plusw1,c
 21619  01A734  D01F               	goto	l11625
 21620  01A736                     l11621:
 21621                           
 21622                           ;stkvar	_fp @ sp[(-3)+-4]
 21623  01A736  0EF9               	movlw	-7
 21624  01A738  006F FF8F FFE6     	movff	plusw1,postinc1
 21625  01A73E  006F FF8F FFE6     	movff	plusw1,postinc1
 21626                           
 21627                           ;stkvar	_c @ sp[(-5)+2]
 21628  01A744  0EFD               	movlw	-3
 21629  01A746  50E3               	movf	plusw1,w,c
 21630  01A748  6EE6               	movwf	postinc1,c
 21631  01A74A  0E00               	movlw	0
 21632  01A74C  6EE6               	movwf	postinc1,c
 21633  01A74E  EC4B  F0CA         	call	_fputc	;wreg free
 21634                           
 21635                           ;stkvar	_i @ sp[(-3)+0]
 21636  01A752  0EFD               	movlw	-3
 21637  01A754  50E3               	movf	plusw1,w,c
 21638  01A756  0F01               	addlw	1
 21639  01A758  6E01               	movwf	btemp^0,c
 21640  01A75A  0EFD               	movlw	-3
 21641  01A75C  0060  F007  FFE3   	movff	btemp,plusw1
 21642  01A762  6A01               	clrf	btemp^0,c
 21643  01A764  0EFE               	movlw	-2
 21644  01A766  50E3               	movf	plusw1,w,c
 21645  01A768  2001               	addwfc	btemp^0,w,c
 21646  01A76A  6E01               	movwf	btemp^0,c
 21647  01A76C  0EFE               	movlw	-2
 21648  01A76E  0060  F007  FFE3   	movff	btemp,plusw1
 21649  01A774                     l11625:
 21650                           
 21651                           ;stkvar	_i @ sp[(-3)+0]
 21652  01A774  0EFD               	movlw	-3
 21653  01A776  006F FF8C  F00B    	movff	plusw1,btemp+10
 21654  01A77C  0EFE               	movlw	-2
 21655  01A77E  006F FF8C  F00C    	movff	plusw1,btemp+11
 21656                           
 21657                           ;stkvar	_s @ sp[(-3)+-2]
 21658  01A784  0EFB               	movlw	-5
 21659  01A786  006F FF8C  F009    	movff	plusw1,btemp+8
 21660  01A78C  0EFC               	movlw	-4
 21661  01A78E  006F FF8C  F00A    	movff	plusw1,btemp+9
 21662  01A794  500B               	movf	(btemp+10)^0,w,c
 21663  01A796  2409               	addwf	(btemp+8)^0,w,c
 21664  01A798  6ED9               	movwf	fsr2l,c
 21665  01A79A  500C               	movf	(btemp+11)^0,w,c
 21666  01A79C  200A               	addwfc	(btemp+9)^0,w,c
 21667  01A79E  6EDA               	movwf	fsr2h,c
 21668  01A7A0  50DF               	movf	indf2,w,c
 21669  01A7A2  6E0C               	movwf	(btemp+11)^0,c
 21670                           
 21671                           ;stkvar	_c @ sp[(-3)+2]
 21672  01A7A4  0EFF               	movlw	-1
 21673  01A7A6  0060  F033  FFE3   	movff	btemp+11,plusw1
 21674  01A7AC  0EFF               	movlw	-1
 21675  01A7AE  50E3               	movf	plusw1,w,c
 21676  01A7B0  A4D8               	btfss	status,2,c
 21677  01A7B2  D7C1               	goto	l11621
 21678                           
 21679                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21680  01A7B4  0EF9               	movlw	249
 21681  01A7B6  26E1               	addwf	fsr1l,f,c
 21682  01A7B8  0EFF               	movlw	255
 21683  01A7BA  22E2               	addwfc	fsr1h,f,c
 21684  01A7BC  0012               	return		;funcret
 21685  01A7BE                     __end_of_fputs:
 21686                           	opt callstack 0
 21687                           
 21688 ;; *************** function _fputc *****************
 21689 ;; Defined at:
 21690 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 21691 ;; Parameters:    Size  Location     Type
 21692 ;;  c               2  [STACK] int 
 21693 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21694 ;;		 -> f(6), NULL(0), 
 21695 ;; Auto vars:     Size  Location     Type
 21696 ;;		None
 21697 ;; Return value:  Size  Location     Type
 21698 ;;                  2  [STACK] int 
 21699 ;; Registers used:
 21700 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21701 ;; Tracked objects:
 21702 ;;		On entry : 0/0
 21703 ;;		On exit  : 0/0
 21704 ;;		Unchanged: 0/0
 21705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21710 ;;Total ram usage:        0 bytes
 21711 ;; Hardware stack levels used:    1
 21712 ;; Hardware stack levels required when called:   17
 21713 ;; This function calls:
 21714 ;;		_putch
 21715 ;; This function is called by:
 21716 ;;		_pad
 21717 ;;		_stoa
 21718 ;;		_vfpfcnvrt
 21719 ;;		_fputs
 21720 ;; This function uses a reentrant model
 21721 ;;
 21722                           
 21723                           	psect	text74
 21724  019496                     __ptext74:
 21725                           	opt callstack 0
 21726  019496                     _fputc:
 21727                           	opt callstack 0
 21728                           
 21729                           ;stkvar	_fp @ sp[(0)+-4]
 21730                           
 21731                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21732                           ;incstack = 0
 21733 ;; hardware stack exceeded
 21734  019496  0EFC               	movlw	-4
 21735  019498  006F FF8C  F001    	movff	plusw1,btemp
 21736  01949E  0EFD               	movlw	-3
 21737  0194A0  50E3               	movf	plusw1,w,c
 21738  0194A2  1001               	iorwf	btemp^0,w,c
 21739  0194A4  B4D8               	btfsc	status,2,c
 21740  0194A6  D009               	goto	u10610
 21741                           
 21742                           ;stkvar	_fp @ sp[(0)+-4]
 21743  0194A8  0EFC               	movlw	-4
 21744  0194AA  006F FF8C  F001    	movff	plusw1,btemp
 21745  0194B0  0EFD               	movlw	-3
 21746  0194B2  50E3               	movf	plusw1,w,c
 21747  0194B4  1001               	iorwf	btemp^0,w,c
 21748  0194B6  A4D8               	btfss	status,2,c
 21749  0194B8  D006               	goto	l11609
 21750  0194BA                     u10610:
 21751                           
 21752                           ;stkvar	_c @ sp[(0)+-2]
 21753  0194BA  0EFE               	movlw	-2
 21754  0194BC  50E3               	movf	plusw1,w,c
 21755  0194BE  6EE6               	movwf	postinc1,c
 21756  0194C0  EC5C  F0DE         	call	_putch	;wreg free
 21757  0194C4  D075               	goto	l3185
 21758  0194C6                     l11609:
 21759                           
 21760                           ;stkvar	_fp @ sp[(0)+-4]
 21761  0194C6  0EFC               	movlw	-4
 21762  0194C8  006F FF8C  F00B    	movff	plusw1,btemp+10
 21763  0194CE  0EFD               	movlw	-3
 21764  0194D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 21765  0194D6  0E04               	movlw	4
 21766  0194D8  240B               	addwf	(btemp+10)^0,w,c
 21767  0194DA  6ED9               	movwf	fsr2l,c
 21768  0194DC  0E00               	movlw	0
 21769  0194DE  200C               	addwfc	(btemp+11)^0,w,c
 21770  0194E0  6EDA               	movwf	fsr2h,c
 21771  0194E2  50DE               	movf	postinc2,w,c
 21772  0194E4  10DE               	iorwf	postinc2,w,c
 21773  0194E6  B4D8               	btfsc	status,2,c
 21774  0194E8  D026               	goto	u10630
 21775                           
 21776                           ;stkvar	_fp @ sp[(0)+-4]
 21777  0194EA  0EFC               	movlw	-4
 21778  0194EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 21779  0194F2  0EFD               	movlw	-3
 21780  0194F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 21781  0194FA  0E04               	movlw	4
 21782  0194FC  240B               	addwf	(btemp+10)^0,w,c
 21783  0194FE  6ED9               	movwf	fsr2l,c
 21784  019500  0E00               	movlw	0
 21785  019502  200C               	addwfc	(btemp+11)^0,w,c
 21786  019504  6EDA               	movwf	fsr2h,c
 21787                           
 21788                           ;stkvar	_fp @ sp[(0)+-4]
 21789  019506  0EFC               	movlw	-4
 21790  019508  006F FF8C  F00B    	movff	plusw1,btemp+10
 21791  01950E  0EFD               	movlw	-3
 21792  019510  006F FF8C  F00C    	movff	plusw1,btemp+11
 21793  019516  0E02               	movlw	2
 21794  019518  240B               	addwf	(btemp+10)^0,w,c
 21795  01951A  6EE9               	movwf	fsr0l,c
 21796  01951C  0E00               	movlw	0
 21797  01951E  200C               	addwfc	(btemp+11)^0,w,c
 21798  019520  6EEA               	movwf	fsr0h,c
 21799  019522  50DE               	movf	postinc2,w,c
 21800  019524  5CEE               	subwf	postinc0,w,c
 21801  019526  50EE               	movf	postinc0,w,c
 21802  019528  0A80               	xorlw	128
 21803  01952A  6E01               	movwf	btemp^0,c
 21804  01952C  50DE               	movf	postinc2,w,c
 21805  01952E  0A80               	xorlw	128
 21806  019530  5801               	subwfb	btemp^0,w,c
 21807  019532  B0D8               	btfsc	status,0,c
 21808  019534  D03D               	goto	l3185
 21809  019536                     u10630:
 21810                           
 21811                           ;stkvar	_c @ sp[(0)+-2]
 21812                           ;stkvar	_fp @ sp[(0)+-4]
 21813  019536  0EFC               	movlw	-4
 21814  019538  006F FF8C  F00B    	movff	plusw1,btemp+10
 21815  01953E  0EFD               	movlw	-3
 21816  019540  006F FF8C  F00C    	movff	plusw1,btemp+11
 21817  019546  0E02               	movlw	2
 21818  019548  240B               	addwf	(btemp+10)^0,w,c
 21819  01954A  6ED9               	movwf	fsr2l,c
 21820  01954C  0E00               	movlw	0
 21821  01954E  200C               	addwfc	(btemp+11)^0,w,c
 21822  019550  6EDA               	movwf	fsr2h,c
 21823  019552  006F FF78  F00B    	movff	postinc2,btemp+10
 21824  019558  006F FF74  F00C    	movff	postdec2,btemp+11
 21825                           
 21826                           ;stkvar	_fp @ sp[(0)+-4]
 21827  01955E  0EFC               	movlw	-4
 21828  019560  006F FF8F FFD9     	movff	plusw1,fsr2l
 21829  019566  0EFD               	movlw	-3
 21830  019568  006F FF8F FFDA     	movff	plusw1,fsr2h
 21831  01956E  006F FF78  F009    	movff	postinc2,btemp+8
 21832  019574  006F FF74  F00A    	movff	postdec2,btemp+9
 21833  01957A  500B               	movf	(btemp+10)^0,w,c
 21834  01957C  2409               	addwf	(btemp+8)^0,w,c
 21835  01957E  6ED9               	movwf	fsr2l,c
 21836  019580  500C               	movf	(btemp+11)^0,w,c
 21837  019582  200A               	addwfc	(btemp+9)^0,w,c
 21838  019584  6EDA               	movwf	fsr2h,c
 21839  019586  0EFE               	movlw	-2
 21840  019588  006F FF8F FFDF     	movff	plusw1,indf2
 21841                           
 21842                           ;stkvar	_fp @ sp[(0)+-4]
 21843  01958E  0EFC               	movlw	-4
 21844  019590  006F FF8C  F00B    	movff	plusw1,btemp+10
 21845  019596  0EFD               	movlw	-3
 21846  019598  006F FF8C  F00C    	movff	plusw1,btemp+11
 21847  01959E  0E02               	movlw	2
 21848  0195A0  240B               	addwf	(btemp+10)^0,w,c
 21849  0195A2  6ED9               	movwf	fsr2l,c
 21850  0195A4  0E00               	movlw	0
 21851  0195A6  200C               	addwfc	(btemp+11)^0,w,c
 21852  0195A8  6EDA               	movwf	fsr2h,c
 21853  0195AA  2ADE               	incf	postinc2,f,c
 21854  0195AC  0E00               	movlw	0
 21855  0195AE  22DD               	addwfc	postdec2,f,c
 21856  0195B0                     l3185:
 21857                           
 21858                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21859  0195B0  52E5               	movf	postdec1,f,c
 21860  0195B2  52E5               	movf	postdec1,f,c
 21861  0195B4  52E5               	movf	postdec1,f,c
 21862  0195B6  52E5               	movf	postdec1,f,c
 21863  0195B8  0012               	return		;funcret
 21864  0195BA                     __end_of_fputc:
 21865                           	opt callstack 0
 21866                           
 21867 ;; *************** function _putch *****************
 21868 ;; Defined at:
 21869 ;;		line 170 in file "eadog.c"
 21870 ;; Parameters:    Size  Location     Type
 21871 ;;  c               1  [STACK] unsigned char 
 21872 ;; Auto vars:     Size  Location     Type
 21873 ;;		None
 21874 ;; Return value:  Size  Location     Type
 21875 ;;                  1  [STACK] void 
 21876 ;; Registers used:
 21877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21878 ;; Tracked objects:
 21879 ;;		On entry : 0/0
 21880 ;;		On exit  : 0/0
 21881 ;;		Unchanged: 0/0
 21882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21887 ;;Total ram usage:        0 bytes
 21888 ;; Hardware stack levels used:    1
 21889 ;; Hardware stack levels required when called:   16
 21890 ;; This function calls:
 21891 ;;		_ringBufS_put_dma
 21892 ;; This function is called by:
 21893 ;;		_fputc
 21894 ;; This function uses a reentrant model
 21895 ;;
 21896                           
 21897                           	psect	text75
 21898  01BCB8                     __ptext75:
 21899                           	opt callstack 0
 21900  01BCB8                     _putch:
 21901                           	opt callstack 0
 21902                           
 21903                           ;eadog.c: 170: void putch(char c);eadog.c: 171: {;eadog.c: 172:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 21904                           ;stkvar	_c @ sp[(0)+-1]
 21905                           
 21906                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21907                           ;incstack = 0
 21908 ;; hardware stack exceeded
 21909  01BCB8  0EFF               	movlw	-1
 21910  01BCBA  50E3               	movf	plusw1,w,c
 21911  01BCBC  6EE6               	movwf	postinc1,c
 21912  01BCBE  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 21913  01BCC4  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 21914  01BCCA  EC9A  F0D2         	call	_ringBufS_put_dma	;wreg free
 21915                           
 21916                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 21917  01BCCE  52E5               	movf	postdec1,f,c
 21918  01BCD0  0012               	return		;funcret
 21919  01BCD2                     __end_of_putch:
 21920                           	opt callstack 0
 21921                           
 21922 ;; *************** function _ringBufS_put_dma *****************
 21923 ;; Defined at:
 21924 ;;		line 67 in file "ringbufs.c"
 21925 ;; Parameters:    Size  Location     Type
 21926 ;;  _this           2  [STACK] PTR struct ringBufS_t
 21927 ;;		 -> ring_buf1(67), 
 21928 ;;  c               1  [STACK] const unsigned char 
 21929 ;; Auto vars:     Size  Location     Type
 21930 ;;		None
 21931 ;; Return value:  Size  Location     Type
 21932 ;;                  1  [STACK] void 
 21933 ;; Registers used:
 21934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21935 ;; Tracked objects:
 21936 ;;		On entry : 0/0
 21937 ;;		On exit  : 0/0
 21938 ;;		Unchanged: 0/0
 21939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21944 ;;Total ram usage:        0 bytes
 21945 ;; Hardware stack levels used:    1
 21946 ;; Hardware stack levels required when called:   15
 21947 ;; This function calls:
 21948 ;;		Nothing
 21949 ;; This function is called by:
 21950 ;;		_putch
 21951 ;; This function uses a reentrant model
 21952 ;;
 21953                           
 21954                           	psect	text76
 21955  01A534                     __ptext76:
 21956                           	opt callstack 0
 21957  01A534                     _ringBufS_put_dma:
 21958                           	opt callstack 0
 21959                           
 21960                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 21961                           ;stkvar	__this @ sp[(0)+-2]
 21962                           
 21963                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21964                           ;incstack = 0
 21965 ;; hardware stack exceeded
 21966  01A534  0EFE               	movlw	-2
 21967  01A536  006F FF8C  F00B    	movff	plusw1,btemp+10
 21968  01A53C  0EFF               	movlw	-1
 21969  01A53E  006F FF8C  F00C    	movff	plusw1,btemp+11
 21970  01A544  0E42               	movlw	66
 21971  01A546  240B               	addwf	(btemp+10)^0,w,c
 21972  01A548  6ED9               	movwf	fsr2l,c
 21973  01A54A  0E00               	movlw	0
 21974  01A54C  200C               	addwfc	(btemp+11)^0,w,c
 21975  01A54E  6EDA               	movwf	fsr2h,c
 21976  01A550  0E40               	movlw	64
 21977  01A552  60DF               	cpfslt	indf2,c
 21978  01A554  D040               	goto	l1587
 21979                           
 21980                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 21981                           ;stkvar	_c @ sp[(0)+-3]
 21982                           ;stkvar	__this @ sp[(0)+-2]
 21983  01A556  0EFE               	movlw	-2
 21984  01A558  006F FF8C  F00B    	movff	plusw1,btemp+10
 21985  01A55E  0EFF               	movlw	-1
 21986  01A560  006F FF8C  F00C    	movff	plusw1,btemp+11
 21987  01A566  0E40               	movlw	64
 21988  01A568  240B               	addwf	(btemp+10)^0,w,c
 21989  01A56A  6ED9               	movwf	fsr2l,c
 21990  01A56C  0E00               	movlw	0
 21991  01A56E  200C               	addwfc	(btemp+11)^0,w,c
 21992  01A570  6EDA               	movwf	fsr2h,c
 21993  01A572  50DF               	movf	indf2,w,c
 21994  01A574  6E0C               	movwf	(btemp+11)^0,c
 21995                           
 21996                           ;stkvar	__this @ sp[(0)+-2]
 21997  01A576  0EFE               	movlw	-2
 21998  01A578  006F FF8C  F009    	movff	plusw1,btemp+8
 21999  01A57E  0EFF               	movlw	-1
 22000  01A580  006F FF8C  F00A    	movff	plusw1,btemp+9
 22001  01A586  500C               	movf	(btemp+11)^0,w,c
 22002  01A588  2409               	addwf	(btemp+8)^0,w,c
 22003  01A58A  6ED9               	movwf	fsr2l,c
 22004  01A58C  0E00               	movlw	0
 22005  01A58E  200A               	addwfc	(btemp+9)^0,w,c
 22006  01A590  6EDA               	movwf	fsr2h,c
 22007  01A592  0EFD               	movlw	-3
 22008  01A594  006F FF8F FFDF     	movff	plusw1,indf2
 22009                           
 22010                           ;ringbufs.c: 71:   ++_this->head;
 22011                           ;stkvar	__this @ sp[(0)+-2]
 22012  01A59A  0EFE               	movlw	-2
 22013  01A59C  006F FF8C  F00B    	movff	plusw1,btemp+10
 22014  01A5A2  0EFF               	movlw	-1
 22015  01A5A4  006F FF8C  F00C    	movff	plusw1,btemp+11
 22016  01A5AA  0E40               	movlw	64
 22017  01A5AC  240B               	addwf	(btemp+10)^0,w,c
 22018  01A5AE  6ED9               	movwf	fsr2l,c
 22019  01A5B0  0E00               	movlw	0
 22020  01A5B2  200C               	addwfc	(btemp+11)^0,w,c
 22021  01A5B4  6EDA               	movwf	fsr2h,c
 22022  01A5B6  2ADF               	incf	indf2,f,c
 22023                           
 22024                           ;ringbufs.c: 72:   ++_this->count;
 22025                           ;stkvar	__this @ sp[(0)+-2]
 22026  01A5B8  0EFE               	movlw	-2
 22027  01A5BA  006F FF8C  F00B    	movff	plusw1,btemp+10
 22028  01A5C0  0EFF               	movlw	-1
 22029  01A5C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 22030  01A5C8  0E42               	movlw	66
 22031  01A5CA  240B               	addwf	(btemp+10)^0,w,c
 22032  01A5CC  6ED9               	movwf	fsr2l,c
 22033  01A5CE  0E00               	movlw	0
 22034  01A5D0  200C               	addwfc	(btemp+11)^0,w,c
 22035  01A5D2  6EDA               	movwf	fsr2h,c
 22036  01A5D4  2ADF               	incf	indf2,f,c
 22037  01A5D6                     l1587:
 22038                           
 22039                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 22040  01A5D6  52E5               	movf	postdec1,f,c
 22041  01A5D8  52E5               	movf	postdec1,f,c
 22042  01A5DA  52E5               	movf	postdec1,f,c
 22043  01A5DC  0012               	return		;funcret
 22044  01A5DE                     __end_of_ringBufS_put_dma:
 22045                           	opt callstack 0
 22046                           
 22047 ;; *************** function _atoi *****************
 22048 ;; Defined at:
 22049 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 22050 ;; Parameters:    Size  Location     Type
 22051 ;;  s               2  [STACK] PTR const unsigned char 
 22052 ;;		 -> STR_65(103), STR_63(3), STR_62(3), STR_61(19), 
 22053 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 22054 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 22055 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 22056 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 22057 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 22058 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 22059 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 22060 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 22061 ;;		 -> STR_26(19), STR_25(20), STR_24(19), STR_23(19), 
 22062 ;;		 -> STR_22(20), STR_21(17), STR_20(16), STR_19(16), 
 22063 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 22064 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 22065 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 22066 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 22067 ;;		 -> STR_1(17), 
 22068 ;; Auto vars:     Size  Location     Type
 22069 ;;  n               2  [STACK] int 
 22070 ;;  neg             2  [STACK] int 
 22071 ;; Return value:  Size  Location     Type
 22072 ;;                  2  [STACK] int 
 22073 ;; Registers used:
 22074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 22075 ;; Tracked objects:
 22076 ;;		On entry : 0/0
 22077 ;;		On exit  : 0/0
 22078 ;;		Unchanged: 0/0
 22079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22084 ;;Total ram usage:        0 bytes
 22085 ;; Hardware stack levels used:    1
 22086 ;; Hardware stack levels required when called:   16
 22087 ;; This function calls:
 22088 ;;		_isdigit
 22089 ;;		_isspace
 22090 ;; This function is called by:
 22091 ;;		_vfpfcnvrt
 22092 ;; This function uses a reentrant model
 22093 ;;
 22094                           
 22095                           	psect	text77
 22096  01761A                     __ptext77:
 22097                           	opt callstack 0
 22098  01761A                     _atoi:
 22099                           	opt callstack 0
 22100                           
 22101                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22102  01761A  0E09               	movlw	9
 22103  01761C  26E1               	addwf	fsr1l,f,c
 22104  01761E  0E00               	movlw	0
 22105  017620  22E2               	addwfc	fsr1h,f,c
 22106                           
 22107                           ;stkvar	_n @ sp[(-9)+5]
 22108                           
 22109                           ;incstack = 0
 22110 ;; hardware stack exceeded
 22111  017622  0EFC               	movlw	-4
 22112  017624  6AE3               	clrf	plusw1,c
 22113  017626  0EFD               	movlw	-3
 22114  017628  6AE3               	clrf	plusw1,c
 22115                           
 22116                           ;stkvar	_neg @ sp[(-9)+7]
 22117  01762A  0EFE               	movlw	-2
 22118  01762C  6AE3               	clrf	plusw1,c
 22119  01762E  0EFF               	movlw	-1
 22120  017630  6AE3               	clrf	plusw1,c
 22121  017632  D011               	goto	l9207
 22122  017634                     l9205:
 22123                           
 22124                           ;stkvar	_s @ sp[(-9)+-2]
 22125  017634  0EF5               	movlw	-11
 22126  017636  50E3               	movf	plusw1,w,c
 22127  017638  0F01               	addlw	1
 22128  01763A  6E01               	movwf	btemp^0,c
 22129  01763C  0EF5               	movlw	-11
 22130  01763E  0060  F007  FFE3   	movff	btemp,plusw1
 22131  017644  6A01               	clrf	btemp^0,c
 22132  017646  0EF6               	movlw	-10
 22133  017648  50E3               	movf	plusw1,w,c
 22134  01764A  2001               	addwfc	btemp^0,w,c
 22135  01764C  6E01               	movwf	btemp^0,c
 22136  01764E  0EF6               	movlw	-10
 22137  017650  0060  F007  FFE3   	movff	btemp,plusw1
 22138  017656                     l9207:
 22139                           
 22140                           ;stkvar	_atoi$6051 @ sp[(-9)+4]
 22141  017656  0EFB               	movlw	-5
 22142  017658  6AE3               	clrf	plusw1,c
 22143  01765A  2AE3               	incf	plusw1,f,c
 22144                           
 22145                           ;stkvar	_s @ sp[(-9)+-2]
 22146  01765C  50E1               	movf	fsr1l,w,c
 22147  01765E  0FF5               	addlw	-11
 22148  017660  6ED9               	movwf	fsr2l,c
 22149  017662  50E2               	movf	fsr1h,w,c
 22150  017664  6EDA               	movwf	fsr2h,c
 22151  017666  0EFF               	movlw	255
 22152  017668  22DA               	addwfc	fsr2h,f,c
 22153  01766A  006F FF7B FFF6     	movff	postinc2,tblptrl
 22154  017670  006F FF77 FFF7     	movff	postdec2,tblptrh
 22155  017676                     	if	0	;tblptru may be non-zero
 22156  017676                     	endif
 22157  017676                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22158  017676  0E00               	movlw	low (__mediumconst shr (0+16))
 22159  017678  6EF8               	movwf	tblptru,c
 22160  01767A                     	endif
 22161  01767A  0008               	tblrd		*
 22162  01767C  50F5               	movf	tablat,w,c
 22163  01767E  0A20               	xorlw	32
 22164  017680  B4D8               	btfsc	status,2,c
 22165  017682  D023               	goto	l9215
 22166  017684  0EF7               	movlw	247
 22167  017686  6E0B               	movwf	(btemp+10)^0,c
 22168  017688  0EFF               	movlw	255
 22169  01768A  6E0C               	movwf	(btemp+11)^0,c
 22170                           
 22171                           ;stkvar	_s @ sp[(-9)+-2]
 22172  01768C  50E1               	movf	fsr1l,w,c
 22173  01768E  0FF5               	addlw	-11
 22174  017690  6ED9               	movwf	fsr2l,c
 22175  017692  50E2               	movf	fsr1h,w,c
 22176  017694  6EDA               	movwf	fsr2h,c
 22177  017696  0EFF               	movlw	255
 22178  017698  22DA               	addwfc	fsr2h,f,c
 22179  01769A  006F FF7B FFF6     	movff	postinc2,tblptrl
 22180  0176A0  006F FF77 FFF7     	movff	postdec2,tblptrh
 22181  0176A6                     	if	0	;tblptru may be non-zero
 22182  0176A6                     	endif
 22183  0176A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22184  0176A6  0E00               	movlw	low (__mediumconst shr (0+16))
 22185  0176A8  6EF8               	movwf	tblptru,c
 22186  0176AA                     	endif
 22187  0176AA  0008               	tblrd		*
 22188  0176AC  50F5               	movf	tablat,w,c
 22189  0176AE  6E09               	movwf	(btemp+8)^0,c
 22190  0176B0  6A0A               	clrf	(btemp+9)^0,c
 22191  0176B2  500B               	movf	(btemp+10)^0,w,c
 22192  0176B4  2609               	addwf	(btemp+8)^0,f,c
 22193  0176B6  500C               	movf	(btemp+11)^0,w,c
 22194  0176B8  220A               	addwfc	(btemp+9)^0,f,c
 22195  0176BA  500A               	movf	(btemp+9)^0,w,c
 22196  0176BC  E104               	bnz	u8460
 22197  0176BE  0E05               	movlw	5
 22198  0176C0  5C09               	subwf	(btemp+8)^0,w,c
 22199  0176C2  A0D8               	btfss	status,0,c
 22200  0176C4  D002               	goto	l9215
 22201  0176C6                     u8460:
 22202                           
 22203                           ;stkvar	_atoi$6051 @ sp[(-9)+4]
 22204  0176C6  0EFB               	movlw	-5
 22205  0176C8  6AE3               	clrf	plusw1,c
 22206  0176CA                     l9215:
 22207                           
 22208                           ;stkvar	_atoi$6051 @ sp[(-9)+4]
 22209  0176CA  0EFB               	movlw	-5
 22210  0176CC  50E3               	movf	plusw1,w,c
 22211  0176CE  6E0B               	movwf	(btemp+10)^0,c
 22212  0176D0  6A0C               	clrf	(btemp+11)^0,c
 22213                           
 22214                           ;stkvar	_atoi$6050 @ sp[(-9)+2]
 22215  0176D2  0EF9               	movlw	-7
 22216  0176D4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22217  0176DA  0EFA               	movlw	-6
 22218  0176DC  0060  F033  FFE3   	movff	btemp+11,plusw1
 22219                           
 22220                           ;stkvar	_atoi$6050 @ sp[(-9)+2]
 22221  0176E2  0EF9               	movlw	-7
 22222  0176E4  006F FF8C  F001    	movff	plusw1,btemp
 22223  0176EA  0EFA               	movlw	-6
 22224  0176EC  50E3               	movf	plusw1,w,c
 22225  0176EE  1001               	iorwf	btemp^0,w,c
 22226  0176F0  B4D8               	btfsc	status,2,c
 22227  0176F2  D01F               	goto	l9225
 22228  0176F4  D79F               	goto	l9205
 22229  0176F6                     l9221:
 22230  0176F6  0E01               	movlw	1
 22231  0176F8  6E0B               	movwf	(btemp+10)^0,c
 22232  0176FA  0E00               	movlw	0
 22233  0176FC  6E0C               	movwf	(btemp+11)^0,c
 22234                           
 22235                           ;stkvar	_neg @ sp[(-9)+7]
 22236  0176FE  0EFE               	movlw	-2
 22237  017700  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22238  017706  0EFF               	movlw	-1
 22239  017708  0060  F033  FFE3   	movff	btemp+11,plusw1
 22240  01770E                     l9223:
 22241                           
 22242                           ;stkvar	_s @ sp[(-9)+-2]
 22243  01770E  0EF5               	movlw	-11
 22244  017710  50E3               	movf	plusw1,w,c
 22245  017712  0F01               	addlw	1
 22246  017714  6E01               	movwf	btemp^0,c
 22247  017716  0EF5               	movlw	-11
 22248  017718  0060  F007  FFE3   	movff	btemp,plusw1
 22249  01771E  6A01               	clrf	btemp^0,c
 22250  017720  0EF6               	movlw	-10
 22251  017722  50E3               	movf	plusw1,w,c
 22252  017724  2001               	addwfc	btemp^0,w,c
 22253  017726  6E01               	movwf	btemp^0,c
 22254  017728  0EF6               	movlw	-10
 22255  01772A  0060  F007  FFE3   	movff	btemp,plusw1
 22256  017730  D053               	goto	l9231
 22257  017732                     l9225:
 22258                           
 22259                           ;stkvar	_s @ sp[(-9)+-2]
 22260  017732  50E1               	movf	fsr1l,w,c
 22261  017734  0FF5               	addlw	-11
 22262  017736  6ED9               	movwf	fsr2l,c
 22263  017738  50E2               	movf	fsr1h,w,c
 22264  01773A  6EDA               	movwf	fsr2h,c
 22265  01773C  0EFF               	movlw	255
 22266  01773E  22DA               	addwfc	fsr2h,f,c
 22267  017740  006F FF7B FFF6     	movff	postinc2,tblptrl
 22268  017746  006F FF77 FFF7     	movff	postdec2,tblptrh
 22269  01774C                     	if	0	;tblptru may be non-zero
 22270  01774C                     	endif
 22271  01774C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22272  01774C  0E00               	movlw	low (__mediumconst shr (0+16))
 22273  01774E  6EF8               	movwf	tblptru,c
 22274  017750                     	endif
 22275  017750  0008               	tblrd		*
 22276  017752  50F5               	movf	tablat,w,c
 22277  017754  6E0B               	movwf	(btemp+10)^0,c
 22278  017756  6A0C               	clrf	(btemp+11)^0,c
 22279                           
 22280                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22281                           ; Switch size 1, requested type "simple"
 22282                           ; Number of cases is 1, Range of values is 0 to 0
 22283                           ; switch strategies available:
 22284                           ; Name         Instructions Cycles
 22285                           ; simple_byte            4     3 (average)
 22286                           ;	Chosen strategy is simple_byte
 22287  017758  500C               	movf	(btemp+11)^0,w,c
 22288  01775A  0A00               	xorlw	0	; case 0
 22289  01775C  A4D8               	btfss	status,2,c
 22290  01775E  D03C               	goto	l9231
 22291                           
 22292                           ; Switch size 1, requested type "simple"
 22293                           ; Number of cases is 2, Range of values is 43 to 45
 22294                           ; switch strategies available:
 22295                           ; Name         Instructions Cycles
 22296                           ; simple_byte            7     4 (average)
 22297                           ;	Chosen strategy is simple_byte
 22298  017760  500B               	movf	(btemp+10)^0,w,c
 22299  017762  0A2B               	xorlw	43	; case 43
 22300  017764  B4D8               	btfsc	status,2,c
 22301  017766  D7D3               	goto	l9223
 22302  017768  0A06               	xorlw	6	; case 45
 22303  01776A  B4D8               	btfsc	status,2,c
 22304  01776C  D7C4               	goto	l9221
 22305  01776E  D034               	goto	l9231
 22306  017770                     l9227:
 22307                           
 22308                           ;stkvar	_n @ sp[(-9)+5]
 22309  017770  0EFC               	movlw	-4
 22310  017772  006F FF8C  F00B    	movff	plusw1,btemp+10
 22311  017778  0EFD               	movlw	-3
 22312  01777A  006F FF8C  F00C    	movff	plusw1,btemp+11
 22313  017780  0E0A               	movlw	10
 22314  017782  020B               	mulwf	(btemp+10)^0,c
 22315  017784  006F FFCC  F009    	movff	prodl,btemp+8
 22316  01778A  006F FFD0  F00A    	movff	prodh,btemp+9
 22317  017790  020C               	mulwf	(btemp+11)^0,c
 22318  017792  50F3               	movf	prodl,w,c
 22319  017794  260A               	addwf	(btemp+9)^0,f,c
 22320                           
 22321                           ;stkvar	_s @ sp[(-9)+-2]
 22322  017796  50E1               	movf	fsr1l,w,c
 22323  017798  0FF5               	addlw	-11
 22324  01779A  6ED9               	movwf	fsr2l,c
 22325  01779C  50E2               	movf	fsr1h,w,c
 22326  01779E  6EDA               	movwf	fsr2h,c
 22327  0177A0  0EFF               	movlw	255
 22328  0177A2  22DA               	addwfc	fsr2h,f,c
 22329  0177A4  006F FF7B FFF6     	movff	postinc2,tblptrl
 22330  0177AA  006F FF77 FFF7     	movff	postdec2,tblptrh
 22331  0177B0                     	if	0	;tblptru may be non-zero
 22332  0177B0                     	endif
 22333  0177B0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22334  0177B0  0E00               	movlw	low (__mediumconst shr (0+16))
 22335  0177B2  6EF8               	movwf	tblptru,c
 22336  0177B4                     	endif
 22337  0177B4  0008               	tblrd		*
 22338  0177B6  50F5               	movf	tablat,w,c
 22339  0177B8  5E09               	subwf	(btemp+8)^0,f,c
 22340  0177BA  0E00               	movlw	0
 22341  0177BC  5A0A               	subwfb	(btemp+9)^0,f,c
 22342  0177BE  0E30               	movlw	48
 22343  0177C0  2609               	addwf	(btemp+8)^0,f,c
 22344  0177C2  0E00               	movlw	0
 22345  0177C4  220A               	addwfc	(btemp+9)^0,f,c
 22346                           
 22347                           ;stkvar	_n @ sp[(-9)+5]
 22348  0177C6  0EFC               	movlw	-4
 22349  0177C8  0060  F027  FFE3   	movff	btemp+8,plusw1
 22350  0177CE  0EFD               	movlw	-3
 22351  0177D0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22352  0177D6  D79B               	goto	l9223
 22353  0177D8                     l9231:
 22354  0177D8  0ED0               	movlw	208
 22355  0177DA  6E0B               	movwf	(btemp+10)^0,c
 22356  0177DC  0EFF               	movlw	255
 22357  0177DE  6E0C               	movwf	(btemp+11)^0,c
 22358                           
 22359                           ;stkvar	_s @ sp[(-9)+-2]
 22360  0177E0  50E1               	movf	fsr1l,w,c
 22361  0177E2  0FF5               	addlw	-11
 22362  0177E4  6ED9               	movwf	fsr2l,c
 22363  0177E6  50E2               	movf	fsr1h,w,c
 22364  0177E8  6EDA               	movwf	fsr2h,c
 22365  0177EA  0EFF               	movlw	255
 22366  0177EC  22DA               	addwfc	fsr2h,f,c
 22367  0177EE  006F FF7B FFF6     	movff	postinc2,tblptrl
 22368  0177F4  006F FF77 FFF7     	movff	postdec2,tblptrh
 22369  0177FA                     	if	0	;tblptru may be non-zero
 22370  0177FA                     	endif
 22371  0177FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22372  0177FA  0E00               	movlw	low (__mediumconst shr (0+16))
 22373  0177FC  6EF8               	movwf	tblptru,c
 22374  0177FE                     	endif
 22375  0177FE  0008               	tblrd		*
 22376  017800  50F5               	movf	tablat,w,c
 22377  017802  6E09               	movwf	(btemp+8)^0,c
 22378  017804  6A0A               	clrf	(btemp+9)^0,c
 22379  017806  500B               	movf	(btemp+10)^0,w,c
 22380  017808  2609               	addwf	(btemp+8)^0,f,c
 22381  01780A  500C               	movf	(btemp+11)^0,w,c
 22382  01780C  220A               	addwfc	(btemp+9)^0,f,c
 22383  01780E  500A               	movf	(btemp+9)^0,w,c
 22384  017810  E106               	bnz	u8480
 22385  017812  0E0A               	movlw	10
 22386  017814  5C09               	subwf	(btemp+8)^0,w,c
 22387  017816  B0D8               	btfsc	status,0,c
 22388  017818  D002               	goto	u8480
 22389  01781A  0E01               	movlw	1
 22390  01781C  D001               	goto	u8490
 22391  01781E                     u8480:
 22392  01781E  0E00               	movlw	0
 22393  017820                     u8490:
 22394  017820  6E0B               	movwf	(btemp+10)^0,c
 22395  017822  6A0C               	clrf	(btemp+11)^0,c
 22396                           
 22397                           ;stkvar	_atoi$6052 @ sp[(-9)+0]
 22398  017824  0EF7               	movlw	-9
 22399  017826  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22400  01782C  0EF8               	movlw	-8
 22401  01782E  0060  F033  FFE3   	movff	btemp+11,plusw1
 22402                           
 22403                           ;stkvar	_atoi$6052 @ sp[(-9)+0]
 22404  017834  0EF7               	movlw	-9
 22405  017836  006F FF8C  F001    	movff	plusw1,btemp
 22406  01783C  0EF8               	movlw	-8
 22407  01783E  50E3               	movf	plusw1,w,c
 22408  017840  1001               	iorwf	btemp^0,w,c
 22409  017842  A4D8               	btfss	status,2,c
 22410  017844  D795               	goto	l9227
 22411                           
 22412                           ;stkvar	_neg @ sp[(-9)+7]
 22413  017846  0EFE               	movlw	-2
 22414  017848  006F FF8C  F001    	movff	plusw1,btemp
 22415  01784E  0EFF               	movlw	-1
 22416  017850  50E3               	movf	plusw1,w,c
 22417  017852  1001               	iorwf	btemp^0,w,c
 22418  017854  A4D8               	btfss	status,2,c
 22419  017856  D00E               	goto	l9241
 22420                           
 22421                           ;stkvar	_n @ sp[(-9)+5]
 22422  017858  0EFC               	movlw	-4
 22423  01785A  006F FF8C  F001    	movff	plusw1,btemp
 22424  017860  1E01               	comf	btemp^0,f,c
 22425  017862  0EFD               	movlw	-3
 22426  017864  006F FF8C  F002    	movff	plusw1,btemp+1
 22427  01786A  1E02               	comf	(btemp+1)^0,f,c
 22428  01786C  2A01               	incf	btemp^0,f,c
 22429  01786E  B4D8               	btfsc	status,2,c
 22430  017870  2A02               	incf	(btemp+1)^0,f,c
 22431  017872  D008               	goto	l3116
 22432  017874                     l9241:
 22433                           
 22434                           ;stkvar	_n @ sp[(-9)+5]
 22435  017874  0EFC               	movlw	-4
 22436  017876  006F FF8C  F001    	movff	plusw1,btemp
 22437  01787C  0EFD               	movlw	-3
 22438  01787E  006F FF8C  F002    	movff	plusw1,btemp+1
 22439  017884                     l3116:
 22440                           
 22441                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 22442  017884  0EF5               	movlw	245
 22443  017886  26E1               	addwf	fsr1l,f,c
 22444  017888  0EFF               	movlw	255
 22445  01788A  22E2               	addwfc	fsr1h,f,c
 22446  01788C  0012               	return		;funcret
 22447  01788E                     __end_of_atoi:
 22448                           	opt callstack 0
 22449                           
 22450 ;; *************** function _isspace *****************
 22451 ;; Defined at:
 22452 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 22453 ;; Parameters:    Size  Location     Type
 22454 ;;  c               2  [STACK] int 
 22455 ;; Auto vars:     Size  Location     Type
 22456 ;;		None
 22457 ;; Return value:  Size  Location     Type
 22458 ;;                  2  [STACK] int 
 22459 ;; Registers used:
 22460 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22461 ;; Tracked objects:
 22462 ;;		On entry : 0/0
 22463 ;;		On exit  : 0/0
 22464 ;;		Unchanged: 0/0
 22465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22470 ;;Total ram usage:        0 bytes
 22471 ;; Hardware stack levels used:    1
 22472 ;; Hardware stack levels required when called:   15
 22473 ;; This function calls:
 22474 ;;		Nothing
 22475 ;; This function is called by:
 22476 ;;		_atoi
 22477 ;; This function uses a reentrant model
 22478 ;;
 22479                           
 22480                           	psect	text78
 22481  01B00E                     __ptext78:
 22482                           	opt callstack 0
 22483  01B00E                     _isspace:
 22484                           	opt callstack 0
 22485                           
 22486                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22487  01B00E  52E6               	movf	postinc1,f,c
 22488                           
 22489                           ;stkvar	_isspace$6101 @ sp[(-1)+0]
 22490                           
 22491                           ;incstack = 0
 22492 ;; hardware stack exceeded
 22493  01B010  0EFF               	movlw	-1
 22494  01B012  6AE3               	clrf	plusw1,c
 22495  01B014  2AE3               	incf	plusw1,f,c
 22496                           
 22497                           ;stkvar	_c @ sp[(-1)+-2]
 22498  01B016  0EFD               	movlw	-3
 22499  01B018  006F FF8C  F001    	movff	plusw1,btemp
 22500  01B01E  0E20               	movlw	32
 22501  01B020  1801               	xorwf	btemp^0,w,c
 22502  01B022  E104               	bnz	u7310
 22503  01B024  0EFE               	movlw	-2
 22504  01B026  50E3               	movf	plusw1,w,c
 22505  01B028  B4D8               	btfsc	status,2,c
 22506  01B02A  D012               	goto	l8599
 22507  01B02C                     u7310:
 22508                           
 22509                           ;stkvar	_c @ sp[(-1)+-2]
 22510  01B02C  0EFD               	movlw	-3
 22511  01B02E  50E3               	movf	plusw1,w,c
 22512  01B030  0FF7               	addlw	247
 22513  01B032  6E0B               	movwf	(btemp+10)^0,c
 22514  01B034  0EFE               	movlw	-2
 22515  01B036  006F FF8C  F00C    	movff	plusw1,btemp+11
 22516  01B03C  0EFF               	movlw	255
 22517  01B03E  220C               	addwfc	(btemp+11)^0,f,c
 22518  01B040  500C               	movf	(btemp+11)^0,w,c
 22519  01B042  E104               	bnz	u7320
 22520  01B044  0E05               	movlw	5
 22521  01B046  5C0B               	subwf	(btemp+10)^0,w,c
 22522  01B048  A0D8               	btfss	status,0,c
 22523  01B04A  D002               	goto	l8599
 22524  01B04C                     u7320:
 22525                           
 22526                           ;stkvar	_isspace$6101 @ sp[(-1)+0]
 22527  01B04C  0EFF               	movlw	-1
 22528  01B04E  6AE3               	clrf	plusw1,c
 22529  01B050                     l8599:
 22530                           
 22531                           ;stkvar	_isspace$6101 @ sp[(-1)+0]
 22532  01B050  0EFF               	movlw	-1
 22533  01B052  50E3               	movf	plusw1,w,c
 22534  01B054  6E01               	movwf	btemp^0,c
 22535  01B056  6A02               	clrf	(btemp+1)^0,c
 22536                           
 22537                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22538  01B058  52E5               	movf	postdec1,f,c
 22539  01B05A  52E5               	movf	postdec1,f,c
 22540  01B05C  52E5               	movf	postdec1,f,c
 22541  01B05E  0012               	return		;funcret
 22542  01B060                     __end_of_isspace:
 22543                           	opt callstack 0
 22544                           
 22545 ;; *************** function _isdigit *****************
 22546 ;; Defined at:
 22547 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 22548 ;; Parameters:    Size  Location     Type
 22549 ;;  c               2  [STACK] int 
 22550 ;; Auto vars:     Size  Location     Type
 22551 ;;		None
 22552 ;; Return value:  Size  Location     Type
 22553 ;;                  2  [STACK] int 
 22554 ;; Registers used:
 22555 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22556 ;; Tracked objects:
 22557 ;;		On entry : 0/0
 22558 ;;		On exit  : 0/0
 22559 ;;		Unchanged: 0/0
 22560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22565 ;;Total ram usage:        0 bytes
 22566 ;; Hardware stack levels used:    1
 22567 ;; Hardware stack levels required when called:   15
 22568 ;; This function calls:
 22569 ;;		Nothing
 22570 ;; This function is called by:
 22571 ;;		_vfpfcnvrt
 22572 ;;		_atoi
 22573 ;; This function uses a reentrant model
 22574 ;;
 22575                           
 22576                           	psect	text79
 22577  01B70C                     __ptext79:
 22578                           	opt callstack 0
 22579  01B70C                     _isdigit:
 22580                           	opt callstack 0
 22581                           
 22582                           ;stkvar	_c @ sp[(0)+-2]
 22583                           
 22584                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22585                           ;incstack = 0
 22586 ;; hardware stack exceeded
 22587  01B70C  0EFE               	movlw	-2
 22588  01B70E  50E3               	movf	plusw1,w,c
 22589  01B710  0FD0               	addlw	208
 22590  01B712  6E0B               	movwf	(btemp+10)^0,c
 22591  01B714  0EFF               	movlw	-1
 22592  01B716  006F FF8C  F00C    	movff	plusw1,btemp+11
 22593  01B71C  0EFF               	movlw	255
 22594  01B71E  220C               	addwfc	(btemp+11)^0,f,c
 22595  01B720  500C               	movf	(btemp+11)^0,w,c
 22596  01B722  E106               	bnz	u6160
 22597  01B724  0E0A               	movlw	10
 22598  01B726  5C0B               	subwf	(btemp+10)^0,w,c
 22599  01B728  B0D8               	btfsc	status,0,c
 22600  01B72A  D002               	goto	u6160
 22601  01B72C  0E01               	movlw	1
 22602  01B72E  D001               	goto	u6170
 22603  01B730                     u6160:
 22604  01B730  0E00               	movlw	0
 22605  01B732                     u6170:
 22606  01B732  6E01               	movwf	btemp^0,c
 22607  01B734  6A02               	clrf	(btemp+1)^0,c
 22608                           
 22609                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22610  01B736  52E5               	movf	postdec1,f,c
 22611  01B738  52E5               	movf	postdec1,f,c
 22612  01B73A  0012               	return		;funcret
 22613  01B73C                     __end_of_isdigit:
 22614                           	opt callstack 0
 22615                           
 22616 ;; *************** function _set_vterm *****************
 22617 ;; Defined at:
 22618 ;;		line 107 in file "mconfig.c"
 22619 ;; Parameters:    Size  Location     Type
 22620 ;;  vterm           1  [STACK] const unsigned char 
 22621 ;; Auto vars:     Size  Location     Type
 22622 ;;		None
 22623 ;; Return value:  Size  Location     Type
 22624 ;;                  1  [STACK] unsigned char 
 22625 ;; Registers used:
 22626 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 22627 ;; Tracked objects:
 22628 ;;		On entry : 0/2
 22629 ;;		On exit  : 0/0
 22630 ;;		Unchanged: 0/0
 22631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22636 ;;Total ram usage:        0 bytes
 22637 ;; Hardware stack levels used:    1
 22638 ;; Hardware stack levels required when called:   15
 22639 ;; This function calls:
 22640 ;;		Nothing
 22641 ;; This function is called by:
 22642 ;;		_main
 22643 ;;		_check_help
 22644 ;; This function uses a reentrant model
 22645 ;;
 22646                           
 22647                           	psect	text80
 22648  01BC42                     __ptext80:
 22649                           	opt callstack 0
 22650  01BC42                     _set_vterm:
 22651                           	opt callstack 15
 22652                           
 22653                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 22654                           ;stkvar	_vterm @ sp[(0)+-1]
 22655                           
 22656                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22657                           ;incstack = 0
 22658  01BC42  0EFF               	movlw	-1
 22659  01BC44  006F FF8C  F00C    	movff	plusw1,btemp+11
 22660  01BC4A  0E03               	movlw	3
 22661  01BC4C  160C               	andwf	(btemp+11)^0,f,c
 22662  01BC4E  EE22  F206         	lfsr	2,_D+480
 22663  01BC52  50DF               	movf	223,w,c
 22664  01BC54  180C               	xorwf	(btemp+11)^0,w,c
 22665  01BC56  0BFE               	andlw	-2
 22666  01BC58  180C               	xorwf	(btemp+11)^0,w,c
 22667  01BC5A  6EDF               	movwf	223,c
 22668                           
 22669                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22670  01BC5C  52E5               	movf	postdec1,f,c
 22671  01BC5E  0012               	return		;funcret
 22672  01BC60                     __end_of_set_vterm:
 22673                           	opt callstack 0
 22674                           
 22675 ;; *************** function _set_temp_display_help *****************
 22676 ;; Defined at:
 22677 ;;		line 211 in file "mconfig.c"
 22678 ;; Parameters:    Size  Location     Type
 22679 ;;  new_response    1  [STACK] const enum E16509
 22680 ;; Auto vars:     Size  Location     Type
 22681 ;;		None
 22682 ;; Return value:  Size  Location     Type
 22683 ;;                  1  [STACK] enum E16509
 22684 ;; Registers used:
 22685 ;;		wreg, fsr1l, fsr1h
 22686 ;; Tracked objects:
 22687 ;;		On entry : 0/1
 22688 ;;		On exit  : 3F/1
 22689 ;;		Unchanged: 0/0
 22690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22695 ;;Total ram usage:        0 bytes
 22696 ;; Hardware stack levels used:    1
 22697 ;; Hardware stack levels required when called:   15
 22698 ;; This function calls:
 22699 ;;		Nothing
 22700 ;; This function is called by:
 22701 ;;		_check_help
 22702 ;; This function uses a reentrant model
 22703 ;;
 22704                           
 22705                           	psect	text81
 22706  01BDA6                     __ptext81:
 22707                           	opt callstack 0
 22708  01BDA6                     _set_temp_display_help:
 22709                           	opt callstack 14
 22710                           
 22711                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 22712                           
 22713                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22714                           ;incstack = 0
 22715  01BDA6  0101               	movlb	1	; () banked
 22716  01BDA8  51A5               	movf	(_V+165)& (0+255),w,b	;volatile
 22717                           
 22718                           ; BSR set to: 1
 22719                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 22720                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22721  01BDAA  0EFF               	movlw	-1
 22722  01BDAC  006F FF8C  F1A5    	movff	plusw1,_V+165	;volatile
 22723                           
 22724                           ; BSR set to: 1
 22725                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 22726  01BDB2  52E5               	movf	postdec1,f,c
 22727  01BDB4  0012               	return		;funcret
 22728  01BDB6                     __end_of_set_temp_display_help:
 22729                           	opt callstack 0
 22730                           
 22731 ;; *************** function _set_display_info *****************
 22732 ;; Defined at:
 22733 ;;		line 200 in file "mconfig.c"
 22734 ;; Parameters:    Size  Location     Type
 22735 ;;  new_response    1  [STACK] const enum E16509
 22736 ;; Auto vars:     Size  Location     Type
 22737 ;;		None
 22738 ;; Return value:  Size  Location     Type
 22739 ;;                  1  [STACK] enum E16994
 22740 ;; Registers used:
 22741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22742 ;; Tracked objects:
 22743 ;;		On entry : 0/1
 22744 ;;		On exit  : 0/0
 22745 ;;		Unchanged: 0/0
 22746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22751 ;;Total ram usage:        0 bytes
 22752 ;; Hardware stack levels used:    1
 22753 ;; Hardware stack levels required when called:   16
 22754 ;; This function calls:
 22755 ;;		_TimerDone
 22756 ;; This function is called by:
 22757 ;;		_main
 22758 ;;		_check_help
 22759 ;; This function uses a reentrant model
 22760 ;;
 22761                           
 22762                           	psect	text82
 22763  01BC60                     __ptext82:
 22764                           	opt callstack 0
 22765  01BC60                     _set_display_info:
 22766                           	opt callstack 14
 22767                           
 22768                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 22769                           
 22770                           ; BSR set to: 1
 22771                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22772                           ;incstack = 0
 22773  01BC60  0E07               	movlw	7
 22774  01BC62  6EE6               	movwf	postinc1,c
 22775  01BC64  EC5D  F0DC         	call	_TimerDone	;wreg free
 22776  01BC68  5001               	movf	btemp^0,w,c
 22777  01BC6A  B4D8               	btfsc	status,2,c
 22778  01BC6C  D006               	goto	l1722
 22779                           
 22780                           ;mconfig.c: 205:   old_info = V.response.info;
 22781  01BC6E  0101               	movlb	1	; () banked
 22782  01BC70  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 22783                           
 22784                           ; BSR set to: 1
 22785                           ;mconfig.c: 206:   V.response.info = new_response_info;
 22786                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22787  01BC72  0EFF               	movlw	-1
 22788  01BC74  006F FF8C  F1A4    	movff	plusw1,_V+164	;volatile
 22789  01BC7A                     l1722:
 22790                           
 22791                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 22792  01BC7A  52E5               	movf	postdec1,f,c
 22793  01BC7C  0012               	return		;funcret
 22794  01BC7E                     __end_of_set_display_info:
 22795                           	opt callstack 0
 22796                           
 22797 ;; *************** function _mode_lamp_dim *****************
 22798 ;; Defined at:
 22799 ;;		line 13 in file "mconfig.c"
 22800 ;; Parameters:    Size  Location     Type
 22801 ;;  level           2  [STACK] const unsigned short 
 22802 ;; Auto vars:     Size  Location     Type
 22803 ;;		None
 22804 ;; Return value:  Size  Location     Type
 22805 ;;                  1  [STACK] void 
 22806 ;; Registers used:
 22807 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22808 ;; Tracked objects:
 22809 ;;		On entry : 0/1
 22810 ;;		On exit  : 0/0
 22811 ;;		Unchanged: 0/0
 22812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22817 ;;Total ram usage:        0 bytes
 22818 ;; Hardware stack levels used:    1
 22819 ;; Hardware stack levels required when called:   16
 22820 ;; This function calls:
 22821 ;;		_PWM8_LoadDutyValue
 22822 ;; This function is called by:
 22823 ;;		_main
 22824 ;;		_check_help
 22825 ;; This function uses a reentrant model
 22826 ;;
 22827                           
 22828                           	psect	text83
 22829  01BCEE                     __ptext83:
 22830                           	opt callstack 0
 22831  01BCEE                     _mode_lamp_dim:
 22832                           	opt callstack 14
 22833                           
 22834                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 22835                           ;stkvar	_level @ sp[(0)+-2]
 22836                           
 22837                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22838                           ;incstack = 0
 22839  01BCEE  0EFE               	movlw	-2
 22840  01BCF0  006F FF8F FFE6     	movff	plusw1,postinc1
 22841  01BCF6  006F FF8F FFE6     	movff	plusw1,postinc1
 22842  01BCFC  ECC0  F0D9         	call	_PWM8_LoadDutyValue	;wreg free
 22843                           
 22844                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 22845  01BD00  52E5               	movf	postdec1,f,c
 22846  01BD02  52E5               	movf	postdec1,f,c
 22847  01BD04  0012               	return		;funcret
 22848  01BD06                     __end_of_mode_lamp_dim:
 22849                           	opt callstack 0
 22850                           
 22851 ;; *************** function _mode_lamp_bright *****************
 22852 ;; Defined at:
 22853 ;;		line 18 in file "mconfig.c"
 22854 ;; Parameters:    Size  Location     Type
 22855 ;;		None
 22856 ;; Auto vars:     Size  Location     Type
 22857 ;;		None
 22858 ;; Return value:  Size  Location     Type
 22859 ;;                  1  [STACK] void 
 22860 ;; Registers used:
 22861 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22862 ;; Tracked objects:
 22863 ;;		On entry : 0/0
 22864 ;;		On exit  : 0/0
 22865 ;;		Unchanged: 0/0
 22866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22871 ;;Total ram usage:        0 bytes
 22872 ;; Hardware stack levels used:    1
 22873 ;; Hardware stack levels required when called:   16
 22874 ;; This function calls:
 22875 ;;		_PWM8_LoadDutyValue
 22876 ;; This function is called by:
 22877 ;;		_check_help
 22878 ;; This function uses a reentrant model
 22879 ;;
 22880                           
 22881                           	psect	text84
 22882  01BDD4                     __ptext84:
 22883                           	opt callstack 0
 22884  01BDD4                     _mode_lamp_bright:
 22885                           	opt callstack 13
 22886                           
 22887                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 22888                           
 22889                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22890                           ;incstack = 0
 22891  01BDD4  0E2C               	movlw	44
 22892  01BDD6  6EE6               	movwf	postinc1,c
 22893  01BDD8  0E01               	movlw	1
 22894  01BDDA  6EE6               	movwf	postinc1,c
 22895  01BDDC  ECC0  F0D9         	call	_PWM8_LoadDutyValue	;wreg free
 22896                           
 22897                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22898  01BDE0  0012               	return		;funcret
 22899  01BDE2                     __end_of_mode_lamp_bright:
 22900                           	opt callstack 0
 22901                           
 22902 ;; *************** function _PWM8_LoadDutyValue *****************
 22903 ;; Defined at:
 22904 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 22905 ;; Parameters:    Size  Location     Type
 22906 ;;  dutyValue       2  [STACK] unsigned short 
 22907 ;; Auto vars:     Size  Location     Type
 22908 ;;		None
 22909 ;; Return value:  Size  Location     Type
 22910 ;;                  1  [STACK] void 
 22911 ;; Registers used:
 22912 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22913 ;; Tracked objects:
 22914 ;;		On entry : 0/1
 22915 ;;		On exit  : 0/0
 22916 ;;		Unchanged: 0/0
 22917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22922 ;;Total ram usage:        0 bytes
 22923 ;; Hardware stack levels used:    1
 22924 ;; Hardware stack levels required when called:   15
 22925 ;; This function calls:
 22926 ;;		Nothing
 22927 ;; This function is called by:
 22928 ;;		_mode_lamp_dim
 22929 ;;		_mode_lamp_bright
 22930 ;; This function uses a reentrant model
 22931 ;;
 22932                           
 22933                           	psect	text85
 22934  01B380                     __ptext85:
 22935                           	opt callstack 0
 22936  01B380                     _PWM8_LoadDutyValue:
 22937                           	opt callstack 14
 22938                           
 22939                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 22940                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22941                           
 22942                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22943                           ;incstack = 0
 22944  01B380  0EFE               	movlw	-2
 22945  01B382  006F FF8C  F00B    	movff	plusw1,btemp+10
 22946  01B388  0EFF               	movlw	-1
 22947  01B38A  006F FF8C  F00C    	movff	plusw1,btemp+11
 22948  01B390  90D8               	bcf	status,0,c
 22949  01B392  320C               	rrcf	(btemp+11)^0,f,c
 22950  01B394  320B               	rrcf	(btemp+10)^0,f,c
 22951  01B396  90D8               	bcf	status,0,c
 22952  01B398  320C               	rrcf	(btemp+11)^0,f,c
 22953  01B39A  320B               	rrcf	(btemp+10)^0,f,c
 22954  01B39C  500B               	movf	(btemp+10)^0,w,c
 22955  01B39E  6E61               	movwf	97,c	;volatile
 22956                           
 22957                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 22958                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22959  01B3A0  0EFE               	movlw	-2
 22960  01B3A2  006F FF8C  F00C    	movff	plusw1,btemp+11
 22961  01B3A8  0E03               	movlw	3
 22962  01B3AA  160C               	andwf	(btemp+11)^0,f,c
 22963  01B3AC  0E06               	movlw	6
 22964  01B3AE  6E01               	movwf	btemp^0,c
 22965  01B3B0                     u9275:
 22966  01B3B0  90D8               	bcf	status,0,c
 22967  01B3B2  360C               	rlcf	(btemp+11)^0,f,c
 22968  01B3B4  2E01               	decfsz	btemp^0,f,c
 22969  01B3B6  D7FC               	goto	u9275
 22970  01B3B8  500C               	movf	(btemp+11)^0,w,c
 22971  01B3BA  6E60               	movwf	96,c	;volatile
 22972                           
 22973                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 22974  01B3BC  52E5               	movf	postdec1,f,c
 22975  01B3BE  52E5               	movf	postdec1,f,c
 22976  01B3C0  0012               	return		;funcret
 22977  01B3C2                     __end_of_PWM8_LoadDutyValue:
 22978                           	opt callstack 0
 22979                           
 22980 ;; *************** function _help_button *****************
 22981 ;; Defined at:
 22982 ;;		line 26 in file "mconfig.c"
 22983 ;; Parameters:    Size  Location     Type
 22984 ;;		None
 22985 ;; Auto vars:     Size  Location     Type
 22986 ;;		None
 22987 ;; Return value:  Size  Location     Type
 22988 ;;                  1  [STACK] _Bool 
 22989 ;; Registers used:
 22990 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22991 ;; Tracked objects:
 22992 ;;		On entry : 0/1
 22993 ;;		On exit  : 0/0
 22994 ;;		Unchanged: 0/0
 22995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23000 ;;Total ram usage:        0 bytes
 23001 ;; Hardware stack levels used:    1
 23002 ;; Hardware stack levels required when called:   16
 23003 ;; This function calls:
 23004 ;;		_StartTimer
 23005 ;;		_TimerDone
 23006 ;; This function is called by:
 23007 ;;		_check_help
 23008 ;; This function uses a reentrant model
 23009 ;;
 23010                           
 23011                           	psect	text86
 23012  01B538                     __ptext86:
 23013                           	opt callstack 0
 23014  01B538                     _help_button:
 23015                           	opt callstack 13
 23016                           
 23017                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 23018                           
 23019                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23020                           ;incstack = 0
 23021  01B538  B0CB               	btfsc	203,0,c	;volatile
 23022  01B53A  D00C               	goto	l1665
 23023                           
 23024                           ;mconfig.c: 29:   V.help = 1;
 23025  01B53C  0101               	movlb	1	; () banked
 23026  01B53E  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 23027                           
 23028                           ; BSR set to: 1
 23029                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 23030  01B540  0E08               	movlw	8
 23031  01B542  6EE6               	movwf	postinc1,c
 23032  01B544  EC5D  F0DC         	call	_TimerDone	;wreg free
 23033  01B548  5001               	movf	btemp^0,w,c
 23034  01B54A  B4D8               	btfsc	status,2,c
 23035  01B54C  D003               	goto	l1665
 23036                           
 23037                           ;mconfig.c: 31:    return 1;
 23038  01B54E  0E01               	movlw	1
 23039  01B550  6E01               	movwf	btemp^0,c
 23040  01B552  0012               	return	
 23041  01B554                     l1665:
 23042                           
 23043                           ;mconfig.c: 34:  if (!V.help)
 23044  01B554  0101               	movlb	1	; () banked
 23045  01B556  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 23046  01B558  D008               	goto	l10329
 23047                           
 23048                           ; BSR set to: 1
 23049                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 23050  01B55A  0E2C               	movlw	44
 23051  01B55C  6EE6               	movwf	postinc1,c
 23052  01B55E  0E01               	movlw	1
 23053  01B560  6EE6               	movwf	postinc1,c
 23054  01B562  0E08               	movlw	8
 23055  01B564  6EE6               	movwf	postinc1,c
 23056  01B566  ECE1  F0D9         	call	_StartTimer	;wreg free
 23057  01B56A                     l10329:
 23058                           
 23059                           ;mconfig.c: 37:  return 0;
 23060  01B56A  0E00               	movlw	0
 23061  01B56C  6E01               	movwf	btemp^0,c
 23062                           
 23063                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 23064  01B56E  0012               	return		;funcret
 23065  01B570                     __end_of_help_button:
 23066                           	opt callstack 0
 23067                           
 23068 ;; *************** function _TimerDone *****************
 23069 ;; Defined at:
 23070 ;;		line 20 in file "timers.c"
 23071 ;; Parameters:    Size  Location     Type
 23072 ;;  timer           1  [STACK] const unsigned char 
 23073 ;; Auto vars:     Size  Location     Type
 23074 ;;		None
 23075 ;; Return value:  Size  Location     Type
 23076 ;;                  1  [STACK] _Bool 
 23077 ;; Registers used:
 23078 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 23079 ;; Tracked objects:
 23080 ;;		On entry : 0/1
 23081 ;;		On exit  : 0/0
 23082 ;;		Unchanged: 0/0
 23083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23088 ;;Total ram usage:        0 bytes
 23089 ;; Hardware stack levels used:    1
 23090 ;; Hardware stack levels required when called:   15
 23091 ;; This function calls:
 23092 ;;		Nothing
 23093 ;; This function is called by:
 23094 ;;		_main
 23095 ;;		_WaitMs
 23096 ;;		_help_button
 23097 ;;		_check_help
 23098 ;;		_set_display_info
 23099 ;;		_update_adc_result
 23100 ;;		_esr_check
 23101 ;; This function uses a reentrant model
 23102 ;;
 23103                           
 23104                           	psect	text87
 23105  01B8BA                     __ptext87:
 23106                           	opt callstack 0
 23107  01B8BA                     _TimerDone:
 23108                           	opt callstack 14
 23109                           
 23110                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23111                           ;incstack = 0
 23112  01B8BA  0004               	clrwdt		;# 
 23113                           
 23114                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 23115                           ;stkvar	_timer @ sp[(0)+-1]
 23116  01B8BC  0EFF               	movlw	-1
 23117  01B8BE  50E3               	movf	plusw1,w,c
 23118  01B8C0  0D02               	mullw	2
 23119  01B8C2  0E54               	movlw	low _tickCount
 23120  01B8C4  24F3               	addwf	243,w,c
 23121  01B8C6  6ED9               	movwf	fsr2l,c
 23122  01B8C8  0E02               	movlw	high _tickCount
 23123  01B8CA  20F4               	addwfc	prodh,w,c
 23124  01B8CC  6EDA               	movwf	fsr2h,c
 23125  01B8CE  50DE               	movf	postinc2,w,c
 23126  01B8D0  10DE               	iorwf	postinc2,w,c
 23127  01B8D2  A4D8               	btfss	status,2,c
 23128  01B8D4  D002               	goto	l9639
 23129                           
 23130                           ;timers.c: 24:   return 1;
 23131  01B8D6  0E01               	movlw	1
 23132  01B8D8  D001               	goto	L27
 23133  01B8DA                     l9639:
 23134                           
 23135                           ;timers.c: 26:  return 0;
 23136  01B8DA  0E00               	movlw	0
 23137  01B8DC                     L27:
 23138  01B8DC  6E01               	movwf	btemp^0,c
 23139                           
 23140                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 23141  01B8DE  52E5               	movf	postdec1,f,c
 23142  01B8E0  0012               	return		;funcret
 23143  01B8E2                     __end_of_TimerDone:
 23144                           	opt callstack 0
 23145                           
 23146 ;; *************** function _StartTimer *****************
 23147 ;; Defined at:
 23148 ;;		line 12 in file "timers.c"
 23149 ;; Parameters:    Size  Location     Type
 23150 ;;  timer           1  [STACK] const unsigned char 
 23151 ;;  count           2  [STACK] const unsigned short 
 23152 ;; Auto vars:     Size  Location     Type
 23153 ;;		None
 23154 ;; Return value:  Size  Location     Type
 23155 ;;                  1  [STACK] void 
 23156 ;; Registers used:
 23157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23158 ;; Tracked objects:
 23159 ;;		On entry : 0/0
 23160 ;;		On exit  : 0/0
 23161 ;;		Unchanged: 0/0
 23162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23167 ;;Total ram usage:        0 bytes
 23168 ;; Hardware stack levels used:    1
 23169 ;; Hardware stack levels required when called:   15
 23170 ;; This function calls:
 23171 ;;		Nothing
 23172 ;; This function is called by:
 23173 ;;		_main
 23174 ;;		_WaitMs
 23175 ;;		_help_button
 23176 ;;		_check_help
 23177 ;;		_update_adc_result
 23178 ;;		_calc_bsoc
 23179 ;;		_esr_check
 23180 ;; This function uses a reentrant model
 23181 ;;
 23182                           
 23183                           	psect	text88
 23184  01B3C2                     __ptext88:
 23185                           	opt callstack 0
 23186  01B3C2                     _StartTimer:
 23187                           	opt callstack 0
 23188                           
 23189                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 23190                           ;stkvar	_count @ sp[(0)+-3]
 23191                           
 23192                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23193                           ;incstack = 0
 23194 ;; hardware stack exceeded
 23195  01B3C2  0EFD               	movlw	-3
 23196  01B3C4  006F FF8C  F00B    	movff	plusw1,btemp+10
 23197  01B3CA  0EFE               	movlw	-2
 23198  01B3CC  006F FF8C  F00C    	movff	plusw1,btemp+11
 23199  01B3D2  90D8               	bcf	status,0,c
 23200  01B3D4  340B               	rlcf	(btemp+10)^0,w,c
 23201  01B3D6  6E09               	movwf	(btemp+8)^0,c
 23202  01B3D8  340C               	rlcf	(btemp+11)^0,w,c
 23203  01B3DA  6E0A               	movwf	(btemp+9)^0,c
 23204                           
 23205                           ;stkvar	_timer @ sp[(0)+-1]
 23206  01B3DC  0EFF               	movlw	-1
 23207  01B3DE  50E3               	movf	plusw1,w,c
 23208  01B3E0  0D02               	mullw	2
 23209  01B3E2  0E54               	movlw	low _tickCount
 23210  01B3E4  24F3               	addwf	243,w,c
 23211  01B3E6  6ED9               	movwf	fsr2l,c
 23212  01B3E8  0E02               	movlw	high _tickCount
 23213  01B3EA  20F4               	addwfc	prodh,w,c
 23214  01B3EC  6EDA               	movwf	fsr2h,c
 23215  01B3EE  0060  F027  FFDE   	movff	btemp+8,postinc2
 23216  01B3F4  0060  F02B  FFDD   	movff	btemp+9,postdec2
 23217                           
 23218                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 23219  01B3FA  52E5               	movf	postdec1,f,c
 23220  01B3FC  52E5               	movf	postdec1,f,c
 23221  01B3FE  52E5               	movf	postdec1,f,c
 23222  01B400  0012               	return		;funcret
 23223  01B402                     __end_of_StartTimer:
 23224                           	opt callstack 0
 23225                           
 23226 ;; *************** function _display_info *****************
 23227 ;; Defined at:
 23228 ;;		line 190 in file "mconfig.c"
 23229 ;; Parameters:    Size  Location     Type
 23230 ;;		None
 23231 ;; Auto vars:     Size  Location     Type
 23232 ;;		None
 23233 ;; Return value:  Size  Location     Type
 23234 ;;                  1  [STACK] enum E16509
 23235 ;; Registers used:
 23236 ;;		btemp
 23237 ;; Tracked objects:
 23238 ;;		On entry : 0/1
 23239 ;;		On exit  : 0/0
 23240 ;;		Unchanged: 0/0
 23241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23246 ;;Total ram usage:        0 bytes
 23247 ;; Hardware stack levels used:    1
 23248 ;; Hardware stack levels required when called:   15
 23249 ;; This function calls:
 23250 ;;		Nothing
 23251 ;; This function is called by:
 23252 ;;		_check_help
 23253 ;; This function uses a reentrant model
 23254 ;;
 23255                           
 23256                           	psect	text89
 23257  01BE56                     __ptext89:
 23258                           	opt callstack 0
 23259  01BE56                     _display_info:
 23260                           	opt callstack 14
 23261                           
 23262                           ;mconfig.c: 192:  return V.response.info;
 23263                           
 23264                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23265                           ;incstack = 0
 23266  01BE56  0060  F690  F001   	movff	_V+164,btemp	;volatile
 23267                           
 23268                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 23269  01BE5C  0012               	return		;funcret
 23270  01BE5E                     __end_of_display_info:
 23271                           	opt callstack 0
 23272                           
 23273 ;; *************** function _display_help *****************
 23274 ;; Defined at:
 23275 ;;		line 195 in file "mconfig.c"
 23276 ;; Parameters:    Size  Location     Type
 23277 ;;		None
 23278 ;; Auto vars:     Size  Location     Type
 23279 ;;		None
 23280 ;; Return value:  Size  Location     Type
 23281 ;;                  1  [STACK] enum E16509
 23282 ;; Registers used:
 23283 ;;		btemp
 23284 ;; Tracked objects:
 23285 ;;		On entry : 3F/1
 23286 ;;		On exit  : 0/0
 23287 ;;		Unchanged: 0/0
 23288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23293 ;;Total ram usage:        0 bytes
 23294 ;; Hardware stack levels used:    1
 23295 ;; Hardware stack levels required when called:   15
 23296 ;; This function calls:
 23297 ;;		Nothing
 23298 ;; This function is called by:
 23299 ;;		_check_help
 23300 ;; This function uses a reentrant model
 23301 ;;
 23302                           
 23303                           	psect	text90
 23304  01BE5E                     __ptext90:
 23305                           	opt callstack 0
 23306  01BE5E                     _display_help:
 23307                           	opt callstack 14
 23308                           
 23309                           ;mconfig.c: 197:  return V.response.help_temp;
 23310                           
 23311                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23312                           ;incstack = 0
 23313  01BE5E  0060  F694  F001   	movff	_V+165,btemp	;volatile
 23314                           
 23315                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 23316  01BE64  0012               	return		;funcret
 23317  01BE66                     __end_of_display_help:
 23318                           	opt callstack 0
 23319                           
 23320 ;; *************** function _check_enter_button *****************
 23321 ;; Defined at:
 23322 ;;		line 42 in file "hid.c"
 23323 ;; Parameters:    Size  Location     Type
 23324 ;;  h               2  [STACK] PTR struct H_data
 23325 ;;		 -> H(7), 
 23326 ;; Auto vars:     Size  Location     Type
 23327 ;;		None
 23328 ;; Return value:  Size  Location     Type
 23329 ;;                  1  [STACK] _Bool 
 23330 ;; Registers used:
 23331 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 23332 ;; Tracked objects:
 23333 ;;		On entry : 0/0
 23334 ;;		On exit  : 0/0
 23335 ;;		Unchanged: 0/0
 23336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23341 ;;Total ram usage:        0 bytes
 23342 ;; Hardware stack levels used:    1
 23343 ;; Hardware stack levels required when called:   15
 23344 ;; This function calls:
 23345 ;;		Nothing
 23346 ;; This function is called by:
 23347 ;;		_main
 23348 ;; This function uses a reentrant model
 23349 ;;
 23350                           
 23351                           	psect	text91
 23352  01AB6A                     __ptext91:
 23353                           	opt callstack 0
 23354  01AB6A                     _check_enter_button:
 23355                           	opt callstack 15
 23356                           
 23357                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 23358                           ;stkvar	_h @ sp[(0)+-2]
 23359                           
 23360                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23361                           ;incstack = 0
 23362  01AB6A  0EFE               	movlw	-2
 23363  01AB6C  006F FF8C  F00B    	movff	plusw1,btemp+10
 23364  01AB72  0EFF               	movlw	-1
 23365  01AB74  006F FF8C  F00C    	movff	plusw1,btemp+11
 23366  01AB7A  0E04               	movlw	4
 23367  01AB7C  240B               	addwf	(btemp+10)^0,w,c
 23368  01AB7E  6ED9               	movwf	fsr2l,c
 23369  01AB80  0E00               	movlw	0
 23370  01AB82  200C               	addwfc	(btemp+11)^0,w,c
 23371  01AB84  6EDA               	movwf	fsr2h,c
 23372  01AB86  50DF               	movf	indf2,w,c
 23373  01AB88  A4D8               	btfss	status,2,c
 23374  01AB8A  D023               	goto	l12839
 23375                           
 23376                           ;stkvar	_h @ sp[(0)+-2]
 23377  01AB8C  0EFE               	movlw	-2
 23378  01AB8E  006F FF8C  F00B    	movff	plusw1,btemp+10
 23379  01AB94  0EFF               	movlw	-1
 23380  01AB96  006F FF8C  F00C    	movff	plusw1,btemp+11
 23381  01AB9C  0E05               	movlw	5
 23382  01AB9E  240B               	addwf	(btemp+10)^0,w,c
 23383  01ABA0  6ED9               	movwf	fsr2l,c
 23384  01ABA2  0E00               	movlw	0
 23385  01ABA4  200C               	addwfc	(btemp+11)^0,w,c
 23386  01ABA6  6EDA               	movwf	fsr2h,c
 23387  01ABA8  50DF               	movf	indf2,w,c
 23388  01ABAA  A4D8               	btfss	status,2,c
 23389  01ABAC  D012               	goto	l12839
 23390                           
 23391                           ;hid.c: 45:   h->wait_enter = 1;
 23392                           ;stkvar	_h @ sp[(0)+-2]
 23393  01ABAE  0EFE               	movlw	-2
 23394  01ABB0  006F FF8C  F00B    	movff	plusw1,btemp+10
 23395  01ABB6  0EFF               	movlw	-1
 23396  01ABB8  006F FF8C  F00C    	movff	plusw1,btemp+11
 23397  01ABBE  0E04               	movlw	4
 23398  01ABC0  240B               	addwf	(btemp+10)^0,w,c
 23399  01ABC2  6ED9               	movwf	fsr2l,c
 23400  01ABC4  0E00               	movlw	0
 23401  01ABC6  200C               	addwfc	(btemp+11)^0,w,c
 23402  01ABC8  6EDA               	movwf	fsr2h,c
 23403  01ABCA  0E01               	movlw	1
 23404  01ABCC  6EDF               	movwf	indf2,c
 23405                           
 23406                           ;hid.c: 46:   return 1;
 23407  01ABCE  0E01               	movlw	1
 23408  01ABD0  D001               	goto	L28
 23409  01ABD2                     l12839:
 23410                           
 23411                           ;hid.c: 48:  return 0;
 23412  01ABD2  0E00               	movlw	0
 23413  01ABD4                     L28:
 23414  01ABD4  6E01               	movwf	btemp^0,c
 23415                           
 23416                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 23417  01ABD6  52E5               	movf	postdec1,f,c
 23418  01ABD8  52E5               	movf	postdec1,f,c
 23419  01ABDA  0012               	return		;funcret
 23420  01ABDC                     __end_of_check_enter_button:
 23421                           	opt callstack 0
 23422                           
 23423 ;; *************** function _calc_ror_data *****************
 23424 ;; Defined at:
 23425 ;;		line 102 in file "mbmc.c"
 23426 ;; Parameters:    Size  Location     Type
 23427 ;;		None
 23428 ;; Auto vars:     Size  Location     Type
 23429 ;;		None
 23430 ;; Return value:  Size  Location     Type
 23431 ;;                  1  [STACK] void 
 23432 ;; Registers used:
 23433 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23434 ;; Tracked objects:
 23435 ;;		On entry : 0/39
 23436 ;;		On exit  : 0/0
 23437 ;;		Unchanged: 0/0
 23438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23443 ;;Total ram usage:        0 bytes
 23444 ;; Hardware stack levels used:    1
 23445 ;; Hardware stack levels required when called:   18
 23446 ;; This function calls:
 23447 ;;		___flge
 23448 ;;		___flsub
 23449 ;;		_conv_raw_result
 23450 ;;		_fabsf
 23451 ;; This function is called by:
 23452 ;;		_main
 23453 ;; This function uses a reentrant model
 23454 ;;
 23455                           
 23456                           	psect	text92
 23457  01885C                     __ptext92:
 23458                           	opt callstack 0
 23459  01885C                     _calc_ror_data:
 23460                           	opt callstack 12
 23461                           
 23462                           ;mbmc.c: 104:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 106:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 23463                           
 23464                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23465                           ;incstack = 0
 23466  01885C  0060  F1E3  FFE6   	movff	calc_ror_data@bcror,postinc1
 23467  018862  0060  F1E7  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 23468  018868  0060  F1EB  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 23469  01886E  0060  F1EF  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 23470  018874  0E00               	movlw	0
 23471  018876  6EE6               	movwf	postinc1,c
 23472  018878  0E00               	movlw	0
 23473  01887A  6EE6               	movwf	postinc1,c
 23474  01887C  EC0D  F0A8         	call	_conv_raw_result	;wreg free
 23475  018880  0060  F007  FFE6   	movff	btemp,postinc1
 23476  018886  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23477  01888C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23478  018892  0060  F013  FFE6   	movff	btemp+3,postinc1
 23479  018898  EC7B  F0D9         	call	___flsub	;wreg free
 23480  01889C  0060  F007  FFE6   	movff	btemp,postinc1
 23481  0188A2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23482  0188A8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23483  0188AE  0060  F013  FFE6   	movff	btemp+3,postinc1
 23484  0188B4  ECED  F0D1         	call	_fabsf	;wreg free
 23485  0188B8  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 23486  0188BE  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 23487  0188C4  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 23488  0188CA  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 23489                           
 23490                           ;mbmc.c: 107:  bcror = conv_raw_result(C_BATT, CONV);
 23491  0188D0  0E00               	movlw	0
 23492  0188D2  6EE6               	movwf	postinc1,c
 23493  0188D4  0E00               	movlw	0
 23494  0188D6  6EE6               	movwf	postinc1,c
 23495  0188D8  EC0D  F0A8         	call	_conv_raw_result	;wreg free
 23496  0188DC  0060  F004  F078   	movff	btemp,calc_ror_data@bcror
 23497  0188E2  0060  F008  F079   	movff	btemp+1,calc_ror_data@bcror+1
 23498  0188E8  0060  F00C  F07A   	movff	btemp+2,calc_ror_data@bcror+2
 23499  0188EE  0060  F010  F07B   	movff	btemp+3,calc_ror_data@bcror+3
 23500                           
 23501                           ;mbmc.c: 108:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 23502  0188F4  0060  F1F3  FFE6   	movff	calc_ror_data@bvror,postinc1
 23503  0188FA  0060  F1F7  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 23504  018900  0060  F1FB  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 23505  018906  0060  F1FF  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 23506  01890C  0E00               	movlw	0
 23507  01890E  6EE6               	movwf	postinc1,c
 23508  018910  0E04               	movlw	4
 23509  018912  6EE6               	movwf	postinc1,c
 23510  018914  EC0D  F0A8         	call	_conv_raw_result	;wreg free
 23511  018918  0060  F007  FFE6   	movff	btemp,postinc1
 23512  01891E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23513  018924  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23514  01892A  0060  F013  FFE6   	movff	btemp+3,postinc1
 23515  018930  EC7B  F0D9         	call	___flsub	;wreg free
 23516  018934  0060  F007  FFE6   	movff	btemp,postinc1
 23517  01893A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23518  018940  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23519  018946  0060  F013  FFE6   	movff	btemp+3,postinc1
 23520  01894C  ECED  F0D1         	call	_fabsf	;wreg free
 23521  018950  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 23522  018956  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 23523  01895C  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 23524  018962  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 23525                           
 23526                           ;mbmc.c: 109:  if (C.bv_ror < 0.0051)
 23527  018968  0EE7               	movlw	231
 23528  01896A  6EE6               	movwf	postinc1,c
 23529  01896C  0E1D               	movlw	29
 23530  01896E  6EE6               	movwf	postinc1,c
 23531  018970  0EA7               	movlw	167
 23532  018972  6EE6               	movwf	postinc1,c
 23533  018974  0E3B               	movlw	59
 23534  018976  6EE6               	movwf	postinc1,c
 23535  018978  EE21  F36B         	lfsr	2,_C+108	;volatile
 23536  01897C  006F FF7B FFE6     	movff	postinc2,postinc1
 23537  018982  006F FF7B FFE6     	movff	postinc2,postinc1
 23538  018988  006F FF7B FFE6     	movff	postinc2,postinc1
 23539  01898E  006F FF7B FFE6     	movff	postinc2,postinc1
 23540  018994  EC6A  F0C6         	call	___flge	;wreg free
 23541  018998  B001               	btfsc	btemp& (0+255),0,c
 23542  01899A  D010               	goto	l10717
 23543                           
 23544                           ;mbmc.c: 110:   C.bv_ror = 0.0140 + 0.0001;
 23545  01899C  0EB0               	movlw	176
 23546  01899E  006F FFA0  F76B    	movff	wreg,_C+108	;volatile
 23547  0189A4  0E03               	movlw	3
 23548  0189A6  006F FFA0  F76C    	movff	wreg,_C+109	;volatile
 23549  0189AC  0E67               	movlw	103
 23550  0189AE  006F FFA0  F76D    	movff	wreg,_C+110	;volatile
 23551  0189B4  0E3C               	movlw	60
 23552  0189B6  006F FFA0  F76E    	movff	wreg,_C+111	;volatile
 23553  0189BC                     l10717:
 23554                           
 23555                           ;mbmc.c: 111:  bvror = conv_raw_result(V_BAT, CONV);
 23556  0189BC  0E00               	movlw	0
 23557  0189BE  6EE6               	movwf	postinc1,c
 23558  0189C0  0E04               	movlw	4
 23559  0189C2  6EE6               	movwf	postinc1,c
 23560  0189C4  EC0D  F0A8         	call	_conv_raw_result	;wreg free
 23561  0189C8  0060  F004  F07C   	movff	btemp,calc_ror_data@bvror
 23562  0189CE  0060  F008  F07D   	movff	btemp+1,calc_ror_data@bvror+1
 23563  0189D4  0060  F00C  F07E   	movff	btemp+2,calc_ror_data@bvror+2
 23564  0189DA  0060  F010  F07F   	movff	btemp+3,calc_ror_data@bvror+3
 23565                           
 23566                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 23567  0189E0  0012               	return		;funcret
 23568  0189E2                     __end_of_calc_ror_data:
 23569                           	opt callstack 0
 23570                           
 23571 ;; *************** function _fabsf *****************
 23572 ;; Defined at:
 23573 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 23574 ;; Parameters:    Size  Location     Type
 23575 ;;  x               4  [STACK] float 
 23576 ;; Auto vars:     Size  Location     Type
 23577 ;;  u               4  [STACK] struct .
 23578 ;; Return value:  Size  Location     Type
 23579 ;;                  4  [STACK] float 
 23580 ;; Registers used:
 23581 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 23582 ;; Tracked objects:
 23583 ;;		On entry : 0/0
 23584 ;;		On exit  : 0/0
 23585 ;;		Unchanged: 0/0
 23586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23591 ;;Total ram usage:        0 bytes
 23592 ;; Hardware stack levels used:    1
 23593 ;; Hardware stack levels required when called:   15
 23594 ;; This function calls:
 23595 ;;		Nothing
 23596 ;; This function is called by:
 23597 ;;		_main
 23598 ;;		_calc_ror_data
 23599 ;;		_calc_bsoc
 23600 ;;		_esr_check
 23601 ;; This function uses a reentrant model
 23602 ;;
 23603                           
 23604                           	psect	text93
 23605  01A3DA                     __ptext93:
 23606                           	opt callstack 0
 23607  01A3DA                     _fabsf:
 23608                           	opt callstack 0
 23609                           
 23610                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23611  01A3DA  52E6               	movf	postinc1,f,c
 23612  01A3DC  52E6               	movf	postinc1,f,c
 23613  01A3DE  52E6               	movf	postinc1,f,c
 23614  01A3E0  52E6               	movf	postinc1,f,c
 23615                           
 23616                           ;incstack = 0
 23617 ;; hardware stack exceeded
 23618  01A3E2  0060  F1C0  F009   	movff	fabsf@F463,btemp+8
 23619  01A3E8  0060  F1C4  F00A   	movff	fabsf@F463+1,btemp+9
 23620  01A3EE  0060  F1C8  F00B   	movff	fabsf@F463+2,btemp+10
 23621  01A3F4  0060  F1CC  F00C   	movff	fabsf@F463+3,btemp+11
 23622                           
 23623                           ;stkvar	_u @ sp[(-4)+0]
 23624  01A3FA  0EFC               	movlw	-4
 23625  01A3FC  0060  F027  FFE3   	movff	btemp+8,plusw1
 23626  01A402  0EFD               	movlw	-3
 23627  01A404  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23628  01A40A  0EFE               	movlw	-2
 23629  01A40C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23630  01A412  0EFF               	movlw	-1
 23631  01A414  0060  F033  FFE3   	movff	btemp+11,plusw1
 23632                           
 23633                           ;stkvar	_x @ sp[(-4)+-4]
 23634  01A41A  0EF8               	movlw	-8
 23635  01A41C  006F FF8C  F009    	movff	plusw1,btemp+8
 23636  01A422  0EF9               	movlw	-7
 23637  01A424  006F FF8C  F00A    	movff	plusw1,btemp+9
 23638  01A42A  0EFA               	movlw	-6
 23639  01A42C  006F FF8C  F00B    	movff	plusw1,btemp+10
 23640  01A432  0EFB               	movlw	-5
 23641  01A434  006F FF8C  F00C    	movff	plusw1,btemp+11
 23642                           
 23643                           ;stkvar	_u @ sp[(-4)+0]
 23644  01A43A  0EFC               	movlw	-4
 23645  01A43C  0060  F027  FFE3   	movff	btemp+8,plusw1
 23646  01A442  0EFD               	movlw	-3
 23647  01A444  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23648  01A44A  0EFE               	movlw	-2
 23649  01A44C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23650  01A452  0EFF               	movlw	-1
 23651  01A454  0060  F033  FFE3   	movff	btemp+11,plusw1
 23652                           
 23653                           ;stkvar	_u @ sp[(-4)+0]
 23654  01A45A  0EFF               	movlw	-1
 23655  01A45C  9EE3               	bcf	plusw1,7,c
 23656                           
 23657                           ;stkvar	_u @ sp[(-4)+0]
 23658  01A45E  0EFC               	movlw	-4
 23659  01A460  006F FF8C  F001    	movff	plusw1,btemp
 23660  01A466  0EFD               	movlw	-3
 23661  01A468  006F FF8C  F002    	movff	plusw1,btemp+1
 23662  01A46E  0EFE               	movlw	-2
 23663  01A470  006F FF8C  F003    	movff	plusw1,btemp+2
 23664  01A476  0EFF               	movlw	-1
 23665  01A478  006F FF8C  F004    	movff	plusw1,btemp+3
 23666                           
 23667                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 23668  01A47E  0EF8               	movlw	248
 23669  01A480  26E1               	addwf	fsr1l,f,c
 23670  01A482  0EFF               	movlw	255
 23671  01A484  22E2               	addwfc	fsr1h,f,c
 23672  01A486  0012               	return		;funcret
 23673  01A488                     __end_of_fabsf:
 23674                           	opt callstack 0
 23675                           
 23676 ;; *************** function _conv_raw_result *****************
 23677 ;; Defined at:
 23678 ;;		line 95 in file "daq.c"
 23679 ;; Parameters:    Size  Location     Type
 23680 ;;  chan            1  [STACK] const enum E16582
 23681 ;;  to_what         1  [STACK] const enum E16644
 23682 ;; Auto vars:     Size  Location     Type
 23683 ;;		None
 23684 ;; Return value:  Size  Location     Type
 23685 ;;                  4  [STACK] float 
 23686 ;; Registers used:
 23687 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23688 ;; Tracked objects:
 23689 ;;		On entry : 0/39
 23690 ;;		On exit  : 0/0
 23691 ;;		Unchanged: 0/0
 23692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23697 ;;Total ram usage:        0 bytes
 23698 ;; Hardware stack levels used:    1
 23699 ;; Hardware stack levels required when called:   17
 23700 ;; This function calls:
 23701 ;;		___fldiv
 23702 ;;		___flmul
 23703 ;;		___flsub
 23704 ;;		___xxtofl
 23705 ;;		_get_raw_result
 23706 ;;		_nanf
 23707 ;; This function is called by:
 23708 ;;		_main
 23709 ;;		_convert_adc_data
 23710 ;;		_calc_ror_data
 23711 ;;		_check_day_time
 23712 ;;		_init_bsoc
 23713 ;;		_esr_check
 23714 ;; This function uses a reentrant model
 23715 ;;
 23716                           
 23717                           	psect	text94
 23718  01501A                     __ptext94:
 23719                           	opt callstack 0
 23720  01501A                     _conv_raw_result:
 23721                           	opt callstack 0
 23722                           
 23723                           ;daq.c: 95: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 96: {;daq.c: 98:  switch (to_what) {
 23724                           
 23725                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23726                           ;incstack = 0
 23727 ;; hardware stack exceeded
 23728  01501A  D242               	goto	l9621
 23729  01501C                     l9567:
 23730                           
 23731                           ;daq.c: 100:   if (!(0b0011110001110111 >> chan & 0x1))
 23732                           ;stkvar	_chan @ sp[(0)+-1]
 23733  01501C  0EFF               	movlw	-1
 23734  01501E  006F FF8C  F00C    	movff	plusw1,btemp+11
 23735  015024  0E77               	movlw	119
 23736  015026  6E09               	movwf	(btemp+8)^0,c
 23737  015028  0E3C               	movlw	60
 23738  01502A  6E0A               	movwf	(btemp+9)^0,c
 23739  01502C  2A0C               	incf	(btemp+11)^0,f,c
 23740  01502E  D003               	goto	u9024
 23741  015030                     u9025:
 23742  015030  340A               	rlcf	(btemp+9)^0,w,c
 23743  015032  320A               	rrcf	(btemp+9)^0,f,c
 23744  015034  3209               	rrcf	(btemp+8)^0,f,c
 23745  015036                     u9024:
 23746  015036  2E0C               	decfsz	(btemp+11)^0,f,c
 23747  015038  D7FB               	goto	u9025
 23748  01503A  B009               	btfsc	(btemp+8)^0,0,c
 23749  01503C  D007               	goto	l9573
 23750                           
 23751                           ;daq.c: 101:    return nanf("");
 23752  01503E  0EB9               	movlw	low (STR_65+102)
 23753  015040  6EE6               	movwf	postinc1,c
 23754  015042  0EFC               	movlw	high (STR_65+102)
 23755  015044  6EE6               	movwf	postinc1,c
 23756  015046  EC23  F0D7         	call	_nanf	;wreg free
 23757  01504A  D23A               	goto	l1784
 23758  01504C                     l9573:
 23759                           
 23760                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1) {
 23761                           ;stkvar	_chan @ sp[(0)+-1]
 23762  01504C  0EFF               	movlw	-1
 23763  01504E  006F FF8C  F00C    	movff	plusw1,btemp+11
 23764  015054  0E03               	movlw	3
 23765  015056  6E09               	movwf	(btemp+8)^0,c
 23766  015058  0E00               	movlw	0
 23767  01505A  6E0A               	movwf	(btemp+9)^0,c
 23768  01505C  2A0C               	incf	(btemp+11)^0,f,c
 23769  01505E  D003               	goto	u9044
 23770  015060                     u9045:
 23771  015060  340A               	rlcf	(btemp+9)^0,w,c
 23772  015062  320A               	rrcf	(btemp+9)^0,f,c
 23773  015064  3209               	rrcf	(btemp+8)^0,f,c
 23774  015066                     u9044:
 23775  015066  2E0C               	decfsz	(btemp+11)^0,f,c
 23776  015068  D7FB               	goto	u9045
 23777  01506A  A009               	btfss	(btemp+8)^0,0,c
 23778  01506C  D0EB               	goto	l9587
 23779                           
 23780                           ;daq.c: 104:    if (0b0000000000000001 >> chan & 0x1) {
 23781                           ;stkvar	_chan @ sp[(0)+-1]
 23782  01506E  0EFF               	movlw	-1
 23783  015070  006F FF8C  F00C    	movff	plusw1,btemp+11
 23784  015076  0E01               	movlw	1
 23785  015078  6E09               	movwf	(btemp+8)^0,c
 23786  01507A  0E00               	movlw	0
 23787  01507C  6E0A               	movwf	(btemp+9)^0,c
 23788  01507E  2A0C               	incf	(btemp+11)^0,f,c
 23789  015080  D003               	goto	u9064
 23790  015082                     u9065:
 23791  015082  340A               	rlcf	(btemp+9)^0,w,c
 23792  015084  320A               	rrcf	(btemp+9)^0,f,c
 23793  015086  3209               	rrcf	(btemp+8)^0,f,c
 23794  015088                     u9064:
 23795  015088  2E0C               	decfsz	(btemp+11)^0,f,c
 23796  01508A  D7FB               	goto	u9065
 23797  01508C  A009               	btfss	(btemp+8)^0,0,c
 23798  01508E  D06D               	goto	l9583
 23799                           
 23800                           ;daq.c: 105:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.0850
      +                          000;
 23801  015090  0E7B               	movlw	123
 23802  015092  6EE6               	movwf	postinc1,c
 23803  015094  0E14               	movlw	20
 23804  015096  6EE6               	movwf	postinc1,c
 23805  015098  0EAE               	movlw	174
 23806  01509A  6EE6               	movwf	postinc1,c
 23807  01509C  0E3D               	movlw	61
 23808  01509E  6EE6               	movwf	postinc1,c
 23809  0150A0  0060  F374  F009   	movff	_R+32,btemp+8	;volatile
 23810  0150A6  0060  F378  F00A   	movff	_R+33,btemp+9	;volatile
 23811  0150AC  0E00               	movlw	0
 23812  0150AE  BE0A               	btfsc	(btemp+9)^0,7,c
 23813  0150B0  0EFF               	movlw	255
 23814  0150B2  6E0B               	movwf	(btemp+10)^0,c
 23815  0150B4  6E0C               	movwf	(btemp+11)^0,c
 23816  0150B6  0060  F027  FFE6   	movff	btemp+8,postinc1
 23817  0150BC  0060  F02B  FFE6   	movff	btemp+9,postinc1
 23818  0150C2  0060  F02F  FFE6   	movff	btemp+10,postinc1
 23819  0150C8  0060  F033  FFE6   	movff	btemp+11,postinc1
 23820  0150CE  0E01               	movlw	1
 23821  0150D0  6EE6               	movwf	postinc1,c
 23822  0150D2  EC95  F0C0         	call	___xxtofl	;wreg free
 23823  0150D6  0060  F007  FFE6   	movff	btemp,postinc1
 23824  0150DC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23825  0150E2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23826  0150E8  0060  F013  FFE6   	movff	btemp+3,postinc1
 23827                           
 23828                           ;stkvar	_chan @ sp[(-8)+-1]
 23829  0150EE  0EF7               	movlw	-9
 23830  0150F0  50E3               	movf	plusw1,w,c
 23831  0150F2  6EE6               	movwf	postinc1,c
 23832  0150F4  EC3F  F0DE         	call	_get_raw_result	;wreg free
 23833  0150F8  0060  F004  F00B   	movff	btemp,btemp+10
 23834  0150FE  0060  F008  F00C   	movff	btemp+1,btemp+11
 23835  015104  500B               	movf	(btemp+10)^0,w,c
 23836  015106  6E05               	movwf	(btemp+4)^0,c
 23837  015108  500C               	movf	(btemp+11)^0,w,c
 23838  01510A  6E06               	movwf	(btemp+5)^0,c
 23839  01510C  6A07               	clrf	(btemp+6)^0,c
 23840  01510E  6A08               	clrf	(btemp+7)^0,c
 23841  015110  0060  F017  FFE6   	movff	btemp+4,postinc1
 23842  015116  0060  F01B  FFE6   	movff	btemp+5,postinc1
 23843  01511C  0060  F01F  FFE6   	movff	btemp+6,postinc1
 23844  015122  0060  F023  FFE6   	movff	btemp+7,postinc1
 23845  015128  0E00               	movlw	0
 23846  01512A  6EE6               	movwf	postinc1,c
 23847  01512C  EC95  F0C0         	call	___xxtofl	;wreg free
 23848  015130  0060  F007  FFE6   	movff	btemp,postinc1
 23849  015136  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23850  01513C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23851  015142  0060  F013  FFE6   	movff	btemp+3,postinc1
 23852  015148  EC7B  F0D9         	call	___flsub	;wreg free
 23853  01514C  0060  F007  FFE6   	movff	btemp,postinc1
 23854  015152  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23855  015158  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23856  01515E  0060  F013  FFE6   	movff	btemp+3,postinc1
 23857  015164  EC9F  F099         	call	___flmul	;wreg free
 23858  015168  D1AB               	goto	l1784
 23859  01516A                     l9583:
 23860                           
 23861                           ;daq.c: 107:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.0350
      +                          000;
 23862  01516A  0E29               	movlw	41
 23863  01516C  6EE6               	movwf	postinc1,c
 23864  01516E  0E5C               	movlw	92
 23865  015170  6EE6               	movwf	postinc1,c
 23866  015172  0E0F               	movlw	15
 23867  015174  6EE6               	movwf	postinc1,c
 23868  015176  0E3D               	movlw	61
 23869  015178  6EE6               	movwf	postinc1,c
 23870  01517A  0060  F37C  F009   	movff	_R+34,btemp+8	;volatile
 23871  015180  0060  F380  F00A   	movff	_R+35,btemp+9	;volatile
 23872  015186  0E00               	movlw	0
 23873  015188  BE0A               	btfsc	(btemp+9)^0,7,c
 23874  01518A  0EFF               	movlw	255
 23875  01518C  6E0B               	movwf	(btemp+10)^0,c
 23876  01518E  6E0C               	movwf	(btemp+11)^0,c
 23877  015190  0060  F027  FFE6   	movff	btemp+8,postinc1
 23878  015196  0060  F02B  FFE6   	movff	btemp+9,postinc1
 23879  01519C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 23880  0151A2  0060  F033  FFE6   	movff	btemp+11,postinc1
 23881  0151A8  0E01               	movlw	1
 23882  0151AA  6EE6               	movwf	postinc1,c
 23883  0151AC  EC95  F0C0         	call	___xxtofl	;wreg free
 23884  0151B0  0060  F007  FFE6   	movff	btemp,postinc1
 23885  0151B6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23886  0151BC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23887  0151C2  0060  F013  FFE6   	movff	btemp+3,postinc1
 23888                           
 23889                           ;stkvar	_chan @ sp[(-8)+-1]
 23890  0151C8  0EF7               	movlw	-9
 23891  0151CA  50E3               	movf	plusw1,w,c
 23892  0151CC  6EE6               	movwf	postinc1,c
 23893  0151CE  EC3F  F0DE         	call	_get_raw_result	;wreg free
 23894  0151D2  0060  F004  F00B   	movff	btemp,btemp+10
 23895  0151D8  0060  F008  F00C   	movff	btemp+1,btemp+11
 23896  0151DE  500B               	movf	(btemp+10)^0,w,c
 23897  0151E0  6E05               	movwf	(btemp+4)^0,c
 23898  0151E2  500C               	movf	(btemp+11)^0,w,c
 23899  0151E4  6E06               	movwf	(btemp+5)^0,c
 23900  0151E6  6A07               	clrf	(btemp+6)^0,c
 23901  0151E8  6A08               	clrf	(btemp+7)^0,c
 23902  0151EA  0060  F017  FFE6   	movff	btemp+4,postinc1
 23903  0151F0  0060  F01B  FFE6   	movff	btemp+5,postinc1
 23904  0151F6  0060  F01F  FFE6   	movff	btemp+6,postinc1
 23905  0151FC  0060  F023  FFE6   	movff	btemp+7,postinc1
 23906  015202  0E00               	movlw	0
 23907  015204  6EE6               	movwf	postinc1,c
 23908  015206  EC95  F0C0         	call	___xxtofl	;wreg free
 23909  01520A  0060  F007  FFE6   	movff	btemp,postinc1
 23910  015210  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23911  015216  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23912  01521C  0060  F013  FFE6   	movff	btemp+3,postinc1
 23913  015222  EC7B  F0D9         	call	___flsub	;wreg free
 23914  015226  0060  F007  FFE6   	movff	btemp,postinc1
 23915  01522C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23916  015232  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23917  015238  0060  F013  FFE6   	movff	btemp+3,postinc1
 23918  01523E  EC9F  F099         	call	___flmul	;wreg free
 23919  015242  D13E               	goto	l1784
 23920  015244                     l9587:
 23921                           
 23922                           ;daq.c: 110:    if (0b0000100000000000 >> chan & 0x1) {
 23923                           ;stkvar	_chan @ sp[(0)+-1]
 23924  015244  0EFF               	movlw	-1
 23925  015246  006F FF8C  F00C    	movff	plusw1,btemp+11
 23926  01524C  0E00               	movlw	0
 23927  01524E  6E09               	movwf	(btemp+8)^0,c
 23928  015250  0E08               	movlw	8
 23929  015252  6E0A               	movwf	(btemp+9)^0,c
 23930  015254  2A0C               	incf	(btemp+11)^0,f,c
 23931  015256  D003               	goto	u9084
 23932  015258                     u9085:
 23933  015258  340A               	rlcf	(btemp+9)^0,w,c
 23934  01525A  320A               	rrcf	(btemp+9)^0,f,c
 23935  01525C  3209               	rrcf	(btemp+8)^0,f,c
 23936  01525E                     u9084:
 23937  01525E  2E0C               	decfsz	(btemp+11)^0,f,c
 23938  015260  D7FB               	goto	u9085
 23939  015262  A009               	btfss	(btemp+8)^0,0,c
 23940  015264  D008               	goto	l9595
 23941                           
 23942                           ;daq.c: 111:     return 25.0;
 23943  015266  0E00               	movlw	0
 23944  015268  6E01               	movwf	btemp^0,c
 23945  01526A  0E00               	movlw	0
 23946  01526C  6E02               	movwf	(btemp+1)^0,c
 23947  01526E  0EC8               	movlw	200
 23948  015270  6E03               	movwf	(btemp+2)^0,c
 23949  015272  0E41               	movlw	65
 23950  015274  D113               	goto	L29
 23951  015276                     l9595:
 23952                           
 23953                           ;daq.c: 113:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 23954  015276  0E00               	movlw	0
 23955  015278  6EE6               	movwf	postinc1,c
 23956  01527A  0E00               	movlw	0
 23957  01527C  6EE6               	movwf	postinc1,c
 23958  01527E  0E7A               	movlw	122
 23959  015280  6EE6               	movwf	postinc1,c
 23960  015282  0E44               	movlw	68
 23961  015284  6EE6               	movwf	postinc1,c
 23962  015286  0E61               	movlw	97
 23963  015288  6EE6               	movwf	postinc1,c
 23964  01528A  0E03               	movlw	3
 23965  01528C  6EE6               	movwf	postinc1,c
 23966  01528E  0E84               	movlw	132
 23967  015290  6EE6               	movwf	postinc1,c
 23968  015292  0E40               	movlw	64
 23969  015294  6EE6               	movwf	postinc1,c
 23970                           
 23971                           ;stkvar	_chan @ sp[(-8)+-1]
 23972  015296  0EF7               	movlw	-9
 23973  015298  50E3               	movf	plusw1,w,c
 23974  01529A  6EE6               	movwf	postinc1,c
 23975  01529C  EC3F  F0DE         	call	_get_raw_result	;wreg free
 23976  0152A0  0060  F004  F00B   	movff	btemp,btemp+10
 23977  0152A6  0060  F008  F00C   	movff	btemp+1,btemp+11
 23978  0152AC  500B               	movf	(btemp+10)^0,w,c
 23979  0152AE  6E05               	movwf	(btemp+4)^0,c
 23980  0152B0  500C               	movf	(btemp+11)^0,w,c
 23981  0152B2  6E06               	movwf	(btemp+5)^0,c
 23982  0152B4  6A07               	clrf	(btemp+6)^0,c
 23983  0152B6  6A08               	clrf	(btemp+7)^0,c
 23984  0152B8  0060  F017  FFE6   	movff	btemp+4,postinc1
 23985  0152BE  0060  F01B  FFE6   	movff	btemp+5,postinc1
 23986  0152C4  0060  F01F  FFE6   	movff	btemp+6,postinc1
 23987  0152CA  0060  F023  FFE6   	movff	btemp+7,postinc1
 23988  0152D0  0E00               	movlw	0
 23989  0152D2  6EE6               	movwf	postinc1,c
 23990  0152D4  EC95  F0C0         	call	___xxtofl	;wreg free
 23991  0152D8  0060  F007  FFE6   	movff	btemp,postinc1
 23992  0152DE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23993  0152E4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23994  0152EA  0060  F013  FFE6   	movff	btemp+3,postinc1
 23995  0152F0  EC9F  F099         	call	___flmul	;wreg free
 23996  0152F4  0060  F007  FFE6   	movff	btemp,postinc1
 23997  0152FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23998  015300  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23999  015306  0060  F013  FFE6   	movff	btemp+3,postinc1
 24000  01530C  EC50  F0A5         	call	___fldiv	;wreg free
 24001  015310  D0D7               	goto	l1784
 24002  015312                     l9599:
 24003                           
 24004                           ;daq.c: 118:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 24005                           ;stkvar	_chan @ sp[(0)+-1]
 24006  015312  0EFF               	movlw	-1
 24007  015314  006F FF8C  F00C    	movff	plusw1,btemp+11
 24008  01531A  0E03               	movlw	3
 24009  01531C  6E09               	movwf	(btemp+8)^0,c
 24010  01531E  0E00               	movlw	0
 24011  015320  6E0A               	movwf	(btemp+9)^0,c
 24012  015322  2A0C               	incf	(btemp+11)^0,f,c
 24013  015324  D003               	goto	u9104
 24014  015326                     u9105:
 24015  015326  340A               	rlcf	(btemp+9)^0,w,c
 24016  015328  320A               	rrcf	(btemp+9)^0,f,c
 24017  01532A  3209               	rrcf	(btemp+8)^0,f,c
 24018  01532C                     u9104:
 24019  01532C  2E0C               	decfsz	(btemp+11)^0,f,c
 24020  01532E  D7FB               	goto	u9105
 24021  015330  B009               	btfsc	(btemp+8)^0,0,c
 24022  015332  D011               	goto	u9130
 24023                           
 24024                           ;stkvar	_chan @ sp[(0)+-1]
 24025  015334  0EFF               	movlw	-1
 24026  015336  006F FF8C  F00C    	movff	plusw1,btemp+11
 24027  01533C  0E00               	movlw	0
 24028  01533E  6E09               	movwf	(btemp+8)^0,c
 24029  015340  0E08               	movlw	8
 24030  015342  6E0A               	movwf	(btemp+9)^0,c
 24031  015344  2A0C               	incf	(btemp+11)^0,f,c
 24032  015346  D003               	goto	u9124
 24033  015348                     u9125:
 24034  015348  340A               	rlcf	(btemp+9)^0,w,c
 24035  01534A  320A               	rrcf	(btemp+9)^0,f,c
 24036  01534C  3209               	rrcf	(btemp+8)^0,f,c
 24037  01534E                     u9124:
 24038  01534E  2E0C               	decfsz	(btemp+11)^0,f,c
 24039  015350  D7FB               	goto	u9125
 24040  015352  A009               	btfss	(btemp+8)^0,0,c
 24041  015354  D04E               	goto	l9607
 24042  015356                     u9130:
 24043                           
 24044                           ;daq.c: 119:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 24045  015356  0E00               	movlw	0
 24046  015358  6EE6               	movwf	postinc1,c
 24047  01535A  0E00               	movlw	0
 24048  01535C  6EE6               	movwf	postinc1,c
 24049  01535E  0E7A               	movlw	122
 24050  015360  6EE6               	movwf	postinc1,c
 24051  015362  0E44               	movlw	68
 24052  015364  6EE6               	movwf	postinc1,c
 24053  015366  0E00               	movlw	0
 24054  015368  6EE6               	movwf	postinc1,c
 24055  01536A  0E00               	movlw	0
 24056  01536C  6EE6               	movwf	postinc1,c
 24057  01536E  0E20               	movlw	32
 24058  015370  6EE6               	movwf	postinc1,c
 24059  015372  0E3F               	movlw	63
 24060  015374  6EE6               	movwf	postinc1,c
 24061                           
 24062                           ;stkvar	_chan @ sp[(-8)+-1]
 24063  015376  0EF7               	movlw	-9
 24064  015378  50E3               	movf	plusw1,w,c
 24065  01537A  6EE6               	movwf	postinc1,c
 24066  01537C  EC3F  F0DE         	call	_get_raw_result	;wreg free
 24067  015380  0060  F004  F00B   	movff	btemp,btemp+10
 24068  015386  0060  F008  F00C   	movff	btemp+1,btemp+11
 24069  01538C  500B               	movf	(btemp+10)^0,w,c
 24070  01538E  6E05               	movwf	(btemp+4)^0,c
 24071  015390  500C               	movf	(btemp+11)^0,w,c
 24072  015392  6E06               	movwf	(btemp+5)^0,c
 24073  015394  6A07               	clrf	(btemp+6)^0,c
 24074  015396  6A08               	clrf	(btemp+7)^0,c
 24075  015398  0060  F017  FFE6   	movff	btemp+4,postinc1
 24076  01539E  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24077  0153A4  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24078  0153AA  0060  F023  FFE6   	movff	btemp+7,postinc1
 24079  0153B0  0E00               	movlw	0
 24080  0153B2  6EE6               	movwf	postinc1,c
 24081  0153B4  EC95  F0C0         	call	___xxtofl	;wreg free
 24082  0153B8  0060  F007  FFE6   	movff	btemp,postinc1
 24083  0153BE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24084  0153C4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24085  0153CA  0060  F013  FFE6   	movff	btemp+3,postinc1
 24086  0153D0  EC9F  F099         	call	___flmul	;wreg free
 24087  0153D4  0060  F007  FFE6   	movff	btemp,postinc1
 24088  0153DA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24089  0153E0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24090  0153E6  0060  F013  FFE6   	movff	btemp+3,postinc1
 24091  0153EC  EC50  F0A5         	call	___fldiv	;wreg free
 24092  0153F0  D067               	goto	l1784
 24093  0153F2                     l9607:
 24094                           
 24095                           ;daq.c: 121:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 24096  0153F2  0E00               	movlw	0
 24097  0153F4  6EE6               	movwf	postinc1,c
 24098  0153F6  0E00               	movlw	0
 24099  0153F8  6EE6               	movwf	postinc1,c
 24100  0153FA  0E7A               	movlw	122
 24101  0153FC  6EE6               	movwf	postinc1,c
 24102  0153FE  0E44               	movlw	68
 24103  015400  6EE6               	movwf	postinc1,c
 24104  015402  0E61               	movlw	97
 24105  015404  6EE6               	movwf	postinc1,c
 24106  015406  0E03               	movlw	3
 24107  015408  6EE6               	movwf	postinc1,c
 24108  01540A  0E84               	movlw	132
 24109  01540C  6EE6               	movwf	postinc1,c
 24110  01540E  0E40               	movlw	64
 24111  015410  6EE6               	movwf	postinc1,c
 24112                           
 24113                           ;stkvar	_chan @ sp[(-8)+-1]
 24114  015412  0EF7               	movlw	-9
 24115  015414  50E3               	movf	plusw1,w,c
 24116  015416  6EE6               	movwf	postinc1,c
 24117  015418  EC3F  F0DE         	call	_get_raw_result	;wreg free
 24118  01541C  0060  F004  F00B   	movff	btemp,btemp+10
 24119  015422  0060  F008  F00C   	movff	btemp+1,btemp+11
 24120  015428  500B               	movf	(btemp+10)^0,w,c
 24121  01542A  6E05               	movwf	(btemp+4)^0,c
 24122  01542C  500C               	movf	(btemp+11)^0,w,c
 24123  01542E  6E06               	movwf	(btemp+5)^0,c
 24124  015430  6A07               	clrf	(btemp+6)^0,c
 24125  015432  6A08               	clrf	(btemp+7)^0,c
 24126  015434  0060  F017  FFE6   	movff	btemp+4,postinc1
 24127  01543A  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24128  015440  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24129  015446  0060  F023  FFE6   	movff	btemp+7,postinc1
 24130  01544C  0E00               	movlw	0
 24131  01544E  6EE6               	movwf	postinc1,c
 24132  015450  EC95  F0C0         	call	___xxtofl	;wreg free
 24133  015454  0060  F007  FFE6   	movff	btemp,postinc1
 24134  01545A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24135  015460  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24136  015466  0060  F013  FFE6   	movff	btemp+3,postinc1
 24137  01546C  EC9F  F099         	call	___flmul	;wreg free
 24138  015470  0060  F007  FFE6   	movff	btemp,postinc1
 24139  015476  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24140  01547C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24141  015482  0060  F013  FFE6   	movff	btemp+3,postinc1
 24142  015488  EC50  F0A5         	call	___fldiv	;wreg free
 24143  01548C  D019               	goto	l1784
 24144  01548E                     l9613:
 24145                           
 24146                           ;daq.c: 124:   return 0.0;
 24147  01548E  0E00               	movlw	0
 24148  015490  6E01               	movwf	btemp^0,c
 24149  015492  0E00               	movlw	0
 24150  015494  6E02               	movwf	(btemp+1)^0,c
 24151  015496  0E00               	movlw	0
 24152  015498  6E03               	movwf	(btemp+2)^0,c
 24153  01549A  0E00               	movlw	0
 24154  01549C                     L29:
 24155  01549C  6E04               	movwf	(btemp+3)^0,c
 24156  01549E  D010               	goto	l1784
 24157  0154A0                     l9621:
 24158                           
 24159                           ;stkvar	_to_what @ sp[(0)+-2]
 24160  0154A0  0EFE               	movlw	-2
 24161  0154A2  50E3               	movf	plusw1,w,c
 24162  0154A4  6E0B               	movwf	(btemp+10)^0,c
 24163  0154A6  6A0C               	clrf	(btemp+11)^0,c
 24164                           
 24165                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24166                           ; Switch size 1, requested type "simple"
 24167                           ; Number of cases is 1, Range of values is 0 to 0
 24168                           ; switch strategies available:
 24169                           ; Name         Instructions Cycles
 24170                           ; simple_byte            4     3 (average)
 24171                           ;	Chosen strategy is simple_byte
 24172  0154A8  500C               	movf	(btemp+11)^0,w,c
 24173  0154AA  0A00               	xorlw	0	; case 0
 24174  0154AC  A4D8               	btfss	status,2,c
 24175  0154AE  D7EF               	goto	l9613
 24176                           
 24177                           ; Switch size 1, requested type "simple"
 24178                           ; Number of cases is 2, Range of values is 0 to 1
 24179                           ; switch strategies available:
 24180                           ; Name         Instructions Cycles
 24181                           ; simple_byte            7     4 (average)
 24182                           ;	Chosen strategy is simple_byte
 24183  0154B0  500B               	movf	(btemp+10)^0,w,c
 24184  0154B2  0A00               	xorlw	0	; case 0
 24185  0154B4  B4D8               	btfsc	status,2,c
 24186  0154B6  D5B2               	goto	l9567
 24187  0154B8  0A01               	xorlw	1	; case 1
 24188  0154BA  B4D8               	btfsc	status,2,c
 24189  0154BC  D72A               	goto	l9599
 24190  0154BE  D7E7               	goto	l9613
 24191  0154C0                     l1784:
 24192                           
 24193                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 24194  0154C0  52E5               	movf	postdec1,f,c
 24195  0154C2  52E5               	movf	postdec1,f,c
 24196  0154C4  0012               	return		;funcret
 24197  0154C6                     __end_of_conv_raw_result:
 24198                           	opt callstack 0
 24199                           
 24200 ;; *************** function _nanf *****************
 24201 ;; Defined at:
 24202 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 24203 ;; Parameters:    Size  Location     Type
 24204 ;;  s               2  [STACK] PTR const unsigned char 
 24205 ;;		 -> STR_102(1), STR_64(1), 
 24206 ;; Auto vars:     Size  Location     Type
 24207 ;;  u               4  [STACK] struct .
 24208 ;; Return value:  Size  Location     Type
 24209 ;;                  4  [STACK] float 
 24210 ;; Registers used:
 24211 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 24212 ;; Tracked objects:
 24213 ;;		On entry : 0/39
 24214 ;;		On exit  : 0/0
 24215 ;;		Unchanged: 0/0
 24216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24221 ;;Total ram usage:        0 bytes
 24222 ;; Hardware stack levels used:    1
 24223 ;; Hardware stack levels required when called:   15
 24224 ;; This function calls:
 24225 ;;		Nothing
 24226 ;; This function is called by:
 24227 ;;		_conv_raw_result
 24228 ;; This function uses a reentrant model
 24229 ;;
 24230                           
 24231                           	psect	text95
 24232  01AE46                     __ptext95:
 24233                           	opt callstack 0
 24234  01AE46                     _nanf:
 24235                           	opt callstack 0
 24236                           
 24237                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24238  01AE46  52E6               	movf	postinc1,f,c
 24239  01AE48  52E6               	movf	postinc1,f,c
 24240  01AE4A  52E6               	movf	postinc1,f,c
 24241  01AE4C  52E6               	movf	postinc1,f,c
 24242                           
 24243                           ;incstack = 0
 24244 ;; hardware stack exceeded
 24245  01AE4E  0EFF               	movlw	255
 24246  01AE50  6E09               	movwf	(btemp+8)^0,c
 24247  01AE52  0EFF               	movlw	255
 24248  01AE54  6E0A               	movwf	(btemp+9)^0,c
 24249  01AE56  0EFF               	movlw	255
 24250  01AE58  6E0B               	movwf	(btemp+10)^0,c
 24251  01AE5A  0E7F               	movlw	127
 24252  01AE5C  6E0C               	movwf	(btemp+11)^0,c
 24253                           
 24254                           ;stkvar	_u @ sp[(-4)+0]
 24255  01AE5E  0EFC               	movlw	-4
 24256  01AE60  0060  F027  FFE3   	movff	btemp+8,plusw1
 24257  01AE66  0EFD               	movlw	-3
 24258  01AE68  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24259  01AE6E  0EFE               	movlw	-2
 24260  01AE70  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24261  01AE76  0EFF               	movlw	-1
 24262  01AE78  0060  F033  FFE3   	movff	btemp+11,plusw1
 24263                           
 24264                           ;stkvar	_u @ sp[(-4)+0]
 24265  01AE7E  0EFC               	movlw	-4
 24266  01AE80  006F FF8C  F001    	movff	plusw1,btemp
 24267  01AE86  0EFD               	movlw	-3
 24268  01AE88  006F FF8C  F002    	movff	plusw1,btemp+1
 24269  01AE8E  0EFE               	movlw	-2
 24270  01AE90  006F FF8C  F003    	movff	plusw1,btemp+2
 24271  01AE96  0EFF               	movlw	-1
 24272  01AE98  006F FF8C  F004    	movff	plusw1,btemp+3
 24273                           
 24274                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 24275  01AE9E  0EFA               	movlw	250
 24276  01AEA0  26E1               	addwf	fsr1l,f,c
 24277  01AEA2  0EFF               	movlw	255
 24278  01AEA4  22E2               	addwfc	fsr1h,f,c
 24279  01AEA6  0012               	return		;funcret
 24280  01AEA8                     __end_of_nanf:
 24281                           	opt callstack 0
 24282                           
 24283 ;; *************** function _get_raw_result *****************
 24284 ;; Defined at:
 24285 ;;		line 87 in file "daq.c"
 24286 ;; Parameters:    Size  Location     Type
 24287 ;;  index           1  [STACK] const enum E16582
 24288 ;; Auto vars:     Size  Location     Type
 24289 ;;		None
 24290 ;; Return value:  Size  Location     Type
 24291 ;;                  2  [STACK] unsigned short 
 24292 ;; Registers used:
 24293 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 24294 ;; Tracked objects:
 24295 ;;		On entry : 0/1
 24296 ;;		On exit  : 0/0
 24297 ;;		Unchanged: 0/0
 24298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24303 ;;Total ram usage:        0 bytes
 24304 ;; Hardware stack levels used:    1
 24305 ;; Hardware stack levels required when called:   15
 24306 ;; This function calls:
 24307 ;;		Nothing
 24308 ;; This function is called by:
 24309 ;;		_main
 24310 ;;		_conv_raw_result
 24311 ;; This function uses a reentrant model
 24312 ;;
 24313                           
 24314                           	psect	text96
 24315  01BC7E                     __ptext96:
 24316                           	opt callstack 0
 24317  01BC7E                     _get_raw_result:
 24318                           	opt callstack 0
 24319                           
 24320                           ;daq.c: 87: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 88: {;daq.c: 
      +                          89:  return R.raw_adc[index];
 24321                           ;stkvar	_index @ sp[(0)+-1]
 24322                           
 24323                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24324                           ;incstack = 0
 24325 ;; hardware stack exceeded
 24326  01BC7E  0EFF               	movlw	-1
 24327  01BC80  50E3               	movf	plusw1,w,c
 24328  01BC82  0D02               	mullw	2
 24329  01BC84  50F3               	movf	243,w,c
 24330  01BC86  0FBD               	addlw	low _R
 24331  01BC88  6ED9               	movwf	fsr2l,c
 24332  01BC8A  6ADA               	clrf	fsr2h,c
 24333  01BC8C  006F FF78  F001    	movff	postinc2,btemp
 24334  01BC92  006F FF74  F002    	movff	postdec2,btemp+1
 24335                           
 24336                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 24337  01BC98  52E5               	movf	postdec1,f,c
 24338  01BC9A  0012               	return		;funcret
 24339  01BC9C                     __end_of_get_raw_result:
 24340                           	opt callstack 0
 24341                           
 24342 ;; *************** function ___xxtofl *****************
 24343 ;; Defined at:
 24344 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 24345 ;; Parameters:    Size  Location     Type
 24346 ;;  sign            1  [STACK] unsigned char 
 24347 ;;  val             4  [STACK] long 
 24348 ;; Auto vars:     Size  Location     Type
 24349 ;;  arg             4  [STACK] unsigned long 
 24350 ;;  exp             1  [STACK] unsigned char 
 24351 ;; Return value:  Size  Location     Type
 24352 ;;                  4  [STACK] unsigned char 
 24353 ;; Registers used:
 24354 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 24355 ;; Tracked objects:
 24356 ;;		On entry : 0/0
 24357 ;;		On exit  : 0/0
 24358 ;;		Unchanged: 0/0
 24359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24364 ;;Total ram usage:        0 bytes
 24365 ;; Hardware stack levels used:    1
 24366 ;; Hardware stack levels required when called:   15
 24367 ;; This function calls:
 24368 ;;		Nothing
 24369 ;; This function is called by:
 24370 ;;		_conv_raw_result
 24371 ;;		_init_bsoc
 24372 ;;		_Volts_to_SOC
 24373 ;; This function uses a reentrant model
 24374 ;;
 24375                           
 24376                           	psect	text97
 24377  01812A                     __ptext97:
 24378                           	opt callstack 0
 24379  01812A                     ___xxtofl:
 24380                           	opt callstack 0
 24381                           
 24382                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24383  01812A  0E05               	movlw	5
 24384  01812C  26E1               	addwf	fsr1l,f,c
 24385  01812E  0E00               	movlw	0
 24386  018130  22E2               	addwfc	fsr1h,f,c
 24387                           
 24388                           ;stkvar	_sign @ sp[(-5)+-1]
 24389                           
 24390                           ;incstack = 0
 24391 ;; hardware stack exceeded
 24392  018132  0EFA               	movlw	-6
 24393  018134  50E3               	movf	plusw1,w,c
 24394  018136  B4D8               	btfsc	status,2,c
 24395  018138  D01D               	goto	l9515
 24396                           
 24397                           ;stkvar	_val @ sp[(-5)+-5]
 24398  01813A  0EF9               	movlw	-7
 24399  01813C  AEE3               	btfss	plusw1,7,c
 24400  01813E  D01A               	goto	l9515
 24401                           
 24402                           ;stkvar	_val @ sp[(-5)+-5]
 24403  018140  0EF6               	movlw	-10
 24404  018142  006F FF8C  F009    	movff	plusw1,btemp+8
 24405  018148  0EF7               	movlw	-9
 24406  01814A  006F FF8C  F00A    	movff	plusw1,btemp+9
 24407  018150  0EF8               	movlw	-8
 24408  018152  006F FF8C  F00B    	movff	plusw1,btemp+10
 24409  018158  0EF9               	movlw	-7
 24410  01815A  006F FF8C  F00C    	movff	plusw1,btemp+11
 24411  018160  1E09               	comf	(btemp+8)^0,f,c
 24412  018162  1E0A               	comf	(btemp+9)^0,f,c
 24413  018164  1E0B               	comf	(btemp+10)^0,f,c
 24414  018166  1E0C               	comf	(btemp+11)^0,f,c
 24415  018168  2A09               	incf	(btemp+8)^0,f,c
 24416  01816A  0E00               	movlw	0
 24417  01816C  220A               	addwfc	(btemp+9)^0,f,c
 24418  01816E  220B               	addwfc	(btemp+10)^0,f,c
 24419  018170  220C               	addwfc	(btemp+11)^0,f,c
 24420  018172  D010               	goto	L30
 24421  018174                     l9515:
 24422                           
 24423                           ;stkvar	_val @ sp[(-5)+-5]
 24424  018174  0EF6               	movlw	-10
 24425  018176  006F FF8C  F009    	movff	plusw1,btemp+8
 24426  01817C  0EF7               	movlw	-9
 24427  01817E  006F FF8C  F00A    	movff	plusw1,btemp+9
 24428  018184  0EF8               	movlw	-8
 24429  018186  006F FF8C  F00B    	movff	plusw1,btemp+10
 24430  01818C  0EF9               	movlw	-7
 24431  01818E  006F FF8C  F00C    	movff	plusw1,btemp+11
 24432  018194                     L30:
 24433                           
 24434                           ;stkvar	_arg @ sp[(-5)+0]
 24435  018194  0EFB               	movlw	-5
 24436  018196  0060  F027  FFE3   	movff	btemp+8,plusw1
 24437  01819C  0EFC               	movlw	-4
 24438  01819E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24439  0181A4  0EFD               	movlw	-3
 24440  0181A6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24441  0181AC  0EFE               	movlw	-2
 24442  0181AE  0060  F033  FFE3   	movff	btemp+11,plusw1
 24443                           
 24444                           ;stkvar	_val @ sp[(-5)+-5]
 24445  0181B4  0EF6               	movlw	-10
 24446  0181B6  50E3               	movf	plusw1,w,c
 24447  0181B8  E113               	bnz	l9523
 24448  0181BA  0EF7               	movlw	-9
 24449  0181BC  50E3               	movf	plusw1,w,c
 24450  0181BE  E110               	bnz	l9523
 24451  0181C0  0EF8               	movlw	-8
 24452  0181C2  50E3               	movf	plusw1,w,c
 24453  0181C4  E10D               	bnz	l9523
 24454  0181C6  0EF9               	movlw	-7
 24455  0181C8  50E3               	movf	plusw1,w,c
 24456  0181CA  A4D8               	btfss	status,2,c
 24457  0181CC  D009               	goto	l9523
 24458  0181CE  0E00               	movlw	0
 24459  0181D0  6E01               	movwf	btemp^0,c
 24460  0181D2  0E00               	movlw	0
 24461  0181D4  6E02               	movwf	(btemp+1)^0,c
 24462  0181D6  0E00               	movlw	0
 24463  0181D8  6E03               	movwf	(btemp+2)^0,c
 24464  0181DA  0E00               	movlw	0
 24465  0181DC  6E04               	movwf	(btemp+3)^0,c
 24466  0181DE  D0A2               	goto	l3054
 24467  0181E0                     l9523:
 24468  0181E0  0E96               	movlw	150
 24469  0181E2  6E0C               	movwf	(btemp+11)^0,c
 24470                           
 24471                           ;stkvar	_exp @ sp[(-5)+4]
 24472  0181E4  0EFF               	movlw	-1
 24473  0181E6  0060  F033  FFE3   	movff	btemp+11,plusw1
 24474  0181EC  D00B               	goto	l9527
 24475  0181EE                     l9525:
 24476                           
 24477                           ;stkvar	_exp @ sp[(-5)+4]
 24478  0181EE  0EFF               	movlw	-1
 24479  0181F0  2AE3               	incf	plusw1,f,c
 24480                           
 24481                           ;stkvar	_arg @ sp[(-5)+0]
 24482  0181F2  90D8               	bcf	status,0,c
 24483  0181F4  0EFE               	movlw	-2
 24484  0181F6  32E3               	rrcf	plusw1,f,c
 24485  0181F8  0EFD               	movlw	-3
 24486  0181FA  32E3               	rrcf	plusw1,f,c
 24487  0181FC  0EFC               	movlw	-4
 24488  0181FE  32E3               	rrcf	plusw1,f,c
 24489  018200  0EFB               	movlw	-5
 24490  018202  32E3               	rrcf	plusw1,f,c
 24491  018204                     l9527:
 24492                           
 24493                           ;stkvar	_arg @ sp[(-5)+0]
 24494  018204  50E1               	movf	fsr1l,w,c
 24495  018206  0FFB               	addlw	-5
 24496  018208  6ED9               	movwf	fsr2l,c
 24497  01820A  50E2               	movf	fsr1h,w,c
 24498  01820C  6EDA               	movwf	fsr2h,c
 24499  01820E  0EFF               	movlw	255
 24500  018210  22DA               	addwfc	fsr2h,f,c
 24501  018212  52DE               	movf	postinc2,f,c
 24502  018214  52DE               	movf	postinc2,f,c
 24503  018216  52DE               	movf	postinc2,f,c
 24504  018218  0EFE               	movlw	254
 24505  01821A  14DD               	andwf	postdec2,w,c
 24506  01821C  B4D8               	btfsc	status,2,c
 24507  01821E  D018               	goto	l9535
 24508  018220  D7E6               	goto	l9525
 24509  018222                     l9529:
 24510                           
 24511                           ;stkvar	_exp @ sp[(-5)+4]
 24512  018222  0EFF               	movlw	-1
 24513  018224  2AE3               	incf	plusw1,f,c
 24514                           
 24515                           ;stkvar	_arg @ sp[(-5)+0]
 24516  018226  50E1               	movf	fsr1l,w,c
 24517  018228  0FFB               	addlw	-5
 24518  01822A  6ED9               	movwf	fsr2l,c
 24519  01822C  50E2               	movf	fsr1h,w,c
 24520  01822E  6EDA               	movwf	fsr2h,c
 24521  018230  0EFF               	movlw	255
 24522  018232  22DA               	addwfc	fsr2h,f,c
 24523  018234  2ADE               	incf	postinc2,f,c
 24524  018236  0E00               	movlw	0
 24525  018238  22DE               	addwfc	postinc2,f,c
 24526  01823A  22DE               	addwfc	postinc2,f,c
 24527  01823C  22DE               	addwfc	postinc2,f,c
 24528                           
 24529                           ;stkvar	_arg @ sp[(-5)+0]
 24530  01823E  90D8               	bcf	status,0,c
 24531  018240  0EFE               	movlw	-2
 24532  018242  32E3               	rrcf	plusw1,f,c
 24533  018244  0EFD               	movlw	-3
 24534  018246  32E3               	rrcf	plusw1,f,c
 24535  018248  0EFC               	movlw	-4
 24536  01824A  32E3               	rrcf	plusw1,f,c
 24537  01824C  0EFB               	movlw	-5
 24538  01824E  32E3               	rrcf	plusw1,f,c
 24539  018250                     l9535:
 24540                           
 24541                           ;stkvar	_arg @ sp[(-5)+0]
 24542  018250  50E1               	movf	fsr1l,w,c
 24543  018252  0FFB               	addlw	-5
 24544  018254  6ED9               	movwf	fsr2l,c
 24545  018256  50E2               	movf	fsr1h,w,c
 24546  018258  6EDA               	movwf	fsr2h,c
 24547  01825A  0EFF               	movlw	255
 24548  01825C  22DA               	addwfc	fsr2h,f,c
 24549  01825E  52DE               	movf	postinc2,f,c
 24550  018260  52DE               	movf	postinc2,f,c
 24551  018262  52DE               	movf	postinc2,f,c
 24552  018264  0EFF               	movlw	255
 24553  018266  14DD               	andwf	postdec2,w,c
 24554  018268  B4D8               	btfsc	status,2,c
 24555  01826A  D00C               	goto	l9539
 24556  01826C  D7DA               	goto	l9529
 24557  01826E                     l9537:
 24558                           
 24559                           ;stkvar	_exp @ sp[(-5)+4]
 24560  01826E  0EFF               	movlw	-1
 24561  018270  06E3               	decf	plusw1,f,c
 24562                           
 24563                           ;stkvar	_arg @ sp[(-5)+0]
 24564  018272  90D8               	bcf	status,0,c
 24565  018274  0EFB               	movlw	-5
 24566  018276  36E3               	rlcf	plusw1,f,c
 24567  018278  0EFC               	movlw	-4
 24568  01827A  36E3               	rlcf	plusw1,f,c
 24569  01827C  0EFD               	movlw	-3
 24570  01827E  36E3               	rlcf	plusw1,f,c
 24571  018280  0EFE               	movlw	-2
 24572  018282  36E3               	rlcf	plusw1,f,c
 24573  018284                     l9539:
 24574                           
 24575                           ;stkvar	_arg @ sp[(-5)+0]
 24576  018284  0EFD               	movlw	-3
 24577  018286  BEE3               	btfsc	plusw1,7,c
 24578  018288  D007               	goto	u8980
 24579                           
 24580                           ;stkvar	_exp @ sp[(-5)+4]
 24581  01828A  0EFF               	movlw	-1
 24582  01828C  006F FF8C  F001    	movff	plusw1,btemp
 24583  018292  0E02               	movlw	2
 24584  018294  6001               	cpfslt	btemp^0,c
 24585  018296  D7EB               	goto	l9537
 24586  018298                     u8980:
 24587                           
 24588                           ;stkvar	_exp @ sp[(-5)+4]
 24589  018298  0EFF               	movlw	-1
 24590  01829A  B0E3               	btfsc	plusw1,0,c
 24591  01829C  D002               	goto	l9547
 24592                           
 24593                           ;stkvar	_arg @ sp[(-5)+0]
 24594  01829E  0EFD               	movlw	-3
 24595  0182A0  9EE3               	bcf	plusw1,7,c
 24596  0182A2                     l9547:
 24597                           
 24598                           ;stkvar	_exp @ sp[(-5)+4]
 24599  0182A2  50E1               	movf	fsr1l,w,c
 24600  0182A4  0FFF               	addlw	-1
 24601  0182A6  6ED9               	movwf	fsr2l,c
 24602  0182A8  50E2               	movf	fsr1h,w,c
 24603  0182AA  6EDA               	movwf	fsr2h,c
 24604  0182AC  0EFF               	movlw	255
 24605  0182AE  22DA               	addwfc	fsr2h,f,c
 24606  0182B0  90D8               	bcf	status,0,c
 24607  0182B2  32DF               	rrcf	indf2,f,c
 24608                           
 24609                           ;stkvar	_exp @ sp[(-5)+4]
 24610  0182B4  0EFF               	movlw	-1
 24611  0182B6  006F FF8C  F00C    	movff	plusw1,btemp+11
 24612  0182BC  0060  F030  F005   	movff	btemp+11,btemp+4
 24613  0182C2  6A06               	clrf	(btemp+5)^0,c
 24614  0182C4  6A07               	clrf	(btemp+6)^0,c
 24615  0182C6  6A08               	clrf	(btemp+7)^0,c
 24616  0182C8  0060  F014  F008   	movff	btemp+4,btemp+7
 24617  0182CE  6A07               	clrf	(btemp+6)^0,c
 24618  0182D0  6A06               	clrf	(btemp+5)^0,c
 24619  0182D2  6A05               	clrf	(btemp+4)^0,c
 24620                           
 24621                           ;stkvar	_arg @ sp[(-5)+0]
 24622  0182D4  50E1               	movf	fsr1l,w,c
 24623  0182D6  0FFB               	addlw	-5
 24624  0182D8  6ED9               	movwf	fsr2l,c
 24625  0182DA  50E2               	movf	fsr1h,w,c
 24626  0182DC  6EDA               	movwf	fsr2h,c
 24627  0182DE  0EFF               	movlw	255
 24628  0182E0  22DA               	addwfc	fsr2h,f,c
 24629  0182E2  5005               	movf	(btemp+4)^0,w,c
 24630  0182E4  12DE               	iorwf	postinc2,f,c
 24631  0182E6  5006               	movf	(btemp+5)^0,w,c
 24632  0182E8  12DE               	iorwf	postinc2,f,c
 24633  0182EA  5007               	movf	(btemp+6)^0,w,c
 24634  0182EC  12DE               	iorwf	postinc2,f,c
 24635  0182EE  5008               	movf	(btemp+7)^0,w,c
 24636  0182F0  12DE               	iorwf	postinc2,f,c
 24637                           
 24638                           ;stkvar	_sign @ sp[(-5)+-1]
 24639  0182F2  0EFA               	movlw	-6
 24640  0182F4  50E3               	movf	plusw1,w,c
 24641  0182F6  B4D8               	btfsc	status,2,c
 24642  0182F8  D005               	goto	l9557
 24643                           
 24644                           ;stkvar	_val @ sp[(-5)+-5]
 24645  0182FA  0EF9               	movlw	-7
 24646  0182FC  AEE3               	btfss	plusw1,7,c
 24647  0182FE  D002               	goto	l9557
 24648                           
 24649                           ;stkvar	_arg @ sp[(-5)+0]
 24650  018300  0EFE               	movlw	-2
 24651  018302  8EE3               	bsf	plusw1,7,c
 24652  018304                     l9557:
 24653                           
 24654                           ;stkvar	_arg @ sp[(-5)+0]
 24655  018304  0EFB               	movlw	-5
 24656  018306  006F FF8C  F001    	movff	plusw1,btemp
 24657  01830C  0EFC               	movlw	-4
 24658  01830E  006F FF8C  F002    	movff	plusw1,btemp+1
 24659  018314  0EFD               	movlw	-3
 24660  018316  006F FF8C  F003    	movff	plusw1,btemp+2
 24661  01831C  0EFE               	movlw	-2
 24662  01831E  006F FF8C  F004    	movff	plusw1,btemp+3
 24663  018324                     l3054:
 24664                           
 24665                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 24666  018324  0EF6               	movlw	246
 24667  018326  26E1               	addwf	fsr1l,f,c
 24668  018328  0EFF               	movlw	255
 24669  01832A  22E2               	addwfc	fsr1h,f,c
 24670  01832C  0012               	return		;funcret
 24671  01832E                     __end_of___xxtofl:
 24672                           	opt callstack 0
 24673                           
 24674 ;; *************** function ___fldiv *****************
 24675 ;; Defined at:
 24676 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 24677 ;; Parameters:    Size  Location     Type
 24678 ;;  b               4  [STACK] unsigned char 
 24679 ;;  a               4  [STACK] unsigned char 
 24680 ;; Auto vars:     Size  Location     Type
 24681 ;;  grs             4  [STACK] unsigned long 
 24682 ;;  rem             4  [STACK] unsigned long 
 24683 ;;  new_exp         2  [STACK] short 
 24684 ;;  aexp            1  [STACK] unsigned char 
 24685 ;;  bexp            1  [STACK] unsigned char 
 24686 ;;  sign            1  [STACK] unsigned char 
 24687 ;; Return value:  Size  Location     Type
 24688 ;;                  4  [STACK] unsigned char 
 24689 ;; Registers used:
 24690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 24691 ;; Tracked objects:
 24692 ;;		On entry : 0/0
 24693 ;;		On exit  : 0/0
 24694 ;;		Unchanged: 0/0
 24695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24700 ;;Total ram usage:        0 bytes
 24701 ;; Hardware stack levels used:    1
 24702 ;; Hardware stack levels required when called:   15
 24703 ;; This function calls:
 24704 ;;		Nothing
 24705 ;; This function is called by:
 24706 ;;		_conv_raw_result
 24707 ;;		_calc_bsoc
 24708 ;;		_init_bsoc
 24709 ;;		_esr_check
 24710 ;;		_efgtoa
 24711 ;; This function uses a reentrant model
 24712 ;;
 24713                           
 24714                           	psect	text98
 24715  014AA0                     __ptext98:
 24716                           	opt callstack 0
 24717  014AA0                     ___fldiv:
 24718                           	opt callstack 0
 24719                           
 24720                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 24721  014AA0  0E0D               	movlw	13
 24722  014AA2  26E1               	addwf	fsr1l,f,c
 24723  014AA4  0E00               	movlw	0
 24724  014AA6  22E2               	addwfc	fsr1h,f,c
 24725                           
 24726                           ;stkvar	_b @ sp[(-13)+-4]
 24727                           
 24728                           ;incstack = 0
 24729 ;; hardware stack exceeded
 24730  014AA8  0EF2               	movlw	242
 24731  014AAA  24E1               	addwf	fsr1l,w,c
 24732  014AAC  6ED9               	movwf	fsr2l,c
 24733  014AAE  0EFF               	movlw	255
 24734  014AB0  20E2               	addwfc	fsr1h,w,c
 24735  014AB2  6EDA               	movwf	fsr2h,c
 24736  014AB4  50DF               	movf	indf2,w,c
 24737  014AB6  6E0C               	movwf	(btemp+11)^0,c
 24738  014AB8  0E80               	movlw	128
 24739  014ABA  160C               	andwf	(btemp+11)^0,f,c
 24740                           
 24741                           ;stkvar	_sign @ sp[(-13)+12]
 24742  014ABC  0EFF               	movlw	-1
 24743  014ABE  0060  F033  FFE3   	movff	btemp+11,plusw1
 24744                           
 24745                           ;stkvar	_b @ sp[(-13)+-4]
 24746  014AC4  0EF2               	movlw	242
 24747  014AC6  24E1               	addwf	fsr1l,w,c
 24748  014AC8  6ED9               	movwf	fsr2l,c
 24749  014ACA  0EFF               	movlw	255
 24750  014ACC  20E2               	addwfc	fsr1h,w,c
 24751  014ACE  6EDA               	movwf	fsr2h,c
 24752  014AD0  50DF               	movf	indf2,w,c
 24753  014AD2  6E0C               	movwf	(btemp+11)^0,c
 24754  014AD4  90D8               	bcf	status,0,c
 24755  014AD6  340C               	rlcf	(btemp+11)^0,w,c
 24756  014AD8  6E0B               	movwf	(btemp+10)^0,c
 24757                           
 24758                           ;stkvar	_bexp @ sp[(-13)+11]
 24759  014ADA  0EFE               	movlw	-2
 24760  014ADC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24761                           
 24762                           ;stkvar	_b @ sp[(-13)+-4]
 24763  014AE2  0EF1               	movlw	241
 24764  014AE4  24E1               	addwf	fsr1l,w,c
 24765  014AE6  6ED9               	movwf	fsr2l,c
 24766  014AE8  0EFF               	movlw	255
 24767  014AEA  20E2               	addwfc	fsr1h,w,c
 24768  014AEC  6EDA               	movwf	fsr2h,c
 24769  014AEE  AEDF               	btfss	indf2,7,c
 24770  014AF0  D002               	goto	l8061
 24771                           
 24772                           ;stkvar	_bexp @ sp[(-13)+11]
 24773  014AF2  0EFE               	movlw	-2
 24774  014AF4  80E3               	bsf	plusw1,0,c
 24775  014AF6                     l8061:
 24776                           
 24777                           ;stkvar	_bexp @ sp[(-13)+11]
 24778  014AF6  0EFE               	movlw	-2
 24779  014AF8  50E3               	movf	plusw1,w,c
 24780  014AFA  B4D8               	btfsc	status,2,c
 24781  014AFC  D027               	goto	l8071
 24782                           
 24783                           ;stkvar	_bexp @ sp[(-13)+11]
 24784  014AFE  0EFE               	movlw	-2
 24785  014B00  28E3               	incf	plusw1,w,c
 24786  014B02  A4D8               	btfss	status,2,c
 24787  014B04  D018               	goto	l8067
 24788  014B06  0E00               	movlw	0
 24789  014B08  6E09               	movwf	(btemp+8)^0,c
 24790  014B0A  0E00               	movlw	0
 24791  014B0C  6E0A               	movwf	(btemp+9)^0,c
 24792  014B0E  0E00               	movlw	0
 24793  014B10  6E0B               	movwf	(btemp+10)^0,c
 24794  014B12  0E00               	movlw	0
 24795  014B14  6E0C               	movwf	(btemp+11)^0,c
 24796                           
 24797                           ;stkvar	_b @ sp[(-13)+-4]
 24798  014B16  0EEF               	movlw	-17
 24799  014B18  0060  F027  FFE3   	movff	btemp+8,plusw1
 24800  014B1E  0EF0               	movlw	-16
 24801  014B20  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24802  014B26  0EF1               	movlw	-15
 24803  014B28  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24804  014B2E  0EF2               	movlw	-14
 24805  014B30  0060  F033  FFE3   	movff	btemp+11,plusw1
 24806  014B36                     l8067:
 24807                           
 24808                           ;stkvar	_b @ sp[(-13)+-4]
 24809  014B36  0EF1               	movlw	-15
 24810  014B38  8EE3               	bsf	plusw1,7,c
 24811                           
 24812                           ;stkvar	_b @ sp[(-13)+-4]
 24813  014B3A  0EF2               	movlw	242
 24814  014B3C  24E1               	addwf	fsr1l,w,c
 24815  014B3E  6ED9               	movwf	fsr2l,c
 24816  014B40  0EFF               	movlw	255
 24817  014B42  20E2               	addwfc	fsr1h,w,c
 24818  014B44  6EDA               	movwf	fsr2h,c
 24819  014B46  0E00               	movlw	0
 24820  014B48  6EDF               	movwf	indf2,c
 24821  014B4A  D018               	goto	l8073
 24822  014B4C                     l8071:
 24823  014B4C  0E00               	movlw	0
 24824  014B4E  6E09               	movwf	(btemp+8)^0,c
 24825  014B50  0E00               	movlw	0
 24826  014B52  6E0A               	movwf	(btemp+9)^0,c
 24827  014B54  0E00               	movlw	0
 24828  014B56  6E0B               	movwf	(btemp+10)^0,c
 24829  014B58  0E00               	movlw	0
 24830  014B5A  6E0C               	movwf	(btemp+11)^0,c
 24831                           
 24832                           ;stkvar	_b @ sp[(-13)+-4]
 24833  014B5C  0EEF               	movlw	-17
 24834  014B5E  0060  F027  FFE3   	movff	btemp+8,plusw1
 24835  014B64  0EF0               	movlw	-16
 24836  014B66  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24837  014B6C  0EF1               	movlw	-15
 24838  014B6E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24839  014B74  0EF2               	movlw	-14
 24840  014B76  0060  F033  FFE3   	movff	btemp+11,plusw1
 24841  014B7C                     l8073:
 24842                           
 24843                           ;stkvar	_a @ sp[(-13)+-8]
 24844  014B7C  0EEE               	movlw	238
 24845  014B7E  24E1               	addwf	fsr1l,w,c
 24846  014B80  6ED9               	movwf	fsr2l,c
 24847  014B82  0EFF               	movlw	255
 24848  014B84  20E2               	addwfc	fsr1h,w,c
 24849  014B86  6EDA               	movwf	fsr2h,c
 24850  014B88  50DF               	movf	indf2,w,c
 24851  014B8A  6E0C               	movwf	(btemp+11)^0,c
 24852  014B8C  0E80               	movlw	128
 24853  014B8E  160C               	andwf	(btemp+11)^0,f,c
 24854                           
 24855                           ;stkvar	_sign @ sp[(-13)+12]
 24856  014B90  50E1               	movf	fsr1l,w,c
 24857  014B92  0FFF               	addlw	-1
 24858  014B94  6ED9               	movwf	fsr2l,c
 24859  014B96  50E2               	movf	fsr1h,w,c
 24860  014B98  6EDA               	movwf	fsr2h,c
 24861  014B9A  0EFF               	movlw	255
 24862  014B9C  22DA               	addwfc	fsr2h,f,c
 24863  014B9E  500C               	movf	(btemp+11)^0,w,c
 24864  014BA0  1ADF               	xorwf	indf2,f,c
 24865                           
 24866                           ;stkvar	_a @ sp[(-13)+-8]
 24867  014BA2  0EEE               	movlw	238
 24868  014BA4  24E1               	addwf	fsr1l,w,c
 24869  014BA6  6ED9               	movwf	fsr2l,c
 24870  014BA8  0EFF               	movlw	255
 24871  014BAA  20E2               	addwfc	fsr1h,w,c
 24872  014BAC  6EDA               	movwf	fsr2h,c
 24873  014BAE  50DF               	movf	indf2,w,c
 24874  014BB0  6E0C               	movwf	(btemp+11)^0,c
 24875  014BB2  90D8               	bcf	status,0,c
 24876  014BB4  340C               	rlcf	(btemp+11)^0,w,c
 24877  014BB6  6E0B               	movwf	(btemp+10)^0,c
 24878                           
 24879                           ;stkvar	_aexp @ sp[(-13)+10]
 24880  014BB8  0EFD               	movlw	-3
 24881  014BBA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24882                           
 24883                           ;stkvar	_a @ sp[(-13)+-8]
 24884  014BC0  0EED               	movlw	237
 24885  014BC2  24E1               	addwf	fsr1l,w,c
 24886  014BC4  6ED9               	movwf	fsr2l,c
 24887  014BC6  0EFF               	movlw	255
 24888  014BC8  20E2               	addwfc	fsr1h,w,c
 24889  014BCA  6EDA               	movwf	fsr2h,c
 24890  014BCC  AEDF               	btfss	indf2,7,c
 24891  014BCE  D002               	goto	l8081
 24892                           
 24893                           ;stkvar	_aexp @ sp[(-13)+10]
 24894  014BD0  0EFD               	movlw	-3
 24895  014BD2  80E3               	bsf	plusw1,0,c
 24896  014BD4                     l8081:
 24897                           
 24898                           ;stkvar	_aexp @ sp[(-13)+10]
 24899  014BD4  0EFD               	movlw	-3
 24900  014BD6  50E3               	movf	plusw1,w,c
 24901  014BD8  B4D8               	btfsc	status,2,c
 24902  014BDA  D027               	goto	l8091
 24903                           
 24904                           ;stkvar	_aexp @ sp[(-13)+10]
 24905  014BDC  0EFD               	movlw	-3
 24906  014BDE  28E3               	incf	plusw1,w,c
 24907  014BE0  A4D8               	btfss	status,2,c
 24908  014BE2  D018               	goto	l8087
 24909  014BE4  0E00               	movlw	0
 24910  014BE6  6E09               	movwf	(btemp+8)^0,c
 24911  014BE8  0E00               	movlw	0
 24912  014BEA  6E0A               	movwf	(btemp+9)^0,c
 24913  014BEC  0E00               	movlw	0
 24914  014BEE  6E0B               	movwf	(btemp+10)^0,c
 24915  014BF0  0E00               	movlw	0
 24916  014BF2  6E0C               	movwf	(btemp+11)^0,c
 24917                           
 24918                           ;stkvar	_a @ sp[(-13)+-8]
 24919  014BF4  0EEB               	movlw	-21
 24920  014BF6  0060  F027  FFE3   	movff	btemp+8,plusw1
 24921  014BFC  0EEC               	movlw	-20
 24922  014BFE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24923  014C04  0EED               	movlw	-19
 24924  014C06  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24925  014C0C  0EEE               	movlw	-18
 24926  014C0E  0060  F033  FFE3   	movff	btemp+11,plusw1
 24927  014C14                     l8087:
 24928                           
 24929                           ;stkvar	_a @ sp[(-13)+-8]
 24930  014C14  0EED               	movlw	-19
 24931  014C16  8EE3               	bsf	plusw1,7,c
 24932                           
 24933                           ;stkvar	_a @ sp[(-13)+-8]
 24934  014C18  0EEE               	movlw	238
 24935  014C1A  24E1               	addwf	fsr1l,w,c
 24936  014C1C  6ED9               	movwf	fsr2l,c
 24937  014C1E  0EFF               	movlw	255
 24938  014C20  20E2               	addwfc	fsr1h,w,c
 24939  014C22  6EDA               	movwf	fsr2h,c
 24940  014C24  0E00               	movlw	0
 24941  014C26  6EDF               	movwf	indf2,c
 24942  014C28  D018               	goto	l8093
 24943  014C2A                     l8091:
 24944  014C2A  0E00               	movlw	0
 24945  014C2C  6E09               	movwf	(btemp+8)^0,c
 24946  014C2E  0E00               	movlw	0
 24947  014C30  6E0A               	movwf	(btemp+9)^0,c
 24948  014C32  0E00               	movlw	0
 24949  014C34  6E0B               	movwf	(btemp+10)^0,c
 24950  014C36  0E00               	movlw	0
 24951  014C38  6E0C               	movwf	(btemp+11)^0,c
 24952                           
 24953                           ;stkvar	_a @ sp[(-13)+-8]
 24954  014C3A  0EEB               	movlw	-21
 24955  014C3C  0060  F027  FFE3   	movff	btemp+8,plusw1
 24956  014C42  0EEC               	movlw	-20
 24957  014C44  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24958  014C4A  0EED               	movlw	-19
 24959  014C4C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24960  014C52  0EEE               	movlw	-18
 24961  014C54  0060  F033  FFE3   	movff	btemp+11,plusw1
 24962  014C5A                     l8093:
 24963                           
 24964                           ;stkvar	_a @ sp[(-13)+-8]
 24965  014C5A  0EEB               	movlw	-21
 24966  014C5C  50E3               	movf	plusw1,w,c
 24967  014C5E  E139               	bnz	l8105
 24968  014C60  0EEC               	movlw	-20
 24969  014C62  50E3               	movf	plusw1,w,c
 24970  014C64  E136               	bnz	l8105
 24971  014C66  0EED               	movlw	-19
 24972  014C68  50E3               	movf	plusw1,w,c
 24973  014C6A  E133               	bnz	l8105
 24974  014C6C  0EEE               	movlw	-18
 24975  014C6E  50E3               	movf	plusw1,w,c
 24976  014C70  A4D8               	btfss	status,2,c
 24977  014C72  D02F               	goto	l8105
 24978                           
 24979                           ;stkvar	_b @ sp[(-13)+-4]
 24980  014C74  0EEF               	movlw	-17
 24981  014C76  6AE3               	clrf	plusw1,c
 24982  014C78  0EF0               	movlw	-16
 24983  014C7A  6AE3               	clrf	plusw1,c
 24984  014C7C  0EF1               	movlw	-15
 24985  014C7E  6AE3               	clrf	plusw1,c
 24986  014C80  0EF2               	movlw	-14
 24987  014C82  6AE3               	clrf	plusw1,c
 24988                           
 24989                           ;stkvar	_b @ sp[(-13)+-4]
 24990  014C84  0EF1               	movlw	241
 24991  014C86  24E1               	addwf	fsr1l,w,c
 24992  014C88  6ED9               	movwf	fsr2l,c
 24993  014C8A  0EFF               	movlw	255
 24994  014C8C  20E2               	addwfc	fsr1h,w,c
 24995  014C8E  6EDA               	movwf	fsr2h,c
 24996  014C90  0E80               	movlw	128
 24997  014C92  12DE               	iorwf	postinc2,f,c
 24998  014C94  0E7F               	movlw	127
 24999  014C96  12DD               	iorwf	postdec2,f,c
 25000  014C98                     l8099:
 25001                           
 25002                           ;stkvar	_sign @ sp[(-13)+12]
 25003  014C98  0EFF               	movlw	-1
 25004  014C9A  006F FF8C  F00C    	movff	plusw1,btemp+11
 25005                           
 25006                           ;stkvar	_b @ sp[(-13)+-4]
 25007  014CA0  0EF2               	movlw	242
 25008  014CA2  24E1               	addwf	fsr1l,w,c
 25009  014CA4  6ED9               	movwf	fsr2l,c
 25010  014CA6  0EFF               	movlw	255
 25011  014CA8  20E2               	addwfc	fsr1h,w,c
 25012  014CAA  6EDA               	movwf	fsr2h,c
 25013  014CAC  500C               	movf	(btemp+11)^0,w,c
 25014  014CAE  12DF               	iorwf	indf2,f,c
 25015                           
 25016                           ;stkvar	_b @ sp[(-13)+-4]
 25017  014CB0  0EEF               	movlw	-17
 25018  014CB2  006F FF8C  F001    	movff	plusw1,btemp
 25019  014CB8  0EF0               	movlw	-16
 25020  014CBA  006F FF8C  F002    	movff	plusw1,btemp+1
 25021  014CC0  0EF1               	movlw	-15
 25022  014CC2  006F FF8C  F003    	movff	plusw1,btemp+2
 25023  014CC8  0EF2               	movlw	-14
 25024  014CCA  006F FF8C  F004    	movff	plusw1,btemp+3
 25025  014CD0  D19F               	goto	l2978
 25026  014CD2                     l8105:
 25027                           
 25028                           ;stkvar	_bexp @ sp[(-13)+11]
 25029  014CD2  0EFE               	movlw	-2
 25030  014CD4  50E3               	movf	plusw1,w,c
 25031  014CD6  A4D8               	btfss	status,2,c
 25032  014CD8  D009               	goto	l8113
 25033  014CDA  0E00               	movlw	0
 25034  014CDC  6E01               	movwf	btemp^0,c
 25035  014CDE  0E00               	movlw	0
 25036  014CE0  6E02               	movwf	(btemp+1)^0,c
 25037  014CE2  0E00               	movlw	0
 25038  014CE4  6E03               	movwf	(btemp+2)^0,c
 25039  014CE6  0E00               	movlw	0
 25040  014CE8  6E04               	movwf	(btemp+3)^0,c
 25041  014CEA  D192               	goto	l2978
 25042  014CEC                     l8113:
 25043                           
 25044                           ;stkvar	_bexp @ sp[(-13)+11]
 25045  014CEC  0EFE               	movlw	-2
 25046  014CEE  50E3               	movf	plusw1,w,c
 25047  014CF0  6E0B               	movwf	(btemp+10)^0,c
 25048  014CF2  6A0C               	clrf	(btemp+11)^0,c
 25049                           
 25050                           ;stkvar	_aexp @ sp[(-13)+10]
 25051  014CF4  0EFD               	movlw	-3
 25052  014CF6  50E3               	movf	plusw1,w,c
 25053  014CF8  5E0B               	subwf	(btemp+10)^0,f,c
 25054  014CFA  0E00               	movlw	0
 25055  014CFC  5A0C               	subwfb	(btemp+11)^0,f,c
 25056  014CFE  0E7F               	movlw	127
 25057  014D00  260B               	addwf	(btemp+10)^0,f,c
 25058  014D02  0E00               	movlw	0
 25059  014D04  220C               	addwfc	(btemp+11)^0,f,c
 25060                           
 25061                           ;stkvar	_new_exp @ sp[(-13)+8]
 25062  014D06  0EFB               	movlw	-5
 25063  014D08  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25064  014D0E  0EFC               	movlw	-4
 25065  014D10  0060  F033  FFE3   	movff	btemp+11,plusw1
 25066                           
 25067                           ;stkvar	_b @ sp[(-13)+-4]
 25068  014D16  0EEF               	movlw	-17
 25069  014D18  006F FF8C  F009    	movff	plusw1,btemp+8
 25070  014D1E  0EF0               	movlw	-16
 25071  014D20  006F FF8C  F00A    	movff	plusw1,btemp+9
 25072  014D26  0EF1               	movlw	-15
 25073  014D28  006F FF8C  F00B    	movff	plusw1,btemp+10
 25074  014D2E  0EF2               	movlw	-14
 25075  014D30  006F FF8C  F00C    	movff	plusw1,btemp+11
 25076                           
 25077                           ;stkvar	_rem @ sp[(-13)+4]
 25078  014D36  0EF7               	movlw	-9
 25079  014D38  0060  F027  FFE3   	movff	btemp+8,plusw1
 25080  014D3E  0EF8               	movlw	-8
 25081  014D40  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25082  014D46  0EF9               	movlw	-7
 25083  014D48  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25084  014D4E  0EFA               	movlw	-6
 25085  014D50  0060  F033  FFE3   	movff	btemp+11,plusw1
 25086                           
 25087                           ;stkvar	_b @ sp[(-13)+-4]
 25088  014D56  0EEF               	movlw	-17
 25089  014D58  6AE3               	clrf	plusw1,c
 25090  014D5A  0EF0               	movlw	-16
 25091  014D5C  6AE3               	clrf	plusw1,c
 25092  014D5E  0EF1               	movlw	-15
 25093  014D60  6AE3               	clrf	plusw1,c
 25094  014D62  0EF2               	movlw	-14
 25095  014D64  6AE3               	clrf	plusw1,c
 25096                           
 25097                           ;stkvar	_grs @ sp[(-13)+0]
 25098  014D66  0EF3               	movlw	-13
 25099  014D68  6AE3               	clrf	plusw1,c
 25100  014D6A  0EF4               	movlw	-12
 25101  014D6C  6AE3               	clrf	plusw1,c
 25102  014D6E  0EF5               	movlw	-11
 25103  014D70  6AE3               	clrf	plusw1,c
 25104  014D72  0EF6               	movlw	-10
 25105  014D74  6AE3               	clrf	plusw1,c
 25106                           
 25107                           ;stkvar	_aexp @ sp[(-13)+10]
 25108  014D76  0EFD               	movlw	-3
 25109  014D78  6AE3               	clrf	plusw1,c
 25110  014D7A  D050               	goto	l8141
 25111  014D7C                     l8123:
 25112                           
 25113                           ;stkvar	_aexp @ sp[(-13)+10]
 25114  014D7C  0EFD               	movlw	-3
 25115  014D7E  50E3               	movf	plusw1,w,c
 25116  014D80  B4D8               	btfsc	status,2,c
 25117  014D82  D020               	goto	l8133
 25118                           
 25119                           ;stkvar	_rem @ sp[(-13)+4]
 25120  014D84  90D8               	bcf	status,0,c
 25121  014D86  0EF7               	movlw	-9
 25122  014D88  36E3               	rlcf	plusw1,f,c
 25123  014D8A  0EF8               	movlw	-8
 25124  014D8C  36E3               	rlcf	plusw1,f,c
 25125  014D8E  0EF9               	movlw	-7
 25126  014D90  36E3               	rlcf	plusw1,f,c
 25127  014D92  0EFA               	movlw	-6
 25128  014D94  36E3               	rlcf	plusw1,f,c
 25129                           
 25130                           ;stkvar	_b @ sp[(-13)+-4]
 25131  014D96  90D8               	bcf	status,0,c
 25132  014D98  0EEF               	movlw	-17
 25133  014D9A  36E3               	rlcf	plusw1,f,c
 25134  014D9C  0EF0               	movlw	-16
 25135  014D9E  36E3               	rlcf	plusw1,f,c
 25136  014DA0  0EF1               	movlw	-15
 25137  014DA2  36E3               	rlcf	plusw1,f,c
 25138  014DA4  0EF2               	movlw	-14
 25139  014DA6  36E3               	rlcf	plusw1,f,c
 25140                           
 25141                           ;stkvar	_grs @ sp[(-13)+0]
 25142  014DA8  0EF6               	movlw	-10
 25143  014DAA  AEE3               	btfss	plusw1,7,c
 25144  014DAC  D002               	goto	l8131
 25145                           
 25146                           ;stkvar	_b @ sp[(-13)+-4]
 25147  014DAE  0EEF               	movlw	-17
 25148  014DB0  80E3               	bsf	plusw1,0,c
 25149  014DB2                     l8131:
 25150                           
 25151                           ;stkvar	_grs @ sp[(-13)+0]
 25152  014DB2  90D8               	bcf	status,0,c
 25153  014DB4  0EF3               	movlw	-13
 25154  014DB6  36E3               	rlcf	plusw1,f,c
 25155  014DB8  0EF4               	movlw	-12
 25156  014DBA  36E3               	rlcf	plusw1,f,c
 25157  014DBC  0EF5               	movlw	-11
 25158  014DBE  36E3               	rlcf	plusw1,f,c
 25159  014DC0  0EF6               	movlw	-10
 25160  014DC2  36E3               	rlcf	plusw1,f,c
 25161  014DC4                     l8133:
 25162                           
 25163                           ;stkvar	_a @ sp[(-13)+-8]
 25164                           ;stkvar	_rem @ sp[(-13)+4]
 25165  014DC4  50E1               	movf	fsr1l,w,c
 25166  014DC6  0FF7               	addlw	-9
 25167  014DC8  6ED9               	movwf	fsr2l,c
 25168  014DCA  50E2               	movf	fsr1h,w,c
 25169  014DCC  6EDA               	movwf	fsr2h,c
 25170  014DCE  0EFF               	movlw	255
 25171  014DD0  22DA               	addwfc	fsr2h,f,c
 25172  014DD2  0EEB               	movlw	-21
 25173  014DD4  50E3               	movf	plusw1,w,c
 25174  014DD6  5CDE               	subwf	postinc2,w,c
 25175  014DD8  0EEC               	movlw	-20
 25176  014DDA  50E3               	movf	plusw1,w,c
 25177  014DDC  58DE               	subwfb	postinc2,w,c
 25178  014DDE  0EED               	movlw	-19
 25179  014DE0  50E3               	movf	plusw1,w,c
 25180  014DE2  58DE               	subwfb	postinc2,w,c
 25181  014DE4  0EEE               	movlw	-18
 25182  014DE6  50E3               	movf	plusw1,w,c
 25183  014DE8  58DE               	subwfb	postinc2,w,c
 25184  014DEA  A0D8               	btfss	status,0,c
 25185  014DEC  D015               	goto	l8139
 25186                           
 25187                           ;stkvar	_grs @ sp[(-13)+0]
 25188  014DEE  0EF6               	movlw	-10
 25189  014DF0  8CE3               	bsf	plusw1,6,c
 25190                           
 25191                           ;stkvar	_a @ sp[(-13)+-8]
 25192                           ;stkvar	_rem @ sp[(-13)+4]
 25193  014DF2  50E1               	movf	fsr1l,w,c
 25194  014DF4  0FF7               	addlw	-9
 25195  014DF6  6ED9               	movwf	fsr2l,c
 25196  014DF8  50E2               	movf	fsr1h,w,c
 25197  014DFA  6EDA               	movwf	fsr2h,c
 25198  014DFC  0EFF               	movlw	255
 25199  014DFE  22DA               	addwfc	fsr2h,f,c
 25200  014E00  0EEB               	movlw	-21
 25201  014E02  50E3               	movf	plusw1,w,c
 25202  014E04  5EDE               	subwf	postinc2,f,c
 25203  014E06  0EEC               	movlw	-20
 25204  014E08  50E3               	movf	plusw1,w,c
 25205  014E0A  5ADE               	subwfb	postinc2,f,c
 25206  014E0C  0EED               	movlw	-19
 25207  014E0E  50E3               	movf	plusw1,w,c
 25208  014E10  5ADE               	subwfb	postinc2,f,c
 25209  014E12  0EEE               	movlw	-18
 25210  014E14  50E3               	movf	plusw1,w,c
 25211  014E16  5ADE               	subwfb	postinc2,f,c
 25212  014E18                     l8139:
 25213                           
 25214                           ;stkvar	_aexp @ sp[(-13)+10]
 25215  014E18  0EFD               	movlw	-3
 25216  014E1A  2AE3               	incf	plusw1,f,c
 25217  014E1C                     l8141:
 25218                           
 25219                           ;stkvar	_aexp @ sp[(-13)+10]
 25220  014E1C  0EFD               	movlw	-3
 25221  014E1E  006F FF8C  F001    	movff	plusw1,btemp
 25222  014E24  0E19               	movlw	25
 25223  014E26  6401               	cpfsgt	btemp^0,c
 25224  014E28  D7A9               	goto	l8123
 25225                           
 25226                           ;stkvar	_rem @ sp[(-13)+4]
 25227  014E2A  0EF7               	movlw	-9
 25228  014E2C  50E3               	movf	plusw1,w,c
 25229  014E2E  E10A               	bnz	u6530
 25230  014E30  0EF8               	movlw	-8
 25231  014E32  50E3               	movf	plusw1,w,c
 25232  014E34  E107               	bnz	u6530
 25233  014E36  0EF9               	movlw	-7
 25234  014E38  50E3               	movf	plusw1,w,c
 25235  014E3A  E104               	bnz	u6530
 25236  014E3C  0EFA               	movlw	-6
 25237  014E3E  50E3               	movf	plusw1,w,c
 25238  014E40  B4D8               	btfsc	status,2,c
 25239  014E42  D024               	goto	l8157
 25240  014E44                     u6530:
 25241                           
 25242                           ;stkvar	_grs @ sp[(-13)+0]
 25243  014E44  0EF3               	movlw	-13
 25244  014E46  80E3               	bsf	plusw1,0,c
 25245  014E48  D021               	goto	l8157
 25246  014E4A                     l8147:
 25247                           
 25248                           ;stkvar	_b @ sp[(-13)+-4]
 25249  014E4A  90D8               	bcf	status,0,c
 25250  014E4C  0EEF               	movlw	-17
 25251  014E4E  36E3               	rlcf	plusw1,f,c
 25252  014E50  0EF0               	movlw	-16
 25253  014E52  36E3               	rlcf	plusw1,f,c
 25254  014E54  0EF1               	movlw	-15
 25255  014E56  36E3               	rlcf	plusw1,f,c
 25256  014E58  0EF2               	movlw	-14
 25257  014E5A  36E3               	rlcf	plusw1,f,c
 25258                           
 25259                           ;stkvar	_grs @ sp[(-13)+0]
 25260  014E5C  0EF6               	movlw	-10
 25261  014E5E  AEE3               	btfss	plusw1,7,c
 25262  014E60  D002               	goto	l8153
 25263                           
 25264                           ;stkvar	_b @ sp[(-13)+-4]
 25265  014E62  0EEF               	movlw	-17
 25266  014E64  80E3               	bsf	plusw1,0,c
 25267  014E66                     l8153:
 25268                           
 25269                           ;stkvar	_grs @ sp[(-13)+0]
 25270  014E66  90D8               	bcf	status,0,c
 25271  014E68  0EF3               	movlw	-13
 25272  014E6A  36E3               	rlcf	plusw1,f,c
 25273  014E6C  0EF4               	movlw	-12
 25274  014E6E  36E3               	rlcf	plusw1,f,c
 25275  014E70  0EF5               	movlw	-11
 25276  014E72  36E3               	rlcf	plusw1,f,c
 25277  014E74  0EF6               	movlw	-10
 25278  014E76  36E3               	rlcf	plusw1,f,c
 25279                           
 25280                           ;stkvar	_new_exp @ sp[(-13)+8]
 25281  014E78  50E1               	movf	fsr1l,w,c
 25282  014E7A  0FFB               	addlw	-5
 25283  014E7C  6ED9               	movwf	fsr2l,c
 25284  014E7E  50E2               	movf	fsr1h,w,c
 25285  014E80  6EDA               	movwf	fsr2h,c
 25286  014E82  0EFF               	movlw	255
 25287  014E84  22DA               	addwfc	fsr2h,f,c
 25288  014E86  06DE               	decf	postinc2,f,c
 25289  014E88  0E00               	movlw	0
 25290  014E8A  5ADD               	subwfb	postdec2,f,c
 25291  014E8C                     l8157:
 25292                           
 25293                           ;stkvar	_b @ sp[(-13)+-4]
 25294  014E8C  0EF1               	movlw	-15
 25295  014E8E  AEE3               	btfss	plusw1,7,c
 25296  014E90  D7DC               	goto	l8147
 25297                           
 25298                           ;stkvar	_aexp @ sp[(-13)+10]
 25299  014E92  0EFD               	movlw	-3
 25300  014E94  6AE3               	clrf	plusw1,c
 25301                           
 25302                           ;stkvar	_grs @ sp[(-13)+0]
 25303  014E96  0EF6               	movlw	-10
 25304  014E98  AEE3               	btfss	plusw1,7,c
 25305  014E9A  D020               	goto	l8171
 25306                           
 25307                           ;stkvar	_grs @ sp[(-13)+0]
 25308  014E9C  50E1               	movf	fsr1l,w,c
 25309  014E9E  0FF3               	addlw	-13
 25310  014EA0  6ED9               	movwf	fsr2l,c
 25311  014EA2  50E2               	movf	fsr1h,w,c
 25312  014EA4  6EDA               	movwf	fsr2h,c
 25313  014EA6  0EFF               	movlw	255
 25314  014EA8  22DA               	addwfc	fsr2h,f,c
 25315  014EAA  0EFF               	movlw	255
 25316  014EAC  14DE               	andwf	postinc2,w,c
 25317  014EAE  6E09               	movwf	(btemp+8)^0,c
 25318  014EB0  0EFF               	movlw	255
 25319  014EB2  14DE               	andwf	postinc2,w,c
 25320  014EB4  6E0A               	movwf	(btemp+9)^0,c
 25321  014EB6  0EFF               	movlw	255
 25322  014EB8  14DE               	andwf	postinc2,w,c
 25323  014EBA  6E0B               	movwf	(btemp+10)^0,c
 25324  014EBC  0E7F               	movlw	127
 25325  014EBE  14DE               	andwf	postinc2,w,c
 25326  014EC0  6E0C               	movwf	(btemp+11)^0,c
 25327  014EC2  5009               	movf	(btemp+8)^0,w,c
 25328  014EC4  100A               	iorwf	(btemp+9)^0,w,c
 25329  014EC6  100B               	iorwf	(btemp+10)^0,w,c
 25330  014EC8  100C               	iorwf	(btemp+11)^0,w,c
 25331  014ECA  B4D8               	btfsc	status,2,c
 25332  014ECC  D004               	goto	l8167
 25333  014ECE                     u6570:
 25334                           
 25335                           ;stkvar	_aexp @ sp[(-13)+10]
 25336  014ECE  0EFD               	movlw	-3
 25337  014ED0  6AE3               	clrf	plusw1,c
 25338  014ED2  2AE3               	incf	plusw1,f,c
 25339  014ED4  D003               	goto	l8171
 25340  014ED6                     l8167:
 25341                           
 25342                           ;stkvar	_b @ sp[(-13)+-4]
 25343  014ED6  0EEF               	movlw	-17
 25344  014ED8  B0E3               	btfsc	plusw1,0,c
 25345  014EDA  D7F9               	goto	u6570
 25346  014EDC                     l8171:
 25347                           
 25348                           ;stkvar	_aexp @ sp[(-13)+10]
 25349  014EDC  0EFD               	movlw	-3
 25350  014EDE  50E3               	movf	plusw1,w,c
 25351  014EE0  B4D8               	btfsc	status,2,c
 25352  014EE2  D036               	goto	l8181
 25353                           
 25354                           ;stkvar	_b @ sp[(-13)+-4]
 25355  014EE4  50E1               	movf	fsr1l,w,c
 25356  014EE6  0FEF               	addlw	-17
 25357  014EE8  6ED9               	movwf	fsr2l,c
 25358  014EEA  50E2               	movf	fsr1h,w,c
 25359  014EEC  6EDA               	movwf	fsr2h,c
 25360  014EEE  0EFF               	movlw	255
 25361  014EF0  22DA               	addwfc	fsr2h,f,c
 25362  014EF2  2ADE               	incf	postinc2,f,c
 25363  014EF4  0E00               	movlw	0
 25364  014EF6  22DE               	addwfc	postinc2,f,c
 25365  014EF8  22DE               	addwfc	postinc2,f,c
 25366  014EFA  22DE               	addwfc	postinc2,f,c
 25367                           
 25368                           ;stkvar	_b @ sp[(-13)+-4]
 25369  014EFC  0EF2               	movlw	-14
 25370  014EFE  A0E3               	btfss	plusw1,0,c
 25371  014F00  D027               	goto	l8181
 25372  014F02  0E01               	movlw	1
 25373  014F04  6E0C               	movwf	(btemp+11)^0,c
 25374                           
 25375                           ;stkvar	_b @ sp[(-13)+-4]
 25376  014F06  50E1               	movf	fsr1l,w,c
 25377  014F08  0FEF               	addlw	-17
 25378  014F0A  6ED9               	movwf	fsr2l,c
 25379  014F0C  50E2               	movf	fsr1h,w,c
 25380  014F0E  6EDA               	movwf	fsr2h,c
 25381  014F10  0EFF               	movlw	255
 25382  014F12  22DA               	addwfc	fsr2h,f,c
 25383  014F14  280C               	incf	(btemp+11)^0,w,c
 25384  014F16  52DE               	movf	postinc2,f,c
 25385  014F18  D008               	goto	u6610
 25386  014F1A                     u6615:
 25387  014F1A  52DE               	movf	postinc2,f,c
 25388  014F1C  90D8               	bcf	status,0,c
 25389  014F1E  BEDC               	btfsc	preinc2,7,c
 25390  014F20  80D8               	bsf	status,0,c
 25391  014F22  32DD               	rrcf	postdec2,f,c
 25392  014F24  32DD               	rrcf	postdec2,f,c
 25393  014F26  32DD               	rrcf	postdec2,f,c
 25394  014F28  32DE               	rrcf	postinc2,f,c
 25395  014F2A                     u6610:
 25396  014F2A  2EE8               	decfsz	wreg,f,c
 25397  014F2C  D7F6               	goto	u6615
 25398                           
 25399                           ;stkvar	_new_exp @ sp[(-13)+8]
 25400  014F2E  0EFB               	movlw	-5
 25401  014F30  50E3               	movf	plusw1,w,c
 25402  014F32  0F01               	addlw	1
 25403  014F34  6E01               	movwf	btemp^0,c
 25404  014F36  0EFB               	movlw	-5
 25405  014F38  0060  F007  FFE3   	movff	btemp,plusw1
 25406  014F3E  6A01               	clrf	btemp^0,c
 25407  014F40  0EFC               	movlw	-4
 25408  014F42  50E3               	movf	plusw1,w,c
 25409  014F44  2001               	addwfc	btemp^0,w,c
 25410  014F46  6E01               	movwf	btemp^0,c
 25411  014F48  0EFC               	movlw	-4
 25412  014F4A  0060  F007  FFE3   	movff	btemp,plusw1
 25413  014F50                     l8181:
 25414                           
 25415                           ;stkvar	_new_exp @ sp[(-13)+8]
 25416  014F50  0EFC               	movlw	-4
 25417  014F52  BEE3               	btfsc	plusw1,7,c
 25418  014F54  D01B               	goto	l8187
 25419  014F56  0EFC               	movlw	-4
 25420  014F58  50E3               	movf	plusw1,w,c
 25421  014F5A  E104               	bnz	u6620
 25422  014F5C  0EFB               	movlw	-5
 25423  014F5E  28E3               	incf	plusw1,w,c
 25424  014F60  A0D8               	btfss	status,0,c
 25425  014F62  D014               	goto	l8187
 25426  014F64                     u6620:
 25427  014F64  0EFF               	movlw	255
 25428  014F66  6E0B               	movwf	(btemp+10)^0,c
 25429  014F68  0E00               	movlw	0
 25430  014F6A  6E0C               	movwf	(btemp+11)^0,c
 25431                           
 25432                           ;stkvar	_new_exp @ sp[(-13)+8]
 25433  014F6C  0EFB               	movlw	-5
 25434  014F6E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25435  014F74  0EFC               	movlw	-4
 25436  014F76  0060  F033  FFE3   	movff	btemp+11,plusw1
 25437                           
 25438                           ;stkvar	_b @ sp[(-13)+-4]
 25439  014F7C  0EEF               	movlw	-17
 25440  014F7E  6AE3               	clrf	plusw1,c
 25441  014F80  0EF0               	movlw	-16
 25442  014F82  6AE3               	clrf	plusw1,c
 25443  014F84  0EF1               	movlw	-15
 25444  014F86  6AE3               	clrf	plusw1,c
 25445  014F88  0EF2               	movlw	-14
 25446  014F8A  6AE3               	clrf	plusw1,c
 25447  014F8C                     l8187:
 25448                           
 25449                           ;stkvar	_new_exp @ sp[(-13)+8]
 25450  014F8C  0EFC               	movlw	-4
 25451  014F8E  BEE3               	btfsc	plusw1,7,c
 25452  014F90  D007               	goto	u6630
 25453  014F92  0EFC               	movlw	-4
 25454  014F94  50E3               	movf	plusw1,w,c
 25455  014F96  E112               	bnz	l8193
 25456  014F98  0EFB               	movlw	-5
 25457  014F9A  04E3               	decf	plusw1,w,c
 25458  014F9C  B0D8               	btfsc	status,0,c
 25459  014F9E  D00E               	goto	l8193
 25460  014FA0                     u6630:
 25461                           
 25462                           ;stkvar	_new_exp @ sp[(-13)+8]
 25463  014FA0  0EFB               	movlw	-5
 25464  014FA2  6AE3               	clrf	plusw1,c
 25465  014FA4  0EFC               	movlw	-4
 25466  014FA6  6AE3               	clrf	plusw1,c
 25467                           
 25468                           ;stkvar	_b @ sp[(-13)+-4]
 25469  014FA8  0EEF               	movlw	-17
 25470  014FAA  6AE3               	clrf	plusw1,c
 25471  014FAC  0EF0               	movlw	-16
 25472  014FAE  6AE3               	clrf	plusw1,c
 25473  014FB0  0EF1               	movlw	-15
 25474  014FB2  6AE3               	clrf	plusw1,c
 25475  014FB4  0EF2               	movlw	-14
 25476  014FB6  6AE3               	clrf	plusw1,c
 25477                           
 25478                           ;stkvar	_sign @ sp[(-13)+12]
 25479  014FB8  0EFF               	movlw	-1
 25480  014FBA  6AE3               	clrf	plusw1,c
 25481  014FBC                     l8193:
 25482                           
 25483                           ;stkvar	_new_exp @ sp[(-13)+8]
 25484                           ;stkvar	_bexp @ sp[(-13)+11]
 25485  014FBC  0EFB               	movlw	-5
 25486  014FBE  006F FF8C  F001    	movff	plusw1,btemp
 25487  014FC4  0EFE               	movlw	-2
 25488  014FC6  0060  F007  FFE3   	movff	btemp,plusw1
 25489                           
 25490                           ;stkvar	_bexp @ sp[(-13)+11]
 25491  014FCC  0EFE               	movlw	-2
 25492  014FCE  A0E3               	btfss	plusw1,0,c
 25493  014FD0  D009               	goto	l8199
 25494                           
 25495                           ;stkvar	_b @ sp[(-13)+-4]
 25496  014FD2  0EF1               	movlw	241
 25497  014FD4  24E1               	addwf	fsr1l,w,c
 25498  014FD6  6ED9               	movwf	fsr2l,c
 25499  014FD8  0EFF               	movlw	255
 25500  014FDA  20E2               	addwfc	fsr1h,w,c
 25501  014FDC  6EDA               	movwf	fsr2h,c
 25502  014FDE  0E00               	movlw	0
 25503  014FE0  8EDB               	bsf	plusw2,7,c
 25504  014FE2  D008               	goto	l8201
 25505  014FE4                     l8199:
 25506                           
 25507                           ;stkvar	_b @ sp[(-13)+-4]
 25508  014FE4  0EF1               	movlw	241
 25509  014FE6  24E1               	addwf	fsr1l,w,c
 25510  014FE8  6ED9               	movwf	fsr2l,c
 25511  014FEA  0EFF               	movlw	255
 25512  014FEC  20E2               	addwfc	fsr1h,w,c
 25513  014FEE  6EDA               	movwf	fsr2h,c
 25514  014FF0  0E7F               	movlw	127
 25515  014FF2  16DF               	andwf	indf2,f,c
 25516  014FF4                     l8201:
 25517                           
 25518                           ;stkvar	_b @ sp[(-13)+-4]
 25519  014FF4  0EF2               	movlw	242
 25520  014FF6  24E1               	addwf	fsr1l,w,c
 25521  014FF8  6ED9               	movwf	fsr2l,c
 25522  014FFA  0EFF               	movlw	255
 25523  014FFC  20E2               	addwfc	fsr1h,w,c
 25524  014FFE  6EDA               	movwf	fsr2h,c
 25525                           
 25526                           ;stkvar	_bexp @ sp[(-13)+11]
 25527  015000  0EFE               	movlw	-2
 25528  015002  006F FF8C  F00C    	movff	plusw1,btemp+11
 25529  015008  90D8               	bcf	status,0,c
 25530  01500A  300C               	rrcf	(btemp+11)^0,w,c
 25531  01500C  6EDF               	movwf	indf2,c
 25532  01500E  D644               	goto	l8099
 25533  015010                     l2978:
 25534                           
 25535                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 25536  015010  0EEB               	movlw	235
 25537  015012  26E1               	addwf	fsr1l,f,c
 25538  015014  0EFF               	movlw	255
 25539  015016  22E2               	addwfc	fsr1h,f,c
 25540  015018  0012               	return		;funcret
 25541  01501A                     __end_of___fldiv:
 25542                           	opt callstack 0
 25543                           
 25544 ;; *************** function ___flge *****************
 25545 ;; Defined at:
 25546 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 25547 ;; Parameters:    Size  Location     Type
 25548 ;;  ff1             4  [STACK] unsigned char 
 25549 ;;  ff2             4  [STACK] unsigned char 
 25550 ;; Auto vars:     Size  Location     Type
 25551 ;;		None
 25552 ;; Return value:  Size  Location     Type
 25553 ;;		None               void
 25554 ;; Registers used:
 25555 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 25556 ;; Tracked objects:
 25557 ;;		On entry : 0/0
 25558 ;;		On exit  : 0/0
 25559 ;;		Unchanged: 0/0
 25560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25565 ;;Total ram usage:        0 bytes
 25566 ;; Hardware stack levels used:    1
 25567 ;; Hardware stack levels required when called:   15
 25568 ;; This function calls:
 25569 ;;		Nothing
 25570 ;; This function is called by:
 25571 ;;		_main
 25572 ;;		_calc_ror_data
 25573 ;;		_check_day_time
 25574 ;;		_calc_bsoc
 25575 ;;		_efgtoa
 25576 ;; This function uses a reentrant model
 25577 ;;
 25578                           
 25579                           	psect	text99
 25580  018CD4                     __ptext99:
 25581                           	opt callstack 0
 25582  018CD4                     ___flge:
 25583                           	opt callstack 0
 25584                           
 25585                           ;stkvar	_ff1 @ sp[(0)+-4]
 25586                           
 25587                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25588                           ;incstack = 0
 25589 ;; hardware stack exceeded
 25590  018CD4  50E1               	movf	fsr1l,w,c
 25591  018CD6  0FFC               	addlw	-4
 25592  018CD8  6ED9               	movwf	fsr2l,c
 25593  018CDA  50E2               	movf	fsr1h,w,c
 25594  018CDC  6EDA               	movwf	fsr2h,c
 25595  018CDE  0EFF               	movlw	255
 25596  018CE0  22DA               	addwfc	fsr2h,f,c
 25597  018CE2  0E00               	movlw	0
 25598  018CE4  14DE               	andwf	postinc2,w,c
 25599  018CE6  6E09               	movwf	(btemp+8)^0,c
 25600  018CE8  0E00               	movlw	0
 25601  018CEA  14DE               	andwf	postinc2,w,c
 25602  018CEC  6E0A               	movwf	(btemp+9)^0,c
 25603  018CEE  0E80               	movlw	128
 25604  018CF0  14DE               	andwf	postinc2,w,c
 25605  018CF2  6E0B               	movwf	(btemp+10)^0,c
 25606  018CF4  0E7F               	movlw	127
 25607  018CF6  14DE               	andwf	postinc2,w,c
 25608  018CF8  6E0C               	movwf	(btemp+11)^0,c
 25609  018CFA  5009               	movf	(btemp+8)^0,w,c
 25610  018CFC  100A               	iorwf	(btemp+9)^0,w,c
 25611  018CFE  100B               	iorwf	(btemp+10)^0,w,c
 25612  018D00  100C               	iorwf	(btemp+11)^0,w,c
 25613  018D02  A4D8               	btfss	status,2,c
 25614  018D04  D008               	goto	l8475
 25615                           
 25616                           ;stkvar	_ff1 @ sp[(0)+-4]
 25617  018D06  0EFC               	movlw	-4
 25618  018D08  6AE3               	clrf	plusw1,c
 25619  018D0A  0EFD               	movlw	-3
 25620  018D0C  6AE3               	clrf	plusw1,c
 25621  018D0E  0EFE               	movlw	-2
 25622  018D10  6AE3               	clrf	plusw1,c
 25623  018D12  0EFF               	movlw	-1
 25624  018D14  6AE3               	clrf	plusw1,c
 25625  018D16                     l8475:
 25626                           
 25627                           ;stkvar	_ff2 @ sp[(0)+-8]
 25628  018D16  50E1               	movf	fsr1l,w,c
 25629  018D18  0FF8               	addlw	-8
 25630  018D1A  6ED9               	movwf	fsr2l,c
 25631  018D1C  50E2               	movf	fsr1h,w,c
 25632  018D1E  6EDA               	movwf	fsr2h,c
 25633  018D20  0EFF               	movlw	255
 25634  018D22  22DA               	addwfc	fsr2h,f,c
 25635  018D24  0E00               	movlw	0
 25636  018D26  14DE               	andwf	postinc2,w,c
 25637  018D28  6E09               	movwf	(btemp+8)^0,c
 25638  018D2A  0E00               	movlw	0
 25639  018D2C  14DE               	andwf	postinc2,w,c
 25640  018D2E  6E0A               	movwf	(btemp+9)^0,c
 25641  018D30  0E80               	movlw	128
 25642  018D32  14DE               	andwf	postinc2,w,c
 25643  018D34  6E0B               	movwf	(btemp+10)^0,c
 25644  018D36  0E7F               	movlw	127
 25645  018D38  14DE               	andwf	postinc2,w,c
 25646  018D3A  6E0C               	movwf	(btemp+11)^0,c
 25647  018D3C  5009               	movf	(btemp+8)^0,w,c
 25648  018D3E  100A               	iorwf	(btemp+9)^0,w,c
 25649  018D40  100B               	iorwf	(btemp+10)^0,w,c
 25650  018D42  100C               	iorwf	(btemp+11)^0,w,c
 25651  018D44  A4D8               	btfss	status,2,c
 25652  018D46  D008               	goto	l2659
 25653                           
 25654                           ;stkvar	_ff2 @ sp[(0)+-8]
 25655  018D48  0EF8               	movlw	-8
 25656  018D4A  6AE3               	clrf	plusw1,c
 25657  018D4C  0EF9               	movlw	-7
 25658  018D4E  6AE3               	clrf	plusw1,c
 25659  018D50  0EFA               	movlw	-6
 25660  018D52  6AE3               	clrf	plusw1,c
 25661  018D54  0EFB               	movlw	-5
 25662  018D56  6AE3               	clrf	plusw1,c
 25663  018D58                     l2659:
 25664                           
 25665                           ;stkvar	_ff1 @ sp[(0)+-4]
 25666  018D58  0EFF               	movlw	-1
 25667  018D5A  AEE3               	btfss	plusw1,7,c
 25668  018D5C  D024               	goto	l8481
 25669                           
 25670                           ;stkvar	_ff1 @ sp[(0)+-4]
 25671  018D5E  0E00               	movlw	0
 25672  018D60  6E09               	movwf	(btemp+8)^0,c
 25673  018D62  0E00               	movlw	0
 25674  018D64  6E0A               	movwf	(btemp+9)^0,c
 25675  018D66  0E00               	movlw	0
 25676  018D68  6E0B               	movwf	(btemp+10)^0,c
 25677  018D6A  0E80               	movlw	128
 25678  018D6C  6E0C               	movwf	(btemp+11)^0,c
 25679  018D6E  0EFC               	movlw	-4
 25680  018D70  50E3               	movf	plusw1,w,c
 25681  018D72  5E09               	subwf	(btemp+8)^0,f,c
 25682  018D74  0EFD               	movlw	-3
 25683  018D76  50E3               	movf	plusw1,w,c
 25684  018D78  5A0A               	subwfb	(btemp+9)^0,f,c
 25685  018D7A  0EFE               	movlw	-2
 25686  018D7C  50E3               	movf	plusw1,w,c
 25687  018D7E  5A0B               	subwfb	(btemp+10)^0,f,c
 25688  018D80  0EFF               	movlw	-1
 25689  018D82  50E3               	movf	plusw1,w,c
 25690  018D84  5A0C               	subwfb	(btemp+11)^0,f,c
 25691                           
 25692                           ;stkvar	_ff1 @ sp[(0)+-4]
 25693  018D86  0EFC               	movlw	-4
 25694  018D88  0060  F027  FFE3   	movff	btemp+8,plusw1
 25695  018D8E  0EFD               	movlw	-3
 25696  018D90  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25697  018D96  0EFE               	movlw	-2
 25698  018D98  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25699  018D9E  0EFF               	movlw	-1
 25700  018DA0  0060  F033  FFE3   	movff	btemp+11,plusw1
 25701  018DA6                     l8481:
 25702                           
 25703                           ;stkvar	_ff2 @ sp[(0)+-8]
 25704  018DA6  0EFB               	movlw	-5
 25705  018DA8  AEE3               	btfss	plusw1,7,c
 25706  018DAA  D024               	goto	l8485
 25707                           
 25708                           ;stkvar	_ff2 @ sp[(0)+-8]
 25709  018DAC  0E00               	movlw	0
 25710  018DAE  6E09               	movwf	(btemp+8)^0,c
 25711  018DB0  0E00               	movlw	0
 25712  018DB2  6E0A               	movwf	(btemp+9)^0,c
 25713  018DB4  0E00               	movlw	0
 25714  018DB6  6E0B               	movwf	(btemp+10)^0,c
 25715  018DB8  0E80               	movlw	128
 25716  018DBA  6E0C               	movwf	(btemp+11)^0,c
 25717  018DBC  0EF8               	movlw	-8
 25718  018DBE  50E3               	movf	plusw1,w,c
 25719  018DC0  5E09               	subwf	(btemp+8)^0,f,c
 25720  018DC2  0EF9               	movlw	-7
 25721  018DC4  50E3               	movf	plusw1,w,c
 25722  018DC6  5A0A               	subwfb	(btemp+9)^0,f,c
 25723  018DC8  0EFA               	movlw	-6
 25724  018DCA  50E3               	movf	plusw1,w,c
 25725  018DCC  5A0B               	subwfb	(btemp+10)^0,f,c
 25726  018DCE  0EFB               	movlw	-5
 25727  018DD0  50E3               	movf	plusw1,w,c
 25728  018DD2  5A0C               	subwfb	(btemp+11)^0,f,c
 25729                           
 25730                           ;stkvar	_ff2 @ sp[(0)+-8]
 25731  018DD4  0EF8               	movlw	-8
 25732  018DD6  0060  F027  FFE3   	movff	btemp+8,plusw1
 25733  018DDC  0EF9               	movlw	-7
 25734  018DDE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25735  018DE4  0EFA               	movlw	-6
 25736  018DE6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25737  018DEC  0EFB               	movlw	-5
 25738  018DEE  0060  F033  FFE3   	movff	btemp+11,plusw1
 25739  018DF4                     l8485:
 25740                           
 25741                           ;stkvar	_ff1 @ sp[(0)+-4]
 25742  018DF4  0EFF               	movlw	-1
 25743  018DF6  7EE3               	btg	plusw1,7,c
 25744                           
 25745                           ;stkvar	_ff2 @ sp[(0)+-8]
 25746  018DF8  0EFB               	movlw	-5
 25747  018DFA  7EE3               	btg	plusw1,7,c
 25748                           
 25749                           ;stkvar	_ff2 @ sp[(0)+-8]
 25750                           ;stkvar	_ff1 @ sp[(0)+-4]
 25751  018DFC  50E1               	movf	fsr1l,w,c
 25752  018DFE  0FFC               	addlw	-4
 25753  018E00  6ED9               	movwf	fsr2l,c
 25754  018E02  50E2               	movf	fsr1h,w,c
 25755  018E04  6EDA               	movwf	fsr2h,c
 25756  018E06  0EFF               	movlw	255
 25757  018E08  22DA               	addwfc	fsr2h,f,c
 25758  018E0A  0EF8               	movlw	-8
 25759  018E0C  50E3               	movf	plusw1,w,c
 25760  018E0E  5CDE               	subwf	postinc2,w,c
 25761  018E10  0EF9               	movlw	-7
 25762  018E12  50E3               	movf	plusw1,w,c
 25763  018E14  58DE               	subwfb	postinc2,w,c
 25764  018E16  0EFA               	movlw	-6
 25765  018E18  50E3               	movf	plusw1,w,c
 25766  018E1A  58DE               	subwfb	postinc2,w,c
 25767  018E1C  0EFB               	movlw	-5
 25768  018E1E  50E3               	movf	plusw1,w,c
 25769  018E20  58DE               	subwfb	postinc2,w,c
 25770  018E22  B0D8               	btfsc	status,0,c
 25771  018E24  D002               	goto	l8493
 25772  018E26  9001               	bcf	btemp& (0+255),0,c
 25773  018E28  D001               	goto	l2666
 25774  018E2A                     l8493:
 25775  018E2A  8001               	bsf	btemp& (0+255),0,c
 25776  018E2C                     l2666:
 25777                           
 25778                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 25779  018E2C  0EF8               	movlw	248
 25780  018E2E  26E1               	addwf	fsr1l,f,c
 25781  018E30  0EFF               	movlw	255
 25782  018E32  22E2               	addwfc	fsr1h,f,c
 25783  018E34  0012               	return		;funcret
 25784  018E36                     __end_of___flge:
 25785                           	opt callstack 0
 25786                           
 25787 ;; *************** function _calc_model_data *****************
 25788 ;; Defined at:
 25789 ;;		line 67 in file "mbmc.c"
 25790 ;; Parameters:    Size  Location     Type
 25791 ;;		None
 25792 ;; Auto vars:     Size  Location     Type
 25793 ;;		None
 25794 ;; Return value:  Size  Location     Type
 25795 ;;                  1  [STACK] void 
 25796 ;; Registers used:
 25797 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25798 ;; Tracked objects:
 25799 ;;		On entry : 0/1
 25800 ;;		On exit  : 3F/39
 25801 ;;		Unchanged: 0/0
 25802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25807 ;;Total ram usage:        0 bytes
 25808 ;; Hardware stack levels used:    1
 25809 ;; Hardware stack levels required when called:   18
 25810 ;; This function calls:
 25811 ;;		___fladd
 25812 ;;		___flmul
 25813 ;;		___flsub
 25814 ;;		_lp_filter
 25815 ;;		_start_bsoc
 25816 ;;		_stop_bsoc
 25817 ;; This function is called by:
 25818 ;;		_main
 25819 ;; This function uses a reentrant model
 25820 ;;
 25821                           
 25822                           	psect	text100
 25823  015946                     __ptext100:
 25824                           	opt callstack 0
 25825  015946                     _calc_model_data:
 25826                           	opt callstack 12
 25827                           
 25828                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 25829                           
 25830                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25831                           ;incstack = 0
 25832  015946  EC44  F0DF         	call	_stop_bsoc	;wreg free
 25833                           
 25834                           ; BSR set to: 57
 25835                           ;mbmc.c: 72:  if (!V.calib) {
 25836  01594A  0101               	movlb	1	; () banked
 25837  01594C  51AC               	movf	(_V+172)& (0+255),w,b	;volatile
 25838  01594E  A4D8               	btfss	status,2,c
 25839  015950  D219               	goto	l10879
 25840                           
 25841                           ; BSR set to: 1
 25842                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 25843  015952  EE21  F2FF         	lfsr	2,_C
 25844  015956  006F FF78  F743    	movff	postinc2,_C+68	;volatile
 25845  01595C  006F FF78  F744    	movff	postinc2,_C+69	;volatile
 25846  015962  006F FF78  F745    	movff	postinc2,_C+70	;volatile
 25847  015968  006F FF74  F746    	movff	postdec2,_C+71	;volatile
 25848                           
 25849                           ; BSR set to: 1
 25850                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 25851  01596E  0060  F203  FFE6   	movff	calc_model_data@bcror,postinc1
 25852  015974  0060  F207  FFE6   	movff	calc_model_data@bcror+1,postinc1
 25853  01597A  0060  F20B  FFE6   	movff	calc_model_data@bcror+2,postinc1
 25854  015980  0060  F20F  FFE6   	movff	calc_model_data@bcror+3,postinc1
 25855  015986  EE21  F343         	lfsr	2,_C+68	;volatile
 25856  01598A  006F FF7B FFE6     	movff	postinc2,postinc1
 25857  015990  006F FF7B FFE6     	movff	postinc2,postinc1
 25858  015996  006F FF7B FFE6     	movff	postinc2,postinc1
 25859  01599C  006F FF7B FFE6     	movff	postinc2,postinc1
 25860  0159A2  EC7B  F0D9         	call	___flsub	;wreg free
 25861  0159A6  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 25862  0159AC  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 25863  0159B2  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 25864  0159B8  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 25865                           
 25866                           ;mbmc.c: 75:   bcror = C.c_bat;
 25867  0159BE  C743  F080         	movff	_C+68,calc_model_data@bcror	;volatile
 25868  0159C2  C744  F081         	movff	_C+69,calc_model_data@bcror+1	;volatile
 25869  0159C6  C745  F082         	movff	_C+70,calc_model_data@bcror+2	;volatile
 25870  0159CA  C746  F083         	movff	_C+71,calc_model_data@bcror+3	;volatile
 25871                           
 25872                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 25873  0159CE  EE21  F303         	lfsr	2,_C+4	;volatile
 25874  0159D2  006F FF78  F747    	movff	postinc2,_C+72	;volatile
 25875  0159D8  006F FF78  F748    	movff	postinc2,_C+73	;volatile
 25876  0159DE  006F FF78  F749    	movff	postinc2,_C+74	;volatile
 25877  0159E4  006F FF74  F74A    	movff	postdec2,_C+75	;volatile
 25878                           
 25879                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 25880  0159EA  EE21  F30F         	lfsr	2,_C+16	;volatile
 25881  0159EE  006F FF78  F753    	movff	postinc2,_C+84	;volatile
 25882  0159F4  006F FF78  F754    	movff	postinc2,_C+85	;volatile
 25883  0159FA  006F FF78  F755    	movff	postinc2,_C+86	;volatile
 25884  015A00  006F FF74  F756    	movff	postdec2,_C+87	;volatile
 25885                           
 25886                           ;mbmc.c: 78:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 25887  015A06  EE21  F333         	lfsr	2,_C+52	;volatile
 25888  015A0A  006F FF78  F767    	movff	postinc2,_C+104	;volatile
 25889  015A10  006F FF78  F768    	movff	postinc2,_C+105	;volatile
 25890  015A16  006F FF78  F769    	movff	postinc2,_C+106	;volatile
 25891  015A1C  006F FF74  F76A    	movff	postdec2,_C+107	;volatile
 25892                           
 25893                           ;mbmc.c: 79:   C.bv_ror = C.v_bat - bvror;
 25894  015A22  0060  F213  FFE6   	movff	calc_model_data@bvror,postinc1
 25895  015A28  0060  F217  FFE6   	movff	calc_model_data@bvror+1,postinc1
 25896  015A2E  0060  F21B  FFE6   	movff	calc_model_data@bvror+2,postinc1
 25897  015A34  0060  F21F  FFE6   	movff	calc_model_data@bvror+3,postinc1
 25898  015A3A  EE21  F353         	lfsr	2,_C+84	;volatile
 25899  015A3E  006F FF7B FFE6     	movff	postinc2,postinc1
 25900  015A44  006F FF7B FFE6     	movff	postinc2,postinc1
 25901  015A4A  006F FF7B FFE6     	movff	postinc2,postinc1
 25902  015A50  006F FF7B FFE6     	movff	postinc2,postinc1
 25903  015A56  EC7B  F0D9         	call	___flsub	;wreg free
 25904  015A5A  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 25905  015A60  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 25906  015A66  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 25907  015A6C  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 25908                           
 25909                           ;mbmc.c: 80:   bvror = C.v_bat;
 25910  015A72  C753  F084         	movff	_C+84,calc_model_data@bvror	;volatile
 25911  015A76  C754  F085         	movff	_C+85,calc_model_data@bvror+1	;volatile
 25912  015A7A  C755  F086         	movff	_C+86,calc_model_data@bvror+2	;volatile
 25913  015A7E  C756  F087         	movff	_C+87,calc_model_data@bvror+3	;volatile
 25914                           
 25915                           ;mbmc.c: 81:   C.v_pv = C.calc[V_PV];
 25916  015A82  EE21  F313         	lfsr	2,_C+20	;volatile
 25917  015A86  006F FF78  F74F    	movff	postinc2,_C+80	;volatile
 25918  015A8C  006F FF78  F750    	movff	postinc2,_C+81	;volatile
 25919  015A92  006F FF78  F751    	movff	postinc2,_C+82	;volatile
 25920  015A98  006F FF74  F752    	movff	postdec2,_C+83	;volatile
 25921                           
 25922                           ;mbmc.c: 82:   C.v_cc = C.calc[V_CC];
 25923  015A9E  EE21  F307         	lfsr	2,_C+8	;volatile
 25924  015AA2  006F FF78  F74B    	movff	postinc2,_C+76	;volatile
 25925  015AA8  006F FF78  F74C    	movff	postinc2,_C+77	;volatile
 25926  015AAE  006F FF78  F74D    	movff	postinc2,_C+78	;volatile
 25927  015AB4  006F FF74  F74E    	movff	postdec2,_C+79	;volatile
 25928                           
 25929                           ;mbmc.c: 83:   C.v_inverter = C.calc[V_INVERTER];
 25930  015ABA  EE21  F32F         	lfsr	2,_C+48	;volatile
 25931  015ABE  006F FF78  F763    	movff	postinc2,_C+100	;volatile
 25932  015AC4  006F FF78  F764    	movff	postinc2,_C+101	;volatile
 25933  015ACA  006F FF78  F765    	movff	postinc2,_C+102	;volatile
 25934  015AD0  006F FF74  F766    	movff	postdec2,_C+103	;volatile
 25935                           
 25936                           ;mbmc.c: 84:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 25937  015AD6  0E01               	movlw	1
 25938  015AD8  6EE6               	movwf	postinc1,c
 25939  015ADA  0E10               	movlw	16
 25940  015ADC  6EE6               	movwf	postinc1,c
 25941  015ADE  EE21  F2FF         	lfsr	2,_C
 25942  015AE2  006F FF7B FFE6     	movff	postinc2,postinc1
 25943  015AE8  006F FF7B FFE6     	movff	postinc2,postinc1
 25944  015AEE  006F FF7B FFE6     	movff	postinc2,postinc1
 25945  015AF4  006F FF7B FFE6     	movff	postinc2,postinc1
 25946  015AFA  EE21  F303         	lfsr	2,_C+4	;volatile
 25947  015AFE  006F FF7B FFE6     	movff	postinc2,postinc1
 25948  015B04  006F FF7B FFE6     	movff	postinc2,postinc1
 25949  015B0A  006F FF7B FFE6     	movff	postinc2,postinc1
 25950  015B10  006F FF7B FFE6     	movff	postinc2,postinc1
 25951  015B16  EC7B  F0D9         	call	___flsub	;wreg free
 25952  015B1A  0060  F007  FFE6   	movff	btemp,postinc1
 25953  015B20  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25954  015B26  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25955  015B2C  0060  F013  FFE6   	movff	btemp+3,postinc1
 25956  015B32  EC85  F0C2         	call	_lp_filter	;wreg free
 25957  015B36  0060  F004  F73F   	movff	btemp,_C+64	;volatile
 25958  015B3C  0060  F008  F740   	movff	btemp+1,_C+65	;volatile
 25959  015B42  0060  F00C  F741   	movff	btemp+2,_C+66	;volatile
 25960  015B48  0060  F010  F742   	movff	btemp+3,_C+67	;volatile
 25961                           
 25962                           ;mbmc.c: 85:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 25963  015B4E  0E01               	movlw	1
 25964  015B50  6EE6               	movwf	postinc1,c
 25965  015B52  0E11               	movlw	17
 25966  015B54  6EE6               	movwf	postinc1,c
 25967  015B56  EE21  F353         	lfsr	2,_C+84	;volatile
 25968  015B5A  006F FF7B FFE6     	movff	postinc2,postinc1
 25969  015B60  006F FF7B FFE6     	movff	postinc2,postinc1
 25970  015B66  006F FF7B FFE6     	movff	postinc2,postinc1
 25971  015B6C  006F FF7B FFE6     	movff	postinc2,postinc1
 25972  015B72  EE21  F33F         	lfsr	2,_C+64	;volatile
 25973  015B76  006F FF7B FFE6     	movff	postinc2,postinc1
 25974  015B7C  006F FF7B FFE6     	movff	postinc2,postinc1
 25975  015B82  006F FF7B FFE6     	movff	postinc2,postinc1
 25976  015B88  006F FF7B FFE6     	movff	postinc2,postinc1
 25977  015B8E  EC9F  F099         	call	___flmul	;wreg free
 25978  015B92  0060  F007  FFE6   	movff	btemp,postinc1
 25979  015B98  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25980  015B9E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25981  015BA4  0060  F013  FFE6   	movff	btemp+3,postinc1
 25982  015BAA  EC85  F0C2         	call	_lp_filter	;wreg free
 25983  015BAE  0060  F004  F773   	movff	btemp,_C+116	;volatile
 25984  015BB4  0060  F008  F774   	movff	btemp+1,_C+117	;volatile
 25985  015BBA  0060  F00C  F775   	movff	btemp+2,_C+118	;volatile
 25986  015BC0  0060  F010  F776   	movff	btemp+3,_C+119	;volatile
 25987                           
 25988                           ;mbmc.c: 86:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 25989  015BC6  0E01               	movlw	1
 25990  015BC8  6EE6               	movwf	postinc1,c
 25991  015BCA  0E12               	movlw	18
 25992  015BCC  6EE6               	movwf	postinc1,c
 25993  015BCE  EE21  F34F         	lfsr	2,_C+80	;volatile
 25994  015BD2  006F FF7B FFE6     	movff	postinc2,postinc1
 25995  015BD8  006F FF7B FFE6     	movff	postinc2,postinc1
 25996  015BDE  006F FF7B FFE6     	movff	postinc2,postinc1
 25997  015BE4  006F FF7B FFE6     	movff	postinc2,postinc1
 25998  015BEA  EE21  F347         	lfsr	2,_C+72	;volatile
 25999  015BEE  006F FF7B FFE6     	movff	postinc2,postinc1
 26000  015BF4  006F FF7B FFE6     	movff	postinc2,postinc1
 26001  015BFA  006F FF7B FFE6     	movff	postinc2,postinc1
 26002  015C00  006F FF7B FFE6     	movff	postinc2,postinc1
 26003  015C06  EC9F  F099         	call	___flmul	;wreg free
 26004  015C0A  0060  F007  FFE6   	movff	btemp,postinc1
 26005  015C10  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26006  015C16  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26007  015C1C  0060  F013  FFE6   	movff	btemp+3,postinc1
 26008  015C22  EC85  F0C2         	call	_lp_filter	;wreg free
 26009  015C26  0060  F004  F77B   	movff	btemp,_C+124	;volatile
 26010  015C2C  0060  F008  F77C   	movff	btemp+1,_C+125	;volatile
 26011  015C32  0060  F00C  F77D   	movff	btemp+2,_C+126	;volatile
 26012  015C38  0060  F010  F77E   	movff	btemp+3,_C+127	;volatile
 26013                           
 26014                           ;mbmc.c: 87:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 26015  015C3E  0E01               	movlw	1
 26016  015C40  6EE6               	movwf	postinc1,c
 26017  015C42  0E13               	movlw	19
 26018  015C44  6EE6               	movwf	postinc1,c
 26019  015C46  0E00               	movlw	0
 26020  015C48  6EE6               	movwf	postinc1,c
 26021  015C4A  0E00               	movlw	0
 26022  015C4C  6EE6               	movwf	postinc1,c
 26023  015C4E  0E60               	movlw	96
 26024  015C50  6EE6               	movwf	postinc1,c
 26025  015C52  0EC1               	movlw	193
 26026  015C54  6EE6               	movwf	postinc1,c
 26027  015C56  EE21  F363         	lfsr	2,_C+100	;volatile
 26028  015C5A  006F FF7B FFE6     	movff	postinc2,postinc1
 26029  015C60  006F FF7B FFE6     	movff	postinc2,postinc1
 26030  015C66  006F FF7B FFE6     	movff	postinc2,postinc1
 26031  015C6C  006F FF7B FFE6     	movff	postinc2,postinc1
 26032  015C72  EE21  F33F         	lfsr	2,_C+64	;volatile
 26033  015C76  006F FF7B FFE6     	movff	postinc2,postinc1
 26034  015C7C  006F FF7B FFE6     	movff	postinc2,postinc1
 26035  015C82  006F FF7B FFE6     	movff	postinc2,postinc1
 26036  015C88  006F FF7B FFE6     	movff	postinc2,postinc1
 26037  015C8E  EC9F  F099         	call	___flmul	;wreg free
 26038  015C92  0060  F007  FFE6   	movff	btemp,postinc1
 26039  015C98  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26040  015C9E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26041  015CA4  0060  F013  FFE6   	movff	btemp+3,postinc1
 26042  015CAA  ECB4  F09D         	call	___fladd	;wreg free
 26043  015CAE  0060  F007  FFE6   	movff	btemp,postinc1
 26044  015CB4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26045  015CBA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26046  015CC0  0060  F013  FFE6   	movff	btemp+3,postinc1
 26047  015CC6  EC85  F0C2         	call	_lp_filter	;wreg free
 26048  015CCA  0060  F004  F777   	movff	btemp,_C+120	;volatile
 26049  015CD0  0060  F008  F778   	movff	btemp+1,_C+121	;volatile
 26050  015CD6  0060  F00C  F779   	movff	btemp+2,_C+122	;volatile
 26051  015CDC  0060  F010  F77A   	movff	btemp+3,_C+123	;volatile
 26052                           
 26053                           ;mbmc.c: 88:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 26054  015CE2  0E01               	movlw	1
 26055  015CE4  6EE6               	movwf	postinc1,c
 26056  015CE6  0E14               	movlw	20
 26057  015CE8  6EE6               	movwf	postinc1,c
 26058  015CEA  EE21  F353         	lfsr	2,_C+84	;volatile
 26059  015CEE  006F FF7B FFE6     	movff	postinc2,postinc1
 26060  015CF4  006F FF7B FFE6     	movff	postinc2,postinc1
 26061  015CFA  006F FF7B FFE6     	movff	postinc2,postinc1
 26062  015D00  006F FF7B FFE6     	movff	postinc2,postinc1
 26063  015D06  EE21  F343         	lfsr	2,_C+68	;volatile
 26064  015D0A  006F FF7B FFE6     	movff	postinc2,postinc1
 26065  015D10  006F FF7B FFE6     	movff	postinc2,postinc1
 26066  015D16  006F FF7B FFE6     	movff	postinc2,postinc1
 26067  015D1C  006F FF7B FFE6     	movff	postinc2,postinc1
 26068  015D22  EC9F  F099         	call	___flmul	;wreg free
 26069  015D26  0060  F007  FFE6   	movff	btemp,postinc1
 26070  015D2C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26071  015D32  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26072  015D38  0060  F013  FFE6   	movff	btemp+3,postinc1
 26073  015D3E  EC85  F0C2         	call	_lp_filter	;wreg free
 26074  015D42  0060  F004  F77F   	movff	btemp,_C+128	;volatile
 26075  015D48  0060  F008  F780   	movff	btemp+1,_C+129	;volatile
 26076  015D4E  0060  F00C  F781   	movff	btemp+2,_C+130	;volatile
 26077  015D54  0060  F010  F782   	movff	btemp+3,_C+131	;volatile
 26078                           
 26079                           ;mbmc.c: 92:   if (C.p_inverter < 0.0)
 26080  015D5A  EE21  F377         	lfsr	2,_C+120	;volatile
 26081  015D5E  0E03               	movlw	3
 26082  015D60  AEDB               	btfss	plusw2,7,c
 26083  015D62  D010               	goto	l10879
 26084                           
 26085                           ;mbmc.c: 93:    C.p_inverter = 0.0001;
 26086  015D64  0E17               	movlw	23
 26087  015D66  006F FFA0  F777    	movff	wreg,_C+120	;volatile
 26088  015D6C  0EB7               	movlw	183
 26089  015D6E  006F FFA0  F778    	movff	wreg,_C+121	;volatile
 26090  015D74  0ED1               	movlw	209
 26091  015D76  006F FFA0  F779    	movff	wreg,_C+122	;volatile
 26092  015D7C  0E38               	movlw	56
 26093  015D7E  006F FFA0  F77A    	movff	wreg,_C+123	;volatile
 26094  015D84                     l10879:
 26095                           
 26096                           ;mbmc.c: 95:  start_bsoc();
 26097  015D84  ECD0  F0DD         	call	_start_bsoc	;wreg free
 26098                           
 26099                           ; BSR set to: 57
 26100                           ;mbmc.c: 96:  C.update = 1;
 26101  015D88  0E01               	movlw	1
 26102  015D8A  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 26103                           
 26104                           ; BSR set to: 57
 26105                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26106  015D90  0012               	return		;funcret
 26107  015D92                     __end_of_calc_model_data:
 26108                           	opt callstack 0
 26109                           
 26110 ;; *************** function _stop_bsoc *****************
 26111 ;; Defined at:
 26112 ;;		line 114 in file "bsoc.c"
 26113 ;; Parameters:    Size  Location     Type
 26114 ;;		None
 26115 ;; Auto vars:     Size  Location     Type
 26116 ;;		None
 26117 ;; Return value:  Size  Location     Type
 26118 ;;                  1  [STACK] void 
 26119 ;; Registers used:
 26120 ;;		None
 26121 ;; Tracked objects:
 26122 ;;		On entry : 0/1
 26123 ;;		On exit  : 3F/39
 26124 ;;		Unchanged: 0/0
 26125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26130 ;;Total ram usage:        0 bytes
 26131 ;; Hardware stack levels used:    1
 26132 ;; Hardware stack levels required when called:   15
 26133 ;; This function calls:
 26134 ;;		Nothing
 26135 ;; This function is called by:
 26136 ;;		_calc_model_data
 26137 ;; This function uses a reentrant model
 26138 ;;
 26139                           
 26140                           	psect	text101
 26141  01BE88                     __ptext101:
 26142                           	opt callstack 0
 26143  01BE88                     _stop_bsoc:
 26144                           	opt callstack 14
 26145                           
 26146                           ;bsoc.c: 117:  PIE6bits.TMR3IE = 0;
 26147                           
 26148                           ; BSR set to: 57
 26149                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26150                           ;incstack = 0
 26151  01BE88  0139               	movlb	57	; () banked
 26152  01BE8A  9D96               	bcf	150,6,b	;volatile
 26153                           
 26154                           ; BSR set to: 57
 26155                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 26156  01BE8C  0012               	return		;funcret
 26157  01BE8E                     __end_of_stop_bsoc:
 26158                           	opt callstack 0
 26159                           
 26160 ;; *************** function _start_bsoc *****************
 26161 ;; Defined at:
 26162 ;;		line 105 in file "bsoc.c"
 26163 ;; Parameters:    Size  Location     Type
 26164 ;;		None
 26165 ;; Auto vars:     Size  Location     Type
 26166 ;;		None
 26167 ;; Return value:  Size  Location     Type
 26168 ;;                  1  [STACK] void 
 26169 ;; Registers used:
 26170 ;;		wreg, status,2, status,0, btemp+11
 26171 ;; Tracked objects:
 26172 ;;		On entry : 0/1
 26173 ;;		On exit  : 3F/39
 26174 ;;		Unchanged: 0/0
 26175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26180 ;;Total ram usage:        0 bytes
 26181 ;; Hardware stack levels used:    1
 26182 ;; Hardware stack levels required when called:   15
 26183 ;; This function calls:
 26184 ;;		Nothing
 26185 ;; This function is called by:
 26186 ;;		_calc_model_data
 26187 ;; This function uses a reentrant model
 26188 ;;
 26189                           
 26190                           	psect	text102
 26191  01BBA0                     __ptext102:
 26192                           	opt callstack 0
 26193  01BBA0                     _start_bsoc:
 26194                           	opt callstack 14
 26195                           
 26196                           ;bsoc.c: 108:  PIE6bits.TMR3IE = 1;
 26197                           
 26198                           ; BSR set to: 57
 26199                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26200                           ;incstack = 0
 26201  01BBA0  0139               	movlb	57	; () banked
 26202  01BBA2  8D96               	bsf	150,6,b	;volatile
 26203                           
 26204                           ; BSR set to: 57
 26205  01BBA4  A4BE               	btfss	190,2,c	;volatile
 26206  01BBA6  D002               	goto	u9540
 26207  01BBA8  0E01               	movlw	1
 26208  01BBAA  D001               	goto	u9546
 26209  01BBAC                     u9540:
 26210  01BBAC  0E00               	movlw	0
 26211  01BBAE                     u9546:
 26212  01BBAE  0AFF               	xorlw	255
 26213  01BBB0  6E0C               	movwf	(btemp+11)^0,c
 26214  01BBB2  460C               	rlncf	(btemp+11)^0,f,c
 26215  01BBB4  460C               	rlncf	(btemp+11)^0,f,c
 26216  01BBB6  50BE               	movf	190,w,c	;volatile
 26217  01BBB8  180C               	xorwf	(btemp+11)^0,w,c
 26218  01BBBA  0BFB               	andlw	-5
 26219  01BBBC  180C               	xorwf	(btemp+11)^0,w,c
 26220  01BBBE  6EBE               	movwf	190,c	;volatile
 26221                           
 26222                           ; BSR set to: 57
 26223                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 26224  01BBC0  0012               	return		;funcret
 26225  01BBC2                     __end_of_start_bsoc:
 26226                           	opt callstack 0
 26227                           
 26228 ;; *************** function _lp_filter *****************
 26229 ;; Defined at:
 26230 ;;		line 29 in file "mbmc.c"
 26231 ;; Parameters:    Size  Location     Type
 26232 ;;  new             4  [STACK] const float 
 26233 ;;  bn              1  [STACK] const unsigned char 
 26234 ;;  slow            1  [STACK] const char 
 26235 ;; Auto vars:     Size  Location     Type
 26236 ;;  lp_speed        4  [STACK] float 
 26237 ;; Return value:  Size  Location     Type
 26238 ;;                  4  [STACK] float 
 26239 ;; Registers used:
 26240 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26241 ;; Tracked objects:
 26242 ;;		On entry : 0/1
 26243 ;;		On exit  : 0/0
 26244 ;;		Unchanged: 0/0
 26245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26250 ;;Total ram usage:        0 bytes
 26251 ;; Hardware stack levels used:    1
 26252 ;; Hardware stack levels required when called:   17
 26253 ;; This function calls:
 26254 ;;		___fladd
 26255 ;;		___flmul
 26256 ;;		___flsub
 26257 ;; This function is called by:
 26258 ;;		_main
 26259 ;;		_convert_adc_data
 26260 ;;		_calc_model_data
 26261 ;; This function uses a reentrant model
 26262 ;;
 26263                           
 26264                           	psect	text103
 26265  01850A                     __ptext103:
 26266                           	opt callstack 0
 26267  01850A                     _lp_filter:
 26268                           	opt callstack 0
 26269                           
 26270                           ; BSR set to: 57
 26271                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26272  01850A  52E6               	movf	postinc1,f,c
 26273  01850C  52E6               	movf	postinc1,f,c
 26274  01850E  52E6               	movf	postinc1,f,c
 26275  018510  52E6               	movf	postinc1,f,c
 26276                           
 26277                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 26278                           ;stkvar	_bn @ sp[(-4)+-5]
 26279                           
 26280                           ;incstack = 0
 26281  018512  0EF7               	movlw	-9
 26282  018514  006F FF8C  F001    	movff	plusw1,btemp
 26283  01851A  0E14               	movlw	20
 26284  01851C  6401               	cpfsgt	btemp^0,c
 26285  01851E  D011               	goto	l10283
 26286  018520                     u9450:
 26287                           
 26288                           ;mbmc.c: 35:   return new;
 26289                           ;stkvar	_new @ sp[(-4)+-4]
 26290  018520  0EF8               	movlw	-8
 26291  018522  006F FF8C  F001    	movff	plusw1,btemp
 26292  018528  0EF9               	movlw	-7
 26293  01852A  006F FF8C  F002    	movff	plusw1,btemp+1
 26294  018530  0EFA               	movlw	-6
 26295  018532  006F FF8C  F003    	movff	plusw1,btemp+2
 26296  018538  0EFB               	movlw	-5
 26297  01853A  006F FF8C  F004    	movff	plusw1,btemp+3
 26298  018540  D0BD               	goto	l1835
 26299  018542                     l10283:
 26300                           
 26301                           ;mbmc.c: 37:  if (slow == (-1)) {
 26302                           ;stkvar	_slow @ sp[(-4)+-6]
 26303  018542  0EF6               	movlw	-10
 26304  018544  28E3               	incf	plusw1,w,c
 26305  018546  A4D8               	btfss	status,2,c
 26306  018548  D012               	goto	l10291
 26307                           
 26308                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 26309                           ;stkvar	_bn @ sp[(-4)+-5]
 26310  01854A  0EF7               	movlw	-9
 26311  01854C  50E3               	movf	plusw1,w,c
 26312  01854E  0D04               	mullw	4
 26313  018550  0E00               	movlw	low lp_filter@smooth
 26314  018552  24F3               	addwf	243,w,c
 26315  018554  6ED9               	movwf	fsr2l,c
 26316  018556  0E02               	movlw	high lp_filter@smooth
 26317  018558  20F4               	addwfc	prodh,w,c
 26318  01855A  6EDA               	movwf	fsr2h,c
 26319  01855C  0E00               	movlw	0
 26320  01855E  6EDE               	movwf	postinc2,c
 26321  018560  0E00               	movlw	0
 26322  018562  6EDE               	movwf	postinc2,c
 26323  018564  0E00               	movlw	0
 26324  018566  6EDE               	movwf	postinc2,c
 26325  018568  0E00               	movlw	0
 26326  01856A  6EDD               	movwf	postdec2,c
 26327  01856C  D7D9               	goto	u9450
 26328  01856E                     l10291:
 26329                           
 26330                           ;mbmc.c: 42:  if (slow) {
 26331                           ;stkvar	_slow @ sp[(-4)+-6]
 26332  01856E  0EF6               	movlw	-10
 26333  018570  50E3               	movf	plusw1,w,c
 26334  018572  B4D8               	btfsc	status,2,c
 26335  018574  D006               	goto	l10295
 26336                           
 26337                           ;mbmc.c: 43:   lp_speed = 0.033;
 26338  018576  0E02               	movlw	2
 26339  018578  6E09               	movwf	(btemp+8)^0,c
 26340  01857A  0E2B               	movlw	43
 26341  01857C  6E0A               	movwf	(btemp+9)^0,c
 26342  01857E  0E07               	movlw	7
 26343  018580  D005               	goto	L31
 26344  018582                     l10295:
 26345                           
 26346                           ;mbmc.c: 45:   lp_speed = 0.066;
 26347  018582  0E02               	movlw	2
 26348  018584  6E09               	movwf	(btemp+8)^0,c
 26349  018586  0E2B               	movlw	43
 26350  018588  6E0A               	movwf	(btemp+9)^0,c
 26351  01858A  0E87               	movlw	135
 26352  01858C                     L31:
 26353  01858C  6E0B               	movwf	(btemp+10)^0,c
 26354  01858E  0E3D               	movlw	61
 26355  018590  6E0C               	movwf	(btemp+11)^0,c
 26356                           
 26357                           ;stkvar	_lp_speed @ sp[(-4)+0]
 26358  018592  0EFC               	movlw	-4
 26359  018594  0060  F027  FFE3   	movff	btemp+8,plusw1
 26360  01859A  0EFD               	movlw	-3
 26361  01859C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26362  0185A2  0EFE               	movlw	-2
 26363  0185A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26364  0185AA  0EFF               	movlw	-1
 26365  0185AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 26366                           
 26367                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 26368                           ;stkvar	_bn @ sp[(-4)+-5]
 26369  0185B2  0EF7               	movlw	-9
 26370  0185B4  50E3               	movf	plusw1,w,c
 26371  0185B6  0D04               	mullw	4
 26372  0185B8  0E00               	movlw	low lp_filter@smooth
 26373  0185BA  24F3               	addwf	243,w,c
 26374  0185BC  6ED9               	movwf	fsr2l,c
 26375  0185BE  0E02               	movlw	high lp_filter@smooth
 26376  0185C0  20F4               	addwfc	prodh,w,c
 26377  0185C2  6EDA               	movwf	fsr2h,c
 26378  0185C4  006F FF7B FFE6     	movff	postinc2,postinc1
 26379  0185CA  006F FF7B FFE6     	movff	postinc2,postinc1
 26380  0185D0  006F FF7B FFE6     	movff	postinc2,postinc1
 26381  0185D6  006F FF7B FFE6     	movff	postinc2,postinc1
 26382                           
 26383                           ;stkvar	_lp_speed @ sp[(-8)+0]
 26384  0185DC  0EF8               	movlw	-8
 26385  0185DE  006F FF8F FFE6     	movff	plusw1,postinc1
 26386  0185E4  006F FF8F FFE6     	movff	plusw1,postinc1
 26387  0185EA  006F FF8F FFE6     	movff	plusw1,postinc1
 26388  0185F0  006F FF8F FFE6     	movff	plusw1,postinc1
 26389                           
 26390                           ;stkvar	_bn @ sp[(-12)+-5]
 26391  0185F6  0EEF               	movlw	-17
 26392  0185F8  50E3               	movf	plusw1,w,c
 26393  0185FA  0D04               	mullw	4
 26394  0185FC  0E00               	movlw	low lp_filter@smooth
 26395  0185FE  24F3               	addwf	243,w,c
 26396  018600  6ED9               	movwf	fsr2l,c
 26397  018602  0E02               	movlw	high lp_filter@smooth
 26398  018604  20F4               	addwfc	prodh,w,c
 26399  018606  6EDA               	movwf	fsr2h,c
 26400  018608  006F FF7B FFE6     	movff	postinc2,postinc1
 26401  01860E  006F FF7B FFE6     	movff	postinc2,postinc1
 26402  018614  006F FF7B FFE6     	movff	postinc2,postinc1
 26403  01861A  006F FF7B FFE6     	movff	postinc2,postinc1
 26404                           
 26405                           ;stkvar	_new @ sp[(-16)+-4]
 26406  018620  0EEC               	movlw	-20
 26407  018622  006F FF8F FFE6     	movff	plusw1,postinc1
 26408  018628  006F FF8F FFE6     	movff	plusw1,postinc1
 26409  01862E  006F FF8F FFE6     	movff	plusw1,postinc1
 26410  018634  006F FF8F FFE6     	movff	plusw1,postinc1
 26411  01863A  EC7B  F0D9         	call	___flsub	;wreg free
 26412  01863E  0060  F007  FFE6   	movff	btemp,postinc1
 26413  018644  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26414  01864A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26415  018650  0060  F013  FFE6   	movff	btemp+3,postinc1
 26416  018656  EC9F  F099         	call	___flmul	;wreg free
 26417  01865A  0060  F007  FFE6   	movff	btemp,postinc1
 26418  018660  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26419  018666  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26420  01866C  0060  F013  FFE6   	movff	btemp+3,postinc1
 26421  018672  ECB4  F09D         	call	___fladd	;wreg free
 26422                           
 26423                           ;stkvar	_bn @ sp[(-4)+-5]
 26424  018676  0EF7               	movlw	-9
 26425  018678  50E3               	movf	plusw1,w,c
 26426  01867A  0D04               	mullw	4
 26427  01867C  0E00               	movlw	low lp_filter@smooth
 26428  01867E  24F3               	addwf	243,w,c
 26429  018680  6ED9               	movwf	fsr2l,c
 26430  018682  0E02               	movlw	high lp_filter@smooth
 26431  018684  20F4               	addwfc	prodh,w,c
 26432  018686  6EDA               	movwf	fsr2h,c
 26433  018688  0060  F007  FFDE   	movff	btemp,postinc2
 26434  01868E  0060  F00B  FFDE   	movff	btemp+1,postinc2
 26435  018694  0060  F00F  FFDE   	movff	btemp+2,postinc2
 26436  01869A  0060  F013  FFDD   	movff	btemp+3,postdec2
 26437  0186A0  52DD               	movf	postdec2,f,c
 26438  0186A2  52DD               	movf	postdec2,f,c
 26439  0186A4  006F FF78  F001    	movff	postinc2,btemp
 26440  0186AA  006F FF78  F002    	movff	postinc2,btemp+1
 26441  0186B0  006F FF78  F003    	movff	postinc2,btemp+2
 26442  0186B6  006F FF78  F004    	movff	postinc2,btemp+3
 26443  0186BC                     l1835:
 26444                           
 26445                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 26446  0186BC  0EF6               	movlw	246
 26447  0186BE  26E1               	addwf	fsr1l,f,c
 26448  0186C0  0EFF               	movlw	255
 26449  0186C2  22E2               	addwfc	fsr1h,f,c
 26450  0186C4  0012               	return		;funcret
 26451  0186C6                     __end_of_lp_filter:
 26452                           	opt callstack 0
 26453                           
 26454 ;; *************** function ___flsub *****************
 26455 ;; Defined at:
 26456 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26457 ;; Parameters:    Size  Location     Type
 26458 ;;  b               4  [STACK] float 
 26459 ;;  a               4  [STACK] float 
 26460 ;; Auto vars:     Size  Location     Type
 26461 ;;		None
 26462 ;; Return value:  Size  Location     Type
 26463 ;;                  4  [STACK] float 
 26464 ;; Registers used:
 26465 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26466 ;; Tracked objects:
 26467 ;;		On entry : 0/0
 26468 ;;		On exit  : 0/0
 26469 ;;		Unchanged: 0/0
 26470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26475 ;;Total ram usage:        0 bytes
 26476 ;; Hardware stack levels used:    1
 26477 ;; Hardware stack levels required when called:   16
 26478 ;; This function calls:
 26479 ;;		___fladd
 26480 ;; This function is called by:
 26481 ;;		_conv_raw_result
 26482 ;;		_lp_filter
 26483 ;;		_calc_model_data
 26484 ;;		_calc_ror_data
 26485 ;;		_esr_check
 26486 ;;		_efgtoa
 26487 ;; This function uses a reentrant model
 26488 ;;
 26489                           
 26490                           	psect	text104
 26491  01B2F6                     __ptext104:
 26492                           	opt callstack 0
 26493  01B2F6                     ___flsub:
 26494                           	opt callstack 0
 26495                           
 26496                           ;stkvar	_a @ sp[(0)+-8]
 26497                           
 26498                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26499                           ;incstack = 0
 26500 ;; hardware stack exceeded
 26501  01B2F6  0EFB               	movlw	-5
 26502  01B2F8  7EE3               	btg	plusw1,7,c
 26503                           
 26504                           ;stkvar	_a @ sp[(0)+-8]
 26505  01B2FA  0EF8               	movlw	-8
 26506  01B2FC  006F FF8F FFE6     	movff	plusw1,postinc1
 26507  01B302  006F FF8F FFE6     	movff	plusw1,postinc1
 26508  01B308  006F FF8F FFE6     	movff	plusw1,postinc1
 26509  01B30E  006F FF8F FFE6     	movff	plusw1,postinc1
 26510                           
 26511                           ;stkvar	_b @ sp[(-4)+-4]
 26512  01B314  0EF8               	movlw	-8
 26513  01B316  006F FF8F FFE6     	movff	plusw1,postinc1
 26514  01B31C  006F FF8F FFE6     	movff	plusw1,postinc1
 26515  01B322  006F FF8F FFE6     	movff	plusw1,postinc1
 26516  01B328  006F FF8F FFE6     	movff	plusw1,postinc1
 26517  01B32E  ECB4  F09D         	call	___fladd	;wreg free
 26518                           
 26519                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 26520  01B332  0EF8               	movlw	248
 26521  01B334  26E1               	addwf	fsr1l,f,c
 26522  01B336  0EFF               	movlw	255
 26523  01B338  22E2               	addwfc	fsr1h,f,c
 26524  01B33A  0012               	return		;funcret
 26525  01B33C                     __end_of___flsub:
 26526                           	opt callstack 0
 26527                           
 26528 ;; *************** function ___fladd *****************
 26529 ;; Defined at:
 26530 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26531 ;; Parameters:    Size  Location     Type
 26532 ;;  b               4  [STACK] float 
 26533 ;;  a               4  [STACK] float 
 26534 ;; Auto vars:     Size  Location     Type
 26535 ;;  grs             1  [STACK] unsigned char 
 26536 ;;  bexp            1  [STACK] unsigned char 
 26537 ;;  aexp            1  [STACK] unsigned char 
 26538 ;;  signs           1  [STACK] unsigned char 
 26539 ;; Return value:  Size  Location     Type
 26540 ;;                  4  [STACK] unsigned char 
 26541 ;; Registers used:
 26542 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26543 ;; Tracked objects:
 26544 ;;		On entry : 0/0
 26545 ;;		On exit  : 0/0
 26546 ;;		Unchanged: 0/0
 26547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26552 ;;Total ram usage:        0 bytes
 26553 ;; Hardware stack levels used:    1
 26554 ;; Hardware stack levels required when called:   15
 26555 ;; This function calls:
 26556 ;;		Nothing
 26557 ;; This function is called by:
 26558 ;;		_main
 26559 ;;		_lp_filter
 26560 ;;		_calc_model_data
 26561 ;;		_efgtoa
 26562 ;;		___asfladd
 26563 ;;		___flsub
 26564 ;; This function uses a reentrant model
 26565 ;;
 26566                           
 26567                           	psect	text105
 26568  013B68                     __ptext105:
 26569                           	opt callstack 0
 26570  013B68                     ___fladd:
 26571                           	opt callstack 0
 26572                           
 26573                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26574  013B68  52E6               	movf	postinc1,f,c
 26575  013B6A  52E6               	movf	postinc1,f,c
 26576  013B6C  52E6               	movf	postinc1,f,c
 26577  013B6E  52E6               	movf	postinc1,f,c
 26578                           
 26579                           ;stkvar	_b @ sp[(-4)+-4]
 26580                           
 26581                           ;incstack = 0
 26582 ;; hardware stack exceeded
 26583  013B70  0EFB               	movlw	251
 26584  013B72  24E1               	addwf	fsr1l,w,c
 26585  013B74  6ED9               	movwf	fsr2l,c
 26586  013B76  0EFF               	movlw	255
 26587  013B78  20E2               	addwfc	fsr1h,w,c
 26588  013B7A  6EDA               	movwf	fsr2h,c
 26589  013B7C  50DF               	movf	indf2,w,c
 26590  013B7E  6E0C               	movwf	(btemp+11)^0,c
 26591  013B80  0E80               	movlw	128
 26592  013B82  160C               	andwf	(btemp+11)^0,f,c
 26593                           
 26594                           ;stkvar	_signs @ sp[(-4)+3]
 26595  013B84  0EFF               	movlw	-1
 26596  013B86  0060  F033  FFE3   	movff	btemp+11,plusw1
 26597                           
 26598                           ;stkvar	_b @ sp[(-4)+-4]
 26599  013B8C  0EFB               	movlw	251
 26600  013B8E  24E1               	addwf	fsr1l,w,c
 26601  013B90  6ED9               	movwf	fsr2l,c
 26602  013B92  0EFF               	movlw	255
 26603  013B94  20E2               	addwfc	fsr1h,w,c
 26604  013B96  6EDA               	movwf	fsr2h,c
 26605  013B98  50DF               	movf	indf2,w,c
 26606  013B9A  6E0C               	movwf	(btemp+11)^0,c
 26607  013B9C  90D8               	bcf	status,0,c
 26608  013B9E  340C               	rlcf	(btemp+11)^0,w,c
 26609  013BA0  6E0B               	movwf	(btemp+10)^0,c
 26610                           
 26611                           ;stkvar	_bexp @ sp[(-4)+1]
 26612  013BA2  0EFD               	movlw	-3
 26613  013BA4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26614                           
 26615                           ;stkvar	_b @ sp[(-4)+-4]
 26616  013BAA  0EFA               	movlw	250
 26617  013BAC  24E1               	addwf	fsr1l,w,c
 26618  013BAE  6ED9               	movwf	fsr2l,c
 26619  013BB0  0EFF               	movlw	255
 26620  013BB2  20E2               	addwfc	fsr1h,w,c
 26621  013BB4  6EDA               	movwf	fsr2h,c
 26622  013BB6  AEDF               	btfss	indf2,7,c
 26623  013BB8  D002               	goto	l7625
 26624                           
 26625                           ;stkvar	_bexp @ sp[(-4)+1]
 26626  013BBA  0EFD               	movlw	-3
 26627  013BBC  80E3               	bsf	plusw1,0,c
 26628  013BBE                     l7625:
 26629                           
 26630                           ;stkvar	_bexp @ sp[(-4)+1]
 26631  013BBE  0EFD               	movlw	-3
 26632  013BC0  50E3               	movf	plusw1,w,c
 26633  013BC2  B4D8               	btfsc	status,2,c
 26634  013BC4  D027               	goto	l7635
 26635                           
 26636                           ;stkvar	_bexp @ sp[(-4)+1]
 26637  013BC6  0EFD               	movlw	-3
 26638  013BC8  28E3               	incf	plusw1,w,c
 26639  013BCA  A4D8               	btfss	status,2,c
 26640  013BCC  D018               	goto	l7631
 26641  013BCE  0E00               	movlw	0
 26642  013BD0  6E09               	movwf	(btemp+8)^0,c
 26643  013BD2  0E00               	movlw	0
 26644  013BD4  6E0A               	movwf	(btemp+9)^0,c
 26645  013BD6  0E00               	movlw	0
 26646  013BD8  6E0B               	movwf	(btemp+10)^0,c
 26647  013BDA  0E00               	movlw	0
 26648  013BDC  6E0C               	movwf	(btemp+11)^0,c
 26649                           
 26650                           ;stkvar	_b @ sp[(-4)+-4]
 26651  013BDE  0EF8               	movlw	-8
 26652  013BE0  0060  F027  FFE3   	movff	btemp+8,plusw1
 26653  013BE6  0EF9               	movlw	-7
 26654  013BE8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26655  013BEE  0EFA               	movlw	-6
 26656  013BF0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26657  013BF6  0EFB               	movlw	-5
 26658  013BF8  0060  F033  FFE3   	movff	btemp+11,plusw1
 26659  013BFE                     l7631:
 26660                           
 26661                           ;stkvar	_b @ sp[(-4)+-4]
 26662  013BFE  0EFA               	movlw	-6
 26663  013C00  8EE3               	bsf	plusw1,7,c
 26664                           
 26665                           ;stkvar	_b @ sp[(-4)+-4]
 26666  013C02  0EFB               	movlw	251
 26667  013C04  24E1               	addwf	fsr1l,w,c
 26668  013C06  6ED9               	movwf	fsr2l,c
 26669  013C08  0EFF               	movlw	255
 26670  013C0A  20E2               	addwfc	fsr1h,w,c
 26671  013C0C  6EDA               	movwf	fsr2h,c
 26672  013C0E  0E00               	movlw	0
 26673  013C10  6EDF               	movwf	indf2,c
 26674  013C12  D018               	goto	l7637
 26675  013C14                     l7635:
 26676  013C14  0E00               	movlw	0
 26677  013C16  6E09               	movwf	(btemp+8)^0,c
 26678  013C18  0E00               	movlw	0
 26679  013C1A  6E0A               	movwf	(btemp+9)^0,c
 26680  013C1C  0E00               	movlw	0
 26681  013C1E  6E0B               	movwf	(btemp+10)^0,c
 26682  013C20  0E00               	movlw	0
 26683  013C22  6E0C               	movwf	(btemp+11)^0,c
 26684                           
 26685                           ;stkvar	_b @ sp[(-4)+-4]
 26686  013C24  0EF8               	movlw	-8
 26687  013C26  0060  F027  FFE3   	movff	btemp+8,plusw1
 26688  013C2C  0EF9               	movlw	-7
 26689  013C2E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26690  013C34  0EFA               	movlw	-6
 26691  013C36  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26692  013C3C  0EFB               	movlw	-5
 26693  013C3E  0060  F033  FFE3   	movff	btemp+11,plusw1
 26694  013C44                     l7637:
 26695                           
 26696                           ;stkvar	_a @ sp[(-4)+-8]
 26697  013C44  0EF7               	movlw	247
 26698  013C46  24E1               	addwf	fsr1l,w,c
 26699  013C48  6ED9               	movwf	fsr2l,c
 26700  013C4A  0EFF               	movlw	255
 26701  013C4C  20E2               	addwfc	fsr1h,w,c
 26702  013C4E  6EDA               	movwf	fsr2h,c
 26703  013C50  50DF               	movf	indf2,w,c
 26704  013C52  6E0C               	movwf	(btemp+11)^0,c
 26705  013C54  0E80               	movlw	128
 26706  013C56  160C               	andwf	(btemp+11)^0,f,c
 26707                           
 26708                           ;stkvar	_aexp @ sp[(-4)+2]
 26709  013C58  0EFE               	movlw	-2
 26710  013C5A  0060  F033  FFE3   	movff	btemp+11,plusw1
 26711                           
 26712                           ;stkvar	_signs @ sp[(-4)+3]
 26713                           ;stkvar	_aexp @ sp[(-4)+2]
 26714  013C60  50E1               	movf	fsr1l,w,c
 26715  013C62  0FFE               	addlw	-2
 26716  013C64  6ED9               	movwf	fsr2l,c
 26717  013C66  50E2               	movf	fsr1h,w,c
 26718  013C68  6EDA               	movwf	fsr2h,c
 26719  013C6A  0EFF               	movlw	255
 26720  013C6C  22DA               	addwfc	fsr2h,f,c
 26721  013C6E  0EFF               	movlw	-1
 26722  013C70  50E3               	movf	plusw1,w,c
 26723  013C72  18DE               	xorwf	postinc2,w,c
 26724  013C74  B4D8               	btfsc	status,2,c
 26725  013C76  D002               	goto	l7643
 26726                           
 26727                           ;stkvar	_signs @ sp[(-4)+3]
 26728  013C78  0EFF               	movlw	-1
 26729  013C7A  8CE3               	bsf	plusw1,6,c
 26730  013C7C                     l7643:
 26731                           
 26732                           ;stkvar	_a @ sp[(-4)+-8]
 26733  013C7C  0EF7               	movlw	247
 26734  013C7E  24E1               	addwf	fsr1l,w,c
 26735  013C80  6ED9               	movwf	fsr2l,c
 26736  013C82  0EFF               	movlw	255
 26737  013C84  20E2               	addwfc	fsr1h,w,c
 26738  013C86  6EDA               	movwf	fsr2h,c
 26739  013C88  50DF               	movf	indf2,w,c
 26740  013C8A  6E0C               	movwf	(btemp+11)^0,c
 26741  013C8C  90D8               	bcf	status,0,c
 26742  013C8E  340C               	rlcf	(btemp+11)^0,w,c
 26743  013C90  6E0B               	movwf	(btemp+10)^0,c
 26744                           
 26745                           ;stkvar	_aexp @ sp[(-4)+2]
 26746  013C92  0EFE               	movlw	-2
 26747  013C94  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26748                           
 26749                           ;stkvar	_a @ sp[(-4)+-8]
 26750  013C9A  0EF6               	movlw	246
 26751  013C9C  24E1               	addwf	fsr1l,w,c
 26752  013C9E  6ED9               	movwf	fsr2l,c
 26753  013CA0  0EFF               	movlw	255
 26754  013CA2  20E2               	addwfc	fsr1h,w,c
 26755  013CA4  6EDA               	movwf	fsr2h,c
 26756  013CA6  AEDF               	btfss	indf2,7,c
 26757  013CA8  D002               	goto	l7649
 26758                           
 26759                           ;stkvar	_aexp @ sp[(-4)+2]
 26760  013CAA  0EFE               	movlw	-2
 26761  013CAC  80E3               	bsf	plusw1,0,c
 26762  013CAE                     l7649:
 26763                           
 26764                           ;stkvar	_aexp @ sp[(-4)+2]
 26765  013CAE  0EFE               	movlw	-2
 26766  013CB0  50E3               	movf	plusw1,w,c
 26767  013CB2  B4D8               	btfsc	status,2,c
 26768  013CB4  D027               	goto	l7659
 26769                           
 26770                           ;stkvar	_aexp @ sp[(-4)+2]
 26771  013CB6  0EFE               	movlw	-2
 26772  013CB8  28E3               	incf	plusw1,w,c
 26773  013CBA  A4D8               	btfss	status,2,c
 26774  013CBC  D018               	goto	l7655
 26775  013CBE  0E00               	movlw	0
 26776  013CC0  6E09               	movwf	(btemp+8)^0,c
 26777  013CC2  0E00               	movlw	0
 26778  013CC4  6E0A               	movwf	(btemp+9)^0,c
 26779  013CC6  0E00               	movlw	0
 26780  013CC8  6E0B               	movwf	(btemp+10)^0,c
 26781  013CCA  0E00               	movlw	0
 26782  013CCC  6E0C               	movwf	(btemp+11)^0,c
 26783                           
 26784                           ;stkvar	_a @ sp[(-4)+-8]
 26785  013CCE  0EF4               	movlw	-12
 26786  013CD0  0060  F027  FFE3   	movff	btemp+8,plusw1
 26787  013CD6  0EF5               	movlw	-11
 26788  013CD8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26789  013CDE  0EF6               	movlw	-10
 26790  013CE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26791  013CE6  0EF7               	movlw	-9
 26792  013CE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 26793  013CEE                     l7655:
 26794                           
 26795                           ;stkvar	_a @ sp[(-4)+-8]
 26796  013CEE  0EF6               	movlw	-10
 26797  013CF0  8EE3               	bsf	plusw1,7,c
 26798                           
 26799                           ;stkvar	_a @ sp[(-4)+-8]
 26800  013CF2  0EF7               	movlw	247
 26801  013CF4  24E1               	addwf	fsr1l,w,c
 26802  013CF6  6ED9               	movwf	fsr2l,c
 26803  013CF8  0EFF               	movlw	255
 26804  013CFA  20E2               	addwfc	fsr1h,w,c
 26805  013CFC  6EDA               	movwf	fsr2h,c
 26806  013CFE  0E00               	movlw	0
 26807  013D00  6EDF               	movwf	indf2,c
 26808  013D02  D018               	goto	l7661
 26809  013D04                     l7659:
 26810  013D04  0E00               	movlw	0
 26811  013D06  6E09               	movwf	(btemp+8)^0,c
 26812  013D08  0E00               	movlw	0
 26813  013D0A  6E0A               	movwf	(btemp+9)^0,c
 26814  013D0C  0E00               	movlw	0
 26815  013D0E  6E0B               	movwf	(btemp+10)^0,c
 26816  013D10  0E00               	movlw	0
 26817  013D12  6E0C               	movwf	(btemp+11)^0,c
 26818                           
 26819                           ;stkvar	_a @ sp[(-4)+-8]
 26820  013D14  0EF4               	movlw	-12
 26821  013D16  0060  F027  FFE3   	movff	btemp+8,plusw1
 26822  013D1C  0EF5               	movlw	-11
 26823  013D1E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26824  013D24  0EF6               	movlw	-10
 26825  013D26  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26826  013D2C  0EF7               	movlw	-9
 26827  013D2E  0060  F033  FFE3   	movff	btemp+11,plusw1
 26828  013D34                     l7661:
 26829                           
 26830                           ;stkvar	_bexp @ sp[(-4)+1]
 26831                           ;stkvar	_aexp @ sp[(-4)+2]
 26832  013D34  50E1               	movf	fsr1l,w,c
 26833  013D36  0FFE               	addlw	-2
 26834  013D38  6ED9               	movwf	fsr2l,c
 26835  013D3A  50E2               	movf	fsr1h,w,c
 26836  013D3C  6EDA               	movwf	fsr2h,c
 26837  013D3E  0EFF               	movlw	255
 26838  013D40  22DA               	addwfc	fsr2h,f,c
 26839  013D42  0EFD               	movlw	-3
 26840  013D44  50E3               	movf	plusw1,w,c
 26841  013D46  5CDE               	subwf	postinc2,w,c
 26842  013D48  B0D8               	btfsc	status,0,c
 26843  013D4A  D0A4               	goto	l7697
 26844                           
 26845                           ;stkvar	_signs @ sp[(-4)+3]
 26846  013D4C  0EFF               	movlw	-1
 26847  013D4E  ACE3               	btfss	plusw1,6,c
 26848  013D50  D002               	goto	l7667
 26849                           
 26850                           ;stkvar	_signs @ sp[(-4)+3]
 26851  013D52  0EFF               	movlw	-1
 26852  013D54  7EE3               	btg	plusw1,7,c
 26853  013D56                     l7667:
 26854                           
 26855                           ;stkvar	_bexp @ sp[(-4)+1]
 26856                           ;stkvar	_grs @ sp[(-4)+0]
 26857  013D56  0EFD               	movlw	-3
 26858  013D58  006F FF8C  F001    	movff	plusw1,btemp
 26859  013D5E  0EFC               	movlw	-4
 26860  013D60  0060  F007  FFE3   	movff	btemp,plusw1
 26861                           
 26862                           ;stkvar	_aexp @ sp[(-4)+2]
 26863                           ;stkvar	_bexp @ sp[(-4)+1]
 26864  013D66  0EFE               	movlw	-2
 26865  013D68  006F FF8C  F001    	movff	plusw1,btemp
 26866  013D6E  0EFD               	movlw	-3
 26867  013D70  0060  F007  FFE3   	movff	btemp,plusw1
 26868                           
 26869                           ;stkvar	_grs @ sp[(-4)+0]
 26870                           ;stkvar	_aexp @ sp[(-4)+2]
 26871  013D76  0EFC               	movlw	-4
 26872  013D78  006F FF8C  F001    	movff	plusw1,btemp
 26873  013D7E  0EFE               	movlw	-2
 26874  013D80  0060  F007  FFE3   	movff	btemp,plusw1
 26875                           
 26876                           ;stkvar	_b @ sp[(-4)+-4]
 26877                           ;stkvar	_grs @ sp[(-4)+0]
 26878  013D86  0EF8               	movlw	-8
 26879  013D88  006F FF8C  F001    	movff	plusw1,btemp
 26880  013D8E  0EFC               	movlw	-4
 26881  013D90  0060  F007  FFE3   	movff	btemp,plusw1
 26882                           
 26883                           ;stkvar	_a @ sp[(-4)+-8]
 26884                           ;stkvar	_b @ sp[(-4)+-4]
 26885  013D96  0EF4               	movlw	-12
 26886  013D98  006F FF8C  F001    	movff	plusw1,btemp
 26887  013D9E  0EF8               	movlw	-8
 26888  013DA0  0060  F007  FFE3   	movff	btemp,plusw1
 26889                           
 26890                           ;stkvar	_grs @ sp[(-4)+0]
 26891                           ;stkvar	_a @ sp[(-4)+-8]
 26892  013DA6  0EFC               	movlw	-4
 26893  013DA8  006F FF8C  F001    	movff	plusw1,btemp
 26894  013DAE  0EF4               	movlw	-12
 26895  013DB0  0060  F007  FFE3   	movff	btemp,plusw1
 26896                           
 26897                           ;stkvar	_b @ sp[(-4)+-4]
 26898  013DB6  0EF9               	movlw	249
 26899  013DB8  24E1               	addwf	fsr1l,w,c
 26900  013DBA  6ED9               	movwf	fsr2l,c
 26901  013DBC  0EFF               	movlw	255
 26902  013DBE  20E2               	addwfc	fsr1h,w,c
 26903  013DC0  6EDA               	movwf	fsr2h,c
 26904  013DC2  50DF               	movf	indf2,w,c
 26905  013DC4  6E0C               	movwf	(btemp+11)^0,c
 26906                           
 26907                           ;stkvar	_grs @ sp[(-4)+0]
 26908  013DC6  0EFC               	movlw	-4
 26909  013DC8  0060  F033  FFE3   	movff	btemp+11,plusw1
 26910                           
 26911                           ;stkvar	_a @ sp[(-4)+-8]
 26912  013DCE  0EF5               	movlw	245
 26913  013DD0  24E1               	addwf	fsr1l,w,c
 26914  013DD2  6ED9               	movwf	fsr2l,c
 26915  013DD4  0EFF               	movlw	255
 26916  013DD6  20E2               	addwfc	fsr1h,w,c
 26917  013DD8  6EDA               	movwf	fsr2h,c
 26918                           
 26919                           ;stkvar	_b @ sp[(-4)+-4]
 26920  013DDA  0EF9               	movlw	249
 26921  013DDC  24E1               	addwf	fsr1l,w,c
 26922  013DDE  6EE9               	movwf	fsr0l,c
 26923  013DE0  0EFF               	movlw	255
 26924  013DE2  20E2               	addwfc	fsr1h,w,c
 26925  013DE4  6EEA               	movwf	fsr0h,c
 26926  013DE6  006F FF7F FFEF     	movff	indf2,indf0
 26927                           
 26928                           ;stkvar	_grs @ sp[(-4)+0]
 26929                           ;stkvar	_a @ sp[(-4)+-8]
 26930  013DEC  0EF5               	movlw	245
 26931  013DEE  24E1               	addwf	fsr1l,w,c
 26932  013DF0  6ED9               	movwf	fsr2l,c
 26933  013DF2  0EFF               	movlw	255
 26934  013DF4  20E2               	addwfc	fsr1h,w,c
 26935  013DF6  6EDA               	movwf	fsr2h,c
 26936  013DF8  0EFC               	movlw	-4
 26937  013DFA  006F FF8F FFDF     	movff	plusw1,indf2
 26938                           
 26939                           ;stkvar	_b @ sp[(-4)+-4]
 26940  013E00  0EFA               	movlw	250
 26941  013E02  24E1               	addwf	fsr1l,w,c
 26942  013E04  6ED9               	movwf	fsr2l,c
 26943  013E06  0EFF               	movlw	255
 26944  013E08  20E2               	addwfc	fsr1h,w,c
 26945  013E0A  6EDA               	movwf	fsr2h,c
 26946  013E0C  50DF               	movf	indf2,w,c
 26947  013E0E  6E0C               	movwf	(btemp+11)^0,c
 26948                           
 26949                           ;stkvar	_grs @ sp[(-4)+0]
 26950  013E10  0EFC               	movlw	-4
 26951  013E12  0060  F033  FFE3   	movff	btemp+11,plusw1
 26952                           
 26953                           ;stkvar	_a @ sp[(-4)+-8]
 26954  013E18  0EF6               	movlw	246
 26955  013E1A  24E1               	addwf	fsr1l,w,c
 26956  013E1C  6ED9               	movwf	fsr2l,c
 26957  013E1E  0EFF               	movlw	255
 26958  013E20  20E2               	addwfc	fsr1h,w,c
 26959  013E22  6EDA               	movwf	fsr2h,c
 26960                           
 26961                           ;stkvar	_b @ sp[(-4)+-4]
 26962  013E24  0EFA               	movlw	250
 26963  013E26  24E1               	addwf	fsr1l,w,c
 26964  013E28  6EE9               	movwf	fsr0l,c
 26965  013E2A  0EFF               	movlw	255
 26966  013E2C  20E2               	addwfc	fsr1h,w,c
 26967  013E2E  6EEA               	movwf	fsr0h,c
 26968  013E30  006F FF7F FFEF     	movff	indf2,indf0
 26969                           
 26970                           ;stkvar	_grs @ sp[(-4)+0]
 26971                           ;stkvar	_a @ sp[(-4)+-8]
 26972  013E36  0EF6               	movlw	246
 26973  013E38  24E1               	addwf	fsr1l,w,c
 26974  013E3A  6ED9               	movwf	fsr2l,c
 26975  013E3C  0EFF               	movlw	255
 26976  013E3E  20E2               	addwfc	fsr1h,w,c
 26977  013E40  6EDA               	movwf	fsr2h,c
 26978  013E42  0EFC               	movlw	-4
 26979  013E44  006F FF8F FFDF     	movff	plusw1,indf2
 26980                           
 26981                           ;stkvar	_b @ sp[(-4)+-4]
 26982  013E4A  0EFB               	movlw	251
 26983  013E4C  24E1               	addwf	fsr1l,w,c
 26984  013E4E  6ED9               	movwf	fsr2l,c
 26985  013E50  0EFF               	movlw	255
 26986  013E52  20E2               	addwfc	fsr1h,w,c
 26987  013E54  6EDA               	movwf	fsr2h,c
 26988  013E56  50DF               	movf	indf2,w,c
 26989  013E58  6E0C               	movwf	(btemp+11)^0,c
 26990                           
 26991                           ;stkvar	_grs @ sp[(-4)+0]
 26992  013E5A  0EFC               	movlw	-4
 26993  013E5C  0060  F033  FFE3   	movff	btemp+11,plusw1
 26994                           
 26995                           ;stkvar	_a @ sp[(-4)+-8]
 26996  013E62  0EF7               	movlw	247
 26997  013E64  24E1               	addwf	fsr1l,w,c
 26998  013E66  6ED9               	movwf	fsr2l,c
 26999  013E68  0EFF               	movlw	255
 27000  013E6A  20E2               	addwfc	fsr1h,w,c
 27001  013E6C  6EDA               	movwf	fsr2h,c
 27002                           
 27003                           ;stkvar	_b @ sp[(-4)+-4]
 27004  013E6E  0EFB               	movlw	251
 27005  013E70  24E1               	addwf	fsr1l,w,c
 27006  013E72  6EE9               	movwf	fsr0l,c
 27007  013E74  0EFF               	movlw	255
 27008  013E76  20E2               	addwfc	fsr1h,w,c
 27009  013E78  6EEA               	movwf	fsr0h,c
 27010  013E7A  006F FF7F FFEF     	movff	indf2,indf0
 27011                           
 27012                           ;stkvar	_grs @ sp[(-4)+0]
 27013                           ;stkvar	_a @ sp[(-4)+-8]
 27014  013E80  0EF7               	movlw	247
 27015  013E82  24E1               	addwf	fsr1l,w,c
 27016  013E84  6ED9               	movwf	fsr2l,c
 27017  013E86  0EFF               	movlw	255
 27018  013E88  20E2               	addwfc	fsr1h,w,c
 27019  013E8A  6EDA               	movwf	fsr2h,c
 27020  013E8C  0EFC               	movlw	-4
 27021  013E8E  006F FF8F FFDF     	movff	plusw1,indf2
 27022  013E94                     l7697:
 27023                           
 27024                           ;stkvar	_grs @ sp[(-4)+0]
 27025  013E94  0EFC               	movlw	-4
 27026  013E96  6AE3               	clrf	plusw1,c
 27027                           
 27028                           ;stkvar	_aexp @ sp[(-4)+2]
 27029  013E98  0EFE               	movlw	-2
 27030  013E9A  50E3               	movf	plusw1,w,c
 27031  013E9C  6E0B               	movwf	(btemp+10)^0,c
 27032  013E9E  6A0C               	clrf	(btemp+11)^0,c
 27033                           
 27034                           ;stkvar	_bexp @ sp[(-4)+1]
 27035  013EA0  0EFD               	movlw	-3
 27036  013EA2  50E3               	movf	plusw1,w,c
 27037  013EA4  5E0B               	subwf	(btemp+10)^0,f,c
 27038  013EA6  0E00               	movlw	0
 27039  013EA8  5A0C               	subwfb	(btemp+11)^0,f,c
 27040  013EAA  BE0C               	btfsc	(btemp+11)^0,7,c
 27041  013EAC  D062               	goto	l7721
 27042  013EAE  500C               	movf	(btemp+11)^0,w,c
 27043  013EB0  E104               	bnz	u5490
 27044  013EB2  0E1A               	movlw	26
 27045  013EB4  5C0B               	subwf	(btemp+10)^0,w,c
 27046  013EB6  A0D8               	btfss	status,0,c
 27047  013EB8  D05C               	goto	l7721
 27048  013EBA                     u5490:
 27049                           
 27050                           ;stkvar	_b @ sp[(-4)+-4]
 27051  013EBA  0EF8               	movlw	-8
 27052  013EBC  50E3               	movf	plusw1,w,c
 27053  013EBE  E10A               	bnz	u5501
 27054  013EC0  0EF9               	movlw	-7
 27055  013EC2  50E3               	movf	plusw1,w,c
 27056  013EC4  E107               	bnz	u5501
 27057  013EC6  0EFA               	movlw	-6
 27058  013EC8  50E3               	movf	plusw1,w,c
 27059  013ECA  E104               	bnz	u5501
 27060  013ECC  0EFB               	movlw	-5
 27061  013ECE  50E3               	movf	plusw1,w,c
 27062  013ED0  B4D8               	btfsc	status,2,c
 27063  013ED2  D003               	goto	u5500
 27064  013ED4                     u5501:
 27065  013ED4  6A0C               	clrf	(btemp+11)^0,c
 27066  013ED6  2A0C               	incf	(btemp+11)^0,f,c
 27067  013ED8  D001               	goto	u5518
 27068  013EDA                     u5500:
 27069  013EDA  6A0C               	clrf	(btemp+11)^0,c
 27070  013EDC                     u5518:
 27071                           
 27072                           ;stkvar	_grs @ sp[(-4)+0]
 27073  013EDC  0EFC               	movlw	-4
 27074  013EDE  0060  F033  FFE3   	movff	btemp+11,plusw1
 27075                           
 27076                           ;stkvar	_b @ sp[(-4)+-4]
 27077  013EE4  0EF8               	movlw	-8
 27078  013EE6  6AE3               	clrf	plusw1,c
 27079  013EE8  0EF9               	movlw	-7
 27080  013EEA  6AE3               	clrf	plusw1,c
 27081  013EEC  0EFA               	movlw	-6
 27082  013EEE  6AE3               	clrf	plusw1,c
 27083  013EF0  0EFB               	movlw	-5
 27084  013EF2  6AE3               	clrf	plusw1,c
 27085                           
 27086                           ;stkvar	_aexp @ sp[(-4)+2]
 27087                           ;stkvar	_bexp @ sp[(-4)+1]
 27088  013EF4  0EFE               	movlw	-2
 27089  013EF6  006F FF8C  F001    	movff	plusw1,btemp
 27090  013EFC  0EFD               	movlw	-3
 27091  013EFE  0060  F007  FFE3   	movff	btemp,plusw1
 27092  013F04  D042               	goto	u5550
 27093  013F06                     l7707:
 27094                           
 27095                           ;stkvar	_grs @ sp[(-4)+0]
 27096  013F06  0EFC               	movlw	-4
 27097  013F08  A0E3               	btfss	plusw1,0,c
 27098  013F0A  D00D               	goto	l7711
 27099                           
 27100                           ;stkvar	_grs @ sp[(-4)+0]
 27101  013F0C  0EFC               	movlw	-4
 27102  013F0E  006F FF8C  F00C    	movff	plusw1,btemp+11
 27103  013F14  90D8               	bcf	status,0,c
 27104  013F16  320C               	rrcf	(btemp+11)^0,f,c
 27105  013F18  0E01               	movlw	1
 27106  013F1A  120C               	iorwf	(btemp+11)^0,f,c
 27107                           
 27108                           ;stkvar	_grs @ sp[(-4)+0]
 27109  013F1C  0EFC               	movlw	-4
 27110  013F1E  0060  F033  FFE3   	movff	btemp+11,plusw1
 27111  013F24  D009               	goto	l7713
 27112  013F26                     l7711:
 27113                           
 27114                           ;stkvar	_grs @ sp[(-4)+0]
 27115  013F26  50E1               	movf	fsr1l,w,c
 27116  013F28  0FFC               	addlw	-4
 27117  013F2A  6ED9               	movwf	fsr2l,c
 27118  013F2C  50E2               	movf	fsr1h,w,c
 27119  013F2E  6EDA               	movwf	fsr2h,c
 27120  013F30  0EFF               	movlw	255
 27121  013F32  22DA               	addwfc	fsr2h,f,c
 27122  013F34  90D8               	bcf	status,0,c
 27123  013F36  32DF               	rrcf	indf2,f,c
 27124  013F38                     l7713:
 27125                           
 27126                           ;stkvar	_b @ sp[(-4)+-4]
 27127  013F38  0EF8               	movlw	-8
 27128  013F3A  A0E3               	btfss	plusw1,0,c
 27129  013F3C  D002               	goto	l7717
 27130                           
 27131                           ;stkvar	_grs @ sp[(-4)+0]
 27132  013F3E  0EFC               	movlw	-4
 27133  013F40  8EE3               	bsf	plusw1,7,c
 27134  013F42                     l7717:
 27135  013F42  0E01               	movlw	1
 27136  013F44  6E0C               	movwf	(btemp+11)^0,c
 27137                           
 27138                           ;stkvar	_b @ sp[(-4)+-4]
 27139  013F46  50E1               	movf	fsr1l,w,c
 27140  013F48  0FF8               	addlw	-8
 27141  013F4A  6ED9               	movwf	fsr2l,c
 27142  013F4C  50E2               	movf	fsr1h,w,c
 27143  013F4E  6EDA               	movwf	fsr2h,c
 27144  013F50  0EFF               	movlw	255
 27145  013F52  22DA               	addwfc	fsr2h,f,c
 27146  013F54  280C               	incf	(btemp+11)^0,w,c
 27147  013F56  52DE               	movf	postinc2,f,c
 27148  013F58  D008               	goto	u5540
 27149  013F5A                     u5545:
 27150  013F5A  52DE               	movf	postinc2,f,c
 27151  013F5C  90D8               	bcf	status,0,c
 27152  013F5E  BEDC               	btfsc	preinc2,7,c
 27153  013F60  80D8               	bsf	status,0,c
 27154  013F62  32DD               	rrcf	postdec2,f,c
 27155  013F64  32DD               	rrcf	postdec2,f,c
 27156  013F66  32DD               	rrcf	postdec2,f,c
 27157  013F68  32DE               	rrcf	postinc2,f,c
 27158  013F6A                     u5540:
 27159  013F6A  2EE8               	decfsz	wreg,f,c
 27160  013F6C  D7F6               	goto	u5545
 27161                           
 27162                           ;stkvar	_bexp @ sp[(-4)+1]
 27163  013F6E  0EFD               	movlw	-3
 27164  013F70  2AE3               	incf	plusw1,f,c
 27165  013F72                     l7721:
 27166                           
 27167                           ;stkvar	_aexp @ sp[(-4)+2]
 27168                           ;stkvar	_bexp @ sp[(-4)+1]
 27169  013F72  50E1               	movf	fsr1l,w,c
 27170  013F74  0FFD               	addlw	-3
 27171  013F76  6ED9               	movwf	fsr2l,c
 27172  013F78  50E2               	movf	fsr1h,w,c
 27173  013F7A  6EDA               	movwf	fsr2h,c
 27174  013F7C  0EFF               	movlw	255
 27175  013F7E  22DA               	addwfc	fsr2h,f,c
 27176  013F80  0EFE               	movlw	-2
 27177  013F82  50E3               	movf	plusw1,w,c
 27178  013F84  5CDE               	subwf	postinc2,w,c
 27179  013F86  A0D8               	btfss	status,0,c
 27180  013F88  D7BE               	goto	l7707
 27181  013F8A                     u5550:
 27182                           
 27183                           ;stkvar	_signs @ sp[(-4)+3]
 27184  013F8A  0EFF               	movlw	-1
 27185  013F8C  BCE3               	btfsc	plusw1,6,c
 27186  013F8E  D066               	goto	l7749
 27187                           
 27188                           ;stkvar	_bexp @ sp[(-4)+1]
 27189  013F90  0EFD               	movlw	-3
 27190  013F92  50E3               	movf	plusw1,w,c
 27191  013F94  B4D8               	btfsc	status,2,c
 27192  013F96  D0F2               	goto	u5650
 27193                           
 27194                           ;stkvar	_a @ sp[(-4)+-8]
 27195                           ;stkvar	_b @ sp[(-4)+-4]
 27196  013F98  0EF8               	movlw	-8
 27197  013F9A  50E3               	movf	plusw1,w,c
 27198  013F9C  6E01               	movwf	btemp^0,c
 27199  013F9E  0EF4               	movlw	-12
 27200  013FA0  50E3               	movf	plusw1,w,c
 27201  013FA2  2601               	addwf	btemp^0,f,c
 27202  013FA4  0EF8               	movlw	-8
 27203  013FA6  0060  F007  FFE3   	movff	btemp,plusw1
 27204  013FAC  0EF9               	movlw	-7
 27205  013FAE  50E3               	movf	plusw1,w,c
 27206  013FB0  6E01               	movwf	btemp^0,c
 27207  013FB2  0EF5               	movlw	-11
 27208  013FB4  50E3               	movf	plusw1,w,c
 27209  013FB6  2201               	addwfc	btemp^0,f,c
 27210  013FB8  0EF9               	movlw	-7
 27211  013FBA  0060  F007  FFE3   	movff	btemp,plusw1
 27212  013FC0  0EFA               	movlw	-6
 27213  013FC2  50E3               	movf	plusw1,w,c
 27214  013FC4  6E01               	movwf	btemp^0,c
 27215  013FC6  0EF6               	movlw	-10
 27216  013FC8  50E3               	movf	plusw1,w,c
 27217  013FCA  2201               	addwfc	btemp^0,f,c
 27218  013FCC  0EFA               	movlw	-6
 27219  013FCE  0060  F007  FFE3   	movff	btemp,plusw1
 27220  013FD4  0EFB               	movlw	-5
 27221  013FD6  50E3               	movf	plusw1,w,c
 27222  013FD8  6E01               	movwf	btemp^0,c
 27223  013FDA  0EF7               	movlw	-9
 27224  013FDC  50E3               	movf	plusw1,w,c
 27225  013FDE  2201               	addwfc	btemp^0,f,c
 27226  013FE0  0EFB               	movlw	-5
 27227  013FE2  0060  F007  FFE3   	movff	btemp,plusw1
 27228                           
 27229                           ;stkvar	_b @ sp[(-4)+-4]
 27230  013FE8  0EFB               	movlw	-5
 27231  013FEA  A0E3               	btfss	plusw1,0,c
 27232  013FEC  D101               	goto	u5690
 27233                           
 27234                           ;stkvar	_grs @ sp[(-4)+0]
 27235  013FEE  0EFC               	movlw	-4
 27236  013FF0  A0E3               	btfss	plusw1,0,c
 27237  013FF2  D00D               	goto	l7739
 27238                           
 27239                           ;stkvar	_grs @ sp[(-4)+0]
 27240  013FF4  0EFC               	movlw	-4
 27241  013FF6  006F FF8C  F00C    	movff	plusw1,btemp+11
 27242  013FFC  90D8               	bcf	status,0,c
 27243  013FFE  320C               	rrcf	(btemp+11)^0,f,c
 27244  014000  0E01               	movlw	1
 27245  014002  120C               	iorwf	(btemp+11)^0,f,c
 27246                           
 27247                           ;stkvar	_grs @ sp[(-4)+0]
 27248  014004  0EFC               	movlw	-4
 27249  014006  0060  F033  FFE3   	movff	btemp+11,plusw1
 27250  01400C  D009               	goto	l7741
 27251  01400E                     l7739:
 27252                           
 27253                           ;stkvar	_grs @ sp[(-4)+0]
 27254  01400E  50E1               	movf	fsr1l,w,c
 27255  014010  0FFC               	addlw	-4
 27256  014012  6ED9               	movwf	fsr2l,c
 27257  014014  50E2               	movf	fsr1h,w,c
 27258  014016  6EDA               	movwf	fsr2h,c
 27259  014018  0EFF               	movlw	255
 27260  01401A  22DA               	addwfc	fsr2h,f,c
 27261  01401C  90D8               	bcf	status,0,c
 27262  01401E  32DF               	rrcf	indf2,f,c
 27263  014020                     l7741:
 27264                           
 27265                           ;stkvar	_b @ sp[(-4)+-4]
 27266  014020  0EF8               	movlw	-8
 27267  014022  A0E3               	btfss	plusw1,0,c
 27268  014024  D002               	goto	l7745
 27269                           
 27270                           ;stkvar	_grs @ sp[(-4)+0]
 27271  014026  0EFC               	movlw	-4
 27272  014028  8EE3               	bsf	plusw1,7,c
 27273  01402A                     l7745:
 27274  01402A  0E01               	movlw	1
 27275  01402C  6E0C               	movwf	(btemp+11)^0,c
 27276                           
 27277                           ;stkvar	_b @ sp[(-4)+-4]
 27278  01402E  50E1               	movf	fsr1l,w,c
 27279  014030  0FF8               	addlw	-8
 27280  014032  6ED9               	movwf	fsr2l,c
 27281  014034  50E2               	movf	fsr1h,w,c
 27282  014036  6EDA               	movwf	fsr2h,c
 27283  014038  0EFF               	movlw	255
 27284  01403A  22DA               	addwfc	fsr2h,f,c
 27285  01403C  280C               	incf	(btemp+11)^0,w,c
 27286  01403E  52DE               	movf	postinc2,f,c
 27287  014040  D008               	goto	u5610
 27288  014042                     u5615:
 27289  014042  52DE               	movf	postinc2,f,c
 27290  014044  90D8               	bcf	status,0,c
 27291  014046  BEDC               	btfsc	preinc2,7,c
 27292  014048  80D8               	bsf	status,0,c
 27293  01404A  32DD               	rrcf	postdec2,f,c
 27294  01404C  32DD               	rrcf	postdec2,f,c
 27295  01404E  32DD               	rrcf	postdec2,f,c
 27296  014050  32DE               	rrcf	postinc2,f,c
 27297  014052                     u5610:
 27298  014052  2EE8               	decfsz	wreg,f,c
 27299  014054  D7F6               	goto	u5615
 27300                           
 27301                           ;stkvar	_bexp @ sp[(-4)+1]
 27302  014056  0EFD               	movlw	-3
 27303  014058  2AE3               	incf	plusw1,f,c
 27304  01405A  D0CA               	goto	u5690
 27305  01405C                     l7749:
 27306                           
 27307                           ;stkvar	_a @ sp[(-4)+-8]
 27308                           ;stkvar	_b @ sp[(-4)+-4]
 27309  01405C  50E1               	movf	fsr1l,w,c
 27310  01405E  0FF8               	addlw	-8
 27311  014060  6ED9               	movwf	fsr2l,c
 27312  014062  50E2               	movf	fsr1h,w,c
 27313  014064  6EDA               	movwf	fsr2h,c
 27314  014066  0EFF               	movlw	255
 27315  014068  22DA               	addwfc	fsr2h,f,c
 27316  01406A  0EF4               	movlw	-12
 27317  01406C  50E3               	movf	plusw1,w,c
 27318  01406E  5CDE               	subwf	postinc2,w,c
 27319  014070  0EF5               	movlw	-11
 27320  014072  50E3               	movf	plusw1,w,c
 27321  014074  58DE               	subwfb	postinc2,w,c
 27322  014076  0EF6               	movlw	-10
 27323  014078  50E3               	movf	plusw1,w,c
 27324  01407A  58DE               	subwfb	postinc2,w,c
 27325  01407C  50DE               	movf	postinc2,w,c
 27326  01407E  0A80               	xorlw	128
 27327  014080  6E01               	movwf	btemp^0,c
 27328  014082  0EF7               	movlw	-9
 27329  014084  50E3               	movf	plusw1,w,c
 27330  014086  0A80               	xorlw	128
 27331  014088  5801               	subwfb	btemp^0,w,c
 27332  01408A  B0D8               	btfsc	status,0,c
 27333  01408C  D053               	goto	l7761
 27334                           
 27335                           ;stkvar	_b @ sp[(-4)+-4]
 27336                           ;stkvar	_a @ sp[(-4)+-8]
 27337  01408E  0EF4               	movlw	-12
 27338  014090  006F FF8C  F009    	movff	plusw1,btemp+8
 27339  014096  0EF5               	movlw	-11
 27340  014098  006F FF8C  F00A    	movff	plusw1,btemp+9
 27341  01409E  0EF6               	movlw	-10
 27342  0140A0  006F FF8C  F00B    	movff	plusw1,btemp+10
 27343  0140A6  0EF7               	movlw	-9
 27344  0140A8  006F FF8C  F00C    	movff	plusw1,btemp+11
 27345  0140AE  0EF8               	movlw	-8
 27346  0140B0  50E3               	movf	plusw1,w,c
 27347  0140B2  5E09               	subwf	(btemp+8)^0,f,c
 27348  0140B4  0EF9               	movlw	-7
 27349  0140B6  50E3               	movf	plusw1,w,c
 27350  0140B8  5A0A               	subwfb	(btemp+9)^0,f,c
 27351  0140BA  0EFA               	movlw	-6
 27352  0140BC  50E3               	movf	plusw1,w,c
 27353  0140BE  5A0B               	subwfb	(btemp+10)^0,f,c
 27354  0140C0  0EFB               	movlw	-5
 27355  0140C2  50E3               	movf	plusw1,w,c
 27356  0140C4  5A0C               	subwfb	(btemp+11)^0,f,c
 27357  0140C6  0EFF               	movlw	255
 27358  0140C8  2409               	addwf	(btemp+8)^0,w,c
 27359  0140CA  6E05               	movwf	(btemp+4)^0,c
 27360  0140CC  0EFF               	movlw	255
 27361  0140CE  200A               	addwfc	(btemp+9)^0,w,c
 27362  0140D0  6E06               	movwf	(btemp+5)^0,c
 27363  0140D2  0EFF               	movlw	255
 27364  0140D4  200B               	addwfc	(btemp+10)^0,w,c
 27365  0140D6  6E07               	movwf	(btemp+6)^0,c
 27366  0140D8  0EFF               	movlw	255
 27367  0140DA  200C               	addwfc	(btemp+11)^0,w,c
 27368  0140DC  6E08               	movwf	(btemp+7)^0,c
 27369                           
 27370                           ;stkvar	_b @ sp[(-4)+-4]
 27371  0140DE  0EF8               	movlw	-8
 27372  0140E0  0060  F017  FFE3   	movff	btemp+4,plusw1
 27373  0140E6  0EF9               	movlw	-7
 27374  0140E8  0060  F01B  FFE3   	movff	btemp+5,plusw1
 27375  0140EE  0EFA               	movlw	-6
 27376  0140F0  0060  F01F  FFE3   	movff	btemp+6,plusw1
 27377  0140F6  0EFB               	movlw	-5
 27378  0140F8  0060  F023  FFE3   	movff	btemp+7,plusw1
 27379                           
 27380                           ;stkvar	_signs @ sp[(-4)+3]
 27381  0140FE  0EFF               	movlw	-1
 27382  014100  7EE3               	btg	plusw1,7,c
 27383                           
 27384                           ;stkvar	_grs @ sp[(-4)+0]
 27385  014102  0EFC               	movlw	-4
 27386  014104  50E3               	movf	plusw1,w,c
 27387  014106  0800               	sublw	0
 27388  014108  6E0C               	movwf	(btemp+11)^0,c
 27389                           
 27390                           ;stkvar	_grs @ sp[(-4)+0]
 27391  01410A  0EFC               	movlw	-4
 27392  01410C  0060  F033  FFE3   	movff	btemp+11,plusw1
 27393                           
 27394                           ;stkvar	_grs @ sp[(-4)+0]
 27395  014112  0EFC               	movlw	-4
 27396  014114  50E3               	movf	plusw1,w,c
 27397  014116  A4D8               	btfss	status,2,c
 27398  014118  D020               	goto	l7763
 27399                           
 27400                           ;stkvar	_b @ sp[(-4)+-4]
 27401  01411A  50E1               	movf	fsr1l,w,c
 27402  01411C  0FF8               	addlw	-8
 27403  01411E  6ED9               	movwf	fsr2l,c
 27404  014120  50E2               	movf	fsr1h,w,c
 27405  014122  6EDA               	movwf	fsr2h,c
 27406  014124  0EFF               	movlw	255
 27407  014126  22DA               	addwfc	fsr2h,f,c
 27408  014128  2ADE               	incf	postinc2,f,c
 27409  01412A  0E00               	movlw	0
 27410  01412C  22DE               	addwfc	postinc2,f,c
 27411  01412E  22DE               	addwfc	postinc2,f,c
 27412  014130  22DE               	addwfc	postinc2,f,c
 27413  014132  D013               	goto	l7763
 27414  014134                     l7761:
 27415                           
 27416                           ;stkvar	_a @ sp[(-4)+-8]
 27417                           ;stkvar	_b @ sp[(-4)+-4]
 27418  014134  50E1               	movf	fsr1l,w,c
 27419  014136  0FF8               	addlw	-8
 27420  014138  6ED9               	movwf	fsr2l,c
 27421  01413A  50E2               	movf	fsr1h,w,c
 27422  01413C  6EDA               	movwf	fsr2h,c
 27423  01413E  0EFF               	movlw	255
 27424  014140  22DA               	addwfc	fsr2h,f,c
 27425  014142  0EF4               	movlw	-12
 27426  014144  50E3               	movf	plusw1,w,c
 27427  014146  5EDE               	subwf	postinc2,f,c
 27428  014148  0EF5               	movlw	-11
 27429  01414A  50E3               	movf	plusw1,w,c
 27430  01414C  5ADE               	subwfb	postinc2,f,c
 27431  01414E  0EF6               	movlw	-10
 27432  014150  50E3               	movf	plusw1,w,c
 27433  014152  5ADE               	subwfb	postinc2,f,c
 27434  014154  0EF7               	movlw	-9
 27435  014156  50E3               	movf	plusw1,w,c
 27436  014158  5ADE               	subwfb	postinc2,f,c
 27437  01415A                     l7763:
 27438                           
 27439                           ;stkvar	_b @ sp[(-4)+-4]
 27440  01415A  0EF8               	movlw	-8
 27441  01415C  50E3               	movf	plusw1,w,c
 27442  01415E  E145               	bnz	l7785
 27443  014160  0EF9               	movlw	-7
 27444  014162  50E3               	movf	plusw1,w,c
 27445  014164  E142               	bnz	l7785
 27446  014166  0EFA               	movlw	-6
 27447  014168  50E3               	movf	plusw1,w,c
 27448  01416A  E13F               	bnz	l7785
 27449  01416C  0EFB               	movlw	-5
 27450  01416E  50E3               	movf	plusw1,w,c
 27451  014170  A4D8               	btfss	status,2,c
 27452  014172  D03B               	goto	l7785
 27453                           
 27454                           ;stkvar	_grs @ sp[(-4)+0]
 27455  014174  0EFC               	movlw	-4
 27456  014176  50E3               	movf	plusw1,w,c
 27457  014178  A4D8               	btfss	status,2,c
 27458  01417A  D037               	goto	l7785
 27459  01417C                     u5650:
 27460  01417C  0E00               	movlw	0
 27461  01417E  6E01               	movwf	btemp^0,c
 27462  014180  0E00               	movlw	0
 27463  014182  6E02               	movwf	(btemp+1)^0,c
 27464  014184  0E00               	movlw	0
 27465  014186  6E03               	movwf	(btemp+2)^0,c
 27466  014188  0E00               	movlw	0
 27467  01418A  6E04               	movwf	(btemp+3)^0,c
 27468  01418C  D0C6               	goto	l2933
 27469  01418E                     l7771:
 27470                           
 27471                           ;stkvar	_b @ sp[(-4)+-4]
 27472  01418E  90D8               	bcf	status,0,c
 27473  014190  0EF8               	movlw	-8
 27474  014192  36E3               	rlcf	plusw1,f,c
 27475  014194  0EF9               	movlw	-7
 27476  014196  36E3               	rlcf	plusw1,f,c
 27477  014198  0EFA               	movlw	-6
 27478  01419A  36E3               	rlcf	plusw1,f,c
 27479  01419C  0EFB               	movlw	-5
 27480  01419E  36E3               	rlcf	plusw1,f,c
 27481                           
 27482                           ;stkvar	_grs @ sp[(-4)+0]
 27483  0141A0  0EFC               	movlw	-4
 27484  0141A2  AEE3               	btfss	plusw1,7,c
 27485  0141A4  D002               	goto	l2945
 27486                           
 27487                           ;stkvar	_b @ sp[(-4)+-4]
 27488  0141A6  0EF8               	movlw	-8
 27489  0141A8  80E3               	bsf	plusw1,0,c
 27490  0141AA                     l2945:
 27491                           
 27492                           ;stkvar	_grs @ sp[(-4)+0]
 27493  0141AA  0EFC               	movlw	-4
 27494  0141AC  A0E3               	btfss	plusw1,0,c
 27495  0141AE  D00E               	goto	l7779
 27496                           
 27497                           ;stkvar	_grs @ sp[(-4)+0]
 27498  0141B0  0EFC               	movlw	-4
 27499  0141B2  006F FF8C  F00C    	movff	plusw1,btemp+11
 27500  0141B8  90D8               	bcf	status,0,c
 27501  0141BA  340C               	rlcf	(btemp+11)^0,w,c
 27502  0141BC  6E0B               	movwf	(btemp+10)^0,c
 27503  0141BE  0E01               	movlw	1
 27504  0141C0  120B               	iorwf	(btemp+10)^0,f,c
 27505                           
 27506                           ;stkvar	_grs @ sp[(-4)+0]
 27507  0141C2  0EFC               	movlw	-4
 27508  0141C4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27509  0141CA  D009               	goto	l7781
 27510  0141CC                     l7779:
 27511                           
 27512                           ;stkvar	_grs @ sp[(-4)+0]
 27513  0141CC  50E1               	movf	fsr1l,w,c
 27514  0141CE  0FFC               	addlw	-4
 27515  0141D0  6ED9               	movwf	fsr2l,c
 27516  0141D2  50E2               	movf	fsr1h,w,c
 27517  0141D4  6EDA               	movwf	fsr2h,c
 27518  0141D6  0EFF               	movlw	255
 27519  0141D8  22DA               	addwfc	fsr2h,f,c
 27520  0141DA  90D8               	bcf	status,0,c
 27521  0141DC  36DF               	rlcf	indf2,f,c
 27522  0141DE                     l7781:
 27523                           
 27524                           ;stkvar	_bexp @ sp[(-4)+1]
 27525  0141DE  0EFD               	movlw	-3
 27526  0141E0  50E3               	movf	plusw1,w,c
 27527  0141E2  B4D8               	btfsc	status,2,c
 27528  0141E4  D002               	goto	l7785
 27529                           
 27530                           ;stkvar	_bexp @ sp[(-4)+1]
 27531  0141E6  0EFD               	movlw	-3
 27532  0141E8  06E3               	decf	plusw1,f,c
 27533  0141EA                     l7785:
 27534                           
 27535                           ;stkvar	_b @ sp[(-4)+-4]
 27536  0141EA  0EFA               	movlw	-6
 27537  0141EC  AEE3               	btfss	plusw1,7,c
 27538  0141EE  D7CF               	goto	l7771
 27539  0141F0                     u5690:
 27540                           
 27541                           ;stkvar	_aexp @ sp[(-4)+2]
 27542  0141F0  0EFE               	movlw	-2
 27543  0141F2  6AE3               	clrf	plusw1,c
 27544                           
 27545                           ;stkvar	_grs @ sp[(-4)+0]
 27546  0141F4  0EFC               	movlw	-4
 27547  0141F6  AEE3               	btfss	plusw1,7,c
 27548  0141F8  D00F               	goto	l7799
 27549                           
 27550                           ;stkvar	_grs @ sp[(-4)+0]
 27551  0141FA  0EFC               	movlw	-4
 27552  0141FC  006F FF8C  F00C    	movff	plusw1,btemp+11
 27553  014202  0E7F               	movlw	127
 27554  014204  160C               	andwf	(btemp+11)^0,f,c
 27555  014206  B4D8               	btfsc	status,2,c
 27556  014208  D004               	goto	l7795
 27557  01420A                     u5710:
 27558                           
 27559                           ;stkvar	_aexp @ sp[(-4)+2]
 27560  01420A  0EFE               	movlw	-2
 27561  01420C  6AE3               	clrf	plusw1,c
 27562  01420E  2AE3               	incf	plusw1,f,c
 27563  014210  D003               	goto	l7799
 27564  014212                     l7795:
 27565                           
 27566                           ;stkvar	_b @ sp[(-4)+-4]
 27567  014212  0EF8               	movlw	-8
 27568  014214  B0E3               	btfsc	plusw1,0,c
 27569  014216  D7F9               	goto	u5710
 27570  014218                     l7799:
 27571                           
 27572                           ;stkvar	_aexp @ sp[(-4)+2]
 27573  014218  0EFE               	movlw	-2
 27574  01421A  50E3               	movf	plusw1,w,c
 27575  01421C  B4D8               	btfsc	status,2,c
 27576  01421E  D02B               	goto	l7811
 27577                           
 27578                           ;stkvar	_b @ sp[(-4)+-4]
 27579  014220  50E1               	movf	fsr1l,w,c
 27580  014222  0FF8               	addlw	-8
 27581  014224  6ED9               	movwf	fsr2l,c
 27582  014226  50E2               	movf	fsr1h,w,c
 27583  014228  6EDA               	movwf	fsr2h,c
 27584  01422A  0EFF               	movlw	255
 27585  01422C  22DA               	addwfc	fsr2h,f,c
 27586  01422E  2ADE               	incf	postinc2,f,c
 27587  014230  0E00               	movlw	0
 27588  014232  22DE               	addwfc	postinc2,f,c
 27589  014234  22DE               	addwfc	postinc2,f,c
 27590  014236  22DE               	addwfc	postinc2,f,c
 27591                           
 27592                           ;stkvar	_b @ sp[(-4)+-4]
 27593  014238  0EFB               	movlw	-5
 27594  01423A  A0E3               	btfss	plusw1,0,c
 27595  01423C  D01C               	goto	l7811
 27596  01423E  0E01               	movlw	1
 27597  014240  6E0C               	movwf	(btemp+11)^0,c
 27598                           
 27599                           ;stkvar	_b @ sp[(-4)+-4]
 27600  014242  50E1               	movf	fsr1l,w,c
 27601  014244  0FF8               	addlw	-8
 27602  014246  6ED9               	movwf	fsr2l,c
 27603  014248  50E2               	movf	fsr1h,w,c
 27604  01424A  6EDA               	movwf	fsr2h,c
 27605  01424C  0EFF               	movlw	255
 27606  01424E  22DA               	addwfc	fsr2h,f,c
 27607  014250  280C               	incf	(btemp+11)^0,w,c
 27608  014252  52DE               	movf	postinc2,f,c
 27609  014254  D008               	goto	u5750
 27610  014256                     u5755:
 27611  014256  52DE               	movf	postinc2,f,c
 27612  014258  90D8               	bcf	status,0,c
 27613  01425A  BEDC               	btfsc	preinc2,7,c
 27614  01425C  80D8               	bsf	status,0,c
 27615  01425E  32DD               	rrcf	postdec2,f,c
 27616  014260  32DD               	rrcf	postdec2,f,c
 27617  014262  32DD               	rrcf	postdec2,f,c
 27618  014264  32DE               	rrcf	postinc2,f,c
 27619  014266                     u5750:
 27620  014266  2EE8               	decfsz	wreg,f,c
 27621  014268  D7F6               	goto	u5755
 27622                           
 27623                           ;stkvar	_bexp @ sp[(-4)+1]
 27624  01426A  0EFD               	movlw	-3
 27625  01426C  28E3               	incf	plusw1,w,c
 27626  01426E  B4D8               	btfsc	status,2,c
 27627  014270  D002               	goto	l7811
 27628                           
 27629                           ;stkvar	_bexp @ sp[(-4)+1]
 27630  014272  0EFD               	movlw	-3
 27631  014274  2AE3               	incf	plusw1,f,c
 27632  014276                     l7811:
 27633                           
 27634                           ;stkvar	_bexp @ sp[(-4)+1]
 27635  014276  0EFD               	movlw	-3
 27636  014278  28E3               	incf	plusw1,w,c
 27637  01427A  B4D8               	btfsc	status,2,c
 27638  01427C  D004               	goto	u5780
 27639                           
 27640                           ;stkvar	_bexp @ sp[(-4)+1]
 27641  01427E  0EFD               	movlw	-3
 27642  014280  50E3               	movf	plusw1,w,c
 27643  014282  A4D8               	btfss	status,2,c
 27644  014284  D00E               	goto	l7821
 27645  014286                     u5780:
 27646                           
 27647                           ;stkvar	_b @ sp[(-4)+-4]
 27648  014286  0EF8               	movlw	-8
 27649  014288  6AE3               	clrf	plusw1,c
 27650  01428A  0EF9               	movlw	-7
 27651  01428C  6AE3               	clrf	plusw1,c
 27652  01428E  0EFA               	movlw	-6
 27653  014290  6AE3               	clrf	plusw1,c
 27654  014292  0EFB               	movlw	-5
 27655  014294  6AE3               	clrf	plusw1,c
 27656                           
 27657                           ;stkvar	_bexp @ sp[(-4)+1]
 27658  014296  0EFD               	movlw	-3
 27659  014298  50E3               	movf	plusw1,w,c
 27660  01429A  A4D8               	btfss	status,2,c
 27661  01429C  D002               	goto	l7821
 27662                           
 27663                           ;stkvar	_signs @ sp[(-4)+3]
 27664  01429E  0EFF               	movlw	-1
 27665  0142A0  6AE3               	clrf	plusw1,c
 27666  0142A2                     l7821:
 27667                           
 27668                           ;stkvar	_bexp @ sp[(-4)+1]
 27669  0142A2  0EFD               	movlw	-3
 27670  0142A4  A0E3               	btfss	plusw1,0,c
 27671  0142A6  D009               	goto	l7825
 27672                           
 27673                           ;stkvar	_b @ sp[(-4)+-4]
 27674  0142A8  0EFA               	movlw	250
 27675  0142AA  24E1               	addwf	fsr1l,w,c
 27676  0142AC  6ED9               	movwf	fsr2l,c
 27677  0142AE  0EFF               	movlw	255
 27678  0142B0  20E2               	addwfc	fsr1h,w,c
 27679  0142B2  6EDA               	movwf	fsr2h,c
 27680  0142B4  0E00               	movlw	0
 27681  0142B6  8EDB               	bsf	plusw2,7,c
 27682  0142B8  D008               	goto	l7827
 27683  0142BA                     l7825:
 27684                           
 27685                           ;stkvar	_b @ sp[(-4)+-4]
 27686  0142BA  0EFA               	movlw	250
 27687  0142BC  24E1               	addwf	fsr1l,w,c
 27688  0142BE  6ED9               	movwf	fsr2l,c
 27689  0142C0  0EFF               	movlw	255
 27690  0142C2  20E2               	addwfc	fsr1h,w,c
 27691  0142C4  6EDA               	movwf	fsr2h,c
 27692  0142C6  0E7F               	movlw	127
 27693  0142C8  16DF               	andwf	indf2,f,c
 27694  0142CA                     l7827:
 27695                           
 27696                           ;stkvar	_b @ sp[(-4)+-4]
 27697  0142CA  0EFB               	movlw	251
 27698  0142CC  24E1               	addwf	fsr1l,w,c
 27699  0142CE  6ED9               	movwf	fsr2l,c
 27700  0142D0  0EFF               	movlw	255
 27701  0142D2  20E2               	addwfc	fsr1h,w,c
 27702  0142D4  6EDA               	movwf	fsr2h,c
 27703                           
 27704                           ;stkvar	_bexp @ sp[(-4)+1]
 27705  0142D6  0EFD               	movlw	-3
 27706  0142D8  006F FF8C  F00C    	movff	plusw1,btemp+11
 27707  0142DE  90D8               	bcf	status,0,c
 27708  0142E0  300C               	rrcf	(btemp+11)^0,w,c
 27709  0142E2  6EDF               	movwf	indf2,c
 27710                           
 27711                           ;stkvar	_signs @ sp[(-4)+3]
 27712  0142E4  0EFF               	movlw	-1
 27713  0142E6  AEE3               	btfss	plusw1,7,c
 27714  0142E8  D008               	goto	l7833
 27715                           
 27716                           ;stkvar	_b @ sp[(-4)+-4]
 27717  0142EA  0EFB               	movlw	251
 27718  0142EC  24E1               	addwf	fsr1l,w,c
 27719  0142EE  6ED9               	movwf	fsr2l,c
 27720  0142F0  0EFF               	movlw	255
 27721  0142F2  20E2               	addwfc	fsr1h,w,c
 27722  0142F4  6EDA               	movwf	fsr2h,c
 27723  0142F6  0E00               	movlw	0
 27724  0142F8  8EDB               	bsf	plusw2,7,c
 27725  0142FA                     l7833:
 27726                           
 27727                           ;stkvar	_b @ sp[(-4)+-4]
 27728  0142FA  0EF8               	movlw	-8
 27729  0142FC  006F FF8C  F001    	movff	plusw1,btemp
 27730  014302  0EF9               	movlw	-7
 27731  014304  006F FF8C  F002    	movff	plusw1,btemp+1
 27732  01430A  0EFA               	movlw	-6
 27733  01430C  006F FF8C  F003    	movff	plusw1,btemp+2
 27734  014312  0EFB               	movlw	-5
 27735  014314  006F FF8C  F004    	movff	plusw1,btemp+3
 27736  01431A                     l2933:
 27737                           
 27738                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 27739  01431A  0EF4               	movlw	244
 27740  01431C  26E1               	addwf	fsr1l,f,c
 27741  01431E  0EFF               	movlw	255
 27742  014320  22E2               	addwfc	fsr1h,f,c
 27743  014322  0012               	return		;funcret
 27744  014324                     __end_of___fladd:
 27745                           	opt callstack 0
 27746                           
 27747 ;; *************** function ___flmul *****************
 27748 ;; Defined at:
 27749 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 27750 ;; Parameters:    Size  Location     Type
 27751 ;;  b               4  [STACK] unsigned char 
 27752 ;;  a               4  [STACK] unsigned char 
 27753 ;; Auto vars:     Size  Location     Type
 27754 ;;  prod            4  [STACK] struct .
 27755 ;;  grs             4  [STACK] unsigned long 
 27756 ;;  temp            2  [STACK] struct .
 27757 ;;  bexp            1  [STACK] unsigned char 
 27758 ;;  aexp            1  [STACK] unsigned char 
 27759 ;;  sign            1  [STACK] unsigned char 
 27760 ;; Return value:  Size  Location     Type
 27761 ;;                  4  [STACK] unsigned char 
 27762 ;; Registers used:
 27763 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27764 ;; Tracked objects:
 27765 ;;		On entry : 0/0
 27766 ;;		On exit  : 0/0
 27767 ;;		Unchanged: 0/0
 27768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27773 ;;Total ram usage:        0 bytes
 27774 ;; Hardware stack levels used:    1
 27775 ;; Hardware stack levels required when called:   15
 27776 ;; This function calls:
 27777 ;;		Nothing
 27778 ;; This function is called by:
 27779 ;;		_conv_raw_result
 27780 ;;		_lp_filter
 27781 ;;		_calc_model_data
 27782 ;;		_calc_bsoc
 27783 ;;		_init_bsoc
 27784 ;;		_efgtoa
 27785 ;; This function uses a reentrant model
 27786 ;;
 27787                           
 27788                           	psect	text106
 27789  01333E                     __ptext106:
 27790                           	opt callstack 0
 27791  01333E                     ___flmul:
 27792                           	opt callstack 0
 27793                           
 27794                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 27795  01333E  0E0D               	movlw	13
 27796  013340  26E1               	addwf	fsr1l,f,c
 27797  013342  0E00               	movlw	0
 27798  013344  22E2               	addwfc	fsr1h,f,c
 27799                           
 27800                           ;stkvar	_b @ sp[(-13)+-4]
 27801                           
 27802                           ;incstack = 0
 27803 ;; hardware stack exceeded
 27804  013346  0EF2               	movlw	242
 27805  013348  24E1               	addwf	fsr1l,w,c
 27806  01334A  6ED9               	movwf	fsr2l,c
 27807  01334C  0EFF               	movlw	255
 27808  01334E  20E2               	addwfc	fsr1h,w,c
 27809  013350  6EDA               	movwf	fsr2h,c
 27810  013352  50DF               	movf	indf2,w,c
 27811  013354  6E0C               	movwf	(btemp+11)^0,c
 27812  013356  0E80               	movlw	128
 27813  013358  160C               	andwf	(btemp+11)^0,f,c
 27814                           
 27815                           ;stkvar	_sign @ sp[(-13)+12]
 27816  01335A  0EFF               	movlw	-1
 27817  01335C  0060  F033  FFE3   	movff	btemp+11,plusw1
 27818                           
 27819                           ;stkvar	_b @ sp[(-13)+-4]
 27820  013362  0EF2               	movlw	242
 27821  013364  24E1               	addwf	fsr1l,w,c
 27822  013366  6ED9               	movwf	fsr2l,c
 27823  013368  0EFF               	movlw	255
 27824  01336A  20E2               	addwfc	fsr1h,w,c
 27825  01336C  6EDA               	movwf	fsr2h,c
 27826  01336E  50DF               	movf	indf2,w,c
 27827  013370  6E0C               	movwf	(btemp+11)^0,c
 27828  013372  90D8               	bcf	status,0,c
 27829  013374  340C               	rlcf	(btemp+11)^0,w,c
 27830  013376  6E0B               	movwf	(btemp+10)^0,c
 27831                           
 27832                           ;stkvar	_bexp @ sp[(-13)+10]
 27833  013378  0EFD               	movlw	-3
 27834  01337A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27835                           
 27836                           ;stkvar	_b @ sp[(-13)+-4]
 27837  013380  0EF1               	movlw	241
 27838  013382  24E1               	addwf	fsr1l,w,c
 27839  013384  6ED9               	movwf	fsr2l,c
 27840  013386  0EFF               	movlw	255
 27841  013388  20E2               	addwfc	fsr1h,w,c
 27842  01338A  6EDA               	movwf	fsr2h,c
 27843  01338C  AEDF               	btfss	indf2,7,c
 27844  01338E  D002               	goto	l8217
 27845                           
 27846                           ;stkvar	_bexp @ sp[(-13)+10]
 27847  013390  0EFD               	movlw	-3
 27848  013392  80E3               	bsf	plusw1,0,c
 27849  013394                     l8217:
 27850                           
 27851                           ;stkvar	_bexp @ sp[(-13)+10]
 27852  013394  0EFD               	movlw	-3
 27853  013396  50E3               	movf	plusw1,w,c
 27854  013398  B4D8               	btfsc	status,2,c
 27855  01339A  D01F               	goto	l8225
 27856                           
 27857                           ;stkvar	_bexp @ sp[(-13)+10]
 27858  01339C  0EFD               	movlw	-3
 27859  01339E  28E3               	incf	plusw1,w,c
 27860  0133A0  A4D8               	btfss	status,2,c
 27861  0133A2  D018               	goto	l8223
 27862  0133A4  0E00               	movlw	0
 27863  0133A6  6E09               	movwf	(btemp+8)^0,c
 27864  0133A8  0E00               	movlw	0
 27865  0133AA  6E0A               	movwf	(btemp+9)^0,c
 27866  0133AC  0E00               	movlw	0
 27867  0133AE  6E0B               	movwf	(btemp+10)^0,c
 27868  0133B0  0E00               	movlw	0
 27869  0133B2  6E0C               	movwf	(btemp+11)^0,c
 27870                           
 27871                           ;stkvar	_b @ sp[(-13)+-4]
 27872  0133B4  0EEF               	movlw	-17
 27873  0133B6  0060  F027  FFE3   	movff	btemp+8,plusw1
 27874  0133BC  0EF0               	movlw	-16
 27875  0133BE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27876  0133C4  0EF1               	movlw	-15
 27877  0133C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27878  0133CC  0EF2               	movlw	-14
 27879  0133CE  0060  F033  FFE3   	movff	btemp+11,plusw1
 27880  0133D4                     l8223:
 27881                           
 27882                           ;stkvar	_b @ sp[(-13)+-4]
 27883  0133D4  0EF1               	movlw	-15
 27884  0133D6  8EE3               	bsf	plusw1,7,c
 27885  0133D8  D018               	goto	l8227
 27886  0133DA                     l8225:
 27887  0133DA  0E00               	movlw	0
 27888  0133DC  6E09               	movwf	(btemp+8)^0,c
 27889  0133DE  0E00               	movlw	0
 27890  0133E0  6E0A               	movwf	(btemp+9)^0,c
 27891  0133E2  0E00               	movlw	0
 27892  0133E4  6E0B               	movwf	(btemp+10)^0,c
 27893  0133E6  0E00               	movlw	0
 27894  0133E8  6E0C               	movwf	(btemp+11)^0,c
 27895                           
 27896                           ;stkvar	_b @ sp[(-13)+-4]
 27897  0133EA  0EEF               	movlw	-17
 27898  0133EC  0060  F027  FFE3   	movff	btemp+8,plusw1
 27899  0133F2  0EF0               	movlw	-16
 27900  0133F4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27901  0133FA  0EF1               	movlw	-15
 27902  0133FC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27903  013402  0EF2               	movlw	-14
 27904  013404  0060  F033  FFE3   	movff	btemp+11,plusw1
 27905  01340A                     l8227:
 27906                           
 27907                           ;stkvar	_a @ sp[(-13)+-8]
 27908  01340A  0EEE               	movlw	238
 27909  01340C  24E1               	addwf	fsr1l,w,c
 27910  01340E  6ED9               	movwf	fsr2l,c
 27911  013410  0EFF               	movlw	255
 27912  013412  20E2               	addwfc	fsr1h,w,c
 27913  013414  6EDA               	movwf	fsr2h,c
 27914  013416  50DF               	movf	indf2,w,c
 27915  013418  6E0C               	movwf	(btemp+11)^0,c
 27916  01341A  0E80               	movlw	128
 27917  01341C  160C               	andwf	(btemp+11)^0,f,c
 27918                           
 27919                           ;stkvar	_sign @ sp[(-13)+12]
 27920  01341E  50E1               	movf	fsr1l,w,c
 27921  013420  0FFF               	addlw	-1
 27922  013422  6ED9               	movwf	fsr2l,c
 27923  013424  50E2               	movf	fsr1h,w,c
 27924  013426  6EDA               	movwf	fsr2h,c
 27925  013428  0EFF               	movlw	255
 27926  01342A  22DA               	addwfc	fsr2h,f,c
 27927  01342C  500C               	movf	(btemp+11)^0,w,c
 27928  01342E  1ADF               	xorwf	indf2,f,c
 27929                           
 27930                           ;stkvar	_a @ sp[(-13)+-8]
 27931  013430  0EEE               	movlw	238
 27932  013432  24E1               	addwf	fsr1l,w,c
 27933  013434  6ED9               	movwf	fsr2l,c
 27934  013436  0EFF               	movlw	255
 27935  013438  20E2               	addwfc	fsr1h,w,c
 27936  01343A  6EDA               	movwf	fsr2h,c
 27937  01343C  50DF               	movf	indf2,w,c
 27938  01343E  6E0C               	movwf	(btemp+11)^0,c
 27939  013440  90D8               	bcf	status,0,c
 27940  013442  340C               	rlcf	(btemp+11)^0,w,c
 27941  013444  6E0B               	movwf	(btemp+10)^0,c
 27942                           
 27943                           ;stkvar	_aexp @ sp[(-13)+11]
 27944  013446  0EFE               	movlw	-2
 27945  013448  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27946                           
 27947                           ;stkvar	_a @ sp[(-13)+-8]
 27948  01344E  0EED               	movlw	237
 27949  013450  24E1               	addwf	fsr1l,w,c
 27950  013452  6ED9               	movwf	fsr2l,c
 27951  013454  0EFF               	movlw	255
 27952  013456  20E2               	addwfc	fsr1h,w,c
 27953  013458  6EDA               	movwf	fsr2h,c
 27954  01345A  AEDF               	btfss	indf2,7,c
 27955  01345C  D002               	goto	l8235
 27956                           
 27957                           ;stkvar	_aexp @ sp[(-13)+11]
 27958  01345E  0EFE               	movlw	-2
 27959  013460  80E3               	bsf	plusw1,0,c
 27960  013462                     l8235:
 27961                           
 27962                           ;stkvar	_aexp @ sp[(-13)+11]
 27963  013462  0EFE               	movlw	-2
 27964  013464  50E3               	movf	plusw1,w,c
 27965  013466  B4D8               	btfsc	status,2,c
 27966  013468  D01F               	goto	l8243
 27967                           
 27968                           ;stkvar	_aexp @ sp[(-13)+11]
 27969  01346A  0EFE               	movlw	-2
 27970  01346C  28E3               	incf	plusw1,w,c
 27971  01346E  A4D8               	btfss	status,2,c
 27972  013470  D018               	goto	l8241
 27973  013472  0E00               	movlw	0
 27974  013474  6E09               	movwf	(btemp+8)^0,c
 27975  013476  0E00               	movlw	0
 27976  013478  6E0A               	movwf	(btemp+9)^0,c
 27977  01347A  0E00               	movlw	0
 27978  01347C  6E0B               	movwf	(btemp+10)^0,c
 27979  01347E  0E00               	movlw	0
 27980  013480  6E0C               	movwf	(btemp+11)^0,c
 27981                           
 27982                           ;stkvar	_a @ sp[(-13)+-8]
 27983  013482  0EEB               	movlw	-21
 27984  013484  0060  F027  FFE3   	movff	btemp+8,plusw1
 27985  01348A  0EEC               	movlw	-20
 27986  01348C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27987  013492  0EED               	movlw	-19
 27988  013494  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27989  01349A  0EEE               	movlw	-18
 27990  01349C  0060  F033  FFE3   	movff	btemp+11,plusw1
 27991  0134A2                     l8241:
 27992                           
 27993                           ;stkvar	_a @ sp[(-13)+-8]
 27994  0134A2  0EED               	movlw	-19
 27995  0134A4  8EE3               	bsf	plusw1,7,c
 27996  0134A6  D018               	goto	l8245
 27997  0134A8                     l8243:
 27998  0134A8  0E00               	movlw	0
 27999  0134AA  6E09               	movwf	(btemp+8)^0,c
 28000  0134AC  0E00               	movlw	0
 28001  0134AE  6E0A               	movwf	(btemp+9)^0,c
 28002  0134B0  0E00               	movlw	0
 28003  0134B2  6E0B               	movwf	(btemp+10)^0,c
 28004  0134B4  0E00               	movlw	0
 28005  0134B6  6E0C               	movwf	(btemp+11)^0,c
 28006                           
 28007                           ;stkvar	_a @ sp[(-13)+-8]
 28008  0134B8  0EEB               	movlw	-21
 28009  0134BA  0060  F027  FFE3   	movff	btemp+8,plusw1
 28010  0134C0  0EEC               	movlw	-20
 28011  0134C2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28012  0134C8  0EED               	movlw	-19
 28013  0134CA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28014  0134D0  0EEE               	movlw	-18
 28015  0134D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 28016  0134D8                     l8245:
 28017                           
 28018                           ;stkvar	_aexp @ sp[(-13)+11]
 28019  0134D8  0EFE               	movlw	-2
 28020  0134DA  50E3               	movf	plusw1,w,c
 28021  0134DC  B4D8               	btfsc	status,2,c
 28022  0134DE  D004               	goto	u6720
 28023                           
 28024                           ;stkvar	_bexp @ sp[(-13)+10]
 28025  0134E0  0EFD               	movlw	-3
 28026  0134E2  50E3               	movf	plusw1,w,c
 28027  0134E4  A4D8               	btfss	status,2,c
 28028  0134E6  D009               	goto	l8253
 28029  0134E8                     u6720:
 28030  0134E8  0E00               	movlw	0
 28031  0134EA  6E01               	movwf	btemp^0,c
 28032  0134EC  0E00               	movlw	0
 28033  0134EE  6E02               	movwf	(btemp+1)^0,c
 28034  0134F0  0E00               	movlw	0
 28035  0134F2  6E03               	movwf	(btemp+2)^0,c
 28036  0134F4  0E00               	movlw	0
 28037  0134F6  6E04               	movwf	(btemp+3)^0,c
 28038  0134F8  D332               	goto	l3014
 28039  0134FA                     l8253:
 28040                           
 28041                           ;stkvar	_b @ sp[(-13)+-4]
 28042  0134FA  0EEF               	movlw	-17
 28043  0134FC  006F FF8C  F00C    	movff	plusw1,btemp+11
 28044                           
 28045                           ;stkvar	_a @ sp[(-13)+-8]
 28046  013502  0EED               	movlw	237
 28047  013504  24E1               	addwf	fsr1l,w,c
 28048  013506  6ED9               	movwf	fsr2l,c
 28049  013508  0EFF               	movlw	255
 28050  01350A  20E2               	addwfc	fsr1h,w,c
 28051  01350C  6EDA               	movwf	fsr2h,c
 28052  01350E  50DF               	movf	indf2,w,c
 28053  013510  020C               	mulwf	(btemp+11)^0,c
 28054                           
 28055                           ;stkvar	_temp @ sp[(-13)+8]
 28056  013512  0EFB               	movlw	-5
 28057  013514  006F FFCF FFE3     	movff	prodl,plusw1
 28058  01351A  0EFC               	movlw	-4
 28059  01351C  006F FFD3 FFE3     	movff	prodh,plusw1
 28060                           
 28061                           ;stkvar	_temp @ sp[(-13)+8]
 28062  013522  0EFB               	movlw	-5
 28063  013524  006F FF8C  F00C    	movff	plusw1,btemp+11
 28064  01352A  0060  F030  F005   	movff	btemp+11,btemp+4
 28065  013530  6A06               	clrf	(btemp+5)^0,c
 28066  013532  6A07               	clrf	(btemp+6)^0,c
 28067  013534  6A08               	clrf	(btemp+7)^0,c
 28068                           
 28069                           ;stkvar	_grs @ sp[(-13)+4]
 28070  013536  0EF7               	movlw	-9
 28071  013538  0060  F017  FFE3   	movff	btemp+4,plusw1
 28072  01353E  0EF8               	movlw	-8
 28073  013540  0060  F01B  FFE3   	movff	btemp+5,plusw1
 28074  013546  0EF9               	movlw	-7
 28075  013548  0060  F01F  FFE3   	movff	btemp+6,plusw1
 28076  01354E  0EFA               	movlw	-6
 28077  013550  0060  F023  FFE3   	movff	btemp+7,plusw1
 28078                           
 28079                           ;stkvar	_temp @ sp[(-13)+8]
 28080  013556  0EFC               	movlw	252
 28081  013558  24E1               	addwf	fsr1l,w,c
 28082  01355A  6ED9               	movwf	fsr2l,c
 28083  01355C  0EFF               	movlw	255
 28084  01355E  20E2               	addwfc	fsr1h,w,c
 28085  013560  6EDA               	movwf	fsr2h,c
 28086  013562  50DF               	movf	indf2,w,c
 28087  013564  6E0C               	movwf	(btemp+11)^0,c
 28088  013566  0060  F030  F005   	movff	btemp+11,btemp+4
 28089  01356C  6A06               	clrf	(btemp+5)^0,c
 28090  01356E  6A07               	clrf	(btemp+6)^0,c
 28091  013570  6A08               	clrf	(btemp+7)^0,c
 28092                           
 28093                           ;stkvar	_prod @ sp[(-13)+0]
 28094  013572  0EF3               	movlw	-13
 28095  013574  0060  F017  FFE3   	movff	btemp+4,plusw1
 28096  01357A  0EF4               	movlw	-12
 28097  01357C  0060  F01B  FFE3   	movff	btemp+5,plusw1
 28098  013582  0EF5               	movlw	-11
 28099  013584  0060  F01F  FFE3   	movff	btemp+6,plusw1
 28100  01358A  0EF6               	movlw	-10
 28101  01358C  0060  F023  FFE3   	movff	btemp+7,plusw1
 28102                           
 28103                           ;stkvar	_b @ sp[(-13)+-4]
 28104  013592  0EF0               	movlw	240
 28105  013594  24E1               	addwf	fsr1l,w,c
 28106  013596  6ED9               	movwf	fsr2l,c
 28107  013598  0EFF               	movlw	255
 28108  01359A  20E2               	addwfc	fsr1h,w,c
 28109  01359C  6EDA               	movwf	fsr2h,c
 28110  01359E  50DF               	movf	indf2,w,c
 28111  0135A0  6E0C               	movwf	(btemp+11)^0,c
 28112                           
 28113                           ;stkvar	_a @ sp[(-13)+-8]
 28114  0135A2  0EEC               	movlw	236
 28115  0135A4  24E1               	addwf	fsr1l,w,c
 28116  0135A6  6ED9               	movwf	fsr2l,c
 28117  0135A8  0EFF               	movlw	255
 28118  0135AA  20E2               	addwfc	fsr1h,w,c
 28119  0135AC  6EDA               	movwf	fsr2h,c
 28120  0135AE  50DF               	movf	indf2,w,c
 28121  0135B0  020C               	mulwf	(btemp+11)^0,c
 28122                           
 28123                           ;stkvar	_temp @ sp[(-13)+8]
 28124  0135B2  0EFB               	movlw	-5
 28125  0135B4  006F FFCF FFE3     	movff	prodl,plusw1
 28126  0135BA  0EFC               	movlw	-4
 28127  0135BC  006F FFD3 FFE3     	movff	prodh,plusw1
 28128                           
 28129                           ;stkvar	_grs @ sp[(-13)+4]
 28130  0135C2  50E1               	movf	fsr1l,w,c
 28131  0135C4  0FF7               	addlw	-9
 28132  0135C6  6ED9               	movwf	fsr2l,c
 28133  0135C8  50E2               	movf	fsr1h,w,c
 28134  0135CA  6EDA               	movwf	fsr2h,c
 28135  0135CC  0EFF               	movlw	255
 28136  0135CE  22DA               	addwfc	fsr2h,f,c
 28137                           
 28138                           ;stkvar	_temp @ sp[(-13)+8]
 28139  0135D0  0EFB               	movlw	-5
 28140  0135D2  50E3               	movf	plusw1,w,c
 28141  0135D4  26DE               	addwf	postinc2,f,c
 28142  0135D6  0E00               	movlw	0
 28143  0135D8  22DE               	addwfc	postinc2,f,c
 28144  0135DA  22DE               	addwfc	postinc2,f,c
 28145  0135DC  22DE               	addwfc	postinc2,f,c
 28146                           
 28147                           ;stkvar	_prod @ sp[(-13)+0]
 28148  0135DE  50E1               	movf	fsr1l,w,c
 28149  0135E0  0FF3               	addlw	-13
 28150  0135E2  6ED9               	movwf	fsr2l,c
 28151  0135E4  50E2               	movf	fsr1h,w,c
 28152  0135E6  6EDA               	movwf	fsr2h,c
 28153  0135E8  0EFF               	movlw	255
 28154  0135EA  22DA               	addwfc	fsr2h,f,c
 28155                           
 28156                           ;stkvar	_temp @ sp[(-13)+8]
 28157  0135EC  0EFC               	movlw	252
 28158  0135EE  24E1               	addwf	fsr1l,w,c
 28159  0135F0  6EE9               	movwf	fsr0l,c
 28160  0135F2  0EFF               	movlw	255
 28161  0135F4  20E2               	addwfc	fsr1h,w,c
 28162  0135F6  6EEA               	movwf	fsr0h,c
 28163  0135F8  50EF               	movf	indf0,w,c
 28164  0135FA  26DE               	addwf	postinc2,f,c
 28165  0135FC  0E00               	movlw	0
 28166  0135FE  22DE               	addwfc	postinc2,f,c
 28167  013600  22DE               	addwfc	postinc2,f,c
 28168  013602  22DE               	addwfc	postinc2,f,c
 28169                           
 28170                           ;stkvar	_b @ sp[(-13)+-4]
 28171  013604  0EF1               	movlw	241
 28172  013606  24E1               	addwf	fsr1l,w,c
 28173  013608  6ED9               	movwf	fsr2l,c
 28174  01360A  0EFF               	movlw	255
 28175  01360C  20E2               	addwfc	fsr1h,w,c
 28176  01360E  6EDA               	movwf	fsr2h,c
 28177  013610  50DF               	movf	indf2,w,c
 28178  013612  6E0C               	movwf	(btemp+11)^0,c
 28179                           
 28180                           ;stkvar	_a @ sp[(-13)+-8]
 28181  013614  0EEB               	movlw	-21
 28182  013616  50E3               	movf	plusw1,w,c
 28183  013618  020C               	mulwf	(btemp+11)^0,c
 28184                           
 28185                           ;stkvar	_temp @ sp[(-13)+8]
 28186  01361A  0EFB               	movlw	-5
 28187  01361C  006F FFCF FFE3     	movff	prodl,plusw1
 28188  013622  0EFC               	movlw	-4
 28189  013624  006F FFD3 FFE3     	movff	prodh,plusw1
 28190                           
 28191                           ;stkvar	_grs @ sp[(-13)+4]
 28192  01362A  50E1               	movf	fsr1l,w,c
 28193  01362C  0FF7               	addlw	-9
 28194  01362E  6ED9               	movwf	fsr2l,c
 28195  013630  50E2               	movf	fsr1h,w,c
 28196  013632  6EDA               	movwf	fsr2h,c
 28197  013634  0EFF               	movlw	255
 28198  013636  22DA               	addwfc	fsr2h,f,c
 28199                           
 28200                           ;stkvar	_temp @ sp[(-13)+8]
 28201  013638  0EFB               	movlw	-5
 28202  01363A  50E3               	movf	plusw1,w,c
 28203  01363C  26DE               	addwf	postinc2,f,c
 28204  01363E  0E00               	movlw	0
 28205  013640  22DE               	addwfc	postinc2,f,c
 28206  013642  22DE               	addwfc	postinc2,f,c
 28207  013644  22DE               	addwfc	postinc2,f,c
 28208                           
 28209                           ;stkvar	_prod @ sp[(-13)+0]
 28210  013646  50E1               	movf	fsr1l,w,c
 28211  013648  0FF3               	addlw	-13
 28212  01364A  6ED9               	movwf	fsr2l,c
 28213  01364C  50E2               	movf	fsr1h,w,c
 28214  01364E  6EDA               	movwf	fsr2h,c
 28215  013650  0EFF               	movlw	255
 28216  013652  22DA               	addwfc	fsr2h,f,c
 28217                           
 28218                           ;stkvar	_temp @ sp[(-13)+8]
 28219  013654  0EFC               	movlw	252
 28220  013656  24E1               	addwf	fsr1l,w,c
 28221  013658  6EE9               	movwf	fsr0l,c
 28222  01365A  0EFF               	movlw	255
 28223  01365C  20E2               	addwfc	fsr1h,w,c
 28224  01365E  6EEA               	movwf	fsr0h,c
 28225  013660  50EF               	movf	indf0,w,c
 28226  013662  26DE               	addwf	postinc2,f,c
 28227  013664  0E00               	movlw	0
 28228  013666  22DE               	addwfc	postinc2,f,c
 28229  013668  22DE               	addwfc	postinc2,f,c
 28230  01366A  22DE               	addwfc	postinc2,f,c
 28231                           
 28232                           ;stkvar	_grs @ sp[(-13)+4]
 28233  01366C  50E1               	movf	fsr1l,w,c
 28234  01366E  0FF7               	addlw	-9
 28235  013670  6ED9               	movwf	fsr2l,c
 28236  013672  50E2               	movf	fsr1h,w,c
 28237  013674  6EDA               	movwf	fsr2h,c
 28238  013676  0EFF               	movlw	255
 28239  013678  22DA               	addwfc	fsr2h,f,c
 28240  01367A  0E08               	movlw	8
 28241  01367C                     u6735:
 28242  01367C  90D8               	bcf	status,0,c
 28243  01367E  36DE               	rlcf	postinc2,f,c
 28244  013680  36DE               	rlcf	postinc2,f,c
 28245  013682  36DE               	rlcf	postinc2,f,c
 28246  013684  36DD               	rlcf	postdec2,f,c
 28247  013686  52DD               	movf	postdec2,f,c
 28248  013688  52DD               	movf	postdec2,f,c
 28249  01368A  2EE8               	decfsz	wreg,f,c
 28250  01368C  D7F7               	goto	u6735
 28251                           
 28252                           ;stkvar	_b @ sp[(-13)+-4]
 28253  01368E  0EF0               	movlw	240
 28254  013690  24E1               	addwf	fsr1l,w,c
 28255  013692  6ED9               	movwf	fsr2l,c
 28256  013694  0EFF               	movlw	255
 28257  013696  20E2               	addwfc	fsr1h,w,c
 28258  013698  6EDA               	movwf	fsr2h,c
 28259  01369A  50DF               	movf	indf2,w,c
 28260  01369C  6E0C               	movwf	(btemp+11)^0,c
 28261                           
 28262                           ;stkvar	_a @ sp[(-13)+-8]
 28263  01369E  0EEB               	movlw	-21
 28264  0136A0  50E3               	movf	plusw1,w,c
 28265  0136A2  020C               	mulwf	(btemp+11)^0,c
 28266                           
 28267                           ;stkvar	_temp @ sp[(-13)+8]
 28268  0136A4  0EFB               	movlw	-5
 28269  0136A6  006F FFCF FFE3     	movff	prodl,plusw1
 28270  0136AC  0EFC               	movlw	-4
 28271  0136AE  006F FFD3 FFE3     	movff	prodh,plusw1
 28272                           
 28273                           ;stkvar	_temp @ sp[(-13)+8]
 28274  0136B4  0EFB               	movlw	-5
 28275  0136B6  006F FF8C  F00B    	movff	plusw1,btemp+10
 28276  0136BC  0EFC               	movlw	-4
 28277  0136BE  006F FF8C  F00C    	movff	plusw1,btemp+11
 28278                           
 28279                           ;stkvar	_grs @ sp[(-13)+4]
 28280  0136C4  50E1               	movf	fsr1l,w,c
 28281  0136C6  0FF7               	addlw	-9
 28282  0136C8  6ED9               	movwf	fsr2l,c
 28283  0136CA  50E2               	movf	fsr1h,w,c
 28284  0136CC  6EDA               	movwf	fsr2h,c
 28285  0136CE  0EFF               	movlw	255
 28286  0136D0  22DA               	addwfc	fsr2h,f,c
 28287  0136D2  500B               	movf	(btemp+10)^0,w,c
 28288  0136D4  26DE               	addwf	postinc2,f,c
 28289  0136D6  500C               	movf	(btemp+11)^0,w,c
 28290  0136D8  22DE               	addwfc	postinc2,f,c
 28291  0136DA  0E00               	movlw	0
 28292  0136DC  22DE               	addwfc	postinc2,f,c
 28293  0136DE  22DE               	addwfc	postinc2,f,c
 28294                           
 28295                           ;stkvar	_b @ sp[(-13)+-4]
 28296  0136E0  0EEF               	movlw	-17
 28297  0136E2  006F FF8C  F00C    	movff	plusw1,btemp+11
 28298                           
 28299                           ;stkvar	_a @ sp[(-13)+-8]
 28300  0136E8  0EEC               	movlw	236
 28301  0136EA  24E1               	addwf	fsr1l,w,c
 28302  0136EC  6ED9               	movwf	fsr2l,c
 28303  0136EE  0EFF               	movlw	255
 28304  0136F0  20E2               	addwfc	fsr1h,w,c
 28305  0136F2  6EDA               	movwf	fsr2h,c
 28306  0136F4  50DF               	movf	indf2,w,c
 28307  0136F6  020C               	mulwf	(btemp+11)^0,c
 28308                           
 28309                           ;stkvar	_temp @ sp[(-13)+8]
 28310  0136F8  0EFB               	movlw	-5
 28311  0136FA  006F FFCF FFE3     	movff	prodl,plusw1
 28312  013700  0EFC               	movlw	-4
 28313  013702  006F FFD3 FFE3     	movff	prodh,plusw1
 28314                           
 28315                           ;stkvar	_temp @ sp[(-13)+8]
 28316  013708  0EFB               	movlw	-5
 28317  01370A  006F FF8C  F00B    	movff	plusw1,btemp+10
 28318  013710  0EFC               	movlw	-4
 28319  013712  006F FF8C  F00C    	movff	plusw1,btemp+11
 28320                           
 28321                           ;stkvar	_grs @ sp[(-13)+4]
 28322  013718  50E1               	movf	fsr1l,w,c
 28323  01371A  0FF7               	addlw	-9
 28324  01371C  6ED9               	movwf	fsr2l,c
 28325  01371E  50E2               	movf	fsr1h,w,c
 28326  013720  6EDA               	movwf	fsr2h,c
 28327  013722  0EFF               	movlw	255
 28328  013724  22DA               	addwfc	fsr2h,f,c
 28329  013726  500B               	movf	(btemp+10)^0,w,c
 28330  013728  26DE               	addwf	postinc2,f,c
 28331  01372A  500C               	movf	(btemp+11)^0,w,c
 28332  01372C  22DE               	addwfc	postinc2,f,c
 28333  01372E  0E00               	movlw	0
 28334  013730  22DE               	addwfc	postinc2,f,c
 28335  013732  22DE               	addwfc	postinc2,f,c
 28336                           
 28337                           ;stkvar	_grs @ sp[(-13)+4]
 28338  013734  50E1               	movf	fsr1l,w,c
 28339  013736  0FF7               	addlw	-9
 28340  013738  6ED9               	movwf	fsr2l,c
 28341  01373A  50E2               	movf	fsr1h,w,c
 28342  01373C  6EDA               	movwf	fsr2h,c
 28343  01373E  0EFF               	movlw	255
 28344  013740  22DA               	addwfc	fsr2h,f,c
 28345  013742  0E08               	movlw	8
 28346  013744                     u6745:
 28347  013744  90D8               	bcf	status,0,c
 28348  013746  36DE               	rlcf	postinc2,f,c
 28349  013748  36DE               	rlcf	postinc2,f,c
 28350  01374A  36DE               	rlcf	postinc2,f,c
 28351  01374C  36DD               	rlcf	postdec2,f,c
 28352  01374E  52DD               	movf	postdec2,f,c
 28353  013750  52DD               	movf	postdec2,f,c
 28354  013752  2EE8               	decfsz	wreg,f,c
 28355  013754  D7F7               	goto	u6745
 28356                           
 28357                           ;stkvar	_b @ sp[(-13)+-4]
 28358  013756  0EEF               	movlw	-17
 28359  013758  006F FF8C  F00C    	movff	plusw1,btemp+11
 28360                           
 28361                           ;stkvar	_a @ sp[(-13)+-8]
 28362  01375E  0EEB               	movlw	-21
 28363  013760  50E3               	movf	plusw1,w,c
 28364  013762  020C               	mulwf	(btemp+11)^0,c
 28365                           
 28366                           ;stkvar	_temp @ sp[(-13)+8]
 28367  013764  0EFB               	movlw	-5
 28368  013766  006F FFCF FFE3     	movff	prodl,plusw1
 28369  01376C  0EFC               	movlw	-4
 28370  01376E  006F FFD3 FFE3     	movff	prodh,plusw1
 28371                           
 28372                           ;stkvar	_temp @ sp[(-13)+8]
 28373  013774  0EFB               	movlw	-5
 28374  013776  006F FF8C  F00B    	movff	plusw1,btemp+10
 28375  01377C  0EFC               	movlw	-4
 28376  01377E  006F FF8C  F00C    	movff	plusw1,btemp+11
 28377                           
 28378                           ;stkvar	_grs @ sp[(-13)+4]
 28379  013784  50E1               	movf	fsr1l,w,c
 28380  013786  0FF7               	addlw	-9
 28381  013788  6ED9               	movwf	fsr2l,c
 28382  01378A  50E2               	movf	fsr1h,w,c
 28383  01378C  6EDA               	movwf	fsr2h,c
 28384  01378E  0EFF               	movlw	255
 28385  013790  22DA               	addwfc	fsr2h,f,c
 28386  013792  500B               	movf	(btemp+10)^0,w,c
 28387  013794  26DE               	addwf	postinc2,f,c
 28388  013796  500C               	movf	(btemp+11)^0,w,c
 28389  013798  22DE               	addwfc	postinc2,f,c
 28390  01379A  0E00               	movlw	0
 28391  01379C  22DE               	addwfc	postinc2,f,c
 28392  01379E  22DE               	addwfc	postinc2,f,c
 28393                           
 28394                           ;stkvar	_b @ sp[(-13)+-4]
 28395  0137A0  0EF0               	movlw	240
 28396  0137A2  24E1               	addwf	fsr1l,w,c
 28397  0137A4  6ED9               	movwf	fsr2l,c
 28398  0137A6  0EFF               	movlw	255
 28399  0137A8  20E2               	addwfc	fsr1h,w,c
 28400  0137AA  6EDA               	movwf	fsr2h,c
 28401  0137AC  50DF               	movf	indf2,w,c
 28402  0137AE  6E0C               	movwf	(btemp+11)^0,c
 28403                           
 28404                           ;stkvar	_a @ sp[(-13)+-8]
 28405  0137B0  0EED               	movlw	237
 28406  0137B2  24E1               	addwf	fsr1l,w,c
 28407  0137B4  6ED9               	movwf	fsr2l,c
 28408  0137B6  0EFF               	movlw	255
 28409  0137B8  20E2               	addwfc	fsr1h,w,c
 28410  0137BA  6EDA               	movwf	fsr2h,c
 28411  0137BC  50DF               	movf	indf2,w,c
 28412  0137BE  020C               	mulwf	(btemp+11)^0,c
 28413                           
 28414                           ;stkvar	_temp @ sp[(-13)+8]
 28415  0137C0  0EFB               	movlw	-5
 28416  0137C2  006F FFCF FFE3     	movff	prodl,plusw1
 28417  0137C8  0EFC               	movlw	-4
 28418  0137CA  006F FFD3 FFE3     	movff	prodh,plusw1
 28419                           
 28420                           ;stkvar	_temp @ sp[(-13)+8]
 28421  0137D0  0EFB               	movlw	-5
 28422  0137D2  006F FF8C  F00B    	movff	plusw1,btemp+10
 28423  0137D8  0EFC               	movlw	-4
 28424  0137DA  006F FF8C  F00C    	movff	plusw1,btemp+11
 28425                           
 28426                           ;stkvar	_prod @ sp[(-13)+0]
 28427  0137E0  50E1               	movf	fsr1l,w,c
 28428  0137E2  0FF3               	addlw	-13
 28429  0137E4  6ED9               	movwf	fsr2l,c
 28430  0137E6  50E2               	movf	fsr1h,w,c
 28431  0137E8  6EDA               	movwf	fsr2h,c
 28432  0137EA  0EFF               	movlw	255
 28433  0137EC  22DA               	addwfc	fsr2h,f,c
 28434  0137EE  500B               	movf	(btemp+10)^0,w,c
 28435  0137F0  26DE               	addwf	postinc2,f,c
 28436  0137F2  500C               	movf	(btemp+11)^0,w,c
 28437  0137F4  22DE               	addwfc	postinc2,f,c
 28438  0137F6  0E00               	movlw	0
 28439  0137F8  22DE               	addwfc	postinc2,f,c
 28440  0137FA  22DE               	addwfc	postinc2,f,c
 28441                           
 28442                           ;stkvar	_b @ sp[(-13)+-4]
 28443  0137FC  0EF1               	movlw	241
 28444  0137FE  24E1               	addwf	fsr1l,w,c
 28445  013800  6ED9               	movwf	fsr2l,c
 28446  013802  0EFF               	movlw	255
 28447  013804  20E2               	addwfc	fsr1h,w,c
 28448  013806  6EDA               	movwf	fsr2h,c
 28449  013808  50DF               	movf	indf2,w,c
 28450  01380A  6E0C               	movwf	(btemp+11)^0,c
 28451                           
 28452                           ;stkvar	_a @ sp[(-13)+-8]
 28453  01380C  0EEC               	movlw	236
 28454  01380E  24E1               	addwf	fsr1l,w,c
 28455  013810  6ED9               	movwf	fsr2l,c
 28456  013812  0EFF               	movlw	255
 28457  013814  20E2               	addwfc	fsr1h,w,c
 28458  013816  6EDA               	movwf	fsr2h,c
 28459  013818  50DF               	movf	indf2,w,c
 28460  01381A  020C               	mulwf	(btemp+11)^0,c
 28461                           
 28462                           ;stkvar	_temp @ sp[(-13)+8]
 28463  01381C  0EFB               	movlw	-5
 28464  01381E  006F FFCF FFE3     	movff	prodl,plusw1
 28465  013824  0EFC               	movlw	-4
 28466  013826  006F FFD3 FFE3     	movff	prodh,plusw1
 28467                           
 28468                           ;stkvar	_temp @ sp[(-13)+8]
 28469  01382C  0EFB               	movlw	-5
 28470  01382E  006F FF8C  F00B    	movff	plusw1,btemp+10
 28471  013834  0EFC               	movlw	-4
 28472  013836  006F FF8C  F00C    	movff	plusw1,btemp+11
 28473                           
 28474                           ;stkvar	_prod @ sp[(-13)+0]
 28475  01383C  50E1               	movf	fsr1l,w,c
 28476  01383E  0FF3               	addlw	-13
 28477  013840  6ED9               	movwf	fsr2l,c
 28478  013842  50E2               	movf	fsr1h,w,c
 28479  013844  6EDA               	movwf	fsr2h,c
 28480  013846  0EFF               	movlw	255
 28481  013848  22DA               	addwfc	fsr2h,f,c
 28482  01384A  500B               	movf	(btemp+10)^0,w,c
 28483  01384C  26DE               	addwf	postinc2,f,c
 28484  01384E  500C               	movf	(btemp+11)^0,w,c
 28485  013850  22DE               	addwfc	postinc2,f,c
 28486  013852  0E00               	movlw	0
 28487  013854  22DE               	addwfc	postinc2,f,c
 28488  013856  22DE               	addwfc	postinc2,f,c
 28489                           
 28490                           ;stkvar	_b @ sp[(-13)+-4]
 28491  013858  0EF1               	movlw	241
 28492  01385A  24E1               	addwf	fsr1l,w,c
 28493  01385C  6ED9               	movwf	fsr2l,c
 28494  01385E  0EFF               	movlw	255
 28495  013860  20E2               	addwfc	fsr1h,w,c
 28496  013862  6EDA               	movwf	fsr2h,c
 28497  013864  50DF               	movf	indf2,w,c
 28498  013866  6E0C               	movwf	(btemp+11)^0,c
 28499                           
 28500                           ;stkvar	_a @ sp[(-13)+-8]
 28501  013868  0EED               	movlw	237
 28502  01386A  24E1               	addwf	fsr1l,w,c
 28503  01386C  6ED9               	movwf	fsr2l,c
 28504  01386E  0EFF               	movlw	255
 28505  013870  20E2               	addwfc	fsr1h,w,c
 28506  013872  6EDA               	movwf	fsr2h,c
 28507  013874  50DF               	movf	indf2,w,c
 28508  013876  020C               	mulwf	(btemp+11)^0,c
 28509                           
 28510                           ;stkvar	_temp @ sp[(-13)+8]
 28511  013878  0EFB               	movlw	-5
 28512  01387A  006F FFCF FFE3     	movff	prodl,plusw1
 28513  013880  0EFC               	movlw	-4
 28514  013882  006F FFD3 FFE3     	movff	prodh,plusw1
 28515                           
 28516                           ;stkvar	_temp @ sp[(-13)+8]
 28517  013888  0EFB               	movlw	-5
 28518  01388A  006F FF8C  F00B    	movff	plusw1,btemp+10
 28519  013890  0EFC               	movlw	-4
 28520  013892  006F FF8C  F00C    	movff	plusw1,btemp+11
 28521  013898  500B               	movf	(btemp+10)^0,w,c
 28522  01389A  6E05               	movwf	(btemp+4)^0,c
 28523  01389C  500C               	movf	(btemp+11)^0,w,c
 28524  01389E  6E06               	movwf	(btemp+5)^0,c
 28525  0138A0  6A07               	clrf	(btemp+6)^0,c
 28526  0138A2  6A08               	clrf	(btemp+7)^0,c
 28527  0138A4  0060  F01C  F008   	movff	btemp+6,btemp+7
 28528  0138AA  0060  F018  F007   	movff	btemp+5,btemp+6
 28529  0138B0  0060  F014  F006   	movff	btemp+4,btemp+5
 28530  0138B6  6A05               	clrf	(btemp+4)^0,c
 28531                           
 28532                           ;stkvar	_prod @ sp[(-13)+0]
 28533  0138B8  50E1               	movf	fsr1l,w,c
 28534  0138BA  0FF3               	addlw	-13
 28535  0138BC  6ED9               	movwf	fsr2l,c
 28536  0138BE  50E2               	movf	fsr1h,w,c
 28537  0138C0  6EDA               	movwf	fsr2h,c
 28538  0138C2  0EFF               	movlw	255
 28539  0138C4  22DA               	addwfc	fsr2h,f,c
 28540  0138C6  5005               	movf	(btemp+4)^0,w,c
 28541  0138C8  26DE               	addwf	postinc2,f,c
 28542  0138CA  5006               	movf	(btemp+5)^0,w,c
 28543  0138CC  22DE               	addwfc	postinc2,f,c
 28544  0138CE  5007               	movf	(btemp+6)^0,w,c
 28545  0138D0  22DE               	addwfc	postinc2,f,c
 28546  0138D2  5008               	movf	(btemp+7)^0,w,c
 28547  0138D4  22DE               	addwfc	postinc2,f,c
 28548                           
 28549                           ;stkvar	_prod @ sp[(-13)+0]
 28550  0138D6  50E1               	movf	fsr1l,w,c
 28551  0138D8  0FF3               	addlw	-13
 28552  0138DA  6ED9               	movwf	fsr2l,c
 28553  0138DC  50E2               	movf	fsr1h,w,c
 28554  0138DE  6EDA               	movwf	fsr2h,c
 28555  0138E0  0EFF               	movlw	255
 28556  0138E2  22DA               	addwfc	fsr2h,f,c
 28557                           
 28558                           ;stkvar	_grs @ sp[(-13)+4]
 28559  0138E4  0EFA               	movlw	250
 28560  0138E6  24E1               	addwf	fsr1l,w,c
 28561  0138E8  6EE9               	movwf	fsr0l,c
 28562  0138EA  0EFF               	movlw	255
 28563  0138EC  20E2               	addwfc	fsr1h,w,c
 28564  0138EE  6EEA               	movwf	fsr0h,c
 28565  0138F0  50EF               	movf	indf0,w,c
 28566  0138F2  26DE               	addwf	postinc2,f,c
 28567  0138F4  0E00               	movlw	0
 28568  0138F6  22DE               	addwfc	postinc2,f,c
 28569  0138F8  22DE               	addwfc	postinc2,f,c
 28570  0138FA  22DE               	addwfc	postinc2,f,c
 28571                           
 28572                           ;stkvar	_grs @ sp[(-13)+4]
 28573  0138FC  50E1               	movf	fsr1l,w,c
 28574  0138FE  0FF7               	addlw	-9
 28575  013900  6ED9               	movwf	fsr2l,c
 28576  013902  50E2               	movf	fsr1h,w,c
 28577  013904  6EDA               	movwf	fsr2h,c
 28578  013906  0EFF               	movlw	255
 28579  013908  22DA               	addwfc	fsr2h,f,c
 28580  01390A  0E08               	movlw	8
 28581  01390C                     u6755:
 28582  01390C  90D8               	bcf	status,0,c
 28583  01390E  36DE               	rlcf	postinc2,f,c
 28584  013910  36DE               	rlcf	postinc2,f,c
 28585  013912  36DE               	rlcf	postinc2,f,c
 28586  013914  36DD               	rlcf	postdec2,f,c
 28587  013916  52DD               	movf	postdec2,f,c
 28588  013918  52DD               	movf	postdec2,f,c
 28589  01391A  2EE8               	decfsz	wreg,f,c
 28590  01391C  D7F7               	goto	u6755
 28591  01391E  0E82               	movlw	130
 28592  013920  6E0B               	movwf	(btemp+10)^0,c
 28593  013922  0EFF               	movlw	255
 28594  013924  6E0C               	movwf	(btemp+11)^0,c
 28595                           
 28596                           ;stkvar	_bexp @ sp[(-13)+10]
 28597  013926  0EFD               	movlw	-3
 28598  013928  50E3               	movf	plusw1,w,c
 28599  01392A  6E09               	movwf	(btemp+8)^0,c
 28600  01392C  6A0A               	clrf	(btemp+9)^0,c
 28601                           
 28602                           ;stkvar	_aexp @ sp[(-13)+11]
 28603  01392E  0EFE               	movlw	-2
 28604  013930  50E3               	movf	plusw1,w,c
 28605  013932  2609               	addwf	(btemp+8)^0,f,c
 28606  013934  0E00               	movlw	0
 28607  013936  220A               	addwfc	(btemp+9)^0,f,c
 28608  013938  500B               	movf	(btemp+10)^0,w,c
 28609  01393A  2609               	addwf	(btemp+8)^0,f,c
 28610  01393C  500C               	movf	(btemp+11)^0,w,c
 28611  01393E  220A               	addwfc	(btemp+9)^0,f,c
 28612                           
 28613                           ;stkvar	_temp @ sp[(-13)+8]
 28614  013940  0EFB               	movlw	-5
 28615  013942  0060  F027  FFE3   	movff	btemp+8,plusw1
 28616  013948  0EFC               	movlw	-4
 28617  01394A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28618  013950  D021               	goto	l8315
 28619  013952                     l8305:
 28620                           
 28621                           ;stkvar	_prod @ sp[(-13)+0]
 28622  013952  90D8               	bcf	status,0,c
 28623  013954  0EF3               	movlw	-13
 28624  013956  36E3               	rlcf	plusw1,f,c
 28625  013958  0EF4               	movlw	-12
 28626  01395A  36E3               	rlcf	plusw1,f,c
 28627  01395C  0EF5               	movlw	-11
 28628  01395E  36E3               	rlcf	plusw1,f,c
 28629  013960  0EF6               	movlw	-10
 28630  013962  36E3               	rlcf	plusw1,f,c
 28631                           
 28632                           ;stkvar	_grs @ sp[(-13)+4]
 28633  013964  0EFA               	movlw	-6
 28634  013966  AEE3               	btfss	plusw1,7,c
 28635  013968  D002               	goto	l8311
 28636                           
 28637                           ;stkvar	_prod @ sp[(-13)+0]
 28638  01396A  0EF3               	movlw	-13
 28639  01396C  80E3               	bsf	plusw1,0,c
 28640  01396E                     l8311:
 28641                           
 28642                           ;stkvar	_grs @ sp[(-13)+4]
 28643  01396E  90D8               	bcf	status,0,c
 28644  013970  0EF7               	movlw	-9
 28645  013972  36E3               	rlcf	plusw1,f,c
 28646  013974  0EF8               	movlw	-8
 28647  013976  36E3               	rlcf	plusw1,f,c
 28648  013978  0EF9               	movlw	-7
 28649  01397A  36E3               	rlcf	plusw1,f,c
 28650  01397C  0EFA               	movlw	-6
 28651  01397E  36E3               	rlcf	plusw1,f,c
 28652                           
 28653                           ;stkvar	_temp @ sp[(-13)+8]
 28654  013980  50E1               	movf	fsr1l,w,c
 28655  013982  0FFB               	addlw	-5
 28656  013984  6ED9               	movwf	fsr2l,c
 28657  013986  50E2               	movf	fsr1h,w,c
 28658  013988  6EDA               	movwf	fsr2h,c
 28659  01398A  0EFF               	movlw	255
 28660  01398C  22DA               	addwfc	fsr2h,f,c
 28661  01398E  06DE               	decf	postinc2,f,c
 28662  013990  0E00               	movlw	0
 28663  013992  5ADD               	subwfb	postdec2,f,c
 28664  013994                     l8315:
 28665                           
 28666                           ;stkvar	_prod @ sp[(-13)+0]
 28667  013994  0EF5               	movlw	-11
 28668  013996  AEE3               	btfss	plusw1,7,c
 28669  013998  D7DC               	goto	l8305
 28670                           
 28671                           ;stkvar	_aexp @ sp[(-13)+11]
 28672  01399A  0EFE               	movlw	-2
 28673  01399C  6AE3               	clrf	plusw1,c
 28674                           
 28675                           ;stkvar	_grs @ sp[(-13)+4]
 28676  01399E  0EFA               	movlw	-6
 28677  0139A0  AEE3               	btfss	plusw1,7,c
 28678  0139A2  D020               	goto	l8329
 28679                           
 28680                           ;stkvar	_grs @ sp[(-13)+4]
 28681  0139A4  50E1               	movf	fsr1l,w,c
 28682  0139A6  0FF7               	addlw	-9
 28683  0139A8  6ED9               	movwf	fsr2l,c
 28684  0139AA  50E2               	movf	fsr1h,w,c
 28685  0139AC  6EDA               	movwf	fsr2h,c
 28686  0139AE  0EFF               	movlw	255
 28687  0139B0  22DA               	addwfc	fsr2h,f,c
 28688  0139B2  0EFF               	movlw	255
 28689  0139B4  14DE               	andwf	postinc2,w,c
 28690  0139B6  6E09               	movwf	(btemp+8)^0,c
 28691  0139B8  0EFF               	movlw	255
 28692  0139BA  14DE               	andwf	postinc2,w,c
 28693  0139BC  6E0A               	movwf	(btemp+9)^0,c
 28694  0139BE  0EFF               	movlw	255
 28695  0139C0  14DE               	andwf	postinc2,w,c
 28696  0139C2  6E0B               	movwf	(btemp+10)^0,c
 28697  0139C4  0E7F               	movlw	127
 28698  0139C6  14DE               	andwf	postinc2,w,c
 28699  0139C8  6E0C               	movwf	(btemp+11)^0,c
 28700  0139CA  5009               	movf	(btemp+8)^0,w,c
 28701  0139CC  100A               	iorwf	(btemp+9)^0,w,c
 28702  0139CE  100B               	iorwf	(btemp+10)^0,w,c
 28703  0139D0  100C               	iorwf	(btemp+11)^0,w,c
 28704  0139D2  B4D8               	btfsc	status,2,c
 28705  0139D4  D004               	goto	l8325
 28706  0139D6                     u6790:
 28707                           
 28708                           ;stkvar	_aexp @ sp[(-13)+11]
 28709  0139D6  0EFE               	movlw	-2
 28710  0139D8  6AE3               	clrf	plusw1,c
 28711  0139DA  2AE3               	incf	plusw1,f,c
 28712  0139DC  D003               	goto	l8329
 28713  0139DE                     l8325:
 28714                           
 28715                           ;stkvar	_prod @ sp[(-13)+0]
 28716  0139DE  0EF3               	movlw	-13
 28717  0139E0  B0E3               	btfsc	plusw1,0,c
 28718  0139E2  D7F9               	goto	u6790
 28719  0139E4                     l8329:
 28720                           
 28721                           ;stkvar	_aexp @ sp[(-13)+11]
 28722  0139E4  0EFE               	movlw	-2
 28723  0139E6  50E3               	movf	plusw1,w,c
 28724  0139E8  B4D8               	btfsc	status,2,c
 28725  0139EA  D036               	goto	l8339
 28726                           
 28727                           ;stkvar	_prod @ sp[(-13)+0]
 28728  0139EC  50E1               	movf	fsr1l,w,c
 28729  0139EE  0FF3               	addlw	-13
 28730  0139F0  6ED9               	movwf	fsr2l,c
 28731  0139F2  50E2               	movf	fsr1h,w,c
 28732  0139F4  6EDA               	movwf	fsr2h,c
 28733  0139F6  0EFF               	movlw	255
 28734  0139F8  22DA               	addwfc	fsr2h,f,c
 28735  0139FA  2ADE               	incf	postinc2,f,c
 28736  0139FC  0E00               	movlw	0
 28737  0139FE  22DE               	addwfc	postinc2,f,c
 28738  013A00  22DE               	addwfc	postinc2,f,c
 28739  013A02  22DE               	addwfc	postinc2,f,c
 28740                           
 28741                           ;stkvar	_prod @ sp[(-13)+0]
 28742  013A04  0EF6               	movlw	-10
 28743  013A06  A0E3               	btfss	plusw1,0,c
 28744  013A08  D027               	goto	l8339
 28745  013A0A  0E01               	movlw	1
 28746  013A0C  6E0C               	movwf	(btemp+11)^0,c
 28747                           
 28748                           ;stkvar	_prod @ sp[(-13)+0]
 28749  013A0E  50E1               	movf	fsr1l,w,c
 28750  013A10  0FF3               	addlw	-13
 28751  013A12  6ED9               	movwf	fsr2l,c
 28752  013A14  50E2               	movf	fsr1h,w,c
 28753  013A16  6EDA               	movwf	fsr2h,c
 28754  013A18  0EFF               	movlw	255
 28755  013A1A  22DA               	addwfc	fsr2h,f,c
 28756  013A1C  280C               	incf	(btemp+11)^0,w,c
 28757  013A1E  52DE               	movf	postinc2,f,c
 28758  013A20  D008               	goto	u6830
 28759  013A22                     u6835:
 28760  013A22  52DE               	movf	postinc2,f,c
 28761  013A24  90D8               	bcf	status,0,c
 28762  013A26  BEDC               	btfsc	preinc2,7,c
 28763  013A28  80D8               	bsf	status,0,c
 28764  013A2A  32DD               	rrcf	postdec2,f,c
 28765  013A2C  32DD               	rrcf	postdec2,f,c
 28766  013A2E  32DD               	rrcf	postdec2,f,c
 28767  013A30  32DE               	rrcf	postinc2,f,c
 28768  013A32                     u6830:
 28769  013A32  2EE8               	decfsz	wreg,f,c
 28770  013A34  D7F6               	goto	u6835
 28771                           
 28772                           ;stkvar	_temp @ sp[(-13)+8]
 28773  013A36  0EFB               	movlw	-5
 28774  013A38  50E3               	movf	plusw1,w,c
 28775  013A3A  0F01               	addlw	1
 28776  013A3C  6E01               	movwf	btemp^0,c
 28777  013A3E  0EFB               	movlw	-5
 28778  013A40  0060  F007  FFE3   	movff	btemp,plusw1
 28779  013A46  6A01               	clrf	btemp^0,c
 28780  013A48  0EFC               	movlw	-4
 28781  013A4A  50E3               	movf	plusw1,w,c
 28782  013A4C  2001               	addwfc	btemp^0,w,c
 28783  013A4E  6E01               	movwf	btemp^0,c
 28784  013A50  0EFC               	movlw	-4
 28785  013A52  0060  F007  FFE3   	movff	btemp,plusw1
 28786  013A58                     l8339:
 28787                           
 28788                           ;stkvar	_temp @ sp[(-13)+8]
 28789  013A58  0EFC               	movlw	-4
 28790  013A5A  BEE3               	btfsc	plusw1,7,c
 28791  013A5C  D020               	goto	l8343
 28792  013A5E  0EFC               	movlw	-4
 28793  013A60  50E3               	movf	plusw1,w,c
 28794  013A62  E104               	bnz	u6840
 28795  013A64  0EFB               	movlw	-5
 28796  013A66  28E3               	incf	plusw1,w,c
 28797  013A68  A0D8               	btfss	status,0,c
 28798  013A6A  D019               	goto	l8343
 28799  013A6C                     u6840:
 28800  013A6C  0E00               	movlw	0
 28801  013A6E  6E09               	movwf	(btemp+8)^0,c
 28802  013A70  0E00               	movlw	0
 28803  013A72  6E0A               	movwf	(btemp+9)^0,c
 28804  013A74  0E80               	movlw	128
 28805  013A76  6E0B               	movwf	(btemp+10)^0,c
 28806  013A78  0E7F               	movlw	127
 28807  013A7A  6E0C               	movwf	(btemp+11)^0,c
 28808                           
 28809                           ;stkvar	_prod @ sp[(-13)+0]
 28810  013A7C  0EF3               	movlw	-13
 28811  013A7E  0060  F027  FFE3   	movff	btemp+8,plusw1
 28812  013A84  0EF4               	movlw	-12
 28813  013A86  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28814  013A8C  0EF5               	movlw	-11
 28815  013A8E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28816  013A94  0EF6               	movlw	-10
 28817  013A96  0060  F033  FFE3   	movff	btemp+11,plusw1
 28818  013A9C  D044               	goto	l8359
 28819  013A9E                     l8343:
 28820                           
 28821                           ;stkvar	_temp @ sp[(-13)+8]
 28822  013A9E  0EFC               	movlw	-4
 28823  013AA0  BEE3               	btfsc	plusw1,7,c
 28824  013AA2  D007               	goto	u6850
 28825  013AA4  0EFC               	movlw	-4
 28826  013AA6  50E3               	movf	plusw1,w,c
 28827  013AA8  E10F               	bnz	l8349
 28828  013AAA  0EFB               	movlw	-5
 28829  013AAC  04E3               	decf	plusw1,w,c
 28830  013AAE  B0D8               	btfsc	status,0,c
 28831  013AB0  D00B               	goto	l8349
 28832  013AB2                     u6850:
 28833                           
 28834                           ;stkvar	_prod @ sp[(-13)+0]
 28835  013AB2  0EF3               	movlw	-13
 28836  013AB4  6AE3               	clrf	plusw1,c
 28837  013AB6  0EF4               	movlw	-12
 28838  013AB8  6AE3               	clrf	plusw1,c
 28839  013ABA  0EF5               	movlw	-11
 28840  013ABC  6AE3               	clrf	plusw1,c
 28841  013ABE  0EF6               	movlw	-10
 28842  013AC0  6AE3               	clrf	plusw1,c
 28843                           
 28844                           ;stkvar	_sign @ sp[(-13)+12]
 28845  013AC2  0EFF               	movlw	-1
 28846  013AC4  6AE3               	clrf	plusw1,c
 28847  013AC6  D02F               	goto	l8359
 28848  013AC8                     l8349:
 28849                           
 28850                           ;stkvar	_temp @ sp[(-13)+8]
 28851                           ;stkvar	_bexp @ sp[(-13)+10]
 28852  013AC8  0EFB               	movlw	-5
 28853  013ACA  006F FF8C  F001    	movff	plusw1,btemp
 28854  013AD0  0EFD               	movlw	-3
 28855  013AD2  0060  F007  FFE3   	movff	btemp,plusw1
 28856                           
 28857                           ;stkvar	_prod @ sp[(-13)+0]
 28858  013AD8  50E1               	movf	fsr1l,w,c
 28859  013ADA  0FF3               	addlw	-13
 28860  013ADC  6ED9               	movwf	fsr2l,c
 28861  013ADE  50E2               	movf	fsr1h,w,c
 28862  013AE0  6EDA               	movwf	fsr2h,c
 28863  013AE2  0EFF               	movlw	255
 28864  013AE4  22DA               	addwfc	fsr2h,f,c
 28865  013AE6  0EFF               	movlw	255
 28866  013AE8  16DE               	andwf	postinc2,f,c
 28867  013AEA  0EFF               	movlw	255
 28868  013AEC  16DE               	andwf	postinc2,f,c
 28869  013AEE  0E7F               	movlw	127
 28870  013AF0  16DE               	andwf	postinc2,f,c
 28871  013AF2  0E00               	movlw	0
 28872  013AF4  16DE               	andwf	postinc2,f,c
 28873                           
 28874                           ;stkvar	_bexp @ sp[(-13)+10]
 28875  013AF6  0EFD               	movlw	-3
 28876  013AF8  A0E3               	btfss	plusw1,0,c
 28877  013AFA  D008               	goto	l8357
 28878                           
 28879                           ;stkvar	_prod @ sp[(-13)+0]
 28880  013AFC  0EF5               	movlw	245
 28881  013AFE  24E1               	addwf	fsr1l,w,c
 28882  013B00  6ED9               	movwf	fsr2l,c
 28883  013B02  0EFF               	movlw	255
 28884  013B04  20E2               	addwfc	fsr1h,w,c
 28885  013B06  6EDA               	movwf	fsr2h,c
 28886  013B08  0E00               	movlw	0
 28887  013B0A  8EDB               	bsf	plusw2,7,c
 28888  013B0C                     l8357:
 28889                           
 28890                           ;stkvar	_prod @ sp[(-13)+0]
 28891  013B0C  0EF6               	movlw	246
 28892  013B0E  24E1               	addwf	fsr1l,w,c
 28893  013B10  6ED9               	movwf	fsr2l,c
 28894  013B12  0EFF               	movlw	255
 28895  013B14  20E2               	addwfc	fsr1h,w,c
 28896  013B16  6EDA               	movwf	fsr2h,c
 28897                           
 28898                           ;stkvar	_bexp @ sp[(-13)+10]
 28899  013B18  0EFD               	movlw	-3
 28900  013B1A  006F FF8C  F00C    	movff	plusw1,btemp+11
 28901  013B20  90D8               	bcf	status,0,c
 28902  013B22  300C               	rrcf	(btemp+11)^0,w,c
 28903  013B24  6EDF               	movwf	indf2,c
 28904  013B26                     l8359:
 28905                           
 28906                           ;stkvar	_sign @ sp[(-13)+12]
 28907  013B26  0EFF               	movlw	-1
 28908  013B28  006F FF8C  F00C    	movff	plusw1,btemp+11
 28909                           
 28910                           ;stkvar	_prod @ sp[(-13)+0]
 28911  013B2E  0EF6               	movlw	246
 28912  013B30  24E1               	addwf	fsr1l,w,c
 28913  013B32  6ED9               	movwf	fsr2l,c
 28914  013B34  0EFF               	movlw	255
 28915  013B36  20E2               	addwfc	fsr1h,w,c
 28916  013B38  6EDA               	movwf	fsr2h,c
 28917  013B3A  500C               	movf	(btemp+11)^0,w,c
 28918  013B3C  12DF               	iorwf	indf2,f,c
 28919                           
 28920                           ;stkvar	_prod @ sp[(-13)+0]
 28921  013B3E  0EF3               	movlw	-13
 28922  013B40  006F FF8C  F001    	movff	plusw1,btemp
 28923  013B46  0EF4               	movlw	-12
 28924  013B48  006F FF8C  F002    	movff	plusw1,btemp+1
 28925  013B4E  0EF5               	movlw	-11
 28926  013B50  006F FF8C  F003    	movff	plusw1,btemp+2
 28927  013B56  0EF6               	movlw	-10
 28928  013B58  006F FF8C  F004    	movff	plusw1,btemp+3
 28929  013B5E                     l3014:
 28930                           
 28931                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 28932  013B5E  0EEB               	movlw	235
 28933  013B60  26E1               	addwf	fsr1l,f,c
 28934  013B62  0EFF               	movlw	255
 28935  013B64  22E2               	addwfc	fsr1h,f,c
 28936  013B66  0012               	return		;funcret
 28937  013B68                     __end_of___flmul:
 28938                           	opt callstack 0
 28939                           
 28940 ;; *************** function _SYSTEM_Initialize *****************
 28941 ;; Defined at:
 28942 ;;		line 50 in file "mcc_generated_files/mcc.c"
 28943 ;; Parameters:    Size  Location     Type
 28944 ;;		None
 28945 ;; Auto vars:     Size  Location     Type
 28946 ;;		None
 28947 ;; Return value:  Size  Location     Type
 28948 ;;                  1  [STACK] void 
 28949 ;; Registers used:
 28950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 28951 ;; Tracked objects:
 28952 ;;		On entry : 0/0
 28953 ;;		On exit  : 3F/3C
 28954 ;;		Unchanged: 0/0
 28955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28960 ;;Total ram usage:        0 bytes
 28961 ;; Hardware stack levels used:    1
 28962 ;; Hardware stack levels required when called:   17
 28963 ;; This function calls:
 28964 ;;		_ADCC_Initialize
 28965 ;;		_CLKREF_Initialize
 28966 ;;		_DMA1_Initialize
 28967 ;;		_DMA2_Initialize
 28968 ;;		_EXT_INT_Initialize
 28969 ;;		_FVR_Initialize
 28970 ;;		_INTERRUPT_Initialize
 28971 ;;		_OSCILLATOR_Initialize
 28972 ;;		_PIN_MANAGER_Initialize
 28973 ;;		_PMD_Initialize
 28974 ;;		_PWM8_Initialize
 28975 ;;		_SPI1_Initialize
 28976 ;;		_TMR2_Initialize
 28977 ;;		_TMR3_Initialize
 28978 ;;		_TMR5_Initialize
 28979 ;;		_TMR6_Initialize
 28980 ;;		_UART1_Initialize
 28981 ;;		_UART2_Initialize
 28982 ;; This function is called by:
 28983 ;;		_main
 28984 ;; This function uses a reentrant model
 28985 ;;
 28986                           
 28987                           	psect	text107
 28988  01B100                     __ptext107:
 28989                           	opt callstack 0
 28990  01B100                     _SYSTEM_Initialize:
 28991                           	opt callstack 13
 28992                           
 28993                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 28994                           
 28995                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28996                           ;incstack = 0
 28997  01B100  EC8D  F0D6         	call	_INTERRUPT_Initialize	;wreg free
 28998                           
 28999                           ; BSR set to: 57
 29000                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 29001  01B104  ECB0  F0DE         	call	_PMD_Initialize	;wreg free
 29002                           
 29003                           ; BSR set to: 57
 29004                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 29005  01B108  ECDF  F0D3         	call	_PIN_MANAGER_Initialize	;wreg free
 29006                           
 29007                           ; BSR set to: 58
 29008                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 29009  01B10C  ECA5  F0DE         	call	_OSCILLATOR_Initialize	;wreg free
 29010                           
 29011                           ; BSR set to: 57
 29012                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 29013  01B110  EC33  F0DF         	call	_FVR_Initialize	;wreg free
 29014                           
 29015                           ; BSR set to: 62
 29016                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 29017  01B114  EC23  F0D6         	call	_ADCC_Initialize	;wreg free
 29018                           
 29019                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 29020  01B118  EC83  F0DE         	call	_TMR2_Initialize	;wreg free
 29021                           
 29022                           ; BSR set to: 57
 29023                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 29024  01B11C  EC9A  F0DE         	call	_PWM8_Initialize	;wreg free
 29025                           
 29026                           ; BSR set to: 63
 29027                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 29028  01B120  EC24  F0DB         	call	_EXT_INT_Initialize	;wreg free
 29029                           
 29030                           ; BSR set to: 57
 29031                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 29032  01B124  ECF8  F0DB         	call	_TMR6_Initialize	;wreg free
 29033                           
 29034                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 29035  01B128  EC11  F0D9         	call	_TMR3_Initialize	;wreg free
 29036                           
 29037                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 29038  01B12C  ECED  F0D8         	call	_TMR5_Initialize	;wreg free
 29039                           
 29040                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 29041  01B130  ECC9  F0D8         	call	_UART1_Initialize	;wreg free
 29042                           
 29043                           ; BSR set to: 57
 29044                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 29045  01B134  EC54  F0D7         	call	_UART2_Initialize	;wreg free
 29046                           
 29047                           ; BSR set to: 57
 29048                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 29049  01B138  EC8F  F0DE         	call	_SPI1_Initialize	;wreg free
 29050                           
 29051                           ; BSR set to: 61
 29052                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 29053  01B13C  ECB1  F0D7         	call	_DMA2_Initialize	;wreg free
 29054                           
 29055                           ; BSR set to: 59
 29056                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 29057  01B140  ECEE  F0D5         	call	_DMA1_Initialize	;wreg free
 29058                           
 29059                           ; BSR set to: 59
 29060                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 29061  01B144  EC07  F0DF         	call	_CLKREF_Initialize	;wreg free
 29062                           
 29063                           ; BSR set to: 60
 29064                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 29065  01B148  0012               	return		;funcret
 29066  01B14A                     __end_of_SYSTEM_Initialize:
 29067                           	opt callstack 0
 29068                           
 29069 ;; *************** function _UART2_Initialize *****************
 29070 ;; Defined at:
 29071 ;;		line 78 in file "mcc_generated_files/uart2.c"
 29072 ;; Parameters:    Size  Location     Type
 29073 ;;		None
 29074 ;; Auto vars:     Size  Location     Type
 29075 ;;		None
 29076 ;; Return value:  Size  Location     Type
 29077 ;;                  1  [STACK] void 
 29078 ;; Registers used:
 29079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29080 ;; Tracked objects:
 29081 ;;		On entry : 3F/39
 29082 ;;		On exit  : 3F/39
 29083 ;;		Unchanged: 0/0
 29084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29089 ;;Total ram usage:        0 bytes
 29090 ;; Hardware stack levels used:    1
 29091 ;; Hardware stack levels required when called:   16
 29092 ;; This function calls:
 29093 ;;		_UART2_SetRxInterruptHandler
 29094 ;;		_UART2_SetTxInterruptHandler
 29095 ;; This function is called by:
 29096 ;;		_SYSTEM_Initialize
 29097 ;; This function uses a reentrant model
 29098 ;;
 29099                           
 29100                           	psect	text108
 29101  01AEA8                     __ptext108:
 29102                           	opt callstack 0
 29103  01AEA8                     _UART2_Initialize:
 29104                           	opt callstack 13
 29105                           
 29106                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 29107                           
 29108                           ; BSR set to: 60
 29109                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29110                           ;incstack = 0
 29111  01AEA8  0139               	movlb	57	; () banked
 29112  01AEAA  9596               	bcf	150,2,b	;volatile
 29113                           
 29114                           ; BSR set to: 57
 29115                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 29116  01AEAC  0E04               	movlw	low _UART2_Receive_ISR
 29117  01AEAE  6EE6               	movwf	postinc1,c
 29118  01AEB0  0EBC               	movlw	high _UART2_Receive_ISR
 29119  01AEB2  6EE6               	movwf	postinc1,c
 29120  01AEB4  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 29121  01AEB6  6EE6               	movwf	postinc1,c
 29122  01AEB8  EC85  F0DC         	call	_UART2_SetRxInterruptHandler	;wreg free
 29123                           
 29124                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 29125  01AEBC  0139               	movlb	57	; () banked
 29126  01AEBE  9796               	bcf	150,3,b	;volatile
 29127                           
 29128                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 29129  01AEC0  0EC4               	movlw	low _UART2_Transmit_ISR
 29130  01AEC2  6EE6               	movwf	postinc1,c
 29131  01AEC4  0EB7               	movlw	high _UART2_Transmit_ISR
 29132  01AEC6  6EE6               	movwf	postinc1,c
 29133  01AEC8  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 29134  01AECA  6EE6               	movwf	postinc1,c
 29135  01AECC  EC71  F0DC         	call	_UART2_SetTxInterruptHandler	;wreg free
 29136                           
 29137                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 29138  01AED0  013D               	movlb	61	; () banked
 29139  01AED2  6BD4               	clrf	212,b	;volatile
 29140                           
 29141                           ; BSR set to: 61
 29142                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 29143  01AED4  6BD6               	clrf	214,b	;volatile
 29144                           
 29145                           ; BSR set to: 61
 29146                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 29147  01AED6  6BD8               	clrf	216,b	;volatile
 29148                           
 29149                           ; BSR set to: 61
 29150                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 29151  01AED8  0EB0               	movlw	176
 29152  01AEDA  6FDA               	movwf	218,b	;volatile
 29153                           
 29154                           ; BSR set to: 61
 29155                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 29156  01AEDC  0E80               	movlw	128
 29157  01AEDE  6FDB               	movwf	219,b	;volatile
 29158                           
 29159                           ; BSR set to: 61
 29160                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 29161  01AEE0  6BDC               	clrf	220,b	;volatile
 29162                           
 29163                           ; BSR set to: 61
 29164                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 29165  01AEE2  0E82               	movlw	130
 29166  01AEE4  6FDD               	movwf	221,b	;volatile
 29167                           
 29168                           ; BSR set to: 61
 29169                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 29170  01AEE6  0E06               	movlw	6
 29171  01AEE8  6FDE               	movwf	222,b	;volatile
 29172                           
 29173                           ; BSR set to: 61
 29174                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 29175  01AEEA  6BDF               	clrf	223,b	;volatile
 29176                           
 29177                           ; BSR set to: 61
 29178                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 29179  01AEEC  6BE0               	clrf	224,b	;volatile
 29180                           
 29181                           ; BSR set to: 61
 29182                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 29183  01AEEE  6BE1               	clrf	225,b	;volatile
 29184                           
 29185                           ; BSR set to: 61
 29186                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 29187  01AEF0  6BE2               	clrf	226,b	;volatile
 29188                           
 29189                           ; BSR set to: 61
 29190                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 29191  01AEF2  0100               	movlb	0	; () banked
 29192  01AEF4  6BBB               	clrf	_uart2TxHead& (0+255),b	;volatile
 29193                           
 29194                           ; BSR set to: 0
 29195                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 29196  01AEF6  6A45               	clrf	_uart2TxTail^0,c	;volatile
 29197                           
 29198                           ; BSR set to: 0
 29199                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 29200  01AEF8  0E40               	movlw	64
 29201  01AEFA  6E44               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 29202                           
 29203                           ; BSR set to: 0
 29204                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 29205  01AEFC  6A43               	clrf	_uart2RxHead^0,c	;volatile
 29206                           
 29207                           ; BSR set to: 0
 29208                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 29209  01AEFE  6BBA               	clrf	_uart2RxTail& (0+255),b	;volatile
 29210                           
 29211                           ; BSR set to: 0
 29212                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 29213  01AF00  6BB9               	clrf	_uart2RxCount& (0+255),b	;volatile
 29214                           
 29215                           ; BSR set to: 0
 29216                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 29217  01AF02  0139               	movlb	57	; () banked
 29218  01AF04  8596               	bsf	150,2,b	;volatile
 29219                           
 29220                           ; BSR set to: 57
 29221                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 29222  01AF06  0012               	return		;funcret
 29223  01AF08                     __end_of_UART2_Initialize:
 29224                           	opt callstack 0
 29225                           
 29226 ;; *************** function _UART2_SetTxInterruptHandler *****************
 29227 ;; Defined at:
 29228 ;;		line 252 in file "mcc_generated_files/uart2.c"
 29229 ;; Parameters:    Size  Location     Type
 29230 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29231 ;;		 -> UART2_Transmit_ISR(1), 
 29232 ;; Auto vars:     Size  Location     Type
 29233 ;;		None
 29234 ;; Return value:  Size  Location     Type
 29235 ;;                  1  [STACK] void 
 29236 ;; Registers used:
 29237 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29238 ;; Tracked objects:
 29239 ;;		On entry : 3F/39
 29240 ;;		On exit  : 0/0
 29241 ;;		Unchanged: 0/0
 29242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29247 ;;Total ram usage:        0 bytes
 29248 ;; Hardware stack levels used:    1
 29249 ;; Hardware stack levels required when called:   15
 29250 ;; This function calls:
 29251 ;;		Nothing
 29252 ;; This function is called by:
 29253 ;;		_UART2_Initialize
 29254 ;; This function uses a reentrant model
 29255 ;;
 29256                           
 29257                           	psect	text109
 29258  01B8E2                     __ptext109:
 29259                           	opt callstack 0
 29260  01B8E2                     _UART2_SetTxInterruptHandler:
 29261                           	opt callstack 13
 29262                           
 29263                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 29264                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29265                           
 29266                           ; BSR set to: 57
 29267                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29268                           ;incstack = 0
 29269  01B8E2  50E1               	movf	fsr1l,w,c
 29270  01B8E4  0FFD               	addlw	-3
 29271  01B8E6  6ED9               	movwf	fsr2l,c
 29272  01B8E8  50E2               	movf	fsr1h,w,c
 29273  01B8EA  6EDA               	movwf	fsr2h,c
 29274  01B8EC  0EFF               	movlw	255
 29275  01B8EE  22DA               	addwfc	fsr2h,f,c
 29276  01B8F0  006F FF78  F0A2    	movff	postinc2,_UART2_TxInterruptHandler
 29277  01B8F6  006F FF78  F0A3    	movff	postinc2,_UART2_TxInterruptHandler+1
 29278  01B8FC  006F FF74  F0A4    	movff	postdec2,_UART2_TxInterruptHandler+2
 29279                           
 29280                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29281  01B902  52E5               	movf	postdec1,f,c
 29282  01B904  52E5               	movf	postdec1,f,c
 29283  01B906  52E5               	movf	postdec1,f,c
 29284  01B908  0012               	return		;funcret
 29285  01B90A                     __end_of_UART2_SetTxInterruptHandler:
 29286                           	opt callstack 0
 29287                           
 29288 ;; *************** function _UART2_SetRxInterruptHandler *****************
 29289 ;; Defined at:
 29290 ;;		line 248 in file "mcc_generated_files/uart2.c"
 29291 ;; Parameters:    Size  Location     Type
 29292 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29293 ;;		 -> UART2_Receive_ISR(1), 
 29294 ;; Auto vars:     Size  Location     Type
 29295 ;;		None
 29296 ;; Return value:  Size  Location     Type
 29297 ;;                  1  [STACK] void 
 29298 ;; Registers used:
 29299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29300 ;; Tracked objects:
 29301 ;;		On entry : 3F/39
 29302 ;;		On exit  : 0/0
 29303 ;;		Unchanged: 0/0
 29304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29309 ;;Total ram usage:        0 bytes
 29310 ;; Hardware stack levels used:    1
 29311 ;; Hardware stack levels required when called:   15
 29312 ;; This function calls:
 29313 ;;		Nothing
 29314 ;; This function is called by:
 29315 ;;		_UART2_Initialize
 29316 ;; This function uses a reentrant model
 29317 ;;
 29318                           
 29319                           	psect	text110
 29320  01B90A                     __ptext110:
 29321                           	opt callstack 0
 29322  01B90A                     _UART2_SetRxInterruptHandler:
 29323                           	opt callstack 13
 29324                           
 29325                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 29326                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29327                           
 29328                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29329                           ;incstack = 0
 29330  01B90A  50E1               	movf	fsr1l,w,c
 29331  01B90C  0FFD               	addlw	-3
 29332  01B90E  6ED9               	movwf	fsr2l,c
 29333  01B910  50E2               	movf	fsr1h,w,c
 29334  01B912  6EDA               	movwf	fsr2h,c
 29335  01B914  0EFF               	movlw	255
 29336  01B916  22DA               	addwfc	fsr2h,f,c
 29337  01B918  006F FF78  F0A5    	movff	postinc2,_UART2_RxInterruptHandler
 29338  01B91E  006F FF78  F0A6    	movff	postinc2,_UART2_RxInterruptHandler+1
 29339  01B924  006F FF74  F0A7    	movff	postdec2,_UART2_RxInterruptHandler+2
 29340                           
 29341                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29342  01B92A  52E5               	movf	postdec1,f,c
 29343  01B92C  52E5               	movf	postdec1,f,c
 29344  01B92E  52E5               	movf	postdec1,f,c
 29345  01B930  0012               	return		;funcret
 29346  01B932                     __end_of_UART2_SetRxInterruptHandler:
 29347                           	opt callstack 0
 29348                           
 29349 ;; *************** function _UART1_Initialize *****************
 29350 ;; Defined at:
 29351 ;;		line 75 in file "mcc_generated_files/uart1.c"
 29352 ;; Parameters:    Size  Location     Type
 29353 ;;		None
 29354 ;; Auto vars:     Size  Location     Type
 29355 ;;		None
 29356 ;; Return value:  Size  Location     Type
 29357 ;;                  1  [STACK] void 
 29358 ;; Registers used:
 29359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29360 ;; Tracked objects:
 29361 ;;		On entry : 0/39
 29362 ;;		On exit  : 3F/39
 29363 ;;		Unchanged: 0/0
 29364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29369 ;;Total ram usage:        0 bytes
 29370 ;; Hardware stack levels used:    1
 29371 ;; Hardware stack levels required when called:   16
 29372 ;; This function calls:
 29373 ;;		_UART1_SetRxInterruptHandler
 29374 ;; This function is called by:
 29375 ;;		_SYSTEM_Initialize
 29376 ;; This function uses a reentrant model
 29377 ;;
 29378                           
 29379                           	psect	text111
 29380  01B192                     __ptext111:
 29381                           	opt callstack 0
 29382  01B192                     _UART1_Initialize:
 29383                           	opt callstack 13
 29384                           
 29385                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 29386                           
 29387                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29388                           ;incstack = 0
 29389  01B192  0139               	movlb	57	; () banked
 29390  01B194  9793               	bcf	147,3,b	;volatile
 29391                           
 29392                           ; BSR set to: 57
 29393                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 29394  01B196  0EC2               	movlw	low _UART1_Receive_ISR
 29395  01B198  6EE6               	movwf	postinc1,c
 29396  01B19A  0EBB               	movlw	high _UART1_Receive_ISR
 29397  01B19C  6EE6               	movwf	postinc1,c
 29398  01B19E  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 29399  01B1A0  6EE6               	movwf	postinc1,c
 29400  01B1A2  EC99  F0DC         	call	_UART1_SetRxInterruptHandler	;wreg free
 29401                           
 29402                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 29403  01B1A6  013D               	movlb	61	; () banked
 29404  01B1A8  6BEC               	clrf	236,b	;volatile
 29405                           
 29406                           ; BSR set to: 61
 29407                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 29408  01B1AA  6BED               	clrf	237,b	;volatile
 29409                           
 29410                           ; BSR set to: 61
 29411                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 29412  01B1AC  6BEE               	clrf	238,b	;volatile
 29413                           
 29414                           ; BSR set to: 61
 29415                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 29416  01B1AE  6BEF               	clrf	239,b	;volatile
 29417                           
 29418                           ; BSR set to: 61
 29419                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 29420  01B1B0  6BF0               	clrf	240,b	;volatile
 29421                           
 29422                           ; BSR set to: 61
 29423                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 29424  01B1B2  6BF1               	clrf	241,b	;volatile
 29425                           
 29426                           ; BSR set to: 61
 29427                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 29428  01B1B4  0EB0               	movlw	176
 29429  01B1B6  6FF2               	movwf	242,b	;volatile
 29430                           
 29431                           ; BSR set to: 61
 29432                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 29433  01B1B8  0E80               	movlw	128
 29434  01B1BA  6FF3               	movwf	243,b	;volatile
 29435                           
 29436                           ; BSR set to: 61
 29437                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 29438  01B1BC  6BF4               	clrf	244,b	;volatile
 29439                           
 29440                           ; BSR set to: 61
 29441                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 29442  01B1BE  0E8A               	movlw	138
 29443  01B1C0  6FF5               	movwf	245,b	;volatile
 29444                           
 29445                           ; BSR set to: 61
 29446                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 29447  01B1C2  6BF6               	clrf	246,b	;volatile
 29448                           
 29449                           ; BSR set to: 61
 29450                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 29451  01B1C4  6BF7               	clrf	247,b	;volatile
 29452                           
 29453                           ; BSR set to: 61
 29454                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 29455  01B1C6  6BF8               	clrf	248,b	;volatile
 29456                           
 29457                           ; BSR set to: 61
 29458                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 29459  01B1C8  6BF9               	clrf	249,b	;volatile
 29460                           
 29461                           ; BSR set to: 61
 29462                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 29463  01B1CA  6BFA               	clrf	250,b	;volatile
 29464                           
 29465                           ; BSR set to: 61
 29466                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 29467  01B1CC  6A47               	clrf	_uart1RxHead^0,c	;volatile
 29468                           
 29469                           ; BSR set to: 61
 29470                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 29471  01B1CE  6A46               	clrf	_uart1RxTail^0,c	;volatile
 29472                           
 29473                           ; BSR set to: 61
 29474                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 29475  01B1D0  0100               	movlb	0	; () banked
 29476  01B1D2  6BBC               	clrf	_uart1RxCount& (0+255),b	;volatile
 29477                           
 29478                           ; BSR set to: 0
 29479                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 29480  01B1D4  0139               	movlb	57	; () banked
 29481  01B1D6  8793               	bsf	147,3,b	;volatile
 29482                           
 29483                           ; BSR set to: 57
 29484                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 29485  01B1D8  0012               	return		;funcret
 29486  01B1DA                     __end_of_UART1_Initialize:
 29487                           	opt callstack 0
 29488                           
 29489 ;; *************** function _UART1_SetRxInterruptHandler *****************
 29490 ;; Defined at:
 29491 ;;		line 207 in file "mcc_generated_files/uart1.c"
 29492 ;; Parameters:    Size  Location     Type
 29493 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29494 ;;		 -> UART1_Receive_ISR(1), 
 29495 ;; Auto vars:     Size  Location     Type
 29496 ;;		None
 29497 ;; Return value:  Size  Location     Type
 29498 ;;                  1  [STACK] void 
 29499 ;; Registers used:
 29500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29501 ;; Tracked objects:
 29502 ;;		On entry : 3F/39
 29503 ;;		On exit  : 0/0
 29504 ;;		Unchanged: 0/0
 29505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29510 ;;Total ram usage:        0 bytes
 29511 ;; Hardware stack levels used:    1
 29512 ;; Hardware stack levels required when called:   15
 29513 ;; This function calls:
 29514 ;;		Nothing
 29515 ;; This function is called by:
 29516 ;;		_UART1_Initialize
 29517 ;; This function uses a reentrant model
 29518 ;;
 29519                           
 29520                           	psect	text112
 29521  01B932                     __ptext112:
 29522                           	opt callstack 0
 29523  01B932                     _UART1_SetRxInterruptHandler:
 29524                           	opt callstack 13
 29525                           
 29526                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 29527                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29528                           
 29529                           ; BSR set to: 57
 29530                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29531                           ;incstack = 0
 29532  01B932  50E1               	movf	fsr1l,w,c
 29533  01B934  0FFD               	addlw	-3
 29534  01B936  6ED9               	movwf	fsr2l,c
 29535  01B938  50E2               	movf	fsr1h,w,c
 29536  01B93A  6EDA               	movwf	fsr2h,c
 29537  01B93C  0EFF               	movlw	255
 29538  01B93E  22DA               	addwfc	fsr2h,f,c
 29539  01B940  006F FF78  F09F    	movff	postinc2,_UART1_RxInterruptHandler
 29540  01B946  006F FF78  F0A0    	movff	postinc2,_UART1_RxInterruptHandler+1
 29541  01B94C  006F FF74  F0A1    	movff	postdec2,_UART1_RxInterruptHandler+2
 29542                           
 29543                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29544  01B952  52E5               	movf	postdec1,f,c
 29545  01B954  52E5               	movf	postdec1,f,c
 29546  01B956  52E5               	movf	postdec1,f,c
 29547  01B958  0012               	return		;funcret
 29548  01B95A                     __end_of_UART1_SetRxInterruptHandler:
 29549                           	opt callstack 0
 29550                           
 29551 ;; *************** function _TMR6_Initialize *****************
 29552 ;; Defined at:
 29553 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 29554 ;; Parameters:    Size  Location     Type
 29555 ;;		None
 29556 ;; Auto vars:     Size  Location     Type
 29557 ;;		None
 29558 ;; Return value:  Size  Location     Type
 29559 ;;                  1  [STACK] void 
 29560 ;; Registers used:
 29561 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29562 ;; Tracked objects:
 29563 ;;		On entry : 3F/39
 29564 ;;		On exit  : 0/0
 29565 ;;		Unchanged: 0/0
 29566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29571 ;;Total ram usage:        0 bytes
 29572 ;; Hardware stack levels used:    1
 29573 ;; Hardware stack levels required when called:   16
 29574 ;; This function calls:
 29575 ;;		_TMR6_SetInterruptHandler
 29576 ;; This function is called by:
 29577 ;;		_SYSTEM_Initialize
 29578 ;; This function uses a reentrant model
 29579 ;;
 29580                           
 29581                           	psect	text113
 29582  01B7F0                     __ptext113:
 29583                           	opt callstack 0
 29584  01B7F0                     _TMR6_Initialize:
 29585                           	opt callstack 13
 29586                           
 29587                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 29588                           
 29589                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29590                           ;incstack = 0
 29591  01B7F0  0E01               	movlw	1
 29592  01B7F2  6E96               	movwf	150,c	;volatile
 29593                           
 29594                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 29595  01B7F4  6A95               	clrf	149,c	;volatile
 29596                           
 29597                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 29598  01B7F6  6A97               	clrf	151,c	;volatile
 29599                           
 29600                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 29601  01B7F8  0E7C               	movlw	124
 29602  01B7FA  6E93               	movwf	147,c	;volatile
 29603                           
 29604                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 29605  01B7FC  6A92               	clrf	146,c	;volatile
 29606                           
 29607                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 29608  01B7FE  0139               	movlb	57	; () banked
 29609  01B800  91A9               	bcf	169,0,b	;volatile
 29610                           
 29611                           ; BSR set to: 57
 29612                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 29613  01B802  8199               	bsf	153,0,b	;volatile
 29614                           
 29615                           ; BSR set to: 57
 29616                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 29617  01B804  0EB2               	movlw	low _TMR6_DefaultInterruptHandler
 29618  01B806  6EE6               	movwf	postinc1,c
 29619  01B808  0EB0               	movlw	high _TMR6_DefaultInterruptHandler
 29620  01B80A  6EE6               	movwf	postinc1,c
 29621  01B80C  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 29622  01B80E  6EE6               	movwf	postinc1,c
 29623  01B810  ECAD  F0DC         	call	_TMR6_SetInterruptHandler	;wreg free
 29624                           
 29625                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 29626  01B814  0EE0               	movlw	224
 29627  01B816  6E94               	movwf	148,c	;volatile
 29628                           
 29629                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29630  01B818  0012               	return		;funcret
 29631  01B81A                     __end_of_TMR6_Initialize:
 29632                           	opt callstack 0
 29633                           
 29634 ;; *************** function _TMR6_SetInterruptHandler *****************
 29635 ;; Defined at:
 29636 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 29637 ;; Parameters:    Size  Location     Type
 29638 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29639 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 29640 ;; Auto vars:     Size  Location     Type
 29641 ;;		None
 29642 ;; Return value:  Size  Location     Type
 29643 ;;                  1  [STACK] void 
 29644 ;; Registers used:
 29645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29646 ;; Tracked objects:
 29647 ;;		On entry : 3F/39
 29648 ;;		On exit  : 0/0
 29649 ;;		Unchanged: 0/0
 29650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29655 ;;Total ram usage:        0 bytes
 29656 ;; Hardware stack levels used:    1
 29657 ;; Hardware stack levels required when called:   15
 29658 ;; This function calls:
 29659 ;;		Nothing
 29660 ;; This function is called by:
 29661 ;;		_TMR6_Initialize
 29662 ;; This function uses a reentrant model
 29663 ;;
 29664                           
 29665                           	psect	text114
 29666  01B95A                     __ptext114:
 29667                           	opt callstack 0
 29668  01B95A                     _TMR6_SetInterruptHandler:
 29669                           	opt callstack 13
 29670                           
 29671                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 29672                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29673                           
 29674                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29675                           ;incstack = 0
 29676  01B95A  50E1               	movf	fsr1l,w,c
 29677  01B95C  0FFD               	addlw	-3
 29678  01B95E  6ED9               	movwf	fsr2l,c
 29679  01B960  50E2               	movf	fsr1h,w,c
 29680  01B962  6EDA               	movwf	fsr2h,c
 29681  01B964  0EFF               	movlw	255
 29682  01B966  22DA               	addwfc	fsr2h,f,c
 29683  01B968  006F FF78  F096    	movff	postinc2,_TMR6_InterruptHandler
 29684  01B96E  006F FF78  F097    	movff	postinc2,_TMR6_InterruptHandler+1
 29685  01B974  006F FF74  F098    	movff	postdec2,_TMR6_InterruptHandler+2
 29686                           
 29687                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29688  01B97A  52E5               	movf	postdec1,f,c
 29689  01B97C  52E5               	movf	postdec1,f,c
 29690  01B97E  52E5               	movf	postdec1,f,c
 29691  01B980  0012               	return		;funcret
 29692  01B982                     __end_of_TMR6_SetInterruptHandler:
 29693                           	opt callstack 0
 29694                           
 29695 ;; *************** function _TMR5_Initialize *****************
 29696 ;; Defined at:
 29697 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 29698 ;; Parameters:    Size  Location     Type
 29699 ;;		None
 29700 ;; Auto vars:     Size  Location     Type
 29701 ;;		None
 29702 ;; Return value:  Size  Location     Type
 29703 ;;                  1  [STACK] void 
 29704 ;; Registers used:
 29705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 29706 ;; Tracked objects:
 29707 ;;		On entry : 0/39
 29708 ;;		On exit  : 0/0
 29709 ;;		Unchanged: 0/0
 29710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29715 ;;Total ram usage:        0 bytes
 29716 ;; Hardware stack levels used:    1
 29717 ;; Hardware stack levels required when called:   16
 29718 ;; This function calls:
 29719 ;;		_TMR5_SetInterruptHandler
 29720 ;; This function is called by:
 29721 ;;		_SYSTEM_Initialize
 29722 ;; This function uses a reentrant model
 29723 ;;
 29724                           
 29725                           	psect	text115
 29726  01B1DA                     __ptext115:
 29727                           	opt callstack 0
 29728  01B1DA                     _TMR5_Initialize:
 29729                           	opt callstack 13
 29730                           
 29731                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 29732                           
 29733                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29734                           ;incstack = 0
 29735  01B1DA  6A9B               	clrf	155,c	;volatile
 29736                           
 29737                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 29738  01B1DC  6A9C               	clrf	156,c	;volatile
 29739                           
 29740                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 29741  01B1DE  0E01               	movlw	1
 29742  01B1E0  6E9D               	movwf	157,c	;volatile
 29743                           
 29744                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 29745  01B1E2  0E63               	movlw	99
 29746  01B1E4  6E99               	movwf	153,c	;volatile
 29747                           
 29748                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 29749  01B1E6  0EC0               	movlw	192
 29750  01B1E8  6E98               	movwf	152,c	;volatile
 29751                           
 29752                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 29753  01B1EA  5098               	movf	152,w,c	;volatile
 29754  01B1EC  006F FE64  F001    	movff	16281,btemp	;volatile
 29755  01B1F2  6A02               	clrf	(btemp+1)^0,c
 29756  01B1F4  0060  F004  F002   	movff	btemp,btemp+1
 29757  01B1FA  6A01               	clrf	btemp^0,c
 29758  01B1FC  1001               	iorwf	btemp^0,w,c
 29759  01B1FE  0100               	movlb	0	; () banked
 29760  01B200  6FB6               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 29761  01B202  5002               	movf	(btemp+1)^0,w,c
 29762  01B204  6FB7               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 29763                           
 29764                           ; BSR set to: 0
 29765                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 29766  01B206  0139               	movlb	57	; () banked
 29767  01B208  9DA8               	bcf	168,6,b	;volatile
 29768                           
 29769                           ; BSR set to: 57
 29770                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 29771  01B20A  8D98               	bsf	152,6,b	;volatile
 29772                           
 29773                           ; BSR set to: 57
 29774                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 29775  01B20C  0E70               	movlw	low _TMR5_DefaultInterruptHandler
 29776  01B20E  6EE6               	movwf	postinc1,c
 29777  01B210  0EB5               	movlw	high _TMR5_DefaultInterruptHandler
 29778  01B212  6EE6               	movwf	postinc1,c
 29779  01B214  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 29780  01B216  6EE6               	movwf	postinc1,c
 29781  01B218  ECC1  F0DC         	call	_TMR5_SetInterruptHandler	;wreg free
 29782                           
 29783                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 29784  01B21C  0E31               	movlw	49
 29785  01B21E  6E9A               	movwf	154,c	;volatile
 29786                           
 29787                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29788  01B220  0012               	return		;funcret
 29789  01B222                     __end_of_TMR5_Initialize:
 29790                           	opt callstack 0
 29791                           
 29792 ;; *************** function _TMR5_SetInterruptHandler *****************
 29793 ;; Defined at:
 29794 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 29795 ;; Parameters:    Size  Location     Type
 29796 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29797 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 29798 ;; Auto vars:     Size  Location     Type
 29799 ;;		None
 29800 ;; Return value:  Size  Location     Type
 29801 ;;                  1  [STACK] void 
 29802 ;; Registers used:
 29803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29804 ;; Tracked objects:
 29805 ;;		On entry : 3F/39
 29806 ;;		On exit  : 0/0
 29807 ;;		Unchanged: 0/0
 29808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29813 ;;Total ram usage:        0 bytes
 29814 ;; Hardware stack levels used:    1
 29815 ;; Hardware stack levels required when called:   15
 29816 ;; This function calls:
 29817 ;;		Nothing
 29818 ;; This function is called by:
 29819 ;;		_TMR5_Initialize
 29820 ;; This function uses a reentrant model
 29821 ;;
 29822                           
 29823                           	psect	text116
 29824  01B982                     __ptext116:
 29825                           	opt callstack 0
 29826  01B982                     _TMR5_SetInterruptHandler:
 29827                           	opt callstack 13
 29828                           
 29829                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 29830                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29831                           
 29832                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29833                           ;incstack = 0
 29834  01B982  50E1               	movf	fsr1l,w,c
 29835  01B984  0FFD               	addlw	-3
 29836  01B986  6ED9               	movwf	fsr2l,c
 29837  01B988  50E2               	movf	fsr1h,w,c
 29838  01B98A  6EDA               	movwf	fsr2h,c
 29839  01B98C  0EFF               	movlw	255
 29840  01B98E  22DA               	addwfc	fsr2h,f,c
 29841  01B990  006F FF78  F093    	movff	postinc2,_TMR5_InterruptHandler
 29842  01B996  006F FF78  F094    	movff	postinc2,_TMR5_InterruptHandler+1
 29843  01B99C  006F FF74  F095    	movff	postdec2,_TMR5_InterruptHandler+2
 29844                           
 29845                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29846  01B9A2  52E5               	movf	postdec1,f,c
 29847  01B9A4  52E5               	movf	postdec1,f,c
 29848  01B9A6  52E5               	movf	postdec1,f,c
 29849  01B9A8  0012               	return		;funcret
 29850  01B9AA                     __end_of_TMR5_SetInterruptHandler:
 29851                           	opt callstack 0
 29852                           
 29853 ;; *************** function _TMR3_Initialize *****************
 29854 ;; Defined at:
 29855 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 29856 ;; Parameters:    Size  Location     Type
 29857 ;;		None
 29858 ;; Auto vars:     Size  Location     Type
 29859 ;;		None
 29860 ;; Return value:  Size  Location     Type
 29861 ;;                  1  [STACK] void 
 29862 ;; Registers used:
 29863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 29864 ;; Tracked objects:
 29865 ;;		On entry : 0/39
 29866 ;;		On exit  : 0/0
 29867 ;;		Unchanged: 0/0
 29868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29873 ;;Total ram usage:        0 bytes
 29874 ;; Hardware stack levels used:    1
 29875 ;; Hardware stack levels required when called:   16
 29876 ;; This function calls:
 29877 ;;		_TMR3_SetInterruptHandler
 29878 ;; This function is called by:
 29879 ;;		_SYSTEM_Initialize
 29880 ;; This function uses a reentrant model
 29881 ;;
 29882                           
 29883                           	psect	text117
 29884  01B222                     __ptext117:
 29885                           	opt callstack 0
 29886  01B222                     _TMR3_Initialize:
 29887                           	opt callstack 13
 29888                           
 29889                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 29890                           
 29891                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29892                           ;incstack = 0
 29893  01B222  6AA7               	clrf	167,c	;volatile
 29894                           
 29895                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 29896  01B224  6AA8               	clrf	168,c	;volatile
 29897                           
 29898                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 29899  01B226  0E01               	movlw	1
 29900  01B228  6EA9               	movwf	169,c	;volatile
 29901                           
 29902                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 29903  01B22A  0E3C               	movlw	60
 29904  01B22C  6EA5               	movwf	165,c	;volatile
 29905                           
 29906                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 29907  01B22E  0EB0               	movlw	176
 29908  01B230  6EA4               	movwf	164,c	;volatile
 29909                           
 29910                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 29911  01B232  50A4               	movf	164,w,c	;volatile
 29912  01B234  006F FE94  F001    	movff	16293,btemp	;volatile
 29913  01B23A  6A02               	clrf	(btemp+1)^0,c
 29914  01B23C  0060  F004  F002   	movff	btemp,btemp+1
 29915  01B242  6A01               	clrf	btemp^0,c
 29916  01B244  1001               	iorwf	btemp^0,w,c
 29917  01B246  0100               	movlb	0	; () banked
 29918  01B248  6FB2               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 29919  01B24A  5002               	movf	(btemp+1)^0,w,c
 29920  01B24C  6FB3               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 29921                           
 29922                           ; BSR set to: 0
 29923                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 29924  01B24E  0139               	movlb	57	; () banked
 29925  01B250  9DA6               	bcf	166,6,b	;volatile
 29926                           
 29927                           ; BSR set to: 57
 29928                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 29929  01B252  8D96               	bsf	150,6,b	;volatile
 29930                           
 29931                           ; BSR set to: 57
 29932                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 29933  01B254  0E98               	movlw	low _TMR3_DefaultInterruptHandler
 29934  01B256  6EE6               	movwf	postinc1,c
 29935  01B258  0EBE               	movlw	high _TMR3_DefaultInterruptHandler
 29936  01B25A  6EE6               	movwf	postinc1,c
 29937  01B25C  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 29938  01B25E  6EE6               	movwf	postinc1,c
 29939  01B260  ECD5  F0DC         	call	_TMR3_SetInterruptHandler	;wreg free
 29940                           
 29941                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 29942  01B264  0E31               	movlw	49
 29943  01B266  6EA6               	movwf	166,c	;volatile
 29944                           
 29945                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29946  01B268  0012               	return		;funcret
 29947  01B26A                     __end_of_TMR3_Initialize:
 29948                           	opt callstack 0
 29949                           
 29950 ;; *************** function _TMR3_SetInterruptHandler *****************
 29951 ;; Defined at:
 29952 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 29953 ;; Parameters:    Size  Location     Type
 29954 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29955 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 29956 ;; Auto vars:     Size  Location     Type
 29957 ;;		None
 29958 ;; Return value:  Size  Location     Type
 29959 ;;                  1  [STACK] void 
 29960 ;; Registers used:
 29961 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29962 ;; Tracked objects:
 29963 ;;		On entry : 0/0
 29964 ;;		On exit  : 0/0
 29965 ;;		Unchanged: 0/0
 29966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29971 ;;Total ram usage:        0 bytes
 29972 ;; Hardware stack levels used:    1
 29973 ;; Hardware stack levels required when called:   15
 29974 ;; This function calls:
 29975 ;;		Nothing
 29976 ;; This function is called by:
 29977 ;;		_TMR3_Initialize
 29978 ;;		_init_bsoc
 29979 ;; This function uses a reentrant model
 29980 ;;
 29981                           
 29982                           	psect	text118
 29983  01B9AA                     __ptext118:
 29984                           	opt callstack 0
 29985  01B9AA                     _TMR3_SetInterruptHandler:
 29986                           	opt callstack 14
 29987                           
 29988                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 29989                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29990                           
 29991                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29992                           ;incstack = 0
 29993  01B9AA  50E1               	movf	fsr1l,w,c
 29994  01B9AC  0FFD               	addlw	-3
 29995  01B9AE  6ED9               	movwf	fsr2l,c
 29996  01B9B0  50E2               	movf	fsr1h,w,c
 29997  01B9B2  6EDA               	movwf	fsr2h,c
 29998  01B9B4  0EFF               	movlw	255
 29999  01B9B6  22DA               	addwfc	fsr2h,f,c
 30000  01B9B8  006F FF78  F090    	movff	postinc2,_TMR3_InterruptHandler
 30001  01B9BE  006F FF78  F091    	movff	postinc2,_TMR3_InterruptHandler+1
 30002  01B9C4  006F FF74  F092    	movff	postdec2,_TMR3_InterruptHandler+2
 30003                           
 30004                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30005  01B9CA  52E5               	movf	postdec1,f,c
 30006  01B9CC  52E5               	movf	postdec1,f,c
 30007  01B9CE  52E5               	movf	postdec1,f,c
 30008  01B9D0  0012               	return		;funcret
 30009  01B9D2                     __end_of_TMR3_SetInterruptHandler:
 30010                           	opt callstack 0
 30011                           
 30012 ;; *************** function _TMR2_Initialize *****************
 30013 ;; Defined at:
 30014 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 30015 ;; Parameters:    Size  Location     Type
 30016 ;;		None
 30017 ;; Auto vars:     Size  Location     Type
 30018 ;;		None
 30019 ;; Return value:  Size  Location     Type
 30020 ;;                  1  [STACK] void 
 30021 ;; Registers used:
 30022 ;;		wreg, status,2
 30023 ;; Tracked objects:
 30024 ;;		On entry : 0/3E
 30025 ;;		On exit  : 3F/39
 30026 ;;		Unchanged: 0/0
 30027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30032 ;;Total ram usage:        0 bytes
 30033 ;; Hardware stack levels used:    1
 30034 ;; Hardware stack levels required when called:   15
 30035 ;; This function calls:
 30036 ;;		Nothing
 30037 ;; This function is called by:
 30038 ;;		_SYSTEM_Initialize
 30039 ;; This function uses a reentrant model
 30040 ;;
 30041                           
 30042                           	psect	text119
 30043  01BD06                     __ptext119:
 30044                           	opt callstack 0
 30045  01BD06                     _TMR2_Initialize:
 30046                           	opt callstack 14
 30047                           
 30048                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 30049                           
 30050                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30051                           ;incstack = 0
 30052  01BD06  0E01               	movlw	1
 30053  01BD08  6EAE               	movwf	174,c	;volatile
 30054                           
 30055                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 30056  01BD0A  6AAD               	clrf	173,c	;volatile
 30057                           
 30058                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 30059  01BD0C  6AAF               	clrf	175,c	;volatile
 30060                           
 30061                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 30062  01BD0E  0E63               	movlw	99
 30063  01BD10  6EAB               	movwf	171,c	;volatile
 30064                           
 30065                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 30066  01BD12  6AAA               	clrf	170,c	;volatile
 30067                           
 30068                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 30069  01BD14  0139               	movlb	57	; () banked
 30070  01BD16  95A4               	bcf	164,2,b	;volatile
 30071                           
 30072                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 30073  01BD18  0EC0               	movlw	192
 30074  01BD1A  6EAC               	movwf	172,c	;volatile
 30075                           
 30076                           ; BSR set to: 57
 30077                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30078  01BD1C  0012               	return		;funcret
 30079  01BD1E                     __end_of_TMR2_Initialize:
 30080                           	opt callstack 0
 30081                           
 30082 ;; *************** function _SPI1_Initialize *****************
 30083 ;; Defined at:
 30084 ;;		line 64 in file "mcc_generated_files/spi1.c"
 30085 ;; Parameters:    Size  Location     Type
 30086 ;;		None
 30087 ;; Auto vars:     Size  Location     Type
 30088 ;;		None
 30089 ;; Return value:  Size  Location     Type
 30090 ;;                  1  [STACK] void 
 30091 ;; Registers used:
 30092 ;;		wreg, status,2
 30093 ;; Tracked objects:
 30094 ;;		On entry : 3F/39
 30095 ;;		On exit  : 3F/3D
 30096 ;;		Unchanged: 0/0
 30097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30102 ;;Total ram usage:        0 bytes
 30103 ;; Hardware stack levels used:    1
 30104 ;; Hardware stack levels required when called:   15
 30105 ;; This function calls:
 30106 ;;		Nothing
 30107 ;; This function is called by:
 30108 ;;		_SYSTEM_Initialize
 30109 ;; This function uses a reentrant model
 30110 ;;
 30111                           
 30112                           	psect	text120
 30113  01BD1E                     __ptext120:
 30114                           	opt callstack 0
 30115  01BD1E                     _SPI1_Initialize:
 30116                           	opt callstack 14
 30117                           
 30118                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 30119                           
 30120                           ; BSR set to: 57
 30121                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30122                           ;incstack = 0
 30123  01BD1E  0E40               	movlw	64
 30124  01BD20  013D               	movlb	61	; () banked
 30125  01BD22  6F15               	movwf	21,b	;volatile
 30126                           
 30127                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 30128  01BD24  0E03               	movlw	3
 30129  01BD26  6F16               	movwf	22,b	;volatile
 30130                           
 30131                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 30132  01BD28  0E4F               	movlw	79
 30133  01BD2A  6F19               	movwf	25,b	;volatile
 30134                           
 30135                           ; BSR set to: 61
 30136                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 30137  01BD2C  6B1C               	clrf	28,b	;volatile
 30138                           
 30139                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 30140  01BD2E  0E83               	movlw	131
 30141  01BD30  6F14               	movwf	20,b	;volatile
 30142                           
 30143                           ; BSR set to: 61
 30144                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30145  01BD32  0012               	return		;funcret
 30146  01BD34                     __end_of_SPI1_Initialize:
 30147                           	opt callstack 0
 30148                           
 30149 ;; *************** function _PWM8_Initialize *****************
 30150 ;; Defined at:
 30151 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 30152 ;; Parameters:    Size  Location     Type
 30153 ;;		None
 30154 ;; Auto vars:     Size  Location     Type
 30155 ;;		None
 30156 ;; Return value:  Size  Location     Type
 30157 ;;                  1  [STACK] void 
 30158 ;; Registers used:
 30159 ;;		wreg, status,2
 30160 ;; Tracked objects:
 30161 ;;		On entry : 3F/39
 30162 ;;		On exit  : 3F/3F
 30163 ;;		Unchanged: 0/0
 30164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30169 ;;Total ram usage:        0 bytes
 30170 ;; Hardware stack levels used:    1
 30171 ;; Hardware stack levels required when called:   15
 30172 ;; This function calls:
 30173 ;;		Nothing
 30174 ;; This function is called by:
 30175 ;;		_SYSTEM_Initialize
 30176 ;; This function uses a reentrant model
 30177 ;;
 30178                           
 30179                           	psect	text121
 30180  01BD34                     __ptext121:
 30181                           	opt callstack 0
 30182  01BD34                     _PWM8_Initialize:
 30183                           	opt callstack 14
 30184                           
 30185                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 30186                           
 30187                           ; BSR set to: 61
 30188                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30189                           ;incstack = 0
 30190  01BD34  0E80               	movlw	128
 30191  01BD36  6E62               	movwf	98,c	;volatile
 30192                           
 30193                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 30194  01BD38  6A61               	clrf	97,c	;volatile
 30195                           
 30196                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 30197  01BD3A  0E40               	movlw	64
 30198  01BD3C  6E60               	movwf	96,c	;volatile
 30199                           
 30200                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 30201  01BD3E  013F               	movlb	63	; () banked
 30202  01BD40  515F               	movf	95,w,b	;volatile
 30203  01BD42  0B3F               	andlw	-193
 30204  01BD44  0940               	iorlw	64
 30205  01BD46  6F5F               	movwf	95,b	;volatile
 30206                           
 30207                           ; BSR set to: 63
 30208                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30209  01BD48  0012               	return		;funcret
 30210  01BD4A                     __end_of_PWM8_Initialize:
 30211                           	opt callstack 0
 30212                           
 30213 ;; *************** function _PMD_Initialize *****************
 30214 ;; Defined at:
 30215 ;;		line 90 in file "mcc_generated_files/mcc.c"
 30216 ;; Parameters:    Size  Location     Type
 30217 ;;		None
 30218 ;; Auto vars:     Size  Location     Type
 30219 ;;		None
 30220 ;; Return value:  Size  Location     Type
 30221 ;;                  1  [STACK] void 
 30222 ;; Registers used:
 30223 ;;		None
 30224 ;; Tracked objects:
 30225 ;;		On entry : 3F/39
 30226 ;;		On exit  : 3F/39
 30227 ;;		Unchanged: 0/0
 30228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30233 ;;Total ram usage:        0 bytes
 30234 ;; Hardware stack levels used:    1
 30235 ;; Hardware stack levels required when called:   15
 30236 ;; This function calls:
 30237 ;;		Nothing
 30238 ;; This function is called by:
 30239 ;;		_SYSTEM_Initialize
 30240 ;; This function uses a reentrant model
 30241 ;;
 30242                           
 30243                           	psect	text122
 30244  01BD60                     __ptext122:
 30245                           	opt callstack 0
 30246  01BD60                     _PMD_Initialize:
 30247                           	opt callstack 14
 30248                           
 30249                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 30250                           
 30251                           ; BSR set to: 63
 30252                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30253                           ;incstack = 0
 30254  01BD60  0139               	movlb	57	; () banked
 30255  01BD62  6BC0               	clrf	192,b	;volatile
 30256                           
 30257                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 30258  01BD64  6BC1               	clrf	193,b	;volatile
 30259                           
 30260                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 30261  01BD66  6BC2               	clrf	194,b	;volatile
 30262                           
 30263                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 30264  01BD68  6BC3               	clrf	195,b	;volatile
 30265                           
 30266                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 30267  01BD6A  6BC4               	clrf	196,b	;volatile
 30268                           
 30269                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 30270  01BD6C  6BC5               	clrf	197,b	;volatile
 30271                           
 30272                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 30273  01BD6E  6BC6               	clrf	198,b	;volatile
 30274                           
 30275                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 30276  01BD70  6BC7               	clrf	199,b	;volatile
 30277                           
 30278                           ; BSR set to: 57
 30279                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 30280  01BD72  0012               	return		;funcret
 30281  01BD74                     __end_of_PMD_Initialize:
 30282                           	opt callstack 0
 30283                           
 30284 ;; *************** function _PIN_MANAGER_Initialize *****************
 30285 ;; Defined at:
 30286 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 30287 ;; Parameters:    Size  Location     Type
 30288 ;;		None
 30289 ;; Auto vars:     Size  Location     Type
 30290 ;;		None
 30291 ;; Return value:  Size  Location     Type
 30292 ;;                  1  [STACK] void 
 30293 ;; Registers used:
 30294 ;;		wreg, status,2
 30295 ;; Tracked objects:
 30296 ;;		On entry : 3F/39
 30297 ;;		On exit  : 3F/3A
 30298 ;;		Unchanged: 0/0
 30299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30304 ;;Total ram usage:        0 bytes
 30305 ;; Hardware stack levels used:    1
 30306 ;; Hardware stack levels required when called:   15
 30307 ;; This function calls:
 30308 ;;		Nothing
 30309 ;; This function is called by:
 30310 ;;		_SYSTEM_Initialize
 30311 ;; This function uses a reentrant model
 30312 ;;
 30313                           
 30314                           	psect	text123
 30315  01A7BE                     __ptext123:
 30316                           	opt callstack 0
 30317  01A7BE                     _PIN_MANAGER_Initialize:
 30318                           	opt callstack 14
 30319                           
 30320                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 30321                           
 30322                           ; BSR set to: 57
 30323                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30324                           ;incstack = 0
 30325  01A7BE  0E07               	movlw	7
 30326  01A7C0  6EBE               	movwf	190,c	;volatile
 30327                           
 30328                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 30329  01A7C2  0E80               	movlw	128
 30330  01A7C4  6EBD               	movwf	189,c	;volatile
 30331                           
 30332                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 30333  01A7C6  6ABA               	clrf	186,c	;volatile
 30334                           
 30335                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x20;
 30336  01A7C8  0E20               	movlw	32
 30337  01A7CA  6EBF               	movwf	191,c	;volatile
 30338                           
 30339                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 30340  01A7CC  6ABB               	clrf	187,c	;volatile
 30341                           
 30342                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 30343  01A7CE  0E07               	movlw	7
 30344  01A7D0  6EBC               	movwf	188,c	;volatile
 30345                           
 30346                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 30347  01A7D2  6AC6               	clrf	198,c	;volatile
 30348                           
 30349                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 30350  01A7D4  0E0F               	movlw	15
 30351  01A7D6  6EC7               	movwf	199,c	;volatile
 30352                           
 30353                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 30354  01A7D8  68C2               	setf	194,c	;volatile
 30355                           
 30356                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 30357  01A7DA  0EBF               	movlw	191
 30358  01A7DC  6EC3               	movwf	195,c	;volatile
 30359                           
 30360                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 30361  01A7DE  0E90               	movlw	144
 30362  01A7E0  6EC4               	movwf	196,c	;volatile
 30363                           
 30364                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 30365  01A7E2  0E0C               	movlw	12
 30366  01A7E4  6EC5               	movwf	197,c	;volatile
 30367                           
 30368                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 30369  01A7E6  013A               	movlb	58	; () banked
 30370  01A7E8  6B70               	clrf	112,b	;volatile
 30371                           
 30372                           ; BSR set to: 58
 30373                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 30374  01A7EA  6B60               	clrf	96,b	;volatile
 30375                           
 30376                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 30377  01A7EC  0E3C               	movlw	60
 30378  01A7EE  6F50               	movwf	80,b	;volatile
 30379                           
 30380                           ; BSR set to: 58
 30381                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 30382  01A7F0  6B80               	clrf	128,b	;volatile
 30383                           
 30384                           ; BSR set to: 58
 30385                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 30386  01A7F2  6B90               	clrf	144,b	;volatile
 30387                           
 30388                           ; BSR set to: 58
 30389                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 30390  01A7F4  6940               	setf	64,b	;volatile
 30391                           
 30392                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 30393  01A7F6  0E0C               	movlw	12
 30394  01A7F8  6F71               	movwf	113,b	;volatile
 30395                           
 30396                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 30397  01A7FA  0E0F               	movlw	15
 30398  01A7FC  6F91               	movwf	145,b	;volatile
 30399                           
 30400                           ; BSR set to: 58
 30401                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 30402  01A7FE  6B81               	clrf	129,b	;volatile
 30403                           
 30404                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 30405  01A800  0E83               	movlw	131
 30406  01A802  6F51               	movwf	81,b	;volatile
 30407                           
 30408                           ; BSR set to: 58
 30409                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 30410  01A804  6B41               	clrf	65,b	;volatile
 30411                           
 30412                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 30413  01A806  0E97               	movlw	151
 30414  01A808  6F61               	movwf	97,b	;volatile
 30415                           
 30416                           ; BSR set to: 58
 30417                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 30418  01A80A  6B82               	clrf	130,b	;volatile
 30419                           
 30420                           ; BSR set to: 58
 30421                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 30422  01A80C  6B92               	clrf	146,b	;volatile
 30423                           
 30424                           ; BSR set to: 58
 30425                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 30426  01A80E  6B42               	clrf	66,b	;volatile
 30427                           
 30428                           ; BSR set to: 58
 30429                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 30430  01A810  6B52               	clrf	82,b	;volatile
 30431                           
 30432                           ; BSR set to: 58
 30433                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 30434  01A812  6B62               	clrf	98,b	;volatile
 30435                           
 30436                           ; BSR set to: 58
 30437                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 30438  01A814  6B72               	clrf	114,b	;volatile
 30439                           
 30440                           ; BSR set to: 58
 30441                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 30442  01A816  6943               	setf	67,b	;volatile
 30443                           
 30444                           ; BSR set to: 58
 30445                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 30446  01A818  6953               	setf	83,b	;volatile
 30447                           
 30448                           ; BSR set to: 58
 30449                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 30450  01A81A  6963               	setf	99,b	;volatile
 30451                           
 30452                           ; BSR set to: 58
 30453                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 30454  01A81C  6973               	setf	115,b	;volatile
 30455                           
 30456                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 30457  01A81E  0E07               	movlw	7
 30458  01A820  6F83               	movwf	131,b	;volatile
 30459                           
 30460                           ; BSR set to: 58
 30461                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 30462  01A822  6993               	setf	147,b	;volatile
 30463                           
 30464                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 30465  01A824  0E0F               	movlw	15
 30466  01A826  6FE8               	movwf	232,b	;volatile
 30467                           
 30468                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 30469  01A828  0E13               	movlw	19
 30470  01A82A  6FDE               	movwf	222,b	;volatile
 30471                           
 30472                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 30473  01A82C  0E16               	movlw	22
 30474  01A82E  6F0E               	movwf	14,b	;volatile
 30475                           
 30476                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 30477  01A830  0E1E               	movlw	30
 30478  01A832  6F13               	movwf	19,b	;volatile
 30479                           
 30480                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 30481  01A834  0E08               	movlw	8
 30482  01A836  6FC0               	movwf	192,b	;volatile
 30483                           
 30484                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 30485  01A838  0E10               	movlw	16
 30486  01A83A  6F19               	movwf	25,b	;volatile
 30487                           
 30488                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 30489  01A83C  0E09               	movlw	9
 30490  01A83E  6FC1               	movwf	193,b	;volatile
 30491                           
 30492                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 30493  01A840  0E1F               	movlw	31
 30494  01A842  6F15               	movwf	21,b	;volatile
 30495                           
 30496                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 30497  01A844  0E13               	movlw	19
 30498  01A846  6F16               	movwf	22,b	;volatile
 30499                           
 30500                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 30501  01A848  0E17               	movlw	23
 30502  01A84A  6FE5               	movwf	229,b	;volatile
 30503                           
 30504                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 30505  01A84C  0E14               	movlw	20
 30506  01A84E  6FDF               	movwf	223,b	;volatile
 30507                           
 30508                           ; BSR set to: 58
 30509                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 30510  01A850  0012               	return		;funcret
 30511  01A852                     __end_of_PIN_MANAGER_Initialize:
 30512                           	opt callstack 0
 30513                           
 30514 ;; *************** function _OSCILLATOR_Initialize *****************
 30515 ;; Defined at:
 30516 ;;		line 72 in file "mcc_generated_files/mcc.c"
 30517 ;; Parameters:    Size  Location     Type
 30518 ;;		None
 30519 ;; Auto vars:     Size  Location     Type
 30520 ;;		None
 30521 ;; Return value:  Size  Location     Type
 30522 ;;                  1  [STACK] void 
 30523 ;; Registers used:
 30524 ;;		wreg, status,2
 30525 ;; Tracked objects:
 30526 ;;		On entry : 3F/3A
 30527 ;;		On exit  : 3F/39
 30528 ;;		Unchanged: 0/0
 30529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30534 ;;Total ram usage:        0 bytes
 30535 ;; Hardware stack levels used:    1
 30536 ;; Hardware stack levels required when called:   15
 30537 ;; This function calls:
 30538 ;;		Nothing
 30539 ;; This function is called by:
 30540 ;;		_SYSTEM_Initialize
 30541 ;; This function uses a reentrant model
 30542 ;;
 30543                           
 30544                           	psect	text124
 30545  01BD4A                     __ptext124:
 30546                           	opt callstack 0
 30547  01BD4A                     _OSCILLATOR_Initialize:
 30548                           	opt callstack 14
 30549                           
 30550                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 30551                           
 30552                           ; BSR set to: 58
 30553                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30554                           ;incstack = 0
 30555  01BD4A  0E20               	movlw	32
 30556  01BD4C  0139               	movlb	57	; () banked
 30557  01BD4E  6FD9               	movwf	217,b	;volatile
 30558                           
 30559                           ; BSR set to: 57
 30560                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 30561  01BD50  6BDB               	clrf	219,b	;volatile
 30562                           
 30563                           ; BSR set to: 57
 30564                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 30565  01BD52  6BDD               	clrf	221,b	;volatile
 30566                           
 30567                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 30568  01BD54  0E02               	movlw	2
 30569  01BD56  6FDF               	movwf	223,b	;volatile
 30570                           
 30571                           ; BSR set to: 57
 30572                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 30573  01BD58  6BDE               	clrf	222,b	;volatile
 30574  01BD5A                     l169:
 30575                           
 30576                           ; BSR set to: 57
 30577                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 30578  01BD5A  B1DC               	btfsc	220,0,b	;volatile
 30579  01BD5C  0012               	return	
 30580  01BD5E  D7FD               	goto	l169
 30581  01BD60                     __end_of_OSCILLATOR_Initialize:
 30582                           	opt callstack 0
 30583                           
 30584 ;; *************** function _INTERRUPT_Initialize *****************
 30585 ;; Defined at:
 30586 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 30587 ;; Parameters:    Size  Location     Type
 30588 ;;		None
 30589 ;; Auto vars:     Size  Location     Type
 30590 ;;  state           1  [STACK] _Bool 
 30591 ;; Return value:  Size  Location     Type
 30592 ;;                  1  [STACK] void 
 30593 ;; Registers used:
 30594 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 30595 ;; Tracked objects:
 30596 ;;		On entry : 0/0
 30597 ;;		On exit  : 3F/39
 30598 ;;		Unchanged: 0/0
 30599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30604 ;;Total ram usage:        0 bytes
 30605 ;; Hardware stack levels used:    1
 30606 ;; Hardware stack levels required when called:   15
 30607 ;; This function calls:
 30608 ;;		Nothing
 30609 ;; This function is called by:
 30610 ;;		_SYSTEM_Initialize
 30611 ;; This function uses a reentrant model
 30612 ;;
 30613                           
 30614                           	psect	text125
 30615  01AD1A                     __ptext125:
 30616                           	opt callstack 0
 30617  01AD1A                     _INTERRUPT_Initialize:
 30618                           	opt callstack 0
 30619                           
 30620                           ; BSR set to: 57
 30621                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30622  01AD1A  52E6               	movf	postinc1,f,c
 30623                           
 30624                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 30625                           
 30626                           ;incstack = 0
 30627  01AD1C  8AD2               	bsf	210,5,c	;volatile
 30628                           
 30629                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 30630  01AD1E  AED2               	btfss	16338,7,c	;volatile
 30631  01AD20  D003               	goto	u9330
 30632  01AD22  6A0C               	clrf	(btemp+11)^0,c
 30633  01AD24  2A0C               	incf	(btemp+11)^0,f,c
 30634  01AD26  D001               	goto	u9348
 30635  01AD28                     u9330:
 30636  01AD28  6A0C               	clrf	(btemp+11)^0,c
 30637  01AD2A                     u9348:
 30638                           
 30639                           ;stkvar	_state @ sp[(-1)+0]
 30640  01AD2A  0EFF               	movlw	-1
 30641  01AD2C  0060  F033  FFE3   	movff	btemp+11,plusw1
 30642                           
 30643                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 30644  01AD32  9ED2               	bcf	16338,7,c	;volatile
 30645                           
 30646                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 30647  01AD34  0E55               	movlw	85
 30648  01AD36  6ED4               	movwf	212,c	;volatile
 30649                           
 30650                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 30651  01AD38  0EAA               	movlw	170
 30652  01AD3A  6ED4               	movwf	212,c	;volatile
 30653                           
 30654                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 30655  01AD3C  90D4               	bcf	212,0,c	;volatile
 30656                           
 30657                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 30658  01AD3E  0138               	movlb	56	; () banked
 30659  01AD40  6B9F               	clrf	159,b	;volatile
 30660                           
 30661                           ; BSR set to: 56
 30662                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 30663  01AD42  6B9E               	clrf	158,b	;volatile
 30664                           
 30665                           ; BSR set to: 56
 30666                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 30667  01AD44  0E08               	movlw	8
 30668  01AD46  6F9D               	movwf	157,b	;volatile
 30669                           
 30670                           ; BSR set to: 56
 30671                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 30672  01AD48  0E55               	movlw	85
 30673  01AD4A  6ED4               	movwf	212,c	;volatile
 30674                           
 30675                           ; BSR set to: 56
 30676                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 30677  01AD4C  0EAA               	movlw	170
 30678  01AD4E  6ED4               	movwf	212,c	;volatile
 30679                           
 30680                           ; BSR set to: 56
 30681                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 30682  01AD50  80D4               	bsf	212,0,c	;volatile
 30683                           
 30684                           ; BSR set to: 56
 30685                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 30686                           ;stkvar	_state @ sp[(-1)+0]
 30687  01AD52  0EFF               	movlw	-1
 30688  01AD54  B0E3               	btfsc	plusw1,0,c
 30689  01AD56  D002               	bra	u9355
 30690  01AD58  9ED2               	bcf	16338,7,c	;volatile
 30691  01AD5A  D001               	bra	u9356
 30692  01AD5C                     u9355:
 30693  01AD5C  8ED2               	bsf	16338,7,c	;volatile
 30694  01AD5E                     u9356:
 30695                           
 30696                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 30697  01AD5E  0139               	movlb	57	; () banked
 30698  01AD60  8782               	bsf	130,3,b	;volatile
 30699                           
 30700                           ; BSR set to: 57
 30701                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 30702  01AD62  8382               	bsf	130,1,b	;volatile
 30703                           
 30704                           ; BSR set to: 57
 30705                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 30706  01AD64  8182               	bsf	130,0,b	;volatile
 30707                           
 30708                           ; BSR set to: 57
 30709                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 30710  01AD66  8582               	bsf	130,2,b	;volatile
 30711                           
 30712                           ; BSR set to: 57
 30713                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 30714  01AD68  8786               	bsf	134,3,b	;volatile
 30715                           
 30716                           ; BSR set to: 57
 30717                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 30718  01AD6A  8586               	bsf	134,2,b	;volatile
 30719                           
 30720                           ; BSR set to: 57
 30721                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 30722  01AD6C  8783               	bsf	131,3,b	;volatile
 30723                           
 30724                           ; BSR set to: 57
 30725                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 30726  01AD6E  8181               	bsf	129,0,b	;volatile
 30727                           
 30728                           ; BSR set to: 57
 30729                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 30730  01AD70  9185               	bcf	133,0,b	;volatile
 30731                           
 30732                           ; BSR set to: 57
 30733                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 30734  01AD72  8189               	bsf	137,0,b	;volatile
 30735                           
 30736                           ; BSR set to: 57
 30737                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 30738  01AD74  9D88               	bcf	136,6,b	;volatile
 30739                           
 30740                           ; BSR set to: 57
 30741                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR1bits.ADIP = 1;
 30742  01AD76  8581               	bsf	129,2,b	;volatile
 30743                           
 30744                           ; BSR set to: 57
 30745                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADTIP = 1;
 30746  01AD78  8781               	bsf	129,3,b	;volatile
 30747                           
 30748                           ; BSR set to: 57
 30749                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR6bits.TMR3IP = 0;
 30750  01AD7A  9D86               	bcf	134,6,b	;volatile
 30751                           
 30752                           ; BSR set to: 57
 30753                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 30754  01AD7C  52E5               	movf	postdec1,f,c
 30755  01AD7E  0012               	return		;funcret
 30756  01AD80                     __end_of_INTERRUPT_Initialize:
 30757                           	opt callstack 0
 30758                           
 30759 ;; *************** function _FVR_Initialize *****************
 30760 ;; Defined at:
 30761 ;;		line 58 in file "mcc_generated_files/fvr.c"
 30762 ;; Parameters:    Size  Location     Type
 30763 ;;		None
 30764 ;; Auto vars:     Size  Location     Type
 30765 ;;		None
 30766 ;; Return value:  Size  Location     Type
 30767 ;;                  1  [STACK] void 
 30768 ;; Registers used:
 30769 ;;		wreg, status,2
 30770 ;; Tracked objects:
 30771 ;;		On entry : 3F/39
 30772 ;;		On exit  : 3F/3E
 30773 ;;		Unchanged: 0/0
 30774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30779 ;;Total ram usage:        0 bytes
 30780 ;; Hardware stack levels used:    1
 30781 ;; Hardware stack levels required when called:   15
 30782 ;; This function calls:
 30783 ;;		Nothing
 30784 ;; This function is called by:
 30785 ;;		_SYSTEM_Initialize
 30786 ;; This function uses a reentrant model
 30787 ;;
 30788                           
 30789                           	psect	text126
 30790  01BE66                     __ptext126:
 30791                           	opt callstack 0
 30792  01BE66                     _FVR_Initialize:
 30793                           	opt callstack 14
 30794                           
 30795                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 30796                           
 30797                           ; BSR set to: 57
 30798                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30799                           ;incstack = 0
 30800  01BE66  0EAF               	movlw	175
 30801  01BE68  013E               	movlb	62	; () banked
 30802  01BE6A  6FC1               	movwf	193,b	;volatile
 30803                           
 30804                           ; BSR set to: 62
 30805                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 30806  01BE6C  0012               	return		;funcret
 30807  01BE6E                     __end_of_FVR_Initialize:
 30808                           	opt callstack 0
 30809                           
 30810 ;; *************** function _EXT_INT_Initialize *****************
 30811 ;; Defined at:
 30812 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 30813 ;; Parameters:    Size  Location     Type
 30814 ;;		None
 30815 ;; Auto vars:     Size  Location     Type
 30816 ;;		None
 30817 ;; Return value:  Size  Location     Type
 30818 ;;                  1  [STACK] void 
 30819 ;; Registers used:
 30820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30821 ;; Tracked objects:
 30822 ;;		On entry : 3F/3F
 30823 ;;		On exit  : 3F/39
 30824 ;;		Unchanged: 0/0
 30825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30830 ;;Total ram usage:        0 bytes
 30831 ;; Hardware stack levels used:    1
 30832 ;; Hardware stack levels required when called:   16
 30833 ;; This function calls:
 30834 ;;		_INT0_SetInterruptHandler
 30835 ;;		_INT1_SetInterruptHandler
 30836 ;; This function is called by:
 30837 ;;		_SYSTEM_Initialize
 30838 ;; This function uses a reentrant model
 30839 ;;
 30840                           
 30841                           	psect	text127
 30842  01B648                     __ptext127:
 30843                           	opt callstack 0
 30844  01B648                     _EXT_INT_Initialize:
 30845                           	opt callstack 13
 30846                           
 30847                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 30848                           
 30849                           ; BSR set to: 62
 30850                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30851                           ;incstack = 0
 30852  01B648  0139               	movlb	57	; () banked
 30853  01B64A  91A1               	bcf	161,0,b	;volatile
 30854                           
 30855                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 30856  01B64C  90D2               	bcf	210,0,c	;volatile
 30857                           
 30858                           ; BSR set to: 57
 30859                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 30860  01B64E  0E9A               	movlw	low _INT0_DefaultInterruptHandler
 30861  01B650  6EE6               	movwf	postinc1,c
 30862  01B652  0EBE               	movlw	high _INT0_DefaultInterruptHandler
 30863  01B654  6EE6               	movwf	postinc1,c
 30864  01B656  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 30865  01B658  6EE6               	movwf	postinc1,c
 30866  01B65A  ECFD  F0DC         	call	_INT0_SetInterruptHandler	;wreg free
 30867                           
 30868                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 30869  01B65E  0139               	movlb	57	; () banked
 30870  01B660  8191               	bsf	145,0,b	;volatile
 30871                           
 30872                           ; BSR set to: 57
 30873                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 30874  01B662  91A5               	bcf	165,0,b	;volatile
 30875                           
 30876                           ; BSR set to: 57
 30877                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 30878  01B664  92D2               	bcf	210,1,c	;volatile
 30879                           
 30880                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 30881  01B666  0E96               	movlw	low _INT1_DefaultInterruptHandler
 30882  01B668  6EE6               	movwf	postinc1,c
 30883  01B66A  0EBE               	movlw	high _INT1_DefaultInterruptHandler
 30884  01B66C  6EE6               	movwf	postinc1,c
 30885  01B66E  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 30886  01B670  6EE6               	movwf	postinc1,c
 30887  01B672  ECE9  F0DC         	call	_INT1_SetInterruptHandler	;wreg free
 30888                           
 30889                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 30890  01B676  0139               	movlb	57	; () banked
 30891  01B678  8195               	bsf	149,0,b	;volatile
 30892                           
 30893                           ; BSR set to: 57
 30894                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 30895  01B67A  0012               	return		;funcret
 30896  01B67C                     __end_of_EXT_INT_Initialize:
 30897                           	opt callstack 0
 30898                           
 30899 ;; *************** function _INT1_SetInterruptHandler *****************
 30900 ;; Defined at:
 30901 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 30902 ;; Parameters:    Size  Location     Type
 30903 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30904 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 30905 ;; Auto vars:     Size  Location     Type
 30906 ;;		None
 30907 ;; Return value:  Size  Location     Type
 30908 ;;                  1  [STACK] void 
 30909 ;; Registers used:
 30910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30911 ;; Tracked objects:
 30912 ;;		On entry : 3F/39
 30913 ;;		On exit  : 0/0
 30914 ;;		Unchanged: 0/0
 30915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30920 ;;Total ram usage:        0 bytes
 30921 ;; Hardware stack levels used:    1
 30922 ;; Hardware stack levels required when called:   15
 30923 ;; This function calls:
 30924 ;;		Nothing
 30925 ;; This function is called by:
 30926 ;;		_EXT_INT_Initialize
 30927 ;;		_start_switch_handler
 30928 ;; This function uses a reentrant model
 30929 ;;
 30930                           
 30931                           	psect	text128
 30932  01B9D2                     __ptext128:
 30933                           	opt callstack 0
 30934  01B9D2                     _INT1_SetInterruptHandler:
 30935                           	opt callstack 14
 30936                           
 30937                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 30938                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30939                           
 30940                           ; BSR set to: 57
 30941                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30942                           ;incstack = 0
 30943  01B9D2  50E1               	movf	fsr1l,w,c
 30944  01B9D4  0FFD               	addlw	-3
 30945  01B9D6  6ED9               	movwf	fsr2l,c
 30946  01B9D8  50E2               	movf	fsr1h,w,c
 30947  01B9DA  6EDA               	movwf	fsr2h,c
 30948  01B9DC  0EFF               	movlw	255
 30949  01B9DE  22DA               	addwfc	fsr2h,f,c
 30950  01B9E0  006F FF78  F0A8    	movff	postinc2,_INT1_InterruptHandler
 30951  01B9E6  006F FF78  F0A9    	movff	postinc2,_INT1_InterruptHandler+1
 30952  01B9EC  006F FF74  F0AA    	movff	postdec2,_INT1_InterruptHandler+2
 30953                           
 30954                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30955  01B9F2  52E5               	movf	postdec1,f,c
 30956  01B9F4  52E5               	movf	postdec1,f,c
 30957  01B9F6  52E5               	movf	postdec1,f,c
 30958  01B9F8  0012               	return		;funcret
 30959  01B9FA                     __end_of_INT1_SetInterruptHandler:
 30960                           	opt callstack 0
 30961                           
 30962 ;; *************** function _INT0_SetInterruptHandler *****************
 30963 ;; Defined at:
 30964 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 30965 ;; Parameters:    Size  Location     Type
 30966 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30967 ;;		 -> INT0_DefaultInterruptHandler(1), 
 30968 ;; Auto vars:     Size  Location     Type
 30969 ;;		None
 30970 ;; Return value:  Size  Location     Type
 30971 ;;                  1  [STACK] void 
 30972 ;; Registers used:
 30973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30974 ;; Tracked objects:
 30975 ;;		On entry : 3F/39
 30976 ;;		On exit  : 0/0
 30977 ;;		Unchanged: 0/0
 30978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30983 ;;Total ram usage:        0 bytes
 30984 ;; Hardware stack levels used:    1
 30985 ;; Hardware stack levels required when called:   15
 30986 ;; This function calls:
 30987 ;;		Nothing
 30988 ;; This function is called by:
 30989 ;;		_EXT_INT_Initialize
 30990 ;; This function uses a reentrant model
 30991 ;;
 30992                           
 30993                           	psect	text129
 30994  01B9FA                     __ptext129:
 30995                           	opt callstack 0
 30996  01B9FA                     _INT0_SetInterruptHandler:
 30997                           	opt callstack 13
 30998                           
 30999                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 31000                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31001                           
 31002                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31003                           ;incstack = 0
 31004  01B9FA  50E1               	movf	fsr1l,w,c
 31005  01B9FC  0FFD               	addlw	-3
 31006  01B9FE  6ED9               	movwf	fsr2l,c
 31007  01BA00  50E2               	movf	fsr1h,w,c
 31008  01BA02  6EDA               	movwf	fsr2h,c
 31009  01BA04  0EFF               	movlw	255
 31010  01BA06  22DA               	addwfc	fsr2h,f,c
 31011  01BA08  006F FF78  F0AB    	movff	postinc2,_INT0_InterruptHandler
 31012  01BA0E  006F FF78  F0AC    	movff	postinc2,_INT0_InterruptHandler+1
 31013  01BA14  006F FF74  F0AD    	movff	postdec2,_INT0_InterruptHandler+2
 31014                           
 31015                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 31016  01BA1A  52E5               	movf	postdec1,f,c
 31017  01BA1C  52E5               	movf	postdec1,f,c
 31018  01BA1E  52E5               	movf	postdec1,f,c
 31019  01BA20  0012               	return		;funcret
 31020  01BA22                     __end_of_INT0_SetInterruptHandler:
 31021                           	opt callstack 0
 31022                           
 31023 ;; *************** function _DMA2_Initialize *****************
 31024 ;; Defined at:
 31025 ;;		line 61 in file "mcc_generated_files/dma2.c"
 31026 ;; Parameters:    Size  Location     Type
 31027 ;;		None
 31028 ;; Auto vars:     Size  Location     Type
 31029 ;;		None
 31030 ;; Return value:  Size  Location     Type
 31031 ;;                  1  [STACK] void 
 31032 ;; Registers used:
 31033 ;;		wreg, status,2
 31034 ;; Tracked objects:
 31035 ;;		On entry : 3F/3D
 31036 ;;		On exit  : 3F/3B
 31037 ;;		Unchanged: 0/0
 31038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31043 ;;Total ram usage:        0 bytes
 31044 ;; Hardware stack levels used:    1
 31045 ;; Hardware stack levels required when called:   15
 31046 ;; This function calls:
 31047 ;;		Nothing
 31048 ;; This function is called by:
 31049 ;;		_SYSTEM_Initialize
 31050 ;; This function uses a reentrant model
 31051 ;;
 31052                           
 31053                           	psect	text130
 31054  01AF62                     __ptext130:
 31055                           	opt callstack 0
 31056  01AF62                     _DMA2_Initialize:
 31057                           	opt callstack 14
 31058                           
 31059                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 31060                           
 31061                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31062                           ;incstack = 0
 31063  01AF62  0E00               	movlw	0
 31064  01AF64  013B               	movlb	59	; () banked
 31065  01AF66  6FD9               	movwf	217,b	;volatile
 31066  01AF68  0E10               	movlw	16
 31067  01AF6A  6FDA               	movwf	218,b	;volatile
 31068  01AF6C  0E00               	movlw	0
 31069  01AF6E  6FDB               	movwf	219,b	;volatile
 31070                           
 31071                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 31072  01AF70  0E3F               	movlw	63
 31073  01AF72  6FD1               	movwf	209,b	;volatile
 31074  01AF74  0EBB               	movlw	187
 31075  01AF76  6FD0               	movwf	208,b	;volatile
 31076                           
 31077                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 31078  01AF78  0E03               	movlw	3
 31079  01AF7A  6FDD               	movwf	221,b	;volatile
 31080                           
 31081                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 31082  01AF7C  0E00               	movlw	0
 31083  01AF7E  6FD8               	movwf	216,b	;volatile
 31084  01AF80  0E01               	movlw	1
 31085  01AF82  6FD7               	movwf	215,b	;volatile
 31086                           
 31087                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 31088  01AF84  0E00               	movlw	0
 31089  01AF86  6FCF               	movwf	207,b	;volatile
 31090  01AF88  0E01               	movlw	1
 31091  01AF8A  6FCE               	movwf	206,b	;volatile
 31092                           
 31093                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 31094  01AF8C  0E1C               	movlw	28
 31095  01AF8E  6FDF               	movwf	223,b	;volatile
 31096                           
 31097                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 31098  01AF90  0E3D               	movlw	61
 31099  01AF92  6FDE               	movwf	222,b	;volatile
 31100                           
 31101                           ; BSR set to: 59
 31102                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 31103  01AF94  0139               	movlb	57	; () banked
 31104  01AF96  97A5               	bcf	165,3,b	;volatile
 31105                           
 31106                           ; BSR set to: 57
 31107                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 31108  01AF98  95A5               	bcf	165,2,b	;volatile
 31109                           
 31110                           ; BSR set to: 57
 31111                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 31112  01AF9A  9BA5               	bcf	165,5,b	;volatile
 31113                           
 31114                           ; BSR set to: 57
 31115                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 31116  01AF9C  99A5               	bcf	165,4,b	;volatile
 31117                           
 31118                           ; BSR set to: 57
 31119                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 31120  01AF9E  9795               	bcf	149,3,b	;volatile
 31121                           
 31122                           ; BSR set to: 57
 31123                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 31124  01AFA0  9595               	bcf	149,2,b	;volatile
 31125                           
 31126                           ; BSR set to: 57
 31127                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 31128  01AFA2  9B95               	bcf	149,5,b	;volatile
 31129                           
 31130                           ; BSR set to: 57
 31131                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 31132  01AFA4  9995               	bcf	149,4,b	;volatile
 31133  01AFA6  9ED2               	bcf	16338,7,c	;# 
 31134  01AFA8  0139               	banksel	14831	;# 
 31135  01AFAA  0E55               	movlw	85	;# 
 31136  01AFAC  6FEF               	movwf	14831,b	;# 
 31137  01AFAE  0EAA               	movlw	170	;# 
 31138  01AFB0  6FEF               	movwf	14831,b	;# 
 31139  01AFB2  81EF               	bsf	14831,0,b	;# 
 31140  01AFB4  8ED2               	bsf	16338,7,c	;# 
 31141                           
 31142                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 31143  01AFB6  013B               	movlb	59	; () banked
 31144  01AFB8  6BDC               	clrf	220,b	;volatile
 31145                           
 31146                           ; BSR set to: 59
 31147                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31148  01AFBA  0012               	return		;funcret
 31149  01AFBC                     __end_of_DMA2_Initialize:
 31150                           	opt callstack 0
 31151                           
 31152 ;; *************** function _DMA1_Initialize *****************
 31153 ;; Defined at:
 31154 ;;		line 86 in file "mcc_generated_files/dma1.c"
 31155 ;; Parameters:    Size  Location     Type
 31156 ;;		None
 31157 ;; Auto vars:     Size  Location     Type
 31158 ;;		None
 31159 ;; Return value:  Size  Location     Type
 31160 ;;                  1  [STACK] void 
 31161 ;; Registers used:
 31162 ;;		wreg, status,2
 31163 ;; Tracked objects:
 31164 ;;		On entry : 3F/3B
 31165 ;;		On exit  : 3F/3B
 31166 ;;		Unchanged: 0/0
 31167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31172 ;;Total ram usage:        0 bytes
 31173 ;; Hardware stack levels used:    1
 31174 ;; Hardware stack levels required when called:   15
 31175 ;; This function calls:
 31176 ;;		Nothing
 31177 ;; This function is called by:
 31178 ;;		_SYSTEM_Initialize
 31179 ;; This function uses a reentrant model
 31180 ;;
 31181                           
 31182                           	psect	text131
 31183  01ABDC                     __ptext131:
 31184                           	opt callstack 0
 31185  01ABDC                     _DMA1_Initialize:
 31186                           	opt callstack 14
 31187                           
 31188                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 31189                           
 31190                           ; BSR set to: 59
 31191                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31192                           ;incstack = 0
 31193  01ABDC  0E00               	movlw	0
 31194  01ABDE  013B               	movlb	59	; () banked
 31195  01ABE0  6FF9               	movwf	249,b	;volatile
 31196  01ABE2  0E10               	movlw	16
 31197  01ABE4  6FFA               	movwf	250,b	;volatile
 31198  01ABE6  0E00               	movlw	0
 31199  01ABE8  6FFB               	movwf	251,b	;volatile
 31200                           
 31201                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 31202  01ABEA  0E3D               	movlw	61
 31203  01ABEC  6FF1               	movwf	241,b	;volatile
 31204  01ABEE  0E11               	movlw	17
 31205  01ABF0  6FF0               	movwf	240,b	;volatile
 31206                           
 31207                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 31208  01ABF2  0E03               	movlw	3
 31209  01ABF4  6FFD               	movwf	253,b	;volatile
 31210                           
 31211                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 31212  01ABF6  0E00               	movlw	0
 31213  01ABF8  6FF8               	movwf	248,b	;volatile
 31214  01ABFA  0E01               	movlw	1
 31215  01ABFC  6FF7               	movwf	247,b	;volatile
 31216                           
 31217                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 31218  01ABFE  0E00               	movlw	0
 31219  01AC00  6FEF               	movwf	239,b	;volatile
 31220  01AC02  0E01               	movlw	1
 31221  01AC04  6FEE               	movwf	238,b	;volatile
 31222                           
 31223                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 31224  01AC06  0E15               	movlw	21
 31225  01AC08  6FFF               	movwf	255,b	;volatile
 31226                           
 31227                           ; BSR set to: 59
 31228                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 31229  01AC0A  6BFE               	clrf	254,b	;volatile
 31230                           
 31231                           ; BSR set to: 59
 31232                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 31233  01AC0C  0139               	movlb	57	; () banked
 31234  01AC0E  93A2               	bcf	162,1,b	;volatile
 31235                           
 31236                           ; BSR set to: 57
 31237                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 31238  01AC10  91A2               	bcf	162,0,b	;volatile
 31239                           
 31240                           ; BSR set to: 57
 31241                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 31242  01AC12  97A2               	bcf	162,3,b	;volatile
 31243                           
 31244                           ; BSR set to: 57
 31245                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 31246  01AC14  95A2               	bcf	162,2,b	;volatile
 31247                           
 31248                           ; BSR set to: 57
 31249                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 31250  01AC16  8392               	bsf	146,1,b	;volatile
 31251                           
 31252                           ; BSR set to: 57
 31253                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 31254  01AC18  8192               	bsf	146,0,b	;volatile
 31255                           
 31256                           ; BSR set to: 57
 31257                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 31258  01AC1A  8792               	bsf	146,3,b	;volatile
 31259                           
 31260                           ; BSR set to: 57
 31261                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 31262  01AC1C  8592               	bsf	146,2,b	;volatile
 31263                           
 31264                           ; BSR set to: 57
 31265                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 31266  01AC1E  6BF1               	clrf	241,b	;volatile
 31267                           
 31268                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 31269  01AC20  0E01               	movlw	1
 31270  01AC22  6FF2               	movwf	242,b	;volatile
 31271                           
 31272                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 31273  01AC24  0E04               	movlw	4
 31274  01AC26  6FF3               	movwf	243,b	;volatile
 31275                           
 31276                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 31277  01AC28  0E02               	movlw	2
 31278  01AC2A  6FF4               	movwf	244,b	;volatile
 31279                           
 31280                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 31281  01AC2C  0E03               	movlw	3
 31282  01AC2E  6FF7               	movwf	247,b	;volatile
 31283  01AC30  9ED2               	bcf	16338,7,c	;# 
 31284  01AC32  0139               	banksel	14831	;# 
 31285  01AC34  0E55               	movlw	85	;# 
 31286  01AC36  6FEF               	movwf	14831,b	;# 
 31287  01AC38  0EAA               	movlw	170	;# 
 31288  01AC3A  6FEF               	movwf	14831,b	;# 
 31289  01AC3C  81EF               	bsf	14831,0,b	;# 
 31290  01AC3E  8ED2               	bsf	16338,7,c	;# 
 31291                           
 31292                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 31293  01AC40  013B               	movlb	59	; () banked
 31294  01AC42  6BFC               	clrf	252,b	;volatile
 31295                           
 31296                           ; BSR set to: 59
 31297                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31298  01AC44  0012               	return		;funcret
 31299  01AC46                     __end_of_DMA1_Initialize:
 31300                           	opt callstack 0
 31301                           
 31302 ;; *************** function _CLKREF_Initialize *****************
 31303 ;; Defined at:
 31304 ;;		line 58 in file "mcc_generated_files/clkref.c"
 31305 ;; Parameters:    Size  Location     Type
 31306 ;;		None
 31307 ;; Auto vars:     Size  Location     Type
 31308 ;;		None
 31309 ;; Return value:  Size  Location     Type
 31310 ;;                  1  [STACK] void 
 31311 ;; Registers used:
 31312 ;;		wreg, status,2
 31313 ;; Tracked objects:
 31314 ;;		On entry : 3F/3B
 31315 ;;		On exit  : 3F/3C
 31316 ;;		Unchanged: 0/0
 31317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31322 ;;Total ram usage:        0 bytes
 31323 ;; Hardware stack levels used:    1
 31324 ;; Hardware stack levels required when called:   15
 31325 ;; This function calls:
 31326 ;;		Nothing
 31327 ;; This function is called by:
 31328 ;;		_SYSTEM_Initialize
 31329 ;; This function uses a reentrant model
 31330 ;;
 31331                           
 31332                           	psect	text132
 31333  01BE0E                     __ptext132:
 31334                           	opt callstack 0
 31335  01BE0E                     _CLKREF_Initialize:
 31336                           	opt callstack 14
 31337                           
 31338                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 31339                           
 31340                           ; BSR set to: 59
 31341                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31342                           ;incstack = 0
 31343  01BE0E  013C               	movlb	60	; () banked
 31344  01BE10  6BE6               	clrf	230,b	;volatile
 31345                           
 31346                           ; BSR set to: 60
 31347                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 31348  01BE12  0E94               	movlw	148
 31349  01BE14  6FE5               	movwf	229,b	;volatile
 31350                           
 31351                           ; BSR set to: 60
 31352                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 31353  01BE16  0012               	return		;funcret
 31354  01BE18                     __end_of_CLKREF_Initialize:
 31355                           	opt callstack 0
 31356                           
 31357 ;; *************** function _ADCC_Initialize *****************
 31358 ;; Defined at:
 31359 ;;		line 65 in file "mcc_generated_files/adcc.c"
 31360 ;; Parameters:    Size  Location     Type
 31361 ;;		None
 31362 ;; Auto vars:     Size  Location     Type
 31363 ;;		None
 31364 ;; Return value:  Size  Location     Type
 31365 ;;                  1  [STACK] void 
 31366 ;; Registers used:
 31367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 31368 ;; Tracked objects:
 31369 ;;		On entry : 3F/3E
 31370 ;;		On exit  : 0/0
 31371 ;;		Unchanged: 0/0
 31372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31377 ;;Total ram usage:        0 bytes
 31378 ;; Hardware stack levels used:    1
 31379 ;; Hardware stack levels required when called:   16
 31380 ;; This function calls:
 31381 ;;		_ADCC_SetADIInterruptHandler
 31382 ;;		_ADCC_SetADTIInterruptHandler
 31383 ;; This function is called by:
 31384 ;;		_SYSTEM_Initialize
 31385 ;; This function uses a reentrant model
 31386 ;;
 31387                           
 31388                           	psect	text133
 31389  01AC46                     __ptext133:
 31390                           	opt callstack 0
 31391  01AC46                     _ADCC_Initialize:
 31392                           	opt callstack 13
 31393                           
 31394                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 31395                           
 31396                           ; BSR set to: 60
 31397                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31398                           ;incstack = 0
 31399  01AC46  013E               	movlb	62	; () banked
 31400  01AC48  6BDE               	clrf	222,b	;volatile
 31401                           
 31402                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 31403  01AC4A  6BDF               	clrf	223,b	;volatile
 31404                           
 31405                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 31406  01AC4C  6BE0               	clrf	224,b	;volatile
 31407                           
 31408                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 31409  01AC4E  6BE1               	clrf	225,b	;volatile
 31410                           
 31411                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 31412  01AC50  6BE4               	clrf	228,b	;volatile
 31413                           
 31414                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 31415  01AC52  6BE5               	clrf	229,b	;volatile
 31416                           
 31417                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 31418  01AC54  6BEA               	clrf	234,b	;volatile
 31419                           
 31420                           ; BSR set to: 62
 31421                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 31422  01AC56  0E40               	movlw	64
 31423  01AC58  6FEC               	movwf	236,b	;volatile
 31424                           
 31425                           ; BSR set to: 62
 31426                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 31427  01AC5A  6BF1               	clrf	241,b	;volatile
 31428                           
 31429                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 31430  01AC5C  0E20               	movlw	32
 31431  01AC5E  6FF3               	movwf	243,b	;volatile
 31432                           
 31433                           ; BSR set to: 62
 31434                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 31435  01AC60  6BF4               	clrf	244,b	;volatile
 31436                           
 31437                           ; BSR set to: 62
 31438                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 31439  01AC62  6BF5               	clrf	245,b	;volatile
 31440                           
 31441                           ; BSR set to: 62
 31442                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 31443  01AC64  6BF6               	clrf	246,b	;volatile
 31444                           
 31445                           ; BSR set to: 62
 31446                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 31447  01AC66  6BF7               	clrf	247,b	;volatile
 31448                           
 31449                           ; BSR set to: 62
 31450                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 31451  01AC68  6BF9               	clrf	249,b	;volatile
 31452                           
 31453                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 31454  01AC6A  0E5B               	movlw	91
 31455  01AC6C  6FFA               	movwf	250,b	;volatile
 31456                           
 31457                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 31458  01AC6E  0E27               	movlw	39
 31459  01AC70  6FFB               	movwf	251,b	;volatile
 31460                           
 31461                           ; BSR set to: 62
 31462                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 31463  01AC72  6BFC               	clrf	252,b	;volatile
 31464                           
 31465                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 31466  01AC74  0E02               	movlw	2
 31467  01AC76  6FFD               	movwf	253,b	;volatile
 31468                           
 31469                           ; BSR set to: 62
 31470                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 31471  01AC78  6BFE               	clrf	254,b	;volatile
 31472                           
 31473                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 31474  01AC7A  0E07               	movlw	7
 31475  01AC7C  6FFF               	movwf	255,b	;volatile
 31476                           
 31477                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 31478  01AC7E  0E84               	movlw	132
 31479  01AC80  6FF8               	movwf	248,b	;volatile
 31480                           
 31481                           ; BSR set to: 62
 31482                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 31483  01AC82  0139               	movlb	57	; () banked
 31484  01AC84  95A1               	bcf	161,2,b	;volatile
 31485                           
 31486                           ; BSR set to: 57
 31487                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 31488  01AC86  8591               	bsf	145,2,b	;volatile
 31489                           
 31490                           ; BSR set to: 57
 31491                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 31492  01AC88  0E9C               	movlw	low _ADCC_DefaultInterruptHandler
 31493  01AC8A  6EE6               	movwf	postinc1,c
 31494  01AC8C  0EBE               	movlw	high _ADCC_DefaultInterruptHandler
 31495  01AC8E  6EE6               	movwf	postinc1,c
 31496  01AC90  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31497  01AC92  6EE6               	movwf	postinc1,c
 31498  01AC94  EC25  F0DD         	call	_ADCC_SetADIInterruptHandler	;wreg free
 31499                           
 31500                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 31501  01AC98  0139               	movlb	57	; () banked
 31502  01AC9A  97A1               	bcf	161,3,b	;volatile
 31503                           
 31504                           ; BSR set to: 57
 31505                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 31506  01AC9C  8791               	bsf	145,3,b	;volatile
 31507                           
 31508                           ; BSR set to: 57
 31509                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 31510  01AC9E  0E9C               	movlw	low _ADCC_DefaultInterruptHandler
 31511  01ACA0  6EE6               	movwf	postinc1,c
 31512  01ACA2  0EBE               	movlw	high _ADCC_DefaultInterruptHandler
 31513  01ACA4  6EE6               	movwf	postinc1,c
 31514  01ACA6  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31515  01ACA8  6EE6               	movwf	postinc1,c
 31516  01ACAA  EC11  F0DD         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 31517                           
 31518                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31519  01ACAE  0012               	return		;funcret
 31520  01ACB0                     __end_of_ADCC_Initialize:
 31521                           	opt callstack 0
 31522                           
 31523 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 31524 ;; Defined at:
 31525 ;;		line 336 in file "mcc_generated_files/adcc.c"
 31526 ;; Parameters:    Size  Location     Type
 31527 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31528 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 31529 ;; Auto vars:     Size  Location     Type
 31530 ;;		None
 31531 ;; Return value:  Size  Location     Type
 31532 ;;                  1  [STACK] void 
 31533 ;; Registers used:
 31534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31535 ;; Tracked objects:
 31536 ;;		On entry : 0/0
 31537 ;;		On exit  : 0/0
 31538 ;;		Unchanged: 0/0
 31539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31544 ;;Total ram usage:        0 bytes
 31545 ;; Hardware stack levels used:    1
 31546 ;; Hardware stack levels required when called:   15
 31547 ;; This function calls:
 31548 ;;		Nothing
 31549 ;; This function is called by:
 31550 ;;		_ADCC_Initialize
 31551 ;;		_start_adc_scan
 31552 ;; This function uses a reentrant model
 31553 ;;
 31554                           
 31555                           	psect	text134
 31556  01BA22                     __ptext134:
 31557                           	opt callstack 0
 31558  01BA22                     _ADCC_SetADTIInterruptHandler:
 31559                           	opt callstack 14
 31560                           
 31561                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 31562                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31563                           
 31564                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31565                           ;incstack = 0
 31566  01BA22  50E1               	movf	fsr1l,w,c
 31567  01BA24  0FFD               	addlw	-3
 31568  01BA26  6ED9               	movwf	fsr2l,c
 31569  01BA28  50E2               	movf	fsr1h,w,c
 31570  01BA2A  6EDA               	movwf	fsr2h,c
 31571  01BA2C  0EFF               	movlw	255
 31572  01BA2E  22DA               	addwfc	fsr2h,f,c
 31573  01BA30  006F FF78  F099    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 31574  01BA36  006F FF78  F09A    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 31575  01BA3C  006F FF74  F09B    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 31576                           
 31577                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 31578  01BA42  52E5               	movf	postdec1,f,c
 31579  01BA44  52E5               	movf	postdec1,f,c
 31580  01BA46  52E5               	movf	postdec1,f,c
 31581  01BA48  0012               	return		;funcret
 31582  01BA4A                     __end_of_ADCC_SetADTIInterruptHandler:
 31583                           	opt callstack 0
 31584                           
 31585 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 31586 ;; Defined at:
 31587 ;;		line 323 in file "mcc_generated_files/adcc.c"
 31588 ;; Parameters:    Size  Location     Type
 31589 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31590 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 31591 ;; Auto vars:     Size  Location     Type
 31592 ;;		None
 31593 ;; Return value:  Size  Location     Type
 31594 ;;                  1  [STACK] void 
 31595 ;; Registers used:
 31596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31597 ;; Tracked objects:
 31598 ;;		On entry : 6/0
 31599 ;;		On exit  : 0/0
 31600 ;;		Unchanged: 0/0
 31601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31606 ;;Total ram usage:        0 bytes
 31607 ;; Hardware stack levels used:    1
 31608 ;; Hardware stack levels required when called:   15
 31609 ;; This function calls:
 31610 ;;		Nothing
 31611 ;; This function is called by:
 31612 ;;		_ADCC_Initialize
 31613 ;;		_start_adc_scan
 31614 ;; This function uses a reentrant model
 31615 ;;
 31616                           
 31617                           	psect	text135
 31618  01BA4A                     __ptext135:
 31619                           	opt callstack 0
 31620  01BA4A                     _ADCC_SetADIInterruptHandler:
 31621                           	opt callstack 14
 31622                           
 31623                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 31624                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31625                           
 31626                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31627                           ;incstack = 0
 31628  01BA4A  50E1               	movf	fsr1l,w,c
 31629  01BA4C  0FFD               	addlw	-3
 31630  01BA4E  6ED9               	movwf	fsr2l,c
 31631  01BA50  50E2               	movf	fsr1h,w,c
 31632  01BA52  6EDA               	movwf	fsr2h,c
 31633  01BA54  0EFF               	movlw	255
 31634  01BA56  22DA               	addwfc	fsr2h,f,c
 31635  01BA58  006F FF78  F09C    	movff	postinc2,_ADCC_ADI_InterruptHandler
 31636  01BA5E  006F FF78  F09D    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 31637  01BA64  006F FF74  F09E    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 31638                           
 31639                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 31640  01BA6A  52E5               	movf	postdec1,f,c
 31641  01BA6C  52E5               	movf	postdec1,f,c
 31642  01BA6E  52E5               	movf	postdec1,f,c
 31643  01BA70  0012               	return		;funcret
 31644  01BA72                     __end_of_ADCC_SetADIInterruptHandler:
 31645                           	opt callstack 0
 31646                           
 31647 ;; *************** function _INT1_ISR *****************
 31648 ;; Defined at:
 31649 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 31650 ;; Parameters:    Size  Location     Type
 31651 ;;		None
 31652 ;; Auto vars:     Size  Location     Type
 31653 ;;		None
 31654 ;; Return value:  Size  Location     Type
 31655 ;;                  1    wreg      void 
 31656 ;; Registers used:
 31657 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31658 ;; Tracked objects:
 31659 ;;		On entry : 0/0
 31660 ;;		On exit  : 0/0
 31661 ;;		Unchanged: 0/0
 31662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31665 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31666 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31667 ;;Total ram usage:        4 bytes
 31668 ;; Hardware stack levels used:    1
 31669 ;; Hardware stack levels required when called:    5
 31670 ;; This function calls:
 31671 ;;		_INT1_CallBack
 31672 ;; This function is called by:
 31673 ;;		Interrupt level 1
 31674 ;; This function uses a non-reentrant model
 31675 ;;
 31676                           
 31677                           	psect	text136
 31678  01B4C0                     __ptext136:
 31679                           	opt callstack 0
 31680  01B4C0                     _INT1_ISR:
 31681                           	opt callstack 12
 31682                           
 31683                           ;incstack = 0
 31684  01B4C0  006F FF60  F027    	movff	status,??_INT1_ISR
 31685  01B4C6  0060  F004  F028   	movff	btemp,??_INT1_ISR+1
 31686  01B4CC  0060  F02C  F029   	movff	btemp+10,??_INT1_ISR+2
 31687  01B4D2  0060  F030  F02A   	movff	btemp+11,??_INT1_ISR+3
 31688  01B4D8  EE16  F0AE         	lfsr	1,___intlo_sp
 31689                           
 31690                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 31691  01B4DC  0139               	movlb	57	; () banked
 31692  01B4DE  91A5               	bcf	165,0,b	;volatile
 31693                           
 31694                           ; BSR set to: 57
 31695                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 31696  01B4E0  EC76  F0DD         	call	_INT1_CallBack	;wreg free
 31697  01B4E4  0060  F0A8  F00C   	movff	??_INT1_ISR+3,btemp+11
 31698  01B4EA  0060  F0A4  F00B   	movff	??_INT1_ISR+2,btemp+10
 31699  01B4F0  0060  F0A0  F001   	movff	??_INT1_ISR+1,btemp
 31700  01B4F6  0060  F09F  FFD8   	movff	??_INT1_ISR,status
 31701  01B4FC  0011               	retfie		f
 31702  01B4FE                     __end_of_INT1_ISR:
 31703                           	opt callstack 0
 31704                           
 31705 ;; *************** function _INT1_CallBack *****************
 31706 ;; Defined at:
 31707 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 31708 ;; Parameters:    Size  Location     Type
 31709 ;;		None
 31710 ;; Auto vars:     Size  Location     Type
 31711 ;;		None
 31712 ;; Return value:  Size  Location     Type
 31713 ;;                  1  [STACK] void 
 31714 ;; Registers used:
 31715 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31716 ;; Tracked objects:
 31717 ;;		On entry : 3F/39
 31718 ;;		On exit  : 0/0
 31719 ;;		Unchanged: 0/0
 31720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31725 ;;Total ram usage:        0 bytes
 31726 ;; Hardware stack levels used:    1
 31727 ;; Hardware stack levels required when called:    4
 31728 ;; This function calls:
 31729 ;;		Absolute function
 31730 ;;		_INT1_DefaultInterruptHandler
 31731 ;;		_switch_handler
 31732 ;; This function is called by:
 31733 ;;		_INT1_ISR
 31734 ;; This function uses a reentrant model
 31735 ;;
 31736                           
 31737                           	psect	text137
 31738  01BAEC                     __ptext137:
 31739                           	opt callstack 0
 31740  01BAEC                     _INT1_CallBack:
 31741                           	opt callstack 12
 31742                           
 31743                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 31744                           
 31745                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31746                           ;incstack = 0
 31747  01BAEC  0100               	movlb	0	; () banked
 31748  01BAEE  51A8               	movf	_INT1_InterruptHandler& (0+255),w,b
 31749  01BAF0  11A9               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 31750  01BAF2  11AA               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 31751  01BAF4  B4D8               	btfsc	status,2,c
 31752  01BAF6  0012               	return	
 31753                           
 31754                           ; BSR set to: 0
 31755                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 31756  01BAF8  D801               	call	u985_28
 31757  01BAFA  0012               	return	
 31758  01BAFC                     u985_28:
 31759  01BAFC  0005               	push	
 31760  01BAFE  6EFA               	movwf	pclath,c
 31761  01BB00  51A8               	movf	_INT1_InterruptHandler& (0+255),w,b
 31762  01BB02  6EFD               	movwf	tosl,c
 31763  01BB04  51A9               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 31764  01BB06  6EFE               	movwf	tosh,c
 31765  01BB08  51AA               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 31766  01BB0A  6EFF               	movwf	tosu,c
 31767  01BB0C  50FA               	movf	pclath,w,c
 31768  01BB0E  0012               	return		;indir
 31769  01BB10                     __end_of_INT1_CallBack:
 31770                           	opt callstack 0
 31771                           
 31772 ;; *************** function _INT1_DefaultInterruptHandler *****************
 31773 ;; Defined at:
 31774 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 31775 ;; Parameters:    Size  Location     Type
 31776 ;;		None
 31777 ;; Auto vars:     Size  Location     Type
 31778 ;;		None
 31779 ;; Return value:  Size  Location     Type
 31780 ;;                  1  [STACK] void 
 31781 ;; Registers used:
 31782 ;;		None
 31783 ;; Tracked objects:
 31784 ;;		On entry : 3F/0
 31785 ;;		On exit  : 0/0
 31786 ;;		Unchanged: 0/0
 31787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31792 ;;Total ram usage:        0 bytes
 31793 ;; Hardware stack levels used:    1
 31794 ;; Hardware stack levels required when called:    3
 31795 ;; This function calls:
 31796 ;;		Nothing
 31797 ;; This function is called by:
 31798 ;;		_EXT_INT_Initialize
 31799 ;;		_INT1_CallBack
 31800 ;; This function uses a reentrant model
 31801 ;;
 31802                           
 31803                           	psect	text138
 31804  01BE96                     __ptext138:
 31805                           	opt callstack 0
 31806  01BE96                     _INT1_DefaultInterruptHandler:
 31807                           	opt callstack 12
 31808                           
 31809                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31810                           
 31811                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31812                           ;incstack = 0
 31813  01BE96  0012               	return		;funcret
 31814  01BE98                     __end_of_INT1_DefaultInterruptHandler:
 31815                           	opt callstack 0
 31816                           
 31817 ;; *************** function _switch_handler *****************
 31818 ;; Defined at:
 31819 ;;		line 58 in file "dio.c"
 31820 ;; Parameters:    Size  Location     Type
 31821 ;;		None
 31822 ;; Auto vars:     Size  Location     Type
 31823 ;;  i               1  [STACK] unsigned char 
 31824 ;;  sw_value        1  [STACK] unsigned char 
 31825 ;; Return value:  Size  Location     Type
 31826 ;;                  1  [STACK] void 
 31827 ;; Registers used:
 31828 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 31829 ;; Tracked objects:
 31830 ;;		On entry : 3F/0
 31831 ;;		On exit  : 0/0
 31832 ;;		Unchanged: 0/0
 31833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31838 ;;Total ram usage:        0 bytes
 31839 ;; Hardware stack levels used:    1
 31840 ;; Hardware stack levels required when called:    3
 31841 ;; This function calls:
 31842 ;;		Nothing
 31843 ;; This function is called by:
 31844 ;;		_start_switch_handler
 31845 ;;		_INT1_CallBack
 31846 ;; This function uses a reentrant model
 31847 ;;
 31848                           
 31849                           	psect	text139
 31850  019228                     __ptext139:
 31851                           	opt callstack 0
 31852  019228                     _switch_handler:
 31853                           	opt callstack 0
 31854                           
 31855                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31856  019228  52E6               	movf	postinc1,f,c
 31857  01922A  52E6               	movf	postinc1,f,c
 31858                           
 31859                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 31860                           ;stkvar	_i @ sp[(-2)+0]
 31861                           
 31862                           ;incstack = 0
 31863  01922C  0EFE               	movlw	-2
 31864  01922E  6AE3               	clrf	plusw1,c
 31865  019230  9EBD               	bcf	189,7,c	;volatile
 31866  019232  9ABF               	bcf	191,5,c	;volatile
 31867                           
 31868                           ;dio.c: 73:  __nop();
 31869  019234  F000               	nop	
 31870                           
 31871                           ;dio.c: 74:  __nop();
 31872  019236  F000               	nop	
 31873                           
 31874                           ;dio.c: 75:  __nop();
 31875  019238  F000               	nop	
 31876  01923A  D019               	goto	l10407
 31877  01923C                     l10395:
 31878                           
 31879                           ;dio.c: 80:    sw_value = PORTFbits.RF3;
 31880  01923C  A6CF               	btfss	207,3,c	;volatile
 31881  01923E  D011               	goto	u958_20
 31882  019240  D00D               	goto	u958_21
 31883  019242                     u955_28:
 31884                           
 31885                           ;stkvar	_sw_value @ sp[(-2)+1]
 31886  019242  0EFF               	movlw	-1
 31887  019244  0060  F033  FFE3   	movff	btemp+11,plusw1
 31888                           
 31889                           ;dio.c: 81:    break;
 31890  01924A  D027               	goto	l10409
 31891  01924C                     l10397:
 31892                           
 31893                           ;dio.c: 83:    sw_value = PORTFbits.RF2;
 31894  01924C  A4CF               	btfss	207,2,c	;volatile
 31895  01924E  D009               	goto	u958_20
 31896  019250  D005               	goto	u958_21
 31897  019252                     l10399:
 31898                           
 31899                           ;dio.c: 86:    sw_value = PORTFbits.RF1;
 31900  019252  A2CF               	btfss	207,1,c	;volatile
 31901  019254  D006               	goto	u958_20
 31902  019256  D002               	goto	u958_21
 31903  019258                     l10401:
 31904                           
 31905                           ;dio.c: 89:    sw_value = PORTFbits.RF0;
 31906  019258  A0CF               	btfss	207,0,c	;volatile
 31907  01925A  D003               	goto	u958_20
 31908  01925C                     u958_21:
 31909  01925C  6A0C               	clrf	(btemp+11)^0,c
 31910  01925E  2A0C               	incf	(btemp+11)^0,f,c
 31911  019260  D7F0               	goto	u955_28
 31912  019262                     u958_20:
 31913  019262  6A0C               	clrf	(btemp+11)^0,c
 31914  019264  D7EE               	goto	u955_28
 31915  019266                     l10403:
 31916                           
 31917                           ;dio.c: 92:    sw_value = 1;
 31918                           ;stkvar	_sw_value @ sp[(-2)+1]
 31919  019266  0EFF               	movlw	-1
 31920  019268  6AE3               	clrf	plusw1,c
 31921  01926A  2AE3               	incf	plusw1,f,c
 31922                           
 31923                           ;dio.c: 93:    break;
 31924  01926C  D016               	goto	l10409
 31925  01926E                     l10407:
 31926                           
 31927                           ;stkvar	_i @ sp[(-2)+0]
 31928  01926E  0EFE               	movlw	-2
 31929  019270  50E3               	movf	plusw1,w,c
 31930  019272  6E0B               	movwf	(btemp+10)^0,c
 31931  019274  6A0C               	clrf	(btemp+11)^0,c
 31932                           
 31933                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31934                           ; Switch size 1, requested type "simple"
 31935                           ; Number of cases is 1, Range of values is 0 to 0
 31936                           ; switch strategies available:
 31937                           ; Name         Instructions Cycles
 31938                           ; simple_byte            4     3 (average)
 31939                           ;	Chosen strategy is simple_byte
 31940  019276  500C               	movf	(btemp+11)^0,w,c
 31941  019278  0A00               	xorlw	0	; case 0
 31942  01927A  A4D8               	btfss	status,2,c
 31943  01927C  D7F4               	goto	l10403
 31944                           
 31945                           ; Switch size 1, requested type "simple"
 31946                           ; Number of cases is 4, Range of values is 0 to 3
 31947                           ; switch strategies available:
 31948                           ; Name         Instructions Cycles
 31949                           ; simple_byte           13     7 (average)
 31950                           ;	Chosen strategy is simple_byte
 31951  01927E  500B               	movf	(btemp+10)^0,w,c
 31952  019280  0A00               	xorlw	0	; case 0
 31953  019282  B4D8               	btfsc	status,2,c
 31954  019284  D7E9               	goto	l10401
 31955  019286  0A01               	xorlw	1	; case 1
 31956  019288  B4D8               	btfsc	status,2,c
 31957  01928A  D7E3               	goto	l10399
 31958  01928C  0A03               	xorlw	3	; case 2
 31959  01928E  B4D8               	btfsc	status,2,c
 31960  019290  D7DD               	goto	l10397
 31961  019292  0A01               	xorlw	1	; case 3
 31962  019294  B4D8               	btfsc	status,2,c
 31963  019296  D7D2               	goto	l10395
 31964  019298  D7E6               	goto	l10403
 31965  01929A                     l10409:
 31966                           
 31967                           ;dio.c: 97:   if (sw_value) {
 31968                           ;stkvar	_sw_value @ sp[(-2)+1]
 31969  01929A  0EFF               	movlw	-1
 31970  01929C  50E3               	movf	plusw1,w,c
 31971  01929E  B4D8               	btfsc	status,2,c
 31972  0192A0  D018               	goto	l10415
 31973                           
 31974                           ;dio.c: 98:    if (S.button[i].sw == SW_ON) {
 31975                           ;stkvar	_i @ sp[(-2)+0]
 31976  0192A2  0EFE               	movlw	-2
 31977  0192A4  50E3               	movf	plusw1,w,c
 31978  0192A6  0D05               	mullw	5
 31979  0192A8  0EC6               	movlw	low _S
 31980  0192AA  24F3               	addwf	243,w,c
 31981  0192AC  6ED9               	movwf	fsr2l,c
 31982  0192AE  0E01               	movlw	high _S
 31983  0192B0  20F4               	addwfc	prodh,w,c
 31984  0192B2  6EDA               	movwf	fsr2h,c
 31985  0192B4  04DE               	decf	postinc2,w,c
 31986  0192B6  A4D8               	btfss	status,2,c
 31987  0192B8  D049               	goto	l10423
 31988                           
 31989                           ;dio.c: 99:     S.button[i].sw = SW_OFF;
 31990                           ;stkvar	_i @ sp[(-2)+0]
 31991  0192BA  0EFE               	movlw	-2
 31992  0192BC  50E3               	movf	plusw1,w,c
 31993  0192BE  0D05               	mullw	5
 31994  0192C0  0EC6               	movlw	low _S
 31995  0192C2  24F3               	addwf	243,w,c
 31996  0192C4  6ED9               	movwf	fsr2l,c
 31997  0192C6  0E01               	movlw	high _S
 31998  0192C8  20F4               	addwfc	prodh,w,c
 31999  0192CA  6EDA               	movwf	fsr2h,c
 32000  0192CC  0E00               	movlw	0
 32001  0192CE  6EDF               	movwf	indf2,c
 32002  0192D0  D03D               	goto	l10423
 32003  0192D2                     l10415:
 32004                           
 32005                           ;dio.c: 102:    if (S.button[i].sw == SW_OFF) {
 32006                           ;stkvar	_i @ sp[(-2)+0]
 32007  0192D2  0EFE               	movlw	-2
 32008  0192D4  50E3               	movf	plusw1,w,c
 32009  0192D6  0D05               	mullw	5
 32010  0192D8  0EC6               	movlw	low _S
 32011  0192DA  24F3               	addwf	243,w,c
 32012  0192DC  6ED9               	movwf	fsr2l,c
 32013  0192DE  0E01               	movlw	high _S
 32014  0192E0  20F4               	addwfc	prodh,w,c
 32015  0192E2  6EDA               	movwf	fsr2h,c
 32016  0192E4  50DF               	movf	indf2,w,c
 32017  0192E6  A4D8               	btfss	status,2,c
 32018  0192E8  D031               	goto	l10423
 32019                           
 32020                           ;dio.c: 103:     S.button[i].sw = SW_ON;
 32021                           ;stkvar	_i @ sp[(-2)+0]
 32022  0192EA  0EFE               	movlw	-2
 32023  0192EC  50E3               	movf	plusw1,w,c
 32024  0192EE  0D05               	mullw	5
 32025  0192F0  0EC6               	movlw	low _S
 32026  0192F2  24F3               	addwf	243,w,c
 32027  0192F4  6ED9               	movwf	fsr2l,c
 32028  0192F6  0E01               	movlw	high _S
 32029  0192F8  20F4               	addwfc	prodh,w,c
 32030  0192FA  6EDA               	movwf	fsr2h,c
 32031  0192FC  0E01               	movlw	1
 32032  0192FE  6EDF               	movwf	indf2,c
 32033                           
 32034                           ;dio.c: 104:     S.button[i].count = V.timerint_count;
 32035  019300  EE20  F1BB         	lfsr	2,_V+187	;volatile
 32036                           
 32037                           ;stkvar	_i @ sp[(-2)+0]
 32038  019304  0EFE               	movlw	-2
 32039  019306  50E3               	movf	plusw1,w,c
 32040  019308  0D05               	mullw	5
 32041  01930A  0EC7               	movlw	low (_S+1)
 32042  01930C  24F3               	addwf	243,w,c
 32043  01930E  6EE9               	movwf	fsr0l,c
 32044  019310  0E01               	movlw	high (_S+1)
 32045  019312  20F4               	addwfc	prodh,w,c
 32046  019314  6EEA               	movwf	fsr0h,c
 32047  019316  006F FF7B FFEE     	movff	postinc2,postinc0
 32048  01931C  006F FF7B FFEE     	movff	postinc2,postinc0
 32049  019322  006F FF7B FFEE     	movff	postinc2,postinc0
 32050  019328  006F FF7B FFEE     	movff	postinc2,postinc0
 32051                           
 32052                           ;dio.c: 105:     S.sw_bitmap |= 1 << i;
 32053                           ;stkvar	_i @ sp[(-2)+0]
 32054  01932E  0EFE               	movlw	-2
 32055  019330  006F FF8C  F00C    	movff	plusw1,btemp+11
 32056  019336  0E01               	movlw	1
 32057  019338  6E0B               	movwf	(btemp+10)^0,c
 32058  01933A  2A0C               	incf	(btemp+11)^0,f,c
 32059  01933C  D002               	goto	u962_24
 32060  01933E                     u962_25:
 32061  01933E  90D8               	bcf	status,0,c
 32062  019340  360B               	rlcf	(btemp+10)^0,f,c
 32063  019342                     u962_24:
 32064  019342  2E0C               	decfsz	(btemp+11)^0,f,c
 32065  019344  D7FC               	goto	u962_25
 32066  019346  500B               	movf	(btemp+10)^0,w,c
 32067  019348  0101               	movlb	1	; () banked
 32068  01934A  13EE               	iorwf	(_S+40)& (0+255),f,b	;volatile
 32069  01934C                     l10423:
 32070                           
 32071                           ;dio.c: 108:  } while (++i < 4);
 32072                           ;stkvar	_i @ sp[(-2)+0]
 32073  01934C  0EFE               	movlw	-2
 32074  01934E  2AE3               	incf	plusw1,f,c
 32075  019350  0EFE               	movlw	-2
 32076  019352  006F FF8C  F001    	movff	plusw1,btemp
 32077  019358  0E03               	movlw	3
 32078  01935A  6401               	cpfsgt	btemp^0,c
 32079  01935C  D788               	goto	l10407
 32080                           
 32081                           ;dio.c: 117:  do { LATDbits.LATD7 = 1; } while(0);
 32082  01935E  8EBD               	bsf	189,7,c	;volatile
 32083                           
 32084                           ;dio.c: 118:  do { LATFbits.LATF5 = 1; } while(0);
 32085  019360  8ABF               	bsf	191,5,c	;volatile
 32086                           
 32087                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 32088  019362  52E5               	movf	postdec1,f,c
 32089  019364  52E5               	movf	postdec1,f,c
 32090  019366  0012               	return		;funcret
 32091  019368                     __end_of_switch_handler:
 32092                           	opt callstack 0
 32093                           
 32094 ;; *************** function _TMR5_ISR *****************
 32095 ;; Defined at:
 32096 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 32097 ;; Parameters:    Size  Location     Type
 32098 ;;		None
 32099 ;; Auto vars:     Size  Location     Type
 32100 ;;		None
 32101 ;; Return value:  Size  Location     Type
 32102 ;;                  1    wreg      void 
 32103 ;; Registers used:
 32104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 32105 ;; Tracked objects:
 32106 ;;		On entry : 0/0
 32107 ;;		On exit  : 3F/0
 32108 ;;		Unchanged: 0/0
 32109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32112 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32113 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32114 ;;Total ram usage:       15 bytes
 32115 ;; Hardware stack levels used:    1
 32116 ;; Hardware stack levels required when called:    9
 32117 ;; This function calls:
 32118 ;;		_TMR5_CallBack
 32119 ;;		_TMR5_WriteTimer
 32120 ;; This function is called by:
 32121 ;;		Interrupt level 1
 32122 ;; This function uses a non-reentrant model
 32123 ;;
 32124                           
 32125                           	psect	text140
 32126  019F10                     __ptext140:
 32127                           	opt callstack 0
 32128  019F10                     _TMR5_ISR:
 32129                           	opt callstack 8
 32130                           
 32131                           ;incstack = 0
 32132  019F10  006F FF60  F02D    	movff	status,??_TMR5_ISR+2
 32133  019F16  0060  F004  F02E   	movff	btemp,??_TMR5_ISR+3
 32134  019F1C  0060  F008  F02F   	movff	btemp+1,??_TMR5_ISR+4
 32135  019F22  0060  F00C  F030   	movff	btemp+2,??_TMR5_ISR+5
 32136  019F28  0060  F010  F031   	movff	btemp+3,??_TMR5_ISR+6
 32137  019F2E  0060  F014  F032   	movff	btemp+4,??_TMR5_ISR+7
 32138  019F34  0060  F018  F033   	movff	btemp+5,??_TMR5_ISR+8
 32139  019F3A  0060  F01C  F034   	movff	btemp+6,??_TMR5_ISR+9
 32140  019F40  0060  F020  F035   	movff	btemp+7,??_TMR5_ISR+10
 32141  019F46  0060  F024  F036   	movff	btemp+8,??_TMR5_ISR+11
 32142  019F4C  0060  F028  F037   	movff	btemp+9,??_TMR5_ISR+12
 32143  019F52  0060  F02C  F038   	movff	btemp+10,??_TMR5_ISR+13
 32144  019F58  0060  F030  F039   	movff	btemp+11,??_TMR5_ISR+14
 32145  019F5E  EE16  F0AE         	lfsr	1,___intlo_sp
 32146                           
 32147                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 32148  019F62  0139               	movlb	57	; () banked
 32149  019F64  9DA8               	bcf	168,6,b	;volatile
 32150                           
 32151                           ; BSR set to: 57
 32152                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 32153  019F66  0060  F2DB  FFE6   	movff	_timer5ReloadVal,postinc1
 32154  019F6C  0060  F2DF  FFE6   	movff	_timer5ReloadVal+1,postinc1
 32155  019F72  EC01  F0DA         	call	_TMR5_WriteTimer	;wreg free
 32156                           
 32157                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 32158  019F76  0101               	movlb	1	; () banked
 32159  019F78  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
 32160  019F7A  6E2B               	movwf	??_TMR5_ISR^0,c
 32161  019F7C  6A2C               	clrf	(??_TMR5_ISR+1)^0,c
 32162  019F7E  0E05               	movlw	5
 32163  019F80  262B               	addwf	??_TMR5_ISR^0,f,c
 32164  019F82  0E00               	movlw	0
 32165  019F84  222C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 32166  019F86  0100               	movlb	0	; () banked
 32167  019F88  4BB4               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 32168  019F8A  2BB5               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 32169  019F8C  502B               	movf	??_TMR5_ISR^0,w,c
 32170  019F8E  5DB4               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 32171  019F90  502C               	movf	(??_TMR5_ISR+1)^0,w,c
 32172  019F92  59B5               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 32173  019F94  A0D8               	btfss	status,0,c
 32174  019F96  D005               	goto	i1l1019
 32175                           
 32176                           ; BSR set to: 0
 32177                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 32178  019F98  EC88  F0DD         	call	_TMR5_CallBack	;wreg free
 32179                           
 32180                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 32181  019F9C  0100               	movlb	0	; () banked
 32182  019F9E  6BB4               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 32183  019FA0  6BB5               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 32184  019FA2                     i1l1019:
 32185                           
 32186                           ; BSR set to: 0
 32187  019FA2  0060  F0E4  F00C   	movff	??_TMR5_ISR+14,btemp+11
 32188  019FA8  0060  F0E0  F00B   	movff	??_TMR5_ISR+13,btemp+10
 32189  019FAE  0060  F0DC  F00A   	movff	??_TMR5_ISR+12,btemp+9
 32190  019FB4  0060  F0D8  F009   	movff	??_TMR5_ISR+11,btemp+8
 32191  019FBA  0060  F0D4  F008   	movff	??_TMR5_ISR+10,btemp+7
 32192  019FC0  0060  F0D0  F007   	movff	??_TMR5_ISR+9,btemp+6
 32193  019FC6  0060  F0CC  F006   	movff	??_TMR5_ISR+8,btemp+5
 32194  019FCC  0060  F0C8  F005   	movff	??_TMR5_ISR+7,btemp+4
 32195  019FD2  0060  F0C4  F004   	movff	??_TMR5_ISR+6,btemp+3
 32196  019FD8  0060  F0C0  F003   	movff	??_TMR5_ISR+5,btemp+2
 32197  019FDE  0060  F0BC  F002   	movff	??_TMR5_ISR+4,btemp+1
 32198  019FE4  0060  F0B8  F001   	movff	??_TMR5_ISR+3,btemp
 32199  019FEA  0060  F0B7  FFD8   	movff	??_TMR5_ISR+2,status
 32200  019FF0  0011               	retfie		f
 32201  019FF2                     __end_of_TMR5_ISR:
 32202                           	opt callstack 0
 32203                           
 32204 ;; *************** function _TMR5_WriteTimer *****************
 32205 ;; Defined at:
 32206 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 32207 ;; Parameters:    Size  Location     Type
 32208 ;;  timerVal        2  [STACK] unsigned short 
 32209 ;; Auto vars:     Size  Location     Type
 32210 ;;		None
 32211 ;; Return value:  Size  Location     Type
 32212 ;;                  1  [STACK] void 
 32213 ;; Registers used:
 32214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 32215 ;; Tracked objects:
 32216 ;;		On entry : 3F/39
 32217 ;;		On exit  : 0/0
 32218 ;;		Unchanged: 0/0
 32219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32224 ;;Total ram usage:        0 bytes
 32225 ;; Hardware stack levels used:    1
 32226 ;; Hardware stack levels required when called:    3
 32227 ;; This function calls:
 32228 ;;		Nothing
 32229 ;; This function is called by:
 32230 ;;		_TMR5_ISR
 32231 ;; This function uses a reentrant model
 32232 ;;
 32233                           
 32234                           	psect	text141
 32235  01B402                     __ptext141:
 32236                           	opt callstack 0
 32237  01B402                     _TMR5_WriteTimer:
 32238                           	opt callstack 13
 32239                           
 32240                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 32241                           
 32242                           ; BSR set to: 0
 32243                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32244                           ;incstack = 0
 32245  01B402  A49A               	btfss	154,2,c	;volatile
 32246  01B404  D00F               	goto	l10603
 32247                           
 32248                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 32249  01B406  909A               	bcf	154,0,c	;volatile
 32250                           
 32251                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 32252                           ;stkvar	_timerVal @ sp[(0)+-2]
 32253  01B408  0EFF               	movlw	255
 32254  01B40A  24E1               	addwf	fsr1l,w,c
 32255  01B40C  6ED9               	movwf	fsr2l,c
 32256  01B40E  0EFF               	movlw	255
 32257  01B410  20E2               	addwfc	fsr1h,w,c
 32258  01B412  6EDA               	movwf	fsr2h,c
 32259  01B414  50DF               	movf	indf2,w,c
 32260  01B416  6E99               	movwf	153,c	;volatile
 32261                           
 32262                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 32263                           ;stkvar	_timerVal @ sp[(0)+-2]
 32264  01B418  0EFE               	movlw	-2
 32265  01B41A  006F FF8F FF98     	movff	plusw1,16280	;volatile
 32266                           
 32267                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 32268  01B420  809A               	bsf	154,0,c	;volatile
 32269                           
 32270                           ;mcc_generated_files/tmr5.c: 144:  } else {
 32271  01B422  D00C               	goto	l1002
 32272  01B424                     l10603:
 32273                           
 32274                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 32275                           ;stkvar	_timerVal @ sp[(0)+-2]
 32276  01B424  0EFF               	movlw	255
 32277  01B426  24E1               	addwf	fsr1l,w,c
 32278  01B428  6ED9               	movwf	fsr2l,c
 32279  01B42A  0EFF               	movlw	255
 32280  01B42C  20E2               	addwfc	fsr1h,w,c
 32281  01B42E  6EDA               	movwf	fsr2h,c
 32282  01B430  50DF               	movf	indf2,w,c
 32283  01B432  6E99               	movwf	153,c	;volatile
 32284                           
 32285                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 32286                           ;stkvar	_timerVal @ sp[(0)+-2]
 32287  01B434  0EFE               	movlw	-2
 32288  01B436  006F FF8F FF98     	movff	plusw1,16280	;volatile
 32289  01B43C                     l1002:
 32290                           
 32291                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 32292  01B43C  52E5               	movf	postdec1,f,c
 32293  01B43E  52E5               	movf	postdec1,f,c
 32294  01B440  0012               	return		;funcret
 32295  01B442                     __end_of_TMR5_WriteTimer:
 32296                           	opt callstack 0
 32297                           
 32298 ;; *************** function _TMR5_CallBack *****************
 32299 ;; Defined at:
 32300 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 32301 ;; Parameters:    Size  Location     Type
 32302 ;;		None
 32303 ;; Auto vars:     Size  Location     Type
 32304 ;;		None
 32305 ;; Return value:  Size  Location     Type
 32306 ;;                  1  [STACK] void 
 32307 ;; Registers used:
 32308 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 32309 ;; Tracked objects:
 32310 ;;		On entry : 3F/0
 32311 ;;		On exit  : 0/0
 32312 ;;		Unchanged: 0/0
 32313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32318 ;;Total ram usage:        0 bytes
 32319 ;; Hardware stack levels used:    1
 32320 ;; Hardware stack levels required when called:    8
 32321 ;; This function calls:
 32322 ;;		Absolute function
 32323 ;;		_TMR5_DefaultInterruptHandler
 32324 ;; This function is called by:
 32325 ;;		_TMR5_ISR
 32326 ;; This function uses a reentrant model
 32327 ;;
 32328                           
 32329                           	psect	text142
 32330  01BB10                     __ptext142:
 32331                           	opt callstack 0
 32332  01BB10                     _TMR5_CallBack:
 32333                           	opt callstack 8
 32334                           
 32335                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 32336                           
 32337                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32338                           ;incstack = 0
 32339  01BB10  0100               	movlb	0	; () banked
 32340  01BB12  5193               	movf	_TMR5_InterruptHandler& (0+255),w,b
 32341  01BB14  1194               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 32342  01BB16  1195               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 32343  01BB18  B4D8               	btfsc	status,2,c
 32344  01BB1A  0012               	return	
 32345                           
 32346                           ; BSR set to: 0
 32347                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 32348  01BB1C  D801               	call	u994_28
 32349  01BB1E  0012               	return	
 32350  01BB20                     u994_28:
 32351  01BB20  0005               	push	
 32352  01BB22  6EFA               	movwf	pclath,c
 32353  01BB24  5193               	movf	_TMR5_InterruptHandler& (0+255),w,b
 32354  01BB26  6EFD               	movwf	tosl,c
 32355  01BB28  5194               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 32356  01BB2A  6EFE               	movwf	tosh,c
 32357  01BB2C  5195               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 32358  01BB2E  6EFF               	movwf	tosu,c
 32359  01BB30  50FA               	movf	pclath,w,c
 32360  01BB32  0012               	return		;indir
 32361  01BB34                     __end_of_TMR5_CallBack:
 32362                           	opt callstack 0
 32363                           
 32364 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 32365 ;; Defined at:
 32366 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 32367 ;; Parameters:    Size  Location     Type
 32368 ;;		None
 32369 ;; Auto vars:     Size  Location     Type
 32370 ;;		None
 32371 ;; Return value:  Size  Location     Type
 32372 ;;                  1  [STACK] void 
 32373 ;; Registers used:
 32374 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 32375 ;; Tracked objects:
 32376 ;;		On entry : 3F/0
 32377 ;;		On exit  : 0/0
 32378 ;;		Unchanged: 0/0
 32379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32384 ;;Total ram usage:        0 bytes
 32385 ;; Hardware stack levels used:    1
 32386 ;; Hardware stack levels required when called:    7
 32387 ;; This function calls:
 32388 ;;		_check_day_time
 32389 ;; This function is called by:
 32390 ;;		_TMR5_Initialize
 32391 ;;		_TMR5_CallBack
 32392 ;; This function uses a reentrant model
 32393 ;;
 32394                           
 32395                           	psect	text143
 32396  01B570                     __ptext143:
 32397                           	opt callstack 0
 32398  01B570                     _TMR5_DefaultInterruptHandler:
 32399                           	opt callstack 8
 32400                           
 32401                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 32402                           
 32403                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32404                           ;incstack = 0
 32405  01B570  A0BE               	btfss	190,0,c	;volatile
 32406  01B572  D002               	goto	u939_20
 32407  01B574  0E01               	movlw	1
 32408  01B576  D001               	goto	u939_26
 32409  01B578                     u939_20:
 32410  01B578  0E00               	movlw	0
 32411  01B57A                     u939_26:
 32412  01B57A  0AFF               	xorlw	255
 32413  01B57C  6E0C               	movwf	(btemp+11)^0,c
 32414  01B57E  50BE               	movf	190,w,c	;volatile
 32415  01B580  180C               	xorwf	(btemp+11)^0,w,c
 32416  01B582  0BFE               	andlw	-2
 32417  01B584  180C               	xorwf	(btemp+11)^0,w,c
 32418  01B586  6EBE               	movwf	190,c	;volatile
 32419                           
 32420                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 32421  01B588  0E01               	movlw	1
 32422  01B58A  0101               	movlb	1	; () banked
 32423  01B58C  27BB               	addwf	(_V+187)& (0+255),f,b	;volatile
 32424  01B58E  0E00               	movlw	0
 32425  01B590  23BC               	addwfc	(_V+188)& (0+255),f,b	;volatile
 32426  01B592  23BD               	addwfc	(_V+189)& (0+255),f,b	;volatile
 32427  01B594  23BE               	addwfc	(_V+190)& (0+255),f,b	;volatile
 32428                           
 32429                           ; BSR set to: 1
 32430                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 32431  01B596  0E01               	movlw	1
 32432  01B598  2781               	addwf	(_V+129)& (0+255),f,b	;volatile
 32433  01B59A  0E00               	movlw	0
 32434  01B59C  2382               	addwfc	(_V+130)& (0+255),f,b	;volatile
 32435  01B59E  2383               	addwfc	(_V+131)& (0+255),f,b	;volatile
 32436  01B5A0  2384               	addwfc	(_V+132)& (0+255),f,b	;volatile
 32437                           
 32438                           ; BSR set to: 1
 32439                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 32440  01B5A2  EC80  F0CC         	call	_check_day_time	;wreg free
 32441                           
 32442                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32443  01B5A6  0012               	return		;funcret
 32444  01B5A8                     __end_of_TMR5_DefaultInterruptHandler:
 32445                           	opt callstack 0
 32446                           
 32447 ;; *************** function _check_day_time *****************
 32448 ;; Defined at:
 32449 ;;		line 164 in file "mbmc.c"
 32450 ;; Parameters:    Size  Location     Type
 32451 ;;		None
 32452 ;; Auto vars:     Size  Location     Type
 32453 ;;		None
 32454 ;; Return value:  Size  Location     Type
 32455 ;;                  1  [STACK] _Bool 
 32456 ;; Registers used:
 32457 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 32458 ;; Tracked objects:
 32459 ;;		On entry : 3F/1
 32460 ;;		On exit  : 0/0
 32461 ;;		Unchanged: 0/0
 32462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32467 ;;Total ram usage:        0 bytes
 32468 ;; Hardware stack levels used:    1
 32469 ;; Hardware stack levels required when called:    6
 32470 ;; This function calls:
 32471 ;;		___flge
 32472 ;;		_conv_raw_result
 32473 ;;		_get_ac_charger_relay
 32474 ;;		_set_ac_charger_relay
 32475 ;; This function is called by:
 32476 ;;		_TMR5_DefaultInterruptHandler
 32477 ;; This function uses a reentrant model
 32478 ;;
 32479                           
 32480                           	psect	text144
 32481  019900                     __ptext144:
 32482                           	opt callstack 0
 32483  019900                     _check_day_time:
 32484                           	opt callstack 8
 32485                           
 32486                           ;mbmc.c: 166:  static uint8_t day_delay = 0;;mbmc.c: 168:  if (!day_delay++ && V.system_
      +                          stable) {
 32487                           
 32488                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32489                           ;incstack = 0
 32490  019900  2A42               	incf	check_day_time@day_delay^0,f,c
 32491  019902  0442               	decf	check_day_time@day_delay^0,w,c
 32492  019904  A4D8               	btfss	status,2,c
 32493  019906  D081               	goto	l9751
 32494  019908  0101               	movlb	1	; () banked
 32495  01990A  51AE               	movf	(_V+174)& (0+255),w,b	;volatile
 32496  01990C  B4D8               	btfsc	status,2,c
 32497  01990E  D07D               	goto	l9751
 32498                           
 32499                           ; BSR set to: 1
 32500                           ;mbmc.c: 169:   if (!C.day) {
 32501  019910  EE22  F01D         	lfsr	2,_C+286	;volatile
 32502  019914  50DF               	movf	indf2,w,c
 32503  019916  A4D8               	btfss	status,2,c
 32504  019918  D03A               	goto	l9739
 32505                           
 32506                           ; BSR set to: 1
 32507                           ;mbmc.c: 170:    if (conv_raw_result(V_LIGHT_SENSOR, CONV) > 22.0) {
 32508  01991A  0E00               	movlw	0
 32509  01991C  6EE6               	movwf	postinc1,c
 32510  01991E  0E0D               	movlw	13
 32511  019920  6EE6               	movwf	postinc1,c
 32512  019922  EC0D  F0A8         	call	_conv_raw_result	;wreg free
 32513  019926  0060  F007  FFE6   	movff	btemp,postinc1
 32514  01992C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32515  019932  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32516  019938  0060  F013  FFE6   	movff	btemp+3,postinc1
 32517  01993E  0E00               	movlw	0
 32518  019940  6EE6               	movwf	postinc1,c
 32519  019942  0E00               	movlw	0
 32520  019944  6EE6               	movwf	postinc1,c
 32521  019946  0EB0               	movlw	176
 32522  019948  6EE6               	movwf	postinc1,c
 32523  01994A  0E41               	movlw	65
 32524  01994C  6EE6               	movwf	postinc1,c
 32525  01994E  EC6A  F0C6         	call	___flge	;wreg free
 32526  019952  B001               	btfsc	btemp& (0+255),0,c
 32527  019954  D05A               	goto	l9751
 32528                           
 32529                           ;mbmc.c: 171:     C.day = 1;
 32530  019956  0E01               	movlw	1
 32531  019958  006F FFA0  F81D    	movff	wreg,_C+286	;volatile
 32532                           
 32533                           ;mbmc.c: 172:     C.day_start = V.ticks;
 32534  01995E  EE20  F181         	lfsr	2,_V+129	;volatile
 32535  019962  006F FF78  F81E    	movff	postinc2,_C+287	;volatile
 32536  019968  006F FF78  F81F    	movff	postinc2,_C+288	;volatile
 32537  01996E  006F FF78  F820    	movff	postinc2,_C+289	;volatile
 32538  019974  006F FF74  F821    	movff	postdec2,_C+290	;volatile
 32539                           
 32540                           ;mbmc.c: 173:     if (get_ac_charger_relay()) {
 32541  01997A  ECF1  F0DE         	call	_get_ac_charger_relay	;wreg free
 32542  01997E  5001               	movf	btemp^0,w,c
 32543  019980  B4D8               	btfsc	status,2,c
 32544  019982  0012               	return	
 32545                           
 32546                           ;mbmc.c: 174:      set_ac_charger_relay(0);
 32547  019984  0E00               	movlw	0
 32548  019986  6EE6               	movwf	postinc1,c
 32549  019988  ECDB  F0DE         	call	_set_ac_charger_relay	;wreg free
 32550  01998C  0012               	return	
 32551  01998E                     l9739:
 32552                           
 32553                           ; BSR set to: 1
 32554                           ;mbmc.c: 179:    if (conv_raw_result(V_LIGHT_SENSOR, CONV) < 12.0) {
 32555  01998E  0E00               	movlw	0
 32556  019990  6EE6               	movwf	postinc1,c
 32557  019992  0E00               	movlw	0
 32558  019994  6EE6               	movwf	postinc1,c
 32559  019996  0E40               	movlw	64
 32560  019998  6EE6               	movwf	postinc1,c
 32561  01999A  0E41               	movlw	65
 32562  01999C  6EE6               	movwf	postinc1,c
 32563  01999E  0E00               	movlw	0
 32564  0199A0  6EE6               	movwf	postinc1,c
 32565  0199A2  0E0D               	movlw	13
 32566  0199A4  6EE6               	movwf	postinc1,c
 32567  0199A6  EC0D  F0A8         	call	_conv_raw_result	;wreg free
 32568  0199AA  0060  F007  FFE6   	movff	btemp,postinc1
 32569  0199B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32570  0199B6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32571  0199BC  0060  F013  FFE6   	movff	btemp+3,postinc1
 32572  0199C2  EC6A  F0C6         	call	___flge	;wreg free
 32573  0199C6  B001               	btfsc	btemp& (0+255),0,c
 32574  0199C8  D020               	goto	l9751
 32575                           
 32576                           ;mbmc.c: 180:     C.day = 0;
 32577  0199CA  0E00               	movlw	0
 32578  0199CC  006F FFA0  F81D    	movff	wreg,_C+286	;volatile
 32579                           
 32580                           ;mbmc.c: 181:     C.day_end = V.ticks;
 32581  0199D2  EE20  F181         	lfsr	2,_V+129	;volatile
 32582  0199D6  006F FF78  F822    	movff	postinc2,_C+291	;volatile
 32583  0199DC  006F FF78  F823    	movff	postinc2,_C+292	;volatile
 32584  0199E2  006F FF78  F824    	movff	postinc2,_C+293	;volatile
 32585  0199E8  006F FF74  F825    	movff	postdec2,_C+294	;volatile
 32586                           
 32587                           ;mbmc.c: 185:     if ((C.soc < 50)) {
 32588  0199EE  EE21  F3B1         	lfsr	2,_C+178	;volatile
 32589  0199F2  0E01               	movlw	1
 32590  0199F4  50DB               	movf	plusw2,w,c
 32591  0199F6  E10D               	bnz	l1894
 32592  0199F8  0E32               	movlw	50
 32593  0199FA  5CDE               	subwf	postinc2,w,c
 32594  0199FC  B0D8               	btfsc	status,0,c
 32595  0199FE  0012               	return	
 32596                           
 32597                           ;mbmc.c: 186:      set_ac_charger_relay(1);
 32598  019A00  0E01               	movlw	1
 32599  019A02  6EE6               	movwf	postinc1,c
 32600  019A04  ECDB  F0DE         	call	_set_ac_charger_relay	;wreg free
 32601  019A08  0012               	return	
 32602  019A0A                     l9751:
 32603                           
 32604                           ;mbmc.c: 192:  if (day_delay >= 240)
 32605  019A0A  0EEF               	movlw	239
 32606  019A0C  6442               	cpfsgt	check_day_time@day_delay^0,c
 32607  019A0E  0012               	return	
 32608                           
 32609                           ;mbmc.c: 193:   day_delay = 0;
 32610  019A10  6A42               	clrf	check_day_time@day_delay^0,c
 32611  019A12                     l1894:
 32612                           
 32613                           ; _check_day_time: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 32614  019A12  0012               	return		;funcret
 32615  019A14                     __end_of_check_day_time:
 32616                           	opt callstack 0
 32617                           
 32618 ;; *************** function _set_ac_charger_relay *****************
 32619 ;; Defined at:
 32620 ;;		line 134 in file "mbmc.c"
 32621 ;; Parameters:    Size  Location     Type
 32622 ;;  mode            1  [STACK] _Bool 
 32623 ;; Auto vars:     Size  Location     Type
 32624 ;;		None
 32625 ;; Return value:  Size  Location     Type
 32626 ;;                  1  [STACK] void 
 32627 ;; Registers used:
 32628 ;;		wreg, fsr1l, fsr1h
 32629 ;; Tracked objects:
 32630 ;;		On entry : 0/1
 32631 ;;		On exit  : 0/0
 32632 ;;		Unchanged: 0/0
 32633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32638 ;;Total ram usage:        0 bytes
 32639 ;; Hardware stack levels used:    1
 32640 ;; Hardware stack levels required when called:    3
 32641 ;; This function calls:
 32642 ;;		Nothing
 32643 ;; This function is called by:
 32644 ;;		_check_day_time
 32645 ;; This function uses a reentrant model
 32646 ;;
 32647                           
 32648                           	psect	text145
 32649  01BDB6                     __ptext145:
 32650                           	opt callstack 0
 32651  01BDB6                     _set_ac_charger_relay:
 32652                           	opt callstack 10
 32653                           
 32654                           ;mbmc.c: 134: void set_ac_charger_relay(_Bool mode);mbmc.c: 135: {;mbmc.c: 136:  LATDbit
      +                          s.LATD6 = mode;
 32655                           ;stkvar	_mode @ sp[(0)+-1]
 32656                           
 32657                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32658                           ;incstack = 0
 32659  01BDB6  0EFF               	movlw	-1
 32660  01BDB8  B0E3               	btfsc	plusw1,0,c
 32661  01BDBA  D002               	bra	u916_25
 32662  01BDBC  9CBD               	bcf	189,6,c	;volatile
 32663  01BDBE  D001               	bra	u916_26
 32664  01BDC0                     u916_25:
 32665  01BDC0  8CBD               	bsf	189,6,c	;volatile
 32666  01BDC2                     u916_26:
 32667                           
 32668                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 32669  01BDC2  52E5               	movf	postdec1,f,c
 32670  01BDC4  0012               	return		;funcret
 32671  01BDC6                     __end_of_set_ac_charger_relay:
 32672                           	opt callstack 0
 32673                           
 32674 ;; *************** function _get_ac_charger_relay *****************
 32675 ;; Defined at:
 32676 ;;		line 139 in file "mbmc.c"
 32677 ;; Parameters:    Size  Location     Type
 32678 ;;		None
 32679 ;; Auto vars:     Size  Location     Type
 32680 ;;		None
 32681 ;; Return value:  Size  Location     Type
 32682 ;;                  1  [STACK] _Bool 
 32683 ;; Registers used:
 32684 ;;		btemp
 32685 ;; Tracked objects:
 32686 ;;		On entry : 0/1
 32687 ;;		On exit  : 0/0
 32688 ;;		Unchanged: 0/0
 32689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32694 ;;Total ram usage:        0 bytes
 32695 ;; Hardware stack levels used:    1
 32696 ;; Hardware stack levels required when called:    3
 32697 ;; This function calls:
 32698 ;;		Nothing
 32699 ;; This function is called by:
 32700 ;;		_check_day_time
 32701 ;;		_calc_bsoc
 32702 ;; This function uses a reentrant model
 32703 ;;
 32704                           
 32705                           	psect	text146
 32706  01BDE2                     __ptext146:
 32707                           	opt callstack 0
 32708  01BDE2                     _get_ac_charger_relay:
 32709                           	opt callstack 11
 32710                           
 32711                           ;mbmc.c: 141:  return LATDbits.LATD6;
 32712                           
 32713                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32714                           ;incstack = 0
 32715  01BDE2  ACBD               	btfss	189,6,c	;volatile
 32716  01BDE4  D003               	goto	u932_20
 32717  01BDE6  6A01               	clrf	btemp^0,c
 32718  01BDE8  2A01               	incf	btemp^0,f,c
 32719  01BDEA  0012               	return	
 32720  01BDEC                     u932_20:
 32721  01BDEC  6A01               	clrf	btemp^0,c
 32722                           
 32723                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 32724  01BDEE  0012               	return		;funcret
 32725  01BDF0                     __end_of_get_ac_charger_relay:
 32726                           	opt callstack 0
 32727                           
 32728 ;; *************** function _TMR3_ISR *****************
 32729 ;; Defined at:
 32730 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 32731 ;; Parameters:    Size  Location     Type
 32732 ;;		None
 32733 ;; Auto vars:     Size  Location     Type
 32734 ;;		None
 32735 ;; Return value:  Size  Location     Type
 32736 ;;                  1    wreg      void 
 32737 ;; Registers used:
 32738 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 32739 ;; Tracked objects:
 32740 ;;		On entry : 0/0
 32741 ;;		On exit  : 3F/0
 32742 ;;		Unchanged: 0/0
 32743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32746 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32747 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32748 ;;Total ram usage:       25 bytes
 32749 ;; Hardware stack levels used:    1
 32750 ;; Hardware stack levels required when called:   14
 32751 ;; This function calls:
 32752 ;;		_TMR3_CallBack
 32753 ;;		_TMR3_WriteTimer
 32754 ;; This function is called by:
 32755 ;;		Interrupt level 1
 32756 ;; This function uses a non-reentrant model
 32757 ;;
 32758                           
 32759                           	psect	text147
 32760  018E38                     __ptext147:
 32761                           	opt callstack 0
 32762  018E38                     _TMR3_ISR:
 32763                           	opt callstack 3
 32764                           
 32765                           ;incstack = 0
 32766  018E38  006F FF60  F0E5    	movff	status,??_TMR3_ISR
 32767  018E3E  006F FFD8  F0E6    	movff	tblptrl,??_TMR3_ISR+1
 32768  018E44  006F FFDC  F0E7    	movff	tblptrh,??_TMR3_ISR+2
 32769  018E4A  006F FFE0  F0E8    	movff	tblptru,??_TMR3_ISR+3
 32770  018E50  006F FFD4  F0E9    	movff	tablat,??_TMR3_ISR+4
 32771  018E56  0060  F004  F0EA   	movff	btemp,??_TMR3_ISR+5
 32772  018E5C  0060  F008  F0EB   	movff	btemp+1,??_TMR3_ISR+6
 32773  018E62  0060  F00C  F0EC   	movff	btemp+2,??_TMR3_ISR+7
 32774  018E68  0060  F010  F0ED   	movff	btemp+3,??_TMR3_ISR+8
 32775  018E6E  0060  F014  F0EE   	movff	btemp+4,??_TMR3_ISR+9
 32776  018E74  0060  F018  F0EF   	movff	btemp+5,??_TMR3_ISR+10
 32777  018E7A  0060  F01C  F0F0   	movff	btemp+6,??_TMR3_ISR+11
 32778  018E80  0060  F020  F0F1   	movff	btemp+7,??_TMR3_ISR+12
 32779  018E86  0060  F024  F0F2   	movff	btemp+8,??_TMR3_ISR+13
 32780  018E8C  0060  F028  F0F3   	movff	btemp+9,??_TMR3_ISR+14
 32781  018E92  0060  F02C  F0F4   	movff	btemp+10,??_TMR3_ISR+15
 32782  018E98  0060  F030  F0F5   	movff	btemp+11,??_TMR3_ISR+16
 32783  018E9E  0060  F044  F0F6   	movff	btemp+16,??_TMR3_ISR+17
 32784  018EA4  0060  F048  F0F7   	movff	btemp+17,??_TMR3_ISR+18
 32785  018EAA  0060  F04C  F0F8   	movff	btemp+18,??_TMR3_ISR+19
 32786  018EB0  0060  F050  F0F9   	movff	btemp+19,??_TMR3_ISR+20
 32787  018EB6  0060  F054  F0FA   	movff	btemp+20,??_TMR3_ISR+21
 32788  018EBC  0060  F058  F0FB   	movff	btemp+21,??_TMR3_ISR+22
 32789  018EC2  0060  F05C  F0FC   	movff	btemp+22,??_TMR3_ISR+23
 32790  018EC8  0060  F060  F0FD   	movff	btemp+23,??_TMR3_ISR+24
 32791  018ECE  EE16  F0AE         	lfsr	1,___intlo_sp
 32792                           
 32793                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 32794  018ED2  0139               	movlb	57	; () banked
 32795  018ED4  9DA6               	bcf	166,6,b	;volatile
 32796                           
 32797                           ; BSR set to: 57
 32798                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 32799  018ED6  0060  F2CB  FFE6   	movff	_timer3ReloadVal,postinc1
 32800  018EDC  0060  F2CF  FFE6   	movff	_timer3ReloadVal+1,postinc1
 32801  018EE2  EC21  F0DA         	call	_TMR3_WriteTimer	;wreg free
 32802                           
 32803                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 32804  018EE6  0100               	movlb	0	; () banked
 32805  018EE8  4BB0               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 32806  018EEA  2BB1               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 32807  018EEC  51B1               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 32808  018EEE  E104               	bnz	i1u1251_20
 32809  018EF0  0E28               	movlw	40
 32810  018EF2  5DB0               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 32811  018EF4  A0D8               	btfss	status,0,c
 32812  018EF6  D005               	goto	i1l1207
 32813  018EF8                     i1u1251_20:
 32814                           
 32815                           ; BSR set to: 0
 32816                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 32817  018EF8  EC9A  F0DD         	call	_TMR3_CallBack	;wreg free
 32818                           
 32819                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 32820  018EFC  0100               	movlb	0	; () banked
 32821  018EFE  6BB0               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 32822  018F00  6BB1               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 32823  018F02                     i1l1207:
 32824                           
 32825                           ; BSR set to: 0
 32826  018F02  0060  F3F4  F018   	movff	??_TMR3_ISR+24,btemp+23
 32827  018F08  0060  F3F0  F017   	movff	??_TMR3_ISR+23,btemp+22
 32828  018F0E  0060  F3EC  F016   	movff	??_TMR3_ISR+22,btemp+21
 32829  018F14  0060  F3E8  F015   	movff	??_TMR3_ISR+21,btemp+20
 32830  018F1A  0060  F3E4  F014   	movff	??_TMR3_ISR+20,btemp+19
 32831  018F20  0060  F3E0  F013   	movff	??_TMR3_ISR+19,btemp+18
 32832  018F26  0060  F3DC  F012   	movff	??_TMR3_ISR+18,btemp+17
 32833  018F2C  0060  F3D8  F011   	movff	??_TMR3_ISR+17,btemp+16
 32834  018F32  0060  F3D4  F00C   	movff	??_TMR3_ISR+16,btemp+11
 32835  018F38  0060  F3D0  F00B   	movff	??_TMR3_ISR+15,btemp+10
 32836  018F3E  0060  F3CC  F00A   	movff	??_TMR3_ISR+14,btemp+9
 32837  018F44  0060  F3C8  F009   	movff	??_TMR3_ISR+13,btemp+8
 32838  018F4A  0060  F3C4  F008   	movff	??_TMR3_ISR+12,btemp+7
 32839  018F50  0060  F3C0  F007   	movff	??_TMR3_ISR+11,btemp+6
 32840  018F56  0060  F3BC  F006   	movff	??_TMR3_ISR+10,btemp+5
 32841  018F5C  0060  F3B8  F005   	movff	??_TMR3_ISR+9,btemp+4
 32842  018F62  0060  F3B4  F004   	movff	??_TMR3_ISR+8,btemp+3
 32843  018F68  0060  F3B0  F003   	movff	??_TMR3_ISR+7,btemp+2
 32844  018F6E  0060  F3AC  F002   	movff	??_TMR3_ISR+6,btemp+1
 32845  018F74  0060  F3A8  F001   	movff	??_TMR3_ISR+5,btemp
 32846  018F7A  0060  F3A7  FFF5   	movff	??_TMR3_ISR+4,tablat
 32847  018F80  0060  F3A3  FFF8   	movff	??_TMR3_ISR+3,tblptru
 32848  018F86  0060  F39F  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 32849  018F8C  0060  F39B  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 32850  018F92  0060  F397  FFD8   	movff	??_TMR3_ISR,status
 32851  018F98  0011               	retfie		f
 32852  018F9A                     __end_of_TMR3_ISR:
 32853                           	opt callstack 0
 32854                           
 32855 ;; *************** function _TMR3_WriteTimer *****************
 32856 ;; Defined at:
 32857 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 32858 ;; Parameters:    Size  Location     Type
 32859 ;;  timerVal        2  [STACK] unsigned short 
 32860 ;; Auto vars:     Size  Location     Type
 32861 ;;		None
 32862 ;; Return value:  Size  Location     Type
 32863 ;;                  1  [STACK] void 
 32864 ;; Registers used:
 32865 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 32866 ;; Tracked objects:
 32867 ;;		On entry : 3F/39
 32868 ;;		On exit  : 0/0
 32869 ;;		Unchanged: 0/0
 32870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32875 ;;Total ram usage:        0 bytes
 32876 ;; Hardware stack levels used:    1
 32877 ;; Hardware stack levels required when called:    3
 32878 ;; This function calls:
 32879 ;;		Nothing
 32880 ;; This function is called by:
 32881 ;;		_TMR3_ISR
 32882 ;; This function uses a reentrant model
 32883 ;;
 32884                           
 32885                           	psect	text148
 32886  01B442                     __ptext148:
 32887                           	opt callstack 0
 32888  01B442                     _TMR3_WriteTimer:
 32889                           	opt callstack 13
 32890                           
 32891                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 32892                           
 32893                           ; BSR set to: 0
 32894                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32895                           ;incstack = 0
 32896  01B442  A4A6               	btfss	166,2,c	;volatile
 32897  01B444  D00F               	goto	l10621
 32898                           
 32899                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 32900  01B446  90A6               	bcf	166,0,c	;volatile
 32901                           
 32902                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 32903                           ;stkvar	_timerVal @ sp[(0)+-2]
 32904  01B448  0EFF               	movlw	255
 32905  01B44A  24E1               	addwf	fsr1l,w,c
 32906  01B44C  6ED9               	movwf	fsr2l,c
 32907  01B44E  0EFF               	movlw	255
 32908  01B450  20E2               	addwfc	fsr1h,w,c
 32909  01B452  6EDA               	movwf	fsr2h,c
 32910  01B454  50DF               	movf	indf2,w,c
 32911  01B456  6EA5               	movwf	165,c	;volatile
 32912                           
 32913                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 32914                           ;stkvar	_timerVal @ sp[(0)+-2]
 32915  01B458  0EFE               	movlw	-2
 32916  01B45A  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 32917                           
 32918                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 32919  01B460  80A6               	bsf	166,0,c	;volatile
 32920                           
 32921                           ;mcc_generated_files/tmr3.c: 141:     }
 32922  01B462  D00C               	goto	l1190
 32923  01B464                     l10621:
 32924                           
 32925                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 32926                           ;stkvar	_timerVal @ sp[(0)+-2]
 32927  01B464  0EFF               	movlw	255
 32928  01B466  24E1               	addwf	fsr1l,w,c
 32929  01B468  6ED9               	movwf	fsr2l,c
 32930  01B46A  0EFF               	movlw	255
 32931  01B46C  20E2               	addwfc	fsr1h,w,c
 32932  01B46E  6EDA               	movwf	fsr2h,c
 32933  01B470  50DF               	movf	indf2,w,c
 32934  01B472  6EA5               	movwf	165,c	;volatile
 32935                           
 32936                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 32937                           ;stkvar	_timerVal @ sp[(0)+-2]
 32938  01B474  0EFE               	movlw	-2
 32939  01B476  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 32940  01B47C                     l1190:
 32941                           
 32942                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 32943  01B47C  52E5               	movf	postdec1,f,c
 32944  01B47E  52E5               	movf	postdec1,f,c
 32945  01B480  0012               	return		;funcret
 32946  01B482                     __end_of_TMR3_WriteTimer:
 32947                           	opt callstack 0
 32948                           
 32949 ;; *************** function _TMR3_CallBack *****************
 32950 ;; Defined at:
 32951 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 32952 ;; Parameters:    Size  Location     Type
 32953 ;;		None
 32954 ;; Auto vars:     Size  Location     Type
 32955 ;;		None
 32956 ;; Return value:  Size  Location     Type
 32957 ;;                  1  [STACK] void 
 32958 ;; Registers used:
 32959 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 32960 ;; Tracked objects:
 32961 ;;		On entry : 3F/0
 32962 ;;		On exit  : 0/0
 32963 ;;		Unchanged: 0/0
 32964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32969 ;;Total ram usage:        0 bytes
 32970 ;; Hardware stack levels used:    1
 32971 ;; Hardware stack levels required when called:   13
 32972 ;; This function calls:
 32973 ;;		Absolute function
 32974 ;;		_TMR3_DefaultInterruptHandler
 32975 ;;		_calc_bsoc
 32976 ;; This function is called by:
 32977 ;;		_TMR3_ISR
 32978 ;; This function uses a reentrant model
 32979 ;;
 32980                           
 32981                           	psect	text149
 32982  01BB34                     __ptext149:
 32983                           	opt callstack 0
 32984  01BB34                     _TMR3_CallBack:
 32985                           	opt callstack 3
 32986                           
 32987                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 32988                           
 32989                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32990                           ;incstack = 0
 32991  01BB34  0100               	movlb	0	; () banked
 32992  01BB36  5190               	movf	_TMR3_InterruptHandler& (0+255),w,b
 32993  01BB38  1191               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 32994  01BB3A  1192               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 32995  01BB3C  B4D8               	btfsc	status,2,c
 32996  01BB3E  0012               	return	
 32997                           
 32998                           ; BSR set to: 0
 32999                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 33000  01BB40  D801               	call	u1236_28
 33001  01BB42  0012               	return	
 33002  01BB44                     u1236_28:
 33003  01BB44  0005               	push	
 33004  01BB46  6EFA               	movwf	pclath,c
 33005  01BB48  5190               	movf	_TMR3_InterruptHandler& (0+255),w,b
 33006  01BB4A  6EFD               	movwf	tosl,c
 33007  01BB4C  5191               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 33008  01BB4E  6EFE               	movwf	tosh,c
 33009  01BB50  5192               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 33010  01BB52  6EFF               	movwf	tosu,c
 33011  01BB54  50FA               	movf	pclath,w,c
 33012  01BB56  0012               	return		;indir
 33013  01BB58                     __end_of_TMR3_CallBack:
 33014                           	opt callstack 0
 33015                           
 33016 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 33017 ;; Defined at:
 33018 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 33019 ;; Parameters:    Size  Location     Type
 33020 ;;		None
 33021 ;; Auto vars:     Size  Location     Type
 33022 ;;		None
 33023 ;; Return value:  Size  Location     Type
 33024 ;;                  1  [STACK] void 
 33025 ;; Registers used:
 33026 ;;		None
 33027 ;; Tracked objects:
 33028 ;;		On entry : 3F/0
 33029 ;;		On exit  : 0/0
 33030 ;;		Unchanged: 0/0
 33031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33036 ;;Total ram usage:        0 bytes
 33037 ;; Hardware stack levels used:    1
 33038 ;; Hardware stack levels required when called:    3
 33039 ;; This function calls:
 33040 ;;		Nothing
 33041 ;; This function is called by:
 33042 ;;		_TMR3_Initialize
 33043 ;;		_TMR3_CallBack
 33044 ;; This function uses a reentrant model
 33045 ;;
 33046                           
 33047                           	psect	text150
 33048  01BE98                     __ptext150:
 33049                           	opt callstack 0
 33050  01BE98                     _TMR3_DefaultInterruptHandler:
 33051                           	opt callstack 12
 33052                           
 33053                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33054                           
 33055                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33056                           ;incstack = 0
 33057  01BE98  0012               	return		;funcret
 33058  01BE9A                     __end_of_TMR3_DefaultInterruptHandler:
 33059                           	opt callstack 0
 33060                           
 33061 ;; *************** function _calc_bsoc *****************
 33062 ;; Defined at:
 33063 ;;		line 39 in file "bsoc.c"
 33064 ;; Parameters:    Size  Location     Type
 33065 ;;		None
 33066 ;; Auto vars:     Size  Location     Type
 33067 ;;  log_ptr         2  [STACK] PTR unsigned char 
 33068 ;;		 -> port_data(512), 
 33069 ;; Return value:  Size  Location     Type
 33070 ;;                  1  [STACK] void 
 33071 ;; Registers used:
 33072 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 33073 ;; Tracked objects:
 33074 ;;		On entry : 3F/0
 33075 ;;		On exit  : 5/1
 33076 ;;		Unchanged: 0/0
 33077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33082 ;;Total ram usage:        0 bytes
 33083 ;; Hardware stack levels used:    1
 33084 ;; Hardware stack levels required when called:   12
 33085 ;; This function calls:
 33086 ;;		_StartTimer
 33087 ;;		___asfladd
 33088 ;;		___fldiv
 33089 ;;		___flge
 33090 ;;		___flmul
 33091 ;;		___flneg
 33092 ;;		___fltol
 33093 ;;		_fabsf
 33094 ;;		_get_ac_charger_relay
 33095 ;;		_port_data_dma_ptr
 33096 ;;		_send_port_data_dma
 33097 ;;		_sprintf
 33098 ;;		_strlen
 33099 ;; This function is called by:
 33100 ;;		_init_bsoc
 33101 ;;		_TMR3_CallBack
 33102 ;; This function uses a reentrant model
 33103 ;;
 33104                           
 33105                           	psect	text151
 33106  014324                     __ptext151:
 33107                           	opt callstack 0
 33108  014324                     _calc_bsoc:
 33109                           	opt callstack 0
 33110                           
 33111                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33112  014324  52E6               	movf	postinc1,f,c
 33113  014326  52E6               	movf	postinc1,f,c
 33114                           
 33115                           ;incstack = 0
 33116                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 44:  do { LATEbits.LATE1 = 1; } while(0);
 33117  014328  82BE               	bsf	190,1,c	;volatile
 33118                           
 33119                           ;bsoc.c: 46:  C.dynamic_ah += (C.c_bat / 3600.0);
 33120  01432A  0E00               	movlw	0
 33121  01432C  6EE6               	movwf	postinc1,c
 33122  01432E  0E00               	movlw	0
 33123  014330  6EE6               	movwf	postinc1,c
 33124  014332  0E61               	movlw	97
 33125  014334  6EE6               	movwf	postinc1,c
 33126  014336  0E45               	movlw	69
 33127  014338  6EE6               	movwf	postinc1,c
 33128  01433A  EE21  F343         	lfsr	2,_C+68	;volatile
 33129  01433E  006F FF7B FFE6     	movff	postinc2,postinc1
 33130  014344  006F FF7B FFE6     	movff	postinc2,postinc1
 33131  01434A  006F FF7B FFE6     	movff	postinc2,postinc1
 33132  014350  006F FF7B FFE6     	movff	postinc2,postinc1
 33133  014356  EC50  F0A5         	call	___fldiv	;wreg free
 33134  01435A  0060  F007  FFE6   	movff	btemp,postinc1
 33135  014360  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33136  014366  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33137  01436C  0060  F013  FFE6   	movff	btemp+3,postinc1
 33138  014372  0E8F               	movlw	low (_C+144)
 33139  014374  6EE6               	movwf	postinc1,c
 33140  014376  0E07               	movlw	high (_C+144)
 33141  014378  6EE6               	movwf	postinc1,c
 33142  01437A  EC79  F0D5         	call	___asfladd	;wreg free
 33143                           
 33144                           ;bsoc.c: 47:  if (C.dynamic_ah > (C.bank_ah))
 33145  01437E  EE21  F38F         	lfsr	2,_C+144	;volatile
 33146  014382  006F FF7B FFE6     	movff	postinc2,postinc1
 33147  014388  006F FF7B FFE6     	movff	postinc2,postinc1
 33148  01438E  006F FF7B FFE6     	movff	postinc2,postinc1
 33149  014394  006F FF7B FFE6     	movff	postinc2,postinc1
 33150  01439A  EE21  F38B         	lfsr	2,_C+140	;volatile
 33151  01439E  006F FF7B FFE6     	movff	postinc2,postinc1
 33152  0143A4  006F FF7B FFE6     	movff	postinc2,postinc1
 33153  0143AA  006F FF7B FFE6     	movff	postinc2,postinc1
 33154  0143B0  006F FF7B FFE6     	movff	postinc2,postinc1
 33155  0143B6  EC6A  F0C6         	call	___flge	;wreg free
 33156  0143BA  B001               	btfsc	btemp& (0+255),0,c
 33157  0143BC  D00E               	goto	l12637
 33158                           
 33159                           ;bsoc.c: 48:   C.dynamic_ah = C.bank_ah;
 33160  0143BE  EE21  F38B         	lfsr	2,_C+140	;volatile
 33161  0143C2  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
 33162  0143C8  006F FF78  F790    	movff	postinc2,_C+145	;volatile
 33163  0143CE  006F FF78  F791    	movff	postinc2,_C+146	;volatile
 33164  0143D4  006F FF74  F792    	movff	postdec2,_C+147	;volatile
 33165  0143DA                     l12637:
 33166                           
 33167                           ;bsoc.c: 49:  if (C.dynamic_ah < 0.1)
 33168  0143DA  0ECD               	movlw	205
 33169  0143DC  6EE6               	movwf	postinc1,c
 33170  0143DE  0ECC               	movlw	204
 33171  0143E0  6EE6               	movwf	postinc1,c
 33172  0143E2  0ECC               	movlw	204
 33173  0143E4  6EE6               	movwf	postinc1,c
 33174  0143E6  0E3D               	movlw	61
 33175  0143E8  6EE6               	movwf	postinc1,c
 33176  0143EA  EE21  F38F         	lfsr	2,_C+144	;volatile
 33177  0143EE  006F FF7B FFE6     	movff	postinc2,postinc1
 33178  0143F4  006F FF7B FFE6     	movff	postinc2,postinc1
 33179  0143FA  006F FF7B FFE6     	movff	postinc2,postinc1
 33180  014400  006F FF7B FFE6     	movff	postinc2,postinc1
 33181  014406  EC6A  F0C6         	call	___flge	;wreg free
 33182  01440A  B001               	btfsc	btemp& (0+255),0,c
 33183  01440C  D010               	goto	l12641
 33184                           
 33185                           ;bsoc.c: 50:   C.dynamic_ah = 0.1;
 33186  01440E  0ECD               	movlw	205
 33187  014410  006F FFA0  F78F    	movff	wreg,_C+144	;volatile
 33188  014416  0ECC               	movlw	204
 33189  014418  006F FFA0  F790    	movff	wreg,_C+145	;volatile
 33190  01441E  0ECC               	movlw	204
 33191  014420  006F FFA0  F791    	movff	wreg,_C+146	;volatile
 33192  014426  0E3D               	movlw	61
 33193  014428  006F FFA0  F792    	movff	wreg,_C+147	;volatile
 33194  01442E                     l12641:
 33195                           
 33196                           ;bsoc.c: 52:  C.pv_ah += (C.c_pv / 3600.0);
 33197  01442E  0E00               	movlw	0
 33198  014430  6EE6               	movwf	postinc1,c
 33199  014432  0E00               	movlw	0
 33200  014434  6EE6               	movwf	postinc1,c
 33201  014436  0E61               	movlw	97
 33202  014438  6EE6               	movwf	postinc1,c
 33203  01443A  0E45               	movlw	69
 33204  01443C  6EE6               	movwf	postinc1,c
 33205  01443E  EE21  F347         	lfsr	2,_C+72	;volatile
 33206  014442  006F FF7B FFE6     	movff	postinc2,postinc1
 33207  014448  006F FF7B FFE6     	movff	postinc2,postinc1
 33208  01444E  006F FF7B FFE6     	movff	postinc2,postinc1
 33209  014454  006F FF7B FFE6     	movff	postinc2,postinc1
 33210  01445A  EC50  F0A5         	call	___fldiv	;wreg free
 33211  01445E  0060  F007  FFE6   	movff	btemp,postinc1
 33212  014464  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33213  01446A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33214  014470  0060  F013  FFE6   	movff	btemp+3,postinc1
 33215  014476  0E93               	movlw	low (_C+148)
 33216  014478  6EE6               	movwf	postinc1,c
 33217  01447A  0E07               	movlw	high (_C+148)
 33218  01447C  6EE6               	movwf	postinc1,c
 33219  01447E  EC79  F0D5         	call	___asfladd	;wreg free
 33220                           
 33221                           ;bsoc.c: 53:  C.pvkw += (C.p_pv / 3600.0);
 33222  014482  0E00               	movlw	0
 33223  014484  6EE6               	movwf	postinc1,c
 33224  014486  0E00               	movlw	0
 33225  014488  6EE6               	movwf	postinc1,c
 33226  01448A  0E61               	movlw	97
 33227  01448C  6EE6               	movwf	postinc1,c
 33228  01448E  0E45               	movlw	69
 33229  014490  6EE6               	movwf	postinc1,c
 33230  014492  EE21  F37B         	lfsr	2,_C+124	;volatile
 33231  014496  006F FF7B FFE6     	movff	postinc2,postinc1
 33232  01449C  006F FF7B FFE6     	movff	postinc2,postinc1
 33233  0144A2  006F FF7B FFE6     	movff	postinc2,postinc1
 33234  0144A8  006F FF7B FFE6     	movff	postinc2,postinc1
 33235  0144AE  EC50  F0A5         	call	___fldiv	;wreg free
 33236  0144B2  0060  F007  FFE6   	movff	btemp,postinc1
 33237  0144B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33238  0144BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33239  0144C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 33240  0144CA  0EA3               	movlw	low (_C+164)
 33241  0144CC  6EE6               	movwf	postinc1,c
 33242  0144CE  0E07               	movlw	high (_C+164)
 33243  0144D0  6EE6               	movwf	postinc1,c
 33244  0144D2  EC79  F0D5         	call	___asfladd	;wreg free
 33245                           
 33246                           ;bsoc.c: 54:  C.invkw += (C.p_inverter / 3600.0);
 33247  0144D6  0E00               	movlw	0
 33248  0144D8  6EE6               	movwf	postinc1,c
 33249  0144DA  0E00               	movlw	0
 33250  0144DC  6EE6               	movwf	postinc1,c
 33251  0144DE  0E61               	movlw	97
 33252  0144E0  6EE6               	movwf	postinc1,c
 33253  0144E2  0E45               	movlw	69
 33254  0144E4  6EE6               	movwf	postinc1,c
 33255  0144E6  EE21  F377         	lfsr	2,_C+120	;volatile
 33256  0144EA  006F FF7B FFE6     	movff	postinc2,postinc1
 33257  0144F0  006F FF7B FFE6     	movff	postinc2,postinc1
 33258  0144F6  006F FF7B FFE6     	movff	postinc2,postinc1
 33259  0144FC  006F FF7B FFE6     	movff	postinc2,postinc1
 33260  014502  EC50  F0A5         	call	___fldiv	;wreg free
 33261  014506  0060  F007  FFE6   	movff	btemp,postinc1
 33262  01450C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33263  014512  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33264  014518  0060  F013  FFE6   	movff	btemp+3,postinc1
 33265  01451E  0EA7               	movlw	low (_C+168)
 33266  014520  6EE6               	movwf	postinc1,c
 33267  014522  0E07               	movlw	high (_C+168)
 33268  014524  6EE6               	movwf	postinc1,c
 33269  014526  EC79  F0D5         	call	___asfladd	;wreg free
 33270                           
 33271                           ;bsoc.c: 55:  C.loadkw += (C.p_load / 3600.0);
 33272  01452A  0E00               	movlw	0
 33273  01452C  6EE6               	movwf	postinc1,c
 33274  01452E  0E00               	movlw	0
 33275  014530  6EE6               	movwf	postinc1,c
 33276  014532  0E61               	movlw	97
 33277  014534  6EE6               	movwf	postinc1,c
 33278  014536  0E45               	movlw	69
 33279  014538  6EE6               	movwf	postinc1,c
 33280  01453A  EE21  F373         	lfsr	2,_C+116	;volatile
 33281  01453E  006F FF7B FFE6     	movff	postinc2,postinc1
 33282  014544  006F FF7B FFE6     	movff	postinc2,postinc1
 33283  01454A  006F FF7B FFE6     	movff	postinc2,postinc1
 33284  014550  006F FF7B FFE6     	movff	postinc2,postinc1
 33285  014556  EC50  F0A5         	call	___fldiv	;wreg free
 33286  01455A  0060  F007  FFE6   	movff	btemp,postinc1
 33287  014560  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33288  014566  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33289  01456C  0060  F013  FFE6   	movff	btemp+3,postinc1
 33290  014572  0EAB               	movlw	low (_C+172)
 33291  014574  6EE6               	movwf	postinc1,c
 33292  014576  0E07               	movlw	high (_C+172)
 33293  014578  6EE6               	movwf	postinc1,c
 33294  01457A  EC79  F0D5         	call	___asfladd	;wreg free
 33295                           
 33296                           ;bsoc.c: 56:  if (C.p_bat > 0.0)
 33297  01457E  EE21  F37F         	lfsr	2,_C+128	;volatile
 33298  014582  006F FF7B FFE6     	movff	postinc2,postinc1
 33299  014588  006F FF7B FFE6     	movff	postinc2,postinc1
 33300  01458E  006F FF7B FFE6     	movff	postinc2,postinc1
 33301  014594  006F FF7B FFE6     	movff	postinc2,postinc1
 33302  01459A  0E00               	movlw	0
 33303  01459C  6EE6               	movwf	postinc1,c
 33304  01459E  0E00               	movlw	0
 33305  0145A0  6EE6               	movwf	postinc1,c
 33306  0145A2  0E00               	movlw	0
 33307  0145A4  6EE6               	movwf	postinc1,c
 33308  0145A6  0E00               	movlw	0
 33309  0145A8  6EE6               	movwf	postinc1,c
 33310  0145AA  EC6A  F0C6         	call	___flge	;wreg free
 33311  0145AE  B001               	btfsc	btemp& (0+255),0,c
 33312  0145B0  D02A               	goto	l12647
 33313                           
 33314                           ;bsoc.c: 57:   C.bkwi += (C.p_bat / 3600.0);
 33315  0145B2  0E00               	movlw	0
 33316  0145B4  6EE6               	movwf	postinc1,c
 33317  0145B6  0E00               	movlw	0
 33318  0145B8  6EE6               	movwf	postinc1,c
 33319  0145BA  0E61               	movlw	97
 33320  0145BC  6EE6               	movwf	postinc1,c
 33321  0145BE  0E45               	movlw	69
 33322  0145C0  6EE6               	movwf	postinc1,c
 33323  0145C2  EE21  F37F         	lfsr	2,_C+128	;volatile
 33324  0145C6  006F FF7B FFE6     	movff	postinc2,postinc1
 33325  0145CC  006F FF7B FFE6     	movff	postinc2,postinc1
 33326  0145D2  006F FF7B FFE6     	movff	postinc2,postinc1
 33327  0145D8  006F FF7B FFE6     	movff	postinc2,postinc1
 33328  0145DE  EC50  F0A5         	call	___fldiv	;wreg free
 33329  0145E2  0060  F007  FFE6   	movff	btemp,postinc1
 33330  0145E8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33331  0145EE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33332  0145F4  0060  F013  FFE6   	movff	btemp+3,postinc1
 33333  0145FA  0E9B               	movlw	low (_C+156)
 33334  0145FC  6EE6               	movwf	postinc1,c
 33335  0145FE  0E07               	movlw	high (_C+156)
 33336  014600  6EE6               	movwf	postinc1,c
 33337  014602  EC79  F0D5         	call	___asfladd	;wreg free
 33338  014606                     l12647:
 33339                           
 33340                           ;bsoc.c: 58:  if (C.p_bat < 0.0)
 33341  014606  EE21  F37F         	lfsr	2,_C+128	;volatile
 33342  01460A  0E03               	movlw	3
 33343  01460C  AEDB               	btfss	plusw2,7,c
 33344  01460E  D038               	goto	l12651
 33345                           
 33346                           ;bsoc.c: 59:   C.bkwo += fabsf(C.p_bat / 3600.0);
 33347  014610  0E00               	movlw	0
 33348  014612  6EE6               	movwf	postinc1,c
 33349  014614  0E00               	movlw	0
 33350  014616  6EE6               	movwf	postinc1,c
 33351  014618  0E61               	movlw	97
 33352  01461A  6EE6               	movwf	postinc1,c
 33353  01461C  0E45               	movlw	69
 33354  01461E  6EE6               	movwf	postinc1,c
 33355  014620  EE21  F37F         	lfsr	2,_C+128	;volatile
 33356  014624  006F FF7B FFE6     	movff	postinc2,postinc1
 33357  01462A  006F FF7B FFE6     	movff	postinc2,postinc1
 33358  014630  006F FF7B FFE6     	movff	postinc2,postinc1
 33359  014636  006F FF7B FFE6     	movff	postinc2,postinc1
 33360  01463C  EC50  F0A5         	call	___fldiv	;wreg free
 33361  014640  0060  F007  FFE6   	movff	btemp,postinc1
 33362  014646  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33363  01464C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33364  014652  0060  F013  FFE6   	movff	btemp+3,postinc1
 33365  014658  ECED  F0D1         	call	_fabsf	;wreg free
 33366  01465C  0060  F007  FFE6   	movff	btemp,postinc1
 33367  014662  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33368  014668  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33369  01466E  0060  F013  FFE6   	movff	btemp+3,postinc1
 33370  014674  0E9F               	movlw	low (_C+160)
 33371  014676  6EE6               	movwf	postinc1,c
 33372  014678  0E07               	movlw	high (_C+160)
 33373  01467A  6EE6               	movwf	postinc1,c
 33374  01467C  EC79  F0D5         	call	___asfladd	;wreg free
 33375  014680                     l12651:
 33376                           
 33377                           ;bsoc.c: 61:  C.soc = ((uint16_t) ((C.dynamic_ah / C.bank_ah)*100.0) + 1);
 33378  014680  0E00               	movlw	0
 33379  014682  6EE6               	movwf	postinc1,c
 33380  014684  0E00               	movlw	0
 33381  014686  6EE6               	movwf	postinc1,c
 33382  014688  0EC8               	movlw	200
 33383  01468A  6EE6               	movwf	postinc1,c
 33384  01468C  0E42               	movlw	66
 33385  01468E  6EE6               	movwf	postinc1,c
 33386  014690  EE21  F38B         	lfsr	2,_C+140	;volatile
 33387  014694  006F FF7B FFE6     	movff	postinc2,postinc1
 33388  01469A  006F FF7B FFE6     	movff	postinc2,postinc1
 33389  0146A0  006F FF7B FFE6     	movff	postinc2,postinc1
 33390  0146A6  006F FF7B FFE6     	movff	postinc2,postinc1
 33391  0146AC  EE21  F38F         	lfsr	2,_C+144	;volatile
 33392  0146B0  006F FF7B FFE6     	movff	postinc2,postinc1
 33393  0146B6  006F FF7B FFE6     	movff	postinc2,postinc1
 33394  0146BC  006F FF7B FFE6     	movff	postinc2,postinc1
 33395  0146C2  006F FF7B FFE6     	movff	postinc2,postinc1
 33396  0146C8  EC50  F0A5         	call	___fldiv	;wreg free
 33397  0146CC  0060  F007  FFE6   	movff	btemp,postinc1
 33398  0146D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33399  0146D8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33400  0146DE  0060  F013  FFE6   	movff	btemp+3,postinc1
 33401  0146E4  EC9F  F099         	call	___flmul	;wreg free
 33402  0146E8  0060  F007  FFE6   	movff	btemp,postinc1
 33403  0146EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33404  0146F4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33405  0146FA  0060  F013  FFE6   	movff	btemp+3,postinc1
 33406  014700  ECB1  F0C5         	call	___fltol	;wreg free
 33407  014704  0060  F004  F00B   	movff	btemp,btemp+10
 33408  01470A  0060  F008  F00C   	movff	btemp+1,btemp+11
 33409  014710  0E01               	movlw	1
 33410  014712  260B               	addwf	(btemp+10)^0,f,c
 33411  014714  0E00               	movlw	0
 33412  014716  220C               	addwfc	(btemp+11)^0,f,c
 33413  014718  0060  F02C  F7B1   	movff	btemp+10,_C+178	;volatile
 33414  01471E  0060  F030  F7B2   	movff	btemp+11,_C+179	;volatile
 33415                           
 33416                           ;bsoc.c: 62:  if (C.soc > 100)
 33417  014724  EE21  F3B1         	lfsr	2,_C+178	;volatile
 33418  014728  0E01               	movlw	1
 33419  01472A  50DB               	movf	plusw2,w,c
 33420  01472C  E104               	bnz	u1228_20
 33421  01472E  0E65               	movlw	101
 33422  014730  5CDE               	subwf	postinc2,w,c
 33423  014732  A0D8               	btfss	status,0,c
 33424  014734  D008               	goto	l12657
 33425  014736                     u1228_20:
 33426                           
 33427                           ;bsoc.c: 63:   C.soc = 100;
 33428  014736  0E64               	movlw	100
 33429  014738  006F FFA0  F7B1    	movff	wreg,_C+178	;volatile
 33430  01473E  0E00               	movlw	0
 33431  014740  006F FFA0  F7B2    	movff	wreg,_C+179	;volatile
 33432  014746                     l12657:
 33433                           
 33434                           ;bsoc.c: 65:  if (C.c_bat < 0.0) {
 33435  014746  EE21  F343         	lfsr	2,_C+68	;volatile
 33436  01474A  0E03               	movlw	3
 33437  01474C  AEDB               	btfss	plusw2,7,c
 33438  01474E  D047               	goto	l2034
 33439                           
 33440                           ;bsoc.c: 66:   C.runtime = (uint16_t) (-(C.dynamic_ah / C.c_bat));
 33441  014750  EE21  F343         	lfsr	2,_C+68	;volatile
 33442  014754  006F FF7B FFE6     	movff	postinc2,postinc1
 33443  01475A  006F FF7B FFE6     	movff	postinc2,postinc1
 33444  014760  006F FF7B FFE6     	movff	postinc2,postinc1
 33445  014766  006F FF7B FFE6     	movff	postinc2,postinc1
 33446  01476C  EE21  F38F         	lfsr	2,_C+144	;volatile
 33447  014770  006F FF7B FFE6     	movff	postinc2,postinc1
 33448  014776  006F FF7B FFE6     	movff	postinc2,postinc1
 33449  01477C  006F FF7B FFE6     	movff	postinc2,postinc1
 33450  014782  006F FF7B FFE6     	movff	postinc2,postinc1
 33451  014788  EC50  F0A5         	call	___fldiv	;wreg free
 33452  01478C  0060  F007  FFE6   	movff	btemp,postinc1
 33453  014792  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33454  014798  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33455  01479E  0060  F013  FFE6   	movff	btemp+3,postinc1
 33456  0147A4  ECA5  F0D8         	call	___flneg	;wreg free
 33457  0147A8  0060  F007  FFE6   	movff	btemp,postinc1
 33458  0147AE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33459  0147B4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33460  0147BA  0060  F013  FFE6   	movff	btemp+3,postinc1
 33461  0147C0  ECB1  F0C5         	call	___fltol	;wreg free
 33462  0147C4  0060  F004  F00B   	movff	btemp,btemp+10
 33463  0147CA  0060  F008  F00C   	movff	btemp+1,btemp+11
 33464  0147D0  0060  F02C  F7AF   	movff	btemp+10,_C+176	;volatile
 33465  0147D6  0060  F030  F7B0   	movff	btemp+11,_C+177	;volatile
 33466                           
 33467                           ;bsoc.c: 67:  } else {
 33468  0147DC  D008               	goto	l12661
 33469  0147DE                     l2034:
 33470                           
 33471                           ;bsoc.c: 68:   C.runtime = 120;
 33472  0147DE  0E78               	movlw	120
 33473  0147E0  006F FFA0  F7AF    	movff	wreg,_C+176	;volatile
 33474  0147E6  0E00               	movlw	0
 33475  0147E8  006F FFA0  F7B0    	movff	wreg,_C+177	;volatile
 33476  0147EE                     l12661:
 33477                           
 33478                           ;bsoc.c: 70:  if (C.runtime > 120)
 33479  0147EE  EE21  F3AF         	lfsr	2,_C+176	;volatile
 33480  0147F2  0E01               	movlw	1
 33481  0147F4  50DB               	movf	plusw2,w,c
 33482  0147F6  E104               	bnz	u1230_20
 33483  0147F8  0E79               	movlw	121
 33484  0147FA  5CDE               	subwf	postinc2,w,c
 33485  0147FC  A0D8               	btfss	status,0,c
 33486  0147FE  D008               	goto	l12665
 33487  014800                     u1230_20:
 33488                           
 33489                           ;bsoc.c: 71:   C.runtime = 120;
 33490  014800  0E78               	movlw	120
 33491  014802  006F FFA0  F7AF    	movff	wreg,_C+176	;volatile
 33492  014808  0E00               	movlw	0
 33493  01480A  006F FFA0  F7B0    	movff	wreg,_C+177	;volatile
 33494  014810                     l12665:
 33495                           
 33496                           ;bsoc.c: 73:  V.lowint_count++;
 33497  014810  0E01               	movlw	1
 33498  014812  0101               	movlb	1	; () banked
 33499  014814  27B3               	addwf	(_V+179)& (0+255),f,b	;volatile
 33500  014816  0E00               	movlw	0
 33501  014818  23B4               	addwfc	(_V+180)& (0+255),f,b	;volatile
 33502  01481A  23B5               	addwfc	(_V+181)& (0+255),f,b	;volatile
 33503  01481C  23B6               	addwfc	(_V+182)& (0+255),f,b	;volatile
 33504                           
 33505                           ;bsoc.c: 75:  if (!log_update_wait++ && V.system_stable) {
 33506  01481E  2A41               	incf	calc_bsoc@log_update_wait^0,f,c
 33507  014820  0441               	decf	calc_bsoc@log_update_wait^0,w,c
 33508  014822  A4D8               	btfss	status,2,c
 33509  014824  D131               	goto	l12677
 33510                           
 33511                           ; BSR set to: 1
 33512  014826  51AE               	movf	(_V+174)& (0+255),w,b	;volatile
 33513  014828  B4D8               	btfsc	status,2,c
 33514  01482A  D12E               	goto	l12677
 33515                           
 33516                           ; BSR set to: 1
 33517                           ;bsoc.c: 76:   log_ptr = port_data_dma_ptr();
 33518  01482C  EC0C  F0DF         	call	_port_data_dma_ptr	;wreg free
 33519                           
 33520                           ;stkvar	_log_ptr @ sp[(-2)+0]
 33521  014830  0EFF               	movlw	-1
 33522  014832  0060  F00B  FFE3   	movff	btemp+1,plusw1
 33523  014838  0EFE               	movlw	-2
 33524  01483A  0060  F007  FFE3   	movff	btemp,plusw1
 33525                           
 33526                           ;bsoc.c: 77:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu\r\n",
 33527  014840  EE22  F022         	lfsr	2,_C+291	;volatile
 33528  014844  006F FF7B FFE6     	movff	postinc2,postinc1
 33529  01484A  006F FF7B FFE6     	movff	postinc2,postinc1
 33530  014850  006F FF7B FFE6     	movff	postinc2,postinc1
 33531  014856  006F FF7B FFE6     	movff	postinc2,postinc1
 33532  01485C  EE22  F01E         	lfsr	2,_C+287	;volatile
 33533  014860  006F FF7B FFE6     	movff	postinc2,postinc1
 33534  014866  006F FF7B FFE6     	movff	postinc2,postinc1
 33535  01486C  006F FF7B FFE6     	movff	postinc2,postinc1
 33536  014872  006F FF7B FFE6     	movff	postinc2,postinc1
 33537  014878  EE22  F01D         	lfsr	2,_C+286	;volatile
 33538  01487C  50DF               	movf	indf2,w,c
 33539  01487E  6EE6               	movwf	postinc1,c
 33540  014880  0E00               	movlw	0
 33541  014882  6EE6               	movwf	postinc1,c
 33542  014884  ECF1  F0DE         	call	_get_ac_charger_relay	;wreg free
 33543  014888  5001               	movf	btemp^0,w,c
 33544  01488A  6EE6               	movwf	postinc1,c
 33545  01488C  0E00               	movlw	0
 33546  01488E  6EE6               	movwf	postinc1,c
 33547  014890  EE21  F367         	lfsr	2,_C+104	;volatile
 33548  014894  006F FF7B FFE6     	movff	postinc2,postinc1
 33549  01489A  006F FF7B FFE6     	movff	postinc2,postinc1
 33550  0148A0  006F FF7B FFE6     	movff	postinc2,postinc1
 33551  0148A6  006F FF7B FFE6     	movff	postinc2,postinc1
 33552  0148AC  EE21  F387         	lfsr	2,_C+136	;volatile
 33553  0148B0  006F FF7B FFE6     	movff	postinc2,postinc1
 33554  0148B6  006F FF7B FFE6     	movff	postinc2,postinc1
 33555  0148BC  006F FF7B FFE6     	movff	postinc2,postinc1
 33556  0148C2  006F FF7B FFE6     	movff	postinc2,postinc1
 33557  0148C8  EE21  F3AF         	lfsr	2,_C+176	;volatile
 33558  0148CC  006F FF78  F00B    	movff	postinc2,btemp+10
 33559  0148D2  006F FF74  F00C    	movff	postdec2,btemp+11
 33560  0148D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 33561  0148DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 33562  0148E4  EE21  F3B1         	lfsr	2,_C+178	;volatile
 33563  0148E8  006F FF78  F00B    	movff	postinc2,btemp+10
 33564  0148EE  006F FF74  F00C    	movff	postdec2,btemp+11
 33565  0148F4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 33566  0148FA  0060  F033  FFE6   	movff	btemp+11,postinc1
 33567  014900  EE21  F393         	lfsr	2,_C+148	;volatile
 33568  014904  006F FF7B FFE6     	movff	postinc2,postinc1
 33569  01490A  006F FF7B FFE6     	movff	postinc2,postinc1
 33570  014910  006F FF7B FFE6     	movff	postinc2,postinc1
 33571  014916  006F FF7B FFE6     	movff	postinc2,postinc1
 33572  01491C  EE21  F38F         	lfsr	2,_C+144	;volatile
 33573  014920  006F FF7B FFE6     	movff	postinc2,postinc1
 33574  014926  006F FF7B FFE6     	movff	postinc2,postinc1
 33575  01492C  006F FF7B FFE6     	movff	postinc2,postinc1
 33576  014932  006F FF7B FFE6     	movff	postinc2,postinc1
 33577  014938  EE21  F377         	lfsr	2,_C+120	;volatile
 33578  01493C  006F FF7B FFE6     	movff	postinc2,postinc1
 33579  014942  006F FF7B FFE6     	movff	postinc2,postinc1
 33580  014948  006F FF7B FFE6     	movff	postinc2,postinc1
 33581  01494E  006F FF7B FFE6     	movff	postinc2,postinc1
 33582  014954  EE21  F373         	lfsr	2,_C+116	;volatile
 33583  014958  006F FF7B FFE6     	movff	postinc2,postinc1
 33584  01495E  006F FF7B FFE6     	movff	postinc2,postinc1
 33585  014964  006F FF7B FFE6     	movff	postinc2,postinc1
 33586  01496A  006F FF7B FFE6     	movff	postinc2,postinc1
 33587  014970  EE21  F37B         	lfsr	2,_C+124	;volatile
 33588  014974  006F FF7B FFE6     	movff	postinc2,postinc1
 33589  01497A  006F FF7B FFE6     	movff	postinc2,postinc1
 33590  014980  006F FF7B FFE6     	movff	postinc2,postinc1
 33591  014986  006F FF7B FFE6     	movff	postinc2,postinc1
 33592  01498C  EE21  F37F         	lfsr	2,_C+128	;volatile
 33593  014990  006F FF7B FFE6     	movff	postinc2,postinc1
 33594  014996  006F FF7B FFE6     	movff	postinc2,postinc1
 33595  01499C  006F FF7B FFE6     	movff	postinc2,postinc1
 33596  0149A2  006F FF7B FFE6     	movff	postinc2,postinc1
 33597  0149A8  EE21  F363         	lfsr	2,_C+100	;volatile
 33598  0149AC  006F FF7B FFE6     	movff	postinc2,postinc1
 33599  0149B2  006F FF7B FFE6     	movff	postinc2,postinc1
 33600  0149B8  006F FF7B FFE6     	movff	postinc2,postinc1
 33601  0149BE  006F FF7B FFE6     	movff	postinc2,postinc1
 33602  0149C4  EE21  F34B         	lfsr	2,_C+76	;volatile
 33603  0149C8  006F FF7B FFE6     	movff	postinc2,postinc1
 33604  0149CE  006F FF7B FFE6     	movff	postinc2,postinc1
 33605  0149D4  006F FF7B FFE6     	movff	postinc2,postinc1
 33606  0149DA  006F FF7B FFE6     	movff	postinc2,postinc1
 33607  0149E0  EE21  F34F         	lfsr	2,_C+80	;volatile
 33608  0149E4  006F FF7B FFE6     	movff	postinc2,postinc1
 33609  0149EA  006F FF7B FFE6     	movff	postinc2,postinc1
 33610  0149F0  006F FF7B FFE6     	movff	postinc2,postinc1
 33611  0149F6  006F FF7B FFE6     	movff	postinc2,postinc1
 33612  0149FC  EE21  F353         	lfsr	2,_C+84	;volatile
 33613  014A00  006F FF7B FFE6     	movff	postinc2,postinc1
 33614  014A06  006F FF7B FFE6     	movff	postinc2,postinc1
 33615  014A0C  006F FF7B FFE6     	movff	postinc2,postinc1
 33616  014A12  006F FF7B FFE6     	movff	postinc2,postinc1
 33617  014A18  0060  F607  FFE6   	movff	_V+129,postinc1
 33618  014A1E  0060  F60B  FFE6   	movff	_V+130,postinc1
 33619  014A24  0060  F60F  FFE6   	movff	_V+131,postinc1
 33620  014A2A  0060  F613  FFE6   	movff	_V+132,postinc1
 33621  014A30  0E31               	movlw	49
 33622  014A32  6EE6               	movwf	postinc1,c
 33623  014A34  0E00               	movlw	0
 33624  014A36  6EE6               	movwf	postinc1,c
 33625  014A38  0E53               	movlw	low STR_65
 33626  014A3A  6EE6               	movwf	postinc1,c
 33627  014A3C  0EFC               	movlw	high STR_65
 33628  014A3E  6EE6               	movwf	postinc1,c
 33629                           
 33630                           ;stkvar	_log_ptr @ sp[(-74)+0]
 33631  014A40  0EB6               	movlw	-74
 33632  014A42  006F FF8F FFE6     	movff	plusw1,postinc1
 33633  014A48  006F FF8F FFE6     	movff	plusw1,postinc1
 33634  014A4E  0E4A               	movlw	74
 33635  014A50  6EE6               	movwf	postinc1,c
 33636  014A52  EC92  F0CD         	call	_sprintf	;wreg free
 33637                           
 33638                           ; BSR set to: 0
 33639                           ;bsoc.c: 83:   StartTimer(TMR_DISPLAY, 125);
 33640  014A56  0E7D               	movlw	125
 33641  014A58  6EE6               	movwf	postinc1,c
 33642  014A5A  0E00               	movlw	0
 33643  014A5C  6EE6               	movwf	postinc1,c
 33644  014A5E  0E0A               	movlw	10
 33645  014A60  6EE6               	movwf	postinc1,c
 33646  014A62  ECE1  F0D9         	call	_StartTimer	;wreg free
 33647                           
 33648                           ;bsoc.c: 84:   send_port_data_dma(strlen((char*) log_ptr));
 33649                           ;stkvar	_log_ptr @ sp[(-2)+0]
 33650  014A66  0EFE               	movlw	-2
 33651  014A68  006F FF8F FFE6     	movff	plusw1,postinc1
 33652  014A6E  006F FF8F FFE6     	movff	plusw1,postinc1
 33653  014A74  EC42  F0D3         	call	_strlen	;wreg free
 33654  014A78  0060  F007  FFE6   	movff	btemp,postinc1
 33655  014A7E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33656  014A84  EC30  F0D8         	call	_send_port_data_dma	;wreg free
 33657  014A88                     l12677:
 33658                           
 33659                           ;bsoc.c: 86:  if (log_update_wait >= 10)
 33660  014A88  0E09               	movlw	9
 33661  014A8A  6441               	cpfsgt	calc_bsoc@log_update_wait^0,c
 33662  014A8C  D001               	goto	l2038
 33663                           
 33664                           ;bsoc.c: 87:   log_update_wait = 0;
 33665  014A8E  6A41               	clrf	calc_bsoc@log_update_wait^0,c
 33666  014A90                     l2038:
 33667                           
 33668                           ;bsoc.c: 89:  C.update = 0;
 33669  014A90  0E00               	movlw	0
 33670  014A92  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 33671                           
 33672                           ;bsoc.c: 91:  do { LATEbits.LATE1 = 0; } while(0);
 33673  014A98  92BE               	bcf	190,1,c	;volatile
 33674                           
 33675                           ; _calc_bsoc: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 33676  014A9A  52E5               	movf	postdec1,f,c
 33677  014A9C  52E5               	movf	postdec1,f,c
 33678  014A9E  0012               	return		;funcret
 33679  014AA0                     __end_of_calc_bsoc:
 33680                           	opt callstack 0
 33681                           
 33682 ;; *************** function _send_port_data_dma *****************
 33683 ;; Defined at:
 33684 ;;		line 258 in file "eadog.c"
 33685 ;; Parameters:    Size  Location     Type
 33686 ;;  dsize           2  [STACK] unsigned short 
 33687 ;; Auto vars:     Size  Location     Type
 33688 ;;		None
 33689 ;; Return value:  Size  Location     Type
 33690 ;;                  1  [STACK] void 
 33691 ;; Registers used:
 33692 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 33693 ;; Tracked objects:
 33694 ;;		On entry : 0/0
 33695 ;;		On exit  : 3F/3B
 33696 ;;		Unchanged: 0/0
 33697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33702 ;;Total ram usage:        0 bytes
 33703 ;; Hardware stack levels used:    1
 33704 ;; Hardware stack levels required when called:    3
 33705 ;; This function calls:
 33706 ;;		Nothing
 33707 ;; This function is called by:
 33708 ;;		_calc_bsoc
 33709 ;; This function uses a reentrant model
 33710 ;;
 33711                           
 33712                           	psect	text152
 33713  01B060                     __ptext152:
 33714                           	opt callstack 0
 33715  01B060                     _send_port_data_dma:
 33716                           	opt callstack 11
 33717                           
 33718                           ;eadog.c: 258: void send_port_data_dma(uint16_t dsize);eadog.c: 259: {;eadog.c: 260:  if
      +                           (dsize > 512)
 33719                           ;stkvar	_dsize @ sp[(0)+-2]
 33720                           
 33721                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33722                           ;incstack = 0
 33723  01B060  0EFE               	movlw	-2
 33724  01B062  04E3               	decf	plusw1,w,c
 33725  01B064  0EFF               	movlw	-1
 33726  01B066  006F FF8C  F001    	movff	plusw1,btemp
 33727  01B06C  0E02               	movlw	2
 33728  01B06E  5A01               	subwfb	btemp^0,f,c
 33729  01B070  A0D8               	btfss	status,0,c
 33730  01B072  D00C               	goto	l9829
 33731                           
 33732                           ;eadog.c: 261:   dsize = 512;
 33733  01B074  0E00               	movlw	0
 33734  01B076  6E0B               	movwf	(btemp+10)^0,c
 33735  01B078  0E02               	movlw	2
 33736  01B07A  6E0C               	movwf	(btemp+11)^0,c
 33737                           
 33738                           ;stkvar	_dsize @ sp[(0)+-2]
 33739  01B07C  0EFE               	movlw	-2
 33740  01B07E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33741  01B084  0EFF               	movlw	-1
 33742  01B086  0060  F033  FFE3   	movff	btemp+11,plusw1
 33743  01B08C                     l9829:
 33744                           
 33745                           ;eadog.c: 263:  DMA2CON0bits.EN = 0;
 33746  01B08C  013B               	movlb	59	; () banked
 33747  01B08E  9FDC               	bcf	220,7,b	;volatile
 33748                           
 33749                           ; BSR set to: 59
 33750                           ;eadog.c: 264:  DMA2SSZ = dsize;
 33751                           ;stkvar	_dsize @ sp[(0)+-2]
 33752  01B090  0EFE               	movlw	-2
 33753  01B092  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 33754  01B098  0EFF               	movlw	-1
 33755  01B09A  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 33756                           
 33757                           ; BSR set to: 59
 33758                           ;eadog.c: 265:  DMA2DSZ = 1;
 33759  01B0A0  0E00               	movlw	0
 33760  01B0A2  6FCF               	movwf	207,b	;volatile
 33761  01B0A4  0E01               	movlw	1
 33762  01B0A6  6FCE               	movwf	206,b	;volatile
 33763                           
 33764                           ; BSR set to: 59
 33765                           ;eadog.c: 266:  DMA2CON0bits.EN = 1;
 33766  01B0A8  8FDC               	bsf	220,7,b	;volatile
 33767                           
 33768                           ; BSR set to: 59
 33769                           ;eadog.c: 267:  DMA2CON0bits.DMA2SIRQEN = 1;
 33770  01B0AA  8DDC               	bsf	220,6,b	;volatile
 33771                           
 33772                           ; BSR set to: 59
 33773                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 33774  01B0AC  52E5               	movf	postdec1,f,c
 33775  01B0AE  52E5               	movf	postdec1,f,c
 33776  01B0B0  0012               	return		;funcret
 33777  01B0B2                     __end_of_send_port_data_dma:
 33778                           	opt callstack 0
 33779                           
 33780 ;; *************** function _port_data_dma_ptr *****************
 33781 ;; Defined at:
 33782 ;;		line 273 in file "eadog.c"
 33783 ;; Parameters:    Size  Location     Type
 33784 ;;		None
 33785 ;; Auto vars:     Size  Location     Type
 33786 ;;		None
 33787 ;; Return value:  Size  Location     Type
 33788 ;;                  2  [STACK] PTR unsigned char 
 33789 ;; Registers used:
 33790 ;;		wreg, status,2, status,0, btemp, btemp+1
 33791 ;; Tracked objects:
 33792 ;;		On entry : 3F/1
 33793 ;;		On exit  : 0/0
 33794 ;;		Unchanged: 0/0
 33795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33800 ;;Total ram usage:        0 bytes
 33801 ;; Hardware stack levels used:    1
 33802 ;; Hardware stack levels required when called:    3
 33803 ;; This function calls:
 33804 ;;		Nothing
 33805 ;; This function is called by:
 33806 ;;		_calc_bsoc
 33807 ;; This function uses a reentrant model
 33808 ;;
 33809                           
 33810                           	psect	text153
 33811  01BE18                     __ptext153:
 33812                           	opt callstack 0
 33813  01BE18                     _port_data_dma_ptr:
 33814                           	opt callstack 11
 33815                           
 33816                           ;eadog.c: 275:  return port_data;
 33817                           
 33818                           ; BSR set to: 59
 33819                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33820                           ;incstack = 0
 33821  01BE18  0EFF               	movlw	low _port_data
 33822  01BE1A  6E01               	movwf	btemp^0,c
 33823  01BE1C  0E04               	movlw	high _port_data
 33824  01BE1E  6E02               	movwf	(btemp+1)^0,c
 33825                           
 33826                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33827  01BE20  0012               	return		;funcret
 33828  01BE22                     __end_of_port_data_dma_ptr:
 33829                           	opt callstack 0
 33830                           
 33831 ;; *************** function ___asfladd *****************
 33832 ;; Defined at:
 33833 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 33834 ;; Parameters:    Size  Location     Type
 33835 ;;  f1p             2  [STACK] PTR 
 33836 ;;		 -> C(295), 
 33837 ;;  f2              4  [STACK] PTR 
 33838 ;; Auto vars:     Size  Location     Type
 33839 ;;		None
 33840 ;; Return value:  Size  Location     Type
 33841 ;;                  4  [STACK] PTR 
 33842 ;; Registers used:
 33843 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 33844 ;; Tracked objects:
 33845 ;;		On entry : 0/0
 33846 ;;		On exit  : 0/0
 33847 ;;		Unchanged: 0/0
 33848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33853 ;;Total ram usage:        0 bytes
 33854 ;; Hardware stack levels used:    1
 33855 ;; Hardware stack levels required when called:    4
 33856 ;; This function calls:
 33857 ;;		___fladd
 33858 ;; This function is called by:
 33859 ;;		_calc_bsoc
 33860 ;; This function uses a reentrant model
 33861 ;;
 33862                           
 33863                           	psect	text154
 33864  01AAF2                     __ptext154:
 33865                           	opt callstack 0
 33866  01AAF2                     ___asfladd:
 33867                           	opt callstack 10
 33868                           
 33869                           ;	Return value of ___asfladd is never used
 33870                           ;stkvar	_f2 @ sp[(0)+-6]
 33871                           
 33872                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33873                           ;incstack = 0
 33874  01AAF2  0EFA               	movlw	-6
 33875  01AAF4  006F FF8F FFE6     	movff	plusw1,postinc1
 33876  01AAFA  006F FF8F FFE6     	movff	plusw1,postinc1
 33877  01AB00  006F FF8F FFE6     	movff	plusw1,postinc1
 33878  01AB06  006F FF8F FFE6     	movff	plusw1,postinc1
 33879                           
 33880                           ;stkvar	_f1p @ sp[(-4)+-2]
 33881  01AB0C  0EFA               	movlw	-6
 33882  01AB0E  006F FF8F FFD9     	movff	plusw1,fsr2l
 33883  01AB14  0EFB               	movlw	-5
 33884  01AB16  006F FF8F FFDA     	movff	plusw1,fsr2h
 33885  01AB1C  006F FF7B FFE6     	movff	postinc2,postinc1
 33886  01AB22  006F FF7B FFE6     	movff	postinc2,postinc1
 33887  01AB28  006F FF7B FFE6     	movff	postinc2,postinc1
 33888  01AB2E  006F FF7B FFE6     	movff	postinc2,postinc1
 33889  01AB34  ECB4  F09D         	call	___fladd	;wreg free
 33890                           
 33891                           ;stkvar	_f1p @ sp[(0)+-2]
 33892  01AB38  0EFE               	movlw	-2
 33893  01AB3A  006F FF8F FFD9     	movff	plusw1,fsr2l
 33894  01AB40  0EFF               	movlw	-1
 33895  01AB42  006F FF8F FFDA     	movff	plusw1,fsr2h
 33896  01AB48  0060  F007  FFDE   	movff	btemp,postinc2
 33897  01AB4E  0060  F00B  FFDE   	movff	btemp+1,postinc2
 33898  01AB54  0060  F00F  FFDE   	movff	btemp+2,postinc2
 33899  01AB5A  0060  F013  FFDE   	movff	btemp+3,postinc2
 33900                           
 33901                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 33902  01AB60  0EFA               	movlw	250
 33903  01AB62  26E1               	addwf	fsr1l,f,c
 33904  01AB64  0EFF               	movlw	255
 33905  01AB66  22E2               	addwfc	fsr1h,f,c
 33906  01AB68  0012               	return		;funcret
 33907  01AB6A                     __end_of___asfladd:
 33908                           	opt callstack 0
 33909                           
 33910 ;; *************** function _INT0_ISR *****************
 33911 ;; Defined at:
 33912 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 33913 ;; Parameters:    Size  Location     Type
 33914 ;;		None
 33915 ;; Auto vars:     Size  Location     Type
 33916 ;;		None
 33917 ;; Return value:  Size  Location     Type
 33918 ;;                  1    wreg      void 
 33919 ;; Registers used:
 33920 ;;		wreg, status,2, status,0, pclath, tosl
 33921 ;; Tracked objects:
 33922 ;;		On entry : 0/0
 33923 ;;		On exit  : 0/0
 33924 ;;		Unchanged: 0/0
 33925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33930 ;;Total ram usage:        0 bytes
 33931 ;; Hardware stack levels used:    1
 33932 ;; Hardware stack levels required when called:    2
 33933 ;; This function calls:
 33934 ;;		_INT0_CallBack
 33935 ;; This function is called by:
 33936 ;;		Interrupt level 2
 33937 ;; This function uses a non-reentrant model
 33938 ;;
 33939                           
 33940                           	psect	text155
 33941  01BDF0                     __ptext155:
 33942                           	opt callstack 0
 33943  01BDF0                     _INT0_ISR:
 33944                           	opt callstack 3
 33945                           
 33946                           ;incstack = 0
 33947  01BDF0  EE14  F15C         	lfsr	1,___inthi_sp
 33948                           
 33949                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 33950  01BDF4  0139               	movlb	57	; () banked
 33951  01BDF6  91A1               	bcf	161,0,b	;volatile
 33952                           
 33953                           ; BSR set to: 57
 33954                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 33955  01BDF8  ECAC  F0DD         	call	_INT0_CallBack	;wreg free
 33956  01BDFC  0011               	retfie		f
 33957  01BDFE                     __end_of_INT0_ISR:
 33958                           	opt callstack 0
 33959                           
 33960 ;; *************** function _INT0_CallBack *****************
 33961 ;; Defined at:
 33962 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 33963 ;; Parameters:    Size  Location     Type
 33964 ;;		None
 33965 ;; Auto vars:     Size  Location     Type
 33966 ;;		None
 33967 ;; Return value:  Size  Location     Type
 33968 ;;                  1  [STACK] void 
 33969 ;; Registers used:
 33970 ;;		wreg, status,2, status,0, pclath, tosl
 33971 ;; Tracked objects:
 33972 ;;		On entry : 3F/39
 33973 ;;		On exit  : 0/0
 33974 ;;		Unchanged: 0/0
 33975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33980 ;;Total ram usage:        0 bytes
 33981 ;; Hardware stack levels used:    1
 33982 ;; Hardware stack levels required when called:    1
 33983 ;; This function calls:
 33984 ;;		Absolute function
 33985 ;;		_INT0_DefaultInterruptHandler
 33986 ;; This function is called by:
 33987 ;;		_INT0_ISR
 33988 ;; This function uses a reentrant model
 33989 ;;
 33990                           
 33991                           	psect	text156
 33992  01BB58                     __ptext156:
 33993                           	opt callstack 0
 33994  01BB58                     _INT0_CallBack:
 33995                           	opt callstack 3
 33996                           
 33997                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 33998                           
 33999                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34000                           ;incstack = 0
 34001  01BB58  0100               	movlb	0	; () banked
 34002  01BB5A  51AB               	movf	_INT0_InterruptHandler& (0+255),w,b
 34003  01BB5C  11AC               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 34004  01BB5E  11AD               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 34005  01BB60  B4D8               	btfsc	status,2,c
 34006  01BB62  0012               	return	
 34007                           
 34008                           ; BSR set to: 0
 34009                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 34010  01BB64  D801               	call	u983_48
 34011  01BB66  0012               	return	
 34012  01BB68                     u983_48:
 34013  01BB68  0005               	push	
 34014  01BB6A  6EFA               	movwf	pclath,c
 34015  01BB6C  51AB               	movf	_INT0_InterruptHandler& (0+255),w,b
 34016  01BB6E  6EFD               	movwf	tosl,c
 34017  01BB70  51AC               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 34018  01BB72  6EFE               	movwf	tosh,c
 34019  01BB74  51AD               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 34020  01BB76  6EFF               	movwf	tosu,c
 34021  01BB78  50FA               	movf	pclath,w,c
 34022  01BB7A  0012               	return		;indir
 34023  01BB7C                     __end_of_INT0_CallBack:
 34024                           	opt callstack 0
 34025                           
 34026 ;; *************** function _INT0_DefaultInterruptHandler *****************
 34027 ;; Defined at:
 34028 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 34029 ;; Parameters:    Size  Location     Type
 34030 ;;		None
 34031 ;; Auto vars:     Size  Location     Type
 34032 ;;		None
 34033 ;; Return value:  Size  Location     Type
 34034 ;;                  1  [STACK] void 
 34035 ;; Registers used:
 34036 ;;		None
 34037 ;; Tracked objects:
 34038 ;;		On entry : 3F/0
 34039 ;;		On exit  : 0/0
 34040 ;;		Unchanged: 0/0
 34041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34046 ;;Total ram usage:        0 bytes
 34047 ;; Hardware stack levels used:    1
 34048 ;; This function calls:
 34049 ;;		Nothing
 34050 ;; This function is called by:
 34051 ;;		_EXT_INT_Initialize
 34052 ;;		_INT0_CallBack
 34053 ;; This function uses a reentrant model
 34054 ;;
 34055                           
 34056                           	psect	text157
 34057  01BE9A                     __ptext157:
 34058                           	opt callstack 0
 34059  01BE9A                     _INT0_DefaultInterruptHandler:
 34060                           	opt callstack 3
 34061                           
 34062                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34063                           
 34064                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34065                           ;incstack = 0
 34066  01BE9A  0012               	return		;funcret
 34067  01BE9C                     __end_of_INT0_DefaultInterruptHandler:
 34068                           	opt callstack 0
 34069                           
 34070 ;; *************** function _Default_ISR *****************
 34071 ;; Defined at:
 34072 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 34073 ;; Parameters:    Size  Location     Type
 34074 ;;		None
 34075 ;; Auto vars:     Size  Location     Type
 34076 ;;		None
 34077 ;; Return value:  Size  Location     Type
 34078 ;;                  1    wreg      void 
 34079 ;; Registers used:
 34080 ;;		None
 34081 ;; Tracked objects:
 34082 ;;		On entry : 0/0
 34083 ;;		On exit  : 0/0
 34084 ;;		Unchanged: 0/0
 34085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34090 ;;Total ram usage:        0 bytes
 34091 ;; Hardware stack levels used:    1
 34092 ;; This function calls:
 34093 ;;		Nothing
 34094 ;; This function is called by:
 34095 ;;		Interrupt level 2
 34096 ;; This function uses a non-reentrant model
 34097 ;;
 34098                           
 34099                           	psect	text158
 34100  01BE90                     __ptext158:
 34101                           	opt callstack 0
 34102  01BE90                     _Default_ISR:
 34103                           	opt callstack 5
 34104                           
 34105                           ;incstack = 0
 34106  01BE90  EE14  F15C         	lfsr	1,___inthi_sp
 34107  01BE94  0011               	retfie		f
 34108  01BE96                     __end_of_Default_ISR:
 34109                           	opt callstack 0
 34110                           
 34111 ;; *************** function _ADCC_ISR *****************
 34112 ;; Defined at:
 34113 ;;		line 314 in file "mcc_generated_files/adcc.c"
 34114 ;; Parameters:    Size  Location     Type
 34115 ;;		None
 34116 ;; Auto vars:     Size  Location     Type
 34117 ;;		None
 34118 ;; Return value:  Size  Location     Type
 34119 ;;                  1    wreg      void 
 34120 ;; Registers used:
 34121 ;;		wreg, status,2, status,0, pclath, tosl
 34122 ;; Tracked objects:
 34123 ;;		On entry : 0/0
 34124 ;;		On exit  : 0/0
 34125 ;;		Unchanged: 0/0
 34126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34131 ;;Total ram usage:        0 bytes
 34132 ;; Hardware stack levels used:    1
 34133 ;; Hardware stack levels required when called:    1
 34134 ;; This function calls:
 34135 ;;		Absolute function
 34136 ;;		_ADCC_DefaultInterruptHandler
 34137 ;;		_adc_int_handler
 34138 ;; This function is called by:
 34139 ;;		Interrupt level 2
 34140 ;; This function uses a non-reentrant model
 34141 ;;
 34142                           
 34143                           	psect	text159
 34144  01B798                     __ptext159:
 34145                           	opt callstack 0
 34146  01B798                     _ADCC_ISR:
 34147                           	opt callstack 4
 34148                           
 34149                           ;incstack = 0
 34150  01B798  EE14  F15C         	lfsr	1,___inthi_sp
 34151                           
 34152                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 34153  01B79C  0139               	movlb	57	; () banked
 34154  01B79E  95A1               	bcf	161,2,b	;volatile
 34155                           
 34156                           ; BSR set to: 57
 34157                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 34158  01B7A0  0100               	movlb	0	; () banked
 34159  01B7A2  519C               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 34160  01B7A4  119D               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 34161  01B7A6  119E               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 34162  01B7A8  B4D8               	btfsc	status,2,c
 34163  01B7AA  0011               	retfie		f
 34164                           
 34165                           ; BSR set to: 0
 34166                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 34167  01B7AC  D801               	call	i2u1026_48
 34168  01B7AE  0011               	retfie		f
 34169  01B7B0                     i2u1026_48:
 34170  01B7B0  0005               	push	
 34171  01B7B2  6EFA               	movwf	pclath,c
 34172  01B7B4  519C               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 34173  01B7B6  6EFD               	movwf	tosl,c
 34174  01B7B8  519D               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 34175  01B7BA  6EFE               	movwf	tosh,c
 34176  01B7BC  519E               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 34177  01B7BE  6EFF               	movwf	tosu,c
 34178  01B7C0  50FA               	movf	pclath,w,c
 34179  01B7C2  0012               	return		;indir
 34180  01B7C4                     __end_of_ADCC_ISR:
 34181                           	opt callstack 0
 34182                           
 34183 ;; *************** function _adc_int_t_handler *****************
 34184 ;; Defined at:
 34185 ;;		line 143 in file "daq.c"
 34186 ;; Parameters:    Size  Location     Type
 34187 ;;		None
 34188 ;; Auto vars:     Size  Location     Type
 34189 ;;		None
 34190 ;; Return value:  Size  Location     Type
 34191 ;;                  1  [STACK] void 
 34192 ;; Registers used:
 34193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 34194 ;; Tracked objects:
 34195 ;;		On entry : 3F/0
 34196 ;;		On exit  : 1/0
 34197 ;;		Unchanged: 0/0
 34198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34203 ;;Total ram usage:        0 bytes
 34204 ;; Hardware stack levels used:    1
 34205 ;; Hardware stack levels required when called:    1
 34206 ;; This function calls:
 34207 ;;		_ADCC_DischargeSampleCapacitor
 34208 ;;		_ADCC_StartConversion
 34209 ;; This function is called by:
 34210 ;;		_start_adc_scan
 34211 ;;		_ADCC_ThresholdISR
 34212 ;; This function uses a reentrant model
 34213 ;;
 34214                           
 34215                           	psect	text160
 34216  01AA74                     __ptext160:
 34217                           	opt callstack 0
 34218  01AA74                     _adc_int_t_handler:
 34219                           	opt callstack 3
 34220                           
 34221                           ;daq.c: 148:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 34222                           
 34223                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34224                           ;incstack = 0
 34225  01AA74  013E               	movlb	62	; () banked
 34226  01AA76  51E6               	movf	230,w,b	;volatile
 34227  01AA78  006F FB9C  F001    	movff	16103,btemp	;volatile
 34228  01AA7E  6A02               	clrf	(btemp+1)^0,c
 34229  01AA80  0060  F004  F002   	movff	btemp,btemp+1
 34230  01AA86  6A01               	clrf	btemp^0,c
 34231  01AA88  2601               	addwf	btemp^0,f,c
 34232  01AA8A  0E00               	movlw	0
 34233  01AA8C  2202               	addwfc	(btemp+1)^0,f,c
 34234  01AA8E  0100               	movlb	0	; () banked
 34235  01AA90  51E1               	movf	(_R+36)& (0+255),w,b	;volatile
 34236  01AA92  0D02               	mullw	2
 34237  01AA94  50F3               	movf	243,w,c
 34238  01AA96  0FBD               	addlw	low _R
 34239  01AA98  6ED9               	movwf	fsr2l,c
 34240  01AA9A  6ADA               	clrf	fsr2h,c
 34241  01AA9C  0060  F007  FFDE   	movff	btemp,postinc2
 34242  01AAA2  0060  F00B  FFDD   	movff	btemp+1,postdec2
 34243  01AAA8                     l10985:
 34244                           
 34245                           ;daq.c: 150:   if (++R.scan_index > 0XD) {
 34246  01AAA8  0100               	movlb	0	; () banked
 34247  01AAAA  2BE1               	incf	(_R+36)& (0+255),f,b	;volatile
 34248  01AAAC  0E0D               	movlw	13
 34249  01AAAE  65E1               	cpfsgt	(_R+36)& (0+255),b	;volatile
 34250  01AAB0  D003               	goto	l10991
 34251                           
 34252                           ; BSR set to: 0
 34253                           ;daq.c: 151:    R.done = 1;
 34254  01AAB2  0E01               	movlw	1
 34255  01AAB4  6FE4               	movwf	(_R+39)& (0+255),b	;volatile
 34256  01AAB6  0012               	return	
 34257  01AAB8                     l10991:
 34258                           
 34259                           ; BSR set to: 0
 34260                           ;daq.c: 157:  } while (!((R.scan_select >> R.scan_index) &0x1));
 34261  01AAB8  0060  F384  F00C   	movff	_R+36,btemp+11	;volatile
 34262  01AABE  EE20  F0E2         	lfsr	2,_R+37	;volatile
 34263  01AAC2  006F FF78  F009    	movff	postinc2,btemp+8
 34264  01AAC8  006F FF74  F00A    	movff	postdec2,btemp+9
 34265  01AACE  2A0C               	incf	(btemp+11)^0,f,c
 34266  01AAD0  D003               	goto	u1023_44
 34267  01AAD2                     u1023_45:
 34268  01AAD2  90D8               	bcf	status,0,c
 34269  01AAD4  320A               	rrcf	(btemp+9)^0,f,c
 34270  01AAD6  3209               	rrcf	(btemp+8)^0,f,c
 34271  01AAD8                     u1023_44:
 34272  01AAD8  2E0C               	decfsz	(btemp+11)^0,f,c
 34273  01AADA  D7FB               	goto	u1023_45
 34274  01AADC  A009               	btfss	(btemp+8)^0,0,c
 34275  01AADE  D7E4               	goto	l10985
 34276                           
 34277                           ;daq.c: 158:  ADCC_DischargeSampleCapacitor();
 34278  01AAE0  EC23  F0DF         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 34279                           
 34280                           ; BSR set to: 62
 34281                           ;daq.c: 159:  ADCC_StartConversion(R.scan_index & 0xf);
 34282  01AAE4  0100               	movlb	0	; () banked
 34283  01AAE6  51E1               	movf	(_R+36)& (0+255),w,b	;volatile
 34284  01AAE8  0B0F               	andlw	15
 34285  01AAEA  6EE6               	movwf	postinc1,c
 34286  01AAEC  ECBA  F0DE         	call	_ADCC_StartConversion	;wreg free
 34287                           
 34288                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34289  01AAF0  0012               	return		;funcret
 34290  01AAF2                     __end_of_adc_int_t_handler:
 34291                           	opt callstack 0
 34292                           
 34293 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 34294 ;; Defined at:
 34295 ;;		line 339 in file "mcc_generated_files/adcc.c"
 34296 ;; Parameters:    Size  Location     Type
 34297 ;;		None
 34298 ;; Auto vars:     Size  Location     Type
 34299 ;;		None
 34300 ;; Return value:  Size  Location     Type
 34301 ;;                  1  [STACK] void 
 34302 ;; Registers used:
 34303 ;;		None
 34304 ;; Tracked objects:
 34305 ;;		On entry : 3F/0
 34306 ;;		On exit  : 0/0
 34307 ;;		Unchanged: 0/0
 34308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34313 ;;Total ram usage:        0 bytes
 34314 ;; Hardware stack levels used:    1
 34315 ;; This function calls:
 34316 ;;		Nothing
 34317 ;; This function is called by:
 34318 ;;		_ADCC_Initialize
 34319 ;;		_ADCC_ISR
 34320 ;;		_ADCC_ThresholdISR
 34321 ;; This function uses a reentrant model
 34322 ;;
 34323                           
 34324                           	psect	text161
 34325  01BE9C                     __ptext161:
 34326                           	opt callstack 0
 34327  01BE9C                     _ADCC_DefaultInterruptHandler:
 34328                           	opt callstack 4
 34329                           
 34330                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34331                           
 34332                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34333                           ;incstack = 0
 34334  01BE9C  0012               	return		;funcret
 34335  01BE9E                     __end_of_ADCC_DefaultInterruptHandler:
 34336                           	opt callstack 0
 34337                           
 34338 ;; *************** function _adc_int_handler *****************
 34339 ;; Defined at:
 34340 ;;		line 133 in file "daq.c"
 34341 ;; Parameters:    Size  Location     Type
 34342 ;;		None
 34343 ;; Auto vars:     Size  Location     Type
 34344 ;;		None
 34345 ;; Return value:  Size  Location     Type
 34346 ;;                  1  [STACK] void 
 34347 ;; Registers used:
 34348 ;;		None
 34349 ;; Tracked objects:
 34350 ;;		On entry : 3F/0
 34351 ;;		On exit  : 0/0
 34352 ;;		Unchanged: 0/0
 34353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34358 ;;Total ram usage:        0 bytes
 34359 ;; Hardware stack levels used:    1
 34360 ;; This function calls:
 34361 ;;		Nothing
 34362 ;; This function is called by:
 34363 ;;		_start_adc_scan
 34364 ;;		_ADCC_ISR
 34365 ;; This function uses a reentrant model
 34366 ;;
 34367                           
 34368                           	psect	text162
 34369  01BE9E                     __ptext162:
 34370                           	opt callstack 0
 34371  01BE9E                     _adc_int_handler:
 34372                           	opt callstack 4
 34373                           
 34374                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34375                           
 34376                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34377                           ;incstack = 0
 34378  01BE9E  0012               	return		;funcret
 34379  01BEA0                     __end_of_adc_int_handler:
 34380                           	opt callstack 0
 34381                           
 34382 ;; *************** function _ADCC_ThresholdISR *****************
 34383 ;; Defined at:
 34384 ;;		line 327 in file "mcc_generated_files/adcc.c"
 34385 ;; Parameters:    Size  Location     Type
 34386 ;;		None
 34387 ;; Auto vars:     Size  Location     Type
 34388 ;;		None
 34389 ;; Return value:  Size  Location     Type
 34390 ;;                  1    wreg      void 
 34391 ;; Registers used:
 34392 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 34393 ;; Tracked objects:
 34394 ;;		On entry : 0/0
 34395 ;;		On exit  : 0/0
 34396 ;;		Unchanged: 0/0
 34397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34400 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34401 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34402 ;;Total ram usage:        5 bytes
 34403 ;; Hardware stack levels used:    1
 34404 ;; Hardware stack levels required when called:    2
 34405 ;; This function calls:
 34406 ;;		Absolute function
 34407 ;;		_ADCC_DefaultInterruptHandler
 34408 ;;		_adc_int_t_handler
 34409 ;; This function is called by:
 34410 ;;		Interrupt level 2
 34411 ;; This function uses a non-reentrant model
 34412 ;;
 34413                           
 34414                           	psect	text163
 34415  01ACB0                     __ptext163:
 34416                           	opt callstack 0
 34417  01ACB0                     _ADCC_ThresholdISR:
 34418                           	opt callstack 3
 34419                           
 34420                           ;incstack = 0
 34421  01ACB0  0060  F004  F021   	movff	btemp,??_ADCC_ThresholdISR
 34422  01ACB6  0060  F008  F022   	movff	btemp+1,??_ADCC_ThresholdISR+1
 34423  01ACBC  0060  F024  F023   	movff	btemp+8,??_ADCC_ThresholdISR+2
 34424  01ACC2  0060  F028  F024   	movff	btemp+9,??_ADCC_ThresholdISR+3
 34425  01ACC8  0060  F030  F025   	movff	btemp+11,??_ADCC_ThresholdISR+4
 34426  01ACCE  EE14  F15C         	lfsr	1,___inthi_sp
 34427                           
 34428                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 34429  01ACD2  0139               	movlb	57	; () banked
 34430  01ACD4  97A1               	bcf	161,3,b	;volatile
 34431                           
 34432                           ; BSR set to: 57
 34433                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 34434  01ACD6  0100               	movlb	0	; () banked
 34435  01ACD8  5199               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 34436  01ACDA  119A               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 34437  01ACDC  119B               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 34438  01ACDE  B4D8               	btfsc	status,2,c
 34439  01ACE0  D00C               	goto	i2u1028_49
 34440                           
 34441                           ; BSR set to: 0
 34442                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 34443  01ACE2  D801               	call	i2u1028_48
 34444  01ACE4  D00A               	goto	i2u1028_49
 34445  01ACE6                     i2u1028_48:
 34446  01ACE6  0005               	push	
 34447  01ACE8  6EFA               	movwf	pclath,c
 34448  01ACEA  5199               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 34449  01ACEC  6EFD               	movwf	tosl,c
 34450  01ACEE  519A               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 34451  01ACF0  6EFE               	movwf	tosh,c
 34452  01ACF2  519B               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 34453  01ACF4  6EFF               	movwf	tosu,c
 34454  01ACF6  50FA               	movf	pclath,w,c
 34455  01ACF8  0012               	return		;indir
 34456  01ACFA                     i2u1028_49:
 34457  01ACFA  0060  F094  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 34458  01AD00  0060  F090  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 34459  01AD06  0060  F08C  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 34460  01AD0C  0060  F088  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 34461  01AD12  0060  F084  F001   	movff	??_ADCC_ThresholdISR,btemp
 34462  01AD18  0011               	retfie		f
 34463  01AD1A                     __end_of_ADCC_ThresholdISR:
 34464                           	opt callstack 0
 34465                           
 34466 ;; *************** function _UART1_rx_vect_isr *****************
 34467 ;; Defined at:
 34468 ;;		line 181 in file "mcc_generated_files/uart1.c"
 34469 ;; Parameters:    Size  Location     Type
 34470 ;;		None
 34471 ;; Auto vars:     Size  Location     Type
 34472 ;;		None
 34473 ;; Return value:  Size  Location     Type
 34474 ;;                  1    wreg      void 
 34475 ;; Registers used:
 34476 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 34477 ;; Tracked objects:
 34478 ;;		On entry : 0/0
 34479 ;;		On exit  : 0/0
 34480 ;;		Unchanged: 0/0
 34481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34486 ;;Total ram usage:        0 bytes
 34487 ;; Hardware stack levels used:    1
 34488 ;; Hardware stack levels required when called:    1
 34489 ;; This function calls:
 34490 ;;		Absolute function
 34491 ;;		_UART1_Receive_ISR
 34492 ;; This function is called by:
 34493 ;;		Interrupt level 2
 34494 ;; This function uses a non-reentrant model
 34495 ;;
 34496                           
 34497                           	psect	text164
 34498  01BA74                     __ptext164:
 34499                           	opt callstack 0
 34500  01BA74                     _UART1_rx_vect_isr:
 34501                           	opt callstack 4
 34502                           
 34503                           ;incstack = 0
 34504  01BA74  EE14  F15C         	lfsr	1,___inthi_sp
 34505                           
 34506                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 34507  01BA78  0100               	movlb	0	; () banked
 34508  01BA7A  519F               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 34509  01BA7C  11A0               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 34510  01BA7E  11A1               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 34511  01BA80  B4D8               	btfsc	status,2,c
 34512  01BA82  0011               	retfie		f
 34513                           
 34514                           ; BSR set to: 0
 34515                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 34516  01BA84  D801               	call	i2u1250_48
 34517  01BA86  0011               	retfie		f
 34518  01BA88                     i2u1250_48:
 34519  01BA88  0005               	push	
 34520  01BA8A  6EFA               	movwf	pclath,c
 34521  01BA8C  519F               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 34522  01BA8E  6EFD               	movwf	tosl,c
 34523  01BA90  51A0               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 34524  01BA92  6EFE               	movwf	tosh,c
 34525  01BA94  51A1               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 34526  01BA96  6EFF               	movwf	tosu,c
 34527  01BA98  50FA               	movf	pclath,w,c
 34528  01BA9A  0012               	return		;indir
 34529  01BA9C                     __end_of_UART1_rx_vect_isr:
 34530                           	opt callstack 0
 34531                           
 34532 ;; *************** function _UART1_Receive_ISR *****************
 34533 ;; Defined at:
 34534 ;;		line 192 in file "mcc_generated_files/uart1.c"
 34535 ;; Parameters:    Size  Location     Type
 34536 ;;		None
 34537 ;; Auto vars:     Size  Location     Type
 34538 ;;		None
 34539 ;; Return value:  Size  Location     Type
 34540 ;;                  1  [STACK] void 
 34541 ;; Registers used:
 34542 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34543 ;; Tracked objects:
 34544 ;;		On entry : 3F/0
 34545 ;;		On exit  : 3F/0
 34546 ;;		Unchanged: 0/0
 34547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34552 ;;Total ram usage:        0 bytes
 34553 ;; Hardware stack levels used:    1
 34554 ;; This function calls:
 34555 ;;		Nothing
 34556 ;; This function is called by:
 34557 ;;		_UART1_Initialize
 34558 ;;		_UART1_rx_vect_isr
 34559 ;; This function uses a reentrant model
 34560 ;;
 34561                           
 34562                           	psect	text165
 34563  01BBC2                     __ptext165:
 34564                           	opt callstack 0
 34565  01BBC2                     _UART1_Receive_ISR:
 34566                           	opt callstack 4
 34567                           
 34568                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 34569                           
 34570                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34571                           ;incstack = 0
 34572  01BBC2  0E6E               	movlw	low _uart1RxBuffer
 34573  01BBC4  2447               	addwf	_uart1RxHead^0,w,c	;volatile
 34574  01BBC6  6ED9               	movwf	fsr2l,c
 34575  01BBC8  6ADA               	clrf	fsr2h,c
 34576  01BBCA  0E02               	movlw	high _uart1RxBuffer
 34577  01BBCC  22DA               	addwfc	fsr2h,f,c
 34578  01BBCE  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 34579  01BBD4  2A47               	incf	_uart1RxHead^0,f,c	;volatile
 34580                           
 34581                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 34582  01BBD6  0E07               	movlw	7
 34583  01BBD8  6447               	cpfsgt	_uart1RxHead^0,c
 34584  01BBDA  D001               	goto	l12725
 34585                           
 34586                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 34587  01BBDC  6A47               	clrf	_uart1RxHead^0,c	;volatile
 34588  01BBDE                     l12725:
 34589                           
 34590                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 34591  01BBDE  0100               	movlb	0	; () banked
 34592  01BBE0  2BBC               	incf	_uart1RxCount& (0+255),f,b	;volatile
 34593                           
 34594                           ; BSR set to: 0
 34595                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34596  01BBE2  0012               	return		;funcret
 34597  01BBE4                     __end_of_UART1_Receive_ISR:
 34598                           	opt callstack 0
 34599                           
 34600 ;; *************** function _UART2_tx_vect_isr *****************
 34601 ;; Defined at:
 34602 ;;		line 195 in file "mcc_generated_files/uart2.c"
 34603 ;; Parameters:    Size  Location     Type
 34604 ;;		None
 34605 ;; Auto vars:     Size  Location     Type
 34606 ;;		None
 34607 ;; Return value:  Size  Location     Type
 34608 ;;                  1    wreg      void 
 34609 ;; Registers used:
 34610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 34611 ;; Tracked objects:
 34612 ;;		On entry : 0/0
 34613 ;;		On exit  : 0/0
 34614 ;;		Unchanged: 0/0
 34615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34620 ;;Total ram usage:        0 bytes
 34621 ;; Hardware stack levels used:    1
 34622 ;; Hardware stack levels required when called:    1
 34623 ;; This function calls:
 34624 ;;		Absolute function
 34625 ;;		_UART2_Transmit_ISR
 34626 ;; This function is called by:
 34627 ;;		Interrupt level 2
 34628 ;; This function uses a non-reentrant model
 34629 ;;
 34630                           
 34631                           	psect	text166
 34632  01BA9C                     __ptext166:
 34633                           	opt callstack 0
 34634  01BA9C                     _UART2_tx_vect_isr:
 34635                           	opt callstack 4
 34636                           
 34637                           ; BSR set to: 0
 34638                           ;incstack = 0
 34639  01BA9C  EE14  F15C         	lfsr	1,___inthi_sp
 34640                           
 34641                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 34642  01BAA0  0100               	movlb	0	; () banked
 34643  01BAA2  51A2               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 34644  01BAA4  11A3               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 34645  01BAA6  11A4               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 34646  01BAA8  B4D8               	btfsc	status,2,c
 34647  01BAAA  0011               	retfie		f
 34648                           
 34649                           ; BSR set to: 0
 34650                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 34651  01BAAC  D801               	call	i2u1032_48
 34652  01BAAE  0011               	retfie		f
 34653  01BAB0                     i2u1032_48:
 34654  01BAB0  0005               	push	
 34655  01BAB2  6EFA               	movwf	pclath,c
 34656  01BAB4  51A2               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 34657  01BAB6  6EFD               	movwf	tosl,c
 34658  01BAB8  51A3               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 34659  01BABA  6EFE               	movwf	tosh,c
 34660  01BABC  51A4               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 34661  01BABE  6EFF               	movwf	tosu,c
 34662  01BAC0  50FA               	movf	pclath,w,c
 34663  01BAC2  0012               	return		;indir
 34664  01BAC4                     __end_of_UART2_tx_vect_isr:
 34665                           	opt callstack 0
 34666                           
 34667 ;; *************** function _UART2_Transmit_ISR *****************
 34668 ;; Defined at:
 34669 ;;		line 213 in file "mcc_generated_files/uart2.c"
 34670 ;; Parameters:    Size  Location     Type
 34671 ;;		None
 34672 ;; Auto vars:     Size  Location     Type
 34673 ;;		None
 34674 ;; Return value:  Size  Location     Type
 34675 ;;                  1  [STACK] void 
 34676 ;; Registers used:
 34677 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34678 ;; Tracked objects:
 34679 ;;		On entry : 3F/0
 34680 ;;		On exit  : 3B/39
 34681 ;;		Unchanged: 0/0
 34682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34687 ;;Total ram usage:        0 bytes
 34688 ;; Hardware stack levels used:    1
 34689 ;; This function calls:
 34690 ;;		Nothing
 34691 ;; This function is called by:
 34692 ;;		_UART2_Initialize
 34693 ;;		_UART2_tx_vect_isr
 34694 ;; This function uses a reentrant model
 34695 ;;
 34696                           
 34697                           	psect	text167
 34698  01B7C4                     __ptext167:
 34699                           	opt callstack 0
 34700  01B7C4                     _UART2_Transmit_ISR:
 34701                           	opt callstack 4
 34702                           
 34703                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 34704                           
 34705                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34706                           ;incstack = 0
 34707  01B7C4  0E40               	movlw	64
 34708  01B7C6  6044               	cpfslt	_uart2TxBufferRemaining^0,c
 34709  01B7C8  D010               	goto	l673
 34710                           
 34711                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 34712  01B7CA  0E00               	movlw	low _uart2TxBuffer
 34713  01B7CC  2445               	addwf	_uart2TxTail^0,w,c	;volatile
 34714  01B7CE  6ED9               	movwf	fsr2l,c
 34715  01B7D0  6ADA               	clrf	fsr2h,c
 34716  01B7D2  0E03               	movlw	high _uart2TxBuffer
 34717  01B7D4  22DA               	addwfc	fsr2h,f,c
 34718  01B7D6  50DF               	movf	indf2,w,c
 34719  01B7D8  013D               	movlb	61	; () banked
 34720  01B7DA  6FD2               	movwf	210,b	;volatile
 34721                           
 34722                           ; BSR set to: 61
 34723  01B7DC  2A45               	incf	_uart2TxTail^0,f,c	;volatile
 34724                           
 34725                           ; BSR set to: 61
 34726                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 34727  01B7DE  0E3F               	movlw	63
 34728  01B7E0  6445               	cpfsgt	_uart2TxTail^0,c
 34729  01B7E2  D001               	goto	l10577
 34730                           
 34731                           ; BSR set to: 61
 34732                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 34733  01B7E4  6A45               	clrf	_uart2TxTail^0,c	;volatile
 34734  01B7E6                     l10577:
 34735                           
 34736                           ; BSR set to: 61
 34737                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 34738  01B7E6  2A44               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 34739                           
 34740                           ;mcc_generated_files/uart2.c: 224:     }
 34741  01B7E8  0012               	return	
 34742  01B7EA                     l673:
 34743                           
 34744                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 34745  01B7EA  0139               	movlb	57	; () banked
 34746  01B7EC  9796               	bcf	150,3,b	;volatile
 34747                           
 34748                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 34749  01B7EE  0012               	return		;funcret
 34750  01B7F0                     __end_of_UART2_Transmit_ISR:
 34751                           	opt callstack 0
 34752                           
 34753 ;; *************** function _UART2_rx_vect_isr *****************
 34754 ;; Defined at:
 34755 ;;		line 203 in file "mcc_generated_files/uart2.c"
 34756 ;; Parameters:    Size  Location     Type
 34757 ;;		None
 34758 ;; Auto vars:     Size  Location     Type
 34759 ;;		None
 34760 ;; Return value:  Size  Location     Type
 34761 ;;                  1    wreg      void 
 34762 ;; Registers used:
 34763 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 34764 ;; Tracked objects:
 34765 ;;		On entry : 0/0
 34766 ;;		On exit  : 0/0
 34767 ;;		Unchanged: 0/0
 34768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34773 ;;Total ram usage:        0 bytes
 34774 ;; Hardware stack levels used:    1
 34775 ;; Hardware stack levels required when called:    1
 34776 ;; This function calls:
 34777 ;;		Absolute function
 34778 ;;		_UART2_Receive_ISR
 34779 ;; This function is called by:
 34780 ;;		Interrupt level 2
 34781 ;; This function uses a non-reentrant model
 34782 ;;
 34783                           
 34784                           	psect	text168
 34785  01BAC4                     __ptext168:
 34786                           	opt callstack 0
 34787  01BAC4                     _UART2_rx_vect_isr:
 34788                           	opt callstack 4
 34789                           
 34790                           ;incstack = 0
 34791  01BAC4  EE14  F15C         	lfsr	1,___inthi_sp
 34792                           
 34793                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 34794  01BAC8  0100               	movlb	0	; () banked
 34795  01BACA  51A5               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 34796  01BACC  11A6               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 34797  01BACE  11A7               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 34798  01BAD0  B4D8               	btfsc	status,2,c
 34799  01BAD2  0011               	retfie		f
 34800                           
 34801                           ; BSR set to: 0
 34802                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 34803  01BAD4  D801               	call	i2u1034_48
 34804  01BAD6  0011               	retfie		f
 34805  01BAD8                     i2u1034_48:
 34806  01BAD8  0005               	push	
 34807  01BADA  6EFA               	movwf	pclath,c
 34808  01BADC  51A5               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 34809  01BADE  6EFD               	movwf	tosl,c
 34810  01BAE0  51A6               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 34811  01BAE2  6EFE               	movwf	tosh,c
 34812  01BAE4  51A7               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 34813  01BAE6  6EFF               	movwf	tosu,c
 34814  01BAE8  50FA               	movf	pclath,w,c
 34815  01BAEA  0012               	return		;indir
 34816  01BAEC                     __end_of_UART2_rx_vect_isr:
 34817                           	opt callstack 0
 34818                           
 34819 ;; *************** function _UART2_Receive_ISR *****************
 34820 ;; Defined at:
 34821 ;;		line 233 in file "mcc_generated_files/uart2.c"
 34822 ;; Parameters:    Size  Location     Type
 34823 ;;		None
 34824 ;; Auto vars:     Size  Location     Type
 34825 ;;		None
 34826 ;; Return value:  Size  Location     Type
 34827 ;;                  1  [STACK] void 
 34828 ;; Registers used:
 34829 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34830 ;; Tracked objects:
 34831 ;;		On entry : 3F/0
 34832 ;;		On exit  : 3F/0
 34833 ;;		Unchanged: 0/0
 34834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34839 ;;Total ram usage:        0 bytes
 34840 ;; Hardware stack levels used:    1
 34841 ;; This function calls:
 34842 ;;		Nothing
 34843 ;; This function is called by:
 34844 ;;		_UART2_Initialize
 34845 ;;		_UART2_rx_vect_isr
 34846 ;; This function uses a reentrant model
 34847 ;;
 34848                           
 34849                           	psect	text169
 34850  01BC04                     __ptext169:
 34851                           	opt callstack 0
 34852  01BC04                     _UART2_Receive_ISR:
 34853                           	opt callstack 4
 34854                           
 34855                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 34856                           
 34857                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34858                           ;incstack = 0
 34859  01BC04  0E00               	movlw	low _uart2RxBuffer
 34860  01BC06  2443               	addwf	_uart2RxHead^0,w,c	;volatile
 34861  01BC08  6ED9               	movwf	fsr2l,c
 34862  01BC0A  6ADA               	clrf	fsr2h,c
 34863  01BC0C  0E04               	movlw	high _uart2RxBuffer
 34864  01BC0E  22DA               	addwfc	fsr2h,f,c
 34865  01BC10  006F F743 FFDF     	movff	15824,indf2	;volatile
 34866  01BC16  2A43               	incf	_uart2RxHead^0,f,c	;volatile
 34867                           
 34868                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 34869  01BC18  2843               	incf	_uart2RxHead^0,w,c
 34870  01BC1A  B4D8               	btfsc	status,2,c
 34871                           
 34872                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 34873  01BC1C  6A43               	clrf	_uart2RxHead^0,c	;volatile
 34874                           
 34875                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 34876  01BC1E  0100               	movlb	0	; () banked
 34877  01BC20  2BB9               	incf	_uart2RxCount& (0+255),f,b	;volatile
 34878                           
 34879                           ; BSR set to: 0
 34880                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34881  01BC22  0012               	return		;funcret
 34882  01BC24                     __end_of_UART2_Receive_ISR:
 34883                           	opt callstack 0
 34884                           
 34885 ;; *************** function _TMR6_ISR *****************
 34886 ;; Defined at:
 34887 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 34888 ;; Parameters:    Size  Location     Type
 34889 ;;		None
 34890 ;; Auto vars:     Size  Location     Type
 34891 ;;		None
 34892 ;; Return value:  Size  Location     Type
 34893 ;;                  1    wreg      void 
 34894 ;; Registers used:
 34895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 34896 ;; Tracked objects:
 34897 ;;		On entry : 0/0
 34898 ;;		On exit  : 0/0
 34899 ;;		Unchanged: 0/0
 34900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34903 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34904 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34905 ;;Total ram usage:        1 bytes
 34906 ;; Hardware stack levels used:    1
 34907 ;; Hardware stack levels required when called:    2
 34908 ;; This function calls:
 34909 ;;		_TMR6_CallBack
 34910 ;; This function is called by:
 34911 ;;		Interrupt level 2
 34912 ;; This function uses a non-reentrant model
 34913 ;;
 34914                           
 34915                           	psect	text170
 34916  01BCD4                     __ptext170:
 34917                           	opt callstack 0
 34918  01BCD4                     _TMR6_ISR:
 34919                           	opt callstack 3
 34920                           
 34921                           ; BSR set to: 0
 34922                           ;incstack = 0
 34923  01BCD4  0060  F004  F026   	movff	btemp,??_TMR6_ISR
 34924  01BCDA  EE14  F15C         	lfsr	1,___inthi_sp
 34925                           
 34926                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 34927  01BCDE  0139               	movlb	57	; () banked
 34928  01BCE0  91A9               	bcf	169,0,b	;volatile
 34929                           
 34930                           ; BSR set to: 57
 34931                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 34932  01BCE2  ECBE  F0DD         	call	_TMR6_CallBack	;wreg free
 34933  01BCE6  0060  F098  F001   	movff	??_TMR6_ISR,btemp
 34934  01BCEC  0011               	retfie		f
 34935  01BCEE                     __end_of_TMR6_ISR:
 34936                           	opt callstack 0
 34937                           
 34938 ;; *************** function _TMR6_CallBack *****************
 34939 ;; Defined at:
 34940 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 34941 ;; Parameters:    Size  Location     Type
 34942 ;;		None
 34943 ;; Auto vars:     Size  Location     Type
 34944 ;;		None
 34945 ;; Return value:  Size  Location     Type
 34946 ;;                  1  [STACK] void 
 34947 ;; Registers used:
 34948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 34949 ;; Tracked objects:
 34950 ;;		On entry : 3F/39
 34951 ;;		On exit  : 0/0
 34952 ;;		Unchanged: 0/0
 34953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34958 ;;Total ram usage:        0 bytes
 34959 ;; Hardware stack levels used:    1
 34960 ;; Hardware stack levels required when called:    1
 34961 ;; This function calls:
 34962 ;;		Absolute function
 34963 ;;		_TMR6_DefaultInterruptHandler
 34964 ;; This function is called by:
 34965 ;;		_TMR6_ISR
 34966 ;; This function uses a reentrant model
 34967 ;;
 34968                           
 34969                           	psect	text171
 34970  01BB7C                     __ptext171:
 34971                           	opt callstack 0
 34972  01BB7C                     _TMR6_CallBack:
 34973                           	opt callstack 3
 34974                           
 34975                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 34976                           
 34977                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34978                           ;incstack = 0
 34979  01BB7C  0100               	movlb	0	; () banked
 34980  01BB7E  5196               	movf	_TMR6_InterruptHandler& (0+255),w,b
 34981  01BB80  1197               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 34982  01BB82  1198               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 34983  01BB84  B4D8               	btfsc	status,2,c
 34984  01BB86  0012               	return	
 34985                           
 34986                           ; BSR set to: 0
 34987                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 34988  01BB88  D801               	call	u991_48
 34989  01BB8A  0012               	return	
 34990  01BB8C                     u991_48:
 34991  01BB8C  0005               	push	
 34992  01BB8E  6EFA               	movwf	pclath,c
 34993  01BB90  5196               	movf	_TMR6_InterruptHandler& (0+255),w,b
 34994  01BB92  6EFD               	movwf	tosl,c
 34995  01BB94  5197               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 34996  01BB96  6EFE               	movwf	tosh,c
 34997  01BB98  5198               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 34998  01BB9A  6EFF               	movwf	tosu,c
 34999  01BB9C  50FA               	movf	pclath,w,c
 35000  01BB9E  0012               	return		;indir
 35001  01BBA0                     __end_of_TMR6_CallBack:
 35002                           	opt callstack 0
 35003                           
 35004 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 35005 ;; Defined at:
 35006 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 35007 ;; Parameters:    Size  Location     Type
 35008 ;;		None
 35009 ;; Auto vars:     Size  Location     Type
 35010 ;;  i               1  [STACK] unsigned char 
 35011 ;; Return value:  Size  Location     Type
 35012 ;;                  1  [STACK] void 
 35013 ;; Registers used:
 35014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 35015 ;; Tracked objects:
 35016 ;;		On entry : 3F/0
 35017 ;;		On exit  : 0/0
 35018 ;;		Unchanged: 0/0
 35019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35024 ;;Total ram usage:        0 bytes
 35025 ;; Hardware stack levels used:    1
 35026 ;; This function calls:
 35027 ;;		Nothing
 35028 ;; This function is called by:
 35029 ;;		_TMR6_Initialize
 35030 ;;		_TMR6_CallBack
 35031 ;; This function uses a reentrant model
 35032 ;;
 35033                           
 35034                           	psect	text172
 35035  01B0B2                     __ptext172:
 35036                           	opt callstack 0
 35037  01B0B2                     _TMR6_DefaultInterruptHandler:
 35038                           	opt callstack 0
 35039                           
 35040                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35041  01B0B2  52E6               	movf	postinc1,f,c
 35042                           
 35043                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 35044                           ;stkvar	_i @ sp[(-1)+0]
 35045                           
 35046                           ;incstack = 0
 35047  01B0B4  0EFF               	movlw	-1
 35048  01B0B6  6AE3               	clrf	plusw1,c
 35049  01B0B8                     l10219:
 35050                           
 35051                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 35052                           ;stkvar	_i @ sp[(-1)+0]
 35053  01B0B8  0EFF               	movlw	-1
 35054  01B0BA  50E3               	movf	plusw1,w,c
 35055  01B0BC  0D02               	mullw	2
 35056  01B0BE  0E54               	movlw	low _tickCount
 35057  01B0C0  24F3               	addwf	243,w,c
 35058  01B0C2  6ED9               	movwf	fsr2l,c
 35059  01B0C4  0E02               	movlw	high _tickCount
 35060  01B0C6  20F4               	addwfc	prodh,w,c
 35061  01B0C8  6EDA               	movwf	fsr2h,c
 35062  01B0CA  50DE               	movf	postinc2,w,c
 35063  01B0CC  10DE               	iorwf	postinc2,w,c
 35064  01B0CE  B4D8               	btfsc	status,2,c
 35065  01B0D0  D00C               	goto	l10223
 35066                           
 35067                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 35068                           ;stkvar	_i @ sp[(-1)+0]
 35069  01B0D2  0EFF               	movlw	-1
 35070  01B0D4  50E3               	movf	plusw1,w,c
 35071  01B0D6  0D02               	mullw	2
 35072  01B0D8  0E54               	movlw	low _tickCount
 35073  01B0DA  24F3               	addwf	243,w,c
 35074  01B0DC  6ED9               	movwf	fsr2l,c
 35075  01B0DE  0E02               	movlw	high _tickCount
 35076  01B0E0  20F4               	addwfc	prodh,w,c
 35077  01B0E2  6EDA               	movwf	fsr2h,c
 35078  01B0E4  06DE               	decf	postinc2,f,c
 35079  01B0E6  0E00               	movlw	0
 35080  01B0E8  5ADD               	subwfb	postdec2,f,c
 35081  01B0EA                     l10223:
 35082                           
 35083                           ;mcc_generated_files/tmr6.c: 207:  }
 35084                           ;stkvar	_i @ sp[(-1)+0]
 35085  01B0EA  0EFF               	movlw	-1
 35086  01B0EC  2AE3               	incf	plusw1,f,c
 35087                           
 35088                           ;stkvar	_i @ sp[(-1)+0]
 35089  01B0EE  0EFF               	movlw	-1
 35090  01B0F0  006F FF8C  F001    	movff	plusw1,btemp
 35091  01B0F6  0E0C               	movlw	12
 35092  01B0F8  6401               	cpfsgt	btemp^0,c
 35093  01B0FA  D7DE               	goto	l10219
 35094                           
 35095                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 35096  01B0FC  52E5               	movf	postdec1,f,c
 35097  01B0FE  0012               	return		;funcret
 35098  01B100                     __end_of_TMR6_DefaultInterruptHandler:
 35099                           	opt callstack 0
 35100                           
 35101 ;; *************** function _DMA1_DMASCNT_ISR *****************
 35102 ;; Defined at:
 35103 ;;		line 126 in file "mcc_generated_files/dma1.c"
 35104 ;; Parameters:    Size  Location     Type
 35105 ;;		None
 35106 ;; Auto vars:     Size  Location     Type
 35107 ;;		None
 35108 ;; Return value:  Size  Location     Type
 35109 ;;                  1    wreg      void 
 35110 ;; Registers used:
 35111 ;;		None
 35112 ;; Tracked objects:
 35113 ;;		On entry : 0/0
 35114 ;;		On exit  : 3F/0
 35115 ;;		Unchanged: 0/0
 35116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35121 ;;Total ram usage:        0 bytes
 35122 ;; Hardware stack levels used:    1
 35123 ;; This function calls:
 35124 ;;		Nothing
 35125 ;; This function is called by:
 35126 ;;		Interrupt level 2
 35127 ;; This function uses a non-reentrant model
 35128 ;;
 35129                           
 35130                           	psect	text173
 35131  01BE00                     __ptext173:
 35132                           	opt callstack 0
 35133  01BE00                     _DMA1_DMASCNT_ISR:
 35134                           	opt callstack 5
 35135                           
 35136                           ;incstack = 0
 35137  01BE00  EE14  F15C         	lfsr	1,___inthi_sp
 35138                           
 35139                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 35140  01BE04  0139               	movlb	57	; () banked
 35141  01BE06  91A2               	bcf	162,0,b	;volatile
 35142                           
 35143                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 35144  01BE08  0100               	movlb	0	; () banked
 35145  01BE0A  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 35146                           
 35147                           ; BSR set to: 0
 35148  01BE0C  0011               	retfie		f
 35149  01BE0E                     __end_of_DMA1_DMASCNT_ISR:
 35150                           	opt callstack 0
 35151                           
 35152 ;; *************** function _DMA1_DMADCNT_ISR *****************
 35153 ;; Defined at:
 35154 ;;		line 134 in file "mcc_generated_files/dma1.c"
 35155 ;; Parameters:    Size  Location     Type
 35156 ;;		None
 35157 ;; Auto vars:     Size  Location     Type
 35158 ;;		None
 35159 ;; Return value:  Size  Location     Type
 35160 ;;                  1    wreg      void 
 35161 ;; Registers used:
 35162 ;;		None
 35163 ;; Tracked objects:
 35164 ;;		On entry : 0/0
 35165 ;;		On exit  : 3F/39
 35166 ;;		Unchanged: 0/0
 35167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35172 ;;Total ram usage:        0 bytes
 35173 ;; Hardware stack levels used:    1
 35174 ;; This function calls:
 35175 ;;		Nothing
 35176 ;; This function is called by:
 35177 ;;		Interrupt level 2
 35178 ;; This function uses a non-reentrant model
 35179 ;;
 35180                           
 35181                           	psect	text174
 35182  01BE24                     __ptext174:
 35183                           	opt callstack 0
 35184  01BE24                     _DMA1_DMADCNT_ISR:
 35185                           	opt callstack 5
 35186                           
 35187                           ; BSR set to: 0
 35188                           ;incstack = 0
 35189  01BE24  EE14  F15C         	lfsr	1,___inthi_sp
 35190                           
 35191                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 35192  01BE28  0139               	movlb	57	; () banked
 35193  01BE2A  93A2               	bcf	162,1,b	;volatile
 35194                           
 35195                           ; BSR set to: 57
 35196  01BE2C  0011               	retfie		f
 35197  01BE2E                     __end_of_DMA1_DMADCNT_ISR:
 35198                           	opt callstack 0
 35199                           
 35200 ;; *************** function _DMA1_DMAA_ISR *****************
 35201 ;; Defined at:
 35202 ;;		line 144 in file "mcc_generated_files/dma1.c"
 35203 ;; Parameters:    Size  Location     Type
 35204 ;;		None
 35205 ;; Auto vars:     Size  Location     Type
 35206 ;;		None
 35207 ;; Return value:  Size  Location     Type
 35208 ;;                  1    wreg      void 
 35209 ;; Registers used:
 35210 ;;		None
 35211 ;; Tracked objects:
 35212 ;;		On entry : 0/0
 35213 ;;		On exit  : 3F/39
 35214 ;;		Unchanged: 0/0
 35215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35220 ;;Total ram usage:        0 bytes
 35221 ;; Hardware stack levels used:    1
 35222 ;; This function calls:
 35223 ;;		Nothing
 35224 ;; This function is called by:
 35225 ;;		Interrupt level 2
 35226 ;; This function uses a non-reentrant model
 35227 ;;
 35228                           
 35229                           	psect	text175
 35230  01BE30                     __ptext175:
 35231                           	opt callstack 0
 35232  01BE30                     _DMA1_DMAA_ISR:
 35233                           	opt callstack 5
 35234                           
 35235                           ; BSR set to: 57
 35236                           ;incstack = 0
 35237  01BE30  EE14  F15C         	lfsr	1,___inthi_sp
 35238                           
 35239                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 35240  01BE34  0139               	movlb	57	; () banked
 35241  01BE36  97A2               	bcf	162,3,b	;volatile
 35242                           
 35243                           ; BSR set to: 57
 35244  01BE38  0011               	retfie		f
 35245  01BE3A                     __end_of_DMA1_DMAA_ISR:
 35246                           	opt callstack 0
 35247                           
 35248 ;; *************** function _DMA1_DMAOR_ISR *****************
 35249 ;; Defined at:
 35250 ;;		line 155 in file "mcc_generated_files/dma1.c"
 35251 ;; Parameters:    Size  Location     Type
 35252 ;;		None
 35253 ;; Auto vars:     Size  Location     Type
 35254 ;;		None
 35255 ;; Return value:  Size  Location     Type
 35256 ;;                  1    wreg      void 
 35257 ;; Registers used:
 35258 ;;		None
 35259 ;; Tracked objects:
 35260 ;;		On entry : 0/0
 35261 ;;		On exit  : 3F/39
 35262 ;;		Unchanged: 0/0
 35263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35268 ;;Total ram usage:        0 bytes
 35269 ;; Hardware stack levels used:    1
 35270 ;; This function calls:
 35271 ;;		Nothing
 35272 ;; This function is called by:
 35273 ;;		Interrupt level 2
 35274 ;; This function uses a non-reentrant model
 35275 ;;
 35276                           
 35277                           	psect	text176
 35278  01BE3C                     __ptext176:
 35279                           	opt callstack 0
 35280  01BE3C                     _DMA1_DMAOR_ISR:
 35281                           	opt callstack 5
 35282                           
 35283                           ; BSR set to: 57
 35284                           ;incstack = 0
 35285  01BE3C  EE14  F15C         	lfsr	1,___inthi_sp
 35286                           
 35287                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 35288  01BE40  0139               	movlb	57	; () banked
 35289  01BE42  95A2               	bcf	162,2,b	;volatile
 35290                           
 35291                           ; BSR set to: 57
 35292  01BE44  0011               	retfie		f
 35293  01BE46                     __end_of_DMA1_DMAOR_ISR:
 35294                           	opt callstack 0
 35295                           
 35296                           ;
 35297                           ; Interrupt Vector Table @ 0x8
 35298                           ;
 35299                           
 35300                           	psect	ivt0x8
 35301  000008                     __pivt0x8:
 35302                           	opt callstack 0
 35303  000008                     ivt0x8_base:
 35304                           	opt callstack 0
 35305                           
 35306                           ; Vector 0 : SWINT
 35307  000008  6FA4               	dw	_Default_ISR shr (0+2)
 35308                           
 35309                           ; Vector 1 : HLVD
 35310  00000A  6FA4               	dw	_Default_ISR shr (0+2)
 35311                           
 35312                           ; Vector 2 : OSF
 35313  00000C  6FA4               	dw	_Default_ISR shr (0+2)
 35314                           
 35315                           ; Vector 3 : CSW
 35316  00000E  6FA4               	dw	_Default_ISR shr (0+2)
 35317                           
 35318                           ; Vector 4 : NVM
 35319  000010  6FA4               	dw	_Default_ISR shr (0+2)
 35320                           
 35321                           ; Vector 5 : SCAN
 35322  000012  6FA4               	dw	_Default_ISR shr (0+2)
 35323                           
 35324                           ; Vector 6 : CRC
 35325  000014  6FA4               	dw	_Default_ISR shr (0+2)
 35326                           
 35327                           ; Vector 7 : IOC
 35328  000016  6FA4               	dw	_Default_ISR shr (0+2)
 35329                           
 35330                           ; Vector 8 : INT0
 35331  000018  6F7C               	dw	_INT0_ISR shr (0+2)
 35332                           
 35333                           ; Vector 9 : ZCD
 35334  00001A  6FA4               	dw	_Default_ISR shr (0+2)
 35335                           
 35336                           ; Vector 10 : AD
 35337  00001C  6DE6               	dw	_ADCC_ISR shr (0+2)
 35338                           
 35339                           ; Vector 11 : ADT
 35340  00001E  6B2C               	dw	_ADCC_ThresholdISR shr (0+2)
 35341                           
 35342                           ; Vector 12 : CMP1
 35343  000020  6FA4               	dw	_Default_ISR shr (0+2)
 35344                           
 35345                           ; Vector 13 : SMT1
 35346  000022  6FA4               	dw	_Default_ISR shr (0+2)
 35347                           
 35348                           ; Vector 14 : SMT1PRA
 35349  000024  6FA4               	dw	_Default_ISR shr (0+2)
 35350                           
 35351                           ; Vector 15 : SMT1PRW
 35352  000026  6FA4               	dw	_Default_ISR shr (0+2)
 35353                           
 35354                           ; Vector 16 : DMA1SCNT
 35355  000028  6F80               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 35356                           
 35357                           ; Vector 17 : DMA1DCNT
 35358  00002A  6F89               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 35359                           
 35360                           ; Vector 18 : DMA1OR
 35361  00002C  6F8F               	dw	_DMA1_DMAOR_ISR shr (0+2)
 35362                           
 35363                           ; Vector 19 : DMA1A
 35364  00002E  6F8C               	dw	_DMA1_DMAA_ISR shr (0+2)
 35365                           
 35366                           ; Vector 20 : SPI1RX
 35367  000030  6FA4               	dw	_Default_ISR shr (0+2)
 35368                           
 35369                           ; Vector 21 : SPI1TX
 35370  000032  6FA4               	dw	_Default_ISR shr (0+2)
 35371                           
 35372                           ; Vector 22 : SPI1
 35373  000034  6FA4               	dw	_Default_ISR shr (0+2)
 35374                           
 35375                           ; Vector 23 : I2C1RX
 35376  000036  6FA4               	dw	_Default_ISR shr (0+2)
 35377                           
 35378                           ; Vector 24 : I2C1TX
 35379  000038  6FA4               	dw	_Default_ISR shr (0+2)
 35380                           
 35381                           ; Vector 25 : I2C1
 35382  00003A  6FA4               	dw	_Default_ISR shr (0+2)
 35383                           
 35384                           ; Vector 26 : I2C1E
 35385  00003C  6FA4               	dw	_Default_ISR shr (0+2)
 35386                           
 35387                           ; Vector 27 : U1RX
 35388  00003E  6E9D               	dw	_UART1_rx_vect_isr shr (0+2)
 35389                           
 35390                           ; Vector 28 : U1TX
 35391  000040  6FA4               	dw	_Default_ISR shr (0+2)
 35392                           
 35393                           ; Vector 29 : U1E
 35394  000042  6FA4               	dw	_Default_ISR shr (0+2)
 35395                           
 35396                           ; Vector 30 : U1
 35397  000044  6FA4               	dw	_Default_ISR shr (0+2)
 35398                           
 35399                           ; Vector 31 : TMR0
 35400  000046  6FA4               	dw	_Default_ISR shr (0+2)
 35401                           
 35402                           ; Vector 32 : TMR1
 35403  000048  6FA4               	dw	_Default_ISR shr (0+2)
 35404                           
 35405                           ; Vector 33 : TMR1G
 35406  00004A  6FA4               	dw	_Default_ISR shr (0+2)
 35407                           
 35408                           ; Vector 34 : TMR2
 35409  00004C  6FA4               	dw	_Default_ISR shr (0+2)
 35410                           
 35411                           ; Vector 35 : CCP1
 35412  00004E  6FA4               	dw	_Default_ISR shr (0+2)
 35413                           
 35414                           ; Vector 36 : Undefined
 35415  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 35416                           
 35417                           ; Vector 37 : NCO1
 35418  000052  6FA4               	dw	_Default_ISR shr (0+2)
 35419                           
 35420                           ; Vector 38 : CWG1
 35421  000054  6FA4               	dw	_Default_ISR shr (0+2)
 35422                           
 35423                           ; Vector 39 : CLC1
 35424  000056  6FA4               	dw	_Default_ISR shr (0+2)
 35425                           
 35426                           ; Vector 40 : INT1
 35427  000058  6D30               	dw	_INT1_ISR shr (0+2)
 35428                           
 35429                           ; Vector 41 : CMP2
 35430  00005A  6FA4               	dw	_Default_ISR shr (0+2)
 35431                           
 35432                           ; Vector 42 : DMA2SCNT
 35433  00005C  6FA4               	dw	_Default_ISR shr (0+2)
 35434                           
 35435                           ; Vector 43 : DMA2DCNT
 35436  00005E  6FA4               	dw	_Default_ISR shr (0+2)
 35437                           
 35438                           ; Vector 44 : DMA2OR
 35439  000060  6FA4               	dw	_Default_ISR shr (0+2)
 35440                           
 35441                           ; Vector 45 : DMA2A
 35442  000062  6FA4               	dw	_Default_ISR shr (0+2)
 35443                           
 35444                           ; Vector 46 : I2C2RX
 35445  000064  6FA4               	dw	_Default_ISR shr (0+2)
 35446                           
 35447                           ; Vector 47 : I2C2TX
 35448  000066  6FA4               	dw	_Default_ISR shr (0+2)
 35449                           
 35450                           ; Vector 48 : I2C2
 35451  000068  6FA4               	dw	_Default_ISR shr (0+2)
 35452                           
 35453                           ; Vector 49 : I2C2E
 35454  00006A  6FA4               	dw	_Default_ISR shr (0+2)
 35455                           
 35456                           ; Vector 50 : U2RX
 35457  00006C  6EB1               	dw	_UART2_rx_vect_isr shr (0+2)
 35458                           
 35459                           ; Vector 51 : U2TX
 35460  00006E  6EA7               	dw	_UART2_tx_vect_isr shr (0+2)
 35461                           
 35462                           ; Vector 52 : U2E
 35463  000070  6FA4               	dw	_Default_ISR shr (0+2)
 35464                           
 35465                           ; Vector 53 : U2
 35466  000072  6FA4               	dw	_Default_ISR shr (0+2)
 35467                           
 35468                           ; Vector 54 : TMR3
 35469  000074  638E               	dw	_TMR3_ISR shr (0+2)
 35470                           
 35471                           ; Vector 55 : TMR3G
 35472  000076  6FA4               	dw	_Default_ISR shr (0+2)
 35473                           
 35474                           ; Vector 56 : TMR4
 35475  000078  6FA4               	dw	_Default_ISR shr (0+2)
 35476                           
 35477                           ; Vector 57 : CCP2
 35478  00007A  6FA4               	dw	_Default_ISR shr (0+2)
 35479                           
 35480                           ; Vector 58 : Undefined
 35481  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 35482                           
 35483                           ; Vector 59 : CWG2
 35484  00007E  6FA4               	dw	_Default_ISR shr (0+2)
 35485                           
 35486                           ; Vector 60 : CLC2
 35487  000080  6FA4               	dw	_Default_ISR shr (0+2)
 35488                           
 35489                           ; Vector 61 : INT2
 35490  000082  6FA4               	dw	_Default_ISR shr (0+2)
 35491                           
 35492                           ; Vector 62 : Undefined
 35493  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 35494                           
 35495                           ; Vector 63 : Undefined
 35496  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 35497                           
 35498                           ; Vector 64 : Undefined
 35499  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 35500                           
 35501                           ; Vector 65 : Undefined
 35502  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 35503                           
 35504                           ; Vector 66 : Undefined
 35505  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 35506                           
 35507                           ; Vector 67 : Undefined
 35508  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 35509                           
 35510                           ; Vector 68 : Undefined
 35511  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 35512                           
 35513                           ; Vector 69 : Undefined
 35514  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 35515                           
 35516                           ; Vector 70 : TMR5
 35517  000094  67C4               	dw	_TMR5_ISR shr (0+2)
 35518                           
 35519                           ; Vector 71 : TMR5G
 35520  000096  6FA4               	dw	_Default_ISR shr (0+2)
 35521                           
 35522                           ; Vector 72 : TMR6
 35523  000098  6F35               	dw	_TMR6_ISR shr (0+2)
 35524                           
 35525                           ; Vector 73 : CCP3
 35526  00009A  6FA4               	dw	_Default_ISR shr (0+2)
 35527                           
 35528                           ; Vector 74 : CWG3
 35529  00009C  6FA4               	dw	_Default_ISR shr (0+2)
 35530                           
 35531                           ; Vector 75 : CLC3
 35532  00009E  6FA4               	dw	_Default_ISR shr (0+2)
 35533                           
 35534                           ; Vector 76 : Undefined
 35535  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 35536                           
 35537                           ; Vector 77 : Undefined
 35538  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 35539                           
 35540                           ; Vector 78 : Undefined
 35541  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 35542                           
 35543                           ; Vector 79 : Undefined
 35544  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 35545                           
 35546                           ; Vector 80 : CCP4
 35547  0000A8  6FA4               	dw	_Default_ISR shr (0+2)
 35548                           
 35549                           ; Vector 81 : CLC4
 35550  0000AA  6FA4               	dw	_Default_ISR shr (0+2)
 35551  0000AC                     ivt0x8_undefint:
 35552                           	opt callstack 0
 35553  0000AC  00FF               	reset	
 35554                           
 35555                           	psect	text177
 35556  000000                     __ptext177:
 35557                           	opt callstack 0
 35558                           
 35559                           	psect	rparam
 35560  0000                     
 35561                           	psect	temp
 35562  000001                     btemp:
 35563                           	opt callstack 0
 35564  000001                     	ds	32
 35565  0000                     wtemp0	set	btemp
 35566  0000                     wtemp1	set	btemp+2
 35567  0000                     wtemp2	set	btemp+4
 35568  0000                     wtemp3	set	btemp+6
 35569  0000                     wtemp4	set	btemp+8
 35570  0000                     wtemp5	set	btemp+10
 35571  0000                     wtemp8	set	btemp+1
 35572  0000                     ttemp0	set	btemp
 35573  0000                     ttemp1	set	btemp+3
 35574  0000                     ttemp2	set	btemp+6
 35575  0000                     ttemp3	set	btemp+9
 35576  0000                     ttemp5	set	btemp+1
 35577  0000                     ttemp6	set	btemp+4
 35578  0000                     ttemp7	set	btemp+8
 35579  0000                     ltemp0	set	btemp
 35580  0000                     ltemp1	set	btemp+4
 35581  0000                     ltemp2	set	btemp+8
 35582  0000                     lltemp0	set	btemp
 35583  0000                     lltemp1	set	btemp+8
 35584  0000                     lltemp2	set	btemp+16
 35585  0000                     lltemp3	set	btemp+24
 35586                           tosu	equ	0x3FFF
 35587                           tosh	equ	0x3FFE
 35588                           tosl	equ	0x3FFD
 35589                           stkptr	equ	0x3FFC
 35590                           pclatu	equ	0x3FFB
 35591                           pclath	equ	0x3FFA
 35592                           pcl	equ	0x3FF9
 35593                           tblptru	equ	0x3FF8
 35594                           tblptrh	equ	0x3FF7
 35595                           tblptrl	equ	0x3FF6
 35596                           tablat	equ	0x3FF5
 35597                           prodh	equ	0x3FF4
 35598                           prodl	equ	0x3FF3
 35599                           indf0	equ	0x3FEF
 35600                           postinc0	equ	0x3FEE
 35601                           postdec0	equ	0x3FED
 35602                           preinc0	equ	0x3FEC
 35603                           plusw0	equ	0x3FEB
 35604                           fsr0h	equ	0x3FEA
 35605                           fsr0l	equ	0x3FE9
 35606                           wreg	equ	0x3FE8
 35607                           indf1	equ	0x3FE7
 35608                           postinc1	equ	0x3FE6
 35609                           postdec1	equ	0x3FE5
 35610                           preinc1	equ	0x3FE4
 35611                           plusw1	equ	0x3FE3
 35612                           fsr1h	equ	0x3FE2
 35613                           fsr1l	equ	0x3FE1
 35614                           bsr	equ	0x3FE0
 35615                           indf2	equ	0x3FDF
 35616                           postinc2	equ	0x3FDE
 35617                           postdec2	equ	0x3FDD
 35618                           preinc2	equ	0x3FDC
 35619                           plusw2	equ	0x3FDB
 35620                           fsr2h	equ	0x3FDA
 35621                           fsr2l	equ	0x3FD9
 35622                           status	equ	0x3FD8


Data Sizes:
    Strings     939
    Constant    492
    Data        1052
    BSS         1299
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      39
    BANK0           160     25     158
    BANK1           256      0     249
    BANK2           256      0     213
    BANK3           256      0     198
    BANK4           256      0     255
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_102(CODE[1]), STR_64(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_99(CODE[3]), STR_95(CODE[3]), STR_90(CODE[3]), STR_85(CODE[3]), 
		 -> STR_80(CODE[3]), STR_76(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_99(CODE[3]), STR_95(CODE[3]), STR_90(CODE[3]), STR_85(CODE[3]), 
		 -> STR_80(CODE[3]), STR_76(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 103
		 -> ct(STACK[3]), STR_65(CODE[103]), STR_63(CODE[3]), STR_62(CODE[3]), 
		 -> STR_61(CODE[19]), STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), 
		 -> STR_57(CODE[19]), STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), 
		 -> STR_53(CODE[15]), STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), 
		 -> STR_49(CODE[19]), STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), 
		 -> STR_43(CODE[3]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    l	PTR const unsigned char  size(2) Largest target is 103
		 -> ct(STACK[3]), STR_65(CODE[103]), STR_63(CODE[3]), STR_62(CODE[3]), 
		 -> STR_61(CODE[19]), STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), 
		 -> STR_57(CODE[19]), STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), 
		 -> STR_53(CODE[15]), STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), 
		 -> STR_49(CODE[19]), STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), 
		 -> STR_43(CODE[3]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_47(CODE[9]), STR_46(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[6]), 
		 -> V(BANK1[191]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_47(CODE[9]), STR_46(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[6]), 
		 -> V(BANK1[191]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_71(CODE[4]), STR_70(CODE[4]), STR_67(CODE[4]), STR_66(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_71(CODE[4]), STR_70(CODE[4]), STR_67(CODE[4]), STR_66(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 103
		 -> STR_65(CODE[103]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S6129_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 103
		 -> STR_65(CODE[103]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    f1p	PTR  size(2) Largest target is 295
		 -> C(BIGRAM[295]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 103
		 -> STR_65(CODE[103]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 103
		 -> STR_65(CODE[103]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_47(CODE[9]), STR_46(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[6]), 
		 -> V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_47(CODE[9]), STR_46(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[6]), 
		 -> V(BANK1[191]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_47(CODE[9]), 
		 -> STR_46(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[6]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    h	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    h	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    sp__hid_input	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    h	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    S4548tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_47(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_46(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    sp__hid_display	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1995spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1995spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  374811
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8986
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         9     5      4     687
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          2     0      2     647
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            2     0      2     175
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31190
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     2     0      2      62
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  186232
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   92863
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            84    10     74   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   62814
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   62550
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31159
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                           15    15      0    5476
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0    5386
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0    5386
                     _check_day_time
 ---------------------------------------------------------------------------------
 (17) _check_day_time                                      0     0      0    5386
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
 ---------------------------------------------------------------------------------
 (18) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   35546
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   35456
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           2     2      0   35456
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            84    10     74   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (17) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
       ___fltol
       ___xxtofl
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     509      69       15.7%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      FF      13       99.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      D5       9       83.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F9       7       97.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      27       1       61.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     458      58        0.0%
DATA                 0      0     961       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Dec 22 02:31:00 2019

                     _SPI1_Exchange8bit BC24                __end_of_set_display_info BC7E  
                                     _C 06FF                                       _D 0826  
                                     _H 01BF                                       _P 008C  
                                     _R 00BD                                       _S 01C6  
                                     _T FB37                                       _V 0100  
      __end_of_TMR5_SetInterruptHandler B9AA            __end_of_start_switch_handler BC04  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FC3F                  __end_of_FVR_Initialize BE6E  
                        _check_day_time 9900                             __CFG_LVP$ON 000000  
                                   l169 BD5A                                     l807 BC32  
                                   l673 B7EA                                     _GIE 01FE97  
                                   _abs B2B0                                     _pad 97EC  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize BD06  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack BB58  
                     _update_adc_result B4FE                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 011A                           _INT1_CallBack BAEC  
                          __CFG_ZCD$OFF 000000                                    l1002 B43C  
                                  l2034 47DE                                    l1340 190A  
                                  l1324 12A2                                    l2038 4A90  
                                  l1190 B47C                                    l3014 3B5E  
                                  l1350 19B0                                    l1342 1910  
                                  l2224 066A                                    l2080 70D8  
                                  l1360 1BB4                                    l2313 5DD6  
                                  l1361 1DDC                                    l2139 9848  
                       _timer3ReloadVal 00B2                                    l3116 7884  
                                  l3054 8324                                    l1606 B5C0  
                                  l1366 2352                                    l2159 55A4  
                                  l2239 0B1A                                    l1447 AF12  
                                  l1722 BC7A                                    l2195 123A  
                                  l2363 3334                                    l3085 B2F0  
                                  l3077 8852                                    l2277 71C6  
                                  l1591 A8DC                                    l1665 B554  
                                  l3185 95B0                                    l2298 64FC  
                                  l1682 9B20                                    l1674 7FCA  
                                  l1835 86BC                                    l1587 A5D6  
                                  l1675 8126                                    l3452 7F0E  
                  _ADCC_StartConversion BD74                                    l2655 A318  
                                  l1784 54C0                                    l3480 A9E6  
                                  l2666 8E2C                                    l1882 9D44  
                                  l2659 8D58                                    l3467 AA6A  
                                  l1963 A192                                    l1972 8504  
                                  l2933 431A                                    l2693 8CCA  
                                  l1894 9A12                                    l2945 41AA  
                                  l8005 7568                                    l8201 4FF4  
                                  l8113 4CEC                                    l8105 4CD2  
                                  l8041 7A20                                    l8033 7974  
                                  l8025 78EC                                    l2978 5010  
                                  l8131 4DB2                                    l8123 4D7C  
                                  l8133 4DC4                                    l8141 4E1C  
                                  l8061 4AF6                                    l8311 396E  
                                  l8223 33D4                                    l8071 4B4C  
                                  l8305 3952                                    l8241 34A2  
                                  l8225 33DA                                    l8217 3394  
                                  l8153 4E66                                    l8081 4BD4  
                                  l8073 4B7C                                    l8315 3994  
                                  l8243 34A8                                    l8235 3462  
                                  l8227 340A                                    l8171 4EDC  
                                  l8147 4E4A                                    l8139 4E18  
                                  l8091 4C2A                                    l8067 4B36  
                                  l8325 39DE                                    l8253 34FA  
                                  l8245 34D8                                    l8181 4F50  
                                  l8157 4E8C                                    l8093 4C5A  
                                  l9221 76F6                                    l9205 7634  
                                  l8413 90CE                                    l8405 909A  
                                  l8501 B168                                    l8343 3A9E  
                                  l7711 3F26                                    l7631 3BFE  
                                  l8167 4ED6                                    l8087 4C14  
                                  l9231 77D8                                    l9223 770E  
                                  l9215 76CA                                    l9207 7656  
                                  l8511 8BB4                                    l8329 39E4  
                                  l7713 3F38                                    l7721 3F72  
                                  l7625 3BBE                                    l8193 4FBC  
                                  l9241 7874                                    l9225 7732  
                                  l8433 971E                                    l8425 96F4  
                                  l8339 3A58                                    l7811 4276  
                                  l7707 3F06                                    l7643 3C7C  
                                  l7635 3C14                                    l8187 4F8C  
                                  l8099 4C98                                    l9227 7770  
                                  l8451 97D2                                    l8443 979E  
                                  l8357 3B0C                                    l8349 3AC8  
                                  l7821 42A2                                    l7741 4020  
                                  l7717 3F42                                    l7661 3D34  
                                  l7637 3C44                                    l8429 9706  
                                  l8359 3B26                                    l7655 3CEE  
                                  l8199 4FE4                                    l8391 8FF4  
                                  l8463 A2E2                                    l8535 8C62  
                                  l8527 8C36                                    l8551 8A30  
                                  l7833 42FA                                    l7825 42BA  
                                  l7761 4134                                    l7745 402A  
                                  l7649 3CAE                                    l8481 8DA6  
                                  l8385 8FD4                                    l8537 8C78  
                                  l8529 8C52                                    l9257 7D80  
                                  l7827 42CA                                    l7771 418E  
                                  l7763 415A                                    l7739 400E  
                                  l7667 3D56                                    l7659 3D04  
                                  l8475 8D16                                    l9523 81E0  
                                  l9515 8174                                    l8379 8FBE  
                                  l8467 A316                                    l8459 A2A0  
                                  l7923 626A                                    l9259 7DEC  
                                  l8563 8B02                                    l7781 41DE  
                                  l7749 405C                                    l8493 8E2A  
                                  l8485 8DF4                                    l9525 81EE  
                                  l9613 548E                                    l9621 54A0  
                                  l7597 A6AA                                    l7909 AA5A  
                                  l9535 8250                                    l9527 8204  
                                  l9607 53F2                                    l7599 A6CC  
                                  l7943 6420                                    l8583 91CE  
                                  l8575 9122                                    l7785 41EA  
                                  l7697 3E94                                    l9537 826E  
                                  l9529 8222                                    l7881 87F0  
                                  l7937 6388                                    l7795 4212  
                                  l7779 41CC                                    l9547 82A2  
                                  l9539 8284                                    l7867 B2E0  
                                  l7891 884A                                    l7947 648E  
                                  l7939 63D8                                    l9557 8304  
                                  l9573 504C                                    l7981 73FC  
                                  l7885 87F4                                    l7965 A9D6  
                                  l9821 B77C                                    l9751 9A0A  
                                  l7799 4218                                    l9583 516A  
                                  l9567 501C                                    l9639 B8DA  
                                  l8599 B050                                    l7993 7496  
                                  l9739 998E                                    l9595 5276  
                                  l9587 5244                                    l7987 7450  
                                  l9763 B5CA                                    l9829 B08C  
                                  l9599 5312                                    STR_1 FF50  
                                  STR_2 FFA2                                    STR_3 FFD0  
                                  STR_4 FF1D                                    STR_5 FE16  
                                  STR_6 FE16                                    STR_7 FE16  
                                  STR_8 FF0B                                    STR_9 FD06  
                                  _LATA 003FBA                                    _LATB 003FBB  
                                  _LATC 003FBC                                    _LATD 003FBD  
                                  _LATE 003FBE                                    _LATF 003FBF  
                                  _T2PR 003FAB                                    u6010 6202  
                                  u6020 624E                                    u6110 B374  
                                  u6015 61F8                                    u6120 B376  
                                  u6210 744C                                    u6130 A994  
                                  _T6PR 003F93                                    u5500 3EDA  
                                  u7100 8B94                                    u6060 632E  
                                  u6140 A996                                    _PMD0 0039C0  
                                  u5501 3ED4                                    u6221 7456  
                                  u6045 6288                                    _PMD1 0039C1  
                                  u5350 A6FA                                    u6230 7490  
                                  u6310 78E6                                    u7030 A312  
                                  u7110 8BA8                                    u6046 628E  
                                  _PMD2 0039C2                                    u6047 629C  
                                  _PMD3 0039C3                                    u6160 B730  
                                  u6240 74C2                                    u7120 8BE2  
                                  u6080 6406                                    _PMD4 0039C4  
                                  u7105 8B8A                                    u6065 6324  
                                  u7201 89F0                                    _PMD5 0039C5  
                                  u5610 4052                                    u6170 B732  
                                  u6330 793C                                    u7210 8A2A  
                                  _PMD6 0039C6                                    _PMD7 0039C7  
                                  u5540 3F6A                                    u6260 75A0  
                                  u6340 796E                                    u5380 B700  
                                  u7220 8A5C                                    u5357 A6EC  
                                  u7125 8BD8                                    u6085 63FC  
                                  u5710 420A                                    u5550 3F8A  
                                  u5518 3EDC                                    u7310 B02C  
                                  u6190 73F6                                    u6350 79A0  
                                  u5390 B702                                    u5615 4042  
                                  u7320 B04C                                    u6280 75F2  
                                  u7240 8B3A                                    u5545 3F5A  
                                  u5650 417C                                    u5490 3EBA  
                                  u6610 4F2A                                    u6530 4E44  
                                  u6370 7A58                                    u7090 B164  
                                  u7170 8C80                                    u6620 4F64  
                                  u7260 911C                                    u5820 B6D0  
                                  u5750 4266                                    u6630 4FA0  
                                  u6390 7AAA                                    u7190 8CAA  
                                  u7270 914E                                    u5830 B6D2  
                                  u6615 4F1A                                    u6720 34E8  
                                  u9104 532C                                    u9024 5036  
                                  u9105 5326                                    u9025 5030  
                                  u5690 41F0                                    u6570 4ECE  
                                  u9130 5356                                    u7290 9206  
                                  u5755 4256                                    u5780 4286  
                                  u9124 534E                                    u9044 5066  
                                  u6900 9020                                    u5940 8842  
                                  u9125 5348                                    u9045 5060  
                                  u6830 3A32                                    u5950 8844  
                                  u6735 367C                                    u5935 8824  
                                  u6840 3A6C                                    u9064 5088  
                                  u5880 B2C4                                    u6920 90BA  
                                  u6745 3744                                    u9065 5082  
                                  u9330 AD28                                    u6850 3AB2  
                                  u5890 8774                                    u8530 7E1A  
                                  u6835 3A22                                    u6755 390C  
                                  u9084 525E                                    u8460 76C6  
                                  u5980 AA18                                    u9085 5258  
                                  u9405 BDA0                                    u6790 39D6  
                                  u5990 AA1A                                    u9406 BDA2  
                                  u5895 876A                                    u9415 BD90  
                                  u8480 781E                                    u9416 BD92  
                                  u8537 7E0C                                    u9450 8520  
                                  u8490 7820                                    u6970 974A  
                                  u8570 7EB4                                    u9355 AD5C  
                                  u9275 B3B0                                    u9356 AD5E  
                                  u9348 AD2A                                    u9540 BBAC  
                                  u8580 7EE2                                    u6990 97BE  
                                  u8575 7EAE                                    u8577 7EA0  
                                  u9546 BBAE                                    _PLLR 01CEE0  
                                  u8587 7ED4                                    u8980 8298  
                                  _WPUA 003A41                                    _WPUB 003A51  
                                  _WPUC 003A61                                    _WPUD 003A71  
                                  _WPUE 003A81                                    _WPUF 003A91  
                      __end_of_ADCC_ISR B7C4                           __CFG_FCMEN$ON 000000  
                                  _dbuf 0276                                    _cp_h FC4F  
                                  _cp_l FC4B                                    _atoi 761A  
                                  _ctoa A8E4                                    _main 1244  
                                  _dtoa 54C6                                    _nanf AE46  
                                  _seed 02C6                                    _prec 003C  
                                  _nout 00AE                                    _spin FBC7  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 70DC  
                                  btemp 0001                                    _utoa 64B8  
                                  _xtoa 5D92                  __end_of_check_adc_scan BE56  
                         ___fpclassifyf 86C6                                    prodh 003FF4  
                                  prodl 003FF3                                    start 00AE  
                       _timer5ReloadVal 00B6               __end_of_SPI1_Exchange8bit BC42  
             __size_of_clear_hid_pflags 0046                         _TMR3_Initialize B222  
           __size_of_set_load_relay_one 0010             __size_of_set_load_relay_two 0010  
                         __CFG_CSWEN$ON 000000                       _UART1_rx_vect_isr BA74  
                          ___param_bank 000000                  __end_of_check_day_time 9A14  
                    ?_UART1_rx_vect_isr 0021                        __end_of_INT0_ISR BDFE  
                      __end_of_INT1_ISR B4FE          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma A5DE           __end_of_OSCILLATOR_Initialize BD60  
                                 l10223 B0EA                                   l10401 9258  
                                 l10219 B0B8                                   l10403 9266  
                                 l12003 0EA2                                   l10501 95F6  
                                 l10423 934C                                   l10415 92D2  
                                 l10407 926E                                   l12031 0FF0  
                                 l12015 0F3A                                   l12111 7268  
                                 l12103 71FC                                   l10409 929A  
                                 l10329 B56A                                   l12041 1092  
                                 l12121 731E                                   l10505 969A  
                                 l10603 B424                                   l10291 856E  
                                 l10283 8542                                   l12051 10E2  
                                 l12107 7238                                   l10371 B51E  
                                 l10621 B464                                   l12029 0FD6  
                                 l12125 735A                                   l12117 72F2  
                                 l10295 8582                                   l12215 5F92  
                                 l12223 6018                                   l13103 1AC0  
                                 l12401 2EF8                                   l10395 923C  
                                 l12067 119A                                   l12147 6548  
                                 l12139 64EC                                   l12411 2FAE  
                                 l12315 27AA                                   l10731 9E16  
                                 l13115 1FFC                                   l13131 2204  
                                 l10397 924C                                   l10717 89BC  
                                 l11621 A736                                   l11701 A92E  
                                 l12157 673E                                   l12333 292E  
                                 l12325 2842                                   l10821 70C8  
                                 l10725 9D64                                   l13061 1942  
                                 l13037 16E2                                   l10399 9252  
                                 l11631 9818                                   l12087 7148  
                                 l12239 6102                                   l12191 5E3C  
                                 l12511 A4F6                                   l10831 A328  
                                 l10751 6E26                                   l13119 205C  
                                 l10577 B7E6                                   l11609 94C6  
                                 l11625 A774                                   l11641 988E  
                                 l12185 5E00                                   l12425 312A  
                                 l12361 2BC8                                   l12337 2982  
                                 l12273 2474                                   l10761 6E6A  
                                 l10753 6E36                                   l13145 225A  
                                 l13129 21D8                                   l13081 199C  
                                 l13073 1976                                   l13049 17BC  
                                 l11635 9840                                   l11651 A03A  
                                 l12179 5DC6                                   l12275 24AE  
                                 l10835 A366                                   l10771 6EA0  
                                 l10755 6E3A                                   l10819 70A0  
                                 l13091 19C0                                   l13059 1914  
                                 l11645 98D8                                   l11637 9852  
                                 l11733 55DE                                   l11725 5594  
                                 l11805 0146                                   l12445 32BC  
                                 l12381 2D28                                   l12357 2B94  
                                 l12349 2ADC                                   l12277 24C4  
                                 l12509 A4B4                                   l10781 6ED4  
                                 l10765 6E76                                   l13173 2302  
                                 l13165 22CC                                   l13149 227C  
                                 PRLOCK 0039EF                                   l11815 01EA  
                                 l11823 0258                                   l12199 5E9C  
                                 l12439 3262                                   l12391 2DD6  
                                 l12295 25F6                                   l12455 32E0  
                                 l12623 A12C                                   l13167 22E4  
                                 l13159 22BA                                   l12641 442E  
                                 l11737 55FC                                   l11913 06F0  
                                 l11833 02FC                                   l11841 032A  
                                 l11817 0216                                   l12449 32C0  
                                 l12297 2630                                   l11673 6C76  
                                 l10777 6EC8                                   l13177 2328  
                                 l12651 4680                                   l11771 58FC  
                                 l11747 580E                                   l11819 022C  
                                 l12299 2646                                   l11667 6BB8  
                                 l12811 83F6                                   l13187 237E  
                                 l12725 BBDE                                   l12661 47EE  
                                 l12637 43DA                                   l11909 06B8  
                                 l11853 0406                                   l10797 6F48  
                                 l10789 6F22                                   l12821 84CE  
                                 l10991 AAB8                                   l12647 4606  
                                 l10879 5D84                                   l11767 58C0  
                                 l11951 0B12                                   l11943 0A48  
                                 l11919 077A                                   l11871 0554  
                                 l11855 0470                                   l11687 6D8E  
                                 l11679 6CE0                                   l12495 A636  
                                 l12583 9A38                                   l10985 AAA8  
                                 l12665 4810                                   l12657 4746  
                                 l11953 0B34                                   l11929 0926  
                                 l11849 0396                                   l11785 00AC  
                                 l11699 A902                                   l11891 05F6  
                                 l11883 0594                                   l11875 057C  
                                 l11859 04D2                                   l12931 1284  
                                 l12677 4A88                                   l11893 0602  
                                 l11877 058E                                   l11797 00F0  
                                 l12933 128C                                   l12839 ABD2  
                                 l11967 0C32                                   l12865 7F9A  
                                 l12937 12AA                                   l11979 0CBA  
                                 l11987 0D24                                   l11995 0D90  
                                 l12939 12BC                                   l12879 80C2  
                                 l12799 8342                                   l12989 146E  
                       __end_of___aodiv 761A                            _Volts_to_SOC 95BA  
                                 _ADCAP 003EF5                                   _ADACT 003EFE  
                       __end_of___fladd 4324                                   _ADCLK 003EFF  
                       __end_of___aomod 7ACE                                   _ADPCH 003EF1  
                       __end_of___fldiv 501A                                   _ADREF 003EFD  
                       __end_of___awdiv 90E8                         __end_of___flneg B192  
                                 STR_10 FD33                                   STR_11 FD49  
                                 STR_12 FF2E                                   STR_21 FF61  
                                 STR_13 FF3F                                   STR_14 FF72  
                                 STR_30 FEE5                                   STR_22 FDEC  
                                 STR_23 FEBF                                   STR_31 FE4D  
                                 STR_15 FD5F                                   STR_40 FF83  
                                 STR_24 FEAC                                   STR_32 FE60  
                                 STR_16 FD1D                                   STR_41 FF83  
                                 STR_33 FE73                                   STR_25 FD9C  
                                 STR_17 FCBA                           __CFG_WDTE$OFF 000000  
                                 STR_42 FF61                                   STR_50 FFBD  
                                 STR_26 FE99                                   STR_34 FDB0  
                                 STR_18 FCD4                                   STR_51 FFBD  
                                 STR_43 FFFB                                   STR_19 FF83  
                                 STR_27 FE86                                   STR_35 FE00  
                                 STR_44 FFF8                                   STR_52 FF93  
                                 STR_28 FEF8                                   STR_36 FD88  
                       __end_of___awmod 97EC                                   STR_53 FF93  
                                 STR_29 FED2                                   STR_37 FD74  
                                 STR_54 FF93                                   STR_70 FFDA  
                                 STR_46 FFB1                                   STR_38 FDC4  
                                 STR_71 FFE2                                   STR_47 FFC7  
                                 STR_39 FDD8                                   STR_55 FCEE  
                                 STR_64 FCB9                                   STR_80 FFEF  
                                 STR_48 FE27                                   _ADRPT 003EEC  
                                 STR_49 FE27                                   STR_57 FE3A  
                                 STR_65 FC53                                   STR_90 FFF2  
                                 STR_74 FFE9                                   STR_66 FFD6  
                                 STR_58 FE14                                   STR_83 FFEC  
                                 STR_67 FFDE                                   STR_76 FFE9  
                                 STR_85 FFEC                                   STR_93 FFF5  
                                 STR_78 FFEF                                   STR_95 FFF5  
                                 STR_88 FFF2                         __end_of___flmul 3B68  
                                 STR_97 FFE6                                   STR_99 FFE6  
                       __end_of___flsub B33C                         __end_of___fltol 8CD4  
                                 u11000 0196                                   u11110 0562  
                                 u11030 02A6                                   u11040 02A8  
                                 u12000 2A0A                                   u11140 05C6  
                                 u12100 3002                                   u12030 2C82  
                                 u11080 050E                                   u12120 31B2  
                                 u12040 2C84                                   u10610 94BA  
                                 u11410 10B8                                   u11250 0A18  
                       __end_of___lodiv 8B62                                   u11180 0648  
                                 u12140 A616                                   u12220 A16E  
                                 u10630 9536                                   u11430 116E  
                                 u11350 0EE4                                   u11510 725E  
                                 u11440 1170                                   u11520 72A4  
                                 u12208 A10A                                   u11601 6780  
                                 u10810 5568                                   u11610 6796  
                                 _U1P1H 003DED                                   u11611 6794  
                                 u10900 5880                                   u11620 67AA  
                                 u11700 5EEA                                   _U1P2H 003DEF  
                                 u10830 557A                                   u11550 7380  
                                 u11630 67AE                                   u10750 6E02  
                                 u12238 A170                                   u12190 A108  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 u11527 7296                                   _T3CLK 003FA9  
                                 u10920 5896                                   u11800 6092  
                                 u11720 5F48                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   u10850 55CA  
                                 u10690 A0B4                                   u11570 64D2  
                                 u11730 5F4A                                   u11650 5DAC  
                                 _U1P3L 003DF0                                   u10860 5822  
                                 u10780 54F6                                   u10790 54F8  
                                 u11750 6014                                   u11910 268E  
                                 u12470 8112                                   u12550 1594  
                                 _U2P1L 003DD4                                   u10871 5852  
                                 u10880 5868                                   u10960 00DA  
                                 u11760 6034                                   u11680 5E94  
                                 u11920 2690                                   u12480 8114  
                                 _T3CON 003FA6                                   _U2P2L 003DD6  
                                 u10881 5866                                   u10697 A0A6  
                                 u10890 587C                                   u11690 5EE8  
                                 u11930 26B6                                   u12570 17EA  
                                 _U2P3L 003DD8                                   u11771 6064  
                                 u11755 5FF6                                   u11780 607A  
                                 u11860 250C                                   u11781 6078  
                                 u10990 0194                                   u11790 608E  
                                 u11870 250E                                   u12670 224A  
                                 _T5CLK 003F9D                                   u11880 2534  
                                 u12680 2262                         __end_of___lomod 9228  
                                 u12690 2274                                   u11980 2896  
                                 u12676 224C                                   _T2HLT 003FAD  
                                 u12686 2264                                   u12696 2276  
                                 _T5CON 003F9A                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 0099                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 0026                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR3H 003FA5  
                                 _TMR5H 003F99                                   _TMR3L 003FA4  
                                 _TMR5L 003F98               __end_of_update_adc_result B538  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR BE90                 __size_of_clear_adc_scan 0006  
     __size_of_TMR3_SetInterruptHandler 0028       __size_of_TMR6_SetInterruptHandler 0028  
                         __CFG_WRTB$OFF 000000                        __end_of_TMR3_ISR 8F9A  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR 9FF2                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR BCEE                            _DMA1CON1bits 003BFD  
                                 _fabsf A3DA                                   _flags 003E  
              __size_of_calc_model_data 044C                            _DMA2CON0bits 003BDC  
                          _DMA2CON1bits 003BDD            __end_of_get_ac_charger_relay BDF0  
                                 _fputc 9496              __size_of_send_lcd_cmd_long 0028  
                       __end_of_isalpha B380                                   _fputs A726  
                       __end_of_isdigit B73C                         __end_of_ivln2_h FC4B  
                    __CFG_MCLRE$EXTMCLR 000000                                   _srand B614  
                                 _width 003A                                   _putch BCB8  
          __end_of_set_ac_charger_relay BDC6                         __end_of_islower B6DC  
                       __end_of_isspace B060                _INT1_SetInterruptHandler B9D2  
                       __end_of_isupper B70C                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0001  
                                 ltemp1 0005                                   ltemp2 0009  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0001  
                                 ttemp1 0004                                   ttemp2 0007  
                                 ttemp3 000A                                   ttemp5 0002  
                                 ttemp6 0005                                   ttemp7 0009  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler B95A  
           _UART1_SetRxInterruptHandler B932                                   wtemp0 0001  
                                 wtemp1 0003                                   wtemp2 0005  
                                 wtemp3 0007                                   wtemp4 0009  
                                 wtemp5 000B                                   wtemp8 0002  
                       __end_of_sprintf 9C2E                         __end_of_tolower AA74  
                       __end_of_strncmp 7F18                         __end_of_toupper A9F0  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr BA9C  
              __size_of_SPI1_Initialize 0016                         _TMR5_Initialize B1DA  
                 __end_of_ringBufS_init B8BA                         __initialization 9C2E  
                     _UART2_rx_vect_isr BAC4                            __end_of_cp_h FC53  
                          __end_of_cp_l FC4F                            __end_of_atoi 788E  
                          __end_of_ctoa A96C                            __end_of_main 2392  
                          __end_of_dtoa 5946                            __end_of_nanf AEA8  
                          __end_of_spin FC3F                            __end_of_stoa 739A  
                          __end_of_utoa 67F8                            __end_of_xtoa 614C  
                        __CFG_SAFEN$OFF 000000                      ?_UART2_rx_vect_isr 0021  
               __end_of_TMR2_Initialize BD1E                __size_of_DMA2_Initialize 005A  
            __end_of_check_enter_button ABDC                _TMR5_SetInterruptHandler B982  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
                 _TMR3_InterruptHandler 0090                       _port_data_dma_ptr BE18  
                    esr_check@esr_state 0040                     ??_UART2_rx_vect_isr 0026  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize B7F0  
                       _PWM8_Initialize BD34                        _UART1_Initialize B192  
                     _UART2_tx_vect_isr BA9C                      _UART2_Transmit_ISR B7C4  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan AD80  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue B380  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0021                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                i1l1019 9FA2                                  _RB6PPS 003A0E  
                                i1l1207 8F02                    _start_switch_handler BBE4  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize B26A                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright BDD4  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u932_20 BDEC                                  u916_25 BDC0  
                                u916_26 BDC2                                  u962_24 9342  
                                u962_25 933E                                  u939_20 B578  
                                u939_26 B57A                                  u955_28 9242  
                  __size_of_hid_display 01DC                                  u958_20 9262  
                                u958_21 925C                                  u991_48 BB8C  
                                u983_48 BB68                                  u985_28 BAFC  
                                u994_28 BB20                        __end_of___xxtofl 832E  
 __end_of_ADCC_DischargeSampleCapacitor BE4E  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor BE46                __end_of_send_lcd_cmd_dma B00E  
                       _TMR3_WriteTimer B442                     ??_UART2_tx_vect_isr 0026  
             __end_of_UART2_rx_vect_isr BAEC              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize BE0E                        _UART2_Initialize AEA8  
                                _WaitMs B5A8                         _conv_raw_result 501A  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 8CD4                                  ___fleq A25E  
                     _ADCC_ThresholdISR ACB0                          __CFG_STVREN$ON 000000  
                        _ringBufS_flush A852                                  _efgtoa 0000  
                                _floorf 614C                      ?_ADCC_ThresholdISR 0021  
                                _memset 6B20                    __size_of_help_button 0038  
                                clear_0 9CC2                                  clear_1 9CD6  
                                clear_2 9CE8                                  clear_3 9CF4  
                                clear_4 9D00                                  clear_5 9D0C  
                                clear_6 9D18               __end_of_port_data_dma_ptr BE22  
                                _printf ADE4                      _eaDogM_WriteString A5DE  
                                _strcpy 9FF2                               ?_ADCC_ISR 0021  
                                _strlen A684                      __size_of_TimerDone 0028  
                          __pdataBIGRAM 04FF                         _ADCC_Initialize AC46  
                        _PMD_Initialize BD60              __size_of_update_adc_result 003A  
             __end_of_UART2_tx_vect_isr BAC4                                  lltemp0 0001  
                                lltemp1 0009                                  lltemp2 0011  
                                lltemp3 0019                     ??_ADCC_ThresholdISR 0021  
                __end_of_start_adc_scan ADE4                            __mediumconst FA66  
                                preinc2 003FDC                  __size_of_init_port_dma 0030  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay AF62  
                      __end_of_spinners 9E26                        __end_of_vfprintf A534  
                            _StartTimer B3C2                      __size_of___asfladd 0078  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize B222  
                     _SYSTEM_Initialize B100                              __accesstop 0060  
               __end_of__initialization 9D2A                               ?_INT0_ISR 0021  
                             ?_INT1_ISR 0021                    __end_of_display_help BE66  
                  __end_of_display_info BE5E               __end_of_CLKREF_Initialize BE18  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0028  
                       _TMR5_WriteTimer B402                   _set_temp_display_help BDA6  
                      _clear_hid_pflags B26A                   __end_of_TMR3_CallBack BB58  
             __end_of_ADCC_ThresholdISR AD1A                      __size_of_calc_bsoc 077C  
                __end_of_ringBufS_flush A8E4                          __pcstackCOMRAM 0021  
                            ___inthi_sp 115C                              ___intlo_sp 18AE  
                          __pidataBANK0 B81A                            __pidataBANK1 A198  
                          __pidataBANK2 BE6E             __size_of_send_port_data_dma 0052  
                         __end_of_fabsf A488                               ?_TMR3_ISR 0021  
                             ?_TMR5_ISR 0021                               ?_TMR6_ISR 0021  
                        ivt0x8_undefint 00AC                           __end_of_fputc 95BA  
                         __end_of_fputs A7BE                    _get_ac_charger_relay BDE2  
                         __end_of_srand B648                   __end_of_TMR5_CallBack BB34  
                         __end_of_putch BCD2                    _set_ac_charger_relay BDB6  
               __end_of_PWM8_Initialize BD4A                 __end_of_TMR6_Initialize B81A  
                     _adc_int_t_handler AA74                  __end_of_PMD_Initialize BD74  
                            __end_of_bp FC47                              ??_ADCC_ISR 0021  
                 __end_of_TMR6_CallBack BBA0             __size_of_EXT_INT_Initialize 0034  
              calc_bsoc@log_update_wait 0041                  __size_of_calc_ror_data 0186  
                         _DMA1_DMAA_ISR BE30                   TMR3_ISR@CountCallBack 00B0  
                        _clear_adc_scan BE76                      __size_of_hid_input 00D2  
                __size_of_mode_lamp_dim 0018                _UART2_RxInterruptHandler 00A5  
             __end_of_SYSTEM_Initialize B14A                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                 __end_of_TMR3_WriteTimer B482  
                            __pbssBANK0 0060                              __pbssBANK1 01C6  
                            __pbssBANK2 0200                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              _check_help 7F18  
               __end_of_conv_raw_result 54C6                      __size_of_esr_check 02D0  
                 _INT0_InterruptHandler 00AB                              ??_INT0_ISR 0021  
                            ??_INT1_ISR 0027                       __end_of_TimerDone B8E2  
                      _DMA1_DMADCNT_ISR BE24                      __size_of_init_bsoc 022A  
            __size_of_UART2_rx_vect_isr 0028                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01BC                           _init_port_dma B67C  
                 __end_of_wait_lcd_done BCB8        __end_of_TMR3_SetInterruptHandler B9D2  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler B982  
                            ??_TMR3_ISR 00E5                 __end_of_ADCC_Initialize ACB0  
                            ??_TMR5_ISR 002B               __end_of_adc_int_t_handler AAF2  
                            ??_TMR6_ISR 0026                       __end_of___asfladd AB6A  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
  __end_of_ADCC_SetADTIInterruptHandler BA4A   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler BA22                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7              __size_of_port_data_dma_ptr 000A  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR BBC2                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan BE7C  
                               u1023_44 AAD8                                 u1023_45 AAD2  
                               u1230_20 4800                          ?_DMA1_DMAA_ISR 0021  
                      _DMA1_DMASCNT_ISR BE00                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001E                                 _U1ERRIR 003DF9  
                               u1228_20 4736                                 u1236_28 BB44  
                               _U2ERRIE 003DE2                                 _U2ERRIR 003DE1  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0021  
            __size_of_UART2_tx_vect_isr 0028                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0FAC                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                       __end_of_calc_bsoc 4AA0  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch B76A  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer B442  
               __size_of_switch_handler 0140                      __size_of_stop_bsoc 0006  
            __end_of_set_load_relay_one BDA6              __end_of_set_load_relay_two BD96  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
                         _calc_ror_data 885C                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim BCEE                                 __Lparam 0000  
              __end_of_UART1_Initialize B1DA                       __end_of_hid_input A198  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 739A  
                               ___fladd 3B68                                 ___aomod 788E  
                               ___fldiv 4AA0                                 ___awdiv 8F9A  
                               ___flneg B14A                                 ___awmod 96D4  
                               ___flmul 333E                                 ___flsub B2F6  
                               ___fltol 8B62                                 ___lodiv 89E2  
                               ___lomod 90E8               __end_of_UART1_Receive_ISR BBE4  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display 9F10                                 __pcinit 9C2E  
              __end_of_mode_lamp_bright BDE2                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand BDC6  
                               __ramtop 2000                                 __ptext0 1244  
                               __ptext1 B482                                 __ptext2 BBE4  
                               __ptext3 B614                                 __ptext4 9D30  
                               __ptext5 B67C                                 __ptext6 9E26  
                               __ptext7 B842                                 __ptext8 B86A  
                               __ptext9 BC24                       __end_of_esr_check 70DC  
                     _UART2_Receive_ISR BC04                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize BD4A  
                          __size_of_abs 0046                                 us640999 7ABC  
                               us730999 9218                            __size_of_pad 0114  
                               us629999 7604                                 us725999 8B4C  
                     __end_of_init_bsoc 7CF8                                 _isalpha B33C  
                               _isdigit B70C                                 _ivln2_h FC47  
                             _T3CONbits 003FA6                                 _mode_sw 00B8  
                     __end_of_lp_filter 86C6                                 _islower B6AC  
                               _isspace B00E                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                __end_of_UART2_Initialize AF08  
                               _isupper B6DC              __size_of_SYSTEM_Initialize 004A  
                               _sprintf 9B24                                 _tolower A9F0  
                 __size_of_display_help 0008                                 _utctime 01F5  
                 __size_of_display_info 0008                                 _strncmp 7CF8  
                               _toupper A96C                    end_of_initialization 9D2A  
             __size_of_convert_adc_data 00B8                      _check_enter_button AB6A  
                             i1u1251_20 8EF8     __end_of_UART2_SetRxInterruptHandler B932  
           _UART2_SetRxInterruptHandler B90A                               i2u1032_48 BAB0  
                             i2u1034_48 BAD8                               i2u1026_48 B7B0  
                             i2u1028_48 ACE6                               i2u1028_49 ACFA  
                             i2u1250_48 BA88                 check_day_time@day_delay 0042  
                     __end_of_set_vterm BC60                       __end_of_vfpfcnvrt 333E  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 0040                       __end_of_start_lcd BE88  
             __end_of_UART2_Receive_ISR BC24                          wdtdelay@dcount 0088  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 0027  
                 _INT1_InterruptHandler 00A8                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc BE8E                _TMR3_SetInterruptHandler B9AA  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler B95A  
                          _display_help BE5E                   _TMR5_InterruptHandler 0093  
                          _display_info BE56    __size_of_UART2_SetTxInterruptHandler 0028  
              __end_of_clear_hid_pflags B2B0                       __size_of_ADCC_ISR 002C  
   __end_of_ADCC_SetADIInterruptHandler BA72             _ADCC_SetADIInterruptHandler BA4A  
                            _update_lcd 9A14                         _calc_model_data 5946  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                            _static_soc B482                         _DMA1_Initialize ABDC  
                            _start_bsoc BBA0                         _SPI1_Initialize BD1E  
                 __end_of_get_vterm_ptr B76A                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 003E                          __end_of_WaitMs B5DE  
          __end_of_INTERRUPT_Initialize AD80                              _vterm_dump 9368  
                        __end_of___flge 8E36                          __end_of___fleq A322  
  __end_of_INT0_DefaultInterruptHandler BE9C   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler BE9A              __size_of_UART1_Receive_ISR 0022  
                       _DMA2_Initialize AF62                           __pidataBIGRAM 67F8  
                        __end_of_efgtoa 1244                       __size_of_TMR3_ISR 0162  
                     __size_of_TMR5_ISR 00E2                       __size_of_TMR6_ISR 001A  
                   __size_of_check_help 0212                          __end_of_floorf 64B8  
           __size_of_UART2_Transmit_ISR 002C                              floorf@F524 006C  
                        __end_of_memset 6E0C                          __end_of_printf AE46  
              __end_of_DMA1_DMADCNT_ISR BE2E             __size_of_PWM8_LoadDutyValue 0042  
                 __end_of_INT0_CallBack BB7C                          __end_of_strcpy A0C6  
                        __end_of_strlen A726                     start_initialization 9C2E  
  __end_of_TMR5_DefaultInterruptHandler B5A8   __size_of_TMR5_DefaultInterruptHandler 0038  
          _TMR5_DefaultInterruptHandler B570         __size_of_PIN_MANAGER_Initialize 0094  
                           __end_of_abs B2F6                   __end_of_INT1_CallBack BB10  
             __size_of_set_display_info 001E                             __end_of_pad 9900  
                  __size_of_Default_ISR 0006                    __end_of_send_lcd_cmd B892  
                        _switch_handler 9228           __size_of_ADCC_StartConversion 0012  
                            ivt0x8_base 0008                           _uart1RxBuffer 026E  
                 __end_of___fpclassifyf 885C                           _uart2RxBuffer 0400  
              __end_of_DMA1_DMASCNT_ISR BE0E                           _uart2TxBuffer 0300  
                        _DMA1_DMAOR_ISR BE3C                     __end_of_hid_display 850A  
            __end_of_send_port_data_dma B0B2                        __CFG_LPBOREN$OFF 000000  
                 __size_of_init_display 00EA             __size_of_eaDogM_WriteString 00A6  
                             _TimerDone B8BA                           _ringBufS_init B892  
                           __pdataBANK0 00BD                             __pdataBANK1 0100  
                           __pdataBANK2 02CE              __size_of_UART2_Receive_ISR 0020  
                   __size_of_get_switch 002C              __end_of_EXT_INT_Initialize B67C  
               __end_of_calc_model_data 5D92                     __end_of_help_button B570  
       __end_of_eaDogM_WriteStringAtPos B614                     __end_of_BVSOC_TABLE FB37  
                             ___asfladd AAF2                    calc_model_data@bcror 0080  
                           __pbssBIGRAM 0826                 __end_of_DMA1_Initialize AC46  
                  calc_model_data@bvror 0084                             __pbssCOMRAM 003A  
      __end_of_INT0_SetInterruptHandler BA22                           __pcstackBANK0 00E5  
              __size_of_TMR2_Initialize 0018                  __size_of_TMR3_CallBack 0024  
                __end_of_switch_handler 9368                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize BD34                _UART1_RxInterruptHandler 009F  
              _UART2_TxInterruptHandler 00A2                               __end_of_T FBC7  
                      _convert_adc_data A322                               _calc_bsoc 4324  
             __size_of_ringBufS_put_dma 00AA                            _init_display 9E26  
                __end_of_DMA1_DMAOR_ISR BE46                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 0096                      calc_ror_data@bcror 0078  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize AFBC  
                    calc_ror_data@bvror 007C                  _PIN_MANAGER_Initialize A7BE  
              __size_of_TMR3_Initialize 0048                    __end_of_wait_lcd_set BE82  
                         __pmediumconst FA66                               __ptext100 5946  
                             __ptext101 BE88                               __ptext110 B90A  
                             __ptext102 BBA0                               __ptext111 B192  
                             __ptext103 850A                               __ptext120 BD1E  
                             __ptext112 B932                               __ptext104 B2F6  
                             __ptext121 BD34                               __ptext113 B7F0  
                             __ptext105 3B68                               __ptext130 AF62  
                             __ptext122 BD60                               __ptext114 B95A  
                             __ptext106 333E                               __ptext131 ABDC  
                             __ptext123 A7BE                               __ptext115 B1DA  
                             __ptext107 B100                               __ptext140 9F10  
                             __ptext132 BE0E                               __ptext124 BD4A  
                             __ptext116 B982                               __ptext108 AEA8  
                             __ptext141 B402                               __ptext133 AC46  
                             __ptext125 AD1A                               __ptext117 B222  
                             __ptext109 B8E2                               __ptext150 BE98  
                             __ptext142 BB10                               __ptext134 BA22  
                             __ptext126 BE66                               __ptext118 B9AA  
                             __ptext151 4324                               __ptext143 B570  
                             __ptext135 BA4A                               __ptext127 B648  
                             __ptext119 BD06                               __ptext160 AA74  
                             __ptext152 B060                               __ptext144 9900  
                             __ptext136 B4C0                               __ptext128 B9D2  
                             __ptext161 BE9C                               __ptext153 BE18  
                             __ptext145 BDB6                               __ptext137 BAEC  
                             __ptext129 B9FA                               __ptext170 BCD4  
                             __ptext162 BE9E                               __ptext154 AAF2  
                             __ptext146 BDE2                               __ptext138 BE96  
                             __ptext171 BB7C                               __ptext163 ACB0  
                             __ptext155 BDF0                               __ptext147 8E38  
                             __ptext139 9228                               __ptext172 B0B2  
                             __ptext164 BA74                               __ptext156 BB58  
                             __ptext148 B442                               __ptext173 BE00  
                             __ptext165 BBC2                               __ptext157 BE9A  
                             __ptext149 BB34                               __ptext174 BE24  
                             __ptext166 BA9C                               __ptext158 BE90  
                             __ptext175 BE30                               __ptext167 B7C4  
                             __ptext159 B798                               __ptext176 BE3C  
                             __ptext168 BAC4                               __ptext177 0000  
                             __ptext169 BC04                               _hid_input A0C6  
                    __end_of_StartTimer B402                      _set_load_relay_one BD96  
                    _set_load_relay_two BD86                       __size_of_wdtdelay 005A  
                     __size_of_spinners 00F6                       __size_of_vfprintf 00AC  
                              _ADCC_ISR B798                  __CFG_BBSIZE$BBSIZE_512 000000  
                             fabsf@F463 0070                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                               _esr_check 6E0C  
               __size_of_get_raw_result 001E                          __size_of_fabsf 00AE  
                             _init_bsoc 7ACE                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 850A  
                           _hid_display 832E                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize AD1A  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0021                                _INT0_ISR BDF0  
                              _INT1_ISR B4C0                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
                              _LATFbits 003FBF       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 0254  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                             _ring_buf1 0383                               _ring_buf2 0340  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack BB34  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
              __size_of_TMR5_Initialize 0048                               _set_vterm BC42  
                   __size_of_update_lcd 0110                             _help_button B538  
                              _TMR3_ISR 8E38                             _BVSOC_TABLE FA67  
                              _TMR5_ISR 9F10                                _TMR6_ISR BCD4  
                             _port_data 04FF                     __size_of_static_soc 003E  
                             _vfpfcnvrt 2392                            _SPI1INTFbits 003D1A  
                   __size_of_start_bsoc 0022                           _TMR5_CallBack BB10  
                            _ADCON0bits 003EF8                      __end_of_check_help 812A  
                             _start_lcd BE82                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 0052                           _TMR6_CallBack BB7C  
                 __size_of_send_lcd_cmd 0028       __size_of_TMR5_SetInterruptHandler 0028  
                             _stop_bsoc BE88                        _set_display_info BC60  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 9C42  
                             copy_data1 9C68                               copy_data2 9C8A  
                             copy_data3 9CAC                _INT0_SetInterruptHandler B9FA  
                   __size_of_vterm_dump 012E     __end_of_UART2_SetTxInterruptHandler B90A  
           _UART2_SetTxInterruptHandler B8E2                            _uart1RxCount 00BC  
                          _uart2RxCount 00B9                                __Hrparam 0000  
      __size_of_eaDogM_WriteStringAtPos 0036                 __CFG_RSTOSC$EXTOSC_4PLL 000000  
              __size_of_TMR3_WriteTimer 0040                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 04AC                           _wait_lcd_done BC9C  
                          _send_lcd_cmd B86A                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC           __size_of_get_ac_charger_relay 000E  
                      __size_of___aomod 0240                         _adc_int_handler BE9E  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                        __size_of___lodiv 0180  
                      __size_of___lomod 0140           __size_of_set_ac_charger_relay 0010  
                    __end_of_get_switch B796                 __size_of_check_day_time 0114  
                 __end_of_DMA1_DMAA_ISR BE3A                      ___fpclassifyf@F463 0074  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0200  
                              ___xxtofl 812A                       ?_DMA1_DMADCNT_ISR 0021  
           __size_of_check_enter_button 0072                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand BDD4                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 0027                                __ptext10 B892  
                              __ptext11 7ACE                                __ptext20 BE46  
                              __ptext12 95BA                                __ptext21 BE76  
                              __ptext13 832E                                __ptext30 9B24  
                              __ptext22 BE4E                                __ptext14 A0C6  
                              __ptext31 B73C                                __ptext23 BD86  
                              __ptext15 B76A                                __ptext40 BE82  
                              __ptext32 B5A8                                __ptext24 BD96  
                              __ptext16 6E0C                                __ptext41 A852  
                              __ptext33 9A14                                __ptext25 BDC6  
                              __ptext17 B4FE                                __ptext50 64B8  
                              __ptext42 6B20                                __ptext34 B5DE  
                              __ptext26 A322                                __ptext18 AD80  
                              __ptext51 90E8                                __ptext43 ADE4  
                              __ptext35 AFBC                                __ptext27 B26A  
                              __ptext19 BD74                                __ptext60 86C6  
                              __ptext52 89E2                                __ptext44 A488  
                              __ptext36 BC9C                                __ptext28 7F18  
                              __ptext61 8B62                                __ptext53 7CF8  
                              __ptext45 2392                                __ptext37 AF08  
                              __ptext29 9368                                __ptext70 A8E4  
                              __ptext62 B14A                                __ptext54 70DC  
                              __ptext46 5D92                                __ptext38 A5DE  
                              __ptext71 97EC                                __ptext63 A25E  
                              __ptext55 0000                                __ptext47 A96C  
                              __ptext39 BE7C                                __ptext80 BC42  
                              __ptext72 A684                                __ptext64 96D4  
                              __ptext56 A9F0                                __ptext48 B6AC  
                              __ptext81 BDA6                                __ptext73 A726  
                              __ptext65 8F9A                                __ptext57 B6DC  
                              __ptext49 B33C                                __ptext90 BE5E  
                              __ptext82 BC60                                __ptext74 9496  
                              __ptext66 54C6                                __ptext58 9FF2  
                              __ptext91 AB6A                                __ptext83 BCEE  
                              __ptext75 BCB8                                __ptext67 B2B0  
                              __ptext59 614C                                __ptext92 885C  
                              __ptext84 BDD4                                __ptext76 A534  
                              __ptext68 788E                                __ptext93 A3DA  
                              __ptext85 B380                                __ptext77 761A  
                              __ptext69 739A                                __ptext94 501A  
                              __ptext86 B538                                __ptext78 B00E  
                              __ptext95 AE46                                __ptext87 B8BA  
                              __ptext79 B70C                                __ptext96 BC7E  
                              __ptext88 B3C2                                __ptext97 812A  
                              __ptext89 BE56                                __ptext98 4AA0  
                              __ptext99 8CD4                        __size_of_isupper 0030  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                              us1146999 70EE                                us1077999 54E0  
                              us1158999 651E                                us1167999 5E12  
                      __size_of_strncmp 0220                        __size_of_toupper 0084  
                      _ringBufS_put_dma A534                    __end_of_Volts_to_SOC 96D4  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 114E                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_utoa 0340  
                         __size_of_xtoa 03BA                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0021                   __end_of_init_port_dma B6AC  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 009C                               stoa@F1166 02CE  
                    ??_DMA1_DMASCNT_ISR 0027            __end_of_ADCC_StartConversion BD86  
                              _spi_link 0060                                _wdtdelay AF08  
            __end_of_UART2_Transmit_ISR B7F0                                _spinners 9D30  
                              _vfprintf A488                __end_of_convert_adc_data A3DA  
            __end_of_PWM8_LoadDutyValue B3C2    __end_of_TMR3_DefaultInterruptHandler BE9A  
 __size_of_TMR3_DefaultInterruptHandler 0002            _TMR3_DefaultInterruptHandler BE98  
  __end_of_INT1_DefaultInterruptHandler BE98   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler BE96                      _send_port_data_dma B060  
                         ??_Default_ISR 0021                             _uart1RxHead 0047  
                __size_of_get_vterm_ptr 002E                             _uart2RxHead 0043  
                           _uart1RxTail 0046                          _get_raw_result BC7E  
                           _uart2TxHead 00BB                             _uart2RxTail 00BA  
                             spinners@s 01EF                             _uart2TxTail 0045  
                          _wait_lcd_set BE7C                      _EXT_INT_Initialize B648  
  __end_of_TMR6_DefaultInterruptHandler B100   __size_of_TMR6_DefaultInterruptHandler 004E  
          _TMR6_DefaultInterruptHandler B0B2    __end_of_ADCC_DefaultInterruptHandler BE9E  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler BE9C  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long B842          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help BDB6                   __end_of_calc_ror_data 89E2  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString A684  
                 __end_of_mode_lamp_dim BD06                 __end_of_adc_int_handler BEA0  
                __size_of_INT0_CallBack 0024                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0024  
                    __end_of_update_lcd 9B24                  _uart2TxBufferRemaining 0044  
                    __end_of_static_soc B4C0                      __end_of_start_bsoc BBC2  
                        _FVR_Initialize BE66                  __end_of_get_raw_result BC9C  
                      _send_lcd_cmd_dma AFBC                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 00B4        __end_of_INT1_SetInterruptHandler B9FA  
             __size_of_UART1_Initialize 0048                        ??_DMA1_DMAOR_ISR 0027  
             __end_of_send_lcd_cmd_long B86A                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR BE96          __end_of_PIN_MANAGER_Initialize A852  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 9496  
               _eaDogM_WriteStringAtPos B5DE                           _get_vterm_ptr B73C  
                        _check_adc_scan BE4E               __size_of_UART2_Initialize 0060  
