

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Nov  8 17:09:20 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1,inline
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1,inline
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1,inline
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1,inline
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=4,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=4,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=4,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=4,class=CODE,delta=1
   143                           	psect	text122,global,reloc=4,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	text125,global,reloc=2,class=CODE,delta=1
   147                           	psect	text126,global,reloc=4,class=CODE,delta=1
   148                           	psect	text127,global,reloc=4,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=4,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=4,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=4,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=4,class=CODE,delta=1
   157                           	psect	text136,global,reloc=2,class=CODE,delta=1
   158                           	psect	text137,global,reloc=2,class=CODE,delta=1
   159                           	psect	text138,global,reloc=4,class=CODE,delta=1
   160                           	psect	text139,global,reloc=4,class=CODE,delta=1
   161                           	psect	text140,global,reloc=4,class=CODE,delta=1
   162                           	psect	text141,global,reloc=4,class=CODE,delta=1
   163                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   164                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   165                           	psect	text142,global,reloc=4,class=CODE,delta=1
   166                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
   167                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   168  0000                     
   169                           ; Version 2.10
   170                           ; Generated 31/07/2019 GMT
   171                           ; 
   172                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   173                           ; All rights reserved.
   174                           ; 
   175                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   176                           ; 
   177                           ; Redistribution and use in source and binary forms, with or without modification, are
   178                           ; permitted provided that the following conditions are met:
   179                           ; 
   180                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   181                           ;        conditions and the following disclaimer.
   182                           ; 
   183                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   184                           ;        of conditions and the following disclaimer in the documentation and/or other
   185                           ;        materials provided with the distribution.
   186                           ; 
   187                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   188                           ;        software without specific prior written permission.
   189                           ; 
   190                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   191                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   192                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   193                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   194                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   195                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   196                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   197                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   198                           ; 
   199                           ; 
   200                           ; Code-generator required, PIC18F57K42 Definitions
   201                           ; 
   202                           ; SFR Addresses
   203  0000                     
   204 ;;_mode	offset	0
   205 ;;_channel	offset=-1 (param)
   206 ;;_s	offset=-2 (param)
   207 ;;_cmd	offset=-1 (param)
   208 ;;_cmd	offset=-1 (param)
   209 ;;_data	offset=-1 (param)
   210 ;;__this	offset=-2 (param)
   211 ;;_cmd	offset=-1 (param)
   212 ;;_i	offset	0
   213 ;;_lp_speed	offset	0
   214 ;;_new	offset=-4 (param)
   215 ;;_bn	offset=-5 (param)
   216 ;;_slow	offset=-6 (param)
   217 ;;_chan	offset=-1 (param)
   218 ;;_to_what	offset=-2 (param)
   219 ;;_u	offset	0
   220 ;;_s	offset=-2 (param)
   221 ;;_index	offset=-1 (param)
   222 ;;_arg	offset	0
   223 ;;_exp	offset	4
   224 ;;_sign	offset=-1 (param)
   225 ;;_val	offset=-5 (param)
   226 ;;_flipper	offset=-1 (param)
   227 ;;_f	offset	0
   228 ;;_ap	offset	6
   229 ;;_s	offset=-3 (param)
   230 ;;_fmt	offset=-5 (param)
   231 ;;_line	offset=-1 (param)
   232 ;;_vterm	offset=-2 (param)
   233 ;;_numMilliseconds	offset=-2 (param)
   234 ;;_vterm	offset=-1 (param)
   235 ;;_r	offset=-1 (param)
   236 ;;_c	offset=-2 (param)
   237 ;;_strPtr	offset=-4 (param)
   238 ;;_strPtr	offset=-1 (param)
   239 ;;_delay	offset=-4 (param)
   240 ;;_strPtr	offset=-2 (param)
   241 ;;__this	offset=-2 (param)
   242 ;;_clearBuffer	offset=-3 (param)
   243 ;;_s	offset	0
   244 ;;_k	offset	2
   245 ;;_dest	offset=-2 (param)
   246 ;;_c	offset=-4 (param)
   247 ;;_n	offset=-6 (param)
   248 ;;_ap	offset	0
   249 ;;_fmt	offset=-3 (param)
   250 ;;_cfmt	offset	0
   251 ;;_fp	offset=-2 (param)
   252 ;;_fmt	offset=-4 (param)
   253 ;;_ap	offset=-6 (param)
   254 ;;_vfpfcnvrt$4117	offset	0
   255 ;;_vfpfcnvrt$4123	offset	2
   256 ;;_vfpfcnvrt$4116	offset	4
   257 ;;_llu	offset	6
   258 ;;_ll	offset	14
   259 ;;_f	offset	22
   260 ;;_ct	offset	26
   261 ;;_cp	offset	29
   262 ;;_c	offset	31
   263 ;;_fp	offset=-2 (param)
   264 ;;_fmt	offset=-4 (param)
   265 ;;_ap	offset=-6 (param)
   266 ;;_xtoa$4102	offset	0
   267 ;;_xtoa$4101	offset	2
   268 ;;_n	offset	4
   269 ;;_c	offset	12
   270 ;;_i	offset	14
   271 ;;_w	offset	16
   272 ;;_p	offset	18
   273 ;;_fp	offset=-2 (param)
   274 ;;_d	offset=-10 (param)
   275 ;;_x	offset=-11 (param)
   276 ;;_toupper$4762	offset	0
   277 ;;_c	offset=-2 (param)
   278 ;;_c	offset=-2 (param)
   279 ;;_c	offset=-2 (param)
   280 ;;_r	offset	0
   281 ;;_l	offset	2
   282 ;;__l	offset=-2 (param)
   283 ;;__r	offset=-4 (param)
   284 ;;_n	offset=-6 (param)
   285 ;;_nuls	offset	0
   286 ;;_l	offset	7
   287 ;;_p	offset	9
   288 ;;_cp	offset	11
   289 ;;_w	offset	13
   290 ;;_i	offset	15
   291 ;;_fp	offset=-2 (param)
   292 ;;_s	offset=-4 (param)
   293 ;;_efgtoa$4081	offset	0
   294 ;;_efgtoa$4080	offset	2
   295 ;;_efgtoa$4079	offset	4
   296 ;;_efgtoa$4075	offset	6
   297 ;;_efgtoa$4071	offset	8
   298 ;;_efgtoa$4070	offset	10
   299 ;;_u	offset	12
   300 ;;_g	offset	16
   301 ;;_l	offset	20
   302 ;;_h	offset	24
   303 ;;_ou	offset	28
   304 ;;_n	offset	32
   305 ;;_e	offset	34
   306 ;;_i	offset	36
   307 ;;_w	offset	38
   308 ;;_p	offset	40
   309 ;;_sign	offset	42
   310 ;;_d	offset	44
   311 ;;_ne	offset	46
   312 ;;_m	offset	48
   313 ;;_pp	offset	50
   314 ;;_t	offset	52
   315 ;;_mode	offset	54
   316 ;;_nmode	offset	55
   317 ;;_fp	offset=-2 (param)
   318 ;;_f	offset=-6 (param)
   319 ;;_c	offset=-7 (param)
   320 ;;_tolower$4747	offset	0
   321 ;;_c	offset=-2 (param)
   322 ;;_c	offset=-2 (param)
   323 ;;_d	offset	0
   324 ;;_s	offset	2
   325 ;;_dest	offset=-2 (param)
   326 ;;_src	offset=-4 (param)
   327 ;;_u	offset	0
   328 ;;_m	offset	4
   329 ;;_e	offset	8
   330 ;;_x	offset=-4 (param)
   331 ;;_u	offset	0
   332 ;;_e	offset	4
   333 ;;_x	offset=-4 (param)
   334 ;;_exp1	offset	0
   335 ;;_sign1	offset	1
   336 ;;_f1	offset=-4 (param)
   337 ;;_b	offset=-4 (param)
   338 ;;_a	offset=-8 (param)
   339 ;;_grs	offset	0
   340 ;;_bexp	offset	1
   341 ;;_aexp	offset	2
   342 ;;_signs	offset	3
   343 ;;_b	offset=-4 (param)
   344 ;;_a	offset=-8 (param)
   345 ;;_f1	offset=-4 (param)
   346 ;;_prod	offset	0
   347 ;;_grs	offset	4
   348 ;;_temp	offset	8
   349 ;;_bexp	offset	10
   350 ;;_aexp	offset	11
   351 ;;_sign	offset	12
   352 ;;_b	offset=-4 (param)
   353 ;;_a	offset=-8 (param)
   354 ;;_ff1	offset=-4 (param)
   355 ;;_ff2	offset=-8 (param)
   356 ;;_ff1	offset=-4 (param)
   357 ;;_ff2	offset=-8 (param)
   358 ;;_grs	offset	0
   359 ;;_rem	offset	4
   360 ;;_new_exp	offset	8
   361 ;;_aexp	offset	10
   362 ;;_bexp	offset	11
   363 ;;_sign	offset	12
   364 ;;_b	offset=-4 (param)
   365 ;;_a	offset=-8 (param)
   366 ;;_sign	offset	0
   367 ;;_counter	offset	1
   368 ;;_dividend	offset=-2 (param)
   369 ;;_divisor	offset=-4 (param)
   370 ;;_quotient	offset	0
   371 ;;_sign	offset	2
   372 ;;_counter	offset	3
   373 ;;_dividend	offset=-2 (param)
   374 ;;_divisor	offset=-4 (param)
   375 ;;_dtoa$4047	offset	0
   376 ;;_n	offset	2
   377 ;;_i	offset	10
   378 ;;_s	offset	12
   379 ;;_w	offset	14
   380 ;;_p	offset	16
   381 ;;_fp	offset=-2 (param)
   382 ;;_d	offset=-10 (param)
   383 ;;_a	offset=-2 (param)
   384 ;;_sign	offset	0
   385 ;;_counter	offset	1
   386 ;;_dividend	offset=-8 (param)
   387 ;;_divisor	offset=-16 (param)
   388 ;;_quotient	offset	0
   389 ;;_sign	offset	8
   390 ;;_counter	offset	9
   391 ;;_dividend	offset=-8 (param)
   392 ;;_divisor	offset=-16 (param)
   393 ;;_w	offset	0
   394 ;;_fp	offset=-2 (param)
   395 ;;_c	offset=-3 (param)
   396 ;;_w	offset	0
   397 ;;_i	offset	2
   398 ;;_fp	offset=-2 (param)
   399 ;;_buf	offset=-4 (param)
   400 ;;_p	offset=-6 (param)
   401 ;;_a	offset	0
   402 ;;_s	offset=-2 (param)
   403 ;;_i	offset	0
   404 ;;_c	offset	2
   405 ;;_s	offset=-2 (param)
   406 ;;_fp	offset=-4 (param)
   407 ;;_c	offset=-2 (param)
   408 ;;_fp	offset=-4 (param)
   409 ;;_c	offset=-1 (param)
   410 ;;__this	offset=-2 (param)
   411 ;;_c	offset=-3 (param)
   412 ;;_atoi$4600	offset	0
   413 ;;_atoi$4598	offset	2
   414 ;;_atoi$4599	offset	4
   415 ;;_n	offset	5
   416 ;;_neg	offset	7
   417 ;;_s	offset=-2 (param)
   418 ;;_isspace$4638	offset	0
   419 ;;_c	offset=-2 (param)
   420 ;;_c	offset=-2 (param)
   421 ;;_vterm	offset=-1 (param)
   422 ;;_new_response_info	offset=-1 (param)
   423 ;;_new_response_info	offset=-1 (param)
   424 ;;_level	offset=-2 (param)
   425 ;;_dutyValue	offset=-2 (param)
   426 ;;_timer	offset=-1 (param)
   427 ;;_timer	offset=-1 (param)
   428 ;;_count	offset=-3 (param)
   429 ;;_InterruptHandler	offset=-3 (param)
   430 ;;_InterruptHandler	offset=-3 (param)
   431 ;;_InterruptHandler	offset=-3 (param)
   432 ;;_InterruptHandler	offset=-3 (param)
   433 ;;_InterruptHandler	offset=-3 (param)
   434 ;;_InterruptHandler	offset=-3 (param)
   435 ;;_state	offset	0
   436 ;;_InterruptHandler	offset=-3 (param)
   437 ;;_InterruptHandler	offset=-3 (param)
   438 ;;_InterruptHandler	offset=-3 (param)
   439 ;;_InterruptHandler	offset=-3 (param)
   440 ;;_timerVal	offset=-2 (param)
   441 ;;_channel	offset=-1 (param)
   442 ;;_i	offset	0
   443                           
   444                           	psect	idataBANK0
   445  0178EA                     __pidataBANK0:
   446                           	opt callstack 0
   447                           
   448                           ;initializer for _R
   449  0178EA  0000               	dw	0
   450  0178EC  0000               	dw	0
   451  0178EE  0000               	dw	0
   452  0178F0  0000               	dw	0
   453  0178F2  0000               	dw	0
   454  0178F4  0000               	dw	0
   455  0178F6  0000               	dw	0
   456  0178F8  0000               	dw	0
   457  0178FA  0000               	dw	0
   458  0178FC  0000               	dw	0
   459  0178FE  0000               	dw	0
   460  017900  0000               	dw	0
   461  017902  0000               	dw	0
   462  017904  0000               	dw	0
   463  017906  0000               	dw	0
   464  017908  0000               	dw	0
   465  01790A  D000               	dw	53248
   466  01790C  451B               	dw	17691
   467  01790E  8000               	dw	32768
   468  017910  451A               	dw	17690
   469  017912  00                 	db	0
   470  017913  0000               	dw	0
   471  017915  00                 	db	0
   472                           
   473                           ;initializer for stoa@F1166
   474  017916  28                 	db	40
   475  017917  6E                 	db	110
   476  017918  75                 	db	117
   477  017919  6C                 	db	108
   478  01791A  6C                 	db	108
   479  01791B  29                 	db	41
   480  01791C  00                 	db	0
   481                           
   482                           ;initializer for _port_data
   483  01791D  FF                 	db	255
   484  01791E  00                 	db	0
   485  01791F  FF                 	db	255
   486  017920  00                 	db	0
   487  017921  FF                 	db	255
   488  017922  00                 	db	0
   489  017923  FF                 	db	255
   490  017924  00                 	db	0
   491  017925  FF                 	db	255
   492  017926  00                 	db	0
   493  017927  FF                 	db	255
   494  017928  00                 	db	0
   495  017929  FF                 	db	255
   496  01792A  00                 	db	0
   497  01792B  FF                 	db	255
   498  01792C  00                 	db	0
   499                           
   500                           	psect	idataBANK1
   501  016A22                     __pidataBANK1:
   502                           	opt callstack 0
   503                           
   504                           ;initializer for _V
   505  016A22  00                 	db	0
   506  016A23  00                 	db	0
   507  016A24  00                 	db	0
   508  016A25  00                 	db	0
   509  016A26  00                 	db	0
   510  016A27  00                 	db	0
   511  016A28  00                 	db	0
   512  016A29  00                 	db	0
   513  016A2A  00                 	db	0
   514  016A2B  00                 	db	0
   515  016A2C  00                 	db	0
   516  016A2D  00                 	db	0
   517  016A2E  00                 	db	0
   518  016A2F  00                 	db	0
   519  016A30  00                 	db	0
   520  016A31  00                 	db	0
   521  016A32  00                 	db	0
   522  016A33  00                 	db	0
   523  016A34  00                 	db	0
   524  016A35  00                 	db	0
   525  016A36  00                 	db	0
   526  016A37  00                 	db	0
   527  016A38  00                 	db	0
   528  016A39  00                 	db	0
   529  016A3A  00                 	db	0
   530  016A3B  00                 	db	0
   531  016A3C  00                 	db	0
   532  016A3D  00                 	db	0
   533  016A3E  00                 	db	0
   534  016A3F  00                 	db	0
   535  016A40  00                 	db	0
   536  016A41  00                 	db	0
   537  016A42  00                 	db	0
   538  016A43  00                 	db	0
   539  016A44  00                 	db	0
   540  016A45  00                 	db	0
   541  016A46  00                 	db	0
   542  016A47  00                 	db	0
   543  016A48  00                 	db	0
   544  016A49  00                 	db	0
   545  016A4A  00                 	db	0
   546  016A4B  00                 	db	0
   547  016A4C  00                 	db	0
   548  016A4D  00                 	db	0
   549  016A4E  00                 	db	0
   550  016A4F  00                 	db	0
   551  016A50  00                 	db	0
   552  016A51  00                 	db	0
   553  016A52  00                 	db	0
   554  016A53  00                 	db	0
   555  016A54  00                 	db	0
   556  016A55  00                 	db	0
   557  016A56  00                 	db	0
   558  016A57  00                 	db	0
   559  016A58  00                 	db	0
   560  016A59  00                 	db	0
   561  016A5A  00                 	db	0
   562  016A5B  00                 	db	0
   563  016A5C  00                 	db	0
   564  016A5D  00                 	db	0
   565  016A5E  00                 	db	0
   566  016A5F  00                 	db	0
   567  016A60  00                 	db	0
   568  016A61  00                 	db	0
   569  016A62  00                 	db	0
   570  016A63  00                 	db	0
   571  016A64  00                 	db	0
   572  016A65  00                 	db	0
   573  016A66  00                 	db	0
   574  016A67  00                 	db	0
   575  016A68  00                 	db	0
   576  016A69  00                 	db	0
   577  016A6A  00                 	db	0
   578  016A6B  00                 	db	0
   579  016A6C  00                 	db	0
   580  016A6D  00                 	db	0
   581  016A6E  00                 	db	0
   582  016A6F  00                 	db	0
   583  016A70  00                 	db	0
   584  016A71  00                 	db	0
   585  016A72  00                 	db	0
   586  016A73  00                 	db	0
   587  016A74  00                 	db	0
   588  016A75  00                 	db	0
   589  016A76  00                 	db	0
   590  016A77  00                 	db	0
   591  016A78  00                 	db	0
   592  016A79  00                 	db	0
   593  016A7A  00                 	db	0
   594  016A7B  00                 	db	0
   595  016A7C  00                 	db	0
   596  016A7D  00                 	db	0
   597  016A7E  00                 	db	0
   598  016A7F  00                 	db	0
   599  016A80  00                 	db	0
   600  016A81  00                 	db	0
   601  016A82  00                 	db	0
   602  016A83  00                 	db	0
   603  016A84  00                 	db	0
   604  016A85  00                 	db	0
   605  016A86  00                 	db	0
   606  016A87  00                 	db	0
   607  016A88  00                 	db	0
   608  016A89  00                 	db	0
   609  016A8A  00                 	db	0
   610  016A8B  00                 	db	0
   611  016A8C  00                 	db	0
   612  016A8D  00                 	db	0
   613  016A8E  00                 	db	0
   614  016A8F  00                 	db	0
   615  016A90  00                 	db	0
   616  016A91  00                 	db	0
   617  016A92  00                 	db	0
   618  016A93  00                 	db	0
   619  016A94  00                 	db	0
   620  016A95  00                 	db	0
   621  016A96  00                 	db	0
   622  016A97  00                 	db	0
   623  016A98  00                 	db	0
   624  016A99  00                 	db	0
   625  016A9A  00                 	db	0
   626  016A9B  00                 	db	0
   627  016A9C  00                 	db	0
   628  016A9D  00                 	db	0
   629  016A9E  00                 	db	0
   630  016A9F  00                 	db	0
   631  016AA0  00                 	db	0
   632  016AA1  00                 	db	0
   633  016AA2  00                 	db	0
   634  016AA3  0000               	dw	0
   635  016AA5  0000               	dw	0
   636  016AA7  0000               	dw	0
   637  016AA9  0000               	dw	0
   638  016AAB  00                 	db	0
   639  016AAC  00                 	db	0
   640  016AAD  00                 	db	0
   641  016AAE  00                 	db	0
   642  016AAF  00                 	db	0
   643  016AB0  00                 	db	0
   644  016AB1  0000               	dw	0
   645  016AB3  0000               	dw	0
   646  016AB5  0000               	dw	0
   647  016AB7  0000               	dw	0
   648  016AB9  0000               	dw	0
   649  016ABB  0000               	dw	0
   650  016ABD  00                 	db	0
   651  016ABE  00                 	db	0
   652  016ABF  00                 	db	0
   653  016AC0  00                 	db	0
   654  016AC1  00                 	db	0
   655  016AC2  00                 	db	0
   656  016AC3  00                 	db	0
   657  016AC4  00                 	db	0
   658  016AC5  00                 	db	0
   659  016AC6  00                 	db	0
   660  016AC7  0000               	dw	0
   661  016AC9  0000               	dw	0
   662  016ACB  2D                 	db	45
   663  016ACC  00                 	db	0
   664                           
   665                           	psect	mediumconst
   666  00FE72                     __pmediumconst:
   667                           	opt callstack 0
   668  00FE72  00                 	db	0
   669  00FE73                     _T:
   670                           	opt callstack 0
   671  00FE73  63                 	db	99
   672  00FE74  6F                 	db	111
   673  00FE75  6D                 	db	109
   674  00FE76  6D                 	db	109
   675  00FE77  61                 	db	97
   676  00FE78  6E                 	db	110
   677  00FE79  64                 	db	100
   678  00FE7A  73                 	db	115
   679  00FE7B  20                 	db	32
   680  00FE7C  31                 	db	49
   681  00FE7D  00                 	db	0
   682  00FE7E  00                 	db	0
   683  00FE7F  00                 	db	0
   684  00FE80  00                 	db	0
   685  00FE81  00                 	db	0
   686  00FE82  00                 	db	0
   687  00FE83  00                 	db	0
   688  00FE84  00                 	db	0
   689  00FE85  64                 	db	100
   690  00FE86  69                 	db	105
   691  00FE87  73                 	db	115
   692  00FE88  70                 	db	112
   693  00FE89  6C                 	db	108
   694  00FE8A  61                 	db	97
   695  00FE8B  79                 	db	121
   696  00FE8C  73                 	db	115
   697  00FE8D  20                 	db	32
   698  00FE8E  31                 	db	49
   699  00FE8F  00                 	db	0
   700  00FE90  00                 	db	0
   701  00FE91  00                 	db	0
   702  00FE92  00                 	db	0
   703  00FE93  00                 	db	0
   704  00FE94  00                 	db	0
   705  00FE95  00                 	db	0
   706  00FE96  00                 	db	0
   707  00FE97  63                 	db	99
   708  00FE98  6F                 	db	111
   709  00FE99  6D                 	db	109
   710  00FE9A  6D                 	db	109
   711  00FE9B  61                 	db	97
   712  00FE9C  6E                 	db	110
   713  00FE9D  64                 	db	100
   714  00FE9E  73                 	db	115
   715  00FE9F  20                 	db	32
   716  00FEA0  32                 	db	50
   717  00FEA1  00                 	db	0
   718  00FEA2  00                 	db	0
   719  00FEA3  00                 	db	0
   720  00FEA4  00                 	db	0
   721  00FEA5  00                 	db	0
   722  00FEA6  00                 	db	0
   723  00FEA7  00                 	db	0
   724  00FEA8  00                 	db	0
   725  00FEA9  64                 	db	100
   726  00FEAA  69                 	db	105
   727  00FEAB  73                 	db	115
   728  00FEAC  70                 	db	112
   729  00FEAD  6C                 	db	108
   730  00FEAE  61                 	db	97
   731  00FEAF  79                 	db	121
   732  00FEB0  73                 	db	115
   733  00FEB1  20                 	db	32
   734  00FEB2  32                 	db	50
   735  00FEB3  00                 	db	0
   736  00FEB4  00                 	db	0
   737  00FEB5  00                 	db	0
   738  00FEB6  00                 	db	0
   739  00FEB7  00                 	db	0
   740  00FEB8  00                 	db	0
   741  00FEB9  00                 	db	0
   742  00FEBA  00                 	db	0
   743  00FEBB  63                 	db	99
   744  00FEBC  6F                 	db	111
   745  00FEBD  6D                 	db	109
   746  00FEBE  6D                 	db	109
   747  00FEBF  61                 	db	97
   748  00FEC0  6E                 	db	110
   749  00FEC1  64                 	db	100
   750  00FEC2  73                 	db	115
   751  00FEC3  20                 	db	32
   752  00FEC4  33                 	db	51
   753  00FEC5  00                 	db	0
   754  00FEC6  00                 	db	0
   755  00FEC7  00                 	db	0
   756  00FEC8  00                 	db	0
   757  00FEC9  00                 	db	0
   758  00FECA  00                 	db	0
   759  00FECB  00                 	db	0
   760  00FECC  00                 	db	0
   761  00FECD  64                 	db	100
   762  00FECE  69                 	db	105
   763  00FECF  73                 	db	115
   764  00FED0  70                 	db	112
   765  00FED1  6C                 	db	108
   766  00FED2  61                 	db	97
   767  00FED3  79                 	db	121
   768  00FED4  73                 	db	115
   769  00FED5  20                 	db	32
   770  00FED6  33                 	db	51
   771  00FED7  00                 	db	0
   772  00FED8  00                 	db	0
   773  00FED9  00                 	db	0
   774  00FEDA  00                 	db	0
   775  00FEDB  00                 	db	0
   776  00FEDC  00                 	db	0
   777  00FEDD  00                 	db	0
   778  00FEDE  00                 	db	0
   779  00FEDF  63                 	db	99
   780  00FEE0  6F                 	db	111
   781  00FEE1  6D                 	db	109
   782  00FEE2  6D                 	db	109
   783  00FEE3  61                 	db	97
   784  00FEE4  6E                 	db	110
   785  00FEE5  64                 	db	100
   786  00FEE6  73                 	db	115
   787  00FEE7  20                 	db	32
   788  00FEE8  34                 	db	52
   789  00FEE9  00                 	db	0
   790  00FEEA  00                 	db	0
   791  00FEEB  00                 	db	0
   792  00FEEC  00                 	db	0
   793  00FEED  00                 	db	0
   794  00FEEE  00                 	db	0
   795  00FEEF  00                 	db	0
   796  00FEF0  00                 	db	0
   797  00FEF1  64                 	db	100
   798  00FEF2  69                 	db	105
   799  00FEF3  73                 	db	115
   800  00FEF4  70                 	db	112
   801  00FEF5  6C                 	db	108
   802  00FEF6  61                 	db	97
   803  00FEF7  79                 	db	121
   804  00FEF8  73                 	db	115
   805  00FEF9  20                 	db	32
   806  00FEFA  34                 	db	52
   807  00FEFB  00                 	db	0
   808  00FEFC  00                 	db	0
   809  00FEFD  00                 	db	0
   810  00FEFE  00                 	db	0
   811  00FEFF  00                 	db	0
   812  00FF00  00                 	db	0
   813  00FF01  00                 	db	0
   814  00FF02  00                 	db	0
   815  00FF03                     __end_of_T:
   816                           	opt callstack 0
   817  0000                     _IVTADL	set	14493
   818  0000                     _IVTADH	set	14494
   819  0000                     _IVTADU	set	14495
   820  0000                     _PIR4bits	set	14756
   821  0000                     _PIE8bits	set	14744
   822  0000                     _PIR8bits	set	14760
   823  0000                     _SCANPR	set	14839
   824  0000                     _DMA2PR	set	14836
   825  0000                     _DMA1PR	set	14835
   826  0000                     _MAINPR	set	14834
   827  0000                     _ISRPR	set	14833
   828  0000                     _PIE2bits	set	14738
   829  0000                     _PIR2bits	set	14754
   830  0000                     _PIE9bits	set	14745
   831  0000                     _PIR9bits	set	14761
   832  0000                     _PIE6bits	set	14742
   833  0000                     _PIE3bits	set	14739
   834  0000                     _PMD7	set	14791
   835  0000                     _PMD6	set	14790
   836  0000                     _PMD5	set	14789
   837  0000                     _PMD4	set	14788
   838  0000                     _PMD3	set	14787
   839  0000                     _PMD2	set	14786
   840  0000                     _PMD1	set	14785
   841  0000                     _PMD0	set	14784
   842  0000                     _OSCTUNE	set	14814
   843  0000                     _OSCFRQ	set	14815
   844  0000                     _OSCEN	set	14813
   845  0000                     _OSCCON3	set	14811
   846  0000                     _OSCCON1	set	14809
   847  0000                     _IPR8bits	set	14728
   848  0000                     _IPR9bits	set	14729
   849  0000                     _IPR5bits	set	14725
   850  0000                     _IPR1bits	set	14721
   851  0000                     _IPR3bits	set	14723
   852  0000                     _IPR6bits	set	14726
   853  0000                     _IPR2bits	set	14722
   854  0000                     _PIE5bits	set	14741
   855  0000                     _PIE1bits	set	14737
   856  0000                     _PIR5bits	set	14757
   857  0000                     _PIR1bits	set	14753
   858  0000                     _PLLR	set	118496
   859  0000                     _SPI1SDIPPS	set	15071
   860  0000                     _U1RXPPS	set	15077
   861  0000                     _RC6PPS	set	14870
   862  0000                     _RC5PPS	set	14869
   863  0000                     _INT1PPS	set	15041
   864  0000                     _RD1PPS	set	14873
   865  0000                     _INT0PPS	set	15040
   866  0000                     _RC3PPS	set	14867
   867  0000                     _RB6PPS	set	14862
   868  0000                     _SPI1SCKPPS	set	15070
   869  0000                     _U2RXPPS	set	15080
   870  0000                     _SLRCONF	set	14995
   871  0000                     _SLRCONE	set	14979
   872  0000                     _SLRCOND	set	14963
   873  0000                     _SLRCONC	set	14947
   874  0000                     _SLRCONB	set	14931
   875  0000                     _SLRCONA	set	14915
   876  0000                     _ODCOND	set	14962
   877  0000                     _ODCONC	set	14946
   878  0000                     _ODCONB	set	14930
   879  0000                     _ODCONA	set	14914
   880  0000                     _ODCONF	set	14994
   881  0000                     _ODCONE	set	14978
   882  0000                     _WPUC	set	14945
   883  0000                     _WPUA	set	14913
   884  0000                     _WPUB	set	14929
   885  0000                     _WPUE	set	14977
   886  0000                     _WPUF	set	14993
   887  0000                     _WPUD	set	14961
   888  0000                     _ANSELA	set	14912
   889  0000                     _ANSELF	set	14992
   890  0000                     _ANSELE	set	14976
   891  0000                     _ANSELB	set	14928
   892  0000                     _ANSELC	set	14944
   893  0000                     _ANSELD	set	14960
   894  0000                     _DMA2SSA	set	15321
   895  0000                     _DMA1SSA	set	15353
   896  0000                     _DMA2DSZ	set	15310
   897  0000                     _DMA2SSZ	set	15319
   898  0000                     _DMA2DSA	set	15312
   899  0000                     _DMA1DSZ	set	15342
   900  0000                     _DMA1SSZ	set	15351
   901  0000                     _DMA1DSA	set	15344
   902  0000                     _DMA1CON0bits	set	15356
   903  0000                     _DMA1CON1bits	set	15357
   904  0000                     _DMA2CON0	set	15324
   905  0000                     _DMA2AIRQ	set	15326
   906  0000                     _DMA2SIRQ	set	15327
   907  0000                     _DMA2CON1	set	15325
   908  0000                     _DMA1CON0	set	15356
   909  0000                     _DMA1AIRQ	set	15358
   910  0000                     _DMA1SIRQ	set	15359
   911  0000                     _DMA1CON1	set	15357
   912  0000                     _CLKRCON	set	15589
   913  0000                     _CLKRCLK	set	15590
   914  0000                     _SPI1INTFbits	set	15642
   915  0000                     _SPI1RXB	set	15632
   916  0000                     _SPI1TXB	set	15633
   917  0000                     _SPI1TCNTL	set	15634
   918  0000                     _SPI1CON0	set	15636
   919  0000                     _SPI1CLK	set	15644
   920  0000                     _SPI1BAUD	set	15641
   921  0000                     _SPI1CON2	set	15638
   922  0000                     _SPI1CON1	set	15637
   923  0000                     _U2RXB	set	15824
   924  0000                     _U2TXB	set	15826
   925  0000                     _U2ERRIE	set	15842
   926  0000                     _U2ERRIR	set	15841
   927  0000                     _U2UIR	set	15840
   928  0000                     _U2FIFO	set	15839
   929  0000                     _U2BRGH	set	15838
   930  0000                     _U2BRGL	set	15837
   931  0000                     _U2CON2	set	15836
   932  0000                     _U2CON1	set	15835
   933  0000                     _U2CON0	set	15834
   934  0000                     _U2P3L	set	15832
   935  0000                     _U2P2L	set	15830
   936  0000                     _U2P1L	set	15828
   937  0000                     _U1RXB	set	15848
   938  0000                     _U1TXB	set	15850
   939  0000                     _U1ERRIE	set	15866
   940  0000                     _U1ERRIR	set	15865
   941  0000                     _U1UIR	set	15864
   942  0000                     _U1FIFO	set	15863
   943  0000                     _U1BRGH	set	15862
   944  0000                     _U1BRGL	set	15861
   945  0000                     _U1CON2	set	15860
   946  0000                     _U1CON1	set	15859
   947  0000                     _U1CON0	set	15858
   948  0000                     _U1P3H	set	15857
   949  0000                     _U1P3L	set	15856
   950  0000                     _U1P2H	set	15855
   951  0000                     _U1P2L	set	15854
   952  0000                     _U1P1H	set	15853
   953  0000                     _U1P1L	set	15852
   954  0000                     _FVRCON	set	16065
   955  0000                     _ADFLTRL	set	16102
   956  0000                     _ADFLTRH	set	16103
   957  0000                     _ADCON0bits	set	16120
   958  0000                     _ADCON0	set	16120
   959  0000                     _ADCLK	set	16127
   960  0000                     _ADACT	set	16126
   961  0000                     _ADREF	set	16125
   962  0000                     _ADSTAT	set	16124
   963  0000                     _ADCON3	set	16123
   964  0000                     _ADCON2	set	16122
   965  0000                     _ADCON1	set	16121
   966  0000                     _ADPREH	set	16119
   967  0000                     _ADPREL	set	16118
   968  0000                     _ADCAP	set	16117
   969  0000                     _ADACQH	set	16116
   970  0000                     _ADACQL	set	16115
   971  0000                     _ADPCH	set	16113
   972  0000                     _ADRPT	set	16108
   973  0000                     _ADACCU	set	16106
   974  0000                     _ADSTPTH	set	16101
   975  0000                     _ADSTPTL	set	16100
   976  0000                     _ADUTHH	set	16097
   977  0000                     _ADUTHL	set	16096
   978  0000                     _ADLTHH	set	16095
   979  0000                     _ADLTHL	set	16094
   980  0000                     _CCPTMRS1bits	set	16223
   981  0000                     _LATCbits	set	16316
   982  0000                     _LATDbits	set	16317
   983  0000                     _PORTBbits	set	16331
   984  0000                     _T2CON	set	16300
   985  0000                     _T2TMR	set	16298
   986  0000                     _T2PR	set	16299
   987  0000                     _T2RST	set	16303
   988  0000                     _T2HLT	set	16301
   989  0000                     _T2CLKCON	set	16302
   990  0000                     _PWM8DCL	set	16224
   991  0000                     _PWM8DCH	set	16225
   992  0000                     _PWM8CON	set	16226
   993  0000                     _LATEbits	set	16318
   994  0000                     _T5CONbits	set	16282
   995  0000                     _T5CON	set	16282
   996  0000                     _TMR5L	set	16280
   997  0000                     _TMR5H	set	16281
   998  0000                     _T5CLK	set	16285
   999  0000                     _T5GATE	set	16284
  1000  0000                     _T5GCON	set	16283
  1001  0000                     _T6CON	set	16276
  1002  0000                     _T6TMR	set	16274
  1003  0000                     _T6PR	set	16275
  1004  0000                     _T6RST	set	16279
  1005  0000                     _T6HLT	set	16277
  1006  0000                     _T6CLKCON	set	16278
  1007  0000                     _TRISD	set	16325
  1008  0000                     _TRISC	set	16324
  1009  0000                     _TRISB	set	16323
  1010  0000                     _TRISA	set	16322
  1011  0000                     _TRISF	set	16327
  1012  0000                     _TRISE	set	16326
  1013  0000                     _LATC	set	16316
  1014  0000                     _LATB	set	16315
  1015  0000                     _LATF	set	16319
  1016  0000                     _LATA	set	16314
  1017  0000                     _LATD	set	16317
  1018  0000                     _LATE	set	16318
  1019  0000                     _IVTLOCKbits	set	16340
  1020  0000                     _IVTLOCK	set	16340
  1021  0000                     _INTCON0bits	set	16338
  1022  0000                     _GIE	set	130711
  1023  00FF03                     
  1024                           ; BSR set to: 57
  1025  00FF03  20                 	db	32
  1026  00FF04  4D                 	db	77	;'M'
  1027  00FF05  65                 	db	101	;'e'
  1028  00FF06  73                 	db	115	;'s'
  1029  00FF07  67                 	db	103	;'g'
  1030  00FF08  20                 	db	32
  1031  00FF09  25                 	db	37
  1032  00FF0A  64                 	db	100	;'d'
  1033  00FF0B  20                 	db	32
  1034  00FF0C  53                 	db	83	;'S'
  1035  00FF0D  74                 	db	116	;'t'
  1036  00FF0E  61                 	db	97	;'a'
  1037  00FF0F  63                 	db	99	;'c'
  1038  00FF10  6B                 	db	107	;'k'
  1039  00FF11  20                 	db	32
  1040  00FF12  25                 	db	37
  1041  00FF13  64                 	db	100	;'d'
  1042  00FF14  20                 	db	32
  1043  00FF15  20                 	db	32
  1044  00FF16  20                 	db	32
  1045  00FF17  20                 	db	32
  1046  00FF18  20                 	db	32
  1047  00FF19  20                 	db	32
  1048  00FF1A  00                 	db	0
  1049  00FF1B                     STR_26:
  1050                           
  1051                           ; BSR set to: 57
  1052  00FF1B  20                 	db	32
  1053  00FF1C  20                 	db	32
  1054  00FF1D  20                 	db	32
  1055  00FF1E  20                 	db	32
  1056  00FF1F  20                 	db	32
  1057  00FF20  20                 	db	32
  1058  00FF21  20                 	db	32
  1059  00FF22  20                 	db	32
  1060  00FF23  20                 	db	32
  1061  00FF24  20                 	db	32
  1062  00FF25  20                 	db	32
  1063  00FF26  20                 	db	32
  1064  00FF27  20                 	db	32
  1065  00FF28  20                 	db	32
  1066  00FF29  20                 	db	32
  1067  00FF2A  20                 	db	32
  1068  00FF2B  20                 	db	32
  1069  00FF2C  20                 	db	32
  1070  00FF2D  00                 	db	0
  1071  00FF2E                     STR_16:
  1072                           
  1073                           ; BSR set to: 57
  1074  00FF2E  48                 	db	72	;'H'
  1075  00FF2F  45                 	db	69	;'E'
  1076  00FF30  4C                 	db	76	;'L'
  1077  00FF31  50                 	db	80	;'P'
  1078  00FF32  20                 	db	32
  1079  00FF33  25                 	db	37
  1080  00FF34  73                 	db	115	;'s'
  1081  00FF35  20                 	db	32
  1082  00FF36  20                 	db	32
  1083  00FF37  20                 	db	32
  1084  00FF38  20                 	db	32
  1085  00FF39  20                 	db	32
  1086  00FF3A  20                 	db	32
  1087  00FF3B  20                 	db	32
  1088  00FF3C  20                 	db	32
  1089  00FF3D  20                 	db	32
  1090  00FF3E  20                 	db	32
  1091  00FF3F  20                 	db	32
  1092  00FF40  00                 	db	0
  1093  00FF41                     
  1094                           ; BSR set to: 57
  1095  00FF41  44                 	db	68	;'D'
  1096  00FF42  49                 	db	73	;'I'
  1097  00FF43  53                 	db	83	;'S'
  1098  00FF44  50                 	db	80	;'P'
  1099  00FF45  4C                 	db	76	;'L'
  1100  00FF46  41                 	db	65	;'A'
  1101  00FF47  59                 	db	89	;'Y'
  1102  00FF48  20                 	db	32
  1103  00FF49  25                 	db	37
  1104  00FF4A  73                 	db	115	;'s'
  1105  00FF4B  20                 	db	32
  1106  00FF4C  20                 	db	32
  1107  00FF4D  20                 	db	32
  1108  00FF4E  20                 	db	32
  1109  00FF4F  20                 	db	32
  1110  00FF50  20                 	db	32
  1111  00FF51  20                 	db	32
  1112  00FF52  20                 	db	32
  1113  00FF53  00                 	db	0
  1114  00FF54                     STR_8:
  1115                           
  1116                           ; BSR set to: 57
  1117  00FF54  20                 	db	32
  1118  00FF55  56                 	db	86	;'V'
  1119  00FF56  54                 	db	84	;'T'
  1120  00FF57  45                 	db	69	;'E'
  1121  00FF58  52                 	db	82	;'R'
  1122  00FF59  4D                 	db	77	;'M'
  1123  00FF5A  20                 	db	32
  1124  00FF5B  23                 	db	35
  1125  00FF5C  32                 	db	50	;'2'
  1126  00FF5D  20                 	db	32
  1127  00FF5E  20                 	db	32
  1128  00FF5F  20                 	db	32
  1129  00FF60  20                 	db	32
  1130  00FF61  20                 	db	32
  1131  00FF62  20                 	db	32
  1132  00FF63  20                 	db	32
  1133  00FF64  00                 	db	0
  1134  00FF65                     STR_4:
  1135                           
  1136                           ; BSR set to: 57
  1137  00FF65  20                 	db	32
  1138  00FF66  4E                 	db	78	;'N'
  1139  00FF67  53                 	db	83	;'S'
  1140  00FF68  41                 	db	65	;'A'
  1141  00FF69  53                 	db	83	;'S'
  1142  00FF6A  50                 	db	80	;'P'
  1143  00FF6B  4F                 	db	79	;'O'
  1144  00FF6C  4F                 	db	79	;'O'
  1145  00FF6D  4B                 	db	75	;'K'
  1146  00FF6E  20                 	db	32
  1147  00FF6F  20                 	db	32
  1148  00FF70  20                 	db	32
  1149  00FF71  20                 	db	32
  1150  00FF72  20                 	db	32
  1151  00FF73  20                 	db	32
  1152  00FF74  20                 	db	32
  1153  00FF75  00                 	db	0
  1154  00FF76                     STR_1:
  1155                           
  1156                           ; BSR set to: 57
  1157  00FF76  20                 	db	32
  1158  00FF77  4D                 	db	77	;'M'
  1159  00FF78  42                 	db	66	;'B'
  1160  00FF79  4D                 	db	77	;'M'
  1161  00FF7A  43                 	db	67	;'C'
  1162  00FF7B  20                 	db	32
  1163  00FF7C  53                 	db	83	;'S'
  1164  00FF7D  4F                 	db	79	;'O'
  1165  00FF7E  4C                 	db	76	;'L'
  1166  00FF7F  41                 	db	65	;'A'
  1167  00FF80  52                 	db	82	;'R'
  1168  00FF81  4D                 	db	77	;'M'
  1169  00FF82  4F                 	db	79	;'O'
  1170  00FF83  4E                 	db	78	;'N'
  1171  00FF84  20                 	db	32
  1172  00FF85  20                 	db	32
  1173  00FF86  00                 	db	0
  1174  00FF87                     STR_5:
  1175                           
  1176                           ; BSR set to: 57
  1177  00FF87  20                 	db	32
  1178  00FF88  53                 	db	83	;'S'
  1179  00FF89  45                 	db	69	;'E'
  1180  00FF8A  51                 	db	81	;'Q'
  1181  00FF8B  55                 	db	85	;'U'
  1182  00FF8C  45                 	db	69	;'E'
  1183  00FF8D  4E                 	db	78	;'N'
  1184  00FF8E  43                 	db	67	;'C'
  1185  00FF8F  45                 	db	69	;'E'
  1186  00FF90  20                 	db	32
  1187  00FF91  54                 	db	84	;'T'
  1188  00FF92  45                 	db	69	;'E'
  1189  00FF93  53                 	db	83	;'S'
  1190  00FF94  54                 	db	84	;'T'
  1191  00FF95  20                 	db	32
  1192  00FF96  20                 	db	32
  1193  00FF97  00                 	db	0
  1194  00FF98                     STR_20:
  1195                           
  1196                           ; BSR set to: 57
  1197  00FF98  76                 	db	118	;'v'
  1198  00FF99  74                 	db	116	;'t'
  1199  00FF9A  65                 	db	101	;'e'
  1200  00FF9B  72                 	db	114	;'r'
  1201  00FF9C  6D                 	db	109	;'m'
  1202  00FF9D  20                 	db	32
  1203  00FF9E  25                 	db	37
  1204  00FF9F  78                 	db	120	;'x'
  1205  00FFA0  3A                 	db	58	;':'
  1206  00FFA1  25                 	db	37
  1207  00FFA2  78                 	db	120	;'x'
  1208  00FFA3  20                 	db	32
  1209  00FFA4  20                 	db	32
  1210  00FFA5  20                 	db	32
  1211  00FFA6  00                 	db	0
  1212  00FFA7                     STR_2:
  1213                           
  1214                           ; BSR set to: 57
  1215  00FFA7  20                 	db	32
  1216  00FFA8  56                 	db	86	;'V'
  1217  00FFA9  65                 	db	101	;'e'
  1218  00FFAA  72                 	db	114	;'r'
  1219  00FFAB  73                 	db	115	;'s'
  1220  00FFAC  69                 	db	105	;'i'
  1221  00FFAD  6F                 	db	111	;'o'
  1222  00FFAE  6E                 	db	110	;'n'
  1223  00FFAF  20                 	db	32
  1224  00FFB0  25                 	db	37
  1225  00FFB1  73                 	db	115	;'s'
  1226  00FFB2  20                 	db	32
  1227  00FFB3  20                 	db	32
  1228  00FFB4  20                 	db	32
  1229  00FFB5  00                 	db	0
  1230  00FFB6                     STR_9:
  1231                           
  1232                           ; BSR set to: 57
  1233  00FFB6  25                 	db	37
  1234  00FFB7  64                 	db	100	;'d'
  1235  00FFB8  20                 	db	32
  1236  00FFB9  25                 	db	37
  1237  00FFBA  32                 	db	50	;'2'
  1238  00FFBB  2E                 	db	46
  1239  00FFBC  32                 	db	50	;'2'
  1240  00FFBD  66                 	db	102	;'f'
  1241  00FFBE  20                 	db	32
  1242  00FFBF  20                 	db	32
  1243  00FFC0  20                 	db	32
  1244  00FFC1  23                 	db	35
  1245  00FFC2  00                 	db	0
  1246  00FFC3                     STR_14:
  1247                           
  1248                           ; BSR set to: 57
  1249  00FFC3  4E                 	db	78	;'N'
  1250  00FFC4  6F                 	db	111	;'o'
  1251  00FFC5  76                 	db	118	;'v'
  1252  00FFC6  20                 	db	32
  1253  00FFC7  20                 	db	32
  1254  00FFC8  38                 	db	56	;'8'
  1255  00FFC9  20                 	db	32
  1256  00FFCA  32                 	db	50	;'2'
  1257  00FFCB  30                 	db	48	;'0'
  1258  00FFCC  31                 	db	49	;'1'
  1259  00FFCD  39                 	db	57	;'9'
  1260  00FFCE  00                 	db	0
  1261  00FFCF                     STR_18:
  1262                           
  1263                           ; BSR set to: 57
  1264  00FFCF  25                 	db	37
  1265  00FFD0  73                 	db	115	;'s'
  1266  00FFD1  20                 	db	32
  1267  00FFD2  20                 	db	32
  1268  00FFD3  20                 	db	32
  1269  00FFD4  20                 	db	32
  1270  00FFD5  20                 	db	32
  1271  00FFD6  20                 	db	32
  1272  00FFD7  20                 	db	32
  1273  00FFD8  00                 	db	0
  1274  00FFD9                     STR_15:
  1275                           
  1276                           ; BSR set to: 57
  1277  00FFD9  30                 	db	48	;'0'
  1278  00FFDA  39                 	db	57	;'9'
  1279  00FFDB  3A                 	db	58	;':'
  1280  00FFDC  30                 	db	48	;'0'
  1281  00FFDD  36                 	db	54	;'6'
  1282  00FFDE  3A                 	db	58	;':'
  1283  00FFDF  35                 	db	53	;'5'
  1284  00FFE0  34                 	db	52	;'4'
  1285  00FFE1  00                 	db	0
  1286  00FFE2                     STR_33:
  1287                           
  1288                           ; BSR set to: 57
  1289  00FFE2  49                 	db	73	;'I'
  1290  00FFE3  4E                 	db	78	;'N'
  1291  00FFE4  46                 	db	70	;'F'
  1292  00FFE5  00                 	db	0
  1293  00FFE6                     STR_37:
  1294                           
  1295                           ; BSR set to: 57
  1296  00FFE6  4E                 	db	78	;'N'
  1297  00FFE7  41                 	db	65	;'A'
  1298  00FFE8  4E                 	db	78	;'N'
  1299  00FFE9  00                 	db	0
  1300  00FFEA                     STR_34:
  1301                           
  1302                           ; BSR set to: 57
  1303  00FFEA  69                 	db	105	;'i'
  1304  00FFEB  6E                 	db	110	;'n'
  1305  00FFEC  66                 	db	102	;'f'
  1306  00FFED  00                 	db	0
  1307  00FFEE                     STR_38:
  1308                           
  1309                           ; BSR set to: 57
  1310  00FFEE  6E                 	db	110	;'n'
  1311  00FFEF  61                 	db	97	;'a'
  1312  00FFF0  6E                 	db	110	;'n'
  1313  00FFF1  00                 	db	0
  1314  00FFF2                     STR_3:
  1315                           
  1316                           ; BSR set to: 57
  1317  00FFF2  30                 	db	48	;'0'
  1318  00FFF3  2E                 	db	46
  1319  00FFF4  39                 	db	57	;'9'
  1320  00FFF5  00                 	db	0
  1321  00FFF6                     STR_41:
  1322                           
  1323                           ; BSR set to: 57
  1324  00FFF6  6C                 	db	108	;'l'
  1325  00FFF7  66                 	db	102	;'f'
  1326  00FFF8  00                 	db	0
  1327  00FFF9                     STR_12:
  1328                           
  1329                           ; BSR set to: 57
  1330  00FFF9  25                 	db	37
  1331  00FFFA  63                 	db	99	;'c'
  1332  00FFFB  00                 	db	0
  1333  00FFFC                     STR_11:
  1334                           
  1335                           ; BSR set to: 57
  1336  00FFFC  25                 	db	37
  1337  00FFFD  73                 	db	115	;'s'
  1338  00FFFE  00                 	db	0
  1339  0000                     
  1340                           ; #config settings
  1341  00FFFF  00                 	db	0	; dummy byte at the end
  1342  0000                     
  1343                           	psect	cinit
  1344  016898                     __pcinit:
  1345                           	opt callstack 0
  1346  016898                     start_initialization:
  1347                           	opt callstack 0
  1348  016898                     __initialization:
  1349                           	opt callstack 0
  1350                           
  1351                           ; Initialize objects allocated to BANK1 (171 bytes)
  1352                           ; load TBLPTR registers with __pidataBANK1
  1353  016898  0E22               	movlw	low __pidataBANK1
  1354  01689A  6EF6               	movwf	tblptrl,c
  1355  01689C  0E6A               	movlw	high __pidataBANK1
  1356  01689E  6EF7               	movwf	tblptrh,c
  1357  0168A0  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1358  0168A2  6EF8               	movwf	tblptru,c
  1359  0168A4  EE00  F100         	lfsr	0,__pdataBANK1
  1360  0168A8  EE20 F0AB          	lfsr	2,171
  1361  0168AC                     copy_data0:
  1362  0168AC  0009               	tblrd		*+
  1363  0168AE  006F FFD7 FFEE     	movff	tablat,postinc0
  1364  0168B4  50DD               	movf	postdec2,w,c
  1365  0168B6  50D9               	movf	fsr2l,w,c
  1366  0168B8  E1F9               	bnz	copy_data0
  1367                           
  1368                           ; Initialize objects allocated to BANK0 (67 bytes)
  1369                           ; load TBLPTR registers with __pidataBANK0
  1370  0168BA  0EEA               	movlw	low __pidataBANK0
  1371  0168BC  6EF6               	movwf	tblptrl,c
  1372  0168BE  0E78               	movlw	high __pidataBANK0
  1373  0168C0  6EF7               	movwf	tblptrh,c
  1374  0168C2  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1375  0168C4  6EF8               	movwf	tblptru,c
  1376  0168C6  EE00  F060         	lfsr	0,__pdataBANK0
  1377  0168CA  EE20 F043          	lfsr	2,67
  1378  0168CE                     copy_data1:
  1379  0168CE  0009               	tblrd		*+
  1380  0168D0  006F FFD7 FFEE     	movff	tablat,postinc0
  1381  0168D6  50DD               	movf	postdec2,w,c
  1382  0168D8  50D9               	movf	fsr2l,w,c
  1383  0168DA  E1F9               	bnz	copy_data1
  1384                           
  1385                           ; Clear objects allocated to BANK6 (255 bytes)
  1386  0168DC  EE01  F200         	lfsr	0,__pbssBANK6
  1387  0168E0  EE20 F0FF          	lfsr	2,255
  1388  0168E4                     clear_0:
  1389  0168E4  6AEE               	clrf	postinc0,c
  1390  0168E6  50DD               	movf	postdec2,w,c
  1391  0168E8  50D9               	movf	fsr2l,w,c
  1392  0168EA  E1FC               	bnz	clear_0
  1393  0168EC  50DA               	movf	fsr2h,w,c
  1394  0168EE  E1FA               	bnz	clear_0
  1395                           
  1396                           ; Clear objects allocated to BANK5 (255 bytes)
  1397  0168F0  EE01  F100         	lfsr	0,__pbssBANK5
  1398  0168F4  EE20 F0FF          	lfsr	2,255
  1399  0168F8                     clear_1:
  1400  0168F8  6AEE               	clrf	postinc0,c
  1401  0168FA  50DD               	movf	postdec2,w,c
  1402  0168FC  50D9               	movf	fsr2l,w,c
  1403  0168FE  E1FC               	bnz	clear_1
  1404  016900  50DA               	movf	fsr2h,w,c
  1405  016902  E1FA               	bnz	clear_1
  1406                           
  1407                           ; Clear objects allocated to BANK4 (218 bytes)
  1408  016904  EE01  F000         	lfsr	0,__pbssBANK4
  1409  016908  0EDA               	movlw	218
  1410  01690A                     clear_2:
  1411  01690A  6AEE               	clrf	postinc0,c
  1412  01690C  06E8               	decf	wreg,f,c
  1413  01690E  E1FD               	bnz	clear_2
  1414                           
  1415                           ; Clear objects allocated to BANK3 (198 bytes)
  1416  016910  EE00  F300         	lfsr	0,__pbssBANK3
  1417  016914  0EC6               	movlw	198
  1418  016916                     clear_3:
  1419  016916  6AEE               	clrf	postinc0,c
  1420  016918  06E8               	decf	wreg,f,c
  1421  01691A  E1FD               	bnz	clear_3
  1422                           
  1423                           ; Clear objects allocated to BANK2 (236 bytes)
  1424  01691C  EE00  F200         	lfsr	0,__pbssBANK2
  1425  016920  0EEC               	movlw	236
  1426  016922                     clear_4:
  1427  016922  6AEE               	clrf	postinc0,c
  1428  016924  06E8               	decf	wreg,f,c
  1429  016926  E1FD               	bnz	clear_4
  1430                           
  1431                           ; Clear objects allocated to BANK1 (80 bytes)
  1432  016928  EE00  F1AB         	lfsr	0,__pbssBANK1
  1433  01692C  0E50               	movlw	80
  1434  01692E                     clear_5:
  1435  01692E  6AEE               	clrf	postinc0,c
  1436  016930  06E8               	decf	wreg,f,c
  1437  016932  E1FD               	bnz	clear_5
  1438                           
  1439                           ; Clear objects allocated to BANK0 (59 bytes)
  1440  016934  EE00  F0A3         	lfsr	0,__pbssBANK0
  1441  016938  0E3B               	movlw	59
  1442  01693A                     clear_6:
  1443  01693A  6AEE               	clrf	postinc0,c
  1444  01693C  06E8               	decf	wreg,f,c
  1445  01693E  E1FD               	bnz	clear_6
  1446                           
  1447                           ; Clear objects allocated to COMRAM (52 bytes)
  1448  016940  EE00  F001         	lfsr	0,__pbssCOMRAM
  1449  016944  0E34               	movlw	52
  1450  016946                     clear_7:
  1451  016946  6AEE               	clrf	postinc0,c
  1452  016948  06E8               	decf	wreg,f,c
  1453  01694A  E1FD               	bnz	clear_7
  1454                           
  1455                           ;
  1456                           ; Setup IVTBASE
  1457                           ;
  1458  01694C  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1459  01694E  6ED5               	movwf	213,c
  1460  016950  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1461  016952  6ED6               	movwf	214,c
  1462  016954  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1463  016956  6ED7               	movwf	215,c
  1464  016958                     end_of_initialization:
  1465                           	opt callstack 0
  1466  016958                     __end_of__initialization:
  1467                           	opt callstack 0
  1468  016958  0100               	movlb	0
  1469  01695A  EF95  F09F         	goto	_main	;jump to C main() function
  1470                           
  1471                           	psect	bssCOMRAM
  1472  000001                     __pbssCOMRAM:
  1473                           	opt callstack 0
  1474  000001                     _TMR6_InterruptHandler:
  1475                           	opt callstack 0
  1476  000001                     	ds	3
  1477  000004                     _ADCC_ADTI_InterruptHandler:
  1478                           	opt callstack 0
  1479  000004                     	ds	3
  1480  000007                     _ADCC_ADI_InterruptHandler:
  1481                           	opt callstack 0
  1482  000007                     	ds	3
  1483  00000A                     _UART1_TxInterruptHandler:
  1484                           	opt callstack 0
  1485  00000A                     	ds	3
  1486  00000D                     _UART1_RxInterruptHandler:
  1487                           	opt callstack 0
  1488  00000D                     	ds	3
  1489  000010                     _UART2_TxInterruptHandler:
  1490                           	opt callstack 0
  1491  000010                     	ds	3
  1492  000013                     _UART2_RxInterruptHandler:
  1493                           	opt callstack 0
  1494  000013                     	ds	3
  1495  000016                     _INT1_InterruptHandler:
  1496                           	opt callstack 0
  1497  000016                     	ds	3
  1498  000019                     _INT0_InterruptHandler:
  1499                           	opt callstack 0
  1500  000019                     	ds	3
  1501  00001C                     _nout:
  1502                           	opt callstack 0
  1503  00001C                     	ds	2
  1504  00001E                     _width:
  1505                           	opt callstack 0
  1506  00001E                     	ds	2
  1507  000020                     _prec:
  1508                           	opt callstack 0
  1509  000020                     	ds	2
  1510  000022                     _flags:
  1511                           	opt callstack 0
  1512  000022                     	ds	2
  1513  000024                     TMR5_ISR@CountCallBack:
  1514                           	opt callstack 0
  1515  000024                     	ds	2
  1516  000026                     _timer5ReloadVal:
  1517                           	opt callstack 0
  1518  000026                     	ds	2
  1519  000028                     _mode_sw:
  1520                           	opt callstack 0
  1521  000028                     	ds	1
  1522  000029                     _uart2RxCount:
  1523                           	opt callstack 0
  1524  000029                     	ds	1
  1525  00002A                     _uart2RxTail:
  1526                           	opt callstack 0
  1527  00002A                     	ds	1
  1528  00002B                     _uart2RxHead:
  1529                           	opt callstack 0
  1530  00002B                     	ds	1
  1531  00002C                     _uart2TxBufferRemaining:
  1532                           	opt callstack 0
  1533  00002C                     	ds	1
  1534  00002D                     _uart2TxTail:
  1535                           	opt callstack 0
  1536  00002D                     	ds	1
  1537  00002E                     _uart2TxHead:
  1538                           	opt callstack 0
  1539  00002E                     	ds	1
  1540  00002F                     _uart1RxCount:
  1541                           	opt callstack 0
  1542  00002F                     	ds	1
  1543  000030                     _uart1RxTail:
  1544                           	opt callstack 0
  1545  000030                     	ds	1
  1546  000031                     _uart1RxHead:
  1547                           	opt callstack 0
  1548  000031                     	ds	1
  1549  000032                     _uart1TxBufferRemaining:
  1550                           	opt callstack 0
  1551  000032                     	ds	1
  1552  000033                     _uart1TxTail:
  1553                           	opt callstack 0
  1554  000033                     	ds	1
  1555  000034                     _uart1TxHead:
  1556                           	opt callstack 0
  1557  000034                     	ds	1
  1558                           
  1559                           	psect	bssBANK0
  1560  0000A3                     __pbssBANK0:
  1561                           	opt callstack 0
  1562  0000A3                     _tickCount:
  1563                           	opt callstack 0
  1564  0000A3                     	ds	24
  1565  0000BB                     _spi_link:
  1566                           	opt callstack 0
  1567  0000BB                     	ds	12
  1568  0000C7                     floorf@F524:
  1569                           	opt callstack 0
  1570  0000C7                     	ds	4
  1571  0000CB                     ___fpclassifyf@F463:
  1572                           	opt callstack 0
  1573  0000CB                     	ds	4
  1574  0000CF                     wdtdelay@dcount:
  1575                           	opt callstack 0
  1576  0000CF                     	ds	4
  1577  0000D3                     _TMR5_InterruptHandler:
  1578                           	opt callstack 0
  1579  0000D3                     	ds	3
  1580  0000D6                     _seed:
  1581                           	opt callstack 0
  1582  0000D6                     	ds	8
  1583                           
  1584                           	psect	dataBANK0
  1585  000060                     __pdataBANK0:
  1586                           	opt callstack 0
  1587  000060                     _R:
  1588                           	opt callstack 0
  1589  000060                     	ds	44
  1590  00008C                     stoa@F1166:
  1591                           	opt callstack 0
  1592  00008C                     	ds	7
  1593  000093                     _port_data:
  1594                           	opt callstack 0
  1595  000093                     	ds	16
  1596                           
  1597                           	psect	bssBANK1
  1598  0001AB                     __pbssBANK1:
  1599                           	opt callstack 0
  1600  0001AB                     _dbuf:
  1601                           	opt callstack 0
  1602  0001AB                     	ds	80
  1603                           
  1604                           	psect	dataBANK1
  1605  000100                     __pdataBANK1:
  1606                           	opt callstack 0
  1607  000100                     _V:
  1608                           	opt callstack 0
  1609  000100                     	ds	171
  1610                           
  1611                           	psect	bssBANK2
  1612  000200                     __pbssBANK2:
  1613                           	opt callstack 0
  1614  000200                     _C:
  1615                           	opt callstack 0
  1616  000200                     	ds	108
  1617  00026C                     lp_filter@smooth:
  1618                           	opt callstack 0
  1619  00026C                     	ds	64
  1620  0002AC                     _uart1TxBuffer:
  1621                           	opt callstack 0
  1622  0002AC                     	ds	64
  1623                           
  1624                           	psect	bssBANK3
  1625  000300                     __pbssBANK3:
  1626                           	opt callstack 0
  1627  000300                     _uart2TxBuffer:
  1628                           	opt callstack 0
  1629  000300                     	ds	64
  1630  000340                     _ring_buf2:
  1631                           	opt callstack 0
  1632  000340                     	ds	67
  1633  000383                     _ring_buf1:
  1634                           	opt callstack 0
  1635  000383                     	ds	67
  1636                           
  1637                           	psect	bssBANK4
  1638  000400                     __pbssBANK4:
  1639                           	opt callstack 0
  1640  000400                     _D:
  1641                           	opt callstack 0
  1642  000400                     	ds	218
  1643                           
  1644                           	psect	bssBANK5
  1645  000500                     __pbssBANK5:
  1646                           	opt callstack 0
  1647  000500                     _uart1RxBuffer:
  1648                           	opt callstack 0
  1649  000500                     	ds	255
  1650                           
  1651                           	psect	bssBANK6
  1652  000600                     __pbssBANK6:
  1653                           	opt callstack 0
  1654  000600                     _uart2RxBuffer:
  1655                           	opt callstack 0
  1656  000600                     	ds	255
  1657                           
  1658                           	psect	cstackBANK0
  1659  0000DE                     __pcstackBANK0:
  1660                           	opt callstack 0
  1661  0000DE                     ??_TMR6_ISR:
  1662                           
  1663                           ; 1 bytes @ 0x0
  1664  0000DE                     	ds	1
  1665  0000DF                     ??_TMR5_ISR:
  1666                           
  1667                           ; 1 bytes @ 0x1
  1668  0000DF                     	ds	4
  1669                           
  1670                           	psect	cstackCOMRAM
  1671  000055                     __pcstackCOMRAM:
  1672                           	opt callstack 0
  1673  000055                     ??_ADCC_ISR:
  1674  000055                     
  1675                           ; 1 bytes @ 0x0
  1676  000055                     	ds	1
  1677  000056                     ??_ADCC_ThresholdISR:
  1678                           
  1679                           ; 1 bytes @ 0x1
  1680  000056                     	ds	5
  1681                           
  1682 ;;
  1683 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1684 ;;
  1685 ;; *************** function _main *****************
  1686 ;; Defined at:
  1687 ;;		line 142 in file "main.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;		None
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;  mode            1  [STACK] enum E17005
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1  [STACK] void 
  1694 ;; Registers used:
  1695 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1705 ;;Total ram usage:        0 bytes
  1706 ;; Hardware stack levels required when called:   19
  1707 ;; This function calls:
  1708 ;;		_SYSTEM_Initialize
  1709 ;;		_StartTimer
  1710 ;;		_TimerDone
  1711 ;;		_WaitMs
  1712 ;;		_check_adc_scan
  1713 ;;		_check_help
  1714 ;;		_clear_adc_scan
  1715 ;;		_convert_adc_data
  1716 ;;		_eaDogM_WriteCommand
  1717 ;;		_get_raw_result
  1718 ;;		_get_vterm_ptr
  1719 ;;		_init_display
  1720 ;;		_mode_lamp_dim
  1721 ;;		_set_display_info
  1722 ;;		_set_vterm
  1723 ;;		_sprintf
  1724 ;;		_srand
  1725 ;;		_start_adc_scan
  1726 ;;		_update_lcd
  1727 ;; This function is called by:
  1728 ;;		Startup code after reset
  1729 ;; This function uses a reentrant model
  1730 ;;
  1731                           
  1732                           	psect	text0
  1733  013F2A                     __ptext0:
  1734                           	opt callstack 0
  1735  013F2A                     _main:
  1736                           	opt callstack 0
  1737                           
  1738                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1739  013F2A  52E6               	movf	postinc1,f,c
  1740                           
  1741                           ;main.c: 144:  UI_STATES mode;;main.c: 147:  SYSTEM_Initialize();
  1742                           
  1743                           ;incstack = 0
  1744  013F2C  ECEA  F0BB         	call	_SYSTEM_Initialize	;wreg free
  1745                           
  1746                           ; BSR set to: 60
  1747                           ;main.c: 150:  (INTCON0bits.GIEH = 1);
  1748  013F30  8ED2               	bsf	210,7,c	;volatile
  1749                           
  1750                           ; BSR set to: 60
  1751                           ;main.c: 153:  (INTCON0bits.GIEL = 1);
  1752  013F32  8CD2               	bsf	210,6,c	;volatile
  1753                           
  1754                           ; BSR set to: 60
  1755                           ;main.c: 155:  V.ui_state = UI_STATE_INIT;
  1756  013F34  0101               	movlb	1	; () banked
  1757  013F36  6B00               	clrf	_V& (0+255),b	;volatile
  1758                           
  1759                           ; BSR set to: 1
  1760                           ;main.c: 160:  WaitMs(300);
  1761  013F38  0E2C               	movlw	44
  1762  013F3A  6EE6               	movwf	postinc1,c
  1763  013F3C  0E01               	movlw	1
  1764  013F3E  6EE6               	movwf	postinc1,c
  1765  013F40  EC2E  F0BD         	call	_WaitMs	;wreg free
  1766                           
  1767                           ;main.c: 161:  if (PORTBbits.RB0) {
  1768  013F44  A0CB               	btfss	203,0,c	;volatile
  1769  013F46  D004               	goto	l9981
  1770                           
  1771                           ;main.c: 162:   mode = UI_STATE_HOST;
  1772                           ;stkvar	_mode @ sp[(-1)+0]
  1773  013F48  0EFF               	movlw	-1
  1774  013F4A  6AE3               	clrf	plusw1,c
  1775  013F4C  2AE3               	incf	plusw1,f,c
  1776                           
  1777                           ;main.c: 163:  } else {
  1778  013F4E  D004               	goto	l9983
  1779  013F50                     l9981:
  1780                           
  1781                           ;main.c: 164:   mode = UI_STATE_LOG;
  1782                           ;stkvar	_mode @ sp[(-1)+0]
  1783  013F50  0EFF               	movlw	-1
  1784  013F52  6AE3               	clrf	plusw1,c
  1785  013F54  80E3               	bsf	plusw1,0,c
  1786  013F56  82E3               	bsf	plusw1,1,c	;indir
  1787  013F58                     l9983:
  1788                           
  1789                           ;main.c: 167:  if (mode == UI_STATE_HOST) {
  1790                           ;stkvar	_mode @ sp[(-1)+0]
  1791  013F58  0EFF               	movlw	-1
  1792  013F5A  04E3               	decf	plusw1,w,c
  1793  013F5C  A4D8               	btfss	status,2,c
  1794  013F5E  D007               	goto	l1240
  1795                           
  1796                           ;main.c: 168:   do { LATDbits.LATD0 = 1; } while(0);
  1797  013F60  80BD               	bsf	189,0,c	;volatile
  1798                           
  1799                           ;main.c: 169:   V.mode_pwm = 70;
  1800  013F62  0E00               	movlw	0
  1801  013F64  0101               	movlb	1	; () banked
  1802  013F66  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  1803  013F68  0E46               	movlw	70
  1804  013F6A  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  1805                           
  1806                           ;main.c: 170:  } else {
  1807  013F6C  D004               	goto	l9987
  1808  013F6E                     l1240:
  1809  013F6E  90BD               	bcf	189,0,c	;volatile
  1810                           
  1811                           ;main.c: 172:   V.mode_pwm = 0;
  1812  013F70  0101               	movlb	1	; () banked
  1813  013F72  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  1814  013F74  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  1815  013F76                     l9987:
  1816                           
  1817                           ; BSR set to: 1
  1818                           ;main.c: 174:  mode_lamp_dim(V.mode_pwm);
  1819  013F76  0060  F657  FFE6   	movff	_V+149,postinc1
  1820  013F7C  0060  F65B  FFE6   	movff	_V+150,postinc1
  1821  013F82  EC7F  F0C0         	call	_mode_lamp_dim	;wreg free
  1822  013F86  D0CB               	goto	l10029
  1823  013F88                     l9989:
  1824                           
  1825                           ; BSR set to: 1
  1826                           ;main.c: 185:    init_display();
  1827  013F88  EC6D  F0B3         	call	_init_display	;wreg free
  1828                           
  1829                           ; BSR set to: 61
  1830                           ;main.c: 186:    eaDogM_WriteCommand(0b00001100);
  1831  013F8C  0E0C               	movlw	12
  1832  013F8E  6EE6               	movwf	postinc1,c
  1833  013F90  ECD3  F0C0         	call	_eaDogM_WriteCommand	;wreg free
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;main.c: 188:    V.ui_state = mode;
  1837                           ;stkvar	_mode @ sp[(-1)+0]
  1838  013F94  0EFF               	movlw	-1
  1839  013F96  006F FF8C  F100    	movff	plusw1,_V	;volatile
  1840                           
  1841                           ; BSR set to: 0
  1842                           ;main.c: 189:    srand(1957);
  1843  013F9C  0EA5               	movlw	165
  1844  013F9E  6EE6               	movwf	postinc1,c
  1845  013FA0  0E07               	movlw	7
  1846  013FA2  6EE6               	movwf	postinc1,c
  1847  013FA4  EC64  F0BD         	call	_srand	;wreg free
  1848                           
  1849                           ; BSR set to: 0
  1850                           ;main.c: 190:    set_vterm(0);
  1851  013FA8  0E00               	movlw	0
  1852  013FAA  6EE6               	movwf	postinc1,c
  1853  013FAC  EC4A  F0C0         	call	_set_vterm	;wreg free
  1854                           
  1855                           ; BSR set to: 4
  1856                           ;main.c: 191:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  1857  013FB0  0E76               	movlw	low STR_1
  1858  013FB2  6EE6               	movwf	postinc1,c
  1859  013FB4  0EFF               	movlw	high STR_1
  1860  013FB6  6EE6               	movwf	postinc1,c
  1861  013FB8  0E00               	movlw	0
  1862  013FBA  6EE6               	movwf	postinc1,c
  1863  013FBC  0E00               	movlw	0
  1864  013FBE  6EE6               	movwf	postinc1,c
  1865  013FC0  ECE0  F0BD         	call	_get_vterm_ptr	;wreg free
  1866  013FC4  0060  F0D7  FFE6   	movff	btemp,postinc1
  1867  013FCA  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1868  013FD0  0E04               	movlw	4
  1869  013FD2  6EE6               	movwf	postinc1,c
  1870  013FD4  ECE8  F0B2         	call	_sprintf	;wreg free
  1871                           
  1872                           ;main.c: 192:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.9");
  1873  013FD8  0EF2               	movlw	low STR_3
  1874  013FDA  6EE6               	movwf	postinc1,c
  1875  013FDC  0EFF               	movlw	high STR_3
  1876  013FDE  6EE6               	movwf	postinc1,c
  1877  013FE0  0EA7               	movlw	low STR_2
  1878  013FE2  6EE6               	movwf	postinc1,c
  1879  013FE4  0EFF               	movlw	high STR_2
  1880  013FE6  6EE6               	movwf	postinc1,c
  1881  013FE8  0E00               	movlw	0
  1882  013FEA  6EE6               	movwf	postinc1,c
  1883  013FEC  0E01               	movlw	1
  1884  013FEE  6EE6               	movwf	postinc1,c
  1885  013FF0  ECE0  F0BD         	call	_get_vterm_ptr	;wreg free
  1886  013FF4  0060  F0D7  FFE6   	movff	btemp,postinc1
  1887  013FFA  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1888  014000  0E06               	movlw	6
  1889  014002  6EE6               	movwf	postinc1,c
  1890  014004  ECE8  F0B2         	call	_sprintf	;wreg free
  1891                           
  1892                           ;main.c: 193:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  1893  014008  0E65               	movlw	low STR_4
  1894  01400A  6EE6               	movwf	postinc1,c
  1895  01400C  0EFF               	movlw	high STR_4
  1896  01400E  6EE6               	movwf	postinc1,c
  1897  014010  0E00               	movlw	0
  1898  014012  6EE6               	movwf	postinc1,c
  1899  014014  0E02               	movlw	2
  1900  014016  6EE6               	movwf	postinc1,c
  1901  014018  ECE0  F0BD         	call	_get_vterm_ptr	;wreg free
  1902  01401C  0060  F0D7  FFE6   	movff	btemp,postinc1
  1903  014022  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1904  014028  0E04               	movlw	4
  1905  01402A  6EE6               	movwf	postinc1,c
  1906  01402C  ECE8  F0B2         	call	_sprintf	;wreg free
  1907                           
  1908                           ;main.c: 194:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  1909  014030  0E87               	movlw	low STR_5
  1910  014032  6EE6               	movwf	postinc1,c
  1911  014034  0EFF               	movlw	high STR_5
  1912  014036  6EE6               	movwf	postinc1,c
  1913  014038  0E02               	movlw	2
  1914  01403A  6EE6               	movwf	postinc1,c
  1915  01403C  0E00               	movlw	0
  1916  01403E  6EE6               	movwf	postinc1,c
  1917  014040  ECE0  F0BD         	call	_get_vterm_ptr	;wreg free
  1918  014044  0060  F0D7  FFE6   	movff	btemp,postinc1
  1919  01404A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1920  014050  0E04               	movlw	4
  1921  014052  6EE6               	movwf	postinc1,c
  1922  014054  ECE8  F0B2         	call	_sprintf	;wreg free
  1923                           
  1924                           ;main.c: 195:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.9");
  1925  014058  0EF2               	movlw	low STR_3
  1926  01405A  6EE6               	movwf	postinc1,c
  1927  01405C  0EFF               	movlw	high STR_3
  1928  01405E  6EE6               	movwf	postinc1,c
  1929  014060  0EA7               	movlw	low STR_2
  1930  014062  6EE6               	movwf	postinc1,c
  1931  014064  0EFF               	movlw	high STR_2
  1932  014066  6EE6               	movwf	postinc1,c
  1933  014068  0E02               	movlw	2
  1934  01406A  6EE6               	movwf	postinc1,c
  1935  01406C  0E01               	movlw	1
  1936  01406E  6EE6               	movwf	postinc1,c
  1937  014070  ECE0  F0BD         	call	_get_vterm_ptr	;wreg free
  1938  014074  0060  F0D7  FFE6   	movff	btemp,postinc1
  1939  01407A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1940  014080  0E06               	movlw	6
  1941  014082  6EE6               	movwf	postinc1,c
  1942  014084  ECE8  F0B2         	call	_sprintf	;wreg free
  1943                           
  1944                           ;main.c: 196:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  1945  014088  0E54               	movlw	low STR_8
  1946  01408A  6EE6               	movwf	postinc1,c
  1947  01408C  0EFF               	movlw	high STR_8
  1948  01408E  6EE6               	movwf	postinc1,c
  1949  014090  0E02               	movlw	2
  1950  014092  6EE6               	movwf	postinc1,c
  1951  014094  0E02               	movlw	2
  1952  014096  6EE6               	movwf	postinc1,c
  1953  014098  ECE0  F0BD         	call	_get_vterm_ptr	;wreg free
  1954  01409C  0060  F0D7  FFE6   	movff	btemp,postinc1
  1955  0140A2  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1956  0140A8  0E04               	movlw	4
  1957  0140AA  6EE6               	movwf	postinc1,c
  1958  0140AC  ECE8  F0B2         	call	_sprintf	;wreg free
  1959                           
  1960                           ;main.c: 197:    update_lcd(0);
  1961  0140B0  0E00               	movlw	0
  1962  0140B2  6EE6               	movwf	postinc1,c
  1963  0140B4  EC61  F0B2         	call	_update_lcd	;wreg free
  1964                           
  1965                           ;main.c: 198:    WaitMs(3000);
  1966  0140B8  0EB8               	movlw	184
  1967  0140BA  6EE6               	movwf	postinc1,c
  1968  0140BC  0E0B               	movlw	11
  1969  0140BE  6EE6               	movwf	postinc1,c
  1970  0140C0  EC2E  F0BD         	call	_WaitMs	;wreg free
  1971                           
  1972                           ;main.c: 199:    StartTimer(TMR_DISPLAY, 250);
  1973  0140C4  0EFA               	movlw	250
  1974  0140C6  6EE6               	movwf	postinc1,c
  1975  0140C8  0E00               	movlw	0
  1976  0140CA  6EE6               	movwf	postinc1,c
  1977  0140CC  0E0A               	movlw	10
  1978  0140CE  6EE6               	movwf	postinc1,c
  1979  0140D0  ECD8  F0BC         	call	_StartTimer	;wreg free
  1980                           
  1981                           ;main.c: 200:    StartTimer(TMR_ADC, 500);
  1982  0140D4  0EF4               	movlw	244
  1983  0140D6  6EE6               	movwf	postinc1,c
  1984  0140D8  0E01               	movlw	1
  1985  0140DA  6EE6               	movwf	postinc1,c
  1986  0140DC  0E01               	movlw	1
  1987  0140DE  6EE6               	movwf	postinc1,c
  1988  0140E0  ECD8  F0BC         	call	_StartTimer	;wreg free
  1989                           
  1990                           ;main.c: 201:    StartTimer(TMR_INFO, 3000);
  1991  0140E4  0EB8               	movlw	184
  1992  0140E6  6EE6               	movwf	postinc1,c
  1993  0140E8  0E0B               	movlw	11
  1994  0140EA  6EE6               	movwf	postinc1,c
  1995  0140EC  0E07               	movlw	7
  1996  0140EE  6EE6               	movwf	postinc1,c
  1997  0140F0  ECD8  F0BC         	call	_StartTimer	;wreg free
  1998                           
  1999                           ;main.c: 202:    StartTimer(TMR_FLIPPER, 1500);
  2000  0140F4  0EDC               	movlw	220
  2001  0140F6  6EE6               	movwf	postinc1,c
  2002  0140F8  0E05               	movlw	5
  2003  0140FA  6EE6               	movwf	postinc1,c
  2004  0140FC  0E0B               	movlw	11
  2005  0140FE  6EE6               	movwf	postinc1,c
  2006  014100  ECD8  F0BC         	call	_StartTimer	;wreg free
  2007                           
  2008                           ;main.c: 203:    StartTimer(TMR_HELPDIS, 3000);
  2009  014104  0EB8               	movlw	184
  2010  014106  6EE6               	movwf	postinc1,c
  2011  014108  0E0B               	movlw	11
  2012  01410A  6EE6               	movwf	postinc1,c
  2013  01410C  0E09               	movlw	9
  2014  01410E  6EE6               	movwf	postinc1,c
  2015  014110  ECD8  F0BC         	call	_StartTimer	;wreg free
  2016                           
  2017                           ;main.c: 205:    start_adc_scan();
  2018  014114  ECB1  F0B9         	call	_start_adc_scan	;wreg free
  2019                           
  2020                           ;main.c: 207:    break;
  2021  014118  D016               	goto	l10031
  2022  01411A                     l1249:
  2023                           
  2024                           ; BSR set to: 1
  2025                           ;main.c: 214:    V.ui_state = UI_STATE_INIT;
  2026  01411A  6B00               	clrf	_V& (0+255),b	;volatile
  2027                           
  2028                           ;main.c: 215:    break;
  2029  01411C  D014               	goto	l10031
  2030  01411E                     l10029:
  2031  01411E  0101               	movlb	1	; () banked
  2032  014120  5100               	movf	_V& (0+255),w,b	;volatile
  2033  014122  6E3F               	movwf	(btemp+10)^0,c
  2034  014124  6A40               	clrf	(btemp+11)^0,c
  2035                           
  2036                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2037                           ; Switch size 1, requested type "simple"
  2038                           ; Number of cases is 1, Range of values is 0 to 0
  2039                           ; switch strategies available:
  2040                           ; Name         Instructions Cycles
  2041                           ; simple_byte            4     3 (average)
  2042                           ;	Chosen strategy is simple_byte
  2043  014126  5040               	movf	(btemp+11)^0,w,c
  2044  014128  0A00               	xorlw	0	; case 0
  2045  01412A  A4D8               	btfss	status,2,c
  2046  01412C  D7F6               	goto	l1249
  2047                           
  2048                           ; BSR set to: 1
  2049                           ; Switch size 1, requested type "simple"
  2050                           ; Number of cases is 4, Range of values is 0 to 4
  2051                           ; switch strategies available:
  2052                           ; Name         Instructions Cycles
  2053                           ; simple_byte           13     7 (average)
  2054                           ;	Chosen strategy is simple_byte
  2055  01412E  503F               	movf	(btemp+10)^0,w,c
  2056  014130  0A00               	xorlw	0	; case 0
  2057  014132  B4D8               	btfsc	status,2,c
  2058  014134  D729               	goto	l9989
  2059  014136  0A01               	xorlw	1	; case 1
  2060  014138  B4D8               	btfsc	status,2,c
  2061  01413A  D005               	goto	l10031
  2062  01413C  0A02               	xorlw	2	; case 3
  2063  01413E  B4D8               	btfsc	status,2,c
  2064  014140  D002               	goto	l10031
  2065  014142  0A07               	xorlw	7	; case 4
  2066  014144  D7EA               	goto	l1249
  2067  014146                     l10031:
  2068                           
  2069                           ;main.c: 218:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2070  014146  0E01               	movlw	1
  2071  014148  6EE6               	movwf	postinc1,c
  2072  01414A  EC8B  F0BF         	call	_TimerDone	;wreg free
  2073  01414E  5035               	movf	btemp^0,w,c
  2074  014150  B4D8               	btfsc	status,2,c
  2075  014152  D013               	goto	l10043
  2076  014154  EC17  F0C1         	call	_check_adc_scan	;wreg free
  2077  014158  5035               	movf	btemp^0,w,c
  2078  01415A  B4D8               	btfsc	status,2,c
  2079  01415C  D00E               	goto	l10043
  2080                           
  2081                           ;main.c: 222:    convert_adc_data();
  2082  01415E  ECA4  F0B8         	call	_convert_adc_data	;wreg free
  2083                           
  2084                           ;main.c: 226:    clear_adc_scan();
  2085  014162  EC1F  F0C1         	call	_clear_adc_scan	;wreg free
  2086                           
  2087                           ; BSR set to: 0
  2088                           ;main.c: 227:    start_adc_scan();
  2089  014166  ECB1  F0B9         	call	_start_adc_scan	;wreg free
  2090                           
  2091                           ;main.c: 228:    StartTimer(TMR_ADC, 500);
  2092  01416A  0EF4               	movlw	244
  2093  01416C  6EE6               	movwf	postinc1,c
  2094  01416E  0E01               	movlw	1
  2095  014170  6EE6               	movwf	postinc1,c
  2096  014172  0E01               	movlw	1
  2097  014174  6EE6               	movwf	postinc1,c
  2098  014176  ECD8  F0BC         	call	_StartTimer	;wreg free
  2099  01417A                     l10043:
  2100                           
  2101                           ;main.c: 235:   if (TimerDone(TMR_DISPLAY)) {
  2102                           
  2103                           ;main.c: 231:   if (V.ticks) {
  2104  01417A  0E0A               	movlw	10
  2105  01417C  6EE6               	movwf	postinc1,c
  2106  01417E  EC8B  F0BF         	call	_TimerDone	;wreg free
  2107  014182  5035               	movf	btemp^0,w,c
  2108  014184  B4D8               	btfsc	status,2,c
  2109  014186  D06B               	goto	l10059
  2110                           
  2111                           ;main.c: 236:    if (TimerDone(TMR_HELPDIS)) {
  2112  014188  0E09               	movlw	9
  2113  01418A  6EE6               	movwf	postinc1,c
  2114  01418C  EC8B  F0BF         	call	_TimerDone	;wreg free
  2115  014190  5035               	movf	btemp^0,w,c
  2116  014192  B4D8               	btfsc	status,2,c
  2117  014194  D004               	goto	l10051
  2118                           
  2119                           ;main.c: 237:     set_display_info(DIS_STR);
  2120  014196  0E00               	movlw	0
  2121  014198  6EE6               	movwf	postinc1,c
  2122  01419A  EC00  F0C0         	call	_set_display_info	;wreg free
  2123  01419E                     l10051:
  2124                           
  2125                           ;main.c: 239:    sprintf(get_vterm_ptr(1, 0), "%d %2.2f   #", get_raw_result(C_BATT), C.
      +                          calc[C_BATT]);
  2126  01419E  0060  F803  FFE6   	movff	_C,postinc1
  2127  0141A4  0060  F807  FFE6   	movff	_C+1,postinc1
  2128  0141AA  0060  F80B  FFE6   	movff	_C+2,postinc1
  2129  0141B0  0060  F80F  FFE6   	movff	_C+3,postinc1
  2130  0141B6  0E00               	movlw	0
  2131  0141B8  6EE6               	movwf	postinc1,c
  2132  0141BA  ECF1  F0BF         	call	_get_raw_result	;wreg free
  2133  0141BE  0060  F0D7  FFE6   	movff	btemp,postinc1
  2134  0141C4  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2135  0141CA  0EB6               	movlw	low STR_9
  2136  0141CC  6EE6               	movwf	postinc1,c
  2137  0141CE  0EFF               	movlw	high STR_9
  2138  0141D0  6EE6               	movwf	postinc1,c
  2139  0141D2  0E00               	movlw	0
  2140  0141D4  6EE6               	movwf	postinc1,c
  2141  0141D6  0E01               	movlw	1
  2142  0141D8  6EE6               	movwf	postinc1,c
  2143  0141DA  ECE0  F0BD         	call	_get_vterm_ptr	;wreg free
  2144  0141DE  0060  F0D7  FFE6   	movff	btemp,postinc1
  2145  0141E4  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2146  0141EA  0E0A               	movlw	10
  2147  0141EC  6EE6               	movwf	postinc1,c
  2148  0141EE  ECE8  F0B2         	call	_sprintf	;wreg free
  2149                           
  2150                           ;main.c: 240:    sprintf(get_vterm_ptr(2, 0), "%d %2.2f   #", get_raw_result(V_CC), C.ca
      +                          lc[V_CC]);
  2151  0141F2  0060  F823  FFE6   	movff	_C+8,postinc1
  2152  0141F8  0060  F827  FFE6   	movff	_C+9,postinc1
  2153  0141FE  0060  F82B  FFE6   	movff	_C+10,postinc1
  2154  014204  0060  F82F  FFE6   	movff	_C+11,postinc1
  2155  01420A  0E02               	movlw	2
  2156  01420C  6EE6               	movwf	postinc1,c
  2157  01420E  ECF1  F0BF         	call	_get_raw_result	;wreg free
  2158  014212  0060  F0D7  FFE6   	movff	btemp,postinc1
  2159  014218  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2160  01421E  0EB6               	movlw	low STR_9
  2161  014220  6EE6               	movwf	postinc1,c
  2162  014222  0EFF               	movlw	high STR_9
  2163  014224  6EE6               	movwf	postinc1,c
  2164  014226  0E00               	movlw	0
  2165  014228  6EE6               	movwf	postinc1,c
  2166  01422A  0E02               	movlw	2
  2167  01422C  6EE6               	movwf	postinc1,c
  2168  01422E  ECE0  F0BD         	call	_get_vterm_ptr	;wreg free
  2169  014232  0060  F0D7  FFE6   	movff	btemp,postinc1
  2170  014238  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2171  01423E  0E0A               	movlw	10
  2172  014240  6EE6               	movwf	postinc1,c
  2173  014242  ECE8  F0B2         	call	_sprintf	;wreg free
  2174                           
  2175                           ;main.c: 241:    StartTimer(TMR_DISPLAY, 250);
  2176  014246  0EFA               	movlw	250
  2177  014248  6EE6               	movwf	postinc1,c
  2178  01424A  0E00               	movlw	0
  2179  01424C  6EE6               	movwf	postinc1,c
  2180  01424E  0E0A               	movlw	10
  2181  014250  6EE6               	movwf	postinc1,c
  2182  014252  ECD8  F0BC         	call	_StartTimer	;wreg free
  2183                           
  2184                           ;main.c: 242:    update_lcd(0);
  2185  014256  0E00               	movlw	0
  2186  014258  6EE6               	movwf	postinc1,c
  2187  01425A  EC61  F0B2         	call	_update_lcd	;wreg free
  2188  01425E                     l10059:
  2189                           
  2190                           ;main.c: 248:   check_help(V.flipper);
  2191  01425E  0101               	movlb	1	; () banked
  2192  014260  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  2193  014262  6EE6               	movwf	postinc1,c
  2194  014264  EC77  F0A9         	call	_check_help	;wreg free
  2195                           
  2196                           ;main.c: 253:   if (V.set_sequ) {
  2197  014268  0101               	movlb	1	; () banked
  2198  01426A  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  2199  01426C  D758               	goto	l10029
  2200                           
  2201                           ; BSR set to: 1
  2202                           ;main.c: 254:    if (TimerDone(TMR_INFO)) {
  2203  01426E  0E07               	movlw	7
  2204  014270  6EE6               	movwf	postinc1,c
  2205  014272  EC8B  F0BF         	call	_TimerDone	;wreg free
  2206  014276  5035               	movf	btemp^0,w,c
  2207  014278  B4D8               	btfsc	status,2,c
  2208  01427A  D00B               	goto	l10071
  2209                           
  2210                           ;main.c: 255:     V.set_sequ = 0;
  2211  01427C  0101               	movlb	1	; () banked
  2212  01427E  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  2213                           
  2214                           ; BSR set to: 1
  2215                           ;main.c: 256:     set_vterm(0);
  2216  014280  0E00               	movlw	0
  2217  014282  6EE6               	movwf	postinc1,c
  2218  014284  EC4A  F0C0         	call	_set_vterm	;wreg free
  2219                           
  2220                           ; BSR set to: 4
  2221                           ;main.c: 257:     update_lcd(0);
  2222  014288  0E00               	movlw	0
  2223  01428A  6EE6               	movwf	postinc1,c
  2224  01428C  EC61  F0B2         	call	_update_lcd	;wreg free
  2225                           
  2226                           ;main.c: 258:    } else {
  2227  014290  D746               	goto	l10029
  2228  014292                     l10071:
  2229                           
  2230                           ;main.c: 259:     set_vterm(2);
  2231  014292  0E02               	movlw	2
  2232  014294  6EE6               	movwf	postinc1,c
  2233  014296  EC4A  F0C0         	call	_set_vterm	;wreg free
  2234                           
  2235                           ; BSR set to: 4
  2236                           ;main.c: 260:     update_lcd(2);
  2237  01429A  0E02               	movlw	2
  2238  01429C  6EE6               	movwf	postinc1,c
  2239  01429E  EC61  F0B2         	call	_update_lcd	;wreg free
  2240  0142A2  D73D               	goto	l10029
  2241  0142A4                     __end_of_main:
  2242                           	opt callstack 0
  2243                           
  2244 ;; *************** function _start_adc_scan *****************
  2245 ;; Defined at:
  2246 ;;		line 33 in file "daq.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;		None
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;		None
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  1  [STACK] _Bool 
  2253 ;; Registers used:
  2254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/4
  2257 ;;		On exit  : 1/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2264 ;;Total ram usage:        0 bytes
  2265 ;; Hardware stack levels used:    1
  2266 ;; Hardware stack levels required when called:    7
  2267 ;; This function calls:
  2268 ;;		_ADCC_SetADIInterruptHandler
  2269 ;;		_ADCC_SetADTIInterruptHandler
  2270 ;;		_ADCC_StartConversion
  2271 ;; This function is called by:
  2272 ;;		_main
  2273 ;; This function uses a reentrant model
  2274 ;;
  2275                           
  2276                           	psect	text1
  2277  017362                     __ptext1:
  2278                           	opt callstack 0
  2279  017362                     _start_adc_scan:
  2280                           	opt callstack 23
  2281                           
  2282                           ;daq.c: 35:  if (R.done)
  2283                           
  2284                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2285                           ;incstack = 0
  2286  017362  0100               	movlb	0	; () banked
  2287  017364  518B               	movf	(_R+43)& (0+255),w,b	;volatile
  2288  017366  A4D8               	btfss	status,2,c
  2289  017368  0012               	return	
  2290                           
  2291                           ; BSR set to: 0
  2292                           ;daq.c: 38:  R.scan_index = 0;
  2293  01736A  6B88               	clrf	(_R+40)& (0+255),b	;volatile
  2294                           
  2295                           ; BSR set to: 0
  2296                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  2297  01736C  013A               	movlb	58	; () banked
  2298  01736E  5140               	movf	64,w,b	;volatile
  2299  017370  006E F940  F035    	movff	14928,btemp	;volatile
  2300  017376  6A36               	clrf	(btemp+1)^0,c
  2301  017378  0060  F0D4  F036   	movff	btemp,btemp+1
  2302  01737E  6A35               	clrf	btemp^0,c
  2303  017380  2635               	addwf	btemp^0,f,c
  2304  017382  0E00               	movlw	0
  2305  017384  2236               	addwfc	(btemp+1)^0,f,c
  2306  017386  0E77               	movlw	119
  2307  017388  1435               	andwf	btemp^0,w,c
  2308  01738A  0100               	movlb	0	; () banked
  2309  01738C  6F89               	movwf	(_R+41)& (0+255),b	;volatile
  2310  01738E  0E3C               	movlw	60
  2311  017390  1436               	andwf	(btemp+1)^0,w,c
  2312  017392  6F8A               	movwf	(_R+42)& (0+255),b	;volatile
  2313                           
  2314                           ; BSR set to: 0
  2315                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  2316  017394  0E1E               	movlw	low _adc_int_handler
  2317  017396  6EE6               	movwf	postinc1,c
  2318  017398  0E80               	movlw	high _adc_int_handler
  2319  01739A  6EE6               	movwf	postinc1,c
  2320  01739C  0E01               	movlw	low (_adc_int_handler shr (0+16))
  2321  01739E  6EE6               	movwf	postinc1,c
  2322  0173A0  EC28  F0BF         	call	_ADCC_SetADIInterruptHandler	;wreg free
  2323                           
  2324                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  2325  0173A4  0E00               	movlw	low _adc_int_t_handler
  2326  0173A6  6EE6               	movwf	postinc1,c
  2327  0173A8  0E6E               	movlw	high _adc_int_t_handler
  2328  0173AA  6EE6               	movwf	postinc1,c
  2329  0173AC  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  2330  0173AE  6EE6               	movwf	postinc1,c
  2331  0173B0  EC14  F0BF         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  2332                           
  2333                           ;daq.c: 42:  ADCC_StartConversion(R.scan_index & 0xf);
  2334  0173B4  0100               	movlb	0	; () banked
  2335  0173B6  5188               	movf	(_R+40)& (0+255),w,b	;volatile
  2336  0173B8  0B0F               	andlw	15
  2337  0173BA  6EE6               	movwf	postinc1,c
  2338  0173BC  ECC2  F0C0         	call	_ADCC_StartConversion	;wreg free
  2339                           
  2340                           ; BSR set to: 62
  2341  0173C0  82BE               	bsf	190,1,c	;volatile
  2342                           
  2343                           ; BSR set to: 62
  2344  0173C2  84BE               	bsf	190,2,c	;volatile
  2345                           
  2346                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  2347  0173C4  0012               	return		;funcret
  2348  0173C6                     __end_of_start_adc_scan:
  2349                           	opt callstack 0
  2350                           
  2351 ;; *************** function _ADCC_StartConversion *****************
  2352 ;; Defined at:
  2353 ;;		line 128 in file "mcc_generated_files/adcc.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;  channel         1  [STACK] enum E16136
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;		None
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  1  [STACK] void 
  2360 ;; Registers used:
  2361 ;;		fsr1l, fsr1h
  2362 ;; Tracked objects:
  2363 ;;		On entry : 3F/0
  2364 ;;		On exit  : 3F/3E
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2371 ;;Total ram usage:        0 bytes
  2372 ;; Hardware stack levels used:    1
  2373 ;; Hardware stack levels required when called:    6
  2374 ;; This function calls:
  2375 ;;		Nothing
  2376 ;; This function is called by:
  2377 ;;		_start_adc_scan
  2378 ;;		_adc_int_t_handler
  2379 ;; This function uses a reentrant model
  2380 ;;
  2381                           
  2382                           	psect	text2
  2383  018184                     __ptext2:
  2384                           	opt callstack 0
  2385  018184                     _ADCC_StartConversion:
  2386                           	opt callstack 6
  2387                           
  2388                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  2389                           ;stkvar	_channel @ sp[(0)+-1]
  2390                           
  2391                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2392                           ;incstack = 0
  2393  018184  0EFF               	movlw	-1
  2394  018186  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  2395                           
  2396                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  2397  01818C  013E               	movlb	62	; () banked
  2398  01818E  8FF8               	bsf	248,7,b	;volatile
  2399                           
  2400                           ; BSR set to: 62
  2401                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  2402  018190  81F8               	bsf	248,0,b	;volatile
  2403                           
  2404                           ; BSR set to: 62
  2405                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  2406  018192  52E5               	movf	postdec1,f,c
  2407  018194  0012               	return		;funcret
  2408  018196                     __end_of_ADCC_StartConversion:
  2409                           	opt callstack 0
  2410                           
  2411 ;; *************** function _srand *****************
  2412 ;; Defined at:
  2413 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  2414 ;; Parameters:    Size  Location     Type
  2415 ;;  s               2  [STACK] unsigned int 
  2416 ;; Auto vars:     Size  Location     Type
  2417 ;;		None
  2418 ;; Return value:  Size  Location     Type
  2419 ;;                  1  [STACK] void 
  2420 ;; Registers used:
  2421 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  2422 ;; Tracked objects:
  2423 ;;		On entry : 3F/0
  2424 ;;		On exit  : 3F/0
  2425 ;;		Unchanged: 0/0
  2426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2431 ;;Total ram usage:        0 bytes
  2432 ;; Hardware stack levels used:    1
  2433 ;; Hardware stack levels required when called:    6
  2434 ;; This function calls:
  2435 ;;		Nothing
  2436 ;; This function is called by:
  2437 ;;		_main
  2438 ;; This function uses a reentrant model
  2439 ;;
  2440                           
  2441                           	psect	text3
  2442  017AC8                     __ptext3:
  2443                           	opt callstack 0
  2444  017AC8                     _srand:
  2445                           	opt callstack 24
  2446                           
  2447                           ;stkvar	_s @ sp[(0)+-2]
  2448                           
  2449                           ; BSR set to: 62
  2450                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2451                           ;incstack = 0
  2452  017AC8  0EFE               	movlw	-2
  2453  017ACA  50E3               	movf	plusw1,w,c
  2454  017ACC  0FFF               	addlw	255
  2455  017ACE  6E3F               	movwf	(btemp+10)^0,c
  2456  017AD0  0EFF               	movlw	-1
  2457  017AD2  006F FF8C  F040    	movff	plusw1,btemp+11
  2458  017AD8  0EFF               	movlw	255
  2459  017ADA  2240               	addwfc	(btemp+11)^0,f,c
  2460  017ADC  0060  F0FC  F0D6   	movff	btemp+10,_seed
  2461  017AE2  0060  F100  F0D7   	movff	btemp+11,_seed+1
  2462  017AE8  0100               	movlb	0	; () banked
  2463  017AEA  6BD8               	clrf	(_seed+2)& (0+255),b
  2464  017AEC  6BD9               	clrf	(_seed+3)& (0+255),b
  2465  017AEE  6BDA               	clrf	(_seed+4)& (0+255),b
  2466  017AF0  6BDB               	clrf	(_seed+5)& (0+255),b
  2467  017AF2  6BDC               	clrf	(_seed+6)& (0+255),b
  2468  017AF4  6BDD               	clrf	(_seed+7)& (0+255),b
  2469                           
  2470                           ; BSR set to: 0
  2471                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  2472  017AF6  52E5               	movf	postdec1,f,c
  2473  017AF8  52E5               	movf	postdec1,f,c
  2474  017AFA  0012               	return		;funcret
  2475  017AFC                     __end_of_srand:
  2476                           	opt callstack 0
  2477                           
  2478 ;; *************** function _init_display *****************
  2479 ;; Defined at:
  2480 ;;		line 37 in file "eadog.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;		None
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;		None
  2485 ;; Return value:  Size  Location     Type
  2486 ;;                  1  [STACK] void 
  2487 ;; Registers used:
  2488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/1
  2491 ;;		On exit  : 3F/3D
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2498 ;;Total ram usage:        0 bytes
  2499 ;; Hardware stack levels used:    1
  2500 ;; Hardware stack levels required when called:    8
  2501 ;; This function calls:
  2502 ;;		_ringBufS_init
  2503 ;;		_send_lcd_cmd
  2504 ;;		_send_lcd_cmd_long
  2505 ;;		_wdtdelay
  2506 ;; This function is called by:
  2507 ;;		_main
  2508 ;; This function uses a reentrant model
  2509 ;;
  2510                           
  2511                           	psect	text4
  2512  0166DA                     __ptext4:
  2513                           	opt callstack 0
  2514  0166DA                     _init_display:
  2515                           	opt callstack 22
  2516                           
  2517                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  2518                           
  2519                           ; BSR set to: 0
  2520                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2521                           ;incstack = 0
  2522  0166DA  0E83               	movlw	low _ring_buf1
  2523  0166DC  0100               	movlb	0	; () banked
  2524  0166DE  6FC1               	movwf	(_spi_link+6)& (0+255),b	;volatile
  2525  0166E0  0E03               	movlw	high _ring_buf1
  2526  0166E2  6FC2               	movwf	(_spi_link+7)& (0+255),b	;volatile
  2527                           
  2528                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  2529  0166E4  0E40               	movlw	low _ring_buf2
  2530  0166E6  6FBF               	movwf	(_spi_link+4)& (0+255),b	;volatile
  2531  0166E8  0E03               	movlw	high _ring_buf2
  2532  0166EA  6FC0               	movwf	(_spi_link+5)& (0+255),b	;volatile
  2533                           
  2534                           ; BSR set to: 0
  2535                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  2536  0166EC  0060  F307  FFE6   	movff	_spi_link+6,postinc1
  2537  0166F2  0060  F30B  FFE6   	movff	_spi_link+7,postinc1
  2538  0166F8  EC60  F0BE         	call	_ringBufS_init	;wreg free
  2539                           
  2540                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  2541  0166FC  0060  F2FF  FFE6   	movff	_spi_link+4,postinc1
  2542  016702  0060  F303  FFE6   	movff	_spi_link+5,postinc1
  2543  016708  EC60  F0BE         	call	_ringBufS_init	;wreg free
  2544                           
  2545                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  2546  01670C  84BE               	bsf	190,2,c	;volatile
  2547  01670E  84BC               	bsf	188,2,c	;volatile
  2548                           
  2549                           ;eadog.c: 46:  wdtdelay(350000);
  2550  016710  0E30               	movlw	48
  2551  016712  6EE6               	movwf	postinc1,c
  2552  016714  0E57               	movlw	87
  2553  016716  6EE6               	movwf	postinc1,c
  2554  016718  0E05               	movlw	5
  2555  01671A  6EE6               	movwf	postinc1,c
  2556  01671C  0E00               	movlw	0
  2557  01671E  6EE6               	movwf	postinc1,c
  2558  016720  ECD4  F0BA         	call	_wdtdelay	;wreg free
  2559                           
  2560                           ; BSR set to: 0
  2561                           ;eadog.c: 47:  send_lcd_cmd(0x39);
  2562  016724  0E39               	movlw	57
  2563  016726  6EE6               	movwf	postinc1,c
  2564  016728  EC4C  F0BE         	call	_send_lcd_cmd	;wreg free
  2565                           
  2566                           ; BSR set to: 0
  2567                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
  2568  01672C  0E1D               	movlw	29
  2569  01672E  6EE6               	movwf	postinc1,c
  2570  016730  EC4C  F0BE         	call	_send_lcd_cmd	;wreg free
  2571                           
  2572                           ; BSR set to: 0
  2573                           ;eadog.c: 49:  send_lcd_cmd(0x50);
  2574  016734  0E50               	movlw	80
  2575  016736  6EE6               	movwf	postinc1,c
  2576  016738  EC4C  F0BE         	call	_send_lcd_cmd	;wreg free
  2577                           
  2578                           ; BSR set to: 0
  2579                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
  2580  01673C  0E6C               	movlw	108
  2581  01673E  6EE6               	movwf	postinc1,c
  2582  016740  EC4C  F0BE         	call	_send_lcd_cmd	;wreg free
  2583                           
  2584                           ; BSR set to: 0
  2585                           ;eadog.c: 51:  send_lcd_cmd(0x76);
  2586  016744  0E76               	movlw	118
  2587  016746  6EE6               	movwf	postinc1,c
  2588  016748  EC4C  F0BE         	call	_send_lcd_cmd	;wreg free
  2589                           
  2590                           ; BSR set to: 0
  2591                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
  2592  01674C  0E38               	movlw	56
  2593  01674E  6EE6               	movwf	postinc1,c
  2594  016750  EC38  F0BE         	call	_send_lcd_cmd_long	;wreg free
  2595                           
  2596                           ; BSR set to: 0
  2597                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
  2598  016754  0E0F               	movlw	15
  2599  016756  6EE6               	movwf	postinc1,c
  2600  016758  EC4C  F0BE         	call	_send_lcd_cmd	;wreg free
  2601                           
  2602                           ; BSR set to: 0
  2603                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
  2604  01675C  0E01               	movlw	1
  2605  01675E  6EE6               	movwf	postinc1,c
  2606  016760  EC38  F0BE         	call	_send_lcd_cmd_long	;wreg free
  2607                           
  2608                           ; BSR set to: 0
  2609                           ;eadog.c: 55:  send_lcd_cmd(0x02);
  2610  016764  0E02               	movlw	2
  2611  016766  6EE6               	movwf	postinc1,c
  2612  016768  EC4C  F0BE         	call	_send_lcd_cmd	;wreg free
  2613                           
  2614                           ; BSR set to: 0
  2615                           ;eadog.c: 56:  send_lcd_cmd(0x06);
  2616  01676C  0E06               	movlw	6
  2617  01676E  6EE6               	movwf	postinc1,c
  2618  016770  EC4C  F0BE         	call	_send_lcd_cmd	;wreg free
  2619                           
  2620                           ; BSR set to: 0
  2621                           ;eadog.c: 57:  wdtdelay(30);
  2622  016774  0E1E               	movlw	30
  2623  016776  6EE6               	movwf	postinc1,c
  2624  016778  0E00               	movlw	0
  2625  01677A  6EE6               	movwf	postinc1,c
  2626  01677C  0E00               	movlw	0
  2627  01677E  6EE6               	movwf	postinc1,c
  2628  016780  0E00               	movlw	0
  2629  016782  6EE6               	movwf	postinc1,c
  2630  016784  ECD4  F0BA         	call	_wdtdelay	;wreg free
  2631                           
  2632                           ; BSR set to: 0
  2633                           ;eadog.c: 58:  SPI1CON2 = 0x02;
  2634  016788  0E02               	movlw	2
  2635  01678A  013D               	movlb	61	; () banked
  2636  01678C  6F16               	movwf	22,b	;volatile
  2637                           
  2638                           ; BSR set to: 61
  2639                           ;eadog.c: 59:  SPI1CON1 = 0x40;
  2640  01678E  0E40               	movlw	64
  2641  016790  6F15               	movwf	21,b	;volatile
  2642                           
  2643                           ; BSR set to: 61
  2644                           ;eadog.c: 60:  SPI1CON0 = 0x83;
  2645  016792  0E83               	movlw	131
  2646  016794  6F14               	movwf	20,b	;volatile
  2647                           
  2648                           ; BSR set to: 61
  2649                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
  2650  016796  931A               	bcf	26,1,b	;volatile
  2651                           
  2652                           ; BSR set to: 61
  2653                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
  2654  016798  0E3F               	movlw	-193
  2655  01679A  013B               	movlb	59	; () banked
  2656  01679C  17FD               	andwf	253,f,b	;volatile
  2657                           
  2658                           ; BSR set to: 59
  2659                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
  2660  01679E  9BFD               	bcf	253,5,b	;volatile
  2661                           
  2662                           ; BSR set to: 59
  2663                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
  2664  0167A0  51FD               	movf	253,w,b	;volatile
  2665  0167A2  0BF9               	andlw	-7
  2666  0167A4  0902               	iorlw	2
  2667  0167A6  6FFD               	movwf	253,b	;volatile
  2668                           
  2669                           ; BSR set to: 59
  2670                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
  2671  0167A8  0EE7               	movlw	-25
  2672  0167AA  17FD               	andwf	253,f,b	;volatile
  2673                           
  2674                           ; BSR set to: 59
  2675                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
  2676  0167AC  81FD               	bsf	253,0,b	;volatile
  2677                           
  2678                           ; BSR set to: 59
  2679                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
  2680  0167AE  0E83               	movlw	low _ring_buf1
  2681  0167B0  6FF9               	movwf	249,b	;volatile
  2682  0167B2  0E03               	movlw	high _ring_buf1
  2683  0167B4  6FFA               	movwf	250,b	;volatile
  2684  0167B6  0E00               	movlw	low (_ring_buf1 shr (0+16))
  2685  0167B8  6FFB               	movwf	251,b	;volatile
  2686                           
  2687                           ; BSR set to: 59
  2688                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
  2689  0167BA  9BFC               	bcf	252,5,b	;volatile
  2690                           
  2691                           ; BSR set to: 59
  2692                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
  2693  0167BC  013D               	movlb	61	; () banked
  2694  0167BE  831A               	bsf	26,1,b	;volatile
  2695                           
  2696                           ; BSR set to: 61
  2697                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
  2698  0167C0  94BE               	bcf	190,2,c	;volatile
  2699                           
  2700                           ; BSR set to: 61
  2701                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  2702  0167C2  0012               	return		;funcret
  2703  0167C4                     __end_of_init_display:
  2704                           	opt callstack 0
  2705                           
  2706 ;; *************** function _send_lcd_cmd_long *****************
  2707 ;; Defined at:
  2708 ;;		line 114 in file "eadog.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;  cmd             1  [STACK] const unsigned char 
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;		None
  2713 ;; Return value:  Size  Location     Type
  2714 ;;                  1  [STACK] void 
  2715 ;; Registers used:
  2716 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  2717 ;; Tracked objects:
  2718 ;;		On entry : 3F/0
  2719 ;;		On exit  : 3F/0
  2720 ;;		Unchanged: 0/0
  2721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2726 ;;Total ram usage:        0 bytes
  2727 ;; Hardware stack levels used:    1
  2728 ;; Hardware stack levels required when called:    7
  2729 ;; This function calls:
  2730 ;;		_SPI1_Exchange8bit
  2731 ;;		_wdtdelay
  2732 ;; This function is called by:
  2733 ;;		_init_display
  2734 ;; This function uses a reentrant model
  2735 ;;
  2736                           
  2737                           	psect	text5
  2738  017C70                     __ptext5:
  2739                           	opt callstack 0
  2740  017C70                     _send_lcd_cmd_long:
  2741                           	opt callstack 22
  2742                           
  2743                           ; BSR set to: 61
  2744                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2745                           ;incstack = 0
  2746                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
  2747  017C70  92BC               	bcf	188,1,c	;volatile
  2748                           
  2749                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
  2750  017C72  94BC               	bcf	188,2,c	;volatile
  2751                           
  2752                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
  2753                           ;stkvar	_cmd @ sp[(0)+-1]
  2754  017C74  0EFF               	movlw	-1
  2755  017C76  50E3               	movf	plusw1,w,c
  2756  017C78  6EE6               	movwf	postinc1,c
  2757  017C7A  ECE2  F0BF         	call	_SPI1_Exchange8bit	;wreg free
  2758                           
  2759                           ; BSR set to: 57
  2760                           ;eadog.c: 119:  wdtdelay(800);
  2761  017C7E  0E20               	movlw	32
  2762  017C80  6EE6               	movwf	postinc1,c
  2763  017C82  0E03               	movlw	3
  2764  017C84  6EE6               	movwf	postinc1,c
  2765  017C86  0E00               	movlw	0
  2766  017C88  6EE6               	movwf	postinc1,c
  2767  017C8A  0E00               	movlw	0
  2768  017C8C  6EE6               	movwf	postinc1,c
  2769  017C8E  ECD4  F0BA         	call	_wdtdelay	;wreg free
  2770                           
  2771                           ; BSR set to: 0
  2772  017C92  82BC               	bsf	188,1,c	;volatile
  2773                           
  2774                           ; BSR set to: 0
  2775                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  2776  017C94  52E5               	movf	postdec1,f,c
  2777  017C96  0012               	return		;funcret
  2778  017C98                     __end_of_send_lcd_cmd_long:
  2779                           	opt callstack 0
  2780                           
  2781 ;; *************** function _send_lcd_cmd *****************
  2782 ;; Defined at:
  2783 ;;		line 102 in file "eadog.c"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;  cmd             1  [STACK] const unsigned char 
  2786 ;; Auto vars:     Size  Location     Type
  2787 ;;		None
  2788 ;; Return value:  Size  Location     Type
  2789 ;;                  1  [STACK] void 
  2790 ;; Registers used:
  2791 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  2792 ;; Tracked objects:
  2793 ;;		On entry : 3F/0
  2794 ;;		On exit  : 3F/0
  2795 ;;		Unchanged: 0/0
  2796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2801 ;;Total ram usage:        0 bytes
  2802 ;; Hardware stack levels used:    1
  2803 ;; Hardware stack levels required when called:    7
  2804 ;; This function calls:
  2805 ;;		_SPI1_Exchange8bit
  2806 ;;		_wdtdelay
  2807 ;; This function is called by:
  2808 ;;		_init_display
  2809 ;; This function uses a reentrant model
  2810 ;;
  2811                           
  2812                           	psect	text6
  2813  017C98                     __ptext6:
  2814                           	opt callstack 0
  2815  017C98                     _send_lcd_cmd:
  2816                           	opt callstack 22
  2817                           
  2818                           ; BSR set to: 0
  2819                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2820                           ;incstack = 0
  2821                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  2822  017C98  92BC               	bcf	188,1,c	;volatile
  2823                           
  2824                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
  2825  017C9A  94BC               	bcf	188,2,c	;volatile
  2826                           
  2827                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
  2828                           ;stkvar	_cmd @ sp[(0)+-1]
  2829  017C9C  0EFF               	movlw	-1
  2830  017C9E  50E3               	movf	plusw1,w,c
  2831  017CA0  6EE6               	movwf	postinc1,c
  2832  017CA2  ECE2  F0BF         	call	_SPI1_Exchange8bit	;wreg free
  2833                           
  2834                           ; BSR set to: 57
  2835                           ;eadog.c: 107:  wdtdelay(30);
  2836  017CA6  0E1E               	movlw	30
  2837  017CA8  6EE6               	movwf	postinc1,c
  2838  017CAA  0E00               	movlw	0
  2839  017CAC  6EE6               	movwf	postinc1,c
  2840  017CAE  0E00               	movlw	0
  2841  017CB0  6EE6               	movwf	postinc1,c
  2842  017CB2  0E00               	movlw	0
  2843  017CB4  6EE6               	movwf	postinc1,c
  2844  017CB6  ECD4  F0BA         	call	_wdtdelay	;wreg free
  2845                           
  2846                           ; BSR set to: 0
  2847  017CBA  82BC               	bsf	188,1,c	;volatile
  2848                           
  2849                           ; BSR set to: 0
  2850                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  2851  017CBC  52E5               	movf	postdec1,f,c
  2852  017CBE  0012               	return		;funcret
  2853  017CC0                     __end_of_send_lcd_cmd:
  2854                           	opt callstack 0
  2855                           
  2856 ;; *************** function _SPI1_Exchange8bit *****************
  2857 ;; Defined at:
  2858 ;;		line 79 in file "mcc_generated_files/spi1.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;  data            1  [STACK] unsigned char 
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;		None
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  1  [STACK] unsigned char 
  2865 ;; Registers used:
  2866 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 3F/39
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2876 ;;Total ram usage:        0 bytes
  2877 ;; Hardware stack levels used:    1
  2878 ;; Hardware stack levels required when called:    6
  2879 ;; This function calls:
  2880 ;;		Nothing
  2881 ;; This function is called by:
  2882 ;;		_send_lcd_cmd
  2883 ;;		_send_lcd_cmd_long
  2884 ;; This function uses a reentrant model
  2885 ;;
  2886                           
  2887                           	psect	text7
  2888  017FC4                     __ptext7:
  2889                           	opt callstack 0
  2890  017FC4                     _SPI1_Exchange8bit:
  2891                           	opt callstack 22
  2892                           
  2893                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  2894                           
  2895                           ; BSR set to: 0
  2896                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2897                           ;incstack = 0
  2898  017FC4  0E01               	movlw	1
  2899  017FC6  013D               	movlb	61	; () banked
  2900  017FC8  6F12               	movwf	18,b	;volatile
  2901                           
  2902                           ; BSR set to: 61
  2903                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  2904                           ;stkvar	_data @ sp[(0)+-1]
  2905  017FCA  0EFF               	movlw	-1
  2906  017FCC  006F FF8F FD11     	movff	plusw1,15633	;volatile
  2907  017FD2                     l835:
  2908                           
  2909                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  2910  017FD2  0139               	movlb	57	; () banked
  2911  017FD4  A9A2               	btfss	162,4,b	;volatile
  2912  017FD6  D7FD               	goto	l835
  2913                           
  2914                           ; BSR set to: 57
  2915                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  2916  017FD8  006F F440  F035    	movff	15632,btemp	;volatile
  2917                           
  2918                           ; BSR set to: 57
  2919                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  2920  017FDE  52E5               	movf	postdec1,f,c
  2921  017FE0  0012               	return		;funcret
  2922  017FE2                     __end_of_SPI1_Exchange8bit:
  2923                           	opt callstack 0
  2924                           
  2925 ;; *************** function _ringBufS_init *****************
  2926 ;; Defined at:
  2927 ;;		line 22 in file "ringbufs.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;  _this           2  [STACK] PTR volatile struct ring
  2930 ;;		 -> ring_buf2(67), ring_buf1(67), 
  2931 ;; Auto vars:     Size  Location     Type
  2932 ;;		None
  2933 ;; Return value:  Size  Location     Type
  2934 ;;                  1  [STACK] void 
  2935 ;; Registers used:
  2936 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  2937 ;; Tracked objects:
  2938 ;;		On entry : 0/0
  2939 ;;		On exit  : 0/0
  2940 ;;		Unchanged: 0/0
  2941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2946 ;;Total ram usage:        0 bytes
  2947 ;; Hardware stack levels used:    1
  2948 ;; Hardware stack levels required when called:    7
  2949 ;; This function calls:
  2950 ;;		_memset
  2951 ;; This function is called by:
  2952 ;;		_init_display
  2953 ;; This function uses a reentrant model
  2954 ;;
  2955                           
  2956                           	psect	text8
  2957  017CC0                     __ptext8:
  2958                           	opt callstack 0
  2959  017CC0                     _ringBufS_init:
  2960                           	opt callstack 22
  2961                           
  2962                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  2963                           
  2964                           ; BSR set to: 57
  2965                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2966                           ;incstack = 0
  2967  017CC0  0E43               	movlw	67
  2968  017CC2  6EE6               	movwf	postinc1,c
  2969  017CC4  0E00               	movlw	0
  2970  017CC6  6EE6               	movwf	postinc1,c
  2971  017CC8  0E00               	movlw	0
  2972  017CCA  6EE6               	movwf	postinc1,c
  2973  017CCC  0E00               	movlw	0
  2974  017CCE  6EE6               	movwf	postinc1,c
  2975                           
  2976                           ;stkvar	__this @ sp[(-4)+-2]
  2977  017CD0  0EFA               	movlw	-6
  2978  017CD2  006F FF8F FFE6     	movff	plusw1,postinc1
  2979  017CD8  006F FF8F FFE6     	movff	plusw1,postinc1
  2980  017CDE  EC08  F0A3         	call	_memset	;wreg free
  2981                           
  2982                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  2983  017CE2  52E5               	movf	postdec1,f,c
  2984  017CE4  52E5               	movf	postdec1,f,c
  2985  017CE6  0012               	return		;funcret
  2986  017CE8                     __end_of_ringBufS_init:
  2987                           	opt callstack 0
  2988                           
  2989 ;; *************** function _eaDogM_WriteCommand *****************
  2990 ;; Defined at:
  2991 ;;		line 160 in file "eadog.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;  cmd             1  [STACK] const unsigned char 
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;		None
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  1  [STACK] void 
  2998 ;; Registers used:
  2999 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3000 ;; Tracked objects:
  3001 ;;		On entry : 3F/3D
  3002 ;;		On exit  : 3F/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3009 ;;Total ram usage:        0 bytes
  3010 ;; Hardware stack levels used:    1
  3011 ;; Hardware stack levels required when called:   16
  3012 ;; This function calls:
  3013 ;;		_send_lcd_cmd_dma
  3014 ;; This function is called by:
  3015 ;;		_main
  3016 ;; This function uses a reentrant model
  3017 ;;
  3018                           
  3019                           	psect	text9
  3020  0181A6                     __ptext9:
  3021                           	opt callstack 0
  3022  0181A6                     _eaDogM_WriteCommand:
  3023                           	opt callstack 14
  3024                           
  3025                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
  3026                           ;stkvar	_cmd @ sp[(0)+-1]
  3027                           
  3028                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3029                           ;incstack = 0
  3030  0181A6  0EFF               	movlw	-1
  3031  0181A8  50E3               	movf	plusw1,w,c
  3032  0181AA  6EE6               	movwf	postinc1,c
  3033  0181AC  EC2E  F0BB         	call	_send_lcd_cmd_dma	;wreg free
  3034                           
  3035                           ; BSR set to: 0
  3036                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  3037  0181B0  52E5               	movf	postdec1,f,c
  3038  0181B2  0012               	return		;funcret
  3039  0181B4                     __end_of_eaDogM_WriteCommand:
  3040                           	opt callstack 0
  3041                           
  3042 ;; *************** function _convert_adc_data *****************
  3043 ;; Defined at:
  3044 ;;		line 31 in file "mbmc.c"
  3045 ;; Parameters:    Size  Location     Type
  3046 ;;		None
  3047 ;; Auto vars:     Size  Location     Type
  3048 ;;  i               1  [STACK] unsigned char 
  3049 ;; Return value:  Size  Location     Type
  3050 ;;                  1  [STACK] void 
  3051 ;; Registers used:
  3052 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3053 ;; Tracked objects:
  3054 ;;		On entry : 0/4
  3055 ;;		On exit  : 0/0
  3056 ;;		Unchanged: 0/0
  3057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3062 ;;Total ram usage:        0 bytes
  3063 ;; Hardware stack levels used:    1
  3064 ;; Hardware stack levels required when called:    9
  3065 ;; This function calls:
  3066 ;;		_conv_raw_result
  3067 ;;		_lp_filter
  3068 ;; This function is called by:
  3069 ;;		_main
  3070 ;; This function uses a reentrant model
  3071 ;;
  3072                           
  3073                           	psect	text10
  3074  017148                     __ptext10:
  3075                           	opt callstack 0
  3076  017148                     _convert_adc_data:
  3077                           	opt callstack 0
  3078                           
  3079                           ; BSR set to: 0
  3080                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3081  017148  52E6               	movf	postinc1,f,c
  3082                           
  3083                           ;mbmc.c: 33:  uint8_t i;;mbmc.c: 35:  for (i = 0; i < 16; i++) {
  3084                           ;stkvar	_i @ sp[(-1)+0]
  3085                           
  3086                           ;incstack = 0
  3087  01714A  0EFF               	movlw	-1
  3088  01714C  6AE3               	clrf	plusw1,c
  3089  01714E                     l8641:
  3090                           
  3091                           ;mbmc.c: 36:   C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  3092  01714E  0E00               	movlw	0
  3093  017150  6EE6               	movwf	postinc1,c
  3094                           
  3095                           ;stkvar	_i @ sp[(-2)+0]
  3096  017152  0EFE               	movlw	-2
  3097  017154  50E3               	movf	plusw1,w,c
  3098  017156  6EE6               	movwf	postinc1,c
  3099  017158  0E00               	movlw	0
  3100  01715A  6EE6               	movwf	postinc1,c
  3101                           
  3102                           ;stkvar	_i @ sp[(-4)+0]
  3103  01715C  0EFC               	movlw	-4
  3104  01715E  50E3               	movf	plusw1,w,c
  3105  017160  6EE6               	movwf	postinc1,c
  3106  017162  ECB1  F09B         	call	_conv_raw_result	;wreg free
  3107  017166  0060  F0D7  FFE6   	movff	btemp,postinc1
  3108  01716C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3109  017172  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3110  017178  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3111  01717E  EC66  F0AC         	call	_lp_filter	;wreg free
  3112                           
  3113                           ;stkvar	_i @ sp[(-1)+0]
  3114  017182  0EFF               	movlw	-1
  3115  017184  50E3               	movf	plusw1,w,c
  3116  017186  0D04               	mullw	4
  3117  017188  0E00               	movlw	low _C
  3118  01718A  24F3               	addwf	243,w,c
  3119  01718C  6ED9               	movwf	fsr2l,c
  3120  01718E  0E02               	movlw	high _C
  3121  017190  20F4               	addwfc	prodh,w,c
  3122  017192  6EDA               	movwf	fsr2h,c
  3123  017194  0060  F0D7  FFDE   	movff	btemp,postinc2
  3124  01719A  0060  F0DB  FFDE   	movff	btemp+1,postinc2
  3125  0171A0  0060  F0DF  FFDE   	movff	btemp+2,postinc2
  3126  0171A6  0060  F0E3  FFDE   	movff	btemp+3,postinc2
  3127                           
  3128                           ;mbmc.c: 37:  }
  3129                           ;stkvar	_i @ sp[(-1)+0]
  3130  0171AC  0EFF               	movlw	-1
  3131  0171AE  2AE3               	incf	plusw1,f,c
  3132                           
  3133                           ;stkvar	_i @ sp[(-1)+0]
  3134  0171B0  0EFF               	movlw	-1
  3135  0171B2  006F FF8C  F035    	movff	plusw1,btemp
  3136  0171B8  0E0F               	movlw	15
  3137  0171BA  6435               	cpfsgt	btemp^0,c
  3138  0171BC  D7C8               	goto	l8641
  3139                           
  3140                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  3141  0171BE  52E5               	movf	postdec1,f,c
  3142  0171C0  0012               	return		;funcret
  3143  0171C2                     __end_of_convert_adc_data:
  3144                           	opt callstack 0
  3145                           
  3146 ;; *************** function _lp_filter *****************
  3147 ;; Defined at:
  3148 ;;		line 9 in file "mbmc.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;  new             4  [STACK] float 
  3151 ;;  bn              1  [STACK] unsigned char 
  3152 ;;  slow            1  [STACK] char 
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;  lp_speed        4  [STACK] float 
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  4  [STACK] float 
  3157 ;; Registers used:
  3158 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/4
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3168 ;;Total ram usage:        0 bytes
  3169 ;; Hardware stack levels used:    1
  3170 ;; Hardware stack levels required when called:    8
  3171 ;; This function calls:
  3172 ;;		___fladd
  3173 ;;		___flmul
  3174 ;;		___flsub
  3175 ;; This function is called by:
  3176 ;;		_convert_adc_data
  3177 ;; This function uses a reentrant model
  3178 ;;
  3179                           
  3180                           	psect	text11
  3181  0158CC                     __ptext11:
  3182                           	opt callstack 0
  3183  0158CC                     _lp_filter:
  3184                           	opt callstack 0
  3185                           
  3186                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3187  0158CC  52E6               	movf	postinc1,f,c
  3188  0158CE  52E6               	movf	postinc1,f,c
  3189  0158D0  52E6               	movf	postinc1,f,c
  3190  0158D2  52E6               	movf	postinc1,f,c
  3191                           
  3192                           ;mbmc.c: 9: float lp_filter(float new, uint8_t bn, int8_t slow);mbmc.c: 10: {;mbmc.c: 11
      +                          :  static float smooth[16];;mbmc.c: 12:  float lp_speed;;mbmc.c: 14:  if (bn >= 16)
  3193                           ;stkvar	_bn @ sp[(-4)+-5]
  3194                           
  3195                           ;incstack = 0
  3196  0158D4  0EF7               	movlw	-9
  3197  0158D6  006F FF8C  F035    	movff	plusw1,btemp
  3198  0158DC  0E0F               	movlw	15
  3199  0158DE  6435               	cpfsgt	btemp^0,c
  3200  0158E0  D011               	goto	l8431
  3201  0158E2                     u7990:
  3202                           
  3203                           ;mbmc.c: 15:   return new;
  3204                           ;stkvar	_new @ sp[(-4)+-4]
  3205  0158E2  0EF8               	movlw	-8
  3206  0158E4  006F FF8C  F035    	movff	plusw1,btemp
  3207  0158EA  0EF9               	movlw	-7
  3208  0158EC  006F FF8C  F036    	movff	plusw1,btemp+1
  3209  0158F2  0EFA               	movlw	-6
  3210  0158F4  006F FF8C  F037    	movff	plusw1,btemp+2
  3211  0158FA  0EFB               	movlw	-5
  3212  0158FC  006F FF8C  F038    	movff	plusw1,btemp+3
  3213  015902  D0BF               	goto	l1685
  3214  015904                     l8431:
  3215                           
  3216                           ;mbmc.c: 17:  if (slow == (-1)) {
  3217                           ;stkvar	_slow @ sp[(-4)+-6]
  3218  015904  0EF6               	movlw	-10
  3219  015906  28E3               	incf	plusw1,w,c
  3220  015908  A4D8               	btfss	status,2,c
  3221  01590A  D012               	goto	l8439
  3222                           
  3223                           ;mbmc.c: 18:   smooth[bn] = 0.0;
  3224                           ;stkvar	_bn @ sp[(-4)+-5]
  3225  01590C  0EF7               	movlw	-9
  3226  01590E  50E3               	movf	plusw1,w,c
  3227  015910  0D04               	mullw	4
  3228  015912  0E6C               	movlw	low lp_filter@smooth
  3229  015914  24F3               	addwf	243,w,c
  3230  015916  6ED9               	movwf	fsr2l,c
  3231  015918  0E02               	movlw	high lp_filter@smooth
  3232  01591A  20F4               	addwfc	prodh,w,c
  3233  01591C  6EDA               	movwf	fsr2h,c
  3234  01591E  0E00               	movlw	0
  3235  015920  6EDE               	movwf	postinc2,c
  3236  015922  0E00               	movlw	0
  3237  015924  6EDE               	movwf	postinc2,c
  3238  015926  0E00               	movlw	0
  3239  015928  6EDE               	movwf	postinc2,c
  3240  01592A  0E00               	movlw	0
  3241  01592C  6EDD               	movwf	postdec2,c
  3242  01592E  D7D9               	goto	u7990
  3243  015930                     l8439:
  3244                           
  3245                           ;mbmc.c: 22:  if (slow) {
  3246                           ;stkvar	_slow @ sp[(-4)+-6]
  3247  015930  0EF6               	movlw	-10
  3248  015932  50E3               	movf	plusw1,w,c
  3249  015934  B4D8               	btfsc	status,2,c
  3250  015936  D008               	goto	l8443
  3251                           
  3252                           ;mbmc.c: 23:   lp_speed = 0.066;
  3253  015938  0E02               	movlw	2
  3254  01593A  6E3D               	movwf	(btemp+8)^0,c
  3255  01593C  0E2B               	movlw	43
  3256  01593E  6E3E               	movwf	(btemp+9)^0,c
  3257  015940  0E87               	movlw	135
  3258  015942  6E3F               	movwf	(btemp+10)^0,c
  3259  015944  0E3D               	movlw	61
  3260  015946  D007               	goto	L1
  3261  015948                     l8443:
  3262                           
  3263                           ;mbmc.c: 25:   lp_speed = 0.333;
  3264  015948  0EFA               	movlw	250
  3265  01594A  6E3D               	movwf	(btemp+8)^0,c
  3266  01594C  0E7E               	movlw	126
  3267  01594E  6E3E               	movwf	(btemp+9)^0,c
  3268  015950  0EAA               	movlw	170
  3269  015952  6E3F               	movwf	(btemp+10)^0,c
  3270  015954  0E3E               	movlw	62
  3271  015956                     L1:
  3272  015956  6E40               	movwf	(btemp+11)^0,c
  3273                           
  3274                           ;stkvar	_lp_speed @ sp[(-4)+0]
  3275  015958  0EFC               	movlw	-4
  3276  01595A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  3277  015960  0EFD               	movlw	-3
  3278  015962  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  3279  015968  0EFE               	movlw	-2
  3280  01596A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  3281  015970  0EFF               	movlw	-1
  3282  015972  0060  F103  FFE3   	movff	btemp+11,plusw1
  3283                           
  3284                           ;mbmc.c: 28:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
  3285                           ;stkvar	_bn @ sp[(-4)+-5]
  3286  015978  0EF7               	movlw	-9
  3287  01597A  50E3               	movf	plusw1,w,c
  3288  01597C  0D04               	mullw	4
  3289  01597E  0E6C               	movlw	low lp_filter@smooth
  3290  015980  24F3               	addwf	243,w,c
  3291  015982  6ED9               	movwf	fsr2l,c
  3292  015984  0E02               	movlw	high lp_filter@smooth
  3293  015986  20F4               	addwfc	prodh,w,c
  3294  015988  6EDA               	movwf	fsr2h,c
  3295  01598A  006F FF7B FFE6     	movff	postinc2,postinc1
  3296  015990  006F FF7B FFE6     	movff	postinc2,postinc1
  3297  015996  006F FF7B FFE6     	movff	postinc2,postinc1
  3298  01599C  006F FF7B FFE6     	movff	postinc2,postinc1
  3299                           
  3300                           ;stkvar	_lp_speed @ sp[(-8)+0]
  3301  0159A2  0EF8               	movlw	-8
  3302  0159A4  006F FF8F FFE6     	movff	plusw1,postinc1
  3303  0159AA  006F FF8F FFE6     	movff	plusw1,postinc1
  3304  0159B0  006F FF8F FFE6     	movff	plusw1,postinc1
  3305  0159B6  006F FF8F FFE6     	movff	plusw1,postinc1
  3306                           
  3307                           ;stkvar	_bn @ sp[(-12)+-5]
  3308  0159BC  0EEF               	movlw	-17
  3309  0159BE  50E3               	movf	plusw1,w,c
  3310  0159C0  0D04               	mullw	4
  3311  0159C2  0E6C               	movlw	low lp_filter@smooth
  3312  0159C4  24F3               	addwf	243,w,c
  3313  0159C6  6ED9               	movwf	fsr2l,c
  3314  0159C8  0E02               	movlw	high lp_filter@smooth
  3315  0159CA  20F4               	addwfc	prodh,w,c
  3316  0159CC  6EDA               	movwf	fsr2h,c
  3317  0159CE  006F FF7B FFE6     	movff	postinc2,postinc1
  3318  0159D4  006F FF7B FFE6     	movff	postinc2,postinc1
  3319  0159DA  006F FF7B FFE6     	movff	postinc2,postinc1
  3320  0159E0  006F FF7B FFE6     	movff	postinc2,postinc1
  3321                           
  3322                           ;stkvar	_new @ sp[(-16)+-4]
  3323  0159E6  0EEC               	movlw	-20
  3324  0159E8  006F FF8F FFE6     	movff	plusw1,postinc1
  3325  0159EE  006F FF8F FFE6     	movff	plusw1,postinc1
  3326  0159F4  006F FF8F FFE6     	movff	plusw1,postinc1
  3327  0159FA  006F FF8F FFE6     	movff	plusw1,postinc1
  3328  015A00  ECA4  F0BB         	call	___flsub	;wreg free
  3329  015A04  0060  F0D7  FFE6   	movff	btemp,postinc1
  3330  015A0A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3331  015A10  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3332  015A16  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3333  015A1C  ECC1  F08E         	call	___flmul	;wreg free
  3334  015A20  0060  F0D7  FFE6   	movff	btemp,postinc1
  3335  015A26  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3336  015A2C  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3337  015A32  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3338  015A38  ECD6  F092         	call	___fladd	;wreg free
  3339                           
  3340                           ;stkvar	_bn @ sp[(-4)+-5]
  3341  015A3C  0EF7               	movlw	-9
  3342  015A3E  50E3               	movf	plusw1,w,c
  3343  015A40  0D04               	mullw	4
  3344  015A42  0E6C               	movlw	low lp_filter@smooth
  3345  015A44  24F3               	addwf	243,w,c
  3346  015A46  6ED9               	movwf	fsr2l,c
  3347  015A48  0E02               	movlw	high lp_filter@smooth
  3348  015A4A  20F4               	addwfc	prodh,w,c
  3349  015A4C  6EDA               	movwf	fsr2h,c
  3350  015A4E  0060  F0D7  FFDE   	movff	btemp,postinc2
  3351  015A54  0060  F0DB  FFDE   	movff	btemp+1,postinc2
  3352  015A5A  0060  F0DF  FFDE   	movff	btemp+2,postinc2
  3353  015A60  0060  F0E3  FFDD   	movff	btemp+3,postdec2
  3354  015A66  52DD               	movf	postdec2,f,c
  3355  015A68  52DD               	movf	postdec2,f,c
  3356  015A6A  006F FF78  F035    	movff	postinc2,btemp
  3357  015A70  006F FF78  F036    	movff	postinc2,btemp+1
  3358  015A76  006F FF78  F037    	movff	postinc2,btemp+2
  3359  015A7C  006F FF78  F038    	movff	postinc2,btemp+3
  3360  015A82                     l1685:
  3361                           
  3362                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
  3363  015A82  0EF6               	movlw	246
  3364  015A84  26E1               	addwf	fsr1l,f,c
  3365  015A86  0EFF               	movlw	255
  3366  015A88  22E2               	addwfc	fsr1h,f,c
  3367  015A8A  0012               	return		;funcret
  3368  015A8C                     __end_of_lp_filter:
  3369                           	opt callstack 0
  3370                           
  3371 ;; *************** function _conv_raw_result *****************
  3372 ;; Defined at:
  3373 ;;		line 75 in file "daq.c"
  3374 ;; Parameters:    Size  Location     Type
  3375 ;;  chan            1  [STACK] enum E16136
  3376 ;;  to_what         1  [STACK] enum E16198
  3377 ;; Auto vars:     Size  Location     Type
  3378 ;;		None
  3379 ;; Return value:  Size  Location     Type
  3380 ;;                  4  [STACK] float 
  3381 ;; Registers used:
  3382 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3383 ;; Tracked objects:
  3384 ;;		On entry : 0/4
  3385 ;;		On exit  : 0/0
  3386 ;;		Unchanged: 0/0
  3387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3392 ;;Total ram usage:        0 bytes
  3393 ;; Hardware stack levels used:    1
  3394 ;; Hardware stack levels required when called:    8
  3395 ;; This function calls:
  3396 ;;		___fldiv
  3397 ;;		___flmul
  3398 ;;		___flsub
  3399 ;;		___xxtofl
  3400 ;;		_get_raw_result
  3401 ;;		_nanf
  3402 ;; This function is called by:
  3403 ;;		_convert_adc_data
  3404 ;; This function uses a reentrant model
  3405 ;;
  3406                           
  3407                           	psect	text12
  3408  013762                     __ptext12:
  3409                           	opt callstack 0
  3410  013762                     _conv_raw_result:
  3411                           	opt callstack 21
  3412                           
  3413                           ;daq.c: 75: float conv_raw_result(adcc_channel_t chan, adc_conv_t to_what);daq.c: 76: {;
      +                          daq.c: 77:  if (!(0b0011110001110111 >> chan & 0x1))
  3414                           ;stkvar	_chan @ sp[(0)+-1]
  3415                           
  3416                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3417                           ;incstack = 0
  3418  013762  0EFF               	movlw	-1
  3419  013764  006F FF8C  F040    	movff	plusw1,btemp+11
  3420  01376A  0E77               	movlw	119
  3421  01376C  6E3D               	movwf	(btemp+8)^0,c
  3422  01376E  0E3C               	movlw	60
  3423  013770  6E3E               	movwf	(btemp+9)^0,c
  3424  013772  2A40               	incf	(btemp+11)^0,f,c
  3425  013774  D003               	goto	u7914
  3426  013776                     u7915:
  3427  013776  343E               	rlcf	(btemp+9)^0,w,c
  3428  013778  323E               	rrcf	(btemp+9)^0,f,c
  3429  01377A  323D               	rrcf	(btemp+8)^0,f,c
  3430  01377C                     u7914:
  3431  01377C  2E40               	decfsz	(btemp+11)^0,f,c
  3432  01377E  D7FB               	goto	u7915
  3433  013780  B03D               	btfsc	(btemp+8)^0,0,c
  3434  013782  D1E3               	goto	l8415
  3435                           
  3436                           ;daq.c: 78:   return nanf("");
  3437  013784  0E2D               	movlw	low (STR_26+18)
  3438  013786  6EE6               	movwf	postinc1,c
  3439  013788  0EFF               	movlw	high (STR_26+18)
  3440  01378A  6EE6               	movwf	postinc1,c
  3441  01378C  EC15  F0BA         	call	_nanf	;wreg free
  3442  013790  D1EC               	goto	l1649
  3443  013792                     l8375:
  3444                           
  3445                           ;daq.c: 82:   if (0b0000000000000011 >> chan & 0x1) {
  3446                           ;stkvar	_chan @ sp[(0)+-1]
  3447  013792  0EFF               	movlw	-1
  3448  013794  006F FF8C  F040    	movff	plusw1,btemp+11
  3449  01379A  0E03               	movlw	3
  3450  01379C  6E3D               	movwf	(btemp+8)^0,c
  3451  01379E  0E00               	movlw	0
  3452  0137A0  6E3E               	movwf	(btemp+9)^0,c
  3453  0137A2  2A40               	incf	(btemp+11)^0,f,c
  3454  0137A4  D003               	goto	u7934
  3455  0137A6                     u7935:
  3456  0137A6  343E               	rlcf	(btemp+9)^0,w,c
  3457  0137A8  323E               	rrcf	(btemp+9)^0,f,c
  3458  0137AA  323D               	rrcf	(btemp+8)^0,f,c
  3459  0137AC                     u7934:
  3460  0137AC  2E40               	decfsz	(btemp+11)^0,f,c
  3461  0137AE  D7FB               	goto	u7935
  3462  0137B0  A03D               	btfss	(btemp+8)^0,0,c
  3463  0137B2  D10D               	goto	l8389
  3464                           
  3465                           ;daq.c: 83:    if (0b0000000000000001 >> chan & 0x1) {
  3466                           ;stkvar	_chan @ sp[(0)+-1]
  3467  0137B4  0EFF               	movlw	-1
  3468  0137B6  006F FF8C  F040    	movff	plusw1,btemp+11
  3469  0137BC  0E01               	movlw	1
  3470  0137BE  6E3D               	movwf	(btemp+8)^0,c
  3471  0137C0  0E00               	movlw	0
  3472  0137C2  6E3E               	movwf	(btemp+9)^0,c
  3473  0137C4  2A40               	incf	(btemp+11)^0,f,c
  3474  0137C6  D003               	goto	u7954
  3475  0137C8                     u7955:
  3476  0137C8  343E               	rlcf	(btemp+9)^0,w,c
  3477  0137CA  323E               	rrcf	(btemp+9)^0,f,c
  3478  0137CC  323D               	rrcf	(btemp+8)^0,f,c
  3479  0137CE                     u7954:
  3480  0137CE  2E40               	decfsz	(btemp+11)^0,f,c
  3481  0137D0  D7FB               	goto	u7955
  3482  0137D2  A03D               	btfss	(btemp+8)^0,0,c
  3483  0137D4  D07E               	goto	l8385
  3484                           
  3485                           ;daq.c: 84:     return(((float) get_raw_result(chan) * 1.25) - R.c_offset[1]) * 30.00 / 
      +                          1000.0;
  3486  0137D6  0E00               	movlw	0
  3487  0137D8  6EE6               	movwf	postinc1,c
  3488  0137DA  0E00               	movlw	0
  3489  0137DC  6EE6               	movwf	postinc1,c
  3490  0137DE  0E7A               	movlw	122
  3491  0137E0  6EE6               	movwf	postinc1,c
  3492  0137E2  0E44               	movlw	68
  3493  0137E4  6EE6               	movwf	postinc1,c
  3494  0137E6  0E00               	movlw	0
  3495  0137E8  6EE6               	movwf	postinc1,c
  3496  0137EA  0E00               	movlw	0
  3497  0137EC  6EE6               	movwf	postinc1,c
  3498  0137EE  0EF0               	movlw	240
  3499  0137F0  6EE6               	movwf	postinc1,c
  3500  0137F2  0E41               	movlw	65
  3501  0137F4  6EE6               	movwf	postinc1,c
  3502  0137F6  0060  F213  FFE6   	movff	_R+36,postinc1
  3503  0137FC  0060  F217  FFE6   	movff	_R+37,postinc1
  3504  013802  0060  F21B  FFE6   	movff	_R+38,postinc1
  3505  013808  0060  F21F  FFE6   	movff	_R+39,postinc1
  3506  01380E  0E00               	movlw	0
  3507  013810  6EE6               	movwf	postinc1,c
  3508  013812  0E00               	movlw	0
  3509  013814  6EE6               	movwf	postinc1,c
  3510  013816  0EA0               	movlw	160
  3511  013818  6EE6               	movwf	postinc1,c
  3512  01381A  0E3F               	movlw	63
  3513  01381C  6EE6               	movwf	postinc1,c
  3514                           
  3515                           ;stkvar	_chan @ sp[(-16)+-1]
  3516  01381E  0EEF               	movlw	-17
  3517  013820  50E3               	movf	plusw1,w,c
  3518  013822  6EE6               	movwf	postinc1,c
  3519  013824  ECF1  F0BF         	call	_get_raw_result	;wreg free
  3520  013828  0060  F0D4  F03F   	movff	btemp,btemp+10
  3521  01382E  0060  F0D8  F040   	movff	btemp+1,btemp+11
  3522  013834  503F               	movf	(btemp+10)^0,w,c
  3523  013836  6E39               	movwf	(btemp+4)^0,c
  3524  013838  5040               	movf	(btemp+11)^0,w,c
  3525  01383A  6E3A               	movwf	(btemp+5)^0,c
  3526  01383C  6A3B               	clrf	(btemp+6)^0,c
  3527  01383E  6A3C               	clrf	(btemp+7)^0,c
  3528  013840  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  3529  013846  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  3530  01384C  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  3531  013852  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  3532  013858  0E00               	movlw	0
  3533  01385A  6EE6               	movwf	postinc1,c
  3534  01385C  EC80  F0AA         	call	___xxtofl	;wreg free
  3535  013860  0060  F0D7  FFE6   	movff	btemp,postinc1
  3536  013866  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3537  01386C  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3538  013872  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3539  013878  ECC1  F08E         	call	___flmul	;wreg free
  3540  01387C  0060  F0D7  FFE6   	movff	btemp,postinc1
  3541  013882  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3542  013888  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3543  01388E  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3544  013894  ECA4  F0BB         	call	___flsub	;wreg free
  3545  013898  0060  F0D7  FFE6   	movff	btemp,postinc1
  3546  01389E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3547  0138A4  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3548  0138AA  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3549  0138B0  ECC1  F08E         	call	___flmul	;wreg free
  3550  0138B4  0060  F0D7  FFE6   	movff	btemp,postinc1
  3551  0138BA  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3552  0138C0  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3553  0138C6  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3554  0138CC  ECB4  F096         	call	___fldiv	;wreg free
  3555  0138D0  D14C               	goto	l1649
  3556  0138D2                     l8385:
  3557                           
  3558                           ;daq.c: 86:     return(((float) get_raw_result(chan) * 1.25) - R.c_offset[0]) * 59.30 / 
      +                          1000.0;
  3559  0138D2  0E00               	movlw	0
  3560  0138D4  6EE6               	movwf	postinc1,c
  3561  0138D6  0E00               	movlw	0
  3562  0138D8  6EE6               	movwf	postinc1,c
  3563  0138DA  0E7A               	movlw	122
  3564  0138DC  6EE6               	movwf	postinc1,c
  3565  0138DE  0E44               	movlw	68
  3566  0138E0  6EE6               	movwf	postinc1,c
  3567  0138E2  0E33               	movlw	51
  3568  0138E4  6EE6               	movwf	postinc1,c
  3569  0138E6  0E33               	movlw	51
  3570  0138E8  6EE6               	movwf	postinc1,c
  3571  0138EA  0E6D               	movlw	109
  3572  0138EC  6EE6               	movwf	postinc1,c
  3573  0138EE  0E42               	movlw	66
  3574  0138F0  6EE6               	movwf	postinc1,c
  3575  0138F2  0060  F203  FFE6   	movff	_R+32,postinc1
  3576  0138F8  0060  F207  FFE6   	movff	_R+33,postinc1
  3577  0138FE  0060  F20B  FFE6   	movff	_R+34,postinc1
  3578  013904  0060  F20F  FFE6   	movff	_R+35,postinc1
  3579  01390A  0E00               	movlw	0
  3580  01390C  6EE6               	movwf	postinc1,c
  3581  01390E  0E00               	movlw	0
  3582  013910  6EE6               	movwf	postinc1,c
  3583  013912  0EA0               	movlw	160
  3584  013914  6EE6               	movwf	postinc1,c
  3585  013916  0E3F               	movlw	63
  3586  013918  6EE6               	movwf	postinc1,c
  3587                           
  3588                           ;stkvar	_chan @ sp[(-16)+-1]
  3589  01391A  0EEF               	movlw	-17
  3590  01391C  50E3               	movf	plusw1,w,c
  3591  01391E  6EE6               	movwf	postinc1,c
  3592  013920  ECF1  F0BF         	call	_get_raw_result	;wreg free
  3593  013924  0060  F0D4  F03F   	movff	btemp,btemp+10
  3594  01392A  0060  F0D8  F040   	movff	btemp+1,btemp+11
  3595  013930  503F               	movf	(btemp+10)^0,w,c
  3596  013932  6E39               	movwf	(btemp+4)^0,c
  3597  013934  5040               	movf	(btemp+11)^0,w,c
  3598  013936  6E3A               	movwf	(btemp+5)^0,c
  3599  013938  6A3B               	clrf	(btemp+6)^0,c
  3600  01393A  6A3C               	clrf	(btemp+7)^0,c
  3601  01393C  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  3602  013942  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  3603  013948  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  3604  01394E  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  3605  013954  0E00               	movlw	0
  3606  013956  6EE6               	movwf	postinc1,c
  3607  013958  EC80  F0AA         	call	___xxtofl	;wreg free
  3608  01395C  0060  F0D7  FFE6   	movff	btemp,postinc1
  3609  013962  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3610  013968  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3611  01396E  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3612  013974  ECC1  F08E         	call	___flmul	;wreg free
  3613  013978  0060  F0D7  FFE6   	movff	btemp,postinc1
  3614  01397E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3615  013984  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3616  01398A  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3617  013990  ECA4  F0BB         	call	___flsub	;wreg free
  3618  013994  0060  F0D7  FFE6   	movff	btemp,postinc1
  3619  01399A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3620  0139A0  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3621  0139A6  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3622  0139AC  ECC1  F08E         	call	___flmul	;wreg free
  3623  0139B0  0060  F0D7  FFE6   	movff	btemp,postinc1
  3624  0139B6  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3625  0139BC  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3626  0139C2  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3627  0139C8  ECB4  F096         	call	___fldiv	;wreg free
  3628  0139CC  D0CE               	goto	l1649
  3629  0139CE                     l8389:
  3630                           
  3631                           ;daq.c: 89:    if (0b0000100000000000 >> chan & 0x1) {
  3632                           ;stkvar	_chan @ sp[(0)+-1]
  3633  0139CE  0EFF               	movlw	-1
  3634  0139D0  006F FF8C  F040    	movff	plusw1,btemp+11
  3635  0139D6  0E00               	movlw	0
  3636  0139D8  6E3D               	movwf	(btemp+8)^0,c
  3637  0139DA  0E08               	movlw	8
  3638  0139DC  6E3E               	movwf	(btemp+9)^0,c
  3639  0139DE  2A40               	incf	(btemp+11)^0,f,c
  3640  0139E0  D003               	goto	u7974
  3641  0139E2                     u7975:
  3642  0139E2  343E               	rlcf	(btemp+9)^0,w,c
  3643  0139E4  323E               	rrcf	(btemp+9)^0,f,c
  3644  0139E6  323D               	rrcf	(btemp+8)^0,f,c
  3645  0139E8                     u7974:
  3646  0139E8  2E40               	decfsz	(btemp+11)^0,f,c
  3647  0139EA  D7FB               	goto	u7975
  3648  0139EC  A03D               	btfss	(btemp+8)^0,0,c
  3649  0139EE  D008               	goto	l8397
  3650                           
  3651                           ;daq.c: 90:     return 25.0;
  3652  0139F0  0E00               	movlw	0
  3653  0139F2  6E35               	movwf	btemp^0,c
  3654  0139F4  0E00               	movlw	0
  3655  0139F6  6E36               	movwf	(btemp+1)^0,c
  3656  0139F8  0EC8               	movlw	200
  3657  0139FA  6E37               	movwf	(btemp+2)^0,c
  3658  0139FC  0E41               	movlw	65
  3659  0139FE  D0A3               	goto	L2
  3660  013A00                     l8397:
  3661                           
  3662                           ;daq.c: 92:     return((float) get_raw_result(chan) * 8.250825) / 1000.0;
  3663  013A00  0E00               	movlw	0
  3664  013A02  6EE6               	movwf	postinc1,c
  3665  013A04  0E00               	movlw	0
  3666  013A06  6EE6               	movwf	postinc1,c
  3667  013A08  0E7A               	movlw	122
  3668  013A0A  6EE6               	movwf	postinc1,c
  3669  013A0C  0E44               	movlw	68
  3670  013A0E  6EE6               	movwf	postinc1,c
  3671  013A10  0E61               	movlw	97
  3672  013A12  6EE6               	movwf	postinc1,c
  3673  013A14  0E03               	movlw	3
  3674  013A16  6EE6               	movwf	postinc1,c
  3675  013A18  0E04               	movlw	4
  3676  013A1A  6EE6               	movwf	postinc1,c
  3677  013A1C  0E41               	movlw	65
  3678  013A1E  6EE6               	movwf	postinc1,c
  3679                           
  3680                           ;stkvar	_chan @ sp[(-8)+-1]
  3681  013A20  0EF7               	movlw	-9
  3682  013A22  50E3               	movf	plusw1,w,c
  3683  013A24  6EE6               	movwf	postinc1,c
  3684  013A26  ECF1  F0BF         	call	_get_raw_result	;wreg free
  3685  013A2A  0060  F0D4  F03F   	movff	btemp,btemp+10
  3686  013A30  0060  F0D8  F040   	movff	btemp+1,btemp+11
  3687  013A36  503F               	movf	(btemp+10)^0,w,c
  3688  013A38  6E39               	movwf	(btemp+4)^0,c
  3689  013A3A  5040               	movf	(btemp+11)^0,w,c
  3690  013A3C  6E3A               	movwf	(btemp+5)^0,c
  3691  013A3E  6A3B               	clrf	(btemp+6)^0,c
  3692  013A40  6A3C               	clrf	(btemp+7)^0,c
  3693  013A42  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  3694  013A48  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  3695  013A4E  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  3696  013A54  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  3697  013A5A  0E00               	movlw	0
  3698  013A5C  6EE6               	movwf	postinc1,c
  3699  013A5E  EC80  F0AA         	call	___xxtofl	;wreg free
  3700  013A62  0060  F0D7  FFE6   	movff	btemp,postinc1
  3701  013A68  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3702  013A6E  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3703  013A74  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3704  013A7A  ECC1  F08E         	call	___flmul	;wreg free
  3705  013A7E  0060  F0D7  FFE6   	movff	btemp,postinc1
  3706  013A84  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3707  013A8A  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3708  013A90  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3709  013A96  ECB4  F096         	call	___fldiv	;wreg free
  3710  013A9A  D067               	goto	l1649
  3711  013A9C                     l8401:
  3712                           
  3713                           ;daq.c: 97:   return((float) get_raw_result(chan) * 1.25) / 1000.0;
  3714  013A9C  0E00               	movlw	0
  3715  013A9E  6EE6               	movwf	postinc1,c
  3716  013AA0  0E00               	movlw	0
  3717  013AA2  6EE6               	movwf	postinc1,c
  3718  013AA4  0E7A               	movlw	122
  3719  013AA6  6EE6               	movwf	postinc1,c
  3720  013AA8  0E44               	movlw	68
  3721  013AAA  6EE6               	movwf	postinc1,c
  3722  013AAC  0E00               	movlw	0
  3723  013AAE  6EE6               	movwf	postinc1,c
  3724  013AB0  0E00               	movlw	0
  3725  013AB2  6EE6               	movwf	postinc1,c
  3726  013AB4  0EA0               	movlw	160
  3727  013AB6  6EE6               	movwf	postinc1,c
  3728  013AB8  0E3F               	movlw	63
  3729  013ABA  6EE6               	movwf	postinc1,c
  3730                           
  3731                           ;stkvar	_chan @ sp[(-8)+-1]
  3732  013ABC  0EF7               	movlw	-9
  3733  013ABE  50E3               	movf	plusw1,w,c
  3734  013AC0  6EE6               	movwf	postinc1,c
  3735  013AC2  ECF1  F0BF         	call	_get_raw_result	;wreg free
  3736  013AC6  0060  F0D4  F03F   	movff	btemp,btemp+10
  3737  013ACC  0060  F0D8  F040   	movff	btemp+1,btemp+11
  3738  013AD2  503F               	movf	(btemp+10)^0,w,c
  3739  013AD4  6E39               	movwf	(btemp+4)^0,c
  3740  013AD6  5040               	movf	(btemp+11)^0,w,c
  3741  013AD8  6E3A               	movwf	(btemp+5)^0,c
  3742  013ADA  6A3B               	clrf	(btemp+6)^0,c
  3743  013ADC  6A3C               	clrf	(btemp+7)^0,c
  3744  013ADE  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  3745  013AE4  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  3746  013AEA  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  3747  013AF0  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  3748  013AF6  0E00               	movlw	0
  3749  013AF8  6EE6               	movwf	postinc1,c
  3750  013AFA  EC80  F0AA         	call	___xxtofl	;wreg free
  3751  013AFE  0060  F0D7  FFE6   	movff	btemp,postinc1
  3752  013B04  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3753  013B0A  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3754  013B10  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3755  013B16  ECC1  F08E         	call	___flmul	;wreg free
  3756  013B1A  0060  F0D7  FFE6   	movff	btemp,postinc1
  3757  013B20  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3758  013B26  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3759  013B2C  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3760  013B32  ECB4  F096         	call	___fldiv	;wreg free
  3761  013B36  D019               	goto	l1649
  3762  013B38                     l8407:
  3763                           
  3764                           ;daq.c: 100:   return 0.0;
  3765  013B38  0E00               	movlw	0
  3766  013B3A  6E35               	movwf	btemp^0,c
  3767  013B3C  0E00               	movlw	0
  3768  013B3E  6E36               	movwf	(btemp+1)^0,c
  3769  013B40  0E00               	movlw	0
  3770  013B42  6E37               	movwf	(btemp+2)^0,c
  3771  013B44  0E00               	movlw	0
  3772  013B46                     L2:
  3773  013B46  6E38               	movwf	(btemp+3)^0,c
  3774  013B48  D010               	goto	l1649
  3775  013B4A                     l8415:
  3776                           
  3777                           ;stkvar	_to_what @ sp[(0)+-2]
  3778  013B4A  0EFE               	movlw	-2
  3779  013B4C  50E3               	movf	plusw1,w,c
  3780  013B4E  6E3F               	movwf	(btemp+10)^0,c
  3781  013B50  6A40               	clrf	(btemp+11)^0,c
  3782                           
  3783                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3784                           ; Switch size 1, requested type "simple"
  3785                           ; Number of cases is 1, Range of values is 0 to 0
  3786                           ; switch strategies available:
  3787                           ; Name         Instructions Cycles
  3788                           ; simple_byte            4     3 (average)
  3789                           ;	Chosen strategy is simple_byte
  3790  013B52  5040               	movf	(btemp+11)^0,w,c
  3791  013B54  0A00               	xorlw	0	; case 0
  3792  013B56  A4D8               	btfss	status,2,c
  3793  013B58  D7EF               	goto	l8407
  3794                           
  3795                           ; Switch size 1, requested type "simple"
  3796                           ; Number of cases is 2, Range of values is 0 to 1
  3797                           ; switch strategies available:
  3798                           ; Name         Instructions Cycles
  3799                           ; simple_byte            7     4 (average)
  3800                           ;	Chosen strategy is simple_byte
  3801  013B5A  503F               	movf	(btemp+10)^0,w,c
  3802  013B5C  0A00               	xorlw	0	; case 0
  3803  013B5E  B4D8               	btfsc	status,2,c
  3804  013B60  D618               	goto	l8375
  3805  013B62  0A01               	xorlw	1	; case 1
  3806  013B64  B4D8               	btfsc	status,2,c
  3807  013B66  D79A               	goto	l8401
  3808  013B68  D7E7               	goto	l8407
  3809  013B6A                     l1649:
  3810                           
  3811                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  3812  013B6A  52E5               	movf	postdec1,f,c
  3813  013B6C  52E5               	movf	postdec1,f,c
  3814  013B6E  0012               	return		;funcret
  3815  013B70                     __end_of_conv_raw_result:
  3816                           	opt callstack 0
  3817                           
  3818 ;; *************** function _nanf *****************
  3819 ;; Defined at:
  3820 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;  s               2  [STACK] PTR const unsigned char 
  3823 ;;		 -> STR_32(1), 
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;  u               4  [STACK] struct .
  3826 ;; Return value:  Size  Location     Type
  3827 ;;                  4  [STACK] float 
  3828 ;; Registers used:
  3829 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  3830 ;; Tracked objects:
  3831 ;;		On entry : 0/4
  3832 ;;		On exit  : 0/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3839 ;;Total ram usage:        0 bytes
  3840 ;; Hardware stack levels used:    1
  3841 ;; Hardware stack levels required when called:    6
  3842 ;; This function calls:
  3843 ;;		Nothing
  3844 ;; This function is called by:
  3845 ;;		_conv_raw_result
  3846 ;; This function uses a reentrant model
  3847 ;;
  3848                           
  3849                           	psect	text13
  3850  01742A                     __ptext13:
  3851                           	opt callstack 0
  3852  01742A                     _nanf:
  3853                           	opt callstack 0
  3854                           
  3855                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3856  01742A  52E6               	movf	postinc1,f,c
  3857  01742C  52E6               	movf	postinc1,f,c
  3858  01742E  52E6               	movf	postinc1,f,c
  3859  017430  52E6               	movf	postinc1,f,c
  3860                           
  3861                           ;incstack = 0
  3862  017432  0EFF               	movlw	255
  3863  017434  6E3D               	movwf	(btemp+8)^0,c
  3864  017436  0EFF               	movlw	255
  3865  017438  6E3E               	movwf	(btemp+9)^0,c
  3866  01743A  0EFF               	movlw	255
  3867  01743C  6E3F               	movwf	(btemp+10)^0,c
  3868  01743E  0E7F               	movlw	127
  3869  017440  6E40               	movwf	(btemp+11)^0,c
  3870                           
  3871                           ;stkvar	_u @ sp[(-4)+0]
  3872  017442  0EFC               	movlw	-4
  3873  017444  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  3874  01744A  0EFD               	movlw	-3
  3875  01744C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  3876  017452  0EFE               	movlw	-2
  3877  017454  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  3878  01745A  0EFF               	movlw	-1
  3879  01745C  0060  F103  FFE3   	movff	btemp+11,plusw1
  3880                           
  3881                           ;stkvar	_u @ sp[(-4)+0]
  3882  017462  0EFC               	movlw	-4
  3883  017464  006F FF8C  F035    	movff	plusw1,btemp
  3884  01746A  0EFD               	movlw	-3
  3885  01746C  006F FF8C  F036    	movff	plusw1,btemp+1
  3886  017472  0EFE               	movlw	-2
  3887  017474  006F FF8C  F037    	movff	plusw1,btemp+2
  3888  01747A  0EFF               	movlw	-1
  3889  01747C  006F FF8C  F038    	movff	plusw1,btemp+3
  3890                           
  3891                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  3892  017482  0EFA               	movlw	250
  3893  017484  26E1               	addwf	fsr1l,f,c
  3894  017486  0EFF               	movlw	255
  3895  017488  22E2               	addwfc	fsr1h,f,c
  3896  01748A  0012               	return		;funcret
  3897  01748C                     __end_of_nanf:
  3898                           	opt callstack 0
  3899                           
  3900 ;; *************** function _get_raw_result *****************
  3901 ;; Defined at:
  3902 ;;		line 67 in file "daq.c"
  3903 ;; Parameters:    Size  Location     Type
  3904 ;;  index           1  [STACK] enum E16136
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;		None
  3907 ;; Return value:  Size  Location     Type
  3908 ;;                  2  [STACK] unsigned short 
  3909 ;; Registers used:
  3910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/4
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3920 ;;Total ram usage:        0 bytes
  3921 ;; Hardware stack levels used:    1
  3922 ;; Hardware stack levels required when called:    6
  3923 ;; This function calls:
  3924 ;;		Nothing
  3925 ;; This function is called by:
  3926 ;;		_main
  3927 ;;		_conv_raw_result
  3928 ;; This function uses a reentrant model
  3929 ;;
  3930                           
  3931                           	psect	text14
  3932  017FE2                     __ptext14:
  3933                           	opt callstack 0
  3934  017FE2                     _get_raw_result:
  3935                           	opt callstack 24
  3936                           
  3937                           ;daq.c: 67: adc_result_t get_raw_result(adcc_channel_t index);daq.c: 68: {;daq.c: 69:  r
      +                          eturn R.raw_adc[index];
  3938                           ;stkvar	_index @ sp[(0)+-1]
  3939                           
  3940                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3941                           ;incstack = 0
  3942  017FE2  0EFF               	movlw	-1
  3943  017FE4  50E3               	movf	plusw1,w,c
  3944  017FE6  0D02               	mullw	2
  3945  017FE8  50F3               	movf	243,w,c
  3946  017FEA  0F60               	addlw	low _R
  3947  017FEC  6ED9               	movwf	fsr2l,c
  3948  017FEE  6ADA               	clrf	fsr2h,c
  3949  017FF0  006F FF78  F035    	movff	postinc2,btemp
  3950  017FF6  006F FF74  F036    	movff	postdec2,btemp+1
  3951                           
  3952                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  3953  017FFC  52E5               	movf	postdec1,f,c
  3954  017FFE  0012               	return		;funcret
  3955  018000                     __end_of_get_raw_result:
  3956                           	opt callstack 0
  3957                           
  3958 ;; *************** function ___xxtofl *****************
  3959 ;; Defined at:
  3960 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  3961 ;; Parameters:    Size  Location     Type
  3962 ;;  sign            1  [STACK] unsigned char 
  3963 ;;  val             4  [STACK] long 
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;  arg             4  [STACK] unsigned long 
  3966 ;;  exp             1  [STACK] unsigned char 
  3967 ;; Return value:  Size  Location     Type
  3968 ;;                  4  [STACK] unsigned char 
  3969 ;; Registers used:
  3970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  3971 ;; Tracked objects:
  3972 ;;		On entry : 0/4
  3973 ;;		On exit  : 0/0
  3974 ;;		Unchanged: 0/0
  3975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3980 ;;Total ram usage:        0 bytes
  3981 ;; Hardware stack levels used:    1
  3982 ;; Hardware stack levels required when called:    6
  3983 ;; This function calls:
  3984 ;;		Nothing
  3985 ;; This function is called by:
  3986 ;;		_conv_raw_result
  3987 ;; This function uses a reentrant model
  3988 ;;
  3989                           
  3990                           	psect	text15
  3991  015500                     __ptext15:
  3992                           	opt callstack 0
  3993  015500                     ___xxtofl:
  3994                           	opt callstack 0
  3995                           
  3996                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3997  015500  0E05               	movlw	5
  3998  015502  26E1               	addwf	fsr1l,f,c
  3999  015504  0E00               	movlw	0
  4000  015506  22E2               	addwfc	fsr1h,f,c
  4001                           
  4002                           ;stkvar	_sign @ sp[(-5)+-1]
  4003                           
  4004                           ;incstack = 0
  4005  015508  0EFA               	movlw	-6
  4006  01550A  50E3               	movf	plusw1,w,c
  4007  01550C  B4D8               	btfsc	status,2,c
  4008  01550E  D01D               	goto	l7849
  4009                           
  4010                           ;stkvar	_val @ sp[(-5)+-5]
  4011  015510  0EF9               	movlw	-7
  4012  015512  AEE3               	btfss	plusw1,7,c
  4013  015514  D01A               	goto	l7849
  4014                           
  4015                           ;stkvar	_val @ sp[(-5)+-5]
  4016  015516  0EF6               	movlw	-10
  4017  015518  006F FF8C  F03D    	movff	plusw1,btemp+8
  4018  01551E  0EF7               	movlw	-9
  4019  015520  006F FF8C  F03E    	movff	plusw1,btemp+9
  4020  015526  0EF8               	movlw	-8
  4021  015528  006F FF8C  F03F    	movff	plusw1,btemp+10
  4022  01552E  0EF9               	movlw	-7
  4023  015530  006F FF8C  F040    	movff	plusw1,btemp+11
  4024  015536  1E3D               	comf	(btemp+8)^0,f,c
  4025  015538  1E3E               	comf	(btemp+9)^0,f,c
  4026  01553A  1E3F               	comf	(btemp+10)^0,f,c
  4027  01553C  1E40               	comf	(btemp+11)^0,f,c
  4028  01553E  2A3D               	incf	(btemp+8)^0,f,c
  4029  015540  0E00               	movlw	0
  4030  015542  223E               	addwfc	(btemp+9)^0,f,c
  4031  015544  223F               	addwfc	(btemp+10)^0,f,c
  4032  015546  2240               	addwfc	(btemp+11)^0,f,c
  4033  015548  D010               	goto	L3
  4034  01554A                     l7849:
  4035                           
  4036                           ;stkvar	_val @ sp[(-5)+-5]
  4037  01554A  0EF6               	movlw	-10
  4038  01554C  006F FF8C  F03D    	movff	plusw1,btemp+8
  4039  015552  0EF7               	movlw	-9
  4040  015554  006F FF8C  F03E    	movff	plusw1,btemp+9
  4041  01555A  0EF8               	movlw	-8
  4042  01555C  006F FF8C  F03F    	movff	plusw1,btemp+10
  4043  015562  0EF9               	movlw	-7
  4044  015564  006F FF8C  F040    	movff	plusw1,btemp+11
  4045  01556A                     L3:
  4046                           
  4047                           ;stkvar	_arg @ sp[(-5)+0]
  4048  01556A  0EFB               	movlw	-5
  4049  01556C  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  4050  015572  0EFC               	movlw	-4
  4051  015574  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  4052  01557A  0EFD               	movlw	-3
  4053  01557C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  4054  015582  0EFE               	movlw	-2
  4055  015584  0060  F103  FFE3   	movff	btemp+11,plusw1
  4056                           
  4057                           ;stkvar	_val @ sp[(-5)+-5]
  4058  01558A  0EF6               	movlw	-10
  4059  01558C  50E3               	movf	plusw1,w,c
  4060  01558E  E113               	bnz	l7857
  4061  015590  0EF7               	movlw	-9
  4062  015592  50E3               	movf	plusw1,w,c
  4063  015594  E110               	bnz	l7857
  4064  015596  0EF8               	movlw	-8
  4065  015598  50E3               	movf	plusw1,w,c
  4066  01559A  E10D               	bnz	l7857
  4067  01559C  0EF9               	movlw	-7
  4068  01559E  50E3               	movf	plusw1,w,c
  4069  0155A0  A4D8               	btfss	status,2,c
  4070  0155A2  D009               	goto	l7857
  4071  0155A4  0E00               	movlw	0
  4072  0155A6  6E35               	movwf	btemp^0,c
  4073  0155A8  0E00               	movlw	0
  4074  0155AA  6E36               	movwf	(btemp+1)^0,c
  4075  0155AC  0E00               	movlw	0
  4076  0155AE  6E37               	movwf	(btemp+2)^0,c
  4077  0155B0  0E00               	movlw	0
  4078  0155B2  6E38               	movwf	(btemp+3)^0,c
  4079  0155B4  D0A2               	goto	l2632
  4080  0155B6                     l7857:
  4081  0155B6  0E96               	movlw	150
  4082  0155B8  6E40               	movwf	(btemp+11)^0,c
  4083                           
  4084                           ;stkvar	_exp @ sp[(-5)+4]
  4085  0155BA  0EFF               	movlw	-1
  4086  0155BC  0060  F103  FFE3   	movff	btemp+11,plusw1
  4087  0155C2  D00B               	goto	l7861
  4088  0155C4                     l7859:
  4089                           
  4090                           ;stkvar	_exp @ sp[(-5)+4]
  4091  0155C4  0EFF               	movlw	-1
  4092  0155C6  2AE3               	incf	plusw1,f,c
  4093                           
  4094                           ;stkvar	_arg @ sp[(-5)+0]
  4095  0155C8  90D8               	bcf	status,0,c
  4096  0155CA  0EFE               	movlw	-2
  4097  0155CC  32E3               	rrcf	plusw1,f,c
  4098  0155CE  0EFD               	movlw	-3
  4099  0155D0  32E3               	rrcf	plusw1,f,c
  4100  0155D2  0EFC               	movlw	-4
  4101  0155D4  32E3               	rrcf	plusw1,f,c
  4102  0155D6  0EFB               	movlw	-5
  4103  0155D8  32E3               	rrcf	plusw1,f,c
  4104  0155DA                     l7861:
  4105                           
  4106                           ;stkvar	_arg @ sp[(-5)+0]
  4107  0155DA  50E1               	movf	fsr1l,w,c
  4108  0155DC  0FFB               	addlw	-5
  4109  0155DE  6ED9               	movwf	fsr2l,c
  4110  0155E0  50E2               	movf	fsr1h,w,c
  4111  0155E2  6EDA               	movwf	fsr2h,c
  4112  0155E4  0EFF               	movlw	255
  4113  0155E6  22DA               	addwfc	fsr2h,f,c
  4114  0155E8  52DE               	movf	postinc2,f,c
  4115  0155EA  52DE               	movf	postinc2,f,c
  4116  0155EC  52DE               	movf	postinc2,f,c
  4117  0155EE  0EFE               	movlw	254
  4118  0155F0  14DD               	andwf	postdec2,w,c
  4119  0155F2  B4D8               	btfsc	status,2,c
  4120  0155F4  D018               	goto	l7869
  4121  0155F6  D7E6               	goto	l7859
  4122  0155F8                     l7863:
  4123                           
  4124                           ;stkvar	_exp @ sp[(-5)+4]
  4125  0155F8  0EFF               	movlw	-1
  4126  0155FA  2AE3               	incf	plusw1,f,c
  4127                           
  4128                           ;stkvar	_arg @ sp[(-5)+0]
  4129  0155FC  50E1               	movf	fsr1l,w,c
  4130  0155FE  0FFB               	addlw	-5
  4131  015600  6ED9               	movwf	fsr2l,c
  4132  015602  50E2               	movf	fsr1h,w,c
  4133  015604  6EDA               	movwf	fsr2h,c
  4134  015606  0EFF               	movlw	255
  4135  015608  22DA               	addwfc	fsr2h,f,c
  4136  01560A  2ADE               	incf	postinc2,f,c
  4137  01560C  0E00               	movlw	0
  4138  01560E  22DE               	addwfc	postinc2,f,c
  4139  015610  22DE               	addwfc	postinc2,f,c
  4140  015612  22DE               	addwfc	postinc2,f,c
  4141                           
  4142                           ;stkvar	_arg @ sp[(-5)+0]
  4143  015614  90D8               	bcf	status,0,c
  4144  015616  0EFE               	movlw	-2
  4145  015618  32E3               	rrcf	plusw1,f,c
  4146  01561A  0EFD               	movlw	-3
  4147  01561C  32E3               	rrcf	plusw1,f,c
  4148  01561E  0EFC               	movlw	-4
  4149  015620  32E3               	rrcf	plusw1,f,c
  4150  015622  0EFB               	movlw	-5
  4151  015624  32E3               	rrcf	plusw1,f,c
  4152  015626                     l7869:
  4153                           
  4154                           ;stkvar	_arg @ sp[(-5)+0]
  4155  015626  50E1               	movf	fsr1l,w,c
  4156  015628  0FFB               	addlw	-5
  4157  01562A  6ED9               	movwf	fsr2l,c
  4158  01562C  50E2               	movf	fsr1h,w,c
  4159  01562E  6EDA               	movwf	fsr2h,c
  4160  015630  0EFF               	movlw	255
  4161  015632  22DA               	addwfc	fsr2h,f,c
  4162  015634  52DE               	movf	postinc2,f,c
  4163  015636  52DE               	movf	postinc2,f,c
  4164  015638  52DE               	movf	postinc2,f,c
  4165  01563A  0EFF               	movlw	255
  4166  01563C  14DD               	andwf	postdec2,w,c
  4167  01563E  B4D8               	btfsc	status,2,c
  4168  015640  D00C               	goto	l7873
  4169  015642  D7DA               	goto	l7863
  4170  015644                     l7871:
  4171                           
  4172                           ;stkvar	_exp @ sp[(-5)+4]
  4173  015644  0EFF               	movlw	-1
  4174  015646  06E3               	decf	plusw1,f,c
  4175                           
  4176                           ;stkvar	_arg @ sp[(-5)+0]
  4177  015648  90D8               	bcf	status,0,c
  4178  01564A  0EFB               	movlw	-5
  4179  01564C  36E3               	rlcf	plusw1,f,c
  4180  01564E  0EFC               	movlw	-4
  4181  015650  36E3               	rlcf	plusw1,f,c
  4182  015652  0EFD               	movlw	-3
  4183  015654  36E3               	rlcf	plusw1,f,c
  4184  015656  0EFE               	movlw	-2
  4185  015658  36E3               	rlcf	plusw1,f,c
  4186  01565A                     l7873:
  4187                           
  4188                           ;stkvar	_arg @ sp[(-5)+0]
  4189  01565A  0EFD               	movlw	-3
  4190  01565C  BEE3               	btfsc	plusw1,7,c
  4191  01565E  D007               	goto	u7740
  4192                           
  4193                           ;stkvar	_exp @ sp[(-5)+4]
  4194  015660  0EFF               	movlw	-1
  4195  015662  006F FF8C  F035    	movff	plusw1,btemp
  4196  015668  0E02               	movlw	2
  4197  01566A  6035               	cpfslt	btemp^0,c
  4198  01566C  D7EB               	goto	l7871
  4199  01566E                     u7740:
  4200                           
  4201                           ;stkvar	_exp @ sp[(-5)+4]
  4202  01566E  0EFF               	movlw	-1
  4203  015670  B0E3               	btfsc	plusw1,0,c
  4204  015672  D002               	goto	l7881
  4205                           
  4206                           ;stkvar	_arg @ sp[(-5)+0]
  4207  015674  0EFD               	movlw	-3
  4208  015676  9EE3               	bcf	plusw1,7,c
  4209  015678                     l7881:
  4210                           
  4211                           ;stkvar	_exp @ sp[(-5)+4]
  4212  015678  50E1               	movf	fsr1l,w,c
  4213  01567A  0FFF               	addlw	-1
  4214  01567C  6ED9               	movwf	fsr2l,c
  4215  01567E  50E2               	movf	fsr1h,w,c
  4216  015680  6EDA               	movwf	fsr2h,c
  4217  015682  0EFF               	movlw	255
  4218  015684  22DA               	addwfc	fsr2h,f,c
  4219  015686  90D8               	bcf	status,0,c
  4220  015688  32DF               	rrcf	indf2,f,c
  4221                           
  4222                           ;stkvar	_exp @ sp[(-5)+4]
  4223  01568A  0EFF               	movlw	-1
  4224  01568C  006F FF8C  F040    	movff	plusw1,btemp+11
  4225  015692  0060  F100  F039   	movff	btemp+11,btemp+4
  4226  015698  6A3A               	clrf	(btemp+5)^0,c
  4227  01569A  6A3B               	clrf	(btemp+6)^0,c
  4228  01569C  6A3C               	clrf	(btemp+7)^0,c
  4229  01569E  0060  F0E4  F03C   	movff	btemp+4,btemp+7
  4230  0156A4  6A3B               	clrf	(btemp+6)^0,c
  4231  0156A6  6A3A               	clrf	(btemp+5)^0,c
  4232  0156A8  6A39               	clrf	(btemp+4)^0,c
  4233                           
  4234                           ;stkvar	_arg @ sp[(-5)+0]
  4235  0156AA  50E1               	movf	fsr1l,w,c
  4236  0156AC  0FFB               	addlw	-5
  4237  0156AE  6ED9               	movwf	fsr2l,c
  4238  0156B0  50E2               	movf	fsr1h,w,c
  4239  0156B2  6EDA               	movwf	fsr2h,c
  4240  0156B4  0EFF               	movlw	255
  4241  0156B6  22DA               	addwfc	fsr2h,f,c
  4242  0156B8  5039               	movf	(btemp+4)^0,w,c
  4243  0156BA  12DE               	iorwf	postinc2,f,c
  4244  0156BC  503A               	movf	(btemp+5)^0,w,c
  4245  0156BE  12DE               	iorwf	postinc2,f,c
  4246  0156C0  503B               	movf	(btemp+6)^0,w,c
  4247  0156C2  12DE               	iorwf	postinc2,f,c
  4248  0156C4  503C               	movf	(btemp+7)^0,w,c
  4249  0156C6  12DE               	iorwf	postinc2,f,c
  4250                           
  4251                           ;stkvar	_sign @ sp[(-5)+-1]
  4252  0156C8  0EFA               	movlw	-6
  4253  0156CA  50E3               	movf	plusw1,w,c
  4254  0156CC  B4D8               	btfsc	status,2,c
  4255  0156CE  D005               	goto	l7891
  4256                           
  4257                           ;stkvar	_val @ sp[(-5)+-5]
  4258  0156D0  0EF9               	movlw	-7
  4259  0156D2  AEE3               	btfss	plusw1,7,c
  4260  0156D4  D002               	goto	l7891
  4261                           
  4262                           ;stkvar	_arg @ sp[(-5)+0]
  4263  0156D6  0EFE               	movlw	-2
  4264  0156D8  8EE3               	bsf	plusw1,7,c
  4265  0156DA                     l7891:
  4266                           
  4267                           ;stkvar	_arg @ sp[(-5)+0]
  4268  0156DA  0EFB               	movlw	-5
  4269  0156DC  006F FF8C  F035    	movff	plusw1,btemp
  4270  0156E2  0EFC               	movlw	-4
  4271  0156E4  006F FF8C  F036    	movff	plusw1,btemp+1
  4272  0156EA  0EFD               	movlw	-3
  4273  0156EC  006F FF8C  F037    	movff	plusw1,btemp+2
  4274  0156F2  0EFE               	movlw	-2
  4275  0156F4  006F FF8C  F038    	movff	plusw1,btemp+3
  4276  0156FA                     l2632:
  4277                           
  4278                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  4279  0156FA  0EF6               	movlw	246
  4280  0156FC  26E1               	addwf	fsr1l,f,c
  4281  0156FE  0EFF               	movlw	255
  4282  015700  22E2               	addwfc	fsr1h,f,c
  4283  015702  0012               	return		;funcret
  4284  015704                     __end_of___xxtofl:
  4285                           	opt callstack 0
  4286                           
  4287 ;; *************** function _clear_adc_scan *****************
  4288 ;; Defined at:
  4289 ;;		line 59 in file "daq.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;		None
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;		None
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  1  [STACK] void 
  4296 ;; Registers used:
  4297 ;;		None
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/4
  4300 ;;		On exit  : 3F/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4307 ;;Total ram usage:        0 bytes
  4308 ;; Hardware stack levels used:    1
  4309 ;; Hardware stack levels required when called:    6
  4310 ;; This function calls:
  4311 ;;		Nothing
  4312 ;; This function is called by:
  4313 ;;		_main
  4314 ;; This function uses a reentrant model
  4315 ;;
  4316                           
  4317                           	psect	text16
  4318  01823E                     __ptext16:
  4319                           	opt callstack 0
  4320  01823E                     _clear_adc_scan:
  4321                           	opt callstack 24
  4322                           
  4323                           ;daq.c: 61:  R.done = 0;
  4324                           
  4325                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4326                           ;incstack = 0
  4327  01823E  0100               	movlb	0	; () banked
  4328  018240  6B8B               	clrf	(_R+43)& (0+255),b	;volatile
  4329                           
  4330                           ; BSR set to: 0
  4331                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4332  018242  0012               	return		;funcret
  4333  018244                     __end_of_clear_adc_scan:
  4334                           	opt callstack 0
  4335                           
  4336 ;; *************** function _check_help *****************
  4337 ;; Defined at:
  4338 ;;		line 40 in file "mconfig.c"
  4339 ;; Parameters:    Size  Location     Type
  4340 ;;  flipper         1  [STACK] _Bool 
  4341 ;; Auto vars:     Size  Location     Type
  4342 ;;		None
  4343 ;; Return value:  Size  Location     Type
  4344 ;;                  1  [STACK] void 
  4345 ;; Registers used:
  4346 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4347 ;; Tracked objects:
  4348 ;;		On entry : 3F/1
  4349 ;;		On exit  : 0/0
  4350 ;;		Unchanged: 0/0
  4351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4356 ;;Total ram usage:        0 bytes
  4357 ;; Hardware stack levels used:    1
  4358 ;; Hardware stack levels required when called:   18
  4359 ;; This function calls:
  4360 ;;		_StartTimer
  4361 ;;		_TimerDone
  4362 ;;		_display_help
  4363 ;;		_display_info
  4364 ;;		_get_vterm_ptr
  4365 ;;		_help_button
  4366 ;;		_mode_lamp_bright
  4367 ;;		_mode_lamp_dim
  4368 ;;		_set_display_info
  4369 ;;		_set_temp_display_help
  4370 ;;		_set_vterm
  4371 ;;		_sprintf
  4372 ;;		_update_lcd
  4373 ;;		_vterm_dump
  4374 ;; This function is called by:
  4375 ;;		_main
  4376 ;; This function uses a reentrant model
  4377 ;;
  4378                           
  4379                           	psect	text17
  4380  0152EE                     __ptext17:
  4381                           	opt callstack 0
  4382  0152EE                     _check_help:
  4383                           	opt callstack 12
  4384                           
  4385                           ;mconfig.c: 40: void check_help(_Bool flipper);mconfig.c: 41: {;mconfig.c: 45:  if (help
      +                          _button() && display_info() != DIS_HELP) {
  4386                           
  4387                           ; BSR set to: 0
  4388                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4389                           ;incstack = 0
  4390  0152EE  ECF6  F0BC         	call	_help_button	;wreg free
  4391  0152F2  5035               	movf	btemp^0,w,c
  4392  0152F4  B4D8               	btfsc	status,2,c
  4393  0152F6  D0D0               	goto	l9913
  4394  0152F8  EC0F  F0C1         	call	_display_info	;wreg free
  4395  0152FC  0435               	decf	btemp^0,w,c
  4396  0152FE  B4D8               	btfsc	status,2,c
  4397  015300  D0CB               	goto	l9913
  4398                           
  4399                           ;mconfig.c: 46:   StartTimer(TMR_FLIPPER, 1500);
  4400  015302  0EDC               	movlw	220
  4401  015304  6EE6               	movwf	postinc1,c
  4402  015306  0E05               	movlw	5
  4403  015308  6EE6               	movwf	postinc1,c
  4404  01530A  0E0B               	movlw	11
  4405  01530C  6EE6               	movwf	postinc1,c
  4406  01530E  ECD8  F0BC         	call	_StartTimer	;wreg free
  4407                           
  4408                           ;mconfig.c: 47:   if (V.debug)
  4409  015312  0101               	movlb	1	; () banked
  4410  015314  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  4411                           
  4412                           ; BSR set to: 1
  4413                           ;mconfig.c: 48:    vterm_dump();
  4414  015316  EC22  F0B0         	call	_vterm_dump	;wreg free
  4415                           
  4416                           ;mconfig.c: 50:   set_vterm(1);
  4417  01531A  0E01               	movlw	1
  4418  01531C  6EE6               	movwf	postinc1,c
  4419  01531E  EC4A  F0C0         	call	_set_vterm	;wreg free
  4420                           
  4421                           ; BSR set to: 4
  4422                           ;mconfig.c: 51:   set_temp_display_help(display_info());
  4423  015322  EC0F  F0C1         	call	_display_info	;wreg free
  4424  015326  5035               	movf	btemp^0,w,c
  4425  015328  6EE6               	movwf	postinc1,c
  4426  01532A  ECCB  F0C0         	call	_set_temp_display_help	;wreg free
  4427                           
  4428                           ; BSR set to: 1
  4429                           ;mconfig.c: 52:   set_display_info(DIS_HELP);
  4430  01532E  0E01               	movlw	1
  4431  015330  6EE6               	movwf	postinc1,c
  4432  015332  EC00  F0C0         	call	_set_display_info	;wreg free
  4433                           
  4434                           ;mconfig.c: 53:   if (flipper) {
  4435                           ;stkvar	_flipper @ sp[(0)+-1]
  4436  015336  0EFF               	movlw	-1
  4437  015338  50E3               	movf	plusw1,w,c
  4438  01533A  B4D8               	btfsc	status,2,c
  4439  01533C  D019               	goto	l9901
  4440                           
  4441                           ;mconfig.c: 54:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  4442  01533E  0EC3               	movlw	low STR_14
  4443  015340  6EE6               	movwf	postinc1,c
  4444  015342  0EFF               	movlw	high STR_14
  4445  015344  6EE6               	movwf	postinc1,c
  4446  015346  0E2E               	movlw	low STR_16
  4447  015348  6EE6               	movwf	postinc1,c
  4448  01534A  0EFF               	movlw	high STR_16
  4449  01534C  6EE6               	movwf	postinc1,c
  4450  01534E  0E01               	movlw	1
  4451  015350  6EE6               	movwf	postinc1,c
  4452  015352  0E00               	movlw	0
  4453  015354  6EE6               	movwf	postinc1,c
  4454  015356  ECE0  F0BD         	call	_get_vterm_ptr	;wreg free
  4455  01535A  0060  F0D7  FFE6   	movff	btemp,postinc1
  4456  015360  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4457  015366  0E06               	movlw	6
  4458  015368  6EE6               	movwf	postinc1,c
  4459  01536A  ECE8  F0B2         	call	_sprintf	;wreg free
  4460                           
  4461                           ;mconfig.c: 55:   } else {
  4462  01536E  D018               	goto	l1551
  4463  015370                     l9901:
  4464                           
  4465                           ;mconfig.c: 56:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  4466  015370  0ED9               	movlw	low STR_15
  4467  015372  6EE6               	movwf	postinc1,c
  4468  015374  0EFF               	movlw	high STR_15
  4469  015376  6EE6               	movwf	postinc1,c
  4470  015378  0E2E               	movlw	low STR_16
  4471  01537A  6EE6               	movwf	postinc1,c
  4472  01537C  0EFF               	movlw	high STR_16
  4473  01537E  6EE6               	movwf	postinc1,c
  4474  015380  0E01               	movlw	1
  4475  015382  6EE6               	movwf	postinc1,c
  4476  015384  0E00               	movlw	0
  4477  015386  6EE6               	movwf	postinc1,c
  4478  015388  ECE0  F0BD         	call	_get_vterm_ptr	;wreg free
  4479  01538C  0060  F0D7  FFE6   	movff	btemp,postinc1
  4480  015392  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4481  015398  0E06               	movlw	6
  4482  01539A  6EE6               	movwf	postinc1,c
  4483  01539C  ECE8  F0B2         	call	_sprintf	;wreg free
  4484  0153A0                     l1551:
  4485                           
  4486                           ;mconfig.c: 58:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  4487  0153A0  0101               	movlb	1	; () banked
  4488  0153A2  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  4489  0153A4  32E8               	rrcf	wreg,f,c
  4490  0153A6  32E8               	rrcf	wreg,f,c
  4491  0153A8  0B03               	andlw	3
  4492  0153AA  0D24               	mullw	36
  4493  0153AC  0E12               	movlw	18
  4494  0153AE  26F3               	addwf	243,f,c
  4495  0153B0  0E00               	movlw	0
  4496  0153B2  22F4               	addwfc	244,f,c
  4497  0153B4  0E73               	movlw	low _T
  4498  0153B6  6E3F               	movwf	(btemp+10)^0,c
  4499  0153B8  0EFE               	movlw	high _T
  4500  0153BA  6E40               	movwf	(btemp+11)^0,c
  4501  0153BC  50F3               	movf	243,w,c
  4502  0153BE  263F               	addwf	(btemp+10)^0,f,c
  4503  0153C0  50F4               	movf	244,w,c
  4504  0153C2  2240               	addwfc	(btemp+11)^0,f,c
  4505  0153C4  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  4506  0153CA  0060  F103  FFE6   	movff	btemp+11,postinc1
  4507  0153D0  0ECF               	movlw	low STR_18
  4508  0153D2  6EE6               	movwf	postinc1,c
  4509  0153D4  0EFF               	movlw	high STR_18
  4510  0153D6  6EE6               	movwf	postinc1,c
  4511  0153D8  0E01               	movlw	1
  4512  0153DA  6EE6               	movwf	postinc1,c
  4513  0153DC  0E01               	movlw	1
  4514  0153DE  6EE6               	movwf	postinc1,c
  4515  0153E0  ECE0  F0BD         	call	_get_vterm_ptr	;wreg free
  4516  0153E4  0060  F0D7  FFE6   	movff	btemp,postinc1
  4517  0153EA  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4518  0153F0  0E06               	movlw	6
  4519  0153F2  6EE6               	movwf	postinc1,c
  4520  0153F4  ECE8  F0B2         	call	_sprintf	;wreg free
  4521                           
  4522                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  4523  0153F8  0101               	movlb	1	; () banked
  4524  0153FA  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  4525  0153FC  32E8               	rrcf	wreg,f,c
  4526  0153FE  32E8               	rrcf	wreg,f,c
  4527  015400  0B03               	andlw	3
  4528  015402  0D24               	mullw	36
  4529  015404  0E73               	movlw	low _T
  4530  015406  6E3F               	movwf	(btemp+10)^0,c
  4531  015408  0EFE               	movlw	high _T
  4532  01540A  6E40               	movwf	(btemp+11)^0,c
  4533  01540C  50F3               	movf	243,w,c
  4534  01540E  263F               	addwf	(btemp+10)^0,f,c
  4535  015410  50F4               	movf	244,w,c
  4536  015412  2240               	addwfc	(btemp+11)^0,f,c
  4537  015414  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  4538  01541A  0060  F103  FFE6   	movff	btemp+11,postinc1
  4539  015420  0ECF               	movlw	low STR_18
  4540  015422  6EE6               	movwf	postinc1,c
  4541  015424  0EFF               	movlw	high STR_18
  4542  015426  6EE6               	movwf	postinc1,c
  4543  015428  0E01               	movlw	1
  4544  01542A  6EE6               	movwf	postinc1,c
  4545  01542C  0E02               	movlw	2
  4546  01542E  6EE6               	movwf	postinc1,c
  4547  015430  ECE0  F0BD         	call	_get_vterm_ptr	;wreg free
  4548  015434  0060  F0D7  FFE6   	movff	btemp,postinc1
  4549  01543A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4550  015440  0E06               	movlw	6
  4551  015442  6EE6               	movwf	postinc1,c
  4552  015444  ECE8  F0B2         	call	_sprintf	;wreg free
  4553                           
  4554                           ;mconfig.c: 60:   V.help_id++;
  4555  015448  EE20  F19B         	lfsr	2,_V+155	;volatile
  4556  01544C  38DF               	swapf	223,w,c
  4557  01544E  6E40               	movwf	(btemp+11)^0,c
  4558  015450  3240               	rrcf	(btemp+11)^0,f,c
  4559  015452  3040               	rrcf	(btemp+11)^0,w,c
  4560  015454  0B03               	andlw	3
  4561  015456  6E40               	movwf	(btemp+11)^0,c
  4562  015458  2A40               	incf	(btemp+11)^0,f,c
  4563  01545A  3A40               	swapf	(btemp+11)^0,f,c
  4564  01545C  3640               	rlcf	(btemp+11)^0,f,c
  4565  01545E  3640               	rlcf	(btemp+11)^0,f,c
  4566  015460  50DF               	movf	223,w,c
  4567  015462  1840               	xorwf	(btemp+11)^0,w,c
  4568  015464  0B3F               	andlw	-193
  4569  015466  1840               	xorwf	(btemp+11)^0,w,c
  4570  015468  6EDF               	movwf	223,c
  4571                           
  4572                           ;mconfig.c: 61:   StartTimer(TMR_HELPDIS, 3000);
  4573  01546A  0EB8               	movlw	184
  4574  01546C  6EE6               	movwf	postinc1,c
  4575  01546E  0E0B               	movlw	11
  4576  015470  6EE6               	movwf	postinc1,c
  4577  015472  0E09               	movlw	9
  4578  015474  6EE6               	movwf	postinc1,c
  4579  015476  ECD8  F0BC         	call	_StartTimer	;wreg free
  4580                           
  4581                           ;mconfig.c: 62:   StartTimer(TMR_INFO, 3000);
  4582  01547A  0EB8               	movlw	184
  4583  01547C  6EE6               	movwf	postinc1,c
  4584  01547E  0E0B               	movlw	11
  4585  015480  6EE6               	movwf	postinc1,c
  4586  015482  0E07               	movlw	7
  4587  015484  6EE6               	movwf	postinc1,c
  4588  015486  ECD8  F0BC         	call	_StartTimer	;wreg free
  4589                           
  4590                           ;mconfig.c: 63:   mode_lamp_bright();
  4591  01548A  ECDA  F0C0         	call	_mode_lamp_bright	;wreg free
  4592                           
  4593                           ;mconfig.c: 64:   update_lcd(1);
  4594  01548E  0E01               	movlw	1
  4595  015490  6EE6               	movwf	postinc1,c
  4596  015492  EC61  F0B2         	call	_update_lcd	;wreg free
  4597                           
  4598                           ;mconfig.c: 65:  } else {
  4599  015496  D032               	goto	l1555
  4600  015498                     l9913:
  4601                           
  4602                           ;mconfig.c: 66:   if (TimerDone(TMR_HELPDIS)) {
  4603  015498  0E09               	movlw	9
  4604  01549A  6EE6               	movwf	postinc1,c
  4605  01549C  EC8B  F0BF         	call	_TimerDone	;wreg free
  4606  0154A0  5035               	movf	btemp^0,w,c
  4607  0154A2  B4D8               	btfsc	status,2,c
  4608  0154A4  D02B               	goto	l1555
  4609                           
  4610                           ;mconfig.c: 67:    set_vterm(0);
  4611  0154A6  0E00               	movlw	0
  4612  0154A8  6EE6               	movwf	postinc1,c
  4613  0154AA  EC4A  F0C0         	call	_set_vterm	;wreg free
  4614                           
  4615                           ; BSR set to: 4
  4616                           ;mconfig.c: 68:    V.help = 0;
  4617  0154AE  0101               	movlb	1	; () banked
  4618  0154B0  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  4619                           
  4620                           ; BSR set to: 1
  4621                           ;mconfig.c: 69:    set_display_info(display_help());
  4622  0154B2  EC13  F0C1         	call	_display_help	;wreg free
  4623  0154B6  5035               	movf	btemp^0,w,c
  4624  0154B8  6EE6               	movwf	postinc1,c
  4625  0154BA  EC00  F0C0         	call	_set_display_info	;wreg free
  4626                           
  4627                           ;mconfig.c: 70:    mode_lamp_dim(V.mode_pwm);
  4628  0154BE  0060  F657  FFE6   	movff	_V+149,postinc1
  4629  0154C4  0060  F65B  FFE6   	movff	_V+150,postinc1
  4630  0154CA  EC7F  F0C0         	call	_mode_lamp_dim	;wreg free
  4631                           
  4632                           ;mconfig.c: 71:    if (TimerDone(TMR_FLIPPER)) {
  4633  0154CE  0E0B               	movlw	11
  4634  0154D0  6EE6               	movwf	postinc1,c
  4635  0154D2  EC8B  F0BF         	call	_TimerDone	;wreg free
  4636  0154D6  5035               	movf	btemp^0,w,c
  4637  0154D8  B4D8               	btfsc	status,2,c
  4638  0154DA  D010               	goto	l1555
  4639                           
  4640                           ;mconfig.c: 72:     V.flipper = !V.flipper;
  4641  0154DC  0101               	movlb	1	; () banked
  4642  0154DE  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  4643  0154E0  A4D8               	btfss	status,2,c
  4644  0154E2  D002               	goto	u9970
  4645  0154E4  0E01               	movlw	1
  4646  0154E6  D001               	goto	u9980
  4647  0154E8                     u9970:
  4648  0154E8  0E00               	movlw	0
  4649  0154EA                     u9980:
  4650  0154EA  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  4651                           
  4652                           ; BSR set to: 1
  4653                           ;mconfig.c: 73:     StartTimer(TMR_FLIPPER, 1500);
  4654  0154EC  0EDC               	movlw	220
  4655  0154EE  6EE6               	movwf	postinc1,c
  4656  0154F0  0E05               	movlw	5
  4657  0154F2  6EE6               	movwf	postinc1,c
  4658  0154F4  0E0B               	movlw	11
  4659  0154F6  6EE6               	movwf	postinc1,c
  4660  0154F8  ECD8  F0BC         	call	_StartTimer	;wreg free
  4661  0154FC                     l1555:
  4662                           
  4663                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4664  0154FC  52E5               	movf	postdec1,f,c
  4665  0154FE  0012               	return		;funcret
  4666  015500                     __end_of_check_help:
  4667                           	opt callstack 0
  4668                           
  4669 ;; *************** function _vterm_dump *****************
  4670 ;; Defined at:
  4671 ;;		line 118 in file "mconfig.c"
  4672 ;; Parameters:    Size  Location     Type
  4673 ;;		None
  4674 ;; Auto vars:     Size  Location     Type
  4675 ;;		None
  4676 ;; Return value:  Size  Location     Type
  4677 ;;                  1  [STACK] void 
  4678 ;; Registers used:
  4679 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4680 ;; Tracked objects:
  4681 ;;		On entry : 3F/1
  4682 ;;		On exit  : 0/0
  4683 ;;		Unchanged: 0/0
  4684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4689 ;;Total ram usage:        0 bytes
  4690 ;; Hardware stack levels used:    1
  4691 ;; Hardware stack levels required when called:   17
  4692 ;; This function calls:
  4693 ;;		_WaitMs
  4694 ;;		_eaDogM_WriteStringAtPos
  4695 ;;		_get_vterm_ptr
  4696 ;;		_sprintf
  4697 ;;		_wait_lcd_done
  4698 ;; This function is called by:
  4699 ;;		_check_help
  4700 ;; This function uses a reentrant model
  4701 ;;
  4702                           
  4703                           	psect	text18
  4704  016044                     __ptext18:
  4705                           	opt callstack 0
  4706  016044                     _vterm_dump:
  4707                           	opt callstack 12
  4708                           
  4709                           ;mconfig.c: 120:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  4710                           
  4711                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4712                           ;incstack = 0
  4713  016044  0E01               	movlw	1
  4714  016046  6EE6               	movwf	postinc1,c
  4715  016048  0E00               	movlw	0
  4716  01604A  6EE6               	movwf	postinc1,c
  4717  01604C  ECE0  F0BD         	call	_get_vterm_ptr	;wreg free
  4718  016050  0060  F0D7  FFE6   	movff	btemp,postinc1
  4719  016056  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4720  01605C  0E00               	movlw	0
  4721  01605E  6EE6               	movwf	postinc1,c
  4722  016060  0E00               	movlw	0
  4723  016062  6EE6               	movwf	postinc1,c
  4724  016064  ECE0  F0BD         	call	_get_vterm_ptr	;wreg free
  4725  016068  0060  F0D7  FFE6   	movff	btemp,postinc1
  4726  01606E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4727  016074  0E98               	movlw	low STR_20
  4728  016076  6EE6               	movwf	postinc1,c
  4729  016078  0EFF               	movlw	high STR_20
  4730  01607A  6EE6               	movwf	postinc1,c
  4731  01607C  0E01               	movlw	low (_V+1)
  4732  01607E  6EE6               	movwf	postinc1,c
  4733  016080  0E01               	movlw	high (_V+1)
  4734  016082  6EE6               	movwf	postinc1,c
  4735  016084  0E08               	movlw	8
  4736  016086  6EE6               	movwf	postinc1,c
  4737  016088  ECE8  F0B2         	call	_sprintf	;wreg free
  4738                           
  4739                           ;mconfig.c: 121:  wait_lcd_done();
  4740  01608C  EC3C  F0C0         	call	_wait_lcd_done	;wreg free
  4741                           
  4742                           ; BSR set to: 0
  4743                           ;mconfig.c: 122:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  4744  016090  0E01               	movlw	low (_V+1)
  4745  016092  6EE6               	movwf	postinc1,c
  4746  016094  0E01               	movlw	high (_V+1)
  4747  016096  6EE6               	movwf	postinc1,c
  4748  016098  0E00               	movlw	0
  4749  01609A  6EE6               	movwf	postinc1,c
  4750  01609C  0E00               	movlw	0
  4751  01609E  6EE6               	movwf	postinc1,c
  4752  0160A0  EC49  F0BD         	call	_eaDogM_WriteStringAtPos	;wreg free
  4753                           
  4754                           ; BSR set to: 59
  4755                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  4756  0160A4  0E01               	movlw	1
  4757  0160A6  6EE6               	movwf	postinc1,c
  4758  0160A8  0E01               	movlw	1
  4759  0160AA  6EE6               	movwf	postinc1,c
  4760  0160AC  ECE0  F0BD         	call	_get_vterm_ptr	;wreg free
  4761  0160B0  0060  F0D7  FFE6   	movff	btemp,postinc1
  4762  0160B6  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4763  0160BC  0E00               	movlw	0
  4764  0160BE  6EE6               	movwf	postinc1,c
  4765  0160C0  0E01               	movlw	1
  4766  0160C2  6EE6               	movwf	postinc1,c
  4767  0160C4  ECE0  F0BD         	call	_get_vterm_ptr	;wreg free
  4768  0160C8  0060  F0D7  FFE6   	movff	btemp,postinc1
  4769  0160CE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4770  0160D4  0E98               	movlw	low STR_20
  4771  0160D6  6EE6               	movwf	postinc1,c
  4772  0160D8  0EFF               	movlw	high STR_20
  4773  0160DA  6EE6               	movwf	postinc1,c
  4774  0160DC  0E01               	movlw	low (_V+1)
  4775  0160DE  6EE6               	movwf	postinc1,c
  4776  0160E0  0E01               	movlw	high (_V+1)
  4777  0160E2  6EE6               	movwf	postinc1,c
  4778  0160E4  0E08               	movlw	8
  4779  0160E6  6EE6               	movwf	postinc1,c
  4780  0160E8  ECE8  F0B2         	call	_sprintf	;wreg free
  4781                           
  4782                           ;mconfig.c: 124:  wait_lcd_done();
  4783  0160EC  EC3C  F0C0         	call	_wait_lcd_done	;wreg free
  4784                           
  4785                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  4786  0160F0  0E01               	movlw	low (_V+1)
  4787  0160F2  6EE6               	movwf	postinc1,c
  4788  0160F4  0E01               	movlw	high (_V+1)
  4789  0160F6  6EE6               	movwf	postinc1,c
  4790  0160F8  0E00               	movlw	0
  4791  0160FA  6EE6               	movwf	postinc1,c
  4792  0160FC  0E01               	movlw	1
  4793  0160FE  6EE6               	movwf	postinc1,c
  4794  016100  EC49  F0BD         	call	_eaDogM_WriteStringAtPos	;wreg free
  4795                           
  4796                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  4797  016104  0E01               	movlw	1
  4798  016106  6EE6               	movwf	postinc1,c
  4799  016108  0E02               	movlw	2
  4800  01610A  6EE6               	movwf	postinc1,c
  4801  01610C  ECE0  F0BD         	call	_get_vterm_ptr	;wreg free
  4802  016110  0060  F0D7  FFE6   	movff	btemp,postinc1
  4803  016116  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4804  01611C  0E00               	movlw	0
  4805  01611E  6EE6               	movwf	postinc1,c
  4806  016120  0E02               	movlw	2
  4807  016122  6EE6               	movwf	postinc1,c
  4808  016124  ECE0  F0BD         	call	_get_vterm_ptr	;wreg free
  4809  016128  0060  F0D7  FFE6   	movff	btemp,postinc1
  4810  01612E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4811  016134  0E98               	movlw	low STR_20
  4812  016136  6EE6               	movwf	postinc1,c
  4813  016138  0EFF               	movlw	high STR_20
  4814  01613A  6EE6               	movwf	postinc1,c
  4815  01613C  0E01               	movlw	low (_V+1)
  4816  01613E  6EE6               	movwf	postinc1,c
  4817  016140  0E01               	movlw	high (_V+1)
  4818  016142  6EE6               	movwf	postinc1,c
  4819  016144  0E08               	movlw	8
  4820  016146  6EE6               	movwf	postinc1,c
  4821  016148  ECE8  F0B2         	call	_sprintf	;wreg free
  4822                           
  4823                           ;mconfig.c: 127:  wait_lcd_done();
  4824  01614C  EC3C  F0C0         	call	_wait_lcd_done	;wreg free
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  4828  016150  0E01               	movlw	low (_V+1)
  4829  016152  6EE6               	movwf	postinc1,c
  4830  016154  0E01               	movlw	high (_V+1)
  4831  016156  6EE6               	movwf	postinc1,c
  4832  016158  0E00               	movlw	0
  4833  01615A  6EE6               	movwf	postinc1,c
  4834  01615C  0E02               	movlw	2
  4835  01615E  6EE6               	movwf	postinc1,c
  4836  016160  EC49  F0BD         	call	_eaDogM_WriteStringAtPos	;wreg free
  4837                           
  4838                           ; BSR set to: 59
  4839                           ;mconfig.c: 129:  WaitMs(3000);
  4840  016164  0EB8               	movlw	184
  4841  016166  6EE6               	movwf	postinc1,c
  4842  016168  0E0B               	movlw	11
  4843  01616A  6EE6               	movwf	postinc1,c
  4844  01616C  EC2E  F0BD         	call	_WaitMs	;wreg free
  4845                           
  4846                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  4847  016170  0012               	return		;funcret
  4848  016172                     __end_of_vterm_dump:
  4849                           	opt callstack 0
  4850                           
  4851 ;; *************** function _sprintf *****************
  4852 ;; Defined at:
  4853 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;  s               2  [STACK] PTR unsigned char 
  4856 ;;		 -> D.lcd(216), D(218), V(171), 
  4857 ;;  fmt             2  [STACK] PTR const unsigned char 
  4858 ;;		 -> STR_31(3), STR_30(3), STR_29(19), STR_28(19), 
  4859 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
  4860 ;;		 -> STR_23(24), STR_22(15), STR_21(15), STR_20(15), 
  4861 ;;		 -> STR_19(10), STR_18(10), STR_17(19), STR_16(19), 
  4862 ;;		 -> STR_10(13), STR_9(13), STR_8(17), STR_6(15), 
  4863 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  4864 ;; Auto vars:     Size  Location     Type
  4865 ;;  f               6  [STACK] struct _IO_FILE
  4866 ;;  ap              2  [STACK] PTR void [1]
  4867 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4868 ;;  ret             2    0        int 
  4869 ;; Return value:  Size  Location     Type
  4870 ;;                  2  [STACK] int 
  4871 ;; Registers used:
  4872 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4873 ;; Tracked objects:
  4874 ;;		On entry : 0/4
  4875 ;;		On exit  : 0/0
  4876 ;;		Unchanged: 0/0
  4877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4882 ;;Total ram usage:        0 bytes
  4883 ;; Hardware stack levels used:    1
  4884 ;; Hardware stack levels required when called:   14
  4885 ;; This function calls:
  4886 ;;		_vfprintf
  4887 ;; This function is called by:
  4888 ;;		_main
  4889 ;;		_check_help
  4890 ;;		_vterm_dump
  4891 ;; This function uses a reentrant model
  4892 ;;
  4893                           
  4894                           	psect	text19
  4895  0165D0                     __ptext19:
  4896                           	opt callstack 0
  4897  0165D0                     _sprintf:
  4898                           	opt callstack 0
  4899                           
  4900                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4901  0165D0  0E08               	movlw	8
  4902  0165D2  26E1               	addwf	fsr1l,f,c
  4903  0165D4  0E00               	movlw	0
  4904  0165D6  22E2               	addwfc	fsr1h,f,c
  4905                           
  4906                           ;incstack = 0
  4907  0165D8  0EFE               	movlw	254
  4908  0165DA  6E3F               	movwf	(btemp+10)^0,c
  4909  0165DC  0EFF               	movlw	255
  4910  0165DE  6E40               	movwf	(btemp+11)^0,c
  4911                           
  4912                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  4913  0165E0  0EF5               	movlw	245
  4914  0165E2  24E1               	addwf	fsr1l,w,c
  4915  0165E4  6E3D               	movwf	(btemp+8)^0,c
  4916  0165E6  0EFF               	movlw	255
  4917  0165E8  20E2               	addwfc	fsr1h,w,c
  4918  0165EA  6E3E               	movwf	(btemp+9)^0,c
  4919  0165EC  503F               	movf	(btemp+10)^0,w,c
  4920  0165EE  263D               	addwf	(btemp+8)^0,f,c
  4921  0165F0  5040               	movf	(btemp+11)^0,w,c
  4922  0165F2  223E               	addwfc	(btemp+9)^0,f,c
  4923                           
  4924                           ;stkvar	_ap @ sp[(-8)+6]
  4925  0165F4  0EFF               	movlw	-1
  4926  0165F6  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  4927  0165FC  0EFE               	movlw	-2
  4928  0165FE  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  4929                           
  4930                           ;stkvar	_s @ sp[(-8)+-3]
  4931  016604  0EF5               	movlw	-11
  4932  016606  006F FF8C  F03F    	movff	plusw1,btemp+10
  4933  01660C  0EF6               	movlw	-10
  4934  01660E  006F FF8C  F040    	movff	plusw1,btemp+11
  4935                           
  4936                           ;stkvar	_f @ sp[(-8)+0]
  4937  016614  0EF9               	movlw	-7
  4938  016616  0060  F103  FFE3   	movff	btemp+11,plusw1
  4939  01661C  0EF8               	movlw	-8
  4940  01661E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  4941                           
  4942                           ;stkvar	_f @ sp[(-8)+0]
  4943  016624  0EFA               	movlw	250
  4944  016626  24E1               	addwf	fsr1l,w,c
  4945  016628  6ED9               	movwf	fsr2l,c
  4946  01662A  0EFF               	movlw	255
  4947  01662C  20E2               	addwfc	fsr1h,w,c
  4948  01662E  6EDA               	movwf	fsr2h,c
  4949  016630  0E00               	movlw	0
  4950  016632  6EDE               	movwf	postinc2,c
  4951  016634  0E00               	movlw	0
  4952  016636  6EDD               	movwf	postdec2,c
  4953                           
  4954                           ;stkvar	_f @ sp[(-8)+0]
  4955  016638  0EFC               	movlw	252
  4956  01663A  24E1               	addwf	fsr1l,w,c
  4957  01663C  6ED9               	movwf	fsr2l,c
  4958  01663E  0EFF               	movlw	255
  4959  016640  20E2               	addwfc	fsr1h,w,c
  4960  016642  6EDA               	movwf	fsr2h,c
  4961  016644  0E00               	movlw	0
  4962  016646  6EDE               	movwf	postinc2,c
  4963  016648  0E00               	movlw	0
  4964  01664A  6EDD               	movwf	postdec2,c
  4965                           
  4966                           ;stkvar	_ap @ sp[(-8)+6]
  4967  01664C  0EFE               	movlw	254
  4968  01664E  24E1               	addwf	fsr1l,w,c
  4969  016650  6E35               	movwf	btemp^0,c
  4970  016652  0EFF               	movlw	255
  4971  016654  20E2               	addwfc	fsr1h,w,c
  4972  016656  6E36               	movwf	(btemp+1)^0,c
  4973  016658  0060  F0D7  FFE6   	movff	btemp,postinc1
  4974  01665E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4975                           
  4976                           ;stkvar	_fmt @ sp[(-10)+-5]
  4977  016664  0EF1               	movlw	-15
  4978  016666  006F FF8F FFE6     	movff	plusw1,postinc1
  4979  01666C  006F FF8F FFE6     	movff	plusw1,postinc1
  4980                           
  4981                           ;stkvar	_f @ sp[(-12)+0]
  4982  016672  0EF4               	movlw	244
  4983  016674  24E1               	addwf	fsr1l,w,c
  4984  016676  6E35               	movwf	btemp^0,c
  4985  016678  0EFF               	movlw	255
  4986  01667A  20E2               	addwfc	fsr1h,w,c
  4987  01667C  6E36               	movwf	(btemp+1)^0,c
  4988  01667E  0060  F0D7  FFE6   	movff	btemp,postinc1
  4989  016684  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4990  01668A  ECBC  F0B5         	call	_vfprintf	;wreg free
  4991                           
  4992                           ;stkvar	_f @ sp[(-8)+0]
  4993  01668E  0EFA               	movlw	250
  4994  016690  24E1               	addwf	fsr1l,w,c
  4995  016692  6ED9               	movwf	fsr2l,c
  4996  016694  0EFF               	movlw	255
  4997  016696  20E2               	addwfc	fsr1h,w,c
  4998  016698  6EDA               	movwf	fsr2h,c
  4999  01669A  006F FF78  F03F    	movff	postinc2,btemp+10
  5000  0166A0  006F FF74  F040    	movff	postdec2,btemp+11
  5001                           
  5002                           ;stkvar	_s @ sp[(-8)+-3]
  5003  0166A6  0EF5               	movlw	-11
  5004  0166A8  006F FF8C  F03D    	movff	plusw1,btemp+8
  5005  0166AE  0EF6               	movlw	-10
  5006  0166B0  006F FF8C  F03E    	movff	plusw1,btemp+9
  5007  0166B6  503F               	movf	(btemp+10)^0,w,c
  5008  0166B8  243D               	addwf	(btemp+8)^0,w,c
  5009  0166BA  6ED9               	movwf	fsr2l,c
  5010  0166BC  5040               	movf	(btemp+11)^0,w,c
  5011  0166BE  203E               	addwfc	(btemp+9)^0,w,c
  5012  0166C0  6EDA               	movwf	fsr2h,c
  5013  0166C2  0E00               	movlw	0
  5014  0166C4  6EDF               	movwf	indf2,c
  5015                           
  5016                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, args
      +                          ize = 4, vargsize = 0
  5017  0166C6  0EF8               	movlw	248
  5018  0166C8  26E1               	addwf	fsr1l,f,c
  5019  0166CA  0EFF               	movlw	255
  5020  0166CC  22E2               	addwfc	fsr1h,f,c
  5021  0166CE  52E5               	movf	postdec1,f,c
  5022  0166D0  50E7               	movf	indf1,w,c
  5023  0166D2  5EE1               	subwf	fsr1l,f,c
  5024  0166D4  0E00               	movlw	0
  5025  0166D6  5AE2               	subwfb	fsr1h,f,c
  5026  0166D8  0012               	return		;funcret
  5027  0166DA                     __end_of_sprintf:
  5028                           	opt callstack 0
  5029                           
  5030 ;; *************** function _get_vterm_ptr *****************
  5031 ;; Defined at:
  5032 ;;		line 113 in file "mconfig.c"
  5033 ;; Parameters:    Size  Location     Type
  5034 ;;  line            1  [STACK] unsigned char 
  5035 ;;  vterm           1  [STACK] unsigned char 
  5036 ;; Auto vars:     Size  Location     Type
  5037 ;;		None
  5038 ;; Return value:  Size  Location     Type
  5039 ;;                  2  [STACK] PTR unsigned char 
  5040 ;; Registers used:
  5041 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  5042 ;; Tracked objects:
  5043 ;;		On entry : 0/4
  5044 ;;		On exit  : 0/0
  5045 ;;		Unchanged: 0/0
  5046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5051 ;;Total ram usage:        0 bytes
  5052 ;; Hardware stack levels used:    1
  5053 ;; Hardware stack levels required when called:    6
  5054 ;; This function calls:
  5055 ;;		Nothing
  5056 ;; This function is called by:
  5057 ;;		_main
  5058 ;;		_check_help
  5059 ;;		_vterm_dump
  5060 ;; This function uses a reentrant model
  5061 ;;
  5062                           
  5063                           	psect	text20
  5064  017BC0                     __ptext20:
  5065                           	opt callstack 0
  5066  017BC0                     _get_vterm_ptr:
  5067                           	opt callstack 24
  5068                           
  5069                           ;mconfig.c: 113: char * get_vterm_ptr(uint8_t line, uint8_t vterm);mconfig.c: 114: {;mco
      +                          nfig.c: 115:  return D.lcd[vterm & 0x03][line & 0x03];
  5070                           ;stkvar	_vterm @ sp[(0)+-2]
  5071                           
  5072                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5073                           ;incstack = 0
  5074  017BC0  0EFE               	movlw	-2
  5075  017BC2  50E3               	movf	plusw1,w,c
  5076  017BC4  0B03               	andlw	3
  5077  017BC6  0D36               	mullw	54
  5078  017BC8  0E00               	movlw	low _D
  5079  017BCA  6E35               	movwf	btemp^0,c
  5080  017BCC  0E04               	movlw	high _D
  5081  017BCE  6E36               	movwf	(btemp+1)^0,c
  5082  017BD0  50F3               	movf	243,w,c
  5083  017BD2  2635               	addwf	btemp^0,f,c
  5084  017BD4  50F4               	movf	244,w,c
  5085  017BD6  2236               	addwfc	(btemp+1)^0,f,c
  5086                           
  5087                           ;stkvar	_line @ sp[(0)+-1]
  5088  017BD8  0EFF               	movlw	-1
  5089  017BDA  50E3               	movf	plusw1,w,c
  5090  017BDC  0B03               	andlw	3
  5091  017BDE  0D12               	mullw	18
  5092  017BE0  50F3               	movf	243,w,c
  5093  017BE2  2635               	addwf	btemp^0,f,c
  5094  017BE4  50F4               	movf	244,w,c
  5095  017BE6  2236               	addwfc	(btemp+1)^0,f,c
  5096                           
  5097                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5098  017BE8  52E5               	movf	postdec1,f,c
  5099  017BEA  52E5               	movf	postdec1,f,c
  5100  017BEC  0012               	return		;funcret
  5101  017BEE                     __end_of_get_vterm_ptr:
  5102                           	opt callstack 0
  5103                           
  5104 ;; *************** function _WaitMs *****************
  5105 ;; Defined at:
  5106 ;;		line 32 in file "timers.c"
  5107 ;; Parameters:    Size  Location     Type
  5108 ;;  numMilliseco    2  [STACK] const unsigned short 
  5109 ;; Auto vars:     Size  Location     Type
  5110 ;;		None
  5111 ;; Return value:  Size  Location     Type
  5112 ;;                  1  [STACK] void 
  5113 ;; Registers used:
  5114 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5115 ;; Tracked objects:
  5116 ;;		On entry : 0/1
  5117 ;;		On exit  : 0/0
  5118 ;;		Unchanged: 0/0
  5119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5124 ;;Total ram usage:        0 bytes
  5125 ;; Hardware stack levels used:    1
  5126 ;; Hardware stack levels required when called:    7
  5127 ;; This function calls:
  5128 ;;		_StartTimer
  5129 ;;		_TimerDone
  5130 ;; This function is called by:
  5131 ;;		_main
  5132 ;;		_vterm_dump
  5133 ;; This function uses a reentrant model
  5134 ;;
  5135                           
  5136                           	psect	text21
  5137  017A5C                     __ptext21:
  5138                           	opt callstack 0
  5139  017A5C                     _WaitMs:
  5140                           	opt callstack 21
  5141                           
  5142                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  5143                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  5144                           
  5145                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5146                           ;incstack = 0
  5147  017A5C  0EFE               	movlw	-2
  5148  017A5E  006F FF8F FFE6     	movff	plusw1,postinc1
  5149  017A64  006F FF8F FFE6     	movff	plusw1,postinc1
  5150  017A6A  0E00               	movlw	0
  5151  017A6C  6EE6               	movwf	postinc1,c
  5152  017A6E  ECD8  F0BC         	call	_StartTimer	;wreg free
  5153                           
  5154                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5155  017A72  D005               	goto	l7811
  5156  017A74                     l1481:
  5157                           
  5158                           ;timers.c: 36:   __nop();
  5159  017A74  F000               	nop	
  5160                           
  5161                           ;timers.c: 37:   __nop();
  5162  017A76  F000               	nop	
  5163                           
  5164                           ;timers.c: 38:   __nop();
  5165  017A78  F000               	nop	
  5166                           
  5167                           ;timers.c: 39:   __nop();
  5168  017A7A  F000               	nop	
  5169  017A7C  0004               	clrwdt		;# 
  5170  017A7E                     l7811:
  5171                           
  5172                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5173  017A7E  0E00               	movlw	0
  5174  017A80  6EE6               	movwf	postinc1,c
  5175  017A82  EC8B  F0BF         	call	_TimerDone	;wreg free
  5176  017A86  5035               	movf	btemp^0,w,c
  5177  017A88  B4D8               	btfsc	status,2,c
  5178  017A8A  D7F4               	goto	l1481
  5179                           
  5180                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  5181  017A8C  52E5               	movf	postdec1,f,c
  5182  017A8E  52E5               	movf	postdec1,f,c
  5183  017A90  0012               	return		;funcret
  5184  017A92                     __end_of_WaitMs:
  5185                           	opt callstack 0
  5186                           
  5187 ;; *************** function _update_lcd *****************
  5188 ;; Defined at:
  5189 ;;		line 82 in file "mconfig.c"
  5190 ;; Parameters:    Size  Location     Type
  5191 ;;  vterm           1  [STACK] unsigned char 
  5192 ;; Auto vars:     Size  Location     Type
  5193 ;;		None
  5194 ;; Return value:  Size  Location     Type
  5195 ;;                  1  [STACK] unsigned char 
  5196 ;; Registers used:
  5197 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5198 ;; Tracked objects:
  5199 ;;		On entry : 0/4
  5200 ;;		On exit  : 0/0
  5201 ;;		Unchanged: 0/0
  5202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5207 ;;Total ram usage:        0 bytes
  5208 ;; Hardware stack levels used:    1
  5209 ;; Hardware stack levels required when called:   17
  5210 ;; This function calls:
  5211 ;;		_eaDogM_WriteStringAtPos
  5212 ;;		_wait_lcd_done
  5213 ;; This function is called by:
  5214 ;;		_main
  5215 ;;		_check_help
  5216 ;; This function uses a reentrant model
  5217 ;;
  5218                           
  5219                           	psect	text22
  5220  0164C2                     __ptext22:
  5221                           	opt callstack 0
  5222  0164C2                     _update_lcd:
  5223                           	opt callstack 13
  5224                           
  5225                           ;mconfig.c: 82: uint8_t update_lcd(uint8_t vterm);mconfig.c: 83: {;mconfig.c: 84:  vterm
      +                           = vterm & 0x03;
  5226                           ;stkvar	_vterm @ sp[(0)+-1]
  5227                           
  5228                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5229                           ;incstack = 0
  5230  0164C2  0EFF               	movlw	-1
  5231  0164C4  006F FF8C  F035    	movff	plusw1,btemp
  5232  0164CA  0E03               	movlw	3
  5233  0164CC  1635               	andwf	btemp^0,f,c
  5234  0164CE  0EFF               	movlw	-1
  5235  0164D0  0060  F0D7  FFE3   	movff	btemp,plusw1
  5236                           
  5237                           ;mconfig.c: 86:  if (D.vterm >= 1 && vterm == 0)
  5238  0164D6  0104               	movlb	4	; () banked
  5239  0164D8  A1D8               	btfss	(_D+216)& (0+255),0,b
  5240  0164DA  D004               	goto	l9785
  5241                           
  5242                           ; BSR set to: 4
  5243                           ;stkvar	_vterm @ sp[(0)+-1]
  5244  0164DC  0EFF               	movlw	-1
  5245  0164DE  50E3               	movf	plusw1,w,c
  5246  0164E0  B4D8               	btfsc	status,2,c
  5247  0164E2  D074               	goto	l1559
  5248  0164E4                     l9785:
  5249                           
  5250                           ; BSR set to: 4
  5251                           ;mconfig.c: 89:  D.lcd[vterm][0][16] = 0;
  5252                           ;stkvar	_vterm @ sp[(0)+-1]
  5253  0164E4  0EFF               	movlw	-1
  5254  0164E6  50E3               	movf	plusw1,w,c
  5255  0164E8  0D36               	mullw	54
  5256  0164EA  0E10               	movlw	low (_D+16)
  5257  0164EC  24F3               	addwf	243,w,c
  5258  0164EE  6ED9               	movwf	fsr2l,c
  5259  0164F0  0E04               	movlw	high (_D+16)
  5260  0164F2  20F4               	addwfc	prodh,w,c
  5261  0164F4  6EDA               	movwf	fsr2h,c
  5262  0164F6  0E00               	movlw	0
  5263  0164F8  6EDF               	movwf	indf2,c
  5264                           
  5265                           ;mconfig.c: 90:  D.lcd[vterm][1][16] = 0;
  5266                           ;stkvar	_vterm @ sp[(0)+-1]
  5267  0164FA  0EFF               	movlw	-1
  5268  0164FC  50E3               	movf	plusw1,w,c
  5269  0164FE  0D36               	mullw	54
  5270  016500  0E22               	movlw	low (_D+34)
  5271  016502  24F3               	addwf	243,w,c
  5272  016504  6ED9               	movwf	fsr2l,c
  5273  016506  0E04               	movlw	high (_D+34)
  5274  016508  20F4               	addwfc	prodh,w,c
  5275  01650A  6EDA               	movwf	fsr2h,c
  5276  01650C  0E00               	movlw	0
  5277  01650E  6EDF               	movwf	indf2,c
  5278                           
  5279                           ;mconfig.c: 91:  D.lcd[vterm][2][16] = 0;
  5280                           ;stkvar	_vterm @ sp[(0)+-1]
  5281  016510  0EFF               	movlw	-1
  5282  016512  50E3               	movf	plusw1,w,c
  5283  016514  0D36               	mullw	54
  5284  016516  0E34               	movlw	low (_D+52)
  5285  016518  24F3               	addwf	243,w,c
  5286  01651A  6ED9               	movwf	fsr2l,c
  5287  01651C  0E04               	movlw	high (_D+52)
  5288  01651E  20F4               	addwfc	prodh,w,c
  5289  016520  6EDA               	movwf	fsr2h,c
  5290  016522  0E00               	movlw	0
  5291  016524  6EDF               	movwf	indf2,c
  5292                           
  5293                           ; BSR set to: 4
  5294                           ;mconfig.c: 92:  wait_lcd_done();
  5295  016526  EC3C  F0C0         	call	_wait_lcd_done	;wreg free
  5296                           
  5297                           ; BSR set to: 0
  5298                           ;mconfig.c: 93:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  5299                           ;stkvar	_vterm @ sp[(0)+-1]
  5300  01652A  0EFF               	movlw	-1
  5301  01652C  50E3               	movf	plusw1,w,c
  5302  01652E  0D36               	mullw	54
  5303  016530  0E00               	movlw	low _D
  5304  016532  6E3F               	movwf	(btemp+10)^0,c
  5305  016534  0E04               	movlw	high _D
  5306  016536  6E40               	movwf	(btemp+11)^0,c
  5307  016538  50F3               	movf	243,w,c
  5308  01653A  263F               	addwf	(btemp+10)^0,f,c
  5309  01653C  50F4               	movf	244,w,c
  5310  01653E  2240               	addwfc	(btemp+11)^0,f,c
  5311  016540  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  5312  016546  0060  F103  FFE6   	movff	btemp+11,postinc1
  5313  01654C  0E00               	movlw	0
  5314  01654E  6EE6               	movwf	postinc1,c
  5315  016550  0E00               	movlw	0
  5316  016552  6EE6               	movwf	postinc1,c
  5317  016554  EC49  F0BD         	call	_eaDogM_WriteStringAtPos	;wreg free
  5318                           
  5319                           ; BSR set to: 59
  5320                           ;mconfig.c: 94:  wait_lcd_done();
  5321  016558  EC3C  F0C0         	call	_wait_lcd_done	;wreg free
  5322                           
  5323                           ; BSR set to: 0
  5324                           ;mconfig.c: 95:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  5325                           ;stkvar	_vterm @ sp[(0)+-1]
  5326  01655C  0EFF               	movlw	-1
  5327  01655E  50E3               	movf	plusw1,w,c
  5328  016560  0D36               	mullw	54
  5329  016562  0E00               	movlw	low _D
  5330  016564  6E3F               	movwf	(btemp+10)^0,c
  5331  016566  0E04               	movlw	high _D
  5332  016568  6E40               	movwf	(btemp+11)^0,c
  5333  01656A  0E12               	movlw	18
  5334  01656C  263F               	addwf	(btemp+10)^0,f,c
  5335  01656E  0E00               	movlw	0
  5336  016570  2240               	addwfc	(btemp+11)^0,f,c
  5337  016572  50F3               	movf	243,w,c
  5338  016574  263F               	addwf	(btemp+10)^0,f,c
  5339  016576  50F4               	movf	244,w,c
  5340  016578  2240               	addwfc	(btemp+11)^0,f,c
  5341  01657A  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  5342  016580  0060  F103  FFE6   	movff	btemp+11,postinc1
  5343  016586  0E00               	movlw	0
  5344  016588  6EE6               	movwf	postinc1,c
  5345  01658A  0E01               	movlw	1
  5346  01658C  6EE6               	movwf	postinc1,c
  5347  01658E  EC49  F0BD         	call	_eaDogM_WriteStringAtPos	;wreg free
  5348                           
  5349                           ; BSR set to: 59
  5350                           ;mconfig.c: 96:  wait_lcd_done();
  5351  016592  EC3C  F0C0         	call	_wait_lcd_done	;wreg free
  5352                           
  5353                           ; BSR set to: 0
  5354                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  5355                           ;stkvar	_vterm @ sp[(0)+-1]
  5356  016596  0EFF               	movlw	-1
  5357  016598  50E3               	movf	plusw1,w,c
  5358  01659A  0D36               	mullw	54
  5359  01659C  0E00               	movlw	low _D
  5360  01659E  6E3F               	movwf	(btemp+10)^0,c
  5361  0165A0  0E04               	movlw	high _D
  5362  0165A2  6E40               	movwf	(btemp+11)^0,c
  5363  0165A4  0E24               	movlw	36
  5364  0165A6  263F               	addwf	(btemp+10)^0,f,c
  5365  0165A8  0E00               	movlw	0
  5366  0165AA  2240               	addwfc	(btemp+11)^0,f,c
  5367  0165AC  50F3               	movf	243,w,c
  5368  0165AE  263F               	addwf	(btemp+10)^0,f,c
  5369  0165B0  50F4               	movf	244,w,c
  5370  0165B2  2240               	addwfc	(btemp+11)^0,f,c
  5371  0165B4  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  5372  0165BA  0060  F103  FFE6   	movff	btemp+11,postinc1
  5373  0165C0  0E00               	movlw	0
  5374  0165C2  6EE6               	movwf	postinc1,c
  5375  0165C4  0E02               	movlw	2
  5376  0165C6  6EE6               	movwf	postinc1,c
  5377  0165C8  EC49  F0BD         	call	_eaDogM_WriteStringAtPos	;wreg free
  5378  0165CC                     l1559:
  5379                           
  5380                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5381  0165CC  52E5               	movf	postdec1,f,c
  5382  0165CE  0012               	return		;funcret
  5383  0165D0                     __end_of_update_lcd:
  5384                           	opt callstack 0
  5385                           
  5386 ;; *************** function _eaDogM_WriteStringAtPos *****************
  5387 ;; Defined at:
  5388 ;;		line 252 in file "eadog.c"
  5389 ;; Parameters:    Size  Location     Type
  5390 ;;  r               1  [STACK] const unsigned char 
  5391 ;;  c               1  [STACK] const unsigned char 
  5392 ;;  strPtr          2  [STACK] PTR unsigned char 
  5393 ;;		 -> D.lcd(216), D(218), V(171), 
  5394 ;; Auto vars:     Size  Location     Type
  5395 ;;		None
  5396 ;; Return value:  Size  Location     Type
  5397 ;;                  1  [STACK] void 
  5398 ;; Registers used:
  5399 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5400 ;; Tracked objects:
  5401 ;;		On entry : 3F/0
  5402 ;;		On exit  : 3F/3B
  5403 ;;		Unchanged: 0/0
  5404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5409 ;;Total ram usage:        0 bytes
  5410 ;; Hardware stack levels used:    1
  5411 ;; Hardware stack levels required when called:   16
  5412 ;; This function calls:
  5413 ;;		_eaDogM_WriteString
  5414 ;;		_send_lcd_cmd_dma
  5415 ;; This function is called by:
  5416 ;;		_update_lcd
  5417 ;;		_vterm_dump
  5418 ;; This function uses a reentrant model
  5419 ;;
  5420                           
  5421                           	psect	text23
  5422  017A92                     __ptext23:
  5423                           	opt callstack 0
  5424  017A92                     _eaDogM_WriteStringAtPos:
  5425                           	opt callstack 13
  5426                           
  5427                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  5428                           ;stkvar	_c @ sp[(0)+-2]
  5429                           
  5430                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5431                           ;incstack = 0
  5432  017A92  0EFE               	movlw	-2
  5433  017A94  006F FF8C  F040    	movff	plusw1,btemp+11
  5434                           
  5435                           ;stkvar	_r @ sp[(0)+-1]
  5436  017A9A  0EFF               	movlw	-1
  5437  017A9C  50E3               	movf	plusw1,w,c
  5438  017A9E  0D10               	mullw	16
  5439  017AA0  50F3               	movf	243,w,c
  5440  017AA2  2440               	addwf	(btemp+11)^0,w,c
  5441  017AA4  0F80               	addlw	128
  5442  017AA6  6EE6               	movwf	postinc1,c
  5443  017AA8  EC2E  F0BB         	call	_send_lcd_cmd_dma	;wreg free
  5444                           
  5445                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
  5446                           ;stkvar	_strPtr @ sp[(0)+-4]
  5447  017AAC  0EFC               	movlw	-4
  5448  017AAE  006F FF8F FFE6     	movff	plusw1,postinc1
  5449  017AB4  006F FF8F FFE6     	movff	plusw1,postinc1
  5450  017ABA  EC10  F0B6         	call	_eaDogM_WriteString	;wreg free
  5451                           
  5452                           ; BSR set to: 59
  5453                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  5454  017ABE  52E5               	movf	postdec1,f,c
  5455  017AC0  52E5               	movf	postdec1,f,c
  5456  017AC2  52E5               	movf	postdec1,f,c
  5457  017AC4  52E5               	movf	postdec1,f,c
  5458  017AC6  0012               	return		;funcret
  5459  017AC8                     __end_of_eaDogM_WriteStringAtPos:
  5460                           	opt callstack 0
  5461                           
  5462 ;; *************** function _send_lcd_cmd_dma *****************
  5463 ;; Defined at:
  5464 ;;		line 205 in file "eadog.c"
  5465 ;; Parameters:    Size  Location     Type
  5466 ;;  strPtr          1  [STACK] unsigned char 
  5467 ;; Auto vars:     Size  Location     Type
  5468 ;;		None
  5469 ;; Return value:  Size  Location     Type
  5470 ;;                  1  [STACK] void 
  5471 ;; Registers used:
  5472 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5473 ;; Tracked objects:
  5474 ;;		On entry : 0/3D
  5475 ;;		On exit  : 3F/0
  5476 ;;		Unchanged: 0/0
  5477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5482 ;;Total ram usage:        0 bytes
  5483 ;; Hardware stack levels used:    1
  5484 ;; Hardware stack levels required when called:   15
  5485 ;; This function calls:
  5486 ;;		_printf
  5487 ;;		_ringBufS_flush
  5488 ;;		_start_lcd
  5489 ;;		_wait_lcd_done
  5490 ;;		_wait_lcd_set
  5491 ;; This function is called by:
  5492 ;;		_eaDogM_WriteCommand
  5493 ;;		_eaDogM_WriteStringAtPos
  5494 ;; This function uses a reentrant model
  5495 ;;
  5496                           
  5497                           	psect	text24
  5498  01765C                     __ptext24:
  5499                           	opt callstack 0
  5500  01765C                     _send_lcd_cmd_dma:
  5501                           	opt callstack 13
  5502                           
  5503                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 208:  wait
      +                          _lcd_set();
  5504                           
  5505                           ; BSR set to: 59
  5506                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5507                           ;incstack = 0
  5508  01765C  EC22  F0C1         	call	_wait_lcd_set	;wreg free
  5509                           
  5510                           ; BSR set to: 0
  5511                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
  5512  017660  0E00               	movlw	0
  5513  017662  6EE6               	movwf	postinc1,c
  5514  017664  0060  F307  FFE6   	movff	_spi_link+6,postinc1
  5515  01766A  0060  F30B  FFE6   	movff	_spi_link+7,postinc1
  5516  017670  EC4B  F0B7         	call	_ringBufS_flush	;wreg free
  5517  017674  92BC               	bcf	188,1,c	;volatile
  5518  017676  94BC               	bcf	188,2,c	;volatile
  5519                           
  5520                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
  5521  017678  013B               	movlb	59	; () banked
  5522  01767A  9FFC               	bcf	252,7,b	;volatile
  5523                           
  5524                           ; BSR set to: 59
  5525                           ;eadog.c: 214:  DMA1SSZ = 1;
  5526  01767C  0E00               	movlw	0
  5527  01767E  6FF8               	movwf	248,b	;volatile
  5528  017680  0E01               	movlw	1
  5529  017682  6FF7               	movwf	247,b	;volatile
  5530                           
  5531                           ; BSR set to: 59
  5532                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
  5533  017684  8FFC               	bsf	252,7,b	;volatile
  5534                           
  5535                           ; BSR set to: 59
  5536                           ;eadog.c: 216:  printf("%c", strPtr);
  5537                           ;stkvar	_strPtr @ sp[(0)+-1]
  5538  017686  0EFF               	movlw	-1
  5539  017688  50E3               	movf	plusw1,w,c
  5540  01768A  6EE6               	movwf	postinc1,c
  5541  01768C  0E00               	movlw	0
  5542  01768E  6EE6               	movwf	postinc1,c
  5543  017690  0EF9               	movlw	low STR_12
  5544  017692  6EE6               	movwf	postinc1,c
  5545  017694  0EFF               	movlw	high STR_12
  5546  017696  6EE6               	movwf	postinc1,c
  5547  017698  0E04               	movlw	4
  5548  01769A  6EE6               	movwf	postinc1,c
  5549  01769C  EC46  F0BA         	call	_printf	;wreg free
  5550                           
  5551                           ;eadog.c: 217:  start_lcd();
  5552  0176A0  EC25  F0C1         	call	_start_lcd	;wreg free
  5553                           
  5554                           ; BSR set to: 59
  5555                           ;eadog.c: 218:  wait_lcd_done();
  5556  0176A4  EC3C  F0C0         	call	_wait_lcd_done	;wreg free
  5557                           
  5558                           ; BSR set to: 0
  5559  0176A8  82BC               	bsf	188,1,c	;volatile
  5560                           
  5561                           ; BSR set to: 0
  5562                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  5563  0176AA  52E5               	movf	postdec1,f,c
  5564  0176AC  0012               	return		;funcret
  5565  0176AE                     __end_of_send_lcd_cmd_dma:
  5566                           	opt callstack 0
  5567                           
  5568 ;; *************** function _wait_lcd_done *****************
  5569 ;; Defined at:
  5570 ;;		line 141 in file "eadog.c"
  5571 ;; Parameters:    Size  Location     Type
  5572 ;;		None
  5573 ;; Auto vars:     Size  Location     Type
  5574 ;;		None
  5575 ;; Return value:  Size  Location     Type
  5576 ;;                  1  [STACK] void 
  5577 ;; Registers used:
  5578 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5579 ;; Tracked objects:
  5580 ;;		On entry : 0/1
  5581 ;;		On exit  : 3F/0
  5582 ;;		Unchanged: 0/0
  5583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5588 ;;Total ram usage:        0 bytes
  5589 ;; Hardware stack levels used:    1
  5590 ;; Hardware stack levels required when called:    7
  5591 ;; This function calls:
  5592 ;;		_wdtdelay
  5593 ;; This function is called by:
  5594 ;;		_send_lcd_cmd_dma
  5595 ;;		_update_lcd
  5596 ;;		_vterm_dump
  5597 ;; This function uses a reentrant model
  5598 ;;
  5599                           
  5600                           	psect	text25
  5601  018078                     __ptext25:
  5602                           	opt callstack 0
  5603  018078                     _wait_lcd_done:
  5604                           	opt callstack 22
  5605                           
  5606                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
  5607                           
  5608                           ; BSR set to: 0
  5609                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5610                           ;incstack = 0
  5611  018078  0100               	movlb	0	; () banked
  5612  01807A  B7BB               	btfsc	_spi_link& (0+255),3,b	;volatile
  5613  01807C  D7FD               	goto	_wait_lcd_done
  5614                           
  5615                           ; BSR set to: 0
  5616                           ;eadog.c: 144:  wdtdelay(50);
  5617  01807E  0E32               	movlw	50
  5618  018080  6EE6               	movwf	postinc1,c
  5619  018082  0E00               	movlw	0
  5620  018084  6EE6               	movwf	postinc1,c
  5621  018086  0E00               	movlw	0
  5622  018088  6EE6               	movwf	postinc1,c
  5623  01808A  0E00               	movlw	0
  5624  01808C  6EE6               	movwf	postinc1,c
  5625  01808E  ECD4  F0BA         	call	_wdtdelay	;wreg free
  5626                           
  5627                           ; BSR set to: 0
  5628                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  5629  018092  0012               	return		;funcret
  5630  018094                     __end_of_wait_lcd_done:
  5631                           	opt callstack 0
  5632                           
  5633 ;; *************** function _wdtdelay *****************
  5634 ;; Defined at:
  5635 ;;		line 22 in file "eadog.c"
  5636 ;; Parameters:    Size  Location     Type
  5637 ;;  delay           4  [STACK] const unsigned long 
  5638 ;; Auto vars:     Size  Location     Type
  5639 ;;		None
  5640 ;; Return value:  Size  Location     Type
  5641 ;;                  1  [STACK] void 
  5642 ;; Registers used:
  5643 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5644 ;; Tracked objects:
  5645 ;;		On entry : 0/0
  5646 ;;		On exit  : 3F/0
  5647 ;;		Unchanged: 0/0
  5648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5653 ;;Total ram usage:        0 bytes
  5654 ;; Hardware stack levels used:    1
  5655 ;; Hardware stack levels required when called:    6
  5656 ;; This function calls:
  5657 ;;		Nothing
  5658 ;; This function is called by:
  5659 ;;		_init_display
  5660 ;;		_send_lcd_cmd
  5661 ;;		_send_lcd_cmd_long
  5662 ;;		_wait_lcd_done
  5663 ;; This function uses a reentrant model
  5664 ;;
  5665                           
  5666                           	psect	text26
  5667  0175A8                     __ptext26:
  5668                           	opt callstack 0
  5669  0175A8                     _wdtdelay:
  5670                           	opt callstack 22
  5671                           
  5672                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  5673                           
  5674                           ; BSR set to: 0
  5675                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5676                           ;incstack = 0
  5677  0175A8  0100               	movlb	0	; () banked
  5678  0175AA  6BCF               	clrf	wdtdelay@dcount& (0+255),b
  5679  0175AC  6BD0               	clrf	(wdtdelay@dcount+1)& (0+255),b
  5680  0175AE  6BD1               	clrf	(wdtdelay@dcount+2)& (0+255),b
  5681  0175B0  6BD2               	clrf	(wdtdelay@dcount+3)& (0+255),b
  5682  0175B2                     l1326:
  5683                           
  5684                           ; BSR set to: 0
  5685                           ;eadog.c: 27:   __nop();
  5686  0175B2  F000               	nop	
  5687  0175B4  0004               	clrwdt		;# 
  5688                           
  5689                           ;eadog.c: 29:  };
  5690  0175B6  0E01               	movlw	1
  5691  0175B8  0100               	movlb	0	; () banked
  5692  0175BA  27CF               	addwf	wdtdelay@dcount& (0+255),f,b
  5693  0175BC  0E00               	movlw	0
  5694  0175BE  23D0               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  5695  0175C0  23D1               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  5696  0175C2  23D2               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  5697                           
  5698                           ; BSR set to: 0
  5699                           ;stkvar	_delay @ sp[(0)+-4]
  5700  0175C4  0EFC               	movlw	-4
  5701  0175C6  006F FF8C  F035    	movff	plusw1,btemp
  5702  0175CC  51CF               	movf	wdtdelay@dcount& (0+255),w,b
  5703  0175CE  5C35               	subwf	btemp^0,w,c
  5704  0175D0  0EFD               	movlw	-3
  5705  0175D2  006F FF8C  F035    	movff	plusw1,btemp
  5706  0175D8  51D0               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  5707  0175DA  5835               	subwfb	btemp^0,w,c
  5708  0175DC  0EFE               	movlw	-2
  5709  0175DE  006F FF8C  F035    	movff	plusw1,btemp
  5710  0175E4  51D1               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  5711  0175E6  5835               	subwfb	btemp^0,w,c
  5712  0175E8  0EFF               	movlw	-1
  5713  0175EA  006F FF8C  F035    	movff	plusw1,btemp
  5714  0175F0  51D2               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  5715  0175F2  5835               	subwfb	btemp^0,w,c
  5716  0175F4  B0D8               	btfsc	status,0,c
  5717  0175F6  D7DD               	goto	l1326
  5718                           
  5719                           ; BSR set to: 0
  5720                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  5721  0175F8  52E5               	movf	postdec1,f,c
  5722  0175FA  52E5               	movf	postdec1,f,c
  5723  0175FC  52E5               	movf	postdec1,f,c
  5724  0175FE  52E5               	movf	postdec1,f,c
  5725  017600  0012               	return		;funcret
  5726  017602                     __end_of_wdtdelay:
  5727                           	opt callstack 0
  5728                           
  5729 ;; *************** function _eaDogM_WriteString *****************
  5730 ;; Defined at:
  5731 ;;		line 184 in file "eadog.c"
  5732 ;; Parameters:    Size  Location     Type
  5733 ;;  strPtr          2  [STACK] PTR unsigned char 
  5734 ;;		 -> D.lcd(216), D(218), V(171), 
  5735 ;; Auto vars:     Size  Location     Type
  5736 ;;		None
  5737 ;; Return value:  Size  Location     Type
  5738 ;;                  1  [STACK] void 
  5739 ;; Registers used:
  5740 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5741 ;; Tracked objects:
  5742 ;;		On entry : 3F/0
  5743 ;;		On exit  : 3F/3B
  5744 ;;		Unchanged: 0/0
  5745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5750 ;;Total ram usage:        0 bytes
  5751 ;; Hardware stack levels used:    1
  5752 ;; Hardware stack levels required when called:   15
  5753 ;; This function calls:
  5754 ;;		_printf
  5755 ;;		_ringBufS_flush
  5756 ;;		_start_lcd
  5757 ;;		_strlen
  5758 ;;		_wait_lcd_set
  5759 ;; This function is called by:
  5760 ;;		_eaDogM_WriteStringAtPos
  5761 ;; This function uses a reentrant model
  5762 ;;
  5763                           
  5764                           	psect	text27
  5765  016C20                     __ptext27:
  5766                           	opt callstack 0
  5767  016C20                     _eaDogM_WriteString:
  5768                           	opt callstack 13
  5769                           
  5770                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 187:  wait
      +                          _lcd_set();
  5771                           
  5772                           ; BSR set to: 0
  5773                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5774                           ;incstack = 0
  5775  016C20  EC22  F0C1         	call	_wait_lcd_set	;wreg free
  5776                           
  5777                           ; BSR set to: 0
  5778                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
  5779  016C24  0E00               	movlw	0
  5780  016C26  6EE6               	movwf	postinc1,c
  5781  016C28  0060  F307  FFE6   	movff	_spi_link+6,postinc1
  5782  016C2E  0060  F30B  FFE6   	movff	_spi_link+7,postinc1
  5783  016C34  EC4B  F0B7         	call	_ringBufS_flush	;wreg free
  5784  016C38  94BC               	bcf	188,2,c	;volatile
  5785                           
  5786                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  5787                           ;stkvar	_strPtr @ sp[(0)+-2]
  5788  016C3A  0EFE               	movlw	-2
  5789  016C3C  006F FF8F FFE6     	movff	plusw1,postinc1
  5790  016C42  006F FF8F FFE6     	movff	plusw1,postinc1
  5791  016C48  EC63  F0B6         	call	_strlen	;wreg free
  5792  016C4C  5036               	movf	(btemp+1)^0,w,c
  5793  016C4E  E104               	bnz	u9880
  5794  016C50  0E41               	movlw	65
  5795  016C52  5C35               	subwf	btemp^0,w,c
  5796  016C54  A0D8               	btfss	status,0,c
  5797  016C56  D010               	goto	l9751
  5798  016C58                     u9880:
  5799                           
  5800                           ;stkvar	_strPtr @ sp[(0)+-2]
  5801  016C58  0EFE               	movlw	-2
  5802  016C5A  006F FF8C  F03F    	movff	plusw1,btemp+10
  5803  016C60  0EFF               	movlw	-1
  5804  016C62  006F FF8C  F040    	movff	plusw1,btemp+11
  5805  016C68  0E40               	movlw	64
  5806  016C6A  243F               	addwf	(btemp+10)^0,w,c
  5807  016C6C  6ED9               	movwf	fsr2l,c
  5808  016C6E  0E00               	movlw	0
  5809  016C70  2040               	addwfc	(btemp+11)^0,w,c
  5810  016C72  6EDA               	movwf	fsr2h,c
  5811  016C74  0E00               	movlw	0
  5812  016C76  6EDF               	movwf	indf2,c
  5813  016C78                     l9751:
  5814                           
  5815                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
  5816  016C78  013B               	movlb	59	; () banked
  5817  016C7A  9FFC               	bcf	252,7,b	;volatile
  5818                           
  5819                           ; BSR set to: 59
  5820                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
  5821                           ;stkvar	_strPtr @ sp[(0)+-2]
  5822  016C7C  0EFE               	movlw	-2
  5823  016C7E  006F FF8F FFE6     	movff	plusw1,postinc1
  5824  016C84  006F FF8F FFE6     	movff	plusw1,postinc1
  5825  016C8A  EC63  F0B6         	call	_strlen	;wreg free
  5826  016C8E  0060  F0D7  FBF7   	movff	btemp,15351	;volatile
  5827  016C94  0060  F0DB  FBF8   	movff	btemp+1,15352	;volatile
  5828                           
  5829                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
  5830  016C9A  013B               	movlb	59	; () banked
  5831  016C9C  8FFC               	bsf	252,7,b	;volatile
  5832                           
  5833                           ; BSR set to: 59
  5834                           ;eadog.c: 195:  printf("%s", strPtr);
  5835                           ;stkvar	_strPtr @ sp[(0)+-2]
  5836  016C9E  0EFE               	movlw	-2
  5837  016CA0  006F FF8F FFE6     	movff	plusw1,postinc1
  5838  016CA6  006F FF8F FFE6     	movff	plusw1,postinc1
  5839  016CAC  0EFC               	movlw	low STR_11
  5840  016CAE  6EE6               	movwf	postinc1,c
  5841  016CB0  0EFF               	movlw	high STR_11
  5842  016CB2  6EE6               	movwf	postinc1,c
  5843  016CB4  0E04               	movlw	4
  5844  016CB6  6EE6               	movwf	postinc1,c
  5845  016CB8  EC46  F0BA         	call	_printf	;wreg free
  5846                           
  5847                           ;eadog.c: 196:  start_lcd();
  5848  016CBC  EC25  F0C1         	call	_start_lcd	;wreg free
  5849                           
  5850                           ; BSR set to: 59
  5851                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  5852  016CC0  52E5               	movf	postdec1,f,c
  5853  016CC2  52E5               	movf	postdec1,f,c
  5854  016CC4  0012               	return		;funcret
  5855  016CC6                     __end_of_eaDogM_WriteString:
  5856                           	opt callstack 0
  5857                           
  5858 ;; *************** function _wait_lcd_set *****************
  5859 ;; Defined at:
  5860 ;;		line 131 in file "eadog.c"
  5861 ;; Parameters:    Size  Location     Type
  5862 ;;		None
  5863 ;; Auto vars:     Size  Location     Type
  5864 ;;		None
  5865 ;; Return value:  Size  Location     Type
  5866 ;;                  1  [STACK] void 
  5867 ;; Registers used:
  5868 ;;		None
  5869 ;; Tracked objects:
  5870 ;;		On entry : 0/3D
  5871 ;;		On exit  : 3F/0
  5872 ;;		Unchanged: 0/0
  5873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5878 ;;Total ram usage:        0 bytes
  5879 ;; Hardware stack levels used:    1
  5880 ;; Hardware stack levels required when called:    6
  5881 ;; This function calls:
  5882 ;;		Nothing
  5883 ;; This function is called by:
  5884 ;;		_eaDogM_WriteString
  5885 ;;		_send_lcd_cmd_dma
  5886 ;; This function uses a reentrant model
  5887 ;;
  5888                           
  5889                           	psect	text28
  5890  018244                     __ptext28:
  5891                           	opt callstack 0
  5892  018244                     _wait_lcd_set:
  5893                           	opt callstack 21
  5894                           
  5895                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
  5896                           
  5897                           ; BSR set to: 59
  5898                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5899                           ;incstack = 0
  5900  018244  0100               	movlb	0	; () banked
  5901  018246  87BB               	bsf	_spi_link& (0+255),3,b	;volatile
  5902                           
  5903                           ; BSR set to: 0
  5904                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  5905  018248  0012               	return		;funcret
  5906  01824A                     __end_of_wait_lcd_set:
  5907                           	opt callstack 0
  5908                           
  5909 ;; *************** function _start_lcd *****************
  5910 ;; Defined at:
  5911 ;;		line 126 in file "eadog.c"
  5912 ;; Parameters:    Size  Location     Type
  5913 ;;		None
  5914 ;; Auto vars:     Size  Location     Type
  5915 ;;		None
  5916 ;; Return value:  Size  Location     Type
  5917 ;;                  1  [STACK] void 
  5918 ;; Registers used:
  5919 ;;		None
  5920 ;; Tracked objects:
  5921 ;;		On entry : 0/3B
  5922 ;;		On exit  : 3F/3B
  5923 ;;		Unchanged: 0/0
  5924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5929 ;;Total ram usage:        0 bytes
  5930 ;; Hardware stack levels used:    1
  5931 ;; Hardware stack levels required when called:    6
  5932 ;; This function calls:
  5933 ;;		Nothing
  5934 ;; This function is called by:
  5935 ;;		_eaDogM_WriteString
  5936 ;;		_send_lcd_cmd_dma
  5937 ;; This function uses a reentrant model
  5938 ;;
  5939                           
  5940                           	psect	text29
  5941  01824A                     __ptext29:
  5942                           	opt callstack 0
  5943  01824A                     _start_lcd:
  5944                           	opt callstack 21
  5945                           
  5946                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
  5947                           
  5948                           ; BSR set to: 0
  5949                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5950                           ;incstack = 0
  5951  01824A  013B               	movlb	59	; () banked
  5952  01824C  8DFC               	bsf	252,6,b	;volatile
  5953                           
  5954                           ; BSR set to: 59
  5955                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  5956  01824E  0012               	return		;funcret
  5957  018250                     __end_of_start_lcd:
  5958                           	opt callstack 0
  5959                           
  5960 ;; *************** function _ringBufS_flush *****************
  5961 ;; Defined at:
  5962 ;;		line 76 in file "ringbufs.c"
  5963 ;; Parameters:    Size  Location     Type
  5964 ;;  _this           2  [STACK] PTR struct ringBufS_t
  5965 ;;		 -> ring_buf1(67), 
  5966 ;;  clearBuffer     1  [STACK] const char 
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;		None
  5969 ;; Return value:  Size  Location     Type
  5970 ;;                  1  [STACK] void 
  5971 ;; Registers used:
  5972 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5973 ;; Tracked objects:
  5974 ;;		On entry : 3F/0
  5975 ;;		On exit  : 0/0
  5976 ;;		Unchanged: 0/0
  5977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5982 ;;Total ram usage:        0 bytes
  5983 ;; Hardware stack levels used:    1
  5984 ;; Hardware stack levels required when called:    7
  5985 ;; This function calls:
  5986 ;;		_memset
  5987 ;; This function is called by:
  5988 ;;		_eaDogM_WriteString
  5989 ;;		_send_lcd_cmd_dma
  5990 ;; This function uses a reentrant model
  5991 ;;
  5992                           
  5993                           	psect	text30
  5994  016E96                     __ptext30:
  5995                           	opt callstack 0
  5996  016E96                     _ringBufS_flush:
  5997                           	opt callstack 20
  5998                           
  5999                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  6000                           ;stkvar	__this @ sp[(0)+-2]
  6001                           
  6002                           ; BSR set to: 59
  6003                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6004                           ;incstack = 0
  6005  016E96  0EFE               	movlw	-2
  6006  016E98  006F FF8C  F03F    	movff	plusw1,btemp+10
  6007  016E9E  0EFF               	movlw	-1
  6008  016EA0  006F FF8C  F040    	movff	plusw1,btemp+11
  6009  016EA6  0E42               	movlw	66
  6010  016EA8  243F               	addwf	(btemp+10)^0,w,c
  6011  016EAA  6ED9               	movwf	fsr2l,c
  6012  016EAC  0E00               	movlw	0
  6013  016EAE  2040               	addwfc	(btemp+11)^0,w,c
  6014  016EB0  6EDA               	movwf	fsr2h,c
  6015  016EB2  0E00               	movlw	0
  6016  016EB4  6EDF               	movwf	indf2,c
  6017                           
  6018                           ;ringbufs.c: 79:  _this->head = 0;
  6019                           ;stkvar	__this @ sp[(0)+-2]
  6020  016EB6  0EFE               	movlw	-2
  6021  016EB8  006F FF8C  F03F    	movff	plusw1,btemp+10
  6022  016EBE  0EFF               	movlw	-1
  6023  016EC0  006F FF8C  F040    	movff	plusw1,btemp+11
  6024  016EC6  0E40               	movlw	64
  6025  016EC8  243F               	addwf	(btemp+10)^0,w,c
  6026  016ECA  6ED9               	movwf	fsr2l,c
  6027  016ECC  0E00               	movlw	0
  6028  016ECE  2040               	addwfc	(btemp+11)^0,w,c
  6029  016ED0  6EDA               	movwf	fsr2h,c
  6030  016ED2  0E00               	movlw	0
  6031  016ED4  6EDF               	movwf	indf2,c
  6032                           
  6033                           ;ringbufs.c: 80:  _this->tail = 0;
  6034                           ;stkvar	__this @ sp[(0)+-2]
  6035  016ED6  0EFE               	movlw	-2
  6036  016ED8  006F FF8C  F03F    	movff	plusw1,btemp+10
  6037  016EDE  0EFF               	movlw	-1
  6038  016EE0  006F FF8C  F040    	movff	plusw1,btemp+11
  6039  016EE6  0E41               	movlw	65
  6040  016EE8  243F               	addwf	(btemp+10)^0,w,c
  6041  016EEA  6ED9               	movwf	fsr2l,c
  6042  016EEC  0E00               	movlw	0
  6043  016EEE  2040               	addwfc	(btemp+11)^0,w,c
  6044  016EF0  6EDA               	movwf	fsr2h,c
  6045  016EF2  0E00               	movlw	0
  6046  016EF4  6EDF               	movwf	indf2,c
  6047                           
  6048                           ;ringbufs.c: 81:  if (clearBuffer) {
  6049                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  6050  016EF6  0EFD               	movlw	-3
  6051  016EF8  50E3               	movf	plusw1,w,c
  6052  016EFA  B4D8               	btfsc	status,2,c
  6053  016EFC  D011               	goto	l1466
  6054                           
  6055                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  6056  016EFE  0E40               	movlw	64
  6057  016F00  6EE6               	movwf	postinc1,c
  6058  016F02  0E00               	movlw	0
  6059  016F04  6EE6               	movwf	postinc1,c
  6060  016F06  0E00               	movlw	0
  6061  016F08  6EE6               	movwf	postinc1,c
  6062  016F0A  0E00               	movlw	0
  6063  016F0C  6EE6               	movwf	postinc1,c
  6064                           
  6065                           ;stkvar	__this @ sp[(-4)+-2]
  6066  016F0E  0EFA               	movlw	-6
  6067  016F10  006F FF8F FFE6     	movff	plusw1,postinc1
  6068  016F16  006F FF8F FFE6     	movff	plusw1,postinc1
  6069  016F1C  EC08  F0A3         	call	_memset	;wreg free
  6070  016F20                     l1466:
  6071                           
  6072                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  6073  016F20  52E5               	movf	postdec1,f,c
  6074  016F22  52E5               	movf	postdec1,f,c
  6075  016F24  52E5               	movf	postdec1,f,c
  6076  016F26  0012               	return		;funcret
  6077  016F28                     __end_of_ringBufS_flush:
  6078                           	opt callstack 0
  6079                           
  6080 ;; *************** function _memset *****************
  6081 ;; Defined at:
  6082 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  6083 ;; Parameters:    Size  Location     Type
  6084 ;;  dest            2  [STACK] PTR void 
  6085 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6086 ;;  c               2  [STACK] int 
  6087 ;;  n               2  [STACK] unsigned int 
  6088 ;; Auto vars:     Size  Location     Type
  6089 ;;  s               2  [STACK] PTR unsigned char 
  6090 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6091 ;;  k               2  [STACK] unsigned int 
  6092 ;; Return value:  Size  Location     Type
  6093 ;;                  2  [STACK] PTR void 
  6094 ;; Registers used:
  6095 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6096 ;; Tracked objects:
  6097 ;;		On entry : 0/0
  6098 ;;		On exit  : 0/0
  6099 ;;		Unchanged: 0/0
  6100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6105 ;;Total ram usage:        0 bytes
  6106 ;; Hardware stack levels used:    1
  6107 ;; Hardware stack levels required when called:    6
  6108 ;; This function calls:
  6109 ;;		Nothing
  6110 ;; This function is called by:
  6111 ;;		_ringBufS_init
  6112 ;;		_ringBufS_flush
  6113 ;; This function uses a reentrant model
  6114 ;;
  6115                           
  6116                           	psect	text31
  6117  014610                     __ptext31:
  6118                           	opt callstack 0
  6119  014610                     _memset:
  6120                           	opt callstack 0
  6121                           
  6122                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6123  014610  52E6               	movf	postinc1,f,c
  6124  014612  52E6               	movf	postinc1,f,c
  6125  014614  52E6               	movf	postinc1,f,c
  6126  014616  52E6               	movf	postinc1,f,c
  6127                           
  6128                           ;stkvar	_dest @ sp[(-4)+-2]
  6129                           
  6130                           ;incstack = 0
  6131  014618  0EFA               	movlw	-6
  6132  01461A  006F FF8C  F03F    	movff	plusw1,btemp+10
  6133  014620  0EFB               	movlw	-5
  6134  014622  006F FF8C  F040    	movff	plusw1,btemp+11
  6135                           
  6136                           ;stkvar	_s @ sp[(-4)+0]
  6137  014628  0EFD               	movlw	-3
  6138  01462A  0060  F103  FFE3   	movff	btemp+11,plusw1
  6139  014630  0EFC               	movlw	-4
  6140  014632  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6141                           
  6142                           ;stkvar	_n @ sp[(-4)+-6]
  6143  014638  0EF6               	movlw	-10
  6144  01463A  006F FF8C  F035    	movff	plusw1,btemp
  6145  014640  0EF7               	movlw	-9
  6146  014642  50E3               	movf	plusw1,w,c
  6147  014644  1035               	iorwf	btemp^0,w,c
  6148  014646  B4D8               	btfsc	status,2,c
  6149  014648  D154               	goto	u9850
  6150                           
  6151                           ;stkvar	_c @ sp[(-4)+-4]
  6152                           ;stkvar	_s @ sp[(-4)+0]
  6153  01464A  0EFC               	movlw	-4
  6154  01464C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6155  014652  0EFD               	movlw	-3
  6156  014654  006F FF8F FFDA     	movff	plusw1,fsr2h
  6157  01465A  0EF8               	movlw	-8
  6158  01465C  006F FF8F FFDF     	movff	plusw1,indf2
  6159                           
  6160                           ;stkvar	_c @ sp[(-4)+-4]
  6161                           ;stkvar	_n @ sp[(-4)+-6]
  6162                           ;stkvar	_s @ sp[(-4)+0]
  6163  014662  0EFC               	movlw	-4
  6164  014664  006F FF8C  F03F    	movff	plusw1,btemp+10
  6165  01466A  0EFD               	movlw	-3
  6166  01466C  006F FF8C  F040    	movff	plusw1,btemp+11
  6167  014672  0EF6               	movlw	-10
  6168  014674  50E3               	movf	plusw1,w,c
  6169  014676  263F               	addwf	(btemp+10)^0,f,c
  6170  014678  0EF7               	movlw	-9
  6171  01467A  50E3               	movf	plusw1,w,c
  6172  01467C  2240               	addwfc	(btemp+11)^0,f,c
  6173  01467E  0EFF               	movlw	255
  6174  014680  243F               	addwf	(btemp+10)^0,w,c
  6175  014682  6ED9               	movwf	fsr2l,c
  6176  014684  0EFF               	movlw	255
  6177  014686  2040               	addwfc	(btemp+11)^0,w,c
  6178  014688  6EDA               	movwf	fsr2h,c
  6179  01468A  0EF8               	movlw	-8
  6180  01468C  006F FF8F FFDF     	movff	plusw1,indf2
  6181                           
  6182                           ;stkvar	_n @ sp[(-4)+-6]
  6183  014692  0EF7               	movlw	-9
  6184  014694  50E3               	movf	plusw1,w,c
  6185  014696  E108               	bnz	l9667
  6186  014698  0EF6               	movlw	-10
  6187  01469A  006F FF8C  F035    	movff	plusw1,btemp
  6188  0146A0  0E03               	movlw	3
  6189  0146A2  5E35               	subwf	btemp^0,f,c
  6190  0146A4  A0D8               	btfss	status,0,c
  6191  0146A6  D125               	goto	u9850
  6192  0146A8                     l9667:
  6193                           
  6194                           ;stkvar	_c @ sp[(-4)+-4]
  6195                           ;stkvar	_s @ sp[(-4)+0]
  6196  0146A8  0EFC               	movlw	-4
  6197  0146AA  006F FF8C  F03F    	movff	plusw1,btemp+10
  6198  0146B0  0EFD               	movlw	-3
  6199  0146B2  006F FF8C  F040    	movff	plusw1,btemp+11
  6200  0146B8  0E01               	movlw	1
  6201  0146BA  243F               	addwf	(btemp+10)^0,w,c
  6202  0146BC  6ED9               	movwf	fsr2l,c
  6203  0146BE  0E00               	movlw	0
  6204  0146C0  2040               	addwfc	(btemp+11)^0,w,c
  6205  0146C2  6EDA               	movwf	fsr2h,c
  6206  0146C4  0EF8               	movlw	-8
  6207  0146C6  006F FF8F FFDF     	movff	plusw1,indf2
  6208                           
  6209                           ;stkvar	_c @ sp[(-4)+-4]
  6210                           ;stkvar	_s @ sp[(-4)+0]
  6211  0146CC  0EFC               	movlw	-4
  6212  0146CE  006F FF8C  F03F    	movff	plusw1,btemp+10
  6213  0146D4  0EFD               	movlw	-3
  6214  0146D6  006F FF8C  F040    	movff	plusw1,btemp+11
  6215  0146DC  0E02               	movlw	2
  6216  0146DE  243F               	addwf	(btemp+10)^0,w,c
  6217  0146E0  6ED9               	movwf	fsr2l,c
  6218  0146E2  0E00               	movlw	0
  6219  0146E4  2040               	addwfc	(btemp+11)^0,w,c
  6220  0146E6  6EDA               	movwf	fsr2h,c
  6221  0146E8  0EF8               	movlw	-8
  6222  0146EA  006F FF8F FFDF     	movff	plusw1,indf2
  6223                           
  6224                           ;stkvar	_c @ sp[(-4)+-4]
  6225                           ;stkvar	_n @ sp[(-4)+-6]
  6226                           ;stkvar	_s @ sp[(-4)+0]
  6227  0146F0  0EFC               	movlw	-4
  6228  0146F2  006F FF8C  F03F    	movff	plusw1,btemp+10
  6229  0146F8  0EFD               	movlw	-3
  6230  0146FA  006F FF8C  F040    	movff	plusw1,btemp+11
  6231  014700  0EF6               	movlw	-10
  6232  014702  50E3               	movf	plusw1,w,c
  6233  014704  263F               	addwf	(btemp+10)^0,f,c
  6234  014706  0EF7               	movlw	-9
  6235  014708  50E3               	movf	plusw1,w,c
  6236  01470A  2240               	addwfc	(btemp+11)^0,f,c
  6237  01470C  0EFE               	movlw	254
  6238  01470E  243F               	addwf	(btemp+10)^0,w,c
  6239  014710  6ED9               	movwf	fsr2l,c
  6240  014712  0EFF               	movlw	255
  6241  014714  2040               	addwfc	(btemp+11)^0,w,c
  6242  014716  6EDA               	movwf	fsr2h,c
  6243  014718  0EF8               	movlw	-8
  6244  01471A  006F FF8F FFDF     	movff	plusw1,indf2
  6245                           
  6246                           ;stkvar	_c @ sp[(-4)+-4]
  6247                           ;stkvar	_n @ sp[(-4)+-6]
  6248                           ;stkvar	_s @ sp[(-4)+0]
  6249  014720  0EFC               	movlw	-4
  6250  014722  006F FF8C  F03F    	movff	plusw1,btemp+10
  6251  014728  0EFD               	movlw	-3
  6252  01472A  006F FF8C  F040    	movff	plusw1,btemp+11
  6253  014730  0EF6               	movlw	-10
  6254  014732  50E3               	movf	plusw1,w,c
  6255  014734  263F               	addwf	(btemp+10)^0,f,c
  6256  014736  0EF7               	movlw	-9
  6257  014738  50E3               	movf	plusw1,w,c
  6258  01473A  2240               	addwfc	(btemp+11)^0,f,c
  6259  01473C  0EFD               	movlw	253
  6260  01473E  243F               	addwf	(btemp+10)^0,w,c
  6261  014740  6ED9               	movwf	fsr2l,c
  6262  014742  0EFF               	movlw	255
  6263  014744  2040               	addwfc	(btemp+11)^0,w,c
  6264  014746  6EDA               	movwf	fsr2h,c
  6265  014748  0EF8               	movlw	-8
  6266  01474A  006F FF8F FFDF     	movff	plusw1,indf2
  6267                           
  6268                           ;stkvar	_n @ sp[(-4)+-6]
  6269  014750  0EF7               	movlw	-9
  6270  014752  50E3               	movf	plusw1,w,c
  6271  014754  E108               	bnz	l9673
  6272  014756  0EF6               	movlw	-10
  6273  014758  006F FF8C  F035    	movff	plusw1,btemp
  6274  01475E  0E07               	movlw	7
  6275  014760  5E35               	subwf	btemp^0,f,c
  6276  014762  A0D8               	btfss	status,0,c
  6277  014764  D0C6               	goto	u9850
  6278  014766                     l9673:
  6279                           
  6280                           ;stkvar	_c @ sp[(-4)+-4]
  6281                           ;stkvar	_s @ sp[(-4)+0]
  6282  014766  0EFC               	movlw	-4
  6283  014768  006F FF8C  F03F    	movff	plusw1,btemp+10
  6284  01476E  0EFD               	movlw	-3
  6285  014770  006F FF8C  F040    	movff	plusw1,btemp+11
  6286  014776  0E03               	movlw	3
  6287  014778  243F               	addwf	(btemp+10)^0,w,c
  6288  01477A  6ED9               	movwf	fsr2l,c
  6289  01477C  0E00               	movlw	0
  6290  01477E  2040               	addwfc	(btemp+11)^0,w,c
  6291  014780  6EDA               	movwf	fsr2h,c
  6292  014782  0EF8               	movlw	-8
  6293  014784  006F FF8F FFDF     	movff	plusw1,indf2
  6294                           
  6295                           ;stkvar	_c @ sp[(-4)+-4]
  6296                           ;stkvar	_n @ sp[(-4)+-6]
  6297                           ;stkvar	_s @ sp[(-4)+0]
  6298  01478A  0EFC               	movlw	-4
  6299  01478C  006F FF8C  F03F    	movff	plusw1,btemp+10
  6300  014792  0EFD               	movlw	-3
  6301  014794  006F FF8C  F040    	movff	plusw1,btemp+11
  6302  01479A  0EF6               	movlw	-10
  6303  01479C  50E3               	movf	plusw1,w,c
  6304  01479E  263F               	addwf	(btemp+10)^0,f,c
  6305  0147A0  0EF7               	movlw	-9
  6306  0147A2  50E3               	movf	plusw1,w,c
  6307  0147A4  2240               	addwfc	(btemp+11)^0,f,c
  6308  0147A6  0EFC               	movlw	252
  6309  0147A8  243F               	addwf	(btemp+10)^0,w,c
  6310  0147AA  6ED9               	movwf	fsr2l,c
  6311  0147AC  0EFF               	movlw	255
  6312  0147AE  2040               	addwfc	(btemp+11)^0,w,c
  6313  0147B0  6EDA               	movwf	fsr2h,c
  6314  0147B2  0EF8               	movlw	-8
  6315  0147B4  006F FF8F FFDF     	movff	plusw1,indf2
  6316                           
  6317                           ;stkvar	_n @ sp[(-4)+-6]
  6318  0147BA  0EF7               	movlw	-9
  6319  0147BC  50E3               	movf	plusw1,w,c
  6320  0147BE  E108               	bnz	l9679
  6321  0147C0  0EF6               	movlw	-10
  6322  0147C2  006F FF8C  F035    	movff	plusw1,btemp
  6323  0147C8  0E09               	movlw	9
  6324  0147CA  5E35               	subwf	btemp^0,f,c
  6325  0147CC  A0D8               	btfss	status,0,c
  6326  0147CE  D091               	goto	u9850
  6327  0147D0                     l9679:
  6328                           
  6329                           ;stkvar	_s @ sp[(-4)+0]
  6330  0147D0  0EFC               	movlw	-4
  6331  0147D2  006F FF8C  F03F    	movff	plusw1,btemp+10
  6332  0147D8  1E3F               	comf	(btemp+10)^0,f,c
  6333  0147DA  0EFD               	movlw	-3
  6334  0147DC  006F FF8C  F040    	movff	plusw1,btemp+11
  6335  0147E2  1E40               	comf	(btemp+11)^0,f,c
  6336  0147E4  2A3F               	incf	(btemp+10)^0,f,c
  6337  0147E6  B4D8               	btfsc	status,2,c
  6338  0147E8  2A40               	incf	(btemp+11)^0,f,c
  6339  0147EA  0E03               	movlw	3
  6340  0147EC  163F               	andwf	(btemp+10)^0,f,c
  6341  0147EE  0E00               	movlw	0
  6342  0147F0  1640               	andwf	(btemp+11)^0,f,c
  6343                           
  6344                           ;stkvar	_k @ sp[(-4)+2]
  6345  0147F2  0EFE               	movlw	-2
  6346  0147F4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6347  0147FA  0EFF               	movlw	-1
  6348  0147FC  0060  F103  FFE3   	movff	btemp+11,plusw1
  6349                           
  6350                           ;stkvar	_k @ sp[(-4)+2]
  6351                           ;stkvar	_s @ sp[(-4)+0]
  6352  014802  0EFC               	movlw	-4
  6353  014804  50E3               	movf	plusw1,w,c
  6354  014806  6E35               	movwf	btemp^0,c
  6355  014808  0EFE               	movlw	-2
  6356  01480A  50E3               	movf	plusw1,w,c
  6357  01480C  2635               	addwf	btemp^0,f,c
  6358  01480E  0EFC               	movlw	-4
  6359  014810  0060  F0D7  FFE3   	movff	btemp,plusw1
  6360  014816  0EFD               	movlw	-3
  6361  014818  50E3               	movf	plusw1,w,c
  6362  01481A  6E35               	movwf	btemp^0,c
  6363  01481C  0EFF               	movlw	-1
  6364  01481E  50E3               	movf	plusw1,w,c
  6365  014820  2235               	addwfc	btemp^0,f,c
  6366  014822  0EFD               	movlw	-3
  6367  014824  0060  F0D7  FFE3   	movff	btemp,plusw1
  6368                           
  6369                           ;stkvar	_k @ sp[(-4)+2]
  6370                           ;stkvar	_n @ sp[(-4)+-6]
  6371  01482A  0EF6               	movlw	-10
  6372  01482C  50E3               	movf	plusw1,w,c
  6373  01482E  6E35               	movwf	btemp^0,c
  6374  014830  0EFE               	movlw	-2
  6375  014832  50E3               	movf	plusw1,w,c
  6376  014834  5E35               	subwf	btemp^0,f,c
  6377  014836  0EF6               	movlw	-10
  6378  014838  0060  F0D7  FFE3   	movff	btemp,plusw1
  6379  01483E  0EF7               	movlw	-9
  6380  014840  50E3               	movf	plusw1,w,c
  6381  014842  6E35               	movwf	btemp^0,c
  6382  014844  0EFF               	movlw	-1
  6383  014846  50E3               	movf	plusw1,w,c
  6384  014848  5A35               	subwfb	btemp^0,f,c
  6385  01484A  0EF7               	movlw	-9
  6386  01484C  0060  F0D7  FFE3   	movff	btemp,plusw1
  6387  014852  0EFC               	movlw	252
  6388  014854  6E3F               	movwf	(btemp+10)^0,c
  6389  014856  0EFF               	movlw	255
  6390  014858  6E40               	movwf	(btemp+11)^0,c
  6391                           
  6392                           ;stkvar	_n @ sp[(-4)+-6]
  6393  01485A  0EF6               	movlw	-10
  6394  01485C  006F FF8C  F035    	movff	plusw1,btemp
  6395  014862  503F               	movf	(btemp+10)^0,w,c
  6396  014864  1635               	andwf	btemp^0,f,c
  6397  014866  0EF6               	movlw	-10
  6398  014868  0060  F0D7  FFE3   	movff	btemp,plusw1
  6399  01486E  0EF7               	movlw	-9
  6400  014870  006F FF8C  F035    	movff	plusw1,btemp
  6401  014876  5040               	movf	(btemp+11)^0,w,c
  6402  014878  1635               	andwf	btemp^0,f,c
  6403  01487A  0EF7               	movlw	-9
  6404  01487C  D02E               	goto	L4
  6405  01487E                     l9687:
  6406                           
  6407                           ;stkvar	_c @ sp[(-4)+-4]
  6408                           ;stkvar	_s @ sp[(-4)+0]
  6409  01487E  0EFC               	movlw	-4
  6410  014880  006F FF8F FFD9     	movff	plusw1,fsr2l
  6411  014886  0EFD               	movlw	-3
  6412  014888  006F FF8F FFDA     	movff	plusw1,fsr2h
  6413  01488E  0EF8               	movlw	-8
  6414  014890  006F FF8F FFDF     	movff	plusw1,indf2
  6415                           
  6416                           ;stkvar	_n @ sp[(-4)+-6]
  6417  014896  0EF6               	movlw	-10
  6418  014898  006F FF8C  F035    	movff	plusw1,btemp
  6419  01489E  0E01               	movlw	1
  6420  0148A0  5E35               	subwf	btemp^0,f,c
  6421  0148A2  0EF6               	movlw	-10
  6422  0148A4  0060  F0D7  FFE3   	movff	btemp,plusw1
  6423  0148AA  0EF7               	movlw	-9
  6424  0148AC  006F FF8C  F035    	movff	plusw1,btemp
  6425  0148B2  0E00               	movlw	0
  6426  0148B4  5A35               	subwfb	btemp^0,f,c
  6427  0148B6  0EF7               	movlw	-9
  6428  0148B8  0060  F0D7  FFE3   	movff	btemp,plusw1
  6429                           
  6430                           ;stkvar	_s @ sp[(-4)+0]
  6431  0148BE  0EFC               	movlw	-4
  6432  0148C0  50E3               	movf	plusw1,w,c
  6433  0148C2  0F01               	addlw	1
  6434  0148C4  6E35               	movwf	btemp^0,c
  6435  0148C6  0EFC               	movlw	-4
  6436  0148C8  0060  F0D7  FFE3   	movff	btemp,plusw1
  6437  0148CE  6A35               	clrf	btemp^0,c
  6438  0148D0  0EFD               	movlw	-3
  6439  0148D2  50E3               	movf	plusw1,w,c
  6440  0148D4  2035               	addwfc	btemp^0,w,c
  6441  0148D6  6E35               	movwf	btemp^0,c
  6442  0148D8  0EFD               	movlw	-3
  6443  0148DA                     L4:
  6444  0148DA  0060  F0D7  FFE3   	movff	btemp,plusw1
  6445                           
  6446                           ;stkvar	_n @ sp[(-4)+-6]
  6447  0148E0  0EF6               	movlw	-10
  6448  0148E2  006F FF8C  F035    	movff	plusw1,btemp
  6449  0148E8  0EF7               	movlw	-9
  6450  0148EA  50E3               	movf	plusw1,w,c
  6451  0148EC  1035               	iorwf	btemp^0,w,c
  6452  0148EE  A4D8               	btfss	status,2,c
  6453  0148F0  D7C6               	goto	l9687
  6454  0148F2                     u9850:
  6455                           
  6456                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  6457  0148F2  0EF6               	movlw	246
  6458  0148F4  26E1               	addwf	fsr1l,f,c
  6459  0148F6  0EFF               	movlw	255
  6460  0148F8  22E2               	addwfc	fsr1h,f,c
  6461  0148FA  0012               	return		;funcret
  6462  0148FC                     __end_of_memset:
  6463                           	opt callstack 0
  6464                           
  6465 ;; *************** function _printf *****************
  6466 ;; Defined at:
  6467 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  6468 ;; Parameters:    Size  Location     Type
  6469 ;;  fmt             2  [STACK] PTR const unsigned char 
  6470 ;;		 -> STR_13(3), STR_12(3), STR_11(3), 
  6471 ;; Auto vars:     Size  Location     Type
  6472 ;;  ap              2  [STACK] PTR void [1]
  6473 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6474 ;;  ret             2    0        int 
  6475 ;; Return value:  Size  Location     Type
  6476 ;;                  2  [STACK] int 
  6477 ;; Registers used:
  6478 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6479 ;; Tracked objects:
  6480 ;;		On entry : 3F/3B
  6481 ;;		On exit  : 0/0
  6482 ;;		Unchanged: 0/0
  6483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6488 ;;Total ram usage:        0 bytes
  6489 ;; Hardware stack levels used:    1
  6490 ;; Hardware stack levels required when called:   14
  6491 ;; This function calls:
  6492 ;;		_vfprintf
  6493 ;; This function is called by:
  6494 ;;		_eaDogM_WriteString
  6495 ;;		_send_lcd_cmd_dma
  6496 ;; This function uses a reentrant model
  6497 ;;
  6498                           
  6499                           	psect	text32
  6500  01748C                     __ptext32:
  6501                           	opt callstack 0
  6502  01748C                     _printf:
  6503                           	opt callstack 0
  6504                           
  6505                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6506  01748C  52E6               	movf	postinc1,f,c
  6507  01748E  52E6               	movf	postinc1,f,c
  6508                           
  6509                           ;stkvar	?_printf @ sp[(-2)+-3]
  6510                           
  6511                           ;incstack = 0
  6512  017490  0EFB               	movlw	251
  6513  017492  24E1               	addwf	fsr1l,w,c
  6514  017494  6E3F               	movwf	(btemp+10)^0,c
  6515  017496  0EFF               	movlw	255
  6516  017498  20E2               	addwfc	fsr1h,w,c
  6517  01749A  6E40               	movwf	(btemp+11)^0,c
  6518                           
  6519                           ;stkvar	_ap @ sp[(-2)+0]
  6520  01749C  0EFF               	movlw	-1
  6521  01749E  0060  F103  FFE3   	movff	btemp+11,plusw1
  6522  0174A4  0EFE               	movlw	-2
  6523  0174A6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6524                           
  6525                           ;stkvar	_ap @ sp[(-2)+0]
  6526  0174AC  0EFE               	movlw	254
  6527  0174AE  24E1               	addwf	fsr1l,w,c
  6528  0174B0  6E35               	movwf	btemp^0,c
  6529  0174B2  0EFF               	movlw	255
  6530  0174B4  20E2               	addwfc	fsr1h,w,c
  6531  0174B6  6E36               	movwf	(btemp+1)^0,c
  6532  0174B8  0060  F0D7  FFE6   	movff	btemp,postinc1
  6533  0174BE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  6534                           
  6535                           ;stkvar	_fmt @ sp[(-4)+-3]
  6536  0174C4  0EF9               	movlw	-7
  6537  0174C6  006F FF8F FFE6     	movff	plusw1,postinc1
  6538  0174CC  006F FF8F FFE6     	movff	plusw1,postinc1
  6539  0174D2  0E00               	movlw	0
  6540  0174D4  6EE6               	movwf	postinc1,c
  6541  0174D6  0E00               	movlw	0
  6542  0174D8  6EE6               	movwf	postinc1,c
  6543  0174DA  ECBC  F0B5         	call	_vfprintf	;wreg free
  6544                           
  6545                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  6546  0174DE  52E5               	movf	postdec1,f,c
  6547  0174E0  52E5               	movf	postdec1,f,c
  6548  0174E2  52E5               	movf	postdec1,f,c
  6549  0174E4  50E7               	movf	indf1,w,c
  6550  0174E6  5EE1               	subwf	fsr1l,f,c
  6551  0174E8  0E00               	movlw	0
  6552  0174EA  5AE2               	subwfb	fsr1h,f,c
  6553  0174EC  0012               	return		;funcret
  6554  0174EE                     __end_of_printf:
  6555                           	opt callstack 0
  6556                           
  6557 ;; *************** function _vfprintf *****************
  6558 ;; Defined at:
  6559 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6560 ;; Parameters:    Size  Location     Type
  6561 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6562 ;;		 -> f(6), NULL(0), 
  6563 ;;  fmt             2  [STACK] PTR const unsigned char 
  6564 ;;		 -> STR_31(3), STR_30(3), STR_29(19), STR_28(19), 
  6565 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
  6566 ;;		 -> STR_23(24), STR_22(15), STR_21(15), STR_20(15), 
  6567 ;;		 -> STR_19(10), STR_18(10), STR_17(19), STR_16(19), 
  6568 ;;		 -> STR_13(3), STR_12(3), STR_11(3), STR_10(13), 
  6569 ;;		 -> STR_9(13), STR_8(17), STR_6(15), STR_5(17), 
  6570 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
  6571 ;;  ap              2  [STACK] PTR PTR void 
  6572 ;;		 -> ap(2), ap(2), 
  6573 ;; Auto vars:     Size  Location     Type
  6574 ;;  cfmt            2  [STACK] PTR unsigned char 
  6575 ;;		 -> STR_31(3), STR_30(3), STR_29(19), STR_28(19), 
  6576 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
  6577 ;;		 -> STR_23(24), STR_22(15), STR_21(15), STR_20(15), 
  6578 ;;		 -> STR_19(10), STR_18(10), STR_17(19), STR_16(19), 
  6579 ;;		 -> STR_13(3), STR_12(3), STR_11(3), STR_10(13), 
  6580 ;;		 -> STR_9(13), STR_8(17), STR_6(15), STR_5(17), 
  6581 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
  6582 ;; Return value:  Size  Location     Type
  6583 ;;                  2  [STACK] int 
  6584 ;; Registers used:
  6585 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6586 ;; Tracked objects:
  6587 ;;		On entry : 0/4
  6588 ;;		On exit  : 0/0
  6589 ;;		Unchanged: 0/0
  6590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6595 ;;Total ram usage:        0 bytes
  6596 ;; Hardware stack levels used:    1
  6597 ;; Hardware stack levels required when called:   13
  6598 ;; This function calls:
  6599 ;;		_vfpfcnvrt
  6600 ;; This function is called by:
  6601 ;;		_sprintf
  6602 ;;		_printf
  6603 ;; This function uses a reentrant model
  6604 ;;
  6605                           
  6606                           	psect	text33
  6607  016B78                     __ptext33:
  6608                           	opt callstack 0
  6609  016B78                     _vfprintf:
  6610                           	opt callstack 0
  6611                           
  6612                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6613  016B78  52E6               	movf	postinc1,f,c
  6614  016B7A  52E6               	movf	postinc1,f,c
  6615                           
  6616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  6617                           ;stkvar	_fmt @ sp[(-2)+-4]
  6618                           
  6619                           ;incstack = 0
  6620  016B7C  0EFA               	movlw	-6
  6621  016B7E  006F FF8C  F03F    	movff	plusw1,btemp+10
  6622  016B84  0EFB               	movlw	-5
  6623  016B86  006F FF8C  F040    	movff	plusw1,btemp+11
  6624                           
  6625                           ;stkvar	_cfmt @ sp[(-2)+0]
  6626  016B8C  0EFF               	movlw	-1
  6627  016B8E  0060  F103  FFE3   	movff	btemp+11,plusw1
  6628  016B94  0EFE               	movlw	-2
  6629  016B96  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6630                           
  6631                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  6632  016B9C  6A1C               	clrf	_nout^0,c
  6633  016B9E  6A1D               	clrf	(_nout+1)^0,c
  6634                           
  6635                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6636  016BA0  D020               	goto	l9701
  6637  016BA2                     l9699:
  6638                           
  6639                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  6640                           ;stkvar	_ap @ sp[(-2)+-6]
  6641  016BA2  0EF8               	movlw	-8
  6642  016BA4  006F FF8F FFE6     	movff	plusw1,postinc1
  6643  016BAA  006F FF8F FFE6     	movff	plusw1,postinc1
  6644                           
  6645                           ;stkvar	_cfmt @ sp[(-4)+0]
  6646  016BB0  0EFC               	movlw	252
  6647  016BB2  24E1               	addwf	fsr1l,w,c
  6648  016BB4  6E35               	movwf	btemp^0,c
  6649  016BB6  0EFF               	movlw	255
  6650  016BB8  20E2               	addwfc	fsr1h,w,c
  6651  016BBA  6E36               	movwf	(btemp+1)^0,c
  6652  016BBC  0060  F0D7  FFE6   	movff	btemp,postinc1
  6653  016BC2  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  6654                           
  6655                           ;stkvar	_fp @ sp[(-6)+-2]
  6656  016BC8  0EF8               	movlw	-8
  6657  016BCA  006F FF8F FFE6     	movff	plusw1,postinc1
  6658  016BD0  006F FF8F FFE6     	movff	plusw1,postinc1
  6659  016BD6  EC22  F089         	call	_vfpfcnvrt	;wreg free
  6660  016BDA  5035               	movf	btemp^0,w,c
  6661  016BDC  261C               	addwf	_nout^0,f,c
  6662  016BDE  5036               	movf	(btemp+1)^0,w,c
  6663  016BE0  221D               	addwfc	(_nout+1)^0,f,c
  6664  016BE2                     l9701:
  6665                           
  6666                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6667                           ;stkvar	_cfmt @ sp[(-2)+0]
  6668  016BE2  50E1               	movf	fsr1l,w,c
  6669  016BE4  0FFE               	addlw	-2
  6670  016BE6  6ED9               	movwf	fsr2l,c
  6671  016BE8  50E2               	movf	fsr1h,w,c
  6672  016BEA  6EDA               	movwf	fsr2h,c
  6673  016BEC  0EFF               	movlw	255
  6674  016BEE  22DA               	addwfc	fsr2h,f,c
  6675  016BF0  006F FF7B FFF6     	movff	postinc2,tblptrl
  6676  016BF6  006F FF77 FFF7     	movff	postdec2,tblptrh
  6677  016BFC                     	if	0	;tblptru may be non-zero
  6678  016BFC                     	endif
  6679  016BFC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6680  016BFC  0E00               	movlw	low (__mediumconst shr (0+16))
  6681  016BFE  6EF8               	movwf	tblptru,c
  6682  016C00                     	endif
  6683  016C00  0008               	tblrd		*
  6684  016C02  50F5               	movf	tablat,w,c
  6685  016C04  0900               	iorlw	0
  6686  016C06  A4D8               	btfss	status,2,c
  6687  016C08  D7CC               	goto	l9699
  6688                           
  6689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  6690  016C0A  0060  F070  F035   	movff	_nout,btemp
  6691  016C10  0060  F074  F036   	movff	_nout+1,btemp+1
  6692                           
  6693                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  6694  016C16  0EF8               	movlw	248
  6695  016C18  26E1               	addwf	fsr1l,f,c
  6696  016C1A  0EFF               	movlw	255
  6697  016C1C  22E2               	addwfc	fsr1h,f,c
  6698  016C1E  0012               	return		;funcret
  6699  016C20                     __end_of_vfprintf:
  6700                           	opt callstack 0
  6701                           
  6702 ;; *************** function _vfpfcnvrt *****************
  6703 ;; Defined at:
  6704 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6705 ;; Parameters:    Size  Location     Type
  6706 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6707 ;;		 -> f(6), NULL(0), 
  6708 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  6709 ;;		 -> cfmt(2), 
  6710 ;;  ap              2  [STACK] PTR PTR void 
  6711 ;;		 -> ap(2), ap(2), 
  6712 ;; Auto vars:     Size  Location     Type
  6713 ;;  llu             8  [STACK] unsigned long long 
  6714 ;;  ll              8  [STACK] long long 
  6715 ;;  f               4  [STACK] long long 
  6716 ;;  ct              3  [STACK] unsigned char [3]
  6717 ;;  vp              3    0        PTR void 
  6718 ;;  cp              2  [STACK] PTR unsigned char 
  6719 ;;		 -> ?_printf(2), ?_sprintf(2), STR_15(9), STR_14(12), 
  6720 ;;		 -> D.lcd(216), D(218), T(144), STR_7(4), 
  6721 ;;		 -> STR_3(4), V(171), 
  6722 ;;  i               2    0        int 
  6723 ;;  done            2    0        int 
  6724 ;;  c               1  [STACK] unsigned char 
  6725 ;; Return value:  Size  Location     Type
  6726 ;;                  2  [STACK] int 
  6727 ;; Registers used:
  6728 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6729 ;; Tracked objects:
  6730 ;;		On entry : 0/4
  6731 ;;		On exit  : 0/0
  6732 ;;		Unchanged: 0/0
  6733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6738 ;;Total ram usage:        0 bytes
  6739 ;; Hardware stack levels used:    1
  6740 ;; Hardware stack levels required when called:   12
  6741 ;; This function calls:
  6742 ;;		_atoi
  6743 ;;		_ctoa
  6744 ;;		_dtoa
  6745 ;;		_efgtoa
  6746 ;;		_fputc
  6747 ;;		_isdigit
  6748 ;;		_isupper
  6749 ;;		_stoa
  6750 ;;		_strncmp
  6751 ;;		_tolower
  6752 ;;		_xtoa
  6753 ;; This function is called by:
  6754 ;;		_vfprintf
  6755 ;; This function uses a reentrant model
  6756 ;;
  6757                           
  6758                           	psect	text34
  6759  011244                     __ptext34:
  6760                           	opt callstack 0
  6761  011244                     _vfpfcnvrt:
  6762                           	opt callstack 0
  6763                           
  6764                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  6765  011244  0E20               	movlw	32
  6766  011246  26E1               	addwf	fsr1l,f,c
  6767  011248  0E00               	movlw	0
  6768  01124A  22E2               	addwfc	fsr1h,f,c
  6769                           
  6770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  6771                           ;stkvar	_fmt @ sp[(-32)+-4]
  6772                           
  6773                           ;incstack = 0
  6774  01124C  0EDC               	movlw	-36
  6775  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6776  011254  0EDD               	movlw	-35
  6777  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  6778  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  6779  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  6780  011268                     	if	0	;tblptru may be non-zero
  6781  011268                     	endif
  6782  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6783  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  6784  01126A  6EF8               	movwf	tblptru,c
  6785  01126C                     	endif
  6786  01126C  0008               	tblrd		*
  6787  01126E  50F5               	movf	tablat,w,c
  6788  011270  0A25               	xorlw	37
  6789  011272  A4D8               	btfss	status,2,c
  6790  011274  EF92  F08E         	goto	l9645
  6791                           
  6792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  6793                           ;stkvar	_fmt @ sp[(-32)+-4]
  6794  011278  0EDC               	movlw	-36
  6795  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  6796  011280  0EDD               	movlw	-35
  6797  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  6798  011288  2ADE               	incf	postinc2,f,c
  6799  01128A  0E00               	movlw	0
  6800  01128C  22DD               	addwfc	postdec2,f,c
  6801                           
  6802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  6803  01128E  6A1E               	clrf	_width^0,c
  6804  011290  6A1F               	clrf	(_width+1)^0,c
  6805  011292  6A22               	clrf	_flags^0,c
  6806  011294  6A23               	clrf	(_flags+1)^0,c
  6807                           
  6808                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  6809  011296  6820               	setf	_prec^0,c
  6810  011298  6821               	setf	(_prec+1)^0,c
  6811                           
  6812                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  6813                           ;stkvar	_fmt @ sp[(-32)+-4]
  6814  01129A  0EDC               	movlw	-36
  6815  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6816  0112A2  0EDD               	movlw	-35
  6817  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  6818  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  6819  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  6820  0112B6                     	if	0	;tblptru may be non-zero
  6821  0112B6                     	endif
  6822  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6823  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  6824  0112B8  6EF8               	movwf	tblptru,c
  6825  0112BA                     	endif
  6826  0112BA  0008               	tblrd		*
  6827  0112BC  50F5               	movf	tablat,w,c
  6828  0112BE  0A2A               	xorlw	42
  6829  0112C0  A4D8               	btfss	status,2,c
  6830  0112C2  D031               	goto	l9509
  6831                           
  6832                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  6833                           ;stkvar	_fmt @ sp[(-32)+-4]
  6834  0112C4  0EDC               	movlw	-36
  6835  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  6836  0112CC  0EDD               	movlw	-35
  6837  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  6838  0112D4  2ADE               	incf	postinc2,f,c
  6839  0112D6  0E00               	movlw	0
  6840  0112D8  22DD               	addwfc	postdec2,f,c
  6841                           
  6842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  6843                           ;stkvar	_ap @ sp[(-32)+-6]
  6844  0112DA  0EDA               	movlw	-38
  6845  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  6846  0112E2  0EDB               	movlw	-37
  6847  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  6848  0112EA  0E02               	movlw	2
  6849  0112EC  5EDE               	subwf	postinc2,f,c
  6850  0112EE  0E00               	movlw	0
  6851  0112F0  5ADD               	subwfb	postdec2,f,c
  6852  0112F2  006F FF78  F03F    	movff	postinc2,btemp+10
  6853  0112F8  006F FF74  F040    	movff	postdec2,btemp+11
  6854  0112FE  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  6855  011304  0060  F103  FFDA   	movff	btemp+11,fsr2h
  6856  01130A  006F FF78  F01E    	movff	postinc2,_width
  6857  011310  006F FF74  F01F    	movff	postdec2,_width+1
  6858                           
  6859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  6860  011316  AE1F               	btfss	(_width+1)^0,7,c
  6861  011318  D066               	goto	u9610
  6862                           
  6863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  6864  01131A  8022               	bsf	_flags^0,0,c
  6865                           
  6866                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  6867  01131C  6C1E               	negf	_width^0,c
  6868  01131E  1E1F               	comf	(_width+1)^0,f,c
  6869  011320  B0D8               	btfsc	status,0,c
  6870  011322  2A1F               	incf	(_width+1)^0,f,c
  6871  011324  D060               	goto	u9610
  6872  011326                     l9509:
  6873                           
  6874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  6875                           ;stkvar	_fmt @ sp[(-32)+-4]
  6876  011326  0EDC               	movlw	-36
  6877  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  6878  01132E  0EDD               	movlw	-35
  6879  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  6880  011336  006F FF78  F03F    	movff	postinc2,btemp+10
  6881  01133C  006F FF74  F040    	movff	postdec2,btemp+11
  6882  011342  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  6883  011348  0060  F103  FFE6   	movff	btemp+11,postinc1
  6884  01134E  EC1D  F0A7         	call	_atoi	;wreg free
  6885  011352  0060  F0D4  F01E   	movff	btemp,_width
  6886  011358  0060  F0D8  F01F   	movff	btemp+1,_width+1
  6887                           
  6888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6889  01135E  D00B               	goto	l9513
  6890  011360                     l9511:
  6891                           
  6892                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  6893                           ;stkvar	_fmt @ sp[(-32)+-4]
  6894  011360  0EDC               	movlw	-36
  6895  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  6896  011368  0EDD               	movlw	-35
  6897  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6898  011370  2ADE               	incf	postinc2,f,c
  6899  011372  0E00               	movlw	0
  6900  011374  22DD               	addwfc	postdec2,f,c
  6901  011376                     l9513:
  6902  011376  0ED0               	movlw	208
  6903  011378  6E3F               	movwf	(btemp+10)^0,c
  6904  01137A  0EFF               	movlw	255
  6905  01137C  6E40               	movwf	(btemp+11)^0,c
  6906                           
  6907                           ;stkvar	_fmt @ sp[(-32)+-4]
  6908  01137E  0EDC               	movlw	-36
  6909  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  6910  011386  0EDD               	movlw	-35
  6911  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  6912  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  6913  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  6914  01139A                     	if	0	;tblptru may be non-zero
  6915  01139A                     	endif
  6916  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6917  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  6918  01139C  6EF8               	movwf	tblptru,c
  6919  01139E                     	endif
  6920  01139E  0008               	tblrd		*
  6921  0113A0  50F5               	movf	tablat,w,c
  6922  0113A2  6E3D               	movwf	(btemp+8)^0,c
  6923  0113A4  6A3E               	clrf	(btemp+9)^0,c
  6924  0113A6  503F               	movf	(btemp+10)^0,w,c
  6925  0113A8  263D               	addwf	(btemp+8)^0,f,c
  6926  0113AA  5040               	movf	(btemp+11)^0,w,c
  6927  0113AC  223E               	addwfc	(btemp+9)^0,f,c
  6928  0113AE  503E               	movf	(btemp+9)^0,w,c
  6929  0113B0  E106               	bnz	u9590
  6930  0113B2  0E0A               	movlw	10
  6931  0113B4  5C3D               	subwf	(btemp+8)^0,w,c
  6932  0113B6  B0D8               	btfsc	status,0,c
  6933  0113B8  D002               	goto	u9590
  6934  0113BA  0E01               	movlw	1
  6935  0113BC  D001               	goto	u9600
  6936  0113BE                     u9590:
  6937  0113BE  0E00               	movlw	0
  6938  0113C0                     u9600:
  6939  0113C0  6E3F               	movwf	(btemp+10)^0,c
  6940  0113C2  6A40               	clrf	(btemp+11)^0,c
  6941                           
  6942                           ;stkvar	_vfpfcnvrt$4116 @ sp[(-32)+4]
  6943  0113C4  0EE4               	movlw	-28
  6944  0113C6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6945  0113CC  0EE5               	movlw	-27
  6946  0113CE  0060  F103  FFE3   	movff	btemp+11,plusw1
  6947                           
  6948                           ;stkvar	_vfpfcnvrt$4116 @ sp[(-32)+4]
  6949  0113D4  0EE4               	movlw	-28
  6950  0113D6  006F FF8C  F035    	movff	plusw1,btemp
  6951  0113DC  0EE5               	movlw	-27
  6952  0113DE  50E3               	movf	plusw1,w,c
  6953  0113E0  1035               	iorwf	btemp^0,w,c
  6954  0113E2  A4D8               	btfss	status,2,c
  6955  0113E4  D7BD               	goto	l9511
  6956  0113E6                     u9610:
  6957                           
  6958                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  6959                           ;stkvar	_fmt @ sp[(-32)+-4]
  6960  0113E6  0EDC               	movlw	-36
  6961  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  6962  0113EE  0EDD               	movlw	-35
  6963  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  6964  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  6965  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  6966  011402                     	if	0	;tblptru may be non-zero
  6967  011402                     	endif
  6968  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6969  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  6970  011404  6EF8               	movwf	tblptru,c
  6971  011406                     	endif
  6972  011406  0008               	tblrd		*
  6973  011408  50F5               	movf	tablat,w,c
  6974  01140A  0A2E               	xorlw	46
  6975  01140C  A4D8               	btfss	status,2,c
  6976  01140E  D0AC               	goto	u9660
  6977                           
  6978                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  6979  011410  6A20               	clrf	_prec^0,c
  6980  011412  6A21               	clrf	(_prec+1)^0,c
  6981                           
  6982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  6983                           ;stkvar	_fmt @ sp[(-32)+-4]
  6984  011414  0EDC               	movlw	-36
  6985  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  6986  01141C  0EDD               	movlw	-35
  6987  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  6988  011424  2ADE               	incf	postinc2,f,c
  6989  011426  0E00               	movlw	0
  6990  011428  22DD               	addwfc	postdec2,f,c
  6991                           
  6992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  6993                           ;stkvar	_fmt @ sp[(-32)+-4]
  6994  01142A  0EDC               	movlw	-36
  6995  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6996  011432  0EDD               	movlw	-35
  6997  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  6998  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  6999  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  7000  011446                     	if	0	;tblptru may be non-zero
  7001  011446                     	endif
  7002  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7003  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  7004  011448  6EF8               	movwf	tblptru,c
  7005  01144A                     	endif
  7006  01144A  0008               	tblrd		*
  7007  01144C  50F5               	movf	tablat,w,c
  7008  01144E  0A2A               	xorlw	42
  7009  011450  A4D8               	btfss	status,2,c
  7010  011452  D02A               	goto	l9531
  7011                           
  7012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  7013                           ;stkvar	_fmt @ sp[(-32)+-4]
  7014  011454  0EDC               	movlw	-36
  7015  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  7016  01145C  0EDD               	movlw	-35
  7017  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7018  011464  2ADE               	incf	postinc2,f,c
  7019  011466  0E00               	movlw	0
  7020  011468  22DD               	addwfc	postdec2,f,c
  7021                           
  7022                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  7023                           ;stkvar	_ap @ sp[(-32)+-6]
  7024  01146A  0EDA               	movlw	-38
  7025  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7026  011472  0EDB               	movlw	-37
  7027  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  7028  01147A  0E02               	movlw	2
  7029  01147C  5EDE               	subwf	postinc2,f,c
  7030  01147E  0E00               	movlw	0
  7031  011480  5ADD               	subwfb	postdec2,f,c
  7032  011482  006F FF78  F03F    	movff	postinc2,btemp+10
  7033  011488  006F FF74  F040    	movff	postdec2,btemp+11
  7034  01148E  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7035  011494  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7036  01149A  006F FF78  F020    	movff	postinc2,_prec
  7037  0114A0  006F FF74  F021    	movff	postdec2,_prec+1
  7038                           
  7039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  7040  0114A6  D060               	goto	u9660
  7041  0114A8                     l9531:
  7042                           
  7043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  7044                           ;stkvar	_fmt @ sp[(-32)+-4]
  7045  0114A8  0EDC               	movlw	-36
  7046  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7047  0114B0  0EDD               	movlw	-35
  7048  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7049  0114B8  006F FF78  F03F    	movff	postinc2,btemp+10
  7050  0114BE  006F FF74  F040    	movff	postdec2,btemp+11
  7051  0114C4  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  7052  0114CA  0060  F103  FFE6   	movff	btemp+11,postinc1
  7053  0114D0  EC1D  F0A7         	call	_atoi	;wreg free
  7054  0114D4  0060  F0D4  F020   	movff	btemp,_prec
  7055  0114DA  0060  F0D8  F021   	movff	btemp+1,_prec+1
  7056                           
  7057                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7058  0114E0  D00B               	goto	l9535
  7059  0114E2                     l9533:
  7060                           
  7061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  7062                           ;stkvar	_fmt @ sp[(-32)+-4]
  7063  0114E2  0EDC               	movlw	-36
  7064  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7065  0114EA  0EDD               	movlw	-35
  7066  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7067  0114F2  2ADE               	incf	postinc2,f,c
  7068  0114F4  0E00               	movlw	0
  7069  0114F6  22DD               	addwfc	postdec2,f,c
  7070  0114F8                     l9535:
  7071  0114F8  0ED0               	movlw	208
  7072  0114FA  6E3F               	movwf	(btemp+10)^0,c
  7073  0114FC  0EFF               	movlw	255
  7074  0114FE  6E40               	movwf	(btemp+11)^0,c
  7075                           
  7076                           ;stkvar	_fmt @ sp[(-32)+-4]
  7077  011500  0EDC               	movlw	-36
  7078  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  7079  011508  0EDD               	movlw	-35
  7080  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7081  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  7082  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  7083  01151C                     	if	0	;tblptru may be non-zero
  7084  01151C                     	endif
  7085  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7086  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  7087  01151E  6EF8               	movwf	tblptru,c
  7088  011520                     	endif
  7089  011520  0008               	tblrd		*
  7090  011522  50F5               	movf	tablat,w,c
  7091  011524  6E3D               	movwf	(btemp+8)^0,c
  7092  011526  6A3E               	clrf	(btemp+9)^0,c
  7093  011528  503F               	movf	(btemp+10)^0,w,c
  7094  01152A  263D               	addwf	(btemp+8)^0,f,c
  7095  01152C  5040               	movf	(btemp+11)^0,w,c
  7096  01152E  223E               	addwfc	(btemp+9)^0,f,c
  7097  011530  503E               	movf	(btemp+9)^0,w,c
  7098  011532  E106               	bnz	u9640
  7099  011534  0E0A               	movlw	10
  7100  011536  5C3D               	subwf	(btemp+8)^0,w,c
  7101  011538  B0D8               	btfsc	status,0,c
  7102  01153A  D002               	goto	u9640
  7103  01153C  0E01               	movlw	1
  7104  01153E  D001               	goto	u9650
  7105  011540                     u9640:
  7106  011540  0E00               	movlw	0
  7107  011542                     u9650:
  7108  011542  6E3F               	movwf	(btemp+10)^0,c
  7109  011544  6A40               	clrf	(btemp+11)^0,c
  7110                           
  7111                           ;stkvar	_vfpfcnvrt$4117 @ sp[(-32)+0]
  7112  011546  0EE0               	movlw	-32
  7113  011548  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7114  01154E  0EE1               	movlw	-31
  7115  011550  0060  F103  FFE3   	movff	btemp+11,plusw1
  7116                           
  7117                           ;stkvar	_vfpfcnvrt$4117 @ sp[(-32)+0]
  7118  011556  0EE0               	movlw	-32
  7119  011558  006F FF8C  F035    	movff	plusw1,btemp
  7120  01155E  0EE1               	movlw	-31
  7121  011560  50E3               	movf	plusw1,w,c
  7122  011562  1035               	iorwf	btemp^0,w,c
  7123  011564  A4D8               	btfss	status,2,c
  7124  011566  D7BD               	goto	l9533
  7125  011568                     u9660:
  7126                           
  7127                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  7128                           ;stkvar	_fmt @ sp[(-32)+-4]
  7129  011568  0EDC               	movlw	-36
  7130  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7131  011570  0EDD               	movlw	-35
  7132  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  7133  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  7134  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  7135  011584                     	if	0	;tblptru may be non-zero
  7136  011584                     	endif
  7137  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7138  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  7139  011586  6EF8               	movwf	tblptru,c
  7140  011588                     	endif
  7141  011588  0008               	tblrd		*
  7142  01158A  50F5               	movf	tablat,w,c
  7143  01158C  6EE6               	movwf	postinc1,c
  7144  01158E  0E00               	movlw	0
  7145  011590  6EE6               	movwf	postinc1,c
  7146  011592  EC62  F0B8         	call	_tolower	;wreg free
  7147                           
  7148                           ;stkvar	_ct @ sp[(-32)+26]
  7149  011596  0EFA               	movlw	-6
  7150  011598  0060  F0D7  FFE3   	movff	btemp,plusw1
  7151                           
  7152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  7153                           ;stkvar	_ct @ sp[(-32)+26]
  7154  01159E  0EFA               	movlw	-6
  7155  0115A0  50E3               	movf	plusw1,w,c
  7156  0115A2  B4D8               	btfsc	status,2,c
  7157  0115A4  D05B               	goto	l9551
  7158                           
  7159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  7160                           ;stkvar	_ct @ sp[(-32)+26]
  7161  0115A6  0EFB               	movlw	251
  7162  0115A8  24E1               	addwf	fsr1l,w,c
  7163  0115AA  6ED9               	movwf	fsr2l,c
  7164  0115AC  0EFF               	movlw	255
  7165  0115AE  20E2               	addwfc	fsr1h,w,c
  7166  0115B0  6EDA               	movwf	fsr2h,c
  7167                           
  7168                           ;stkvar	_fmt @ sp[(-32)+-4]
  7169  0115B2  0EDC               	movlw	-36
  7170  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  7171  0115BA  0EDD               	movlw	-35
  7172  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  7173  0115C2  006F FFB8  F03F    	movff	postinc0,btemp+10
  7174  0115C8  006F FFB4  F040    	movff	postdec0,btemp+11
  7175  0115CE  0E01               	movlw	1
  7176  0115D0  263F               	addwf	(btemp+10)^0,f,c
  7177  0115D2  0E00               	movlw	0
  7178  0115D4  2240               	addwfc	(btemp+11)^0,f,c
  7179  0115D6  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  7180  0115DC  0060  F103  FFF7   	movff	btemp+11,tblptrh
  7181  0115E2                     	if	0	;tblptru may be non-zero
  7182  0115E2                     	endif
  7183  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7184  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  7185  0115E4  6EF8               	movwf	tblptru,c
  7186  0115E6                     	endif
  7187  0115E6  0008               	tblrd		*
  7188  0115E8  50F5               	movf	tablat,w,c
  7189  0115EA  6EE6               	movwf	postinc1,c
  7190  0115EC  0E00               	movlw	0
  7191  0115EE  6EE6               	movwf	postinc1,c
  7192  0115F0  EC62  F0B8         	call	_tolower	;wreg free
  7193  0115F4  5035               	movf	btemp^0,w,c
  7194  0115F6  6EDF               	movwf	indf2,c
  7195                           
  7196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  7197                           ;stkvar	_ct @ sp[(-32)+26]
  7198  0115F8  0EFB               	movlw	251
  7199  0115FA  24E1               	addwf	fsr1l,w,c
  7200  0115FC  6ED9               	movwf	fsr2l,c
  7201  0115FE  0EFF               	movlw	255
  7202  011600  20E2               	addwfc	fsr1h,w,c
  7203  011602  6EDA               	movwf	fsr2h,c
  7204  011604  50DF               	movf	indf2,w,c
  7205  011606  B4D8               	btfsc	status,2,c
  7206  011608  D029               	goto	l9551
  7207                           
  7208                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  7209                           ;stkvar	_ct @ sp[(-32)+26]
  7210  01160A  0EFC               	movlw	252
  7211  01160C  24E1               	addwf	fsr1l,w,c
  7212  01160E  6ED9               	movwf	fsr2l,c
  7213  011610  0EFF               	movlw	255
  7214  011612  20E2               	addwfc	fsr1h,w,c
  7215  011614  6EDA               	movwf	fsr2h,c
  7216                           
  7217                           ;stkvar	_fmt @ sp[(-32)+-4]
  7218  011616  0EDC               	movlw	-36
  7219  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  7220  01161E  0EDD               	movlw	-35
  7221  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  7222  011626  006F FFB8  F03F    	movff	postinc0,btemp+10
  7223  01162C  006F FFB4  F040    	movff	postdec0,btemp+11
  7224  011632  0E02               	movlw	2
  7225  011634  263F               	addwf	(btemp+10)^0,f,c
  7226  011636  0E00               	movlw	0
  7227  011638  2240               	addwfc	(btemp+11)^0,f,c
  7228  01163A  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  7229  011640  0060  F103  FFF7   	movff	btemp+11,tblptrh
  7230  011646                     	if	0	;tblptru may be non-zero
  7231  011646                     	endif
  7232  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7233  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  7234  011648  6EF8               	movwf	tblptru,c
  7235  01164A                     	endif
  7236  01164A  0008               	tblrd		*
  7237  01164C  50F5               	movf	tablat,w,c
  7238  01164E  6EE6               	movwf	postinc1,c
  7239  011650  0E00               	movlw	0
  7240  011652  6EE6               	movwf	postinc1,c
  7241  011654  EC62  F0B8         	call	_tolower	;wreg free
  7242  011658  5035               	movf	btemp^0,w,c
  7243  01165A  6EDF               	movwf	indf2,c
  7244  01165C                     l9551:
  7245                           
  7246                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  7247                           ;stkvar	_fmt @ sp[(-32)+-4]
  7248  01165C  0EDC               	movlw	-36
  7249  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7250  011664  0EDD               	movlw	-35
  7251  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  7252  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7253  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  7254  011678                     	if	0	;tblptru may be non-zero
  7255  011678                     	endif
  7256  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7257  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  7258  01167A  6EF8               	movwf	tblptru,c
  7259  01167C                     	endif
  7260  01167C  0008               	tblrd		*
  7261  01167E  50F5               	movf	tablat,w,c
  7262  011680  0A63               	xorlw	99
  7263  011682  A4D8               	btfss	status,2,c
  7264  011684  D036               	goto	l9561
  7265                           
  7266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  7267                           ;stkvar	_fmt @ sp[(-32)+-4]
  7268  011686  0EDC               	movlw	-36
  7269  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  7270  01168E  0EDD               	movlw	-35
  7271  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  7272  011696  2ADE               	incf	postinc2,f,c
  7273  011698  0E00               	movlw	0
  7274  01169A  22DD               	addwfc	postdec2,f,c
  7275                           
  7276                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7277                           ;stkvar	_ap @ sp[(-32)+-6]
  7278  01169C  0EDA               	movlw	-38
  7279  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7280  0116A4  0EDB               	movlw	-37
  7281  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7282  0116AC  0E02               	movlw	2
  7283  0116AE  5EDE               	subwf	postinc2,f,c
  7284  0116B0  0E00               	movlw	0
  7285  0116B2  5ADD               	subwfb	postdec2,f,c
  7286  0116B4  006F FF78  F03F    	movff	postinc2,btemp+10
  7287  0116BA  006F FF74  F040    	movff	postdec2,btemp+11
  7288  0116C0  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7289  0116C6  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7290  0116CC  50DF               	movf	indf2,w,c
  7291  0116CE  6E40               	movwf	(btemp+11)^0,c
  7292                           
  7293                           ;stkvar	_c @ sp[(-32)+31]
  7294  0116D0  0EFF               	movlw	-1
  7295  0116D2  0060  F103  FFE3   	movff	btemp+11,plusw1
  7296                           
  7297                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  7298                           ;stkvar	_c @ sp[(-32)+31]
  7299  0116D8  0EFF               	movlw	-1
  7300  0116DA  50E3               	movf	plusw1,w,c
  7301  0116DC  6EE6               	movwf	postinc1,c
  7302                           
  7303                           ;stkvar	_fp @ sp[(-33)+-2]
  7304  0116DE  0EDD               	movlw	-35
  7305  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  7306  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  7307  0116EC  ECDC  F0B7         	call	_ctoa	;wreg free
  7308  0116F0  D343               	goto	l1949
  7309  0116F2                     l9561:
  7310                           
  7311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  7312                           ;stkvar	_fmt @ sp[(-32)+-4]
  7313  0116F2  0EDC               	movlw	-36
  7314  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7315  0116FA  0EDD               	movlw	-35
  7316  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7317  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
  7318  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
  7319  01170E                     	if	0	;tblptru may be non-zero
  7320  01170E                     	endif
  7321  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7322  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
  7323  011710  6EF8               	movwf	tblptru,c
  7324  011712                     	endif
  7325  011712  0008               	tblrd		*
  7326  011714  50F5               	movf	tablat,w,c
  7327  011716  0A64               	xorlw	100
  7328  011718  B4D8               	btfsc	status,2,c
  7329  01171A  D015               	goto	u9710
  7330                           
  7331                           ;stkvar	_fmt @ sp[(-32)+-4]
  7332  01171C  0EDC               	movlw	-36
  7333  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7334  011724  0EDD               	movlw	-35
  7335  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
  7336  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7337  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
  7338  011738                     	if	0	;tblptru may be non-zero
  7339  011738                     	endif
  7340  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7341  011738  0E00               	movlw	low (__mediumconst shr (0+16))
  7342  01173A  6EF8               	movwf	tblptru,c
  7343  01173C                     	endif
  7344  01173C  0008               	tblrd		*
  7345  01173E  50F5               	movf	tablat,w,c
  7346  011740  0A69               	xorlw	105
  7347  011742  A4D8               	btfss	status,2,c
  7348  011744  D075               	goto	l9573
  7349  011746                     u9710:
  7350                           
  7351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  7352                           ;stkvar	_fmt @ sp[(-32)+-4]
  7353  011746  0EDC               	movlw	-36
  7354  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
  7355  01174E  0EDD               	movlw	-35
  7356  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
  7357  011756  2ADE               	incf	postinc2,f,c
  7358  011758  0E00               	movlw	0
  7359  01175A  22DD               	addwfc	postdec2,f,c
  7360                           
  7361                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  7362                           ;stkvar	_ap @ sp[(-32)+-6]
  7363  01175C  0EDA               	movlw	-38
  7364  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7365  011764  0EDB               	movlw	-37
  7366  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
  7367  01176C  0E02               	movlw	2
  7368  01176E  5EDE               	subwf	postinc2,f,c
  7369  011770  0E00               	movlw	0
  7370  011772  5ADD               	subwfb	postdec2,f,c
  7371  011774  006F FF78  F03F    	movff	postinc2,btemp+10
  7372  01177A  006F FF74  F040    	movff	postdec2,btemp+11
  7373  011780  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7374  011786  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7375  01178C  006F FF78  F03F    	movff	postinc2,btemp+10
  7376  011792  006F FF74  F040    	movff	postdec2,btemp+11
  7377                           
  7378                           ;stkvar	_ll @ sp[(-32)+14]
  7379  011798  0EEE               	movlw	-18
  7380  01179A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7381  0117A0  0EEF               	movlw	-17
  7382  0117A2  0060  F103  FFE3   	movff	btemp+11,plusw1
  7383  0117A8  6A35               	clrf	btemp^0,c
  7384  0117AA  BEE3               	btfsc	plusw1,7,c
  7385  0117AC  6835               	setf	btemp^0,c
  7386  0117AE  0EF0               	movlw	-16
  7387  0117B0  0060  F0D7  FFE3   	movff	btemp,plusw1
  7388  0117B6  0EF1               	movlw	-15
  7389  0117B8  0060  F0D7  FFE3   	movff	btemp,plusw1
  7390  0117BE  0EF2               	movlw	-14
  7391  0117C0  0060  F0D7  FFE3   	movff	btemp,plusw1
  7392  0117C6  0EF3               	movlw	-13
  7393  0117C8  0060  F0D7  FFE3   	movff	btemp,plusw1
  7394  0117CE  0EF4               	movlw	-12
  7395  0117D0  0060  F0D7  FFE3   	movff	btemp,plusw1
  7396  0117D6  0EF5               	movlw	-11
  7397  0117D8  0060  F0D7  FFE3   	movff	btemp,plusw1
  7398                           
  7399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  7400                           ;stkvar	_ll @ sp[(-32)+14]
  7401  0117DE  50E1               	movf	fsr1l,w,c
  7402  0117E0  0FEE               	addlw	-18
  7403  0117E2  6ED9               	movwf	fsr2l,c
  7404  0117E4  50E2               	movf	fsr1h,w,c
  7405  0117E6  6EDA               	movwf	fsr2h,c
  7406  0117E8  0EFF               	movlw	255
  7407  0117EA  22DA               	addwfc	fsr2h,f,c
  7408  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  7409  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  7410  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  7411  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
  7412  011804  006F FF7B FFE6     	movff	postinc2,postinc1
  7413  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
  7414  011810  006F FF7B FFE6     	movff	postinc2,postinc1
  7415  011816  006F FF7B FFE6     	movff	postinc2,postinc1
  7416                           
  7417                           ;stkvar	_fp @ sp[(-40)+-2]
  7418  01181C  0ED6               	movlw	-42
  7419  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
  7420  011824  006F FF8F FFE6     	movff	plusw1,postinc1
  7421  01182A  EC71  F099         	call	_dtoa	;wreg free
  7422  01182E  D2A4               	goto	l1949
  7423  011830                     l9573:
  7424                           
  7425                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  7426                           ;stkvar	_ct @ sp[(-32)+26]
  7427  011830  0EFA               	movlw	-6
  7428  011832  006F FF8C  F035    	movff	plusw1,btemp
  7429  011838  0E66               	movlw	102
  7430  01183A  1835               	xorwf	btemp^0,w,c
  7431  01183C  A4D8               	btfss	status,2,c
  7432  01183E  D06E               	goto	l9585
  7433                           
  7434                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  7435                           ;stkvar	_fmt @ sp[(-32)+-4]
  7436  011840  0EDC               	movlw	-36
  7437  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
  7438  011848  0EDD               	movlw	-35
  7439  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7440  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
  7441  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
  7442  01185C                     	if	0	;tblptru may be non-zero
  7443  01185C                     	endif
  7444  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7445  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
  7446  01185E  6EF8               	movwf	tblptru,c
  7447  011860                     	endif
  7448                           
  7449                           ;stkvar	_c @ sp[(-32)+31]
  7450  011860  0008               	tblrd		*
  7451  011862  0EFF               	movlw	-1
  7452  011864  006F FFD7 FFE3     	movff	tablat,plusw1
  7453                           
  7454                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  7455                           ;stkvar	_fmt @ sp[(-32)+-4]
  7456  01186A  0EDC               	movlw	-36
  7457  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7458  011872  0EDD               	movlw	-35
  7459  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
  7460  01187A  2ADE               	incf	postinc2,f,c
  7461  01187C  0E00               	movlw	0
  7462  01187E  22DD               	addwfc	postdec2,f,c
  7463                           
  7464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  7465                           ;stkvar	_ap @ sp[(-32)+-6]
  7466  011880  0EDA               	movlw	-38
  7467  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
  7468  011888  0EDB               	movlw	-37
  7469  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7470  011890  0E04               	movlw	4
  7471  011892  5EDE               	subwf	postinc2,f,c
  7472  011894  0E00               	movlw	0
  7473  011896  5ADD               	subwfb	postdec2,f,c
  7474  011898  006F FF78  F03F    	movff	postinc2,btemp+10
  7475  01189E  006F FF74  F040    	movff	postdec2,btemp+11
  7476  0118A4  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7477  0118AA  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7478  0118B0  006F FF78  F03D    	movff	postinc2,btemp+8
  7479  0118B6  006F FF78  F03E    	movff	postinc2,btemp+9
  7480  0118BC  006F FF78  F03F    	movff	postinc2,btemp+10
  7481  0118C2  006F FF78  F040    	movff	postinc2,btemp+11
  7482                           
  7483                           ;stkvar	_f @ sp[(-32)+22]
  7484  0118C8  0EF6               	movlw	-10
  7485  0118CA  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  7486  0118D0  0EF7               	movlw	-9
  7487  0118D2  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  7488  0118D8  0EF8               	movlw	-8
  7489  0118DA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7490  0118E0  0EF9               	movlw	-7
  7491  0118E2  0060  F103  FFE3   	movff	btemp+11,plusw1
  7492  0118E8                     l9581:
  7493                           
  7494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  7495                           ;stkvar	_c @ sp[(-32)+31]
  7496  0118E8  0EFF               	movlw	-1
  7497  0118EA  50E3               	movf	plusw1,w,c
  7498  0118EC  6EE6               	movwf	postinc1,c
  7499                           
  7500                           ;stkvar	_f @ sp[(-33)+22]
  7501  0118EE  0EF5               	movlw	-11
  7502  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
  7503  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
  7504  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
  7505  011902  006F FF8F FFE6     	movff	plusw1,postinc1
  7506                           
  7507                           ;stkvar	_fp @ sp[(-37)+-2]
  7508  011908  0ED9               	movlw	-39
  7509  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
  7510  011910  006F FF8F FFE6     	movff	plusw1,postinc1
  7511  011916  EC00  F080         	call	_efgtoa	;wreg free
  7512  01191A  D22E               	goto	l1949
  7513  01191C                     l9585:
  7514                           
  7515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  7516  01191C  0E02               	movlw	2
  7517  01191E  6EE6               	movwf	postinc1,c
  7518  011920  0E00               	movlw	0
  7519  011922  6EE6               	movwf	postinc1,c
  7520  011924  0EF6               	movlw	low STR_41
  7521  011926  6EE6               	movwf	postinc1,c
  7522  011928  0EFF               	movlw	high STR_41
  7523  01192A  6EE6               	movwf	postinc1,c
  7524                           
  7525                           ;stkvar	_ct @ sp[(-36)+26]
  7526  01192C  0EF6               	movlw	246
  7527  01192E  24E1               	addwf	fsr1l,w,c
  7528  011930  6E35               	movwf	btemp^0,c
  7529  011932  0EFF               	movlw	255
  7530  011934  20E2               	addwfc	fsr1h,w,c
  7531  011936  6E36               	movwf	(btemp+1)^0,c
  7532  011938  0060  F0D7  FFE6   	movff	btemp,postinc1
  7533  01193E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  7534  011944  EC82  F0AB         	call	_strncmp	;wreg free
  7535  011948  5035               	movf	btemp^0,w,c
  7536  01194A  1036               	iorwf	(btemp+1)^0,w,c
  7537  01194C  A4D8               	btfss	status,2,c
  7538  01194E  D096               	goto	l9605
  7539                           
  7540                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  7541                           ;stkvar	_fmt @ sp[(-32)+-4]
  7542  011950  0EDC               	movlw	-36
  7543  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
  7544  011958  0EDD               	movlw	-35
  7545  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7546  011960  006F FF78  F03F    	movff	postinc2,btemp+10
  7547  011966  006F FF74  F040    	movff	postdec2,btemp+11
  7548  01196C  0E01               	movlw	1
  7549  01196E  263F               	addwf	(btemp+10)^0,f,c
  7550  011970  0E00               	movlw	0
  7551  011972  2240               	addwfc	(btemp+11)^0,f,c
  7552  011974  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  7553  01197A  0060  F103  FFF7   	movff	btemp+11,tblptrh
  7554  011980                     	if	0	;tblptru may be non-zero
  7555  011980                     	endif
  7556  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7557  011980  0E00               	movlw	low (__mediumconst shr (0+16))
  7558  011982  6EF8               	movwf	tblptru,c
  7559  011984                     	endif
  7560                           
  7561                           ;stkvar	_c @ sp[(-32)+31]
  7562  011984  0008               	tblrd		*
  7563  011986  0EFF               	movlw	-1
  7564  011988  006F FFD7 FFE3     	movff	tablat,plusw1
  7565  01198E  0EBF               	movlw	191
  7566  011990  6E3F               	movwf	(btemp+10)^0,c
  7567  011992  0EFF               	movlw	255
  7568  011994  6E40               	movwf	(btemp+11)^0,c
  7569                           
  7570                           ;stkvar	_fmt @ sp[(-32)+-4]
  7571  011996  0EDC               	movlw	-36
  7572  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
  7573  01199E  0EDD               	movlw	-35
  7574  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7575  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
  7576  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
  7577  0119B2                     	if	0	;tblptru may be non-zero
  7578  0119B2                     	endif
  7579  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7580  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
  7581  0119B4  6EF8               	movwf	tblptru,c
  7582  0119B6                     	endif
  7583  0119B6  0008               	tblrd		*
  7584  0119B8  50F5               	movf	tablat,w,c
  7585  0119BA  6E3D               	movwf	(btemp+8)^0,c
  7586  0119BC  6A3E               	clrf	(btemp+9)^0,c
  7587  0119BE  503F               	movf	(btemp+10)^0,w,c
  7588  0119C0  263D               	addwf	(btemp+8)^0,f,c
  7589  0119C2  5040               	movf	(btemp+11)^0,w,c
  7590  0119C4  223E               	addwfc	(btemp+9)^0,f,c
  7591  0119C6  503E               	movf	(btemp+9)^0,w,c
  7592  0119C8  E106               	bnz	u9740
  7593  0119CA  0E1A               	movlw	26
  7594  0119CC  5C3D               	subwf	(btemp+8)^0,w,c
  7595  0119CE  B0D8               	btfsc	status,0,c
  7596  0119D0  D002               	goto	u9740
  7597  0119D2  0E01               	movlw	1
  7598  0119D4  D001               	goto	u9750
  7599  0119D6                     u9740:
  7600  0119D6  0E00               	movlw	0
  7601  0119D8                     u9750:
  7602  0119D8  6E3F               	movwf	(btemp+10)^0,c
  7603  0119DA  6A40               	clrf	(btemp+11)^0,c
  7604                           
  7605                           ;stkvar	_vfpfcnvrt$4123 @ sp[(-32)+2]
  7606  0119DC  0EE2               	movlw	-30
  7607  0119DE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7608  0119E4  0EE3               	movlw	-29
  7609  0119E6  0060  F103  FFE3   	movff	btemp+11,plusw1
  7610                           
  7611                           ;stkvar	_vfpfcnvrt$4123 @ sp[(-32)+2]
  7612  0119EC  0EE2               	movlw	-30
  7613  0119EE  006F FF8C  F035    	movff	plusw1,btemp
  7614  0119F4  0EE3               	movlw	-29
  7615  0119F6  50E3               	movf	plusw1,w,c
  7616  0119F8  1035               	iorwf	btemp^0,w,c
  7617                           
  7618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7619                           ;stkvar	_ap @ sp[(-32)+-6]
  7620                           
  7621                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  7622                           
  7623                           ;stkvar	_f @ sp[(-32)+22]
  7624                           
  7625                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  7626                           ;stkvar	_ap @ sp[(-32)+-6]
  7627  0119FA  0EDA               	movlw	-38
  7628  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7629  011A02  0EDB               	movlw	-37
  7630  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
  7631  011A0A  0E04               	movlw	4
  7632  011A0C  5EDE               	subwf	postinc2,f,c
  7633  011A0E  0E00               	movlw	0
  7634  011A10  5ADD               	subwfb	postdec2,f,c
  7635  011A12  006F FF78  F03F    	movff	postinc2,btemp+10
  7636  011A18  006F FF74  F040    	movff	postdec2,btemp+11
  7637  011A1E  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7638  011A24  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7639  011A2A  006F FF78  F03D    	movff	postinc2,btemp+8
  7640  011A30  006F FF78  F03E    	movff	postinc2,btemp+9
  7641  011A36  006F FF78  F03F    	movff	postinc2,btemp+10
  7642  011A3C  006F FF78  F040    	movff	postinc2,btemp+11
  7643                           
  7644                           ;stkvar	_f @ sp[(-32)+22]
  7645  011A42  0EF6               	movlw	-10
  7646  011A44  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  7647  011A4A  0EF7               	movlw	-9
  7648  011A4C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  7649  011A52  0EF8               	movlw	-8
  7650  011A54  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7651  011A5A  0EF9               	movlw	-7
  7652  011A5C  0060  F103  FFE3   	movff	btemp+11,plusw1
  7653                           
  7654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  7655                           ;stkvar	_fmt @ sp[(-32)+-4]
  7656  011A62  0EDC               	movlw	-36
  7657  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
  7658  011A6A  0EDD               	movlw	-35
  7659  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
  7660  011A72  0E02               	movlw	2
  7661  011A74  26DE               	addwf	postinc2,f,c
  7662  011A76  0E00               	movlw	0
  7663  011A78  22DD               	addwfc	postdec2,f,c
  7664  011A7A  D736               	goto	l9581
  7665  011A7C                     l9605:
  7666                           
  7667                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  7668                           ;stkvar	_fmt @ sp[(-32)+-4]
  7669  011A7C  0EDC               	movlw	-36
  7670  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7671  011A84  0EDD               	movlw	-35
  7672  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
  7673  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7674  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
  7675  011A98                     	if	0	;tblptru may be non-zero
  7676  011A98                     	endif
  7677  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7678  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
  7679  011A9A  6EF8               	movwf	tblptru,c
  7680  011A9C                     	endif
  7681  011A9C  0008               	tblrd		*
  7682  011A9E  50F5               	movf	tablat,w,c
  7683  011AA0  0A73               	xorlw	115
  7684  011AA2  A4D8               	btfss	status,2,c
  7685  011AA4  D042               	goto	l9615
  7686                           
  7687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  7688                           ;stkvar	_fmt @ sp[(-32)+-4]
  7689  011AA6  0EDC               	movlw	-36
  7690  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7691  011AAE  0EDD               	movlw	-35
  7692  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7693  011AB6  2ADE               	incf	postinc2,f,c
  7694  011AB8  0E00               	movlw	0
  7695  011ABA  22DD               	addwfc	postdec2,f,c
  7696                           
  7697                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  7698                           ;stkvar	_ap @ sp[(-32)+-6]
  7699  011ABC  0EDA               	movlw	-38
  7700  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
  7701  011AC4  0EDB               	movlw	-37
  7702  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7703  011ACC  0E02               	movlw	2
  7704  011ACE  5EDE               	subwf	postinc2,f,c
  7705  011AD0  0E00               	movlw	0
  7706  011AD2  5ADD               	subwfb	postdec2,f,c
  7707  011AD4  006F FF78  F03F    	movff	postinc2,btemp+10
  7708  011ADA  006F FF74  F040    	movff	postdec2,btemp+11
  7709  011AE0  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7710  011AE6  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7711  011AEC  006F FF78  F03F    	movff	postinc2,btemp+10
  7712  011AF2  006F FF74  F040    	movff	postdec2,btemp+11
  7713                           
  7714                           ;stkvar	_cp @ sp[(-32)+29]
  7715  011AF8  0EFE               	movlw	-2
  7716  011AFA  0060  F103  FFE3   	movff	btemp+11,plusw1
  7717  011B00  0EFD               	movlw	-3
  7718  011B02  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7719                           
  7720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  7721                           ;stkvar	_cp @ sp[(-32)+29]
  7722  011B08  0EFD               	movlw	-3
  7723  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
  7724  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
  7725                           
  7726                           ;stkvar	_fp @ sp[(-34)+-2]
  7727  011B16  0EDC               	movlw	-36
  7728  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
  7729  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
  7730  011B24  EC7E  F0A4         	call	_stoa	;wreg free
  7731  011B28  D127               	goto	l1949
  7732  011B2A                     l9615:
  7733                           
  7734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  7735                           ;stkvar	_fmt @ sp[(-32)+-4]
  7736  011B2A  0EDC               	movlw	-36
  7737  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7738  011B32  0EDD               	movlw	-35
  7739  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
  7740  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
  7741  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
  7742  011B46                     	if	0	;tblptru may be non-zero
  7743  011B46                     	endif
  7744  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7745  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
  7746  011B48  6EF8               	movwf	tblptru,c
  7747  011B4A                     	endif
  7748  011B4A  0008               	tblrd		*
  7749  011B4C  50F5               	movf	tablat,w,c
  7750  011B4E  0A78               	xorlw	120
  7751  011B50  B4D8               	btfsc	status,2,c
  7752  011B52  D015               	goto	u9790
  7753                           
  7754                           ;stkvar	_fmt @ sp[(-32)+-4]
  7755  011B54  0EDC               	movlw	-36
  7756  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
  7757  011B5C  0EDD               	movlw	-35
  7758  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7759  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
  7760  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  7761  011B70                     	if	0	;tblptru may be non-zero
  7762  011B70                     	endif
  7763  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7764  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
  7765  011B72  6EF8               	movwf	tblptru,c
  7766  011B74                     	endif
  7767  011B74  0008               	tblrd		*
  7768  011B76  50F5               	movf	tablat,w,c
  7769  011B78  0A58               	xorlw	88
  7770  011B7A  A4D8               	btfss	status,2,c
  7771  011B7C  D094               	goto	l9629
  7772  011B7E                     u9790:
  7773                           
  7774                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  7775                           ;stkvar	_fmt @ sp[(-32)+-4]
  7776  011B7E  0EDC               	movlw	-36
  7777  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
  7778  011B86  0EDD               	movlw	-35
  7779  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
  7780  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
  7781  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
  7782  011B9A                     	if	0	;tblptru may be non-zero
  7783  011B9A                     	endif
  7784  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7785  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
  7786  011B9C  6EF8               	movwf	tblptru,c
  7787  011B9E                     	endif
  7788                           
  7789                           ;stkvar	_c @ sp[(-32)+31]
  7790  011B9E  0008               	tblrd		*
  7791  011BA0  0EFF               	movlw	-1
  7792  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
  7793                           
  7794                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  7795                           ;stkvar	_fmt @ sp[(-32)+-4]
  7796  011BA8  0EDC               	movlw	-36
  7797  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7798  011BB0  0EDD               	movlw	-35
  7799  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7800  011BB8  2ADE               	incf	postinc2,f,c
  7801  011BBA  0E00               	movlw	0
  7802  011BBC  22DD               	addwfc	postdec2,f,c
  7803                           
  7804                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  7805                           ;stkvar	_ap @ sp[(-32)+-6]
  7806  011BBE  0EDA               	movlw	-38
  7807  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
  7808  011BC6  0EDB               	movlw	-37
  7809  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
  7810  011BCE  0E02               	movlw	2
  7811  011BD0  5EDE               	subwf	postinc2,f,c
  7812  011BD2  0E00               	movlw	0
  7813  011BD4  5ADD               	subwfb	postdec2,f,c
  7814  011BD6  006F FF78  F03F    	movff	postinc2,btemp+10
  7815  011BDC  006F FF74  F040    	movff	postdec2,btemp+11
  7816  011BE2  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7817  011BE8  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7818  011BEE  006F FF78  F03F    	movff	postinc2,btemp+10
  7819  011BF4  006F FF74  F040    	movff	postdec2,btemp+11
  7820  011BFA  503F               	movf	(btemp+10)^0,w,c
  7821  011BFC  6E45               	movwf	(btemp+16)^0,c
  7822  011BFE  5040               	movf	(btemp+11)^0,w,c
  7823  011C00  6E46               	movwf	(btemp+17)^0,c
  7824  011C02  6A47               	clrf	(btemp+18)^0,c
  7825  011C04  6A48               	clrf	(btemp+19)^0,c
  7826  011C06  6A49               	clrf	(btemp+20)^0,c
  7827  011C08  6A4A               	clrf	(btemp+21)^0,c
  7828  011C0A  6A4B               	clrf	(btemp+22)^0,c
  7829  011C0C  6A4C               	clrf	(btemp+23)^0,c
  7830                           
  7831                           ;stkvar	_llu @ sp[(-32)+6]
  7832  011C0E  0EE6               	movlw	-26
  7833  011C10  0060  F117  FFE3   	movff	btemp+16,plusw1
  7834  011C16  0EE7               	movlw	-25
  7835  011C18  0060  F11B  FFE3   	movff	btemp+17,plusw1
  7836  011C1E  0EE8               	movlw	-24
  7837  011C20  0060  F11F  FFE3   	movff	btemp+18,plusw1
  7838  011C26  0EE9               	movlw	-23
  7839  011C28  0060  F123  FFE3   	movff	btemp+19,plusw1
  7840  011C2E  0EEA               	movlw	-22
  7841  011C30  0060  F127  FFE3   	movff	btemp+20,plusw1
  7842  011C36  0EEB               	movlw	-21
  7843  011C38  0060  F12B  FFE3   	movff	btemp+21,plusw1
  7844  011C3E  0EEC               	movlw	-20
  7845  011C40  0060  F12F  FFE3   	movff	btemp+22,plusw1
  7846  011C46  0EED               	movlw	-19
  7847  011C48  0060  F133  FFE3   	movff	btemp+23,plusw1
  7848                           
  7849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  7850                           ;stkvar	_c @ sp[(-32)+31]
  7851  011C4E  0EFF               	movlw	-1
  7852  011C50  50E3               	movf	plusw1,w,c
  7853  011C52  6EE6               	movwf	postinc1,c
  7854                           
  7855                           ;stkvar	_llu @ sp[(-33)+6]
  7856  011C54  50E1               	movf	fsr1l,w,c
  7857  011C56  0FE5               	addlw	-27
  7858  011C58  6ED9               	movwf	fsr2l,c
  7859  011C5A  50E2               	movf	fsr1h,w,c
  7860  011C5C  6EDA               	movwf	fsr2h,c
  7861  011C5E  0EFF               	movlw	255
  7862  011C60  22DA               	addwfc	fsr2h,f,c
  7863  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  7864  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  7865  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  7866  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
  7867  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  7868  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  7869  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  7870  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  7871                           
  7872                           ;stkvar	_fp @ sp[(-41)+-2]
  7873  011C92  0ED5               	movlw	-43
  7874  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
  7875  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
  7876  011CA0  ECB8  F09D         	call	_xtoa	;wreg free
  7877  011CA4  D069               	goto	l1949
  7878  011CA6                     l9629:
  7879                           
  7880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  7881                           ;stkvar	_fmt @ sp[(-32)+-4]
  7882  011CA6  0EDC               	movlw	-36
  7883  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7884  011CAE  0EDD               	movlw	-35
  7885  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7886  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
  7887  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
  7888  011CC2                     	if	0	;tblptru may be non-zero
  7889  011CC2                     	endif
  7890  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7891  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  7892  011CC4  6EF8               	movwf	tblptru,c
  7893  011CC6                     	endif
  7894  011CC6  0008               	tblrd		*
  7895  011CC8  50F5               	movf	tablat,w,c
  7896  011CCA  0A25               	xorlw	37
  7897  011CCC  A4D8               	btfss	status,2,c
  7898  011CCE  D01A               	goto	l9639
  7899                           
  7900                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  7901                           ;stkvar	_fmt @ sp[(-32)+-4]
  7902  011CD0  0EDC               	movlw	-36
  7903  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
  7904  011CD8  0EDD               	movlw	-35
  7905  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
  7906  011CE0  2ADE               	incf	postinc2,f,c
  7907  011CE2  0E00               	movlw	0
  7908  011CE4  22DD               	addwfc	postdec2,f,c
  7909                           
  7910                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  7911                           ;stkvar	_fp @ sp[(-32)+-2]
  7912  011CE6  0EDE               	movlw	-34
  7913  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
  7914  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
  7915  011CF4  0E25               	movlw	37
  7916  011CF6  6EE6               	movwf	postinc1,c
  7917  011CF8  0E00               	movlw	0
  7918  011CFA  6EE6               	movwf	postinc1,c
  7919  011CFC  ECB9  F0B0         	call	_fputc	;wreg free
  7920  011D00                     l9635:
  7921                           
  7922                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  7923  011D00  0E01               	movlw	1
  7924  011D02  D00C               	goto	L5
  7925  011D04                     l9639:
  7926                           
  7927                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  7928                           ;stkvar	_fmt @ sp[(-32)+-4]
  7929  011D04  0EDC               	movlw	-36
  7930  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
  7931  011D0C  0EDD               	movlw	-35
  7932  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7933  011D14  2ADE               	incf	postinc2,f,c
  7934  011D16  0E00               	movlw	0
  7935  011D18  22DD               	addwfc	postdec2,f,c
  7936                           
  7937                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  7938  011D1A  0E00               	movlw	0
  7939  011D1C                     L5:
  7940  011D1C  6E35               	movwf	btemp^0,c
  7941  011D1E  0E00               	movlw	0
  7942  011D20  6E36               	movwf	(btemp+1)^0,c
  7943  011D22  D02A               	goto	l1949
  7944  011D24                     l9645:
  7945                           
  7946                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  7947                           ;stkvar	_fp @ sp[(-32)+-2]
  7948  011D24  0EDE               	movlw	-34
  7949  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
  7950  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
  7951                           
  7952                           ;stkvar	_fmt @ sp[(-34)+-4]
  7953  011D32  0EDA               	movlw	-38
  7954  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
  7955  011D3A  0EDB               	movlw	-37
  7956  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
  7957  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
  7958  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
  7959  011D4E                     	if	0	;tblptru may be non-zero
  7960  011D4E                     	endif
  7961  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7962  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
  7963  011D50  6EF8               	movwf	tblptru,c
  7964  011D52                     	endif
  7965  011D52  0008               	tblrd		*
  7966  011D54  50F5               	movf	tablat,w,c
  7967  011D56  6EE6               	movwf	postinc1,c
  7968  011D58  0E00               	movlw	0
  7969  011D5A  6EE6               	movwf	postinc1,c
  7970  011D5C  ECB9  F0B0         	call	_fputc	;wreg free
  7971                           
  7972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  7973                           ;stkvar	_fmt @ sp[(-32)+-4]
  7974  011D60  0EDC               	movlw	-36
  7975  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
  7976  011D68  0EDD               	movlw	-35
  7977  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7978  011D70  2ADE               	incf	postinc2,f,c
  7979  011D72  0E00               	movlw	0
  7980  011D74  22DD               	addwfc	postdec2,f,c
  7981  011D76  D7C4               	goto	l9635
  7982  011D78                     l1949:
  7983                           
  7984                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  7985  011D78  0EDA               	movlw	218
  7986  011D7A  26E1               	addwf	fsr1l,f,c
  7987  011D7C  0EFF               	movlw	255
  7988  011D7E  22E2               	addwfc	fsr1h,f,c
  7989  011D80  0012               	return		;funcret
  7990  011D82                     __end_of_vfpfcnvrt:
  7991                           	opt callstack 0
  7992                           
  7993 ;; *************** function _xtoa *****************
  7994 ;; Defined at:
  7995 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7996 ;; Parameters:    Size  Location     Type
  7997 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7998 ;;		 -> f(6), NULL(0), 
  7999 ;;  d               8  [STACK] unsigned long long 
  8000 ;;  x               1  [STACK] unsigned char 
  8001 ;; Auto vars:     Size  Location     Type
  8002 ;;  n               8  [STACK] unsigned long long 
  8003 ;;  c               2  [STACK] int 
  8004 ;;  i               2  [STACK] int 
  8005 ;;  w               2  [STACK] int 
  8006 ;;  p               2  [STACK] int 
  8007 ;; Return value:  Size  Location     Type
  8008 ;;                  2  [STACK] int 
  8009 ;; Registers used:
  8010 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  8011 ;; Tracked objects:
  8012 ;;		On entry : 0/4
  8013 ;;		On exit  : 0/0
  8014 ;;		Unchanged: 0/0
  8015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8020 ;;Total ram usage:        0 bytes
  8021 ;; Hardware stack levels used:    1
  8022 ;; Hardware stack levels required when called:   11
  8023 ;; This function calls:
  8024 ;;		_isalpha
  8025 ;;		_isupper
  8026 ;;		_pad
  8027 ;;		_toupper
  8028 ;; This function is called by:
  8029 ;;		_vfpfcnvrt
  8030 ;; This function uses a reentrant model
  8031 ;;
  8032                           
  8033                           	psect	text35
  8034  013B70                     __ptext35:
  8035                           	opt callstack 0
  8036  013B70                     _xtoa:
  8037                           	opt callstack 0
  8038                           
  8039                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  8040  013B70  0E14               	movlw	20
  8041  013B72  26E1               	addwf	fsr1l,f,c
  8042  013B74  0E00               	movlw	0
  8043  013B76  22E2               	addwfc	fsr1h,f,c
  8044                           
  8045                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  8046                           
  8047                           ;incstack = 0
  8048  013B78  AE21               	btfss	(_prec+1)^0,7,c
  8049                           
  8050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  8051  013B7A  9222               	bcf	_flags^0,1,c
  8052                           
  8053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  8054  013B7C  BE21               	btfsc	(_prec+1)^0,7,c
  8055  013B7E  D005               	goto	u9390
  8056  013B80  5021               	movf	(_prec+1)^0,w,c
  8057  013B82  E110               	bnz	l9427
  8058  013B84  0420               	decf	_prec^0,w,c
  8059  013B86  B0D8               	btfsc	status,0,c
  8060  013B88  D00D               	goto	l9427
  8061  013B8A                     u9390:
  8062  013B8A  0E01               	movlw	1
  8063  013B8C  6E3F               	movwf	(btemp+10)^0,c
  8064  013B8E  0E00               	movlw	0
  8065  013B90  6E40               	movwf	(btemp+11)^0,c
  8066                           
  8067                           ;stkvar	_p @ sp[(-20)+18]
  8068  013B92  0EFE               	movlw	-2
  8069  013B94  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8070  013B9A  0EFF               	movlw	-1
  8071  013B9C  0060  F103  FFE3   	movff	btemp+11,plusw1
  8072  013BA2  D008               	goto	l1899
  8073  013BA4                     l9427:
  8074                           
  8075                           ;stkvar	_p @ sp[(-20)+18]
  8076  013BA4  0EFE               	movlw	-2
  8077  013BA6  0060  F083  FFE3   	movff	_prec,plusw1
  8078  013BAC  0EFF               	movlw	-1
  8079  013BAE  0060  F087  FFE3   	movff	_prec+1,plusw1
  8080  013BB4                     l1899:
  8081                           
  8082                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  8083                           ;stkvar	_w @ sp[(-20)+16]
  8084  013BB4  0EFC               	movlw	-4
  8085  013BB6  0060  F07B  FFE3   	movff	_width,plusw1
  8086  013BBC  0EFD               	movlw	-3
  8087  013BBE  0060  F07F  FFE3   	movff	_width+1,plusw1
  8088                           
  8089                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  8090  013BC4  A822               	btfss	_flags^0,4,c
  8091  013BC6  D00B               	goto	l9433
  8092                           
  8093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  8094                           ;stkvar	_w @ sp[(-20)+16]
  8095  013BC8  50E1               	movf	fsr1l,w,c
  8096  013BCA  0FFC               	addlw	-4
  8097  013BCC  6ED9               	movwf	fsr2l,c
  8098  013BCE  50E2               	movf	fsr1h,w,c
  8099  013BD0  6EDA               	movwf	fsr2h,c
  8100  013BD2  0EFF               	movlw	255
  8101  013BD4  22DA               	addwfc	fsr2h,f,c
  8102  013BD6  0EFE               	movlw	254
  8103  013BD8  26DE               	addwf	postinc2,f,c
  8104  013BDA  0EFF               	movlw	255
  8105  013BDC  22DD               	addwfc	postdec2,f,c
  8106  013BDE                     l9433:
  8107                           
  8108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  8109                           ;stkvar	_d @ sp[(-20)+-10]
  8110  013BDE  0EE2               	movlw	226
  8111  013BE0  24E1               	addwf	fsr1l,w,c
  8112  013BE2  6ED9               	movwf	fsr2l,c
  8113  013BE4  0EFF               	movlw	255
  8114  013BE6  20E2               	addwfc	fsr1h,w,c
  8115  013BE8  6EDA               	movwf	fsr2h,c
  8116                           
  8117                           ;stkvar	_n @ sp[(-20)+4]
  8118  013BEA  0E08               	movlw	8
  8119  013BEC  6E35               	movwf	btemp^0,c
  8120  013BEE  0EF0               	movlw	-16
  8121  013BF0                     us941999:
  8122  013BF0  006F FF7B FFE3     	movff	postinc2,plusw1
  8123  013BF6  28E8               	incf	wreg,w,c
  8124  013BF8  2E35               	decfsz	btemp^0,f,c
  8125  013BFA  D7FA               	bra	us941999
  8126                           
  8127                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  8128  013BFC  0E4F               	movlw	79
  8129  013BFE  6E3F               	movwf	(btemp+10)^0,c
  8130  013C00  0E00               	movlw	0
  8131  013C02  6E40               	movwf	(btemp+11)^0,c
  8132                           
  8133                           ;stkvar	_i @ sp[(-20)+14]
  8134  013C04  0EFA               	movlw	-6
  8135  013C06  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8136  013C0C  0EFB               	movlw	-5
  8137  013C0E  0060  F103  FFE3   	movff	btemp+11,plusw1
  8138                           
  8139                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  8140  013C14  0101               	movlb	1	; () banked
  8141  013C16  6BFA               	clrf	(_dbuf+79)& (0+255),b
  8142                           
  8143                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8144  013C18  D0EE               	goto	l9471
  8145  013C1A                     l9439:
  8146                           
  8147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  8148                           ;stkvar	_i @ sp[(-20)+14]
  8149  013C1A  50E1               	movf	fsr1l,w,c
  8150  013C1C  0FFA               	addlw	-6
  8151  013C1E  6ED9               	movwf	fsr2l,c
  8152  013C20  50E2               	movf	fsr1h,w,c
  8153  013C22  6EDA               	movwf	fsr2h,c
  8154  013C24  0EFF               	movlw	255
  8155  013C26  22DA               	addwfc	fsr2h,f,c
  8156  013C28  06DE               	decf	postinc2,f,c
  8157  013C2A  0E00               	movlw	0
  8158  013C2C  5ADD               	subwfb	postdec2,f,c
  8159                           
  8160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  8161                           ;stkvar	_n @ sp[(-20)+4]
  8162  013C2E  0EF0               	movlw	-16
  8163  013C30  006F FF8C  F03F    	movff	plusw1,btemp+10
  8164  013C36  0EF1               	movlw	-15
  8165  013C38  006F FF8C  F040    	movff	plusw1,btemp+11
  8166  013C3E  0E0F               	movlw	15
  8167  013C40  163F               	andwf	(btemp+10)^0,f,c
  8168  013C42  0E00               	movlw	0
  8169  013C44  1640               	andwf	(btemp+11)^0,f,c
  8170                           
  8171                           ;stkvar	_c @ sp[(-20)+12]
  8172  013C46  0EF8               	movlw	-8
  8173  013C48  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8174  013C4E  0EF9               	movlw	-7
  8175  013C50  0060  F103  FFE3   	movff	btemp+11,plusw1
  8176                           
  8177                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  8178                           ;stkvar	_c @ sp[(-20)+12]
  8179  013C56  0EF9               	movlw	-7
  8180  013C58  BEE3               	btfsc	plusw1,7,c
  8181  013C5A  D00F               	goto	l9447
  8182  013C5C  0EF9               	movlw	-7
  8183  013C5E  50E3               	movf	plusw1,w,c
  8184  013C60  E108               	bnz	u9420
  8185  013C62  0EF8               	movlw	-8
  8186  013C64  006F FF8C  F035    	movff	plusw1,btemp
  8187  013C6A  0E0A               	movlw	10
  8188  013C6C  5E35               	subwf	btemp^0,f,c
  8189  013C6E  A0D8               	btfss	status,0,c
  8190  013C70  D004               	goto	l9447
  8191  013C72                     u9420:
  8192                           
  8193                           ;stkvar	_c @ sp[(-20)+12]
  8194  013C72  0EF8               	movlw	-8
  8195  013C74  50E3               	movf	plusw1,w,c
  8196  013C76  0F57               	addlw	87
  8197  013C78  D003               	goto	L6
  8198  013C7A                     l9447:
  8199                           
  8200                           ;stkvar	_c @ sp[(-20)+12]
  8201  013C7A  0EF8               	movlw	-8
  8202  013C7C  50E3               	movf	plusw1,w,c
  8203  013C7E  0F30               	addlw	48
  8204  013C80                     L6:
  8205  013C80  6E3F               	movwf	(btemp+10)^0,c
  8206  013C82  0EF9               	movlw	-7
  8207  013C84  006F FF8C  F040    	movff	plusw1,btemp+11
  8208  013C8A  0E00               	movlw	0
  8209  013C8C  2240               	addwfc	(btemp+11)^0,f,c
  8210                           
  8211                           ;stkvar	_c @ sp[(-20)+12]
  8212  013C8E  0EF8               	movlw	-8
  8213  013C90  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8214  013C96  0EF9               	movlw	-7
  8215  013C98  0060  F103  FFE3   	movff	btemp+11,plusw1
  8216  013C9E  0EBF               	movlw	191
  8217  013CA0  6E3F               	movwf	(btemp+10)^0,c
  8218  013CA2  0EFF               	movlw	255
  8219  013CA4  6E40               	movwf	(btemp+11)^0,c
  8220                           
  8221                           ;stkvar	_x @ sp[(-20)+-11]
  8222  013CA6  0EE1               	movlw	-31
  8223  013CA8  50E3               	movf	plusw1,w,c
  8224  013CAA  6E3D               	movwf	(btemp+8)^0,c
  8225  013CAC  6A3E               	clrf	(btemp+9)^0,c
  8226  013CAE  503F               	movf	(btemp+10)^0,w,c
  8227  013CB0  263D               	addwf	(btemp+8)^0,f,c
  8228  013CB2  5040               	movf	(btemp+11)^0,w,c
  8229  013CB4  223E               	addwfc	(btemp+9)^0,f,c
  8230  013CB6  503E               	movf	(btemp+9)^0,w,c
  8231  013CB8  E106               	bnz	u9430
  8232  013CBA  0E1A               	movlw	26
  8233  013CBC  5C3D               	subwf	(btemp+8)^0,w,c
  8234  013CBE  B0D8               	btfsc	status,0,c
  8235  013CC0  D002               	goto	u9430
  8236  013CC2  0E01               	movlw	1
  8237  013CC4  D001               	goto	u9440
  8238  013CC6                     u9430:
  8239  013CC6  0E00               	movlw	0
  8240  013CC8                     u9440:
  8241  013CC8  6E3F               	movwf	(btemp+10)^0,c
  8242  013CCA  6A40               	clrf	(btemp+11)^0,c
  8243                           
  8244                           ;stkvar	_xtoa$4101 @ sp[(-20)+2]
  8245  013CCC  0EEE               	movlw	-18
  8246  013CCE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8247  013CD4  0EEF               	movlw	-17
  8248  013CD6  0060  F103  FFE3   	movff	btemp+11,plusw1
  8249                           
  8250                           ;stkvar	_xtoa$4101 @ sp[(-20)+2]
  8251  013CDC  0EEE               	movlw	-18
  8252  013CDE  006F FF8C  F035    	movff	plusw1,btemp
  8253  013CE4  0EEF               	movlw	-17
  8254  013CE6  50E3               	movf	plusw1,w,c
  8255  013CE8  1035               	iorwf	btemp^0,w,c
  8256  013CEA  B4D8               	btfsc	status,2,c
  8257  013CEC  D041               	goto	l9463
  8258  013CEE  0E9F               	movlw	159
  8259  013CF0  6E3F               	movwf	(btemp+10)^0,c
  8260  013CF2  0EFF               	movlw	255
  8261  013CF4  6E40               	movwf	(btemp+11)^0,c
  8262                           
  8263                           ;stkvar	_c @ sp[(-20)+12]
  8264  013CF6  0EF8               	movlw	-8
  8265  013CF8  006F FF8C  F03D    	movff	plusw1,btemp+8
  8266  013CFE  0EF9               	movlw	-7
  8267  013D00  006F FF8C  F03E    	movff	plusw1,btemp+9
  8268  013D06  0E20               	movlw	32
  8269  013D08  123D               	iorwf	(btemp+8)^0,f,c
  8270  013D0A  0E00               	movlw	0
  8271  013D0C  123E               	iorwf	(btemp+9)^0,f,c
  8272  013D0E  503F               	movf	(btemp+10)^0,w,c
  8273  013D10  263D               	addwf	(btemp+8)^0,f,c
  8274  013D12  5040               	movf	(btemp+11)^0,w,c
  8275  013D14  223E               	addwfc	(btemp+9)^0,f,c
  8276  013D16  503E               	movf	(btemp+9)^0,w,c
  8277  013D18  E106               	bnz	u9460
  8278  013D1A  0E1A               	movlw	26
  8279  013D1C  5C3D               	subwf	(btemp+8)^0,w,c
  8280  013D1E  B0D8               	btfsc	status,0,c
  8281  013D20  D002               	goto	u9460
  8282  013D22  0E01               	movlw	1
  8283  013D24  D001               	goto	u9470
  8284  013D26                     u9460:
  8285  013D26  0E00               	movlw	0
  8286  013D28                     u9470:
  8287  013D28  6E3F               	movwf	(btemp+10)^0,c
  8288  013D2A  6A40               	clrf	(btemp+11)^0,c
  8289                           
  8290                           ;stkvar	_xtoa$4102 @ sp[(-20)+0]
  8291  013D2C  0EEC               	movlw	-20
  8292  013D2E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8293  013D34  0EED               	movlw	-19
  8294  013D36  0060  F103  FFE3   	movff	btemp+11,plusw1
  8295                           
  8296                           ;stkvar	_xtoa$4102 @ sp[(-20)+0]
  8297  013D3C  0EEC               	movlw	-20
  8298  013D3E  006F FF8C  F035    	movff	plusw1,btemp
  8299  013D44  0EED               	movlw	-19
  8300  013D46  50E3               	movf	plusw1,w,c
  8301  013D48  1035               	iorwf	btemp^0,w,c
  8302  013D4A  B4D8               	btfsc	status,2,c
  8303  013D4C  D011               	goto	l9463
  8304                           
  8305                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  8306                           ;stkvar	_c @ sp[(-20)+12]
  8307  013D4E  0EF8               	movlw	-8
  8308  013D50  006F FF8F FFE6     	movff	plusw1,postinc1
  8309  013D56  006F FF8F FFE6     	movff	plusw1,postinc1
  8310  013D5C  EC20  F0B8         	call	_toupper	;wreg free
  8311                           
  8312                           ;stkvar	_c @ sp[(-20)+12]
  8313  013D60  0EF8               	movlw	-8
  8314  013D62  0060  F0D7  FFE3   	movff	btemp,plusw1
  8315  013D68  0EF9               	movlw	-7
  8316  013D6A  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  8317  013D70                     l9463:
  8318                           
  8319                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  8320                           ;stkvar	_c @ sp[(-20)+12]
  8321                           ;stkvar	_i @ sp[(-20)+14]
  8322  013D70  0EFA               	movlw	-6
  8323  013D72  006F FF8C  F03F    	movff	plusw1,btemp+10
  8324  013D78  0EFB               	movlw	-5
  8325  013D7A  006F FF8C  F040    	movff	plusw1,btemp+11
  8326  013D80  0EAB               	movlw	low _dbuf
  8327  013D82  243F               	addwf	(btemp+10)^0,w,c
  8328  013D84  6ED9               	movwf	fsr2l,c
  8329  013D86  0E01               	movlw	high _dbuf
  8330  013D88  2040               	addwfc	(btemp+11)^0,w,c
  8331  013D8A  6EDA               	movwf	fsr2h,c
  8332  013D8C  0EF8               	movlw	-8
  8333  013D8E  006F FF8F FFDF     	movff	plusw1,indf2
  8334                           
  8335                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
  8336                           ;stkvar	_p @ sp[(-20)+18]
  8337  013D94  50E1               	movf	fsr1l,w,c
  8338  013D96  0FFE               	addlw	-2
  8339  013D98  6ED9               	movwf	fsr2l,c
  8340  013D9A  50E2               	movf	fsr1h,w,c
  8341  013D9C  6EDA               	movwf	fsr2h,c
  8342  013D9E  0EFF               	movlw	255
  8343  013DA0  22DA               	addwfc	fsr2h,f,c
  8344  013DA2  06DE               	decf	postinc2,f,c
  8345  013DA4  0E00               	movlw	0
  8346  013DA6  5ADD               	subwfb	postdec2,f,c
  8347                           
  8348                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
  8349                           ;stkvar	_w @ sp[(-20)+16]
  8350  013DA8  50E1               	movf	fsr1l,w,c
  8351  013DAA  0FFC               	addlw	-4
  8352  013DAC  6ED9               	movwf	fsr2l,c
  8353  013DAE  50E2               	movf	fsr1h,w,c
  8354  013DB0  6EDA               	movwf	fsr2h,c
  8355  013DB2  0EFF               	movlw	255
  8356  013DB4  22DA               	addwfc	fsr2h,f,c
  8357  013DB6  06DE               	decf	postinc2,f,c
  8358  013DB8  0E00               	movlw	0
  8359  013DBA  5ADD               	subwfb	postdec2,f,c
  8360                           
  8361                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  8362  013DBC  0E04               	movlw	4
  8363  013DBE  6E40               	movwf	(btemp+11)^0,c
  8364                           
  8365                           ;stkvar	_n @ sp[(-20)+4]
  8366  013DC0  50E1               	movf	fsr1l,w,c
  8367  013DC2  0FF0               	addlw	-16
  8368  013DC4  6ED9               	movwf	fsr2l,c
  8369  013DC6  50E2               	movf	fsr1h,w,c
  8370  013DC8  6EDA               	movwf	fsr2h,c
  8371  013DCA  0EFF               	movlw	255
  8372  013DCC  22DA               	addwfc	fsr2h,f,c
  8373  013DCE  2840               	incf	(btemp+11)^0,w,c
  8374  013DD0  52DE               	movf	postinc2,f,c
  8375  013DD2  D00F               	goto	u9490
  8376  013DD4                     u9495:
  8377  013DD4  52DE               	movf	postinc2,f,c
  8378  013DD6  52DE               	movf	postinc2,f,c
  8379  013DD8  52DE               	movf	postinc2,f,c
  8380  013DDA  52DE               	movf	postinc2,f,c
  8381  013DDC  52DE               	movf	postinc2,f,c
  8382  013DDE  52DE               	movf	postinc2,f,c
  8383  013DE0  90D8               	bcf	status,0,c
  8384  013DE2  32DD               	rrcf	postdec2,f,c
  8385  013DE4  32DD               	rrcf	postdec2,f,c
  8386  013DE6  32DD               	rrcf	postdec2,f,c
  8387  013DE8  32DD               	rrcf	postdec2,f,c
  8388  013DEA  32DD               	rrcf	postdec2,f,c
  8389  013DEC  32DD               	rrcf	postdec2,f,c
  8390  013DEE  32DD               	rrcf	postdec2,f,c
  8391  013DF0  32DE               	rrcf	postinc2,f,c
  8392  013DF2                     u9490:
  8393  013DF2  2EE8               	decfsz	wreg,f,c
  8394  013DF4  D7EF               	goto	u9495
  8395  013DF6                     l9471:
  8396                           
  8397                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8398                           ;stkvar	_i @ sp[(-20)+14]
  8399  013DF6  0EFB               	movlw	-5
  8400  013DF8  BEE3               	btfsc	plusw1,7,c
  8401  013DFA  D03A               	goto	u9540
  8402  013DFC  0EFB               	movlw	-5
  8403  013DFE  50E3               	movf	plusw1,w,c
  8404  013E00  E108               	bnz	u9500
  8405  013E02  0EFA               	movlw	-6
  8406  013E04  006F FF8C  F035    	movff	plusw1,btemp
  8407  013E0A  0E02               	movlw	2
  8408  013E0C  5E35               	subwf	btemp^0,f,c
  8409  013E0E  A0D8               	btfss	status,0,c
  8410  013E10  D02F               	goto	u9540
  8411  013E12                     u9500:
  8412                           
  8413                           ;stkvar	_n @ sp[(-20)+4]
  8414  013E12  0EF0               	movlw	-16
  8415  013E14  50E3               	movf	plusw1,w,c
  8416  013E16  E115               	bnz	u9511
  8417  013E18  0EF1               	movlw	-15
  8418  013E1A  50E3               	movf	plusw1,w,c
  8419  013E1C  E112               	bnz	u9511
  8420  013E1E  0EF2               	movlw	-14
  8421  013E20  50E3               	movf	plusw1,w,c
  8422  013E22  E10F               	bnz	u9511
  8423  013E24  0EF3               	movlw	-13
  8424  013E26  50E3               	movf	plusw1,w,c
  8425  013E28  E10C               	bnz	u9511
  8426  013E2A  0EF4               	movlw	-12
  8427  013E2C  50E3               	movf	plusw1,w,c
  8428  013E2E  E109               	bnz	u9511
  8429  013E30  0EF5               	movlw	-11
  8430  013E32  50E3               	movf	plusw1,w,c
  8431  013E34  E106               	bnz	u9511
  8432  013E36  0EF6               	movlw	-10
  8433  013E38  50E3               	movf	plusw1,w,c
  8434  013E3A  E103               	bnz	u9511
  8435  013E3C  0EF7               	movlw	-9
  8436  013E3E  50E3               	movf	plusw1,w,c
  8437  013E40  A4D8               	btfss	status,2,c
  8438  013E42                     u9511:
  8439  013E42  D6EB               	goto	l9439
  8440                           
  8441                           ;stkvar	_p @ sp[(-20)+18]
  8442  013E44  0EFF               	movlw	-1
  8443  013E46  BEE3               	btfsc	plusw1,7,c
  8444  013E48  D007               	goto	u9520
  8445  013E4A  0EFF               	movlw	-1
  8446  013E4C  50E3               	movf	plusw1,w,c
  8447  013E4E  E103               	bnz	u9521
  8448  013E50  0EFE               	movlw	-2
  8449  013E52  04E3               	decf	plusw1,w,c
  8450  013E54  B0D8               	btfsc	status,0,c
  8451  013E56                     u9521:
  8452  013E56  D6E1               	goto	l9439
  8453  013E58                     u9520:
  8454                           
  8455                           ;stkvar	_w @ sp[(-20)+16]
  8456  013E58  0EFD               	movlw	-3
  8457  013E5A  BEE3               	btfsc	plusw1,7,c
  8458  013E5C  D009               	goto	u9540
  8459  013E5E  0EFD               	movlw	-3
  8460  013E60  50E3               	movf	plusw1,w,c
  8461  013E62  E104               	bnz	u9530
  8462  013E64  0EFC               	movlw	-4
  8463  013E66  04E3               	decf	plusw1,w,c
  8464  013E68  A0D8               	btfss	status,0,c
  8465  013E6A  D002               	goto	u9540
  8466  013E6C                     u9530:
  8467  013E6C  B222               	btfsc	_flags^0,1,c
  8468  013E6E  D6D5               	goto	l9439
  8469  013E70                     u9540:
  8470                           
  8471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  8472  013E70  A822               	btfss	_flags^0,4,c
  8473  013E72  D036               	goto	l9487
  8474                           
  8475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
  8476                           ;stkvar	_i @ sp[(-20)+14]
  8477  013E74  50E1               	movf	fsr1l,w,c
  8478  013E76  0FFA               	addlw	-6
  8479  013E78  6ED9               	movwf	fsr2l,c
  8480  013E7A  50E2               	movf	fsr1h,w,c
  8481  013E7C  6EDA               	movwf	fsr2h,c
  8482  013E7E  0EFF               	movlw	255
  8483  013E80  22DA               	addwfc	fsr2h,f,c
  8484  013E82  06DE               	decf	postinc2,f,c
  8485  013E84  0E00               	movlw	0
  8486  013E86  5ADD               	subwfb	postdec2,f,c
  8487                           
  8488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  8489                           ;stkvar	_x @ sp[(-20)+-11]
  8490                           ;stkvar	_i @ sp[(-20)+14]
  8491  013E88  0EFA               	movlw	-6
  8492  013E8A  006F FF8C  F03F    	movff	plusw1,btemp+10
  8493  013E90  0EFB               	movlw	-5
  8494  013E92  006F FF8C  F040    	movff	plusw1,btemp+11
  8495  013E98  0EAB               	movlw	low _dbuf
  8496  013E9A  243F               	addwf	(btemp+10)^0,w,c
  8497  013E9C  6ED9               	movwf	fsr2l,c
  8498  013E9E  0E01               	movlw	high _dbuf
  8499  013EA0  2040               	addwfc	(btemp+11)^0,w,c
  8500  013EA2  6EDA               	movwf	fsr2h,c
  8501  013EA4  0EE1               	movlw	-31
  8502  013EA6  006F FF8F FFDF     	movff	plusw1,indf2
  8503                           
  8504                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
  8505                           ;stkvar	_i @ sp[(-20)+14]
  8506  013EAC  50E1               	movf	fsr1l,w,c
  8507  013EAE  0FFA               	addlw	-6
  8508  013EB0  6ED9               	movwf	fsr2l,c
  8509  013EB2  50E2               	movf	fsr1h,w,c
  8510  013EB4  6EDA               	movwf	fsr2h,c
  8511  013EB6  0EFF               	movlw	255
  8512  013EB8  22DA               	addwfc	fsr2h,f,c
  8513  013EBA  06DE               	decf	postinc2,f,c
  8514  013EBC  0E00               	movlw	0
  8515  013EBE  5ADD               	subwfb	postdec2,f,c
  8516                           
  8517                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  8518                           ;stkvar	_i @ sp[(-20)+14]
  8519  013EC0  0EFA               	movlw	-6
  8520  013EC2  006F FF8C  F03F    	movff	plusw1,btemp+10
  8521  013EC8  0EFB               	movlw	-5
  8522  013ECA  006F FF8C  F040    	movff	plusw1,btemp+11
  8523  013ED0  0EAB               	movlw	low _dbuf
  8524  013ED2  243F               	addwf	(btemp+10)^0,w,c
  8525  013ED4  6ED9               	movwf	fsr2l,c
  8526  013ED6  0E01               	movlw	high _dbuf
  8527  013ED8  2040               	addwfc	(btemp+11)^0,w,c
  8528  013EDA  6EDA               	movwf	fsr2h,c
  8529  013EDC  0E30               	movlw	48
  8530  013EDE  6EDF               	movwf	indf2,c
  8531  013EE0                     l9487:
  8532                           
  8533                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  8534                           ;stkvar	_w @ sp[(-20)+16]
  8535  013EE0  0EFC               	movlw	-4
  8536  013EE2  006F FF8F FFE6     	movff	plusw1,postinc1
  8537  013EE8  006F FF8F FFE6     	movff	plusw1,postinc1
  8538                           
  8539                           ;stkvar	_i @ sp[(-22)+14]
  8540  013EEE  0EAB               	movlw	low _dbuf
  8541  013EF0  6E3F               	movwf	(btemp+10)^0,c
  8542  013EF2  0E01               	movlw	high _dbuf
  8543  013EF4  6E40               	movwf	(btemp+11)^0,c
  8544  013EF6  0EF8               	movlw	-8
  8545  013EF8  50E3               	movf	plusw1,w,c
  8546  013EFA  263F               	addwf	(btemp+10)^0,f,c
  8547  013EFC  0EF9               	movlw	-7
  8548  013EFE  50E3               	movf	plusw1,w,c
  8549  013F00  2240               	addwfc	(btemp+11)^0,f,c
  8550  013F02  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  8551  013F08  0060  F103  FFE6   	movff	btemp+11,postinc1
  8552                           
  8553                           ;stkvar	_fp @ sp[(-24)+-2]
  8554  013F0E  0EE6               	movlw	-26
  8555  013F10  006F FF8F FFE6     	movff	plusw1,postinc1
  8556  013F16  006F FF8F FFE6     	movff	plusw1,postinc1
  8557  013F1C  ECD7  F0B1         	call	_pad	;wreg free
  8558                           
  8559                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
  8560  013F20  0EE1               	movlw	225
  8561  013F22  26E1               	addwf	fsr1l,f,c
  8562  013F24  0EFF               	movlw	255
  8563  013F26  22E2               	addwfc	fsr1h,f,c
  8564  013F28  0012               	return		;funcret
  8565  013F2A                     __end_of_xtoa:
  8566                           	opt callstack 0
  8567                           
  8568 ;; *************** function _toupper *****************
  8569 ;; Defined at:
  8570 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
  8571 ;; Parameters:    Size  Location     Type
  8572 ;;  c               2  [STACK] int 
  8573 ;; Auto vars:     Size  Location     Type
  8574 ;;		None
  8575 ;; Return value:  Size  Location     Type
  8576 ;;                  2  [STACK] int 
  8577 ;; Registers used:
  8578 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
  8579 ;; Tracked objects:
  8580 ;;		On entry : 0/1
  8581 ;;		On exit  : 0/0
  8582 ;;		Unchanged: 0/0
  8583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8588 ;;Total ram usage:        0 bytes
  8589 ;; Hardware stack levels used:    1
  8590 ;; Hardware stack levels required when called:    7
  8591 ;; This function calls:
  8592 ;;		_islower
  8593 ;; This function is called by:
  8594 ;;		_xtoa
  8595 ;; This function uses a reentrant model
  8596 ;;
  8597                           
  8598                           	psect	text36
  8599  017040                     __ptext36:
  8600                           	opt callstack 0
  8601  017040                     _toupper:
  8602                           	opt callstack 0
  8603                           
  8604                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8605  017040  52E6               	movf	postinc1,f,c
  8606  017042  52E6               	movf	postinc1,f,c
  8607                           
  8608                           ;stkvar	_c @ sp[(-2)+-2]
  8609                           
  8610                           ;incstack = 0
  8611  017044  0EFC               	movlw	-4
  8612  017046  50E3               	movf	plusw1,w,c
  8613  017048  0F9F               	addlw	159
  8614  01704A  6E3F               	movwf	(btemp+10)^0,c
  8615  01704C  0EFD               	movlw	-3
  8616  01704E  006F FF8C  F040    	movff	plusw1,btemp+11
  8617  017054  0EFF               	movlw	255
  8618  017056  2240               	addwfc	(btemp+11)^0,f,c
  8619  017058  5040               	movf	(btemp+11)^0,w,c
  8620  01705A  E106               	bnz	u5100
  8621  01705C  0E1A               	movlw	26
  8622  01705E  5C3F               	subwf	(btemp+10)^0,w,c
  8623  017060  B0D8               	btfsc	status,0,c
  8624  017062  D002               	goto	u5100
  8625  017064  0E01               	movlw	1
  8626  017066  D001               	goto	u5110
  8627  017068                     u5100:
  8628  017068  0E00               	movlw	0
  8629  01706A                     u5110:
  8630  01706A  6E3F               	movwf	(btemp+10)^0,c
  8631  01706C  6A40               	clrf	(btemp+11)^0,c
  8632                           
  8633                           ;stkvar	_toupper$4762 @ sp[(-2)+0]
  8634  01706E  0EFE               	movlw	-2
  8635  017070  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8636  017076  0EFF               	movlw	-1
  8637  017078  0060  F103  FFE3   	movff	btemp+11,plusw1
  8638                           
  8639                           ;stkvar	_toupper$4762 @ sp[(-2)+0]
  8640  01707E  0EFE               	movlw	-2
  8641  017080  006F FF8C  F035    	movff	plusw1,btemp
  8642  017086  0EFF               	movlw	-1
  8643  017088  50E3               	movf	plusw1,w,c
  8644  01708A  1035               	iorwf	btemp^0,w,c
  8645  01708C  B4D8               	btfsc	status,2,c
  8646  01708E  D00D               	goto	l6305
  8647                           
  8648                           ;stkvar	_c @ sp[(-2)+-2]
  8649  017090  0EFC               	movlw	-4
  8650  017092  006F FF8C  F035    	movff	plusw1,btemp
  8651  017098  0EFD               	movlw	-3
  8652  01709A  006F FF8C  F036    	movff	plusw1,btemp+1
  8653  0170A0  0E5F               	movlw	95
  8654  0170A2  1635               	andwf	btemp^0,f,c
  8655  0170A4  0E00               	movlw	0
  8656  0170A6  1636               	andwf	(btemp+1)^0,f,c
  8657  0170A8  D008               	goto	l2832
  8658  0170AA                     l6305:
  8659                           
  8660                           ;stkvar	_c @ sp[(-2)+-2]
  8661  0170AA  0EFC               	movlw	-4
  8662  0170AC  006F FF8C  F035    	movff	plusw1,btemp
  8663  0170B2  0EFD               	movlw	-3
  8664  0170B4  006F FF8C  F036    	movff	plusw1,btemp+1
  8665  0170BA                     l2832:
  8666                           
  8667                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  8668  0170BA  52E5               	movf	postdec1,f,c
  8669  0170BC  52E5               	movf	postdec1,f,c
  8670  0170BE  52E5               	movf	postdec1,f,c
  8671  0170C0  52E5               	movf	postdec1,f,c
  8672  0170C2  0012               	return		;funcret
  8673  0170C4                     __end_of_toupper:
  8674                           	opt callstack 0
  8675                           
  8676 ;; *************** function _islower *****************
  8677 ;; Defined at:
  8678 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
  8679 ;; Parameters:    Size  Location     Type
  8680 ;;  c               2  [STACK] int 
  8681 ;; Auto vars:     Size  Location     Type
  8682 ;;		None
  8683 ;; Return value:  Size  Location     Type
  8684 ;;                  2  [STACK] int 
  8685 ;; Registers used:
  8686 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  8687 ;; Tracked objects:
  8688 ;;		On entry : 0/0
  8689 ;;		On exit  : 0/0
  8690 ;;		Unchanged: 0/0
  8691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8696 ;;Total ram usage:        0 bytes
  8697 ;; Hardware stack levels used:    1
  8698 ;; Hardware stack levels required when called:    6
  8699 ;; This function calls:
  8700 ;;		Nothing
  8701 ;; This function is called by:
  8702 ;;		_toupper
  8703 ;; This function uses a reentrant model
  8704 ;;
  8705                           
  8706                           	psect	text37
  8707  017B30                     __ptext37:
  8708                           	opt callstack 0
  8709  017B30                     _islower:
  8710                           	opt callstack 16
  8711                           
  8712                           ;stkvar	_c @ sp[(0)+-2]
  8713                           
  8714                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8715                           ;incstack = 0
  8716  017B30  0EFE               	movlw	-2
  8717  017B32  50E3               	movf	plusw1,w,c
  8718  017B34  0F9F               	addlw	159
  8719  017B36  6E3F               	movwf	(btemp+10)^0,c
  8720  017B38  0EFF               	movlw	-1
  8721  017B3A  006F FF8C  F040    	movff	plusw1,btemp+11
  8722  017B40  0EFF               	movlw	255
  8723  017B42  2240               	addwfc	(btemp+11)^0,f,c
  8724  017B44  5040               	movf	(btemp+11)^0,w,c
  8725  017B46  E106               	bnz	u4790
  8726  017B48  0E1A               	movlw	26
  8727  017B4A  5C3F               	subwf	(btemp+10)^0,w,c
  8728  017B4C  B0D8               	btfsc	status,0,c
  8729  017B4E  D002               	goto	u4790
  8730  017B50  0E01               	movlw	1
  8731  017B52  D001               	goto	u4800
  8732  017B54                     u4790:
  8733  017B54  0E00               	movlw	0
  8734  017B56                     u4800:
  8735  017B56  6E35               	movwf	btemp^0,c
  8736  017B58  6A36               	clrf	(btemp+1)^0,c
  8737                           
  8738                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  8739  017B5A  52E5               	movf	postdec1,f,c
  8740  017B5C  52E5               	movf	postdec1,f,c
  8741  017B5E  0012               	return		;funcret
  8742  017B60                     __end_of_islower:
  8743                           	opt callstack 0
  8744                           
  8745 ;; *************** function _isalpha *****************
  8746 ;; Defined at:
  8747 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
  8748 ;; Parameters:    Size  Location     Type
  8749 ;;  c               2  [STACK] int 
  8750 ;; Auto vars:     Size  Location     Type
  8751 ;;		None
  8752 ;; Return value:  Size  Location     Type
  8753 ;;                  2  [STACK] int 
  8754 ;; Registers used:
  8755 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  8756 ;; Tracked objects:
  8757 ;;		On entry : 0/0
  8758 ;;		On exit  : 0/0
  8759 ;;		Unchanged: 0/0
  8760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8765 ;;Total ram usage:        0 bytes
  8766 ;; Hardware stack levels used:    1
  8767 ;; Hardware stack levels required when called:    6
  8768 ;; This function calls:
  8769 ;;		Nothing
  8770 ;; This function is called by:
  8771 ;;		_xtoa
  8772 ;; This function uses a reentrant model
  8773 ;;
  8774                           
  8775                           	psect	text38
  8776  0178A6                     __ptext38:
  8777                           	opt callstack 0
  8778  0178A6                     _isalpha:
  8779                           	opt callstack 17
  8780                           
  8781                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8782                           ;incstack = 0
  8783  0178A6  0E9F               	movlw	159
  8784  0178A8  6E3F               	movwf	(btemp+10)^0,c
  8785  0178AA  0EFF               	movlw	255
  8786  0178AC  6E40               	movwf	(btemp+11)^0,c
  8787                           
  8788                           ;stkvar	_c @ sp[(0)+-2]
  8789  0178AE  0EFE               	movlw	-2
  8790  0178B0  006F FF8C  F03D    	movff	plusw1,btemp+8
  8791  0178B6  0EFF               	movlw	-1
  8792  0178B8  006F FF8C  F03E    	movff	plusw1,btemp+9
  8793  0178BE  0E20               	movlw	32
  8794  0178C0  123D               	iorwf	(btemp+8)^0,f,c
  8795  0178C2  0E00               	movlw	0
  8796  0178C4  123E               	iorwf	(btemp+9)^0,f,c
  8797  0178C6  503F               	movf	(btemp+10)^0,w,c
  8798  0178C8  263D               	addwf	(btemp+8)^0,f,c
  8799  0178CA  5040               	movf	(btemp+11)^0,w,c
  8800  0178CC  223E               	addwfc	(btemp+9)^0,f,c
  8801  0178CE  503E               	movf	(btemp+9)^0,w,c
  8802  0178D0  E106               	bnz	u5080
  8803  0178D2  0E1A               	movlw	26
  8804  0178D4  5C3D               	subwf	(btemp+8)^0,w,c
  8805  0178D6  B0D8               	btfsc	status,0,c
  8806  0178D8  D002               	goto	u5080
  8807  0178DA  0E01               	movlw	1
  8808  0178DC  D001               	goto	u5090
  8809  0178DE                     u5080:
  8810  0178DE  0E00               	movlw	0
  8811  0178E0                     u5090:
  8812  0178E0  6E35               	movwf	btemp^0,c
  8813  0178E2  6A36               	clrf	(btemp+1)^0,c
  8814                           
  8815                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  8816  0178E4  52E5               	movf	postdec1,f,c
  8817  0178E6  52E5               	movf	postdec1,f,c
  8818  0178E8  0012               	return		;funcret
  8819  0178EA                     __end_of_isalpha:
  8820                           	opt callstack 0
  8821                           
  8822 ;; *************** function _strncmp *****************
  8823 ;; Defined at:
  8824 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
  8825 ;; Parameters:    Size  Location     Type
  8826 ;;  _l              2  [STACK] PTR const unsigned char 
  8827 ;;		 -> ct(3), 
  8828 ;;  _r              2  [STACK] PTR const unsigned char 
  8829 ;;		 -> STR_43(3), 
  8830 ;;  n               2  [STACK] unsigned int 
  8831 ;; Auto vars:     Size  Location     Type
  8832 ;;  r               2  [STACK] PTR const unsigned char 
  8833 ;;		 -> STR_43(3), 
  8834 ;;  l               2  [STACK] PTR const unsigned char 
  8835 ;;		 -> ct(3), 
  8836 ;; Return value:  Size  Location     Type
  8837 ;;                  2  [STACK] int 
  8838 ;; Registers used:
  8839 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
  8840 ;; Tracked objects:
  8841 ;;		On entry : 0/4
  8842 ;;		On exit  : 0/0
  8843 ;;		Unchanged: 0/0
  8844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8849 ;;Total ram usage:        0 bytes
  8850 ;; Hardware stack levels used:    1
  8851 ;; Hardware stack levels required when called:    6
  8852 ;; This function calls:
  8853 ;;		Nothing
  8854 ;; This function is called by:
  8855 ;;		_vfpfcnvrt
  8856 ;; This function uses a reentrant model
  8857 ;;
  8858                           
  8859                           	psect	text39
  8860  015704                     __ptext39:
  8861                           	opt callstack 0
  8862  015704                     _strncmp:
  8863                           	opt callstack 0
  8864                           
  8865                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8866  015704  52E6               	movf	postinc1,f,c
  8867  015706  52E6               	movf	postinc1,f,c
  8868  015708  52E6               	movf	postinc1,f,c
  8869  01570A  52E6               	movf	postinc1,f,c
  8870                           
  8871                           ;stkvar	__l @ sp[(-4)+-2]
  8872                           
  8873                           ;incstack = 0
  8874  01570C  0EFA               	movlw	-6
  8875  01570E  006F FF8C  F03F    	movff	plusw1,btemp+10
  8876  015714  0EFB               	movlw	-5
  8877  015716  006F FF8C  F040    	movff	plusw1,btemp+11
  8878                           
  8879                           ;stkvar	_l @ sp[(-4)+2]
  8880  01571C  0EFF               	movlw	-1
  8881  01571E  0060  F103  FFE3   	movff	btemp+11,plusw1
  8882  015724  0EFE               	movlw	-2
  8883  015726  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8884                           
  8885                           ;stkvar	__r @ sp[(-4)+-4]
  8886  01572C  0EF8               	movlw	-8
  8887  01572E  006F FF8C  F03F    	movff	plusw1,btemp+10
  8888  015734  0EF9               	movlw	-7
  8889  015736  006F FF8C  F040    	movff	plusw1,btemp+11
  8890                           
  8891                           ;stkvar	_r @ sp[(-4)+0]
  8892  01573C  0EFD               	movlw	-3
  8893  01573E  0060  F103  FFE3   	movff	btemp+11,plusw1
  8894  015744  0EFC               	movlw	-4
  8895  015746  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8896                           
  8897                           ;stkvar	_n @ sp[(-4)+-6]
  8898  01574C  0EF6               	movlw	-10
  8899  01574E  006F FF8C  F035    	movff	plusw1,btemp
  8900  015754  0E01               	movlw	1
  8901  015756  5E35               	subwf	btemp^0,f,c
  8902  015758  0EF6               	movlw	-10
  8903  01575A  0060  F0D7  FFE3   	movff	btemp,plusw1
  8904  015760  0EF7               	movlw	-9
  8905  015762  006F FF8C  F035    	movff	plusw1,btemp
  8906  015768  0E00               	movlw	0
  8907  01576A  5A35               	subwfb	btemp^0,f,c
  8908  01576C  0EF7               	movlw	-9
  8909  01576E  0060  F0D7  FFE3   	movff	btemp,plusw1
  8910  015774  0EF6               	movlw	-10
  8911  015776  28E3               	incf	plusw1,w,c
  8912  015778  E13F               	bnz	l7463
  8913  01577A  0EF7               	movlw	-9
  8914  01577C  28E3               	incf	plusw1,w,c
  8915  01577E  A4D8               	btfss	status,2,c
  8916  015780  D03B               	goto	l7463
  8917  015782  0E00               	movlw	0
  8918  015784  6E35               	movwf	btemp^0,c
  8919  015786  0E00               	movlw	0
  8920  015788  6E36               	movwf	(btemp+1)^0,c
  8921  01578A  D09B               	goto	l2804
  8922  01578C                     l7461:
  8923                           
  8924                           ;stkvar	_l @ sp[(-4)+2]
  8925  01578C  0EFE               	movlw	-2
  8926  01578E  50E3               	movf	plusw1,w,c
  8927  015790  0F01               	addlw	1
  8928  015792  6E35               	movwf	btemp^0,c
  8929  015794  0EFE               	movlw	-2
  8930  015796  0060  F0D7  FFE3   	movff	btemp,plusw1
  8931  01579C  6A35               	clrf	btemp^0,c
  8932  01579E  0EFF               	movlw	-1
  8933  0157A0  50E3               	movf	plusw1,w,c
  8934  0157A2  2035               	addwfc	btemp^0,w,c
  8935  0157A4  6E35               	movwf	btemp^0,c
  8936  0157A6  0EFF               	movlw	-1
  8937  0157A8  0060  F0D7  FFE3   	movff	btemp,plusw1
  8938                           
  8939                           ;stkvar	_r @ sp[(-4)+0]
  8940  0157AE  0EFC               	movlw	-4
  8941  0157B0  50E3               	movf	plusw1,w,c
  8942  0157B2  0F01               	addlw	1
  8943  0157B4  6E35               	movwf	btemp^0,c
  8944  0157B6  0EFC               	movlw	-4
  8945  0157B8  0060  F0D7  FFE3   	movff	btemp,plusw1
  8946  0157BE  6A35               	clrf	btemp^0,c
  8947  0157C0  0EFD               	movlw	-3
  8948  0157C2  50E3               	movf	plusw1,w,c
  8949  0157C4  2035               	addwfc	btemp^0,w,c
  8950  0157C6  6E35               	movwf	btemp^0,c
  8951  0157C8  0EFD               	movlw	-3
  8952  0157CA  0060  F0D7  FFE3   	movff	btemp,plusw1
  8953                           
  8954                           ;stkvar	_n @ sp[(-4)+-6]
  8955  0157D0  0EF6               	movlw	-10
  8956  0157D2  006F FF8C  F035    	movff	plusw1,btemp
  8957  0157D8  0E01               	movlw	1
  8958  0157DA  5E35               	subwf	btemp^0,f,c
  8959  0157DC  0EF6               	movlw	-10
  8960  0157DE  0060  F0D7  FFE3   	movff	btemp,plusw1
  8961  0157E4  0EF7               	movlw	-9
  8962  0157E6  006F FF8C  F035    	movff	plusw1,btemp
  8963  0157EC  0E00               	movlw	0
  8964  0157EE  5A35               	subwfb	btemp^0,f,c
  8965  0157F0  0EF7               	movlw	-9
  8966  0157F2  0060  F0D7  FFE3   	movff	btemp,plusw1
  8967  0157F8                     l7463:
  8968                           
  8969                           ;stkvar	_l @ sp[(-4)+2]
  8970  0157F8  0EFE               	movlw	-2
  8971  0157FA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8972  015800  0EFF               	movlw	-1
  8973  015802  006F FF8F FFDA     	movff	plusw1,fsr2h
  8974  015808  50DF               	movf	indf2,w,c
  8975  01580A  B4D8               	btfsc	status,2,c
  8976  01580C  D03B               	goto	u7280
  8977                           
  8978                           ;stkvar	_r @ sp[(-4)+0]
  8979  01580E  50E1               	movf	fsr1l,w,c
  8980  015810  0FFC               	addlw	-4
  8981  015812  6ED9               	movwf	fsr2l,c
  8982  015814  50E2               	movf	fsr1h,w,c
  8983  015816  6EDA               	movwf	fsr2h,c
  8984  015818  0EFF               	movlw	255
  8985  01581A  22DA               	addwfc	fsr2h,f,c
  8986  01581C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8987  015822  006F FF77 FFF7     	movff	postdec2,tblptrh
  8988  015828                     	if	0	;tblptru may be non-zero
  8989  015828                     	endif
  8990  015828                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8991  015828  0E00               	movlw	low (__mediumconst shr (0+16))
  8992  01582A  6EF8               	movwf	tblptru,c
  8993  01582C                     	endif
  8994  01582C  0008               	tblrd		*
  8995  01582E  50F5               	movf	tablat,w,c
  8996  015830  0900               	iorlw	0
  8997  015832  B4D8               	btfsc	status,2,c
  8998  015834  D027               	goto	u7280
  8999                           
  9000                           ;stkvar	_n @ sp[(-4)+-6]
  9001  015836  0EF6               	movlw	-10
  9002  015838  006F FF8C  F035    	movff	plusw1,btemp
  9003  01583E  0EF7               	movlw	-9
  9004  015840  50E3               	movf	plusw1,w,c
  9005  015842  1035               	iorwf	btemp^0,w,c
  9006  015844  B4D8               	btfsc	status,2,c
  9007  015846  D01E               	goto	u7280
  9008                           
  9009                           ;stkvar	_l @ sp[(-4)+2]
  9010  015848  0EFE               	movlw	-2
  9011  01584A  006F FF8F FFD9     	movff	plusw1,fsr2l
  9012  015850  0EFF               	movlw	-1
  9013  015852  006F FF8F FFDA     	movff	plusw1,fsr2h
  9014  015858  50DF               	movf	indf2,w,c
  9015  01585A  6E40               	movwf	(btemp+11)^0,c
  9016                           
  9017                           ;stkvar	_r @ sp[(-4)+0]
  9018  01585C  50E1               	movf	fsr1l,w,c
  9019  01585E  0FFC               	addlw	-4
  9020  015860  6ED9               	movwf	fsr2l,c
  9021  015862  50E2               	movf	fsr1h,w,c
  9022  015864  6EDA               	movwf	fsr2h,c
  9023  015866  0EFF               	movlw	255
  9024  015868  22DA               	addwfc	fsr2h,f,c
  9025  01586A  006F FF7B FFF6     	movff	postinc2,tblptrl
  9026  015870  006F FF77 FFF7     	movff	postdec2,tblptrh
  9027  015876                     	if	0	;tblptru may be non-zero
  9028  015876                     	endif
  9029  015876                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9030  015876  0E00               	movlw	low (__mediumconst shr (0+16))
  9031  015878  6EF8               	movwf	tblptru,c
  9032  01587A                     	endif
  9033  01587A  0008               	tblrd		*
  9034  01587C  50F5               	movf	tablat,w,c
  9035  01587E  1840               	xorwf	(btemp+11)^0,w,c
  9036  015880  B4D8               	btfsc	status,2,c
  9037  015882  D784               	goto	l7461
  9038  015884                     u7280:
  9039                           
  9040                           ;stkvar	_l @ sp[(-4)+2]
  9041  015884  0EFE               	movlw	-2
  9042  015886  006F FF8F FFD9     	movff	plusw1,fsr2l
  9043  01588C  0EFF               	movlw	-1
  9044  01588E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9045  015894  50DF               	movf	indf2,w,c
  9046  015896  6E35               	movwf	btemp^0,c
  9047  015898  6A36               	clrf	(btemp+1)^0,c
  9048                           
  9049                           ;stkvar	_r @ sp[(-4)+0]
  9050  01589A  50E1               	movf	fsr1l,w,c
  9051  01589C  0FFC               	addlw	-4
  9052  01589E  6ED9               	movwf	fsr2l,c
  9053  0158A0  50E2               	movf	fsr1h,w,c
  9054  0158A2  6EDA               	movwf	fsr2h,c
  9055  0158A4  0EFF               	movlw	255
  9056  0158A6  22DA               	addwfc	fsr2h,f,c
  9057  0158A8  006F FF7B FFF6     	movff	postinc2,tblptrl
  9058  0158AE  006F FF77 FFF7     	movff	postdec2,tblptrh
  9059  0158B4                     	if	0	;tblptru may be non-zero
  9060  0158B4                     	endif
  9061  0158B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9062  0158B4  0E00               	movlw	low (__mediumconst shr (0+16))
  9063  0158B6  6EF8               	movwf	tblptru,c
  9064  0158B8                     	endif
  9065  0158B8  0008               	tblrd		*
  9066  0158BA  50F5               	movf	tablat,w,c
  9067  0158BC  5E35               	subwf	btemp^0,f,c
  9068  0158BE  0E00               	movlw	0
  9069  0158C0  5A36               	subwfb	(btemp+1)^0,f,c
  9070  0158C2                     l2804:
  9071                           
  9072                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
  9073  0158C2  0EF6               	movlw	246
  9074  0158C4  26E1               	addwf	fsr1l,f,c
  9075  0158C6  0EFF               	movlw	255
  9076  0158C8  22E2               	addwfc	fsr1h,f,c
  9077  0158CA  0012               	return		;funcret
  9078  0158CC                     __end_of_strncmp:
  9079                           	opt callstack 0
  9080                           
  9081 ;; *************** function _stoa *****************
  9082 ;; Defined at:
  9083 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9084 ;; Parameters:    Size  Location     Type
  9085 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9086 ;;		 -> f(6), NULL(0), 
  9087 ;;  s               2  [STACK] PTR unsigned char 
  9088 ;;		 -> ?_printf(2), ?_sprintf(2), STR_15(9), STR_14(12), 
  9089 ;;		 -> D.lcd(216), D(218), T(144), STR_7(4), 
  9090 ;;		 -> STR_3(4), V(171), 
  9091 ;; Auto vars:     Size  Location     Type
  9092 ;;  nuls            7  [STACK] unsigned char [7]
  9093 ;;  l               2  [STACK] int 
  9094 ;;  p               2  [STACK] int 
  9095 ;;  cp              2  [STACK] PTR unsigned char 
  9096 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_15(9), 
  9097 ;;		 -> STR_14(12), D.lcd(216), D(218), T(144), 
  9098 ;;		 -> STR_7(4), STR_3(4), V(171), 
  9099 ;;  w               2  [STACK] int 
  9100 ;;  i               2  [STACK] int 
  9101 ;; Return value:  Size  Location     Type
  9102 ;;                  2  [STACK] int 
  9103 ;; Registers used:
  9104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9105 ;; Tracked objects:
  9106 ;;		On entry : 0/4
  9107 ;;		On exit  : 0/0
  9108 ;;		Unchanged: 0/0
  9109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9114 ;;Total ram usage:        0 bytes
  9115 ;; Hardware stack levels used:    1
  9116 ;; Hardware stack levels required when called:    9
  9117 ;; This function calls:
  9118 ;;		_fputc
  9119 ;;		_strlen
  9120 ;; This function is called by:
  9121 ;;		_vfpfcnvrt
  9122 ;; This function uses a reentrant model
  9123 ;;
  9124                           
  9125                           	psect	text40
  9126  0148FC                     __ptext40:
  9127                           	opt callstack 0
  9128  0148FC                     _stoa:
  9129                           	opt callstack 0
  9130                           
  9131                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9132  0148FC  0E11               	movlw	17
  9133  0148FE  26E1               	addwf	fsr1l,f,c
  9134  014900  0E00               	movlw	0
  9135  014902  22E2               	addwfc	fsr1h,f,c
  9136                           
  9137                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  9138                           
  9139                           ;incstack = 0
  9140  014904  EE20  F08C         	lfsr	2,stoa@F1166
  9141                           
  9142                           ;stkvar	_nuls @ sp[(-17)+0]
  9143  014908  0E07               	movlw	7
  9144  01490A  6E35               	movwf	btemp^0,c
  9145  01490C  0EEF               	movlw	-17
  9146  01490E                     us928999:
  9147  01490E  006F FF7B FFE3     	movff	postinc2,plusw1
  9148  014914  28E8               	incf	wreg,w,c
  9149  014916  2E35               	decfsz	btemp^0,f,c
  9150  014918  D7FA               	bra	us928999
  9151                           
  9152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  9153                           ;stkvar	_s @ sp[(-17)+-4]
  9154  01491A  0EEB               	movlw	-21
  9155  01491C  006F FF8C  F03F    	movff	plusw1,btemp+10
  9156  014922  0EEC               	movlw	-20
  9157  014924  006F FF8C  F040    	movff	plusw1,btemp+11
  9158                           
  9159                           ;stkvar	_cp @ sp[(-17)+11]
  9160  01492A  0EFB               	movlw	-5
  9161  01492C  0060  F103  FFE3   	movff	btemp+11,plusw1
  9162  014932  0EFA               	movlw	-6
  9163  014934  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9164                           
  9165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  9166                           ;stkvar	_cp @ sp[(-17)+11]
  9167  01493A  0EFA               	movlw	-6
  9168  01493C  006F FF8C  F035    	movff	plusw1,btemp
  9169  014942  0EFB               	movlw	-5
  9170  014944  50E3               	movf	plusw1,w,c
  9171  014946  1035               	iorwf	btemp^0,w,c
  9172  014948  A4D8               	btfss	status,2,c
  9173  01494A  D00E               	goto	l9375
  9174                           
  9175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  9176                           ;stkvar	_nuls @ sp[(-17)+0]
  9177  01494C  0EEF               	movlw	239
  9178  01494E  24E1               	addwf	fsr1l,w,c
  9179  014950  6E3F               	movwf	(btemp+10)^0,c
  9180  014952  0EFF               	movlw	255
  9181  014954  20E2               	addwfc	fsr1h,w,c
  9182  014956  6E40               	movwf	(btemp+11)^0,c
  9183                           
  9184                           ;stkvar	_cp @ sp[(-17)+11]
  9185  014958  0EFB               	movlw	-5
  9186  01495A  0060  F103  FFE3   	movff	btemp+11,plusw1
  9187  014960  0EFA               	movlw	-6
  9188  014962  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9189  014968                     l9375:
  9190                           
  9191                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  9192                           ;stkvar	_cp @ sp[(-17)+11]
  9193  014968  0EFA               	movlw	-6
  9194  01496A  006F FF8F FFE6     	movff	plusw1,postinc1
  9195  014970  006F FF8F FFE6     	movff	plusw1,postinc1
  9196  014976  EC63  F0B6         	call	_strlen	;wreg free
  9197                           
  9198                           ;stkvar	_l @ sp[(-17)+7]
  9199  01497A  0EF6               	movlw	-10
  9200  01497C  0060  F0D7  FFE3   	movff	btemp,plusw1
  9201  014982  0EF7               	movlw	-9
  9202  014984  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  9203                           
  9204                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  9205                           ;stkvar	_p @ sp[(-17)+9]
  9206  01498A  0EF8               	movlw	-8
  9207  01498C  0060  F083  FFE3   	movff	_prec,plusw1
  9208  014992  0EF9               	movlw	-7
  9209  014994  0060  F087  FFE3   	movff	_prec+1,plusw1
  9210                           
  9211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  9212                           ;stkvar	_p @ sp[(-17)+9]
  9213  01499A  0EF9               	movlw	-7
  9214  01499C  BEE3               	btfsc	plusw1,7,c
  9215  01499E  D023               	goto	l1878
  9216                           
  9217                           ;stkvar	_l @ sp[(-17)+7]
  9218                           ;stkvar	_p @ sp[(-17)+9]
  9219  0149A0  50E1               	movf	fsr1l,w,c
  9220  0149A2  0FF8               	addlw	-8
  9221  0149A4  6ED9               	movwf	fsr2l,c
  9222  0149A6  50E2               	movf	fsr1h,w,c
  9223  0149A8  6EDA               	movwf	fsr2h,c
  9224  0149AA  0EFF               	movlw	255
  9225  0149AC  22DA               	addwfc	fsr2h,f,c
  9226  0149AE  0EF6               	movlw	-10
  9227  0149B0  50E3               	movf	plusw1,w,c
  9228  0149B2  5CDE               	subwf	postinc2,w,c
  9229  0149B4  50DE               	movf	postinc2,w,c
  9230  0149B6  0A80               	xorlw	128
  9231  0149B8  6E35               	movwf	btemp^0,c
  9232  0149BA  0EF7               	movlw	-9
  9233  0149BC  50E3               	movf	plusw1,w,c
  9234  0149BE  0A80               	xorlw	128
  9235  0149C0  5835               	subwfb	btemp^0,w,c
  9236  0149C2  B0D8               	btfsc	status,0,c
  9237  0149C4  D010               	goto	l1878
  9238                           
  9239                           ;stkvar	_p @ sp[(-17)+9]
  9240                           ;stkvar	_l @ sp[(-17)+7]
  9241  0149C6  0EF8               	movlw	-8
  9242  0149C8  006F FF8C  F035    	movff	plusw1,btemp
  9243  0149CE  0EF6               	movlw	-10
  9244  0149D0  0060  F0D7  FFE3   	movff	btemp,plusw1
  9245  0149D6  0EF9               	movlw	-7
  9246  0149D8  006F FF8C  F035    	movff	plusw1,btemp
  9247  0149DE  0EF7               	movlw	-9
  9248  0149E0  0060  F0D7  FFE3   	movff	btemp,plusw1
  9249  0149E6                     l1878:
  9250                           
  9251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
  9252                           ;stkvar	_l @ sp[(-17)+7]
  9253                           ;stkvar	_p @ sp[(-17)+9]
  9254  0149E6  0EF6               	movlw	-10
  9255  0149E8  006F FF8C  F035    	movff	plusw1,btemp
  9256  0149EE  0EF8               	movlw	-8
  9257  0149F0  0060  F0D7  FFE3   	movff	btemp,plusw1
  9258  0149F6  0EF7               	movlw	-9
  9259  0149F8  006F FF8C  F035    	movff	plusw1,btemp
  9260  0149FE  0EF9               	movlw	-7
  9261  014A00  0060  F0D7  FFE3   	movff	btemp,plusw1
  9262                           
  9263                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
  9264                           ;stkvar	_w @ sp[(-17)+13]
  9265  014A06  0EFC               	movlw	-4
  9266  014A08  0060  F07B  FFE3   	movff	_width,plusw1
  9267  014A0E  0EFD               	movlw	-3
  9268  014A10  0060  F07F  FFE3   	movff	_width+1,plusw1
  9269                           
  9270                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  9271  014A16  A022               	btfss	_flags^0,0,c
  9272  014A18  D01F               	goto	l9395
  9273  014A1A  D031               	goto	u9330
  9274  014A1C                     l9391:
  9275                           
  9276                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  9277                           ;stkvar	_fp @ sp[(-17)+-2]
  9278  014A1C  0EED               	movlw	-19
  9279  014A1E  006F FF8F FFE6     	movff	plusw1,postinc1
  9280  014A24  006F FF8F FFE6     	movff	plusw1,postinc1
  9281  014A2A  0E20               	movlw	32
  9282  014A2C  6EE6               	movwf	postinc1,c
  9283  014A2E  0E00               	movlw	0
  9284  014A30  6EE6               	movwf	postinc1,c
  9285  014A32  ECB9  F0B0         	call	_fputc	;wreg free
  9286                           
  9287                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
  9288                           ;stkvar	_l @ sp[(-17)+7]
  9289  014A36  0EF6               	movlw	-10
  9290  014A38  50E3               	movf	plusw1,w,c
  9291  014A3A  0F01               	addlw	1
  9292  014A3C  6E35               	movwf	btemp^0,c
  9293  014A3E  0EF6               	movlw	-10
  9294  014A40  0060  F0D7  FFE3   	movff	btemp,plusw1
  9295  014A46  6A35               	clrf	btemp^0,c
  9296  014A48  0EF7               	movlw	-9
  9297  014A4A  50E3               	movf	plusw1,w,c
  9298  014A4C  2035               	addwfc	btemp^0,w,c
  9299  014A4E  6E35               	movwf	btemp^0,c
  9300  014A50  0EF7               	movlw	-9
  9301  014A52  0060  F0D7  FFE3   	movff	btemp,plusw1
  9302  014A58                     l9395:
  9303                           
  9304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  9305                           ;stkvar	_w @ sp[(-17)+13]
  9306                           ;stkvar	_l @ sp[(-17)+7]
  9307  014A58  50E1               	movf	fsr1l,w,c
  9308  014A5A  0FF6               	addlw	-10
  9309  014A5C  6ED9               	movwf	fsr2l,c
  9310  014A5E  50E2               	movf	fsr1h,w,c
  9311  014A60  6EDA               	movwf	fsr2h,c
  9312  014A62  0EFF               	movlw	255
  9313  014A64  22DA               	addwfc	fsr2h,f,c
  9314  014A66  0EFC               	movlw	-4
  9315  014A68  50E3               	movf	plusw1,w,c
  9316  014A6A  5CDE               	subwf	postinc2,w,c
  9317  014A6C  50DE               	movf	postinc2,w,c
  9318  014A6E  0A80               	xorlw	128
  9319  014A70  6E35               	movwf	btemp^0,c
  9320  014A72  0EFD               	movlw	-3
  9321  014A74  50E3               	movf	plusw1,w,c
  9322  014A76  0A80               	xorlw	128
  9323  014A78  5835               	subwfb	btemp^0,w,c
  9324  014A7A  A0D8               	btfss	status,0,c
  9325  014A7C  D7CF               	goto	l9391
  9326  014A7E                     u9330:
  9327                           
  9328                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  9329                           ;stkvar	_i @ sp[(-17)+15]
  9330  014A7E  0EFE               	movlw	-2
  9331  014A80  6AE3               	clrf	plusw1,c
  9332  014A82  0EFF               	movlw	-1
  9333  014A84  6AE3               	clrf	plusw1,c
  9334                           
  9335                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9336  014A86  D045               	goto	l9405
  9337  014A88                     l9399:
  9338                           
  9339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  9340                           ;stkvar	_fp @ sp[(-17)+-2]
  9341  014A88  0EED               	movlw	-19
  9342  014A8A  006F FF8F FFE6     	movff	plusw1,postinc1
  9343  014A90  006F FF8F FFE6     	movff	plusw1,postinc1
  9344                           
  9345                           ;stkvar	_cp @ sp[(-19)+11]
  9346  014A96  0EF8               	movlw	-8
  9347  014A98  006F FF8F FFF6     	movff	plusw1,tblptrl
  9348  014A9E  0EF9               	movlw	-7
  9349  014AA0  006F FF8F FFF7     	movff	plusw1,tblptrh
  9350  014AA6  0E00               	movlw	low (__mediumconst shr (0+16))
  9351  014AA8  6EF8               	movwf	tblptru,c
  9352  014AAA  0E1F               	movlw	(high __ramtop+-1)
  9353  014AAC  64F7               	cpfsgt	tblptrh,c
  9354  014AAE  D003               	bra	u9347
  9355  014AB0  0008               	tblrd		*
  9356  014AB2  50F5               	movf	tablat,w,c
  9357  014AB4  D007               	bra	u9340
  9358  014AB6                     u9347:
  9359  014AB6  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9360  014ABC  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9361  014AC2  50EF               	movf	indf0,w,c
  9362  014AC4                     u9340:
  9363  014AC4  6EE6               	movwf	postinc1,c
  9364  014AC6  0E00               	movlw	0
  9365  014AC8  6EE6               	movwf	postinc1,c
  9366  014ACA  ECB9  F0B0         	call	_fputc	;wreg free
  9367                           
  9368                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  9369                           ;stkvar	_cp @ sp[(-17)+11]
  9370  014ACE  0EFA               	movlw	-6
  9371  014AD0  50E3               	movf	plusw1,w,c
  9372  014AD2  0F01               	addlw	1
  9373  014AD4  6E35               	movwf	btemp^0,c
  9374  014AD6  0EFA               	movlw	-6
  9375  014AD8  0060  F0D7  FFE3   	movff	btemp,plusw1
  9376  014ADE  6A35               	clrf	btemp^0,c
  9377  014AE0  0EFB               	movlw	-5
  9378  014AE2  50E3               	movf	plusw1,w,c
  9379  014AE4  2035               	addwfc	btemp^0,w,c
  9380  014AE6  6E35               	movwf	btemp^0,c
  9381  014AE8  0EFB               	movlw	-5
  9382  014AEA  0060  F0D7  FFE3   	movff	btemp,plusw1
  9383                           
  9384                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
  9385                           ;stkvar	_i @ sp[(-17)+15]
  9386  014AF0  0EFE               	movlw	-2
  9387  014AF2  50E3               	movf	plusw1,w,c
  9388  014AF4  0F01               	addlw	1
  9389  014AF6  6E35               	movwf	btemp^0,c
  9390  014AF8  0EFE               	movlw	-2
  9391  014AFA  0060  F0D7  FFE3   	movff	btemp,plusw1
  9392  014B00  6A35               	clrf	btemp^0,c
  9393  014B02  0EFF               	movlw	-1
  9394  014B04  50E3               	movf	plusw1,w,c
  9395  014B06  2035               	addwfc	btemp^0,w,c
  9396  014B08  6E35               	movwf	btemp^0,c
  9397  014B0A  0EFF               	movlw	-1
  9398  014B0C  0060  F0D7  FFE3   	movff	btemp,plusw1
  9399  014B12                     l9405:
  9400                           
  9401                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9402                           ;stkvar	_p @ sp[(-17)+9]
  9403                           ;stkvar	_i @ sp[(-17)+15]
  9404  014B12  50E1               	movf	fsr1l,w,c
  9405  014B14  0FFE               	addlw	-2
  9406  014B16  6ED9               	movwf	fsr2l,c
  9407  014B18  50E2               	movf	fsr1h,w,c
  9408  014B1A  6EDA               	movwf	fsr2h,c
  9409  014B1C  0EFF               	movlw	255
  9410  014B1E  22DA               	addwfc	fsr2h,f,c
  9411  014B20  0EF8               	movlw	-8
  9412  014B22  50E3               	movf	plusw1,w,c
  9413  014B24  5CDE               	subwf	postinc2,w,c
  9414  014B26  50DE               	movf	postinc2,w,c
  9415  014B28  0A80               	xorlw	128
  9416  014B2A  6E35               	movwf	btemp^0,c
  9417  014B2C  0EF9               	movlw	-7
  9418  014B2E  50E3               	movf	plusw1,w,c
  9419  014B30  0A80               	xorlw	128
  9420  014B32  5835               	subwfb	btemp^0,w,c
  9421  014B34  A0D8               	btfss	status,0,c
  9422  014B36  D7A8               	goto	l9399
  9423                           
  9424                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  9425  014B38  B022               	btfsc	_flags^0,0,c
  9426  014B3A  D01F               	goto	l9413
  9427  014B3C  D031               	goto	u9370
  9428  014B3E                     l9409:
  9429                           
  9430                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  9431                           ;stkvar	_fp @ sp[(-17)+-2]
  9432  014B3E  0EED               	movlw	-19
  9433  014B40  006F FF8F FFE6     	movff	plusw1,postinc1
  9434  014B46  006F FF8F FFE6     	movff	plusw1,postinc1
  9435  014B4C  0E20               	movlw	32
  9436  014B4E  6EE6               	movwf	postinc1,c
  9437  014B50  0E00               	movlw	0
  9438  014B52  6EE6               	movwf	postinc1,c
  9439  014B54  ECB9  F0B0         	call	_fputc	;wreg free
  9440                           
  9441                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
  9442                           ;stkvar	_l @ sp[(-17)+7]
  9443  014B58  0EF6               	movlw	-10
  9444  014B5A  50E3               	movf	plusw1,w,c
  9445  014B5C  0F01               	addlw	1
  9446  014B5E  6E35               	movwf	btemp^0,c
  9447  014B60  0EF6               	movlw	-10
  9448  014B62  0060  F0D7  FFE3   	movff	btemp,plusw1
  9449  014B68  6A35               	clrf	btemp^0,c
  9450  014B6A  0EF7               	movlw	-9
  9451  014B6C  50E3               	movf	plusw1,w,c
  9452  014B6E  2035               	addwfc	btemp^0,w,c
  9453  014B70  6E35               	movwf	btemp^0,c
  9454  014B72  0EF7               	movlw	-9
  9455  014B74  0060  F0D7  FFE3   	movff	btemp,plusw1
  9456  014B7A                     l9413:
  9457                           
  9458                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  9459                           ;stkvar	_w @ sp[(-17)+13]
  9460                           ;stkvar	_l @ sp[(-17)+7]
  9461  014B7A  50E1               	movf	fsr1l,w,c
  9462  014B7C  0FF6               	addlw	-10
  9463  014B7E  6ED9               	movwf	fsr2l,c
  9464  014B80  50E2               	movf	fsr1h,w,c
  9465  014B82  6EDA               	movwf	fsr2h,c
  9466  014B84  0EFF               	movlw	255
  9467  014B86  22DA               	addwfc	fsr2h,f,c
  9468  014B88  0EFC               	movlw	-4
  9469  014B8A  50E3               	movf	plusw1,w,c
  9470  014B8C  5CDE               	subwf	postinc2,w,c
  9471  014B8E  50DE               	movf	postinc2,w,c
  9472  014B90  0A80               	xorlw	128
  9473  014B92  6E35               	movwf	btemp^0,c
  9474  014B94  0EFD               	movlw	-3
  9475  014B96  50E3               	movf	plusw1,w,c
  9476  014B98  0A80               	xorlw	128
  9477  014B9A  5835               	subwfb	btemp^0,w,c
  9478  014B9C  A0D8               	btfss	status,0,c
  9479  014B9E  D7CF               	goto	l9409
  9480  014BA0                     u9370:
  9481                           
  9482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
  9483                           ;stkvar	_l @ sp[(-17)+7]
  9484  014BA0  0EF6               	movlw	-10
  9485  014BA2  006F FF8C  F035    	movff	plusw1,btemp
  9486  014BA8  0EF7               	movlw	-9
  9487  014BAA  006F FF8C  F036    	movff	plusw1,btemp+1
  9488                           
  9489                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  9490  014BB0  0EEB               	movlw	235
  9491  014BB2  26E1               	addwf	fsr1l,f,c
  9492  014BB4  0EFF               	movlw	255
  9493  014BB6  22E2               	addwfc	fsr1h,f,c
  9494  014BB8  0012               	return		;funcret
  9495  014BBA                     __end_of_stoa:
  9496                           	opt callstack 0
  9497                           
  9498 ;; *************** function _efgtoa *****************
  9499 ;; Defined at:
  9500 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9501 ;; Parameters:    Size  Location     Type
  9502 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9503 ;;		 -> f(6), NULL(0), 
  9504 ;;  f               4  [STACK] PTR struct _IO_FILE
  9505 ;;  c               1  [STACK] unsigned char 
  9506 ;; Auto vars:     Size  Location     Type
  9507 ;;  u               4  [STACK] unsigned char 
  9508 ;;  g               4  [STACK] unsigned char 
  9509 ;;  l               4  [STACK] unsigned char 
  9510 ;;  h               4  [STACK] unsigned char 
  9511 ;;  ou              4  [STACK] unsigned char 
  9512 ;;  n               2  [STACK] int 
  9513 ;;  e               2  [STACK] int 
  9514 ;;  i               2  [STACK] int 
  9515 ;;  w               2  [STACK] int 
  9516 ;;  p               2  [STACK] int 
  9517 ;;  sign            2  [STACK] int 
  9518 ;;  d               2  [STACK] int 
  9519 ;;  ne              2  [STACK] int 
  9520 ;;  m               2  [STACK] int 
  9521 ;;  pp              2  [STACK] int 
  9522 ;;  t               2  [STACK] int 
  9523 ;;  mode            1  [STACK] unsigned char 
  9524 ;;  nmode           1  [STACK] unsigned char 
  9525 ;; Return value:  Size  Location     Type
  9526 ;;                  2  [STACK] int 
  9527 ;; Registers used:
  9528 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  9529 ;; Tracked objects:
  9530 ;;		On entry : 0/4
  9531 ;;		On exit  : 0/0
  9532 ;;		Unchanged: 0/0
  9533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9538 ;;Total ram usage:        0 bytes
  9539 ;; Hardware stack levels used:    1
  9540 ;; Hardware stack levels required when called:   11
  9541 ;; This function calls:
  9542 ;;		___awdiv
  9543 ;;		___awmod
  9544 ;;		___fladd
  9545 ;;		___fldiv
  9546 ;;		___fleq
  9547 ;;		___flge
  9548 ;;		___flmul
  9549 ;;		___flneg
  9550 ;;		___flsub
  9551 ;;		___fltol
  9552 ;;		___fpclassifyf
  9553 ;;		_floorf
  9554 ;;		_isupper
  9555 ;;		_pad
  9556 ;;		_strcpy
  9557 ;;		_tolower
  9558 ;; This function is called by:
  9559 ;;		_vfpfcnvrt
  9560 ;; This function uses a reentrant model
  9561 ;;
  9562                           
  9563                           	psect	text41
  9564  010000                     __ptext41:
  9565                           	opt callstack 0
  9566  010000                     _efgtoa:
  9567                           	opt callstack 0
  9568                           
  9569                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9570  010000  0E38               	movlw	56
  9571  010002  26E1               	addwf	fsr1l,f,c
  9572  010004  0E00               	movlw	0
  9573  010006  22E2               	addwfc	fsr1h,f,c
  9574                           
  9575                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
  9576                           ;stkvar	_sign @ sp[(-56)+42]
  9577                           
  9578                           ;incstack = 0
  9579  010008  0EF2               	movlw	-14
  9580  01000A  6AE3               	clrf	plusw1,c
  9581  01000C  0EF3               	movlw	-13
  9582  01000E  6AE3               	clrf	plusw1,c
  9583                           
  9584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
  9585                           ;stkvar	_f @ sp[(-56)+-6]
  9586  010010  0EC2               	movlw	-62
  9587  010012  006F FF8C  F03D    	movff	plusw1,btemp+8
  9588  010018  0EC3               	movlw	-61
  9589  01001A  006F FF8C  F03E    	movff	plusw1,btemp+9
  9590  010020  0EC4               	movlw	-60
  9591  010022  006F FF8C  F03F    	movff	plusw1,btemp+10
  9592  010028  0EC5               	movlw	-59
  9593  01002A  006F FF8C  F040    	movff	plusw1,btemp+11
  9594                           
  9595                           ;stkvar	_g @ sp[(-56)+16]
  9596  010030  0ED8               	movlw	-40
  9597  010032  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  9598  010038  0ED9               	movlw	-39
  9599  01003A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  9600  010040  0EDA               	movlw	-38
  9601  010042  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9602  010048  0EDB               	movlw	-37
  9603  01004A  0060  F103  FFE3   	movff	btemp+11,plusw1
  9604                           
  9605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
  9606                           ;stkvar	_g @ sp[(-56)+16]
  9607  010050  0EDB               	movlw	-37
  9608  010052  AEE3               	btfss	plusw1,7,c
  9609  010054  D02B               	goto	l9073
  9610                           
  9611                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
  9612  010056  0E01               	movlw	1
  9613  010058  6E3F               	movwf	(btemp+10)^0,c
  9614  01005A  0E00               	movlw	0
  9615  01005C  6E40               	movwf	(btemp+11)^0,c
  9616                           
  9617                           ;stkvar	_sign @ sp[(-56)+42]
  9618  01005E  0EF2               	movlw	-14
  9619  010060  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9620  010066  0EF3               	movlw	-13
  9621  010068  0060  F103  FFE3   	movff	btemp+11,plusw1
  9622                           
  9623                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
  9624                           ;stkvar	_g @ sp[(-56)+16]
  9625  01006E  0ED8               	movlw	-40
  9626  010070  006F FF8F FFE6     	movff	plusw1,postinc1
  9627  010076  006F FF8F FFE6     	movff	plusw1,postinc1
  9628  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
  9629  010082  006F FF8F FFE6     	movff	plusw1,postinc1
  9630  010088  EC80  F0BB         	call	___flneg	;wreg free
  9631                           
  9632                           ;stkvar	_g @ sp[(-56)+16]
  9633  01008C  0ED8               	movlw	-40
  9634  01008E  0060  F0D7  FFE3   	movff	btemp,plusw1
  9635  010094  0ED9               	movlw	-39
  9636  010096  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  9637  01009C  0EDA               	movlw	-38
  9638  01009E  0060  F0DF  FFE3   	movff	btemp+2,plusw1
  9639  0100A4  0EDB               	movlw	-37
  9640  0100A6  0060  F0E3  FFE3   	movff	btemp+3,plusw1
  9641  0100AC                     l9073:
  9642                           
  9643                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
  9644                           ;stkvar	_n @ sp[(-56)+32]
  9645  0100AC  0EE8               	movlw	-24
  9646  0100AE  6AE3               	clrf	plusw1,c
  9647  0100B0  0EE9               	movlw	-23
  9648  0100B2  6AE3               	clrf	plusw1,c
  9649                           
  9650                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
  9651                           ;stkvar	_w @ sp[(-56)+38]
  9652  0100B4  0EEE               	movlw	-18
  9653  0100B6  0060  F07B  FFE3   	movff	_width,plusw1
  9654  0100BC  0EEF               	movlw	-17
  9655  0100BE  0060  F07F  FFE3   	movff	_width+1,plusw1
  9656                           
  9657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
  9658                           ;stkvar	_sign @ sp[(-56)+42]
  9659  0100C4  0EF2               	movlw	-14
  9660  0100C6  006F FF8C  F035    	movff	plusw1,btemp
  9661  0100CC  0EF3               	movlw	-13
  9662  0100CE  50E3               	movf	plusw1,w,c
  9663  0100D0  1035               	iorwf	btemp^0,w,c
  9664  0100D2  A4D8               	btfss	status,2,c
  9665  0100D4  D002               	goto	u8780
  9666  0100D6  A422               	btfss	_flags^0,2,c
  9667  0100D8  D036               	goto	l9093
  9668  0100DA                     u8780:
  9669                           
  9670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
  9671                           ;stkvar	_sign @ sp[(-56)+42]
  9672  0100DA  0EF2               	movlw	-14
  9673  0100DC  006F FF8C  F035    	movff	plusw1,btemp
  9674  0100E2  0EF3               	movlw	-13
  9675  0100E4  50E3               	movf	plusw1,w,c
  9676  0100E6  1035               	iorwf	btemp^0,w,c
  9677  0100E8  A4D8               	btfss	status,2,c
  9678  0100EA  D002               	goto	l9085
  9679  0100EC  0E2B               	movlw	43
  9680  0100EE  D001               	goto	L7
  9681  0100F0                     l9085:
  9682  0100F0  0E2D               	movlw	45
  9683  0100F2                     L7:
  9684  0100F2  6E3F               	movwf	(btemp+10)^0,c
  9685  0100F4  0E00               	movlw	0
  9686  0100F6  6E40               	movwf	(btemp+11)^0,c
  9687                           
  9688                           ;stkvar	_efgtoa$4070 @ sp[(-56)+10]
  9689  0100F8  0ED2               	movlw	-46
  9690  0100FA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9691  010100  0ED3               	movlw	-45
  9692  010102  0060  F103  FFE3   	movff	btemp+11,plusw1
  9693                           
  9694                           ;stkvar	_efgtoa$4070 @ sp[(-56)+10]
  9695  010108  0ED2               	movlw	-46
  9696  01010A  006F FF8C  F1AB    	movff	plusw1,_dbuf
  9697                           
  9698                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
  9699                           ;stkvar	_n @ sp[(-56)+32]
  9700  010110  0EE8               	movlw	-24
  9701  010112  50E3               	movf	plusw1,w,c
  9702  010114  0F01               	addlw	1
  9703  010116  6E35               	movwf	btemp^0,c
  9704  010118  0EE8               	movlw	-24
  9705  01011A  0060  F0D7  FFE3   	movff	btemp,plusw1
  9706  010120  6A35               	clrf	btemp^0,c
  9707  010122  0EE9               	movlw	-23
  9708  010124  50E3               	movf	plusw1,w,c
  9709  010126  2035               	addwfc	btemp^0,w,c
  9710  010128  6E35               	movwf	btemp^0,c
  9711  01012A  0EE9               	movlw	-23
  9712  01012C  0060  F0D7  FFE3   	movff	btemp,plusw1
  9713                           
  9714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
  9715                           ;stkvar	_w @ sp[(-56)+38]
  9716  010132  50E1               	movf	fsr1l,w,c
  9717  010134  0FEE               	addlw	-18
  9718  010136  6ED9               	movwf	fsr2l,c
  9719  010138  50E2               	movf	fsr1h,w,c
  9720  01013A  6EDA               	movwf	fsr2h,c
  9721  01013C  0EFF               	movlw	255
  9722  01013E  22DA               	addwfc	fsr2h,f,c
  9723  010140  06DE               	decf	postinc2,f,c
  9724  010142  0E00               	movlw	0
  9725  010144  5ADD               	subwfb	postdec2,f,c
  9726  010146                     l9093:
  9727                           
  9728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9729                           ;stkvar	_g @ sp[(-56)+16]
  9730  010146  0ED8               	movlw	-40
  9731  010148  006F FF8F FFE6     	movff	plusw1,postinc1
  9732  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
  9733  010154  006F FF8F FFE6     	movff	plusw1,postinc1
  9734  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
  9735  010160  EC46  F0AD         	call	___fpclassifyf	;wreg free
  9736  010164  0435               	decf	btemp^0,w,c
  9737  010166  1036               	iorwf	(btemp+1)^0,w,c
  9738  010168  A4D8               	btfss	status,2,c
  9739  01016A  D076               	goto	l9111
  9740  01016C  0EBF               	movlw	191
  9741  01016E  6E3F               	movwf	(btemp+10)^0,c
  9742  010170  0EFF               	movlw	255
  9743  010172  6E40               	movwf	(btemp+11)^0,c
  9744                           
  9745                           ;stkvar	_c @ sp[(-56)+-7]
  9746  010174  0EC1               	movlw	-63
  9747  010176  50E3               	movf	plusw1,w,c
  9748  010178  6E3D               	movwf	(btemp+8)^0,c
  9749  01017A  6A3E               	clrf	(btemp+9)^0,c
  9750  01017C  503F               	movf	(btemp+10)^0,w,c
  9751  01017E  263D               	addwf	(btemp+8)^0,f,c
  9752  010180  5040               	movf	(btemp+11)^0,w,c
  9753  010182  223E               	addwfc	(btemp+9)^0,f,c
  9754  010184  503E               	movf	(btemp+9)^0,w,c
  9755  010186  E106               	bnz	u8810
  9756  010188  0E1A               	movlw	26
  9757  01018A  5C3D               	subwf	(btemp+8)^0,w,c
  9758  01018C  B0D8               	btfsc	status,0,c
  9759  01018E  D002               	goto	u8810
  9760  010190  0E01               	movlw	1
  9761  010192  D001               	goto	u8820
  9762  010194                     u8810:
  9763  010194  0E00               	movlw	0
  9764  010196                     u8820:
  9765  010196  6E3F               	movwf	(btemp+10)^0,c
  9766  010198  6A40               	clrf	(btemp+11)^0,c
  9767                           
  9768                           ;stkvar	_efgtoa$4071 @ sp[(-56)+8]
  9769  01019A  0ED0               	movlw	-48
  9770  01019C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9771  0101A2  0ED1               	movlw	-47
  9772  0101A4  0060  F103  FFE3   	movff	btemp+11,plusw1
  9773                           
  9774                           ;stkvar	_efgtoa$4071 @ sp[(-56)+8]
  9775  0101AA  0ED0               	movlw	-48
  9776  0101AC  006F FF8C  F035    	movff	plusw1,btemp
  9777  0101B2  0ED1               	movlw	-47
  9778  0101B4  50E3               	movf	plusw1,w,c
  9779  0101B6  1035               	iorwf	btemp^0,w,c
  9780  0101B8  B4D8               	btfsc	status,2,c
  9781  0101BA  D017               	goto	l9103
  9782                           
  9783                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
  9784  0101BC  0EE2               	movlw	low STR_33
  9785  0101BE  6EE6               	movwf	postinc1,c
  9786  0101C0  0EFF               	movlw	high STR_33
  9787  0101C2  6EE6               	movwf	postinc1,c
  9788                           
  9789                           ;stkvar	_n @ sp[(-58)+32]
  9790  0101C4  0EAB               	movlw	low _dbuf
  9791  0101C6  6E3F               	movwf	(btemp+10)^0,c
  9792  0101C8  0E01               	movlw	high _dbuf
  9793  0101CA  6E40               	movwf	(btemp+11)^0,c
  9794  0101CC  0EE6               	movlw	-26
  9795  0101CE  50E3               	movf	plusw1,w,c
  9796  0101D0  263F               	addwf	(btemp+10)^0,f,c
  9797  0101D2  0EE7               	movlw	-25
  9798  0101D4  50E3               	movf	plusw1,w,c
  9799  0101D6  2240               	addwfc	(btemp+11)^0,f,c
  9800  0101D8  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  9801  0101DE  0060  F103  FFE6   	movff	btemp+11,postinc1
  9802  0101E4  ECE2  F0B3         	call	_strcpy	;wreg free
  9803                           
  9804                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
  9805  0101E8  D016               	goto	l9105
  9806  0101EA                     l9103:
  9807                           
  9808                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
  9809  0101EA  0EEA               	movlw	low STR_34
  9810  0101EC  6EE6               	movwf	postinc1,c
  9811  0101EE  0EFF               	movlw	high STR_34
  9812  0101F0  6EE6               	movwf	postinc1,c
  9813                           
  9814                           ;stkvar	_n @ sp[(-58)+32]
  9815  0101F2  0EAB               	movlw	low _dbuf
  9816  0101F4  6E3F               	movwf	(btemp+10)^0,c
  9817  0101F6  0E01               	movlw	high _dbuf
  9818  0101F8  6E40               	movwf	(btemp+11)^0,c
  9819  0101FA  0EE6               	movlw	-26
  9820  0101FC  50E3               	movf	plusw1,w,c
  9821  0101FE  263F               	addwf	(btemp+10)^0,f,c
  9822  010200  0EE7               	movlw	-25
  9823  010202  50E3               	movf	plusw1,w,c
  9824  010204  2240               	addwfc	(btemp+11)^0,f,c
  9825  010206  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  9826  01020C  0060  F103  FFE6   	movff	btemp+11,postinc1
  9827  010212  ECE2  F0B3         	call	_strcpy	;wreg free
  9828  010216                     l9105:
  9829                           
  9830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  9831                           ;stkvar	_w @ sp[(-56)+38]
  9832  010216  50E1               	movf	fsr1l,w,c
  9833  010218  0FEE               	addlw	-18
  9834  01021A  6ED9               	movwf	fsr2l,c
  9835  01021C  50E2               	movf	fsr1h,w,c
  9836  01021E  6EDA               	movwf	fsr2h,c
  9837  010220  0EFF               	movlw	255
  9838  010222  22DA               	addwfc	fsr2h,f,c
  9839  010224  0EFD               	movlw	253
  9840  010226  26DE               	addwf	postinc2,f,c
  9841  010228  0EFF               	movlw	255
  9842  01022A  22DD               	addwfc	postdec2,f,c
  9843  01022C                     l9107:
  9844                           
  9845                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
  9846                           ;stkvar	_w @ sp[(-56)+38]
  9847  01022C  0EEE               	movlw	-18
  9848  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
  9849  010234  006F FF8F FFE6     	movff	plusw1,postinc1
  9850  01023A  0EAB               	movlw	low _dbuf
  9851  01023C  6EE6               	movwf	postinc1,c
  9852  01023E  0E01               	movlw	high _dbuf
  9853  010240  6EE6               	movwf	postinc1,c
  9854                           
  9855                           ;stkvar	_fp @ sp[(-60)+-2]
  9856  010242  0EC2               	movlw	-62
  9857  010244  006F FF8F FFE6     	movff	plusw1,postinc1
  9858  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
  9859  010250  ECD7  F0B1         	call	_pad	;wreg free
  9860  010254  EF1D  F089         	goto	l1796
  9861  010258                     l9111:
  9862                           
  9863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9864                           ;stkvar	_g @ sp[(-56)+16]
  9865  010258  0ED8               	movlw	-40
  9866  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
  9867  010260  006F FF8F FFE6     	movff	plusw1,postinc1
  9868  010266  006F FF8F FFE6     	movff	plusw1,postinc1
  9869  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
  9870  010272  EC46  F0AD         	call	___fpclassifyf	;wreg free
  9871  010276  5035               	movf	btemp^0,w,c
  9872  010278  1036               	iorwf	(btemp+1)^0,w,c
  9873  01027A  A4D8               	btfss	status,2,c
  9874  01027C  D056               	goto	l9129
  9875  01027E  0EBF               	movlw	191
  9876  010280  6E3F               	movwf	(btemp+10)^0,c
  9877  010282  0EFF               	movlw	255
  9878  010284  6E40               	movwf	(btemp+11)^0,c
  9879                           
  9880                           ;stkvar	_c @ sp[(-56)+-7]
  9881  010286  0EC1               	movlw	-63
  9882  010288  50E3               	movf	plusw1,w,c
  9883  01028A  6E3D               	movwf	(btemp+8)^0,c
  9884  01028C  6A3E               	clrf	(btemp+9)^0,c
  9885  01028E  503F               	movf	(btemp+10)^0,w,c
  9886  010290  263D               	addwf	(btemp+8)^0,f,c
  9887  010292  5040               	movf	(btemp+11)^0,w,c
  9888  010294  223E               	addwfc	(btemp+9)^0,f,c
  9889  010296  503E               	movf	(btemp+9)^0,w,c
  9890  010298  E106               	bnz	u8850
  9891  01029A  0E1A               	movlw	26
  9892  01029C  5C3D               	subwf	(btemp+8)^0,w,c
  9893  01029E  B0D8               	btfsc	status,0,c
  9894  0102A0  D002               	goto	u8850
  9895  0102A2  0E01               	movlw	1
  9896  0102A4  D001               	goto	u8860
  9897  0102A6                     u8850:
  9898  0102A6  0E00               	movlw	0
  9899  0102A8                     u8860:
  9900  0102A8  6E3F               	movwf	(btemp+10)^0,c
  9901  0102AA  6A40               	clrf	(btemp+11)^0,c
  9902                           
  9903                           ;stkvar	_efgtoa$4075 @ sp[(-56)+6]
  9904  0102AC  0ECE               	movlw	-50
  9905  0102AE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9906  0102B4  0ECF               	movlw	-49
  9907  0102B6  0060  F103  FFE3   	movff	btemp+11,plusw1
  9908                           
  9909                           ;stkvar	_efgtoa$4075 @ sp[(-56)+6]
  9910  0102BC  0ECE               	movlw	-50
  9911  0102BE  006F FF8C  F035    	movff	plusw1,btemp
  9912  0102C4  0ECF               	movlw	-49
  9913  0102C6  50E3               	movf	plusw1,w,c
  9914  0102C8  1035               	iorwf	btemp^0,w,c
  9915  0102CA  B4D8               	btfsc	status,2,c
  9916  0102CC  D017               	goto	l9121
  9917                           
  9918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
  9919  0102CE  0EE6               	movlw	low STR_37
  9920  0102D0  6EE6               	movwf	postinc1,c
  9921  0102D2  0EFF               	movlw	high STR_37
  9922  0102D4  6EE6               	movwf	postinc1,c
  9923                           
  9924                           ;stkvar	_n @ sp[(-58)+32]
  9925  0102D6  0EAB               	movlw	low _dbuf
  9926  0102D8  6E3F               	movwf	(btemp+10)^0,c
  9927  0102DA  0E01               	movlw	high _dbuf
  9928  0102DC  6E40               	movwf	(btemp+11)^0,c
  9929  0102DE  0EE6               	movlw	-26
  9930  0102E0  50E3               	movf	plusw1,w,c
  9931  0102E2  263F               	addwf	(btemp+10)^0,f,c
  9932  0102E4  0EE7               	movlw	-25
  9933  0102E6  50E3               	movf	plusw1,w,c
  9934  0102E8  2240               	addwfc	(btemp+11)^0,f,c
  9935  0102EA  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  9936  0102F0  0060  F103  FFE6   	movff	btemp+11,postinc1
  9937  0102F6  ECE2  F0B3         	call	_strcpy	;wreg free
  9938                           
  9939                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
  9940  0102FA  D78D               	goto	l9105
  9941  0102FC                     l9121:
  9942                           
  9943                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
  9944  0102FC  0EEE               	movlw	low STR_38
  9945  0102FE  6EE6               	movwf	postinc1,c
  9946  010300  0EFF               	movlw	high STR_38
  9947  010302  6EE6               	movwf	postinc1,c
  9948                           
  9949                           ;stkvar	_n @ sp[(-58)+32]
  9950  010304  0EAB               	movlw	low _dbuf
  9951  010306  6E3F               	movwf	(btemp+10)^0,c
  9952  010308  0E01               	movlw	high _dbuf
  9953  01030A  6E40               	movwf	(btemp+11)^0,c
  9954  01030C  0EE6               	movlw	-26
  9955  01030E  50E3               	movf	plusw1,w,c
  9956  010310  263F               	addwf	(btemp+10)^0,f,c
  9957  010312  0EE7               	movlw	-25
  9958  010314  50E3               	movf	plusw1,w,c
  9959  010316  2240               	addwfc	(btemp+11)^0,f,c
  9960  010318  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  9961  01031E  0060  F103  FFE6   	movff	btemp+11,postinc1
  9962  010324  ECE2  F0B3         	call	_strcpy	;wreg free
  9963  010328  D776               	goto	l9105
  9964  01032A                     l9129:
  9965                           
  9966                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
  9967  01032A  0E00               	movlw	0
  9968  01032C  6E3D               	movwf	(btemp+8)^0,c
  9969  01032E  0E00               	movlw	0
  9970  010330  6E3E               	movwf	(btemp+9)^0,c
  9971  010332  0E80               	movlw	128
  9972  010334  6E3F               	movwf	(btemp+10)^0,c
  9973  010336  0E3F               	movlw	63
  9974  010338  6E40               	movwf	(btemp+11)^0,c
  9975                           
  9976                           ;stkvar	_u @ sp[(-56)+12]
  9977  01033A  0ED4               	movlw	-44
  9978  01033C  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  9979  010342  0ED5               	movlw	-43
  9980  010344  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  9981  01034A  0ED6               	movlw	-42
  9982  01034C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9983  010352  0ED7               	movlw	-41
  9984  010354  0060  F103  FFE3   	movff	btemp+11,plusw1
  9985                           
  9986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
  9987                           ;stkvar	_e @ sp[(-56)+34]
  9988  01035A  0EEA               	movlw	-22
  9989  01035C  6AE3               	clrf	plusw1,c
  9990  01035E  0EEB               	movlw	-21
  9991  010360  6AE3               	clrf	plusw1,c
  9992                           
  9993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
  9994  010362  0E00               	movlw	0
  9995  010364  6EE6               	movwf	postinc1,c
  9996  010366  0E00               	movlw	0
  9997  010368  6EE6               	movwf	postinc1,c
  9998  01036A  0E00               	movlw	0
  9999  01036C  6EE6               	movwf	postinc1,c
 10000  01036E  0E00               	movlw	0
 10001  010370  6EE6               	movwf	postinc1,c
 10002                           
 10003                           ;stkvar	_g @ sp[(-60)+16]
 10004  010372  0ED4               	movlw	-44
 10005  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 10006  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 10007  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 10008  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 10009  01038C  ECAF  F0B4         	call	___fleq	;wreg free
 10010  010390  A035               	btfss	btemp& (0+255),0,c
 10011  010392  D039               	goto	l9141
 10012  010394  D0BC               	goto	u8900
 10013  010396                     l9137:
 10014                           
 10015                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 10016  010396  0E00               	movlw	0
 10017  010398  6EE6               	movwf	postinc1,c
 10018  01039A  0E00               	movlw	0
 10019  01039C  6EE6               	movwf	postinc1,c
 10020  01039E  0E20               	movlw	32
 10021  0103A0  6EE6               	movwf	postinc1,c
 10022  0103A2  0E41               	movlw	65
 10023  0103A4  6EE6               	movwf	postinc1,c
 10024                           
 10025                           ;stkvar	_u @ sp[(-60)+12]
 10026  0103A6  0ED0               	movlw	-48
 10027  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 10028  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 10029  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 10030  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 10031  0103C0  ECC1  F08E         	call	___flmul	;wreg free
 10032                           
 10033                           ;stkvar	_u @ sp[(-56)+12]
 10034  0103C4  0ED4               	movlw	-44
 10035  0103C6  0060  F0D7  FFE3   	movff	btemp,plusw1
 10036  0103CC  0ED5               	movlw	-43
 10037  0103CE  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10038  0103D4  0ED6               	movlw	-42
 10039  0103D6  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10040  0103DC  0ED7               	movlw	-41
 10041  0103DE  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10042                           
 10043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 10044                           ;stkvar	_e @ sp[(-56)+34]
 10045  0103E4  0EEA               	movlw	-22
 10046  0103E6  50E3               	movf	plusw1,w,c
 10047  0103E8  0F01               	addlw	1
 10048  0103EA  6E35               	movwf	btemp^0,c
 10049  0103EC  0EEA               	movlw	-22
 10050  0103EE  0060  F0D7  FFE3   	movff	btemp,plusw1
 10051  0103F4  6A35               	clrf	btemp^0,c
 10052  0103F6  0EEB               	movlw	-21
 10053  0103F8  50E3               	movf	plusw1,w,c
 10054  0103FA  2035               	addwfc	btemp^0,w,c
 10055  0103FC  6E35               	movwf	btemp^0,c
 10056  0103FE  0EEB               	movlw	-21
 10057  010400  0060  F0D7  FFE3   	movff	btemp,plusw1
 10058  010406                     l9141:
 10059                           
 10060                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 10061  010406  0E00               	movlw	0
 10062  010408  6EE6               	movwf	postinc1,c
 10063  01040A  0E00               	movlw	0
 10064  01040C  6EE6               	movwf	postinc1,c
 10065  01040E  0E20               	movlw	32
 10066  010410  6EE6               	movwf	postinc1,c
 10067  010412  0E41               	movlw	65
 10068  010414  6EE6               	movwf	postinc1,c
 10069                           
 10070                           ;stkvar	_u @ sp[(-60)+12]
 10071  010416  0ED0               	movlw	-48
 10072  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 10073  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 10074  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 10075  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 10076  010430  ECC1  F08E         	call	___flmul	;wreg free
 10077  010434  0060  F0D7  FFE6   	movff	btemp,postinc1
 10078  01043A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 10079  010440  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 10080  010446  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 10081                           
 10082                           ;stkvar	_g @ sp[(-60)+16]
 10083  01044C  0ED4               	movlw	-44
 10084  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 10085  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 10086  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 10087  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 10088  010466  ECCA  F0AE         	call	___flge	;wreg free
 10089  01046A  A035               	btfss	btemp& (0+255),0,c
 10090  01046C  D032               	goto	l9147
 10091  01046E  D793               	goto	l9137
 10092  010470                     l9143:
 10093                           
 10094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 10095  010470  0E00               	movlw	0
 10096  010472  6EE6               	movwf	postinc1,c
 10097  010474  0E00               	movlw	0
 10098  010476  6EE6               	movwf	postinc1,c
 10099  010478  0E20               	movlw	32
 10100  01047A  6EE6               	movwf	postinc1,c
 10101  01047C  0E41               	movlw	65
 10102  01047E  6EE6               	movwf	postinc1,c
 10103                           
 10104                           ;stkvar	_u @ sp[(-60)+12]
 10105  010480  0ED0               	movlw	-48
 10106  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 10107  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 10108  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 10109  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 10110  01049A  ECB4  F096         	call	___fldiv	;wreg free
 10111                           
 10112                           ;stkvar	_u @ sp[(-56)+12]
 10113  01049E  0ED4               	movlw	-44
 10114  0104A0  0060  F0D7  FFE3   	movff	btemp,plusw1
 10115  0104A6  0ED5               	movlw	-43
 10116  0104A8  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10117  0104AE  0ED6               	movlw	-42
 10118  0104B0  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10119  0104B6  0ED7               	movlw	-41
 10120  0104B8  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10121                           
 10122                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 10123                           ;stkvar	_e @ sp[(-56)+34]
 10124  0104BE  50E1               	movf	fsr1l,w,c
 10125  0104C0  0FEA               	addlw	-22
 10126  0104C2  6ED9               	movwf	fsr2l,c
 10127  0104C4  50E2               	movf	fsr1h,w,c
 10128  0104C6  6EDA               	movwf	fsr2h,c
 10129  0104C8  0EFF               	movlw	255
 10130  0104CA  22DA               	addwfc	fsr2h,f,c
 10131  0104CC  06DE               	decf	postinc2,f,c
 10132  0104CE  0E00               	movlw	0
 10133  0104D0  5ADD               	subwfb	postdec2,f,c
 10134  0104D2                     l9147:
 10135                           
 10136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 10137                           ;stkvar	_u @ sp[(-56)+12]
 10138  0104D2  0ED4               	movlw	-44
 10139  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 10140  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 10141  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 10142  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 10143                           
 10144                           ;stkvar	_g @ sp[(-60)+16]
 10145  0104EC  0ED4               	movlw	-44
 10146  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 10147  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 10148  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 10149  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 10150  010506  ECCA  F0AE         	call	___flge	;wreg free
 10151  01050A  A035               	btfss	btemp& (0+255),0,c
 10152  01050C  D7B1               	goto	l9143
 10153  01050E                     u8900:
 10154                           
 10155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 10156                           ;stkvar	_c @ sp[(-56)+-7]
 10157  01050E  0EC1               	movlw	-63
 10158  010510  50E3               	movf	plusw1,w,c
 10159  010512  6EE6               	movwf	postinc1,c
 10160  010514  0E00               	movlw	0
 10161  010516  6EE6               	movwf	postinc1,c
 10162  010518  EC62  F0B8         	call	_tolower	;wreg free
 10163                           
 10164                           ;stkvar	_mode @ sp[(-56)+54]
 10165  01051C  0EFE               	movlw	-2
 10166  01051E  0060  F0D7  FFE3   	movff	btemp,plusw1
 10167                           
 10168                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 10169                           ;stkvar	_mode @ sp[(-56)+54]
 10170                           ;stkvar	_nmode @ sp[(-56)+55]
 10171  010524  0EFE               	movlw	-2
 10172  010526  006F FF8C  F035    	movff	plusw1,btemp
 10173  01052C  0EFF               	movlw	-1
 10174  01052E  0060  F0D7  FFE3   	movff	btemp,plusw1
 10175                           
 10176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 10177                           ;stkvar	_mode @ sp[(-56)+54]
 10178  010534  0EFE               	movlw	-2
 10179  010536  006F FF8C  F035    	movff	plusw1,btemp
 10180  01053C  0E67               	movlw	103
 10181  01053E  1835               	xorwf	btemp^0,w,c
 10182  010540  A4D8               	btfss	status,2,c
 10183  010542  D025               	goto	l9165
 10184                           
 10185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 10186  010544  5020               	movf	_prec^0,w,c
 10187  010546  1021               	iorwf	(_prec+1)^0,w,c
 10188  010548  A4D8               	btfss	status,2,c
 10189  01054A  D004               	goto	l9159
 10190                           
 10191                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 10192  01054C  0E00               	movlw	0
 10193  01054E  6E21               	movwf	(_prec+1)^0,c
 10194  010550  0E01               	movlw	1
 10195  010552  6E20               	movwf	_prec^0,c
 10196  010554                     l9159:
 10197                           
 10198                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 10199  010554  BE21               	btfsc	(_prec+1)^0,7,c
 10200  010556  D005               	goto	u8930
 10201  010558  5021               	movf	(_prec+1)^0,w,c
 10202  01055A  E110               	bnz	l9163
 10203  01055C  0420               	decf	_prec^0,w,c
 10204  01055E  B0D8               	btfsc	status,0,c
 10205  010560  D00D               	goto	l9163
 10206  010562                     u8930:
 10207  010562  0E06               	movlw	6
 10208  010564  6E3F               	movwf	(btemp+10)^0,c
 10209  010566  0E00               	movlw	0
 10210  010568  6E40               	movwf	(btemp+11)^0,c
 10211                           
 10212                           ;stkvar	_p @ sp[(-56)+40]
 10213  01056A  0EF0               	movlw	-16
 10214  01056C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10215  010572  0EF1               	movlw	-15
 10216  010574  0060  F103  FFE3   	movff	btemp+11,plusw1
 10217  01057A  D00C               	goto	l9171
 10218  01057C                     l9163:
 10219                           
 10220                           ;stkvar	_p @ sp[(-56)+40]
 10221  01057C  0EF0               	movlw	-16
 10222  01057E  0060  F083  FFE3   	movff	_prec,plusw1
 10223  010584  0EF1               	movlw	-15
 10224  010586  0060  F087  FFE3   	movff	_prec+1,plusw1
 10225  01058C  D003               	goto	l9171
 10226  01058E                     l9165:
 10227                           
 10228                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 10229  01058E  AE21               	btfss	(_prec+1)^0,7,c
 10230  010590  D7F5               	goto	l9163
 10231  010592  D7E7               	goto	u8930
 10232  010594                     l9171:
 10233                           
 10234                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 10235                           ;stkvar	_mode @ sp[(-56)+54]
 10236  010594  0EFE               	movlw	-2
 10237  010596  006F FF8C  F035    	movff	plusw1,btemp
 10238  01059C  0E67               	movlw	103
 10239  01059E  1835               	xorwf	btemp^0,w,c
 10240  0105A0  A4D8               	btfss	status,2,c
 10241  0105A2  D02F               	goto	l9181
 10242                           
 10243                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 10244                           ;stkvar	_e @ sp[(-56)+34]
 10245  0105A4  0EEB               	movlw	-21
 10246  0105A6  AEE3               	btfss	plusw1,7,c
 10247  0105A8  D00E               	goto	u8960
 10248  0105AA  0EEA               	movlw	-22
 10249  0105AC  006F FF8C  F035    	movff	plusw1,btemp
 10250  0105B2  0EFC               	movlw	252
 10251  0105B4  5E35               	subwf	btemp^0,f,c
 10252  0105B6  0EEB               	movlw	-21
 10253  0105B8  006F FF8C  F035    	movff	plusw1,btemp
 10254  0105BE  0EFF               	movlw	255
 10255  0105C0  5A35               	subwfb	btemp^0,f,c
 10256  0105C2  A0D8               	btfss	status,0,c
 10257  0105C4  D018               	goto	l9179
 10258  0105C6                     u8960:
 10259                           
 10260                           ;stkvar	_e @ sp[(-56)+34]
 10261                           ;stkvar	_p @ sp[(-56)+40]
 10262  0105C6  0EF0               	movlw	-16
 10263  0105C8  50E3               	movf	plusw1,w,c
 10264  0105CA  0FFF               	addlw	255
 10265  0105CC  6E3F               	movwf	(btemp+10)^0,c
 10266  0105CE  0EF1               	movlw	-15
 10267  0105D0  006F FF8C  F040    	movff	plusw1,btemp+11
 10268  0105D6  0EFF               	movlw	255
 10269  0105D8  2240               	addwfc	(btemp+11)^0,f,c
 10270  0105DA  0EEA               	movlw	-22
 10271  0105DC  50E3               	movf	plusw1,w,c
 10272  0105DE  5C3F               	subwf	(btemp+10)^0,w,c
 10273  0105E0  5040               	movf	(btemp+11)^0,w,c
 10274  0105E2  0A80               	xorlw	128
 10275  0105E4  6E35               	movwf	btemp^0,c
 10276  0105E6  0EEB               	movlw	-21
 10277  0105E8  50E3               	movf	plusw1,w,c
 10278  0105EA  0A80               	xorlw	128
 10279  0105EC  5835               	subwfb	btemp^0,w,c
 10280  0105EE  A0D8               	btfss	status,0,c
 10281  0105F0  D002               	goto	l9179
 10282                           
 10283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 10284  0105F2  0E66               	movlw	102
 10285  0105F4  D001               	goto	L8
 10286  0105F6                     l9179:
 10287                           
 10288                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 10289  0105F6  0E65               	movlw	101
 10290  0105F8                     L8:
 10291  0105F8  6E40               	movwf	(btemp+11)^0,c
 10292                           
 10293                           ;stkvar	_nmode @ sp[(-56)+55]
 10294  0105FA  0EFF               	movlw	-1
 10295  0105FC  0060  F103  FFE3   	movff	btemp+11,plusw1
 10296  010602                     l9181:
 10297                           
 10298                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 10299                           ;stkvar	_p @ sp[(-56)+40]
 10300                           ;stkvar	_m @ sp[(-56)+48]
 10301  010602  0EF0               	movlw	-16
 10302  010604  006F FF8C  F035    	movff	plusw1,btemp
 10303  01060A  0EF8               	movlw	-8
 10304  01060C  0060  F0D7  FFE3   	movff	btemp,plusw1
 10305  010612  0EF1               	movlw	-15
 10306  010614  006F FF8C  F035    	movff	plusw1,btemp
 10307  01061A  0EF9               	movlw	-7
 10308  01061C  0060  F0D7  FFE3   	movff	btemp,plusw1
 10309                           
 10310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 10311                           ;stkvar	_mode @ sp[(-56)+54]
 10312  010622  0EFE               	movlw	-2
 10313  010624  006F FF8C  F035    	movff	plusw1,btemp
 10314  01062A  0E67               	movlw	103
 10315  01062C  1835               	xorwf	btemp^0,w,c
 10316  01062E  A4D8               	btfss	status,2,c
 10317  010630  D00B               	goto	u9000
 10318                           
 10319                           ;stkvar	_nmode @ sp[(-56)+55]
 10320  010632  0EFF               	movlw	-1
 10321  010634  006F FF8C  F035    	movff	plusw1,btemp
 10322  01063A  0E66               	movlw	102
 10323  01063C  1835               	xorwf	btemp^0,w,c
 10324  01063E  A4D8               	btfss	status,2,c
 10325  010640  D014               	goto	l1825
 10326                           
 10327                           ;stkvar	_e @ sp[(-56)+34]
 10328  010642  0EEB               	movlw	-21
 10329  010644  AEE3               	btfss	plusw1,7,c
 10330  010646  D011               	goto	l1825
 10331  010648                     u9000:
 10332                           
 10333                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 10334                           ;stkvar	_m @ sp[(-56)+48]
 10335  010648  0EF8               	movlw	-8
 10336  01064A  50E3               	movf	plusw1,w,c
 10337  01064C  0F01               	addlw	1
 10338  01064E  6E35               	movwf	btemp^0,c
 10339  010650  0EF8               	movlw	-8
 10340  010652  0060  F0D7  FFE3   	movff	btemp,plusw1
 10341  010658  6A35               	clrf	btemp^0,c
 10342  01065A  0EF9               	movlw	-7
 10343  01065C  50E3               	movf	plusw1,w,c
 10344  01065E  2035               	addwfc	btemp^0,w,c
 10345  010660  6E35               	movwf	btemp^0,c
 10346  010662  0EF9               	movlw	-7
 10347  010664  0060  F0D7  FFE3   	movff	btemp,plusw1
 10348  01066A                     l1825:
 10349                           
 10350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 10351                           ;stkvar	_nmode @ sp[(-56)+55]
 10352  01066A  0EFF               	movlw	-1
 10353  01066C  006F FF8C  F035    	movff	plusw1,btemp
 10354  010672  0E66               	movlw	102
 10355  010674  1835               	xorwf	btemp^0,w,c
 10356  010676  A4D8               	btfss	status,2,c
 10357  010678  D03B               	goto	l9201
 10358                           
 10359                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 10360                           ;stkvar	_e @ sp[(-56)+34]
 10361  01067A  0EEB               	movlw	-21
 10362  01067C  AEE3               	btfss	plusw1,7,c
 10363  01067E  D01C               	goto	l9197
 10364                           
 10365                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 10366  010680  0E00               	movlw	0
 10367  010682  6E3D               	movwf	(btemp+8)^0,c
 10368  010684  0E00               	movlw	0
 10369  010686  6E3E               	movwf	(btemp+9)^0,c
 10370  010688  0E80               	movlw	128
 10371  01068A  6E3F               	movwf	(btemp+10)^0,c
 10372  01068C  0E3F               	movlw	63
 10373  01068E  6E40               	movwf	(btemp+11)^0,c
 10374                           
 10375                           ;stkvar	_u @ sp[(-56)+12]
 10376  010690  0ED4               	movlw	-44
 10377  010692  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 10378  010698  0ED5               	movlw	-43
 10379  01069A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 10380  0106A0  0ED6               	movlw	-42
 10381  0106A2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10382  0106A8  0ED7               	movlw	-41
 10383  0106AA  0060  F103  FFE3   	movff	btemp+11,plusw1
 10384                           
 10385                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 10386                           ;stkvar	_e @ sp[(-56)+34]
 10387  0106B0  0EEA               	movlw	-22
 10388  0106B2  6AE3               	clrf	plusw1,c
 10389  0106B4  0EEB               	movlw	-21
 10390  0106B6  6AE3               	clrf	plusw1,c
 10391  0106B8                     l9197:
 10392                           
 10393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 10394                           ;stkvar	_mode @ sp[(-56)+54]
 10395  0106B8  0EFE               	movlw	-2
 10396  0106BA  006F FF8C  F035    	movff	plusw1,btemp
 10397  0106C0  0E67               	movlw	103
 10398  0106C2  1835               	xorwf	btemp^0,w,c
 10399  0106C4  B4D8               	btfsc	status,2,c
 10400  0106C6  D014               	goto	l9201
 10401                           
 10402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 10403                           ;stkvar	_e @ sp[(-56)+34]
 10404                           ;stkvar	_m @ sp[(-56)+48]
 10405  0106C8  0EF8               	movlw	-8
 10406  0106CA  50E3               	movf	plusw1,w,c
 10407  0106CC  6E35               	movwf	btemp^0,c
 10408  0106CE  0EEA               	movlw	-22
 10409  0106D0  50E3               	movf	plusw1,w,c
 10410  0106D2  2635               	addwf	btemp^0,f,c
 10411  0106D4  0EF8               	movlw	-8
 10412  0106D6  0060  F0D7  FFE3   	movff	btemp,plusw1
 10413  0106DC  0EF9               	movlw	-7
 10414  0106DE  50E3               	movf	plusw1,w,c
 10415  0106E0  6E35               	movwf	btemp^0,c
 10416  0106E2  0EEB               	movlw	-21
 10417  0106E4  50E3               	movf	plusw1,w,c
 10418  0106E6  2235               	addwfc	btemp^0,f,c
 10419  0106E8  0EF9               	movlw	-7
 10420  0106EA  0060  F0D7  FFE3   	movff	btemp,plusw1
 10421  0106F0                     l9201:
 10422                           
 10423                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 10424                           ;stkvar	_i @ sp[(-56)+36]
 10425  0106F0  0EEC               	movlw	-20
 10426  0106F2  6AE3               	clrf	plusw1,c
 10427  0106F4  0EED               	movlw	-19
 10428  0106F6  6AE3               	clrf	plusw1,c
 10429                           
 10430                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 10431                           ;stkvar	_g @ sp[(-56)+16]
 10432  0106F8  0ED8               	movlw	-40
 10433  0106FA  006F FF8C  F03D    	movff	plusw1,btemp+8
 10434  010700  0ED9               	movlw	-39
 10435  010702  006F FF8C  F03E    	movff	plusw1,btemp+9
 10436  010708  0EDA               	movlw	-38
 10437  01070A  006F FF8C  F03F    	movff	plusw1,btemp+10
 10438  010710  0EDB               	movlw	-37
 10439  010712  006F FF8C  F040    	movff	plusw1,btemp+11
 10440                           
 10441                           ;stkvar	_h @ sp[(-56)+24]
 10442  010718  0EE0               	movlw	-32
 10443  01071A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 10444  010720  0EE1               	movlw	-31
 10445  010722  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 10446  010728  0EE2               	movlw	-30
 10447  01072A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10448  010730  0EE3               	movlw	-29
 10449  010732  0060  F103  FFE3   	movff	btemp+11,plusw1
 10450                           
 10451                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 10452                           ;stkvar	_u @ sp[(-56)+12]
 10453  010738  0ED4               	movlw	-44
 10454  01073A  006F FF8C  F03D    	movff	plusw1,btemp+8
 10455  010740  0ED5               	movlw	-43
 10456  010742  006F FF8C  F03E    	movff	plusw1,btemp+9
 10457  010748  0ED6               	movlw	-42
 10458  01074A  006F FF8C  F03F    	movff	plusw1,btemp+10
 10459  010750  0ED7               	movlw	-41
 10460  010752  006F FF8C  F040    	movff	plusw1,btemp+11
 10461                           
 10462                           ;stkvar	_ou @ sp[(-56)+28]
 10463  010758  0EE4               	movlw	-28
 10464  01075A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 10465  010760  0EE5               	movlw	-27
 10466  010762  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 10467  010768  0EE6               	movlw	-26
 10468  01076A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10469  010770  0EE7               	movlw	-25
 10470  010772  0060  F103  FFE3   	movff	btemp+11,plusw1
 10471                           
 10472                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 10473  010778  D0D6               	goto	l9217
 10474  01077A                     l9207:
 10475                           
 10476                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 10477                           ;stkvar	_u @ sp[(-56)+12]
 10478  01077A  0ED4               	movlw	-44
 10479  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 10480  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 10481  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 10482  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 10483                           
 10484                           ;stkvar	_h @ sp[(-60)+24]
 10485  010794  0EDC               	movlw	-36
 10486  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 10487  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 10488  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 10489  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 10490  0107AE  ECB4  F096         	call	___fldiv	;wreg free
 10491  0107B2  0060  F0D7  FFE6   	movff	btemp,postinc1
 10492  0107B8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 10493  0107BE  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 10494  0107C4  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 10495  0107CA  EC52  F0A1         	call	_floorf	;wreg free
 10496                           
 10497                           ;stkvar	_l @ sp[(-56)+20]
 10498  0107CE  0EDC               	movlw	-36
 10499  0107D0  0060  F0D7  FFE3   	movff	btemp,plusw1
 10500  0107D6  0EDD               	movlw	-35
 10501  0107D8  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10502  0107DE  0EDE               	movlw	-34
 10503  0107E0  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10504  0107E6  0EDF               	movlw	-33
 10505  0107E8  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10506                           
 10507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 10508                           ;stkvar	_l @ sp[(-56)+20]
 10509  0107EE  0EDC               	movlw	-36
 10510  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 10511  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 10512  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 10513  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 10514  010808  EC11  F0AE         	call	___fltol	;wreg free
 10515  01080C  0060  F0D4  F03F   	movff	btemp,btemp+10
 10516  010812  0060  F0D8  F040   	movff	btemp+1,btemp+11
 10517                           
 10518                           ;stkvar	_d @ sp[(-56)+44]
 10519  010818  0EF4               	movlw	-12
 10520  01081A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10521  010820  0EF5               	movlw	-11
 10522  010822  0060  F103  FFE3   	movff	btemp+11,plusw1
 10523                           
 10524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 10525                           ;stkvar	_u @ sp[(-56)+12]
 10526  010828  0ED4               	movlw	-44
 10527  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 10528  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 10529  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 10530  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 10531                           
 10532                           ;stkvar	_l @ sp[(-60)+20]
 10533  010842  0ED8               	movlw	-40
 10534  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 10535  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 10536  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 10537  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 10538  01085C  ECC1  F08E         	call	___flmul	;wreg free
 10539  010860  0060  F0D7  FFE6   	movff	btemp,postinc1
 10540  010866  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 10541  01086C  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 10542  010872  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 10543                           
 10544                           ;stkvar	_h @ sp[(-60)+24]
 10545  010878  0EDC               	movlw	-36
 10546  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 10547  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 10548  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 10549  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 10550  010892  ECA4  F0BB         	call	___flsub	;wreg free
 10551                           
 10552                           ;stkvar	_h @ sp[(-56)+24]
 10553  010896  0EE0               	movlw	-32
 10554  010898  0060  F0D7  FFE3   	movff	btemp,plusw1
 10555  01089E  0EE1               	movlw	-31
 10556  0108A0  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10557  0108A6  0EE2               	movlw	-30
 10558  0108A8  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10559  0108AE  0EE3               	movlw	-29
 10560  0108B0  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10561                           
 10562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 10563  0108B6  0E00               	movlw	0
 10564  0108B8  6EE6               	movwf	postinc1,c
 10565  0108BA  0E00               	movlw	0
 10566  0108BC  6EE6               	movwf	postinc1,c
 10567  0108BE  0E20               	movlw	32
 10568  0108C0  6EE6               	movwf	postinc1,c
 10569  0108C2  0E41               	movlw	65
 10570  0108C4  6EE6               	movwf	postinc1,c
 10571                           
 10572                           ;stkvar	_u @ sp[(-60)+12]
 10573  0108C6  0ED0               	movlw	-48
 10574  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 10575  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 10576  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 10577  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 10578  0108E0  ECB4  F096         	call	___fldiv	;wreg free
 10579                           
 10580                           ;stkvar	_u @ sp[(-56)+12]
 10581  0108E4  0ED4               	movlw	-44
 10582  0108E6  0060  F0D7  FFE3   	movff	btemp,plusw1
 10583  0108EC  0ED5               	movlw	-43
 10584  0108EE  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10585  0108F4  0ED6               	movlw	-42
 10586  0108F6  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10587  0108FC  0ED7               	movlw	-41
 10588  0108FE  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10589                           
 10590                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 10591                           ;stkvar	_i @ sp[(-56)+36]
 10592  010904  0EEC               	movlw	-20
 10593  010906  50E3               	movf	plusw1,w,c
 10594  010908  0F01               	addlw	1
 10595  01090A  6E35               	movwf	btemp^0,c
 10596  01090C  0EEC               	movlw	-20
 10597  01090E  0060  F0D7  FFE3   	movff	btemp,plusw1
 10598  010914  6A35               	clrf	btemp^0,c
 10599  010916  0EED               	movlw	-19
 10600  010918  50E3               	movf	plusw1,w,c
 10601  01091A  2035               	addwfc	btemp^0,w,c
 10602  01091C  6E35               	movwf	btemp^0,c
 10603  01091E  0EED               	movlw	-19
 10604  010920  0060  F0D7  FFE3   	movff	btemp,plusw1
 10605  010926                     l9217:
 10606                           
 10607                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 10608                           ;stkvar	_m @ sp[(-56)+48]
 10609                           ;stkvar	_i @ sp[(-56)+36]
 10610  010926  50E1               	movf	fsr1l,w,c
 10611  010928  0FEC               	addlw	-20
 10612  01092A  6ED9               	movwf	fsr2l,c
 10613  01092C  50E2               	movf	fsr1h,w,c
 10614  01092E  6EDA               	movwf	fsr2h,c
 10615  010930  0EFF               	movlw	255
 10616  010932  22DA               	addwfc	fsr2h,f,c
 10617  010934  0EF8               	movlw	-8
 10618  010936  50E3               	movf	plusw1,w,c
 10619  010938  5CDE               	subwf	postinc2,w,c
 10620  01093A  50DE               	movf	postinc2,w,c
 10621  01093C  0A80               	xorlw	128
 10622  01093E  6E35               	movwf	btemp^0,c
 10623  010940  0EF9               	movlw	-7
 10624  010942  50E3               	movf	plusw1,w,c
 10625  010944  0A80               	xorlw	128
 10626  010946  5835               	subwfb	btemp^0,w,c
 10627  010948  A0D8               	btfss	status,0,c
 10628  01094A  D717               	goto	l9207
 10629                           
 10630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 10631  01094C  0E00               	movlw	0
 10632  01094E  6EE6               	movwf	postinc1,c
 10633  010950  0E00               	movlw	0
 10634  010952  6EE6               	movwf	postinc1,c
 10635  010954  0EA0               	movlw	160
 10636  010956  6EE6               	movwf	postinc1,c
 10637  010958  0E40               	movlw	64
 10638  01095A  6EE6               	movwf	postinc1,c
 10639                           
 10640                           ;stkvar	_u @ sp[(-60)+12]
 10641  01095C  0ED0               	movlw	-48
 10642  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 10643  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 10644  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 10645  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 10646  010976  ECC1  F08E         	call	___flmul	;wreg free
 10647                           
 10648                           ;stkvar	_l @ sp[(-56)+20]
 10649  01097A  0EDC               	movlw	-36
 10650  01097C  0060  F0D7  FFE3   	movff	btemp,plusw1
 10651  010982  0EDD               	movlw	-35
 10652  010984  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10653  01098A  0EDE               	movlw	-34
 10654  01098C  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10655  010992  0EDF               	movlw	-33
 10656  010994  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10657                           
 10658                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 10659                           ;stkvar	_l @ sp[(-56)+20]
 10660  01099A  0EDC               	movlw	-36
 10661  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 10662  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 10663  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 10664  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 10665                           
 10666                           ;stkvar	_h @ sp[(-60)+24]
 10667  0109B4  0EDC               	movlw	-36
 10668  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 10669  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 10670  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 10671  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 10672  0109CE  ECCA  F0AE         	call	___flge	;wreg free
 10673  0109D2  A035               	btfss	btemp& (0+255),0,c
 10674  0109D4  D021               	goto	u9070
 10675                           
 10676                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 10677                           ;stkvar	_l @ sp[(-56)+20]
 10678                           
 10679                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 10680                           
 10681                           ;stkvar	_l @ sp[(-56)+20]
 10682                           
 10683                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 10684  0109D6  0EDC               	movlw	-36
 10685  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 10686  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 10687  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 10688  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 10689                           
 10690                           ;stkvar	_h @ sp[(-60)+24]
 10691  0109F0  0EDC               	movlw	-36
 10692  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 10693  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 10694  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 10695  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 10696  010A0A  ECAF  F0B4         	call	___fleq	;wreg free
 10697  010A0E  A035               	btfss	btemp& (0+255),0,c
 10698  010A10  D01B               	goto	l9231
 10699                           
 10700                           ;stkvar	_d @ sp[(-56)+44]
 10701  010A12  0EF4               	movlw	-12
 10702  010A14  B0E3               	btfsc	plusw1,0,c
 10703  010A16  D018               	goto	l9231
 10704  010A18                     u9070:
 10705                           
 10706                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 10707  010A18  0E00               	movlw	0
 10708  010A1A  6E3D               	movwf	(btemp+8)^0,c
 10709  010A1C  0E00               	movlw	0
 10710  010A1E  6E3E               	movwf	(btemp+9)^0,c
 10711  010A20  0E00               	movlw	0
 10712  010A22  6E3F               	movwf	(btemp+10)^0,c
 10713  010A24  0E00               	movlw	0
 10714  010A26  6E40               	movwf	(btemp+11)^0,c
 10715                           
 10716                           ;stkvar	_l @ sp[(-56)+20]
 10717  010A28  0EDC               	movlw	-36
 10718  010A2A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 10719  010A30  0EDD               	movlw	-35
 10720  010A32  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 10721  010A38  0EDE               	movlw	-34
 10722  010A3A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10723  010A40  0EDF               	movlw	-33
 10724  010A42  0060  F103  FFE3   	movff	btemp+11,plusw1
 10725  010A48                     l9231:
 10726                           
 10727                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 10728                           ;stkvar	_l @ sp[(-56)+20]
 10729  010A48  0EDC               	movlw	-36
 10730  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 10731  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 10732  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 10733  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 10734                           
 10735                           ;stkvar	_g @ sp[(-60)+16]
 10736  010A62  0ED4               	movlw	-44
 10737  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 10738  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 10739  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 10740  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 10741  010A7C  ECD6  F092         	call	___fladd	;wreg free
 10742                           
 10743                           ;stkvar	_h @ sp[(-56)+24]
 10744  010A80  0EE0               	movlw	-32
 10745  010A82  0060  F0D7  FFE3   	movff	btemp,plusw1
 10746  010A88  0EE1               	movlw	-31
 10747  010A8A  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10748  010A90  0EE2               	movlw	-30
 10749  010A92  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10750  010A98  0EE3               	movlw	-29
 10751  010A9A  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10752                           
 10753                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 10754                           ;stkvar	_ou @ sp[(-56)+28]
 10755  010AA0  0EE4               	movlw	-28
 10756  010AA2  006F FF8C  F03D    	movff	plusw1,btemp+8
 10757  010AA8  0EE5               	movlw	-27
 10758  010AAA  006F FF8C  F03E    	movff	plusw1,btemp+9
 10759  010AB0  0EE6               	movlw	-26
 10760  010AB2  006F FF8C  F03F    	movff	plusw1,btemp+10
 10761  010AB8  0EE7               	movlw	-25
 10762  010ABA  006F FF8C  F040    	movff	plusw1,btemp+11
 10763                           
 10764                           ;stkvar	_u @ sp[(-56)+12]
 10765  010AC0  0ED4               	movlw	-44
 10766  010AC2  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 10767  010AC8  0ED5               	movlw	-43
 10768  010ACA  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 10769  010AD0  0ED6               	movlw	-42
 10770  010AD2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10771  010AD8  0ED7               	movlw	-41
 10772  010ADA  0060  F103  FFE3   	movff	btemp+11,plusw1
 10773                           
 10774                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 10775                           ;stkvar	_nmode @ sp[(-56)+55]
 10776  010AE0  0EFF               	movlw	-1
 10777  010AE2  006F FF8C  F035    	movff	plusw1,btemp
 10778  010AE8  0E65               	movlw	101
 10779  010AEA  1835               	xorwf	btemp^0,w,c
 10780  010AEC  B4D8               	btfsc	status,2,c
 10781  010AEE  D011               	goto	l9239
 10782                           
 10783                           ;stkvar	_e @ sp[(-56)+34]
 10784                           ;stkvar	_ne @ sp[(-56)+46]
 10785  010AF0  0EEA               	movlw	-22
 10786  010AF2  006F FF8C  F035    	movff	plusw1,btemp
 10787  010AF8  0EF6               	movlw	-10
 10788  010AFA  0060  F0D7  FFE3   	movff	btemp,plusw1
 10789  010B00  0EEB               	movlw	-21
 10790  010B02  006F FF8C  F035    	movff	plusw1,btemp
 10791  010B08  0EF7               	movlw	-9
 10792  010B0A  0060  F0D7  FFE3   	movff	btemp,plusw1
 10793  010B10  D004               	goto	l1840
 10794  010B12                     l9239:
 10795                           
 10796                           ;stkvar	_ne @ sp[(-56)+46]
 10797  010B12  0EF6               	movlw	-10
 10798  010B14  6AE3               	clrf	plusw1,c
 10799  010B16  0EF7               	movlw	-9
 10800  010B18  6AE3               	clrf	plusw1,c
 10801  010B1A                     l1840:
 10802                           
 10803                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 10804                           ;stkvar	_pp @ sp[(-56)+50]
 10805  010B1A  0EFA               	movlw	-6
 10806  010B1C  6AE3               	clrf	plusw1,c
 10807  010B1E  0EFB               	movlw	-5
 10808  010B20  6AE3               	clrf	plusw1,c
 10809                           
 10810                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 10811                           ;stkvar	_t @ sp[(-56)+52]
 10812  010B22  0EFC               	movlw	-4
 10813  010B24  6AE3               	clrf	plusw1,c
 10814  010B26  0EFD               	movlw	-3
 10815  010B28  6AE3               	clrf	plusw1,c
 10816                           
 10817                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 10818                           ;stkvar	_i @ sp[(-56)+36]
 10819  010B2A  0EEC               	movlw	-20
 10820  010B2C  6AE3               	clrf	plusw1,c
 10821  010B2E  0EED               	movlw	-19
 10822  010B30  6AE3               	clrf	plusw1,c
 10823                           
 10824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 10825  010B32  D1B7               	goto	l9291
 10826  010B34                     l9241:
 10827                           
 10828                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 10829                           ;stkvar	_u @ sp[(-56)+12]
 10830  010B34  0ED4               	movlw	-44
 10831  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 10832  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 10833  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 10834  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 10835                           
 10836                           ;stkvar	_h @ sp[(-60)+24]
 10837  010B4E  0EDC               	movlw	-36
 10838  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 10839  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 10840  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 10841  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 10842  010B68  ECB4  F096         	call	___fldiv	;wreg free
 10843  010B6C  0060  F0D7  FFE6   	movff	btemp,postinc1
 10844  010B72  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 10845  010B78  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 10846  010B7E  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 10847  010B84  EC52  F0A1         	call	_floorf	;wreg free
 10848                           
 10849                           ;stkvar	_l @ sp[(-56)+20]
 10850  010B88  0EDC               	movlw	-36
 10851  010B8A  0060  F0D7  FFE3   	movff	btemp,plusw1
 10852  010B90  0EDD               	movlw	-35
 10853  010B92  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10854  010B98  0EDE               	movlw	-34
 10855  010B9A  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10856  010BA0  0EDF               	movlw	-33
 10857  010BA2  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10858                           
 10859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 10860                           ;stkvar	_l @ sp[(-56)+20]
 10861  010BA8  0EDC               	movlw	-36
 10862  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 10863  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 10864  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 10865  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 10866  010BC2  EC11  F0AE         	call	___fltol	;wreg free
 10867  010BC6  0060  F0D4  F03F   	movff	btemp,btemp+10
 10868  010BCC  0060  F0D8  F040   	movff	btemp+1,btemp+11
 10869                           
 10870                           ;stkvar	_d @ sp[(-56)+44]
 10871  010BD2  0EF4               	movlw	-12
 10872  010BD4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10873  010BDA  0EF5               	movlw	-11
 10874  010BDC  0060  F103  FFE3   	movff	btemp+11,plusw1
 10875                           
 10876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 10877  010BE2  B822               	btfsc	_flags^0,4,c
 10878  010BE4  D026               	goto	l9255
 10879                           
 10880                           ;stkvar	_d @ sp[(-56)+44]
 10881  010BE6  0EF4               	movlw	-12
 10882  010BE8  006F FF8C  F035    	movff	plusw1,btemp
 10883  010BEE  0EF5               	movlw	-11
 10884  010BF0  50E3               	movf	plusw1,w,c
 10885  010BF2  1035               	iorwf	btemp^0,w,c
 10886  010BF4  A4D8               	btfss	status,2,c
 10887  010BF6  D01D               	goto	l9255
 10888                           
 10889                           ;stkvar	_mode @ sp[(-56)+54]
 10890  010BF8  0EFE               	movlw	-2
 10891  010BFA  006F FF8C  F035    	movff	plusw1,btemp
 10892  010C00  0E67               	movlw	103
 10893  010C02  1835               	xorwf	btemp^0,w,c
 10894  010C04  A4D8               	btfss	status,2,c
 10895  010C06  D015               	goto	l9255
 10896                           
 10897                           ;stkvar	_ne @ sp[(-56)+46]
 10898  010C08  0EF7               	movlw	-9
 10899  010C0A  AEE3               	btfss	plusw1,7,c
 10900  010C0C  D012               	goto	l9255
 10901                           
 10902                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 10903                           ;stkvar	_t @ sp[(-56)+52]
 10904  010C0E  0EFC               	movlw	-4
 10905  010C10  50E3               	movf	plusw1,w,c
 10906  010C12  0F01               	addlw	1
 10907  010C14  6E35               	movwf	btemp^0,c
 10908  010C16  0EFC               	movlw	-4
 10909  010C18  0060  F0D7  FFE3   	movff	btemp,plusw1
 10910  010C1E  6A35               	clrf	btemp^0,c
 10911  010C20  0EFD               	movlw	-3
 10912  010C22  50E3               	movf	plusw1,w,c
 10913  010C24  2035               	addwfc	btemp^0,w,c
 10914  010C26  6E35               	movwf	btemp^0,c
 10915  010C28  0EFD               	movlw	-3
 10916  010C2A  0060  F0D7  FFE3   	movff	btemp,plusw1
 10917                           
 10918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 10919  010C30  D0AF               	goto	l9283
 10920  010C32                     l9255:
 10921                           
 10922                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 10923                           ;stkvar	_pp @ sp[(-56)+50]
 10924  010C32  0EFA               	movlw	-6
 10925  010C34  006F FF8C  F035    	movff	plusw1,btemp
 10926  010C3A  0EFB               	movlw	-5
 10927  010C3C  50E3               	movf	plusw1,w,c
 10928  010C3E  1035               	iorwf	btemp^0,w,c
 10929  010C40  A4D8               	btfss	status,2,c
 10930  010C42  D070               	goto	l9275
 10931                           
 10932                           ;stkvar	_ne @ sp[(-56)+46]
 10933  010C44  0EF7               	movlw	-9
 10934  010C46  AEE3               	btfss	plusw1,7,c
 10935  010C48  D06D               	goto	l9275
 10936                           
 10937                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 10938                           ;stkvar	_n @ sp[(-56)+32]
 10939  010C4A  0EE8               	movlw	-24
 10940  010C4C  006F FF8C  F03F    	movff	plusw1,btemp+10
 10941  010C52  0EE9               	movlw	-23
 10942  010C54  006F FF8C  F040    	movff	plusw1,btemp+11
 10943  010C5A  0EAB               	movlw	low _dbuf
 10944  010C5C  243F               	addwf	(btemp+10)^0,w,c
 10945  010C5E  6ED9               	movwf	fsr2l,c
 10946  010C60  0E01               	movlw	high _dbuf
 10947  010C62  2040               	addwfc	(btemp+11)^0,w,c
 10948  010C64  6EDA               	movwf	fsr2h,c
 10949  010C66  0E2E               	movlw	46
 10950  010C68  6EDF               	movwf	indf2,c
 10951                           
 10952                           ;stkvar	_n @ sp[(-56)+32]
 10953  010C6A  0EE8               	movlw	-24
 10954  010C6C  50E3               	movf	plusw1,w,c
 10955  010C6E  0F01               	addlw	1
 10956  010C70  6E35               	movwf	btemp^0,c
 10957  010C72  0EE8               	movlw	-24
 10958  010C74  0060  F0D7  FFE3   	movff	btemp,plusw1
 10959  010C7A  6A35               	clrf	btemp^0,c
 10960  010C7C  0EE9               	movlw	-23
 10961  010C7E  50E3               	movf	plusw1,w,c
 10962  010C80  2035               	addwfc	btemp^0,w,c
 10963  010C82  6E35               	movwf	btemp^0,c
 10964  010C84  0EE9               	movlw	-23
 10965  010C86  0060  F0D7  FFE3   	movff	btemp,plusw1
 10966                           
 10967                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 10968                           ;stkvar	_w @ sp[(-56)+38]
 10969  010C8C  50E1               	movf	fsr1l,w,c
 10970  010C8E  0FEE               	addlw	-18
 10971  010C90  6ED9               	movwf	fsr2l,c
 10972  010C92  50E2               	movf	fsr1h,w,c
 10973  010C94  6EDA               	movwf	fsr2h,c
 10974  010C96  0EFF               	movlw	255
 10975  010C98  22DA               	addwfc	fsr2h,f,c
 10976  010C9A  06DE               	decf	postinc2,f,c
 10977  010C9C  0E00               	movlw	0
 10978  010C9E  5ADD               	subwfb	postdec2,f,c
 10979                           
 10980                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 10981  010CA0  0E01               	movlw	1
 10982  010CA2  6E3F               	movwf	(btemp+10)^0,c
 10983  010CA4  0E00               	movlw	0
 10984  010CA6  6E40               	movwf	(btemp+11)^0,c
 10985                           
 10986                           ;stkvar	_pp @ sp[(-56)+50]
 10987  010CA8  0EFA               	movlw	-6
 10988  010CAA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10989  010CB0  0EFB               	movlw	-5
 10990  010CB2  0060  F103  FFE3   	movff	btemp+11,plusw1
 10991  010CB8  D035               	goto	l9275
 10992  010CBA                     l9267:
 10993                           
 10994                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 10995                           ;stkvar	_n @ sp[(-56)+32]
 10996  010CBA  0EE8               	movlw	-24
 10997  010CBC  006F FF8C  F03F    	movff	plusw1,btemp+10
 10998  010CC2  0EE9               	movlw	-23
 10999  010CC4  006F FF8C  F040    	movff	plusw1,btemp+11
 11000  010CCA  0EAB               	movlw	low _dbuf
 11001  010CCC  243F               	addwf	(btemp+10)^0,w,c
 11002  010CCE  6ED9               	movwf	fsr2l,c
 11003  010CD0  0E01               	movlw	high _dbuf
 11004  010CD2  2040               	addwfc	(btemp+11)^0,w,c
 11005  010CD4  6EDA               	movwf	fsr2h,c
 11006  010CD6  0E30               	movlw	48
 11007  010CD8  6EDF               	movwf	indf2,c
 11008                           
 11009                           ;stkvar	_n @ sp[(-56)+32]
 11010  010CDA  0EE8               	movlw	-24
 11011  010CDC  50E3               	movf	plusw1,w,c
 11012  010CDE  0F01               	addlw	1
 11013  010CE0  6E35               	movwf	btemp^0,c
 11014  010CE2  0EE8               	movlw	-24
 11015  010CE4  0060  F0D7  FFE3   	movff	btemp,plusw1
 11016  010CEA  6A35               	clrf	btemp^0,c
 11017  010CEC  0EE9               	movlw	-23
 11018  010CEE  50E3               	movf	plusw1,w,c
 11019  010CF0  2035               	addwfc	btemp^0,w,c
 11020  010CF2  6E35               	movwf	btemp^0,c
 11021  010CF4  0EE9               	movlw	-23
 11022  010CF6  0060  F0D7  FFE3   	movff	btemp,plusw1
 11023                           
 11024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 11025                           ;stkvar	_w @ sp[(-56)+38]
 11026  010CFC  50E1               	movf	fsr1l,w,c
 11027  010CFE  0FEE               	addlw	-18
 11028  010D00  6ED9               	movwf	fsr2l,c
 11029  010D02  50E2               	movf	fsr1h,w,c
 11030  010D04  6EDA               	movwf	fsr2h,c
 11031  010D06  0EFF               	movlw	255
 11032  010D08  22DA               	addwfc	fsr2h,f,c
 11033  010D0A  06DE               	decf	postinc2,f,c
 11034  010D0C  0E00               	movlw	0
 11035  010D0E  5ADD               	subwfb	postdec2,f,c
 11036                           
 11037                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 11038                           ;stkvar	_t @ sp[(-56)+52]
 11039  010D10  50E1               	movf	fsr1l,w,c
 11040  010D12  0FFC               	addlw	-4
 11041  010D14  6ED9               	movwf	fsr2l,c
 11042  010D16  50E2               	movf	fsr1h,w,c
 11043  010D18  6EDA               	movwf	fsr2h,c
 11044  010D1A  0EFF               	movlw	255
 11045  010D1C  22DA               	addwfc	fsr2h,f,c
 11046  010D1E  06DE               	decf	postinc2,f,c
 11047  010D20  0E00               	movlw	0
 11048  010D22  5ADD               	subwfb	postdec2,f,c
 11049  010D24                     l9275:
 11050                           
 11051                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 11052                           ;stkvar	_t @ sp[(-56)+52]
 11053  010D24  0EFC               	movlw	-4
 11054  010D26  006F FF8C  F035    	movff	plusw1,btemp
 11055  010D2C  0EFD               	movlw	-3
 11056  010D2E  50E3               	movf	plusw1,w,c
 11057  010D30  1035               	iorwf	btemp^0,w,c
 11058  010D32  A4D8               	btfss	status,2,c
 11059  010D34  D7C2               	goto	l9267
 11060                           
 11061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 11062                           ;stkvar	_n @ sp[(-56)+32]
 11063  010D36  0EE8               	movlw	-24
 11064  010D38  006F FF8C  F03F    	movff	plusw1,btemp+10
 11065  010D3E  0EE9               	movlw	-23
 11066  010D40  006F FF8C  F040    	movff	plusw1,btemp+11
 11067  010D46  0EAB               	movlw	low _dbuf
 11068  010D48  243F               	addwf	(btemp+10)^0,w,c
 11069  010D4A  6ED9               	movwf	fsr2l,c
 11070  010D4C  0E01               	movlw	high _dbuf
 11071  010D4E  2040               	addwfc	(btemp+11)^0,w,c
 11072  010D50  6EDA               	movwf	fsr2h,c
 11073                           
 11074                           ;stkvar	_d @ sp[(-56)+44]
 11075  010D52  0EF4               	movlw	-12
 11076  010D54  50E3               	movf	plusw1,w,c
 11077  010D56  0F30               	addlw	48
 11078  010D58  6EDF               	movwf	indf2,c
 11079                           
 11080                           ;stkvar	_n @ sp[(-56)+32]
 11081  010D5A  0EE8               	movlw	-24
 11082  010D5C  50E3               	movf	plusw1,w,c
 11083  010D5E  0F01               	addlw	1
 11084  010D60  6E35               	movwf	btemp^0,c
 11085  010D62  0EE8               	movlw	-24
 11086  010D64  0060  F0D7  FFE3   	movff	btemp,plusw1
 11087  010D6A  6A35               	clrf	btemp^0,c
 11088  010D6C  0EE9               	movlw	-23
 11089  010D6E  50E3               	movf	plusw1,w,c
 11090  010D70  2035               	addwfc	btemp^0,w,c
 11091  010D72  6E35               	movwf	btemp^0,c
 11092  010D74  0EE9               	movlw	-23
 11093  010D76  0060  F0D7  FFE3   	movff	btemp,plusw1
 11094                           
 11095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 11096                           ;stkvar	_w @ sp[(-56)+38]
 11097  010D7C  50E1               	movf	fsr1l,w,c
 11098  010D7E  0FEE               	addlw	-18
 11099  010D80  6ED9               	movwf	fsr2l,c
 11100  010D82  50E2               	movf	fsr1h,w,c
 11101  010D84  6EDA               	movwf	fsr2h,c
 11102  010D86  0EFF               	movlw	255
 11103  010D88  22DA               	addwfc	fsr2h,f,c
 11104  010D8A  06DE               	decf	postinc2,f,c
 11105  010D8C  0E00               	movlw	0
 11106  010D8E  5ADD               	subwfb	postdec2,f,c
 11107  010D90                     l9283:
 11108                           
 11109                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 11110                           ;stkvar	_u @ sp[(-56)+12]
 11111  010D90  0ED4               	movlw	-44
 11112  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 11113  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 11114  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 11115  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 11116                           
 11117                           ;stkvar	_l @ sp[(-60)+20]
 11118  010DAA  0ED8               	movlw	-40
 11119  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 11120  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 11121  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 11122  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 11123  010DC4  ECC1  F08E         	call	___flmul	;wreg free
 11124  010DC8  0060  F0D7  FFE6   	movff	btemp,postinc1
 11125  010DCE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 11126  010DD4  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 11127  010DDA  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 11128                           
 11129                           ;stkvar	_h @ sp[(-60)+24]
 11130  010DE0  0EDC               	movlw	-36
 11131  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 11132  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 11133  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 11134  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 11135  010DFA  ECA4  F0BB         	call	___flsub	;wreg free
 11136                           
 11137                           ;stkvar	_h @ sp[(-56)+24]
 11138  010DFE  0EE0               	movlw	-32
 11139  010E00  0060  F0D7  FFE3   	movff	btemp,plusw1
 11140  010E06  0EE1               	movlw	-31
 11141  010E08  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 11142  010E0E  0EE2               	movlw	-30
 11143  010E10  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 11144  010E16  0EE3               	movlw	-29
 11145  010E18  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 11146                           
 11147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 11148  010E1E  0E00               	movlw	0
 11149  010E20  6EE6               	movwf	postinc1,c
 11150  010E22  0E00               	movlw	0
 11151  010E24  6EE6               	movwf	postinc1,c
 11152  010E26  0E20               	movlw	32
 11153  010E28  6EE6               	movwf	postinc1,c
 11154  010E2A  0E41               	movlw	65
 11155  010E2C  6EE6               	movwf	postinc1,c
 11156                           
 11157                           ;stkvar	_u @ sp[(-60)+12]
 11158  010E2E  0ED0               	movlw	-48
 11159  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 11160  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 11161  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 11162  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 11163  010E48  ECB4  F096         	call	___fldiv	;wreg free
 11164                           
 11165                           ;stkvar	_u @ sp[(-56)+12]
 11166  010E4C  0ED4               	movlw	-44
 11167  010E4E  0060  F0D7  FFE3   	movff	btemp,plusw1
 11168  010E54  0ED5               	movlw	-43
 11169  010E56  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 11170  010E5C  0ED6               	movlw	-42
 11171  010E5E  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 11172  010E64  0ED7               	movlw	-41
 11173  010E66  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 11174                           
 11175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 11176                           ;stkvar	_ne @ sp[(-56)+46]
 11177  010E6C  50E1               	movf	fsr1l,w,c
 11178  010E6E  0FF6               	addlw	-10
 11179  010E70  6ED9               	movwf	fsr2l,c
 11180  010E72  50E2               	movf	fsr1h,w,c
 11181  010E74  6EDA               	movwf	fsr2h,c
 11182  010E76  0EFF               	movlw	255
 11183  010E78  22DA               	addwfc	fsr2h,f,c
 11184  010E7A  06DE               	decf	postinc2,f,c
 11185  010E7C  0E00               	movlw	0
 11186  010E7E  5ADD               	subwfb	postdec2,f,c
 11187                           
 11188                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 11189                           ;stkvar	_i @ sp[(-56)+36]
 11190  010E80  0EEC               	movlw	-20
 11191  010E82  50E3               	movf	plusw1,w,c
 11192  010E84  0F01               	addlw	1
 11193  010E86  6E35               	movwf	btemp^0,c
 11194  010E88  0EEC               	movlw	-20
 11195  010E8A  0060  F0D7  FFE3   	movff	btemp,plusw1
 11196  010E90  6A35               	clrf	btemp^0,c
 11197  010E92  0EED               	movlw	-19
 11198  010E94  50E3               	movf	plusw1,w,c
 11199  010E96  2035               	addwfc	btemp^0,w,c
 11200  010E98  6E35               	movwf	btemp^0,c
 11201  010E9A  0EED               	movlw	-19
 11202  010E9C  0060  F0D7  FFE3   	movff	btemp,plusw1
 11203  010EA2                     l9291:
 11204                           
 11205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 11206                           ;stkvar	_m @ sp[(-56)+48]
 11207                           ;stkvar	_i @ sp[(-56)+36]
 11208  010EA2  50E1               	movf	fsr1l,w,c
 11209  010EA4  0FEC               	addlw	-20
 11210  010EA6  6ED9               	movwf	fsr2l,c
 11211  010EA8  50E2               	movf	fsr1h,w,c
 11212  010EAA  6EDA               	movwf	fsr2h,c
 11213  010EAC  0EFF               	movlw	255
 11214  010EAE  22DA               	addwfc	fsr2h,f,c
 11215  010EB0  0EF8               	movlw	-8
 11216  010EB2  50E3               	movf	plusw1,w,c
 11217  010EB4  5CDE               	subwf	postinc2,w,c
 11218  010EB6  50DE               	movf	postinc2,w,c
 11219  010EB8  0A80               	xorlw	128
 11220  010EBA  6E35               	movwf	btemp^0,c
 11221  010EBC  0EF9               	movlw	-7
 11222  010EBE  50E3               	movf	plusw1,w,c
 11223  010EC0  0A80               	xorlw	128
 11224  010EC2  5835               	subwfb	btemp^0,w,c
 11225  010EC4  B0D8               	btfsc	status,0,c
 11226  010EC6  D00E               	goto	u9170
 11227                           
 11228                           ;stkvar	_n @ sp[(-56)+32]
 11229  010EC8  0EE9               	movlw	-23
 11230  010ECA  BEE3               	btfsc	plusw1,7,c
 11231  010ECC  D633               	goto	l9241
 11232  010ECE  0EE9               	movlw	-23
 11233  010ED0  50E3               	movf	plusw1,w,c
 11234  010ED2  E108               	bnz	u9170
 11235  010ED4  0EE8               	movlw	-24
 11236  010ED6  006F FF8C  F035    	movff	plusw1,btemp
 11237  010EDC  0E4B               	movlw	75
 11238  010EDE  5E35               	subwf	btemp^0,f,c
 11239  010EE0  A0D8               	btfss	status,0,c
 11240  010EE2  D628               	goto	l9241
 11241  010EE4                     u9170:
 11242                           
 11243                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 11244                           ;stkvar	_pp @ sp[(-56)+50]
 11245  010EE4  0EFA               	movlw	-6
 11246  010EE6  006F FF8C  F035    	movff	plusw1,btemp
 11247  010EEC  0EFB               	movlw	-5
 11248  010EEE  50E3               	movf	plusw1,w,c
 11249  010EF0  1035               	iorwf	btemp^0,w,c
 11250  010EF2  B4D8               	btfsc	status,2,c
 11251  010EF4  A822               	btfss	_flags^0,4,c
 11252  010EF6  D021               	goto	l9303
 11253                           
 11254                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 11255                           ;stkvar	_n @ sp[(-56)+32]
 11256  010EF8  0EE8               	movlw	-24
 11257  010EFA  006F FF8C  F03F    	movff	plusw1,btemp+10
 11258  010F00  0EE9               	movlw	-23
 11259  010F02  006F FF8C  F040    	movff	plusw1,btemp+11
 11260  010F08  0EAB               	movlw	low _dbuf
 11261  010F0A  243F               	addwf	(btemp+10)^0,w,c
 11262  010F0C  6ED9               	movwf	fsr2l,c
 11263  010F0E  0E01               	movlw	high _dbuf
 11264  010F10  2040               	addwfc	(btemp+11)^0,w,c
 11265  010F12  6EDA               	movwf	fsr2h,c
 11266  010F14  0E2E               	movlw	46
 11267  010F16  6EDF               	movwf	indf2,c
 11268                           
 11269                           ;stkvar	_n @ sp[(-56)+32]
 11270  010F18  0EE8               	movlw	-24
 11271  010F1A  50E3               	movf	plusw1,w,c
 11272  010F1C  0F01               	addlw	1
 11273  010F1E  6E35               	movwf	btemp^0,c
 11274  010F20  0EE8               	movlw	-24
 11275  010F22  0060  F0D7  FFE3   	movff	btemp,plusw1
 11276  010F28  6A35               	clrf	btemp^0,c
 11277  010F2A  0EE9               	movlw	-23
 11278  010F2C  50E3               	movf	plusw1,w,c
 11279  010F2E  2035               	addwfc	btemp^0,w,c
 11280  010F30  6E35               	movwf	btemp^0,c
 11281  010F32  0EE9               	movlw	-23
 11282  010F34  0060  F0D7  FFE3   	movff	btemp,plusw1
 11283  010F3A                     l9303:
 11284                           
 11285                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 11286                           ;stkvar	_n @ sp[(-56)+32]
 11287  010F3A  0EE8               	movlw	-24
 11288  010F3C  006F FF8C  F03F    	movff	plusw1,btemp+10
 11289  010F42  0EE9               	movlw	-23
 11290  010F44  006F FF8C  F040    	movff	plusw1,btemp+11
 11291  010F4A  0EAB               	movlw	low _dbuf
 11292  010F4C  243F               	addwf	(btemp+10)^0,w,c
 11293  010F4E  6ED9               	movwf	fsr2l,c
 11294  010F50  0E01               	movlw	high _dbuf
 11295  010F52  2040               	addwfc	(btemp+11)^0,w,c
 11296  010F54  6EDA               	movwf	fsr2h,c
 11297  010F56  0E00               	movlw	0
 11298  010F58  6EDF               	movwf	indf2,c
 11299                           
 11300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 11301                           ;stkvar	_nmode @ sp[(-56)+55]
 11302  010F5A  0EFF               	movlw	-1
 11303  010F5C  006F FF8C  F035    	movff	plusw1,btemp
 11304  010F62  0E65               	movlw	101
 11305  010F64  1835               	xorwf	btemp^0,w,c
 11306  010F66  A4D8               	btfss	status,2,c
 11307  010F68  EF16  F081         	goto	l9107
 11308                           
 11309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 11310  010F6C  0E4F               	movlw	79
 11311  010F6E  6E3F               	movwf	(btemp+10)^0,c
 11312  010F70  0E00               	movlw	0
 11313  010F72  6E40               	movwf	(btemp+11)^0,c
 11314                           
 11315                           ;stkvar	_i @ sp[(-56)+36]
 11316  010F74  0EEC               	movlw	-20
 11317  010F76  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11318  010F7C  0EED               	movlw	-19
 11319  010F7E  0060  F103  FFE3   	movff	btemp+11,plusw1
 11320                           
 11321                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 11322                           ;stkvar	_i @ sp[(-56)+36]
 11323  010F84  0EEC               	movlw	-20
 11324  010F86  006F FF8C  F03F    	movff	plusw1,btemp+10
 11325  010F8C  0EED               	movlw	-19
 11326  010F8E  006F FF8C  F040    	movff	plusw1,btemp+11
 11327  010F94  0EAB               	movlw	low _dbuf
 11328  010F96  243F               	addwf	(btemp+10)^0,w,c
 11329  010F98  6ED9               	movwf	fsr2l,c
 11330  010F9A  0E01               	movlw	high _dbuf
 11331  010F9C  2040               	addwfc	(btemp+11)^0,w,c
 11332  010F9E  6EDA               	movwf	fsr2h,c
 11333  010FA0  0E00               	movlw	0
 11334  010FA2  6EDF               	movwf	indf2,c
 11335                           
 11336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 11337                           ;stkvar	_sign @ sp[(-56)+42]
 11338  010FA4  0EF2               	movlw	-14
 11339  010FA6  6AE3               	clrf	plusw1,c
 11340  010FA8  0EF3               	movlw	-13
 11341  010FAA  6AE3               	clrf	plusw1,c
 11342                           
 11343                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 11344                           ;stkvar	_e @ sp[(-56)+34]
 11345  010FAC  0EEB               	movlw	-21
 11346  010FAE  AEE3               	btfss	plusw1,7,c
 11347  010FB0  D012               	goto	l9317
 11348                           
 11349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 11350  010FB2  0E01               	movlw	1
 11351  010FB4  6E3F               	movwf	(btemp+10)^0,c
 11352  010FB6  0E00               	movlw	0
 11353  010FB8  6E40               	movwf	(btemp+11)^0,c
 11354                           
 11355                           ;stkvar	_sign @ sp[(-56)+42]
 11356  010FBA  0EF2               	movlw	-14
 11357  010FBC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11358  010FC2  0EF3               	movlw	-13
 11359  010FC4  0060  F103  FFE3   	movff	btemp+11,plusw1
 11360                           
 11361                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 11362                           ;stkvar	_e @ sp[(-56)+34]
 11363                           ;stkvar	_e @ sp[(-56)+34]
 11364  010FCA  0EEA               	movlw	-22
 11365  010FCC  6CE3               	negf	plusw1,c
 11366  010FCE  0EEB               	movlw	-21
 11367  010FD0  1EE3               	comf	plusw1,f,c
 11368  010FD2  B0D8               	btfsc	status,0,c
 11369  010FD4  2AE3               	incf	plusw1,f,c
 11370  010FD6                     l9317:
 11371                           
 11372                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 11373  010FD6  0E02               	movlw	2
 11374  010FD8  6E3F               	movwf	(btemp+10)^0,c
 11375  010FDA  0E00               	movlw	0
 11376  010FDC  6E40               	movwf	(btemp+11)^0,c
 11377                           
 11378                           ;stkvar	_p @ sp[(-56)+40]
 11379  010FDE  0EF0               	movlw	-16
 11380  010FE0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11381  010FE6  0EF1               	movlw	-15
 11382  010FE8  0060  F103  FFE3   	movff	btemp+11,plusw1
 11383                           
 11384                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 11385  010FEE  D051               	goto	l9329
 11386  010FF0                     l9319:
 11387                           
 11388                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 11389                           ;stkvar	_i @ sp[(-56)+36]
 11390  010FF0  50E1               	movf	fsr1l,w,c
 11391  010FF2  0FEC               	addlw	-20
 11392  010FF4  6ED9               	movwf	fsr2l,c
 11393  010FF6  50E2               	movf	fsr1h,w,c
 11394  010FF8  6EDA               	movwf	fsr2h,c
 11395  010FFA  0EFF               	movlw	255
 11396  010FFC  22DA               	addwfc	fsr2h,f,c
 11397  010FFE  06DE               	decf	postinc2,f,c
 11398  011000  0E00               	movlw	0
 11399  011002  5ADD               	subwfb	postdec2,f,c
 11400                           
 11401                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 11402                           ;stkvar	_i @ sp[(-56)+36]
 11403  011004  0EEC               	movlw	-20
 11404  011006  006F FF8C  F03F    	movff	plusw1,btemp+10
 11405  01100C  0EED               	movlw	-19
 11406  01100E  006F FF8C  F040    	movff	plusw1,btemp+11
 11407  011014  0EAB               	movlw	low _dbuf
 11408  011016  243F               	addwf	(btemp+10)^0,w,c
 11409  011018  6ED9               	movwf	fsr2l,c
 11410  01101A  0E01               	movlw	high _dbuf
 11411  01101C  2040               	addwfc	(btemp+11)^0,w,c
 11412  01101E  6EDA               	movwf	fsr2h,c
 11413  011020  0E0A               	movlw	10
 11414  011022  6EE6               	movwf	postinc1,c
 11415  011024  0E00               	movlw	0
 11416  011026  6EE6               	movwf	postinc1,c
 11417                           
 11418                           ;stkvar	_e @ sp[(-58)+34]
 11419  011028  0EE8               	movlw	-24
 11420  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 11421  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 11422  011036  EC4B  F0B1         	call	___awmod	;wreg free
 11423  01103A  5035               	movf	btemp^0,w,c
 11424  01103C  0F30               	addlw	48
 11425  01103E  6EDF               	movwf	indf2,c
 11426                           
 11427                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 11428  011040  0E0A               	movlw	10
 11429  011042  6EE6               	movwf	postinc1,c
 11430  011044  0E00               	movlw	0
 11431  011046  6EE6               	movwf	postinc1,c
 11432                           
 11433                           ;stkvar	_e @ sp[(-58)+34]
 11434  011048  0EE8               	movlw	-24
 11435  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 11436  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 11437  011056  EC7B  F0AF         	call	___awdiv	;wreg free
 11438                           
 11439                           ;stkvar	_e @ sp[(-56)+34]
 11440  01105A  0EEA               	movlw	-22
 11441  01105C  0060  F0D7  FFE3   	movff	btemp,plusw1
 11442  011062  0EEB               	movlw	-21
 11443  011064  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 11444                           
 11445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 11446                           ;stkvar	_p @ sp[(-56)+40]
 11447  01106A  50E1               	movf	fsr1l,w,c
 11448  01106C  0FF0               	addlw	-16
 11449  01106E  6ED9               	movwf	fsr2l,c
 11450  011070  50E2               	movf	fsr1h,w,c
 11451  011072  6EDA               	movwf	fsr2h,c
 11452  011074  0EFF               	movlw	255
 11453  011076  22DA               	addwfc	fsr2h,f,c
 11454  011078  06DE               	decf	postinc2,f,c
 11455  01107A  0E00               	movlw	0
 11456  01107C  5ADD               	subwfb	postdec2,f,c
 11457                           
 11458                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 11459                           ;stkvar	_w @ sp[(-56)+38]
 11460  01107E  50E1               	movf	fsr1l,w,c
 11461  011080  0FEE               	addlw	-18
 11462  011082  6ED9               	movwf	fsr2l,c
 11463  011084  50E2               	movf	fsr1h,w,c
 11464  011086  6EDA               	movwf	fsr2h,c
 11465  011088  0EFF               	movlw	255
 11466  01108A  22DA               	addwfc	fsr2h,f,c
 11467  01108C  06DE               	decf	postinc2,f,c
 11468  01108E  0E00               	movlw	0
 11469  011090  5ADD               	subwfb	postdec2,f,c
 11470  011092                     l9329:
 11471                           
 11472                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 11473                           ;stkvar	_e @ sp[(-56)+34]
 11474  011092  0EEA               	movlw	-22
 11475  011094  006F FF8C  F035    	movff	plusw1,btemp
 11476  01109A  0EEB               	movlw	-21
 11477  01109C  50E3               	movf	plusw1,w,c
 11478  01109E  1035               	iorwf	btemp^0,w,c
 11479  0110A0  A4D8               	btfss	status,2,c
 11480  0110A2  D7A6               	goto	l9319
 11481                           
 11482                           ;stkvar	_p @ sp[(-56)+40]
 11483  0110A4  0EF1               	movlw	-15
 11484  0110A6  BEE3               	btfsc	plusw1,7,c
 11485  0110A8  D007               	goto	u9230
 11486  0110AA  0EF1               	movlw	-15
 11487  0110AC  50E3               	movf	plusw1,w,c
 11488  0110AE  E1A0               	bnz	l9319
 11489  0110B0  0EF0               	movlw	-16
 11490  0110B2  04E3               	decf	plusw1,w,c
 11491  0110B4  B0D8               	btfsc	status,0,c
 11492  0110B6  D79C               	goto	l9319
 11493  0110B8                     u9230:
 11494                           
 11495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 11496                           ;stkvar	_i @ sp[(-56)+36]
 11497  0110B8  50E1               	movf	fsr1l,w,c
 11498  0110BA  0FEC               	addlw	-20
 11499  0110BC  6ED9               	movwf	fsr2l,c
 11500  0110BE  50E2               	movf	fsr1h,w,c
 11501  0110C0  6EDA               	movwf	fsr2h,c
 11502  0110C2  0EFF               	movlw	255
 11503  0110C4  22DA               	addwfc	fsr2h,f,c
 11504  0110C6  06DE               	decf	postinc2,f,c
 11505  0110C8  0E00               	movlw	0
 11506  0110CA  5ADD               	subwfb	postdec2,f,c
 11507                           
 11508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 11509                           ;stkvar	_sign @ sp[(-56)+42]
 11510  0110CC  0EF2               	movlw	-14
 11511  0110CE  006F FF8C  F035    	movff	plusw1,btemp
 11512  0110D4  0EF3               	movlw	-13
 11513  0110D6  50E3               	movf	plusw1,w,c
 11514  0110D8  1035               	iorwf	btemp^0,w,c
 11515  0110DA  A4D8               	btfss	status,2,c
 11516  0110DC  D002               	goto	l9339
 11517  0110DE  0E2B               	movlw	43
 11518  0110E0  D001               	goto	L9
 11519  0110E2                     l9339:
 11520  0110E2  0E2D               	movlw	45
 11521  0110E4                     L9:
 11522  0110E4  6E3F               	movwf	(btemp+10)^0,c
 11523  0110E6  0E00               	movlw	0
 11524  0110E8  6E40               	movwf	(btemp+11)^0,c
 11525                           
 11526                           ;stkvar	_efgtoa$4079 @ sp[(-56)+4]
 11527  0110EA  0ECC               	movlw	-52
 11528  0110EC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11529  0110F2  0ECD               	movlw	-51
 11530  0110F4  0060  F103  FFE3   	movff	btemp+11,plusw1
 11531                           
 11532                           ;stkvar	_efgtoa$4079 @ sp[(-56)+4]
 11533                           ;stkvar	_i @ sp[(-56)+36]
 11534  0110FA  0EEC               	movlw	-20
 11535  0110FC  006F FF8C  F03F    	movff	plusw1,btemp+10
 11536  011102  0EED               	movlw	-19
 11537  011104  006F FF8C  F040    	movff	plusw1,btemp+11
 11538  01110A  0EAB               	movlw	low _dbuf
 11539  01110C  243F               	addwf	(btemp+10)^0,w,c
 11540  01110E  6ED9               	movwf	fsr2l,c
 11541  011110  0E01               	movlw	high _dbuf
 11542  011112  2040               	addwfc	(btemp+11)^0,w,c
 11543  011114  6EDA               	movwf	fsr2h,c
 11544  011116  0ECC               	movlw	-52
 11545  011118  006F FF8F FFDF     	movff	plusw1,indf2
 11546                           
 11547                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 11548                           ;stkvar	_w @ sp[(-56)+38]
 11549  01111E  50E1               	movf	fsr1l,w,c
 11550  011120  0FEE               	addlw	-18
 11551  011122  6ED9               	movwf	fsr2l,c
 11552  011124  50E2               	movf	fsr1h,w,c
 11553  011126  6EDA               	movwf	fsr2h,c
 11554  011128  0EFF               	movlw	255
 11555  01112A  22DA               	addwfc	fsr2h,f,c
 11556  01112C  06DE               	decf	postinc2,f,c
 11557  01112E  0E00               	movlw	0
 11558  011130  5ADD               	subwfb	postdec2,f,c
 11559                           
 11560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 11561                           ;stkvar	_i @ sp[(-56)+36]
 11562  011132  50E1               	movf	fsr1l,w,c
 11563  011134  0FEC               	addlw	-20
 11564  011136  6ED9               	movwf	fsr2l,c
 11565  011138  50E2               	movf	fsr1h,w,c
 11566  01113A  6EDA               	movwf	fsr2h,c
 11567  01113C  0EFF               	movlw	255
 11568  01113E  22DA               	addwfc	fsr2h,f,c
 11569  011140  06DE               	decf	postinc2,f,c
 11570  011142  0E00               	movlw	0
 11571  011144  5ADD               	subwfb	postdec2,f,c
 11572  011146  0EBF               	movlw	191
 11573  011148  6E3F               	movwf	(btemp+10)^0,c
 11574  01114A  0EFF               	movlw	255
 11575  01114C  6E40               	movwf	(btemp+11)^0,c
 11576                           
 11577                           ;stkvar	_c @ sp[(-56)+-7]
 11578  01114E  0EC1               	movlw	-63
 11579  011150  50E3               	movf	plusw1,w,c
 11580  011152  6E3D               	movwf	(btemp+8)^0,c
 11581  011154  6A3E               	clrf	(btemp+9)^0,c
 11582  011156  503F               	movf	(btemp+10)^0,w,c
 11583  011158  263D               	addwf	(btemp+8)^0,f,c
 11584  01115A  5040               	movf	(btemp+11)^0,w,c
 11585  01115C  223E               	addwfc	(btemp+9)^0,f,c
 11586  01115E  503E               	movf	(btemp+9)^0,w,c
 11587  011160  E106               	bnz	u9250
 11588  011162  0E1A               	movlw	26
 11589  011164  5C3D               	subwf	(btemp+8)^0,w,c
 11590  011166  B0D8               	btfsc	status,0,c
 11591  011168  D002               	goto	u9250
 11592  01116A  0E01               	movlw	1
 11593  01116C  D001               	goto	u9260
 11594  01116E                     u9250:
 11595  01116E  0E00               	movlw	0
 11596  011170                     u9260:
 11597  011170  6E3F               	movwf	(btemp+10)^0,c
 11598  011172  6A40               	clrf	(btemp+11)^0,c
 11599                           
 11600                           ;stkvar	_efgtoa$4081 @ sp[(-56)+0]
 11601  011174  0EC8               	movlw	-56
 11602  011176  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11603  01117C  0EC9               	movlw	-55
 11604  01117E  0060  F103  FFE3   	movff	btemp+11,plusw1
 11605                           
 11606                           ;stkvar	_efgtoa$4081 @ sp[(-56)+0]
 11607  011184  0EC8               	movlw	-56
 11608  011186  006F FF8C  F035    	movff	plusw1,btemp
 11609  01118C  0EC9               	movlw	-55
 11610  01118E  50E3               	movf	plusw1,w,c
 11611  011190  1035               	iorwf	btemp^0,w,c
 11612  011192  A4D8               	btfss	status,2,c
 11613  011194  D002               	goto	l9355
 11614  011196  0E65               	movlw	101
 11615  011198  D001               	goto	L10
 11616  01119A                     l9355:
 11617  01119A  0E45               	movlw	69
 11618  01119C                     L10:
 11619  01119C  6E3F               	movwf	(btemp+10)^0,c
 11620  01119E  0E00               	movlw	0
 11621  0111A0  6E40               	movwf	(btemp+11)^0,c
 11622                           
 11623                           ;stkvar	_efgtoa$4080 @ sp[(-56)+2]
 11624  0111A2  0ECA               	movlw	-54
 11625  0111A4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11626  0111AA  0ECB               	movlw	-53
 11627  0111AC  0060  F103  FFE3   	movff	btemp+11,plusw1
 11628                           
 11629                           ;stkvar	_efgtoa$4080 @ sp[(-56)+2]
 11630                           ;stkvar	_i @ sp[(-56)+36]
 11631  0111B2  0EEC               	movlw	-20
 11632  0111B4  006F FF8C  F03F    	movff	plusw1,btemp+10
 11633  0111BA  0EED               	movlw	-19
 11634  0111BC  006F FF8C  F040    	movff	plusw1,btemp+11
 11635  0111C2  0EAB               	movlw	low _dbuf
 11636  0111C4  243F               	addwf	(btemp+10)^0,w,c
 11637  0111C6  6ED9               	movwf	fsr2l,c
 11638  0111C8  0E01               	movlw	high _dbuf
 11639  0111CA  2040               	addwfc	(btemp+11)^0,w,c
 11640  0111CC  6EDA               	movwf	fsr2h,c
 11641  0111CE  0ECA               	movlw	-54
 11642  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 11643                           
 11644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 11645                           ;stkvar	_w @ sp[(-56)+38]
 11646  0111D6  50E1               	movf	fsr1l,w,c
 11647  0111D8  0FEE               	addlw	-18
 11648  0111DA  6ED9               	movwf	fsr2l,c
 11649  0111DC  50E2               	movf	fsr1h,w,c
 11650  0111DE  6EDA               	movwf	fsr2h,c
 11651  0111E0  0EFF               	movlw	255
 11652  0111E2  22DA               	addwfc	fsr2h,f,c
 11653  0111E4  06DE               	decf	postinc2,f,c
 11654  0111E6  0E00               	movlw	0
 11655  0111E8  5ADD               	subwfb	postdec2,f,c
 11656                           
 11657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 11658                           ;stkvar	_i @ sp[(-56)+36]
 11659  0111EA  0EEC               	movlw	-20
 11660  0111EC  006F FF8C  F03F    	movff	plusw1,btemp+10
 11661  0111F2  0EED               	movlw	-19
 11662  0111F4  006F FF8C  F040    	movff	plusw1,btemp+11
 11663  0111FA  0EAB               	movlw	low _dbuf
 11664  0111FC  243F               	addwf	(btemp+10)^0,w,c
 11665  0111FE  6E3D               	movwf	(btemp+8)^0,c
 11666  011200  0E01               	movlw	high _dbuf
 11667  011202  2040               	addwfc	(btemp+11)^0,w,c
 11668  011204  6E3E               	movwf	(btemp+9)^0,c
 11669  011206  0060  F0F7  FFE6   	movff	btemp+8,postinc1
 11670  01120C  0060  F0FB  FFE6   	movff	btemp+9,postinc1
 11671                           
 11672                           ;stkvar	_n @ sp[(-58)+32]
 11673  011212  0EAB               	movlw	low _dbuf
 11674  011214  6E3F               	movwf	(btemp+10)^0,c
 11675  011216  0E01               	movlw	high _dbuf
 11676  011218  6E40               	movwf	(btemp+11)^0,c
 11677  01121A  0EE6               	movlw	-26
 11678  01121C  50E3               	movf	plusw1,w,c
 11679  01121E  263F               	addwf	(btemp+10)^0,f,c
 11680  011220  0EE7               	movlw	-25
 11681  011222  50E3               	movf	plusw1,w,c
 11682  011224  2240               	addwfc	(btemp+11)^0,f,c
 11683  011226  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 11684  01122C  0060  F103  FFE6   	movff	btemp+11,postinc1
 11685  011232  ECE2  F0B3         	call	_strcpy	;wreg free
 11686  011236  EF16  F081         	goto	l9107
 11687  01123A                     l1796:
 11688                           
 11689                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 11690  01123A  0EC1               	movlw	193
 11691  01123C  26E1               	addwf	fsr1l,f,c
 11692  01123E  0EFF               	movlw	255
 11693  011240  22E2               	addwfc	fsr1h,f,c
 11694  011242  0012               	return		;funcret
 11695  011244                     __end_of_efgtoa:
 11696                           	opt callstack 0
 11697                           
 11698 ;; *************** function _tolower *****************
 11699 ;; Defined at:
 11700 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 11701 ;; Parameters:    Size  Location     Type
 11702 ;;  c               2  [STACK] int 
 11703 ;; Auto vars:     Size  Location     Type
 11704 ;;		None
 11705 ;; Return value:  Size  Location     Type
 11706 ;;                  2  [STACK] int 
 11707 ;; Registers used:
 11708 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 11709 ;; Tracked objects:
 11710 ;;		On entry : 0/4
 11711 ;;		On exit  : 0/0
 11712 ;;		Unchanged: 0/0
 11713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11718 ;;Total ram usage:        0 bytes
 11719 ;; Hardware stack levels used:    1
 11720 ;; Hardware stack levels required when called:    7
 11721 ;; This function calls:
 11722 ;;		_isupper
 11723 ;; This function is called by:
 11724 ;;		_efgtoa
 11725 ;;		_vfpfcnvrt
 11726 ;; This function uses a reentrant model
 11727 ;;
 11728                           
 11729                           	psect	text42
 11730  0170C4                     __ptext42:
 11731                           	opt callstack 0
 11732  0170C4                     _tolower:
 11733                           	opt callstack 0
 11734                           
 11735                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11736  0170C4  52E6               	movf	postinc1,f,c
 11737  0170C6  52E6               	movf	postinc1,f,c
 11738                           
 11739                           ;stkvar	_c @ sp[(-2)+-2]
 11740                           
 11741                           ;incstack = 0
 11742  0170C8  0EFC               	movlw	-4
 11743  0170CA  50E3               	movf	plusw1,w,c
 11744  0170CC  0FBF               	addlw	191
 11745  0170CE  6E3F               	movwf	(btemp+10)^0,c
 11746  0170D0  0EFD               	movlw	-3
 11747  0170D2  006F FF8C  F040    	movff	plusw1,btemp+11
 11748  0170D8  0EFF               	movlw	255
 11749  0170DA  2240               	addwfc	(btemp+11)^0,f,c
 11750  0170DC  5040               	movf	(btemp+11)^0,w,c
 11751  0170DE  E106               	bnz	u4950
 11752  0170E0  0E1A               	movlw	26
 11753  0170E2  5C3F               	subwf	(btemp+10)^0,w,c
 11754  0170E4  B0D8               	btfsc	status,0,c
 11755  0170E6  D002               	goto	u4950
 11756  0170E8  0E01               	movlw	1
 11757  0170EA  D001               	goto	u4960
 11758  0170EC                     u4950:
 11759  0170EC  0E00               	movlw	0
 11760  0170EE                     u4960:
 11761  0170EE  6E3F               	movwf	(btemp+10)^0,c
 11762  0170F0  6A40               	clrf	(btemp+11)^0,c
 11763                           
 11764                           ;stkvar	_tolower$4747 @ sp[(-2)+0]
 11765  0170F2  0EFE               	movlw	-2
 11766  0170F4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11767  0170FA  0EFF               	movlw	-1
 11768  0170FC  0060  F103  FFE3   	movff	btemp+11,plusw1
 11769                           
 11770                           ;stkvar	_tolower$4747 @ sp[(-2)+0]
 11771  017102  0EFE               	movlw	-2
 11772  017104  006F FF8C  F035    	movff	plusw1,btemp
 11773  01710A  0EFF               	movlw	-1
 11774  01710C  50E3               	movf	plusw1,w,c
 11775  01710E  1035               	iorwf	btemp^0,w,c
 11776  017110  B4D8               	btfsc	status,2,c
 11777  017112  D00D               	goto	l6249
 11778                           
 11779                           ;stkvar	_c @ sp[(-2)+-2]
 11780  017114  0EFC               	movlw	-4
 11781  017116  006F FF8C  F035    	movff	plusw1,btemp
 11782  01711C  0EFD               	movlw	-3
 11783  01711E  006F FF8C  F036    	movff	plusw1,btemp+1
 11784  017124  0E20               	movlw	32
 11785  017126  1235               	iorwf	btemp^0,f,c
 11786  017128  0E00               	movlw	0
 11787  01712A  1236               	iorwf	(btemp+1)^0,f,c
 11788  01712C  D008               	goto	l2819
 11789  01712E                     l6249:
 11790                           
 11791                           ;stkvar	_c @ sp[(-2)+-2]
 11792  01712E  0EFC               	movlw	-4
 11793  017130  006F FF8C  F035    	movff	plusw1,btemp
 11794  017136  0EFD               	movlw	-3
 11795  017138  006F FF8C  F036    	movff	plusw1,btemp+1
 11796  01713E                     l2819:
 11797                           
 11798                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 11799  01713E  52E5               	movf	postdec1,f,c
 11800  017140  52E5               	movf	postdec1,f,c
 11801  017142  52E5               	movf	postdec1,f,c
 11802  017144  52E5               	movf	postdec1,f,c
 11803  017146  0012               	return		;funcret
 11804  017148                     __end_of_tolower:
 11805                           	opt callstack 0
 11806                           
 11807 ;; *************** function _isupper *****************
 11808 ;; Defined at:
 11809 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 11810 ;; Parameters:    Size  Location     Type
 11811 ;;  c               2  [STACK] int 
 11812 ;; Auto vars:     Size  Location     Type
 11813 ;;		None
 11814 ;; Return value:  Size  Location     Type
 11815 ;;                  2  [STACK] int 
 11816 ;; Registers used:
 11817 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 11818 ;; Tracked objects:
 11819 ;;		On entry : 0/0
 11820 ;;		On exit  : 0/0
 11821 ;;		Unchanged: 0/0
 11822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11827 ;;Total ram usage:        0 bytes
 11828 ;; Hardware stack levels used:    1
 11829 ;; Hardware stack levels required when called:    6
 11830 ;; This function calls:
 11831 ;;		Nothing
 11832 ;; This function is called by:
 11833 ;;		_efgtoa
 11834 ;;		_xtoa
 11835 ;;		_vfpfcnvrt
 11836 ;;		_tolower
 11837 ;; This function uses a reentrant model
 11838 ;;
 11839                           
 11840                           	psect	text43
 11841  017B60                     __ptext43:
 11842                           	opt callstack 0
 11843  017B60                     _isupper:
 11844                           	opt callstack 17
 11845                           
 11846                           ;stkvar	_c @ sp[(0)+-2]
 11847                           
 11848                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11849                           ;incstack = 0
 11850  017B60  0EFE               	movlw	-2
 11851  017B62  50E3               	movf	plusw1,w,c
 11852  017B64  0FBF               	addlw	191
 11853  017B66  6E3F               	movwf	(btemp+10)^0,c
 11854  017B68  0EFF               	movlw	-1
 11855  017B6A  006F FF8C  F040    	movff	plusw1,btemp+11
 11856  017B70  0EFF               	movlw	255
 11857  017B72  2240               	addwfc	(btemp+11)^0,f,c
 11858  017B74  5040               	movf	(btemp+11)^0,w,c
 11859  017B76  E106               	bnz	u4350
 11860  017B78  0E1A               	movlw	26
 11861  017B7A  5C3F               	subwf	(btemp+10)^0,w,c
 11862  017B7C  B0D8               	btfsc	status,0,c
 11863  017B7E  D002               	goto	u4350
 11864  017B80  0E01               	movlw	1
 11865  017B82  D001               	goto	u4360
 11866  017B84                     u4350:
 11867  017B84  0E00               	movlw	0
 11868  017B86                     u4360:
 11869  017B86  6E35               	movwf	btemp^0,c
 11870  017B88  6A36               	clrf	(btemp+1)^0,c
 11871                           
 11872                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 11873  017B8A  52E5               	movf	postdec1,f,c
 11874  017B8C  52E5               	movf	postdec1,f,c
 11875  017B8E  0012               	return		;funcret
 11876  017B90                     __end_of_isupper:
 11877                           	opt callstack 0
 11878                           
 11879 ;; *************** function _strcpy *****************
 11880 ;; Defined at:
 11881 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 11882 ;; Parameters:    Size  Location     Type
 11883 ;;  dest            2  [STACK] PTR unsigned char 
 11884 ;;		 -> dbuf(80), 
 11885 ;;  src             2  [STACK] PTR const unsigned char 
 11886 ;;		 -> STR_38(4), STR_37(4), STR_34(4), STR_33(4), 
 11887 ;;		 -> dbuf(80), 
 11888 ;; Auto vars:     Size  Location     Type
 11889 ;;  d               2  [STACK] PTR unsigned char 
 11890 ;;		 -> dbuf(80), 
 11891 ;;  s               2  [STACK] PTR const unsigned char 
 11892 ;;		 -> STR_38(4), STR_37(4), STR_34(4), STR_33(4), 
 11893 ;;		 -> dbuf(80), 
 11894 ;; Return value:  Size  Location     Type
 11895 ;;                  2  [STACK] PTR unsigned char 
 11896 ;; Registers used:
 11897 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 11898 ;; Tracked objects:
 11899 ;;		On entry : 0/4
 11900 ;;		On exit  : 0/0
 11901 ;;		Unchanged: 0/0
 11902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11907 ;;Total ram usage:        0 bytes
 11908 ;; Hardware stack levels used:    1
 11909 ;; Hardware stack levels required when called:    6
 11910 ;; This function calls:
 11911 ;;		Nothing
 11912 ;; This function is called by:
 11913 ;;		_efgtoa
 11914 ;; This function uses a reentrant model
 11915 ;;
 11916                           
 11917                           	psect	text44
 11918  0167C4                     __ptext44:
 11919                           	opt callstack 0
 11920  0167C4                     _strcpy:
 11921                           	opt callstack 0
 11922                           
 11923                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11924  0167C4  52E6               	movf	postinc1,f,c
 11925  0167C6  52E6               	movf	postinc1,f,c
 11926  0167C8  52E6               	movf	postinc1,f,c
 11927  0167CA  52E6               	movf	postinc1,f,c
 11928                           
 11929                           ;stkvar	_src @ sp[(-4)+-4]
 11930                           
 11931                           ;incstack = 0
 11932  0167CC  0EF8               	movlw	-8
 11933  0167CE  006F FF8C  F03F    	movff	plusw1,btemp+10
 11934  0167D4  0EF9               	movlw	-7
 11935  0167D6  006F FF8C  F040    	movff	plusw1,btemp+11
 11936                           
 11937                           ;stkvar	_s @ sp[(-4)+2]
 11938  0167DC  0EFF               	movlw	-1
 11939  0167DE  0060  F103  FFE3   	movff	btemp+11,plusw1
 11940  0167E4  0EFE               	movlw	-2
 11941  0167E6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11942                           
 11943                           ;stkvar	_dest @ sp[(-4)+-2]
 11944  0167EC  0EFA               	movlw	-6
 11945  0167EE  006F FF8C  F03F    	movff	plusw1,btemp+10
 11946  0167F4  0EFB               	movlw	-5
 11947  0167F6  006F FF8C  F040    	movff	plusw1,btemp+11
 11948                           
 11949                           ;stkvar	_d @ sp[(-4)+0]
 11950  0167FC  0EFD               	movlw	-3
 11951  0167FE  0060  F103  FFE3   	movff	btemp+11,plusw1
 11952  016804  0EFC               	movlw	-4
 11953  016806  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11954  01680C                     l8981:
 11955                           
 11956                           ;stkvar	_s @ sp[(-4)+2]
 11957  01680C  50E1               	movf	fsr1l,w,c
 11958  01680E  0FFE               	addlw	-2
 11959  016810  6ED9               	movwf	fsr2l,c
 11960  016812  50E2               	movf	fsr1h,w,c
 11961  016814  6EDA               	movwf	fsr2h,c
 11962  016816  0EFF               	movlw	255
 11963  016818  22DA               	addwfc	fsr2h,f,c
 11964  01681A  006F FF7C  F03F    	movff	indf2,btemp+10
 11965  016820  0E01               	movlw	1
 11966  016822  26DE               	addwf	postinc2,f,c
 11967  016824  006F FF7C  F040    	movff	indf2,btemp+11
 11968  01682A  0E00               	movlw	0
 11969  01682C  22DD               	addwfc	postdec2,f,c
 11970  01682E  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
 11971  016834  0060  F103  FFF7   	movff	btemp+11,tblptrh
 11972  01683A  0E00               	movlw	low (__mediumconst shr (0+16))
 11973  01683C  6EF8               	movwf	tblptru,c
 11974                           
 11975                           ;stkvar	_d @ sp[(-4)+0]
 11976  01683E  50E1               	movf	fsr1l,w,c
 11977  016840  0FFC               	addlw	-4
 11978  016842  6ED9               	movwf	fsr2l,c
 11979  016844  50E2               	movf	fsr1h,w,c
 11980  016846  6EDA               	movwf	fsr2h,c
 11981  016848  0EFF               	movlw	255
 11982  01684A  22DA               	addwfc	fsr2h,f,c
 11983  01684C  006F FF7C  F03F    	movff	indf2,btemp+10
 11984  016852  0E01               	movlw	1
 11985  016854  26DE               	addwf	postinc2,f,c
 11986  016856  006F FF7C  F040    	movff	indf2,btemp+11
 11987  01685C  0E00               	movlw	0
 11988  01685E  22DD               	addwfc	postdec2,f,c
 11989  016860  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
 11990  016866  0060  F103  FFDA   	movff	btemp+11,fsr2h
 11991  01686C  0E1F               	movlw	(high __ramtop+-1)
 11992  01686E  64F7               	cpfsgt	tblptrh,c
 11993  016870  D003               	bra	u8567
 11994  016872  0008               	tblrd		*
 11995  016874  50F5               	movf	tablat,w,c
 11996  016876  D007               	bra	u8560
 11997  016878                     u8567:
 11998  016878  006F FFDB FFE9     	movff	tblptrl,fsr0l
 11999  01687E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 12000  016884  50EF               	movf	indf0,w,c
 12001  016886                     u8560:
 12002  016886  6EDF               	movwf	indf2,c
 12003  016888  50DF               	movf	indf2,w,c
 12004  01688A  A4D8               	btfss	status,2,c
 12005  01688C  D7BF               	goto	l8981
 12006                           
 12007                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 12008  01688E  0EF8               	movlw	248
 12009  016890  26E1               	addwf	fsr1l,f,c
 12010  016892  0EFF               	movlw	255
 12011  016894  22E2               	addwfc	fsr1h,f,c
 12012  016896  0012               	return		;funcret
 12013  016898                     __end_of_strcpy:
 12014                           	opt callstack 0
 12015                           
 12016 ;; *************** function _floorf *****************
 12017 ;; Defined at:
 12018 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 12019 ;; Parameters:    Size  Location     Type
 12020 ;;  x               4  [STACK] float 
 12021 ;; Auto vars:     Size  Location     Type
 12022 ;;  u               4  [STACK] struct .
 12023 ;;  m               4  [STACK] unsigned long 
 12024 ;;  e               2  [STACK] int 
 12025 ;; Return value:  Size  Location     Type
 12026 ;;                  4  [STACK] float 
 12027 ;; Registers used:
 12028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 12029 ;; Tracked objects:
 12030 ;;		On entry : 0/4
 12031 ;;		On exit  : 0/0
 12032 ;;		Unchanged: 0/0
 12033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12038 ;;Total ram usage:        0 bytes
 12039 ;; Hardware stack levels used:    1
 12040 ;; Hardware stack levels required when called:    6
 12041 ;; This function calls:
 12042 ;;		Nothing
 12043 ;; This function is called by:
 12044 ;;		_efgtoa
 12045 ;; This function uses a reentrant model
 12046 ;;
 12047                           
 12048                           	psect	text45
 12049  0142A4                     __ptext45:
 12050                           	opt callstack 0
 12051  0142A4                     _floorf:
 12052                           	opt callstack 0
 12053                           
 12054                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12055  0142A4  0E0A               	movlw	10
 12056  0142A6  26E1               	addwf	fsr1l,f,c
 12057  0142A8  0E00               	movlw	0
 12058  0142AA  22E2               	addwfc	fsr1h,f,c
 12059                           
 12060                           ;incstack = 0
 12061  0142AC  0060  F31C  F03D   	movff	floorf@F524,btemp+8
 12062  0142B2  0060  F320  F03E   	movff	floorf@F524+1,btemp+9
 12063  0142B8  0060  F324  F03F   	movff	floorf@F524+2,btemp+10
 12064  0142BE  0060  F328  F040   	movff	floorf@F524+3,btemp+11
 12065                           
 12066                           ;stkvar	_u @ sp[(-10)+0]
 12067  0142C4  0EF6               	movlw	-10
 12068  0142C6  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12069  0142CC  0EF7               	movlw	-9
 12070  0142CE  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12071  0142D4  0EF8               	movlw	-8
 12072  0142D6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12073  0142DC  0EF9               	movlw	-7
 12074  0142DE  0060  F103  FFE3   	movff	btemp+11,plusw1
 12075                           
 12076                           ;stkvar	_x @ sp[(-10)+-4]
 12077  0142E4  0EF2               	movlw	-14
 12078  0142E6  006F FF8C  F03D    	movff	plusw1,btemp+8
 12079  0142EC  0EF3               	movlw	-13
 12080  0142EE  006F FF8C  F03E    	movff	plusw1,btemp+9
 12081  0142F4  0EF4               	movlw	-12
 12082  0142F6  006F FF8C  F03F    	movff	plusw1,btemp+10
 12083  0142FC  0EF5               	movlw	-11
 12084  0142FE  006F FF8C  F040    	movff	plusw1,btemp+11
 12085                           
 12086                           ;stkvar	_u @ sp[(-10)+0]
 12087  014304  0EF6               	movlw	-10
 12088  014306  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12089  01430C  0EF7               	movlw	-9
 12090  01430E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12091  014314  0EF8               	movlw	-8
 12092  014316  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12093  01431C  0EF9               	movlw	-7
 12094  01431E  0060  F103  FFE3   	movff	btemp+11,plusw1
 12095  014324  0E81               	movlw	129
 12096  014326  6E3F               	movwf	(btemp+10)^0,c
 12097  014328  0EFF               	movlw	255
 12098  01432A  6E40               	movwf	(btemp+11)^0,c
 12099                           
 12100                           ;stkvar	_u @ sp[(-10)+0]
 12101  01432C  0EF6               	movlw	-10
 12102  01432E  006F FF8C  F039    	movff	plusw1,btemp+4
 12103  014334  0EF7               	movlw	-9
 12104  014336  006F FF8C  F03A    	movff	plusw1,btemp+5
 12105  01433C  0EF8               	movlw	-8
 12106  01433E  006F FF8C  F03B    	movff	plusw1,btemp+6
 12107  014344  0EF9               	movlw	-7
 12108  014346  006F FF8C  F03C    	movff	plusw1,btemp+7
 12109  01434C  0E18               	movlw	24
 12110  01434E  D005               	goto	u4980
 12111  014350                     u4985:
 12112  014350  90D8               	bcf	status,0,c
 12113  014352  323C               	rrcf	(btemp+7)^0,f,c
 12114  014354  323B               	rrcf	(btemp+6)^0,f,c
 12115  014356  323A               	rrcf	(btemp+5)^0,f,c
 12116  014358  3239               	rrcf	(btemp+4)^0,f,c
 12117  01435A                     u4980:
 12118  01435A  2EE8               	decfsz	wreg,f,c
 12119  01435C  D7F9               	goto	u4985
 12120  01435E  0060  F0E4  F03D   	movff	btemp+4,btemp+8
 12121  014364  0060  F0E8  F03E   	movff	btemp+5,btemp+9
 12122  01436A  0EFF               	movlw	255
 12123  01436C  163D               	andwf	(btemp+8)^0,f,c
 12124  01436E  0E00               	movlw	0
 12125  014370  163E               	andwf	(btemp+9)^0,f,c
 12126  014372  503F               	movf	(btemp+10)^0,w,c
 12127  014374  263D               	addwf	(btemp+8)^0,f,c
 12128  014376  5040               	movf	(btemp+11)^0,w,c
 12129  014378  223E               	addwfc	(btemp+9)^0,f,c
 12130                           
 12131                           ;stkvar	_e @ sp[(-10)+8]
 12132  01437A  0EFE               	movlw	-2
 12133  01437C  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12134  014382  0EFF               	movlw	-1
 12135  014384  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12136                           
 12137                           ;stkvar	_e @ sp[(-10)+8]
 12138  01438A  0EFF               	movlw	-1
 12139  01438C  BEE3               	btfsc	plusw1,7,c
 12140  01438E  D019               	goto	l6263
 12141  014390  0EFF               	movlw	-1
 12142  014392  50E3               	movf	plusw1,w,c
 12143  014394  E108               	bnz	u4990
 12144  014396  0EFE               	movlw	-2
 12145  014398  006F FF8C  F035    	movff	plusw1,btemp
 12146  01439E  0E17               	movlw	23
 12147  0143A0  5E35               	subwf	btemp^0,f,c
 12148  0143A2  A0D8               	btfss	status,0,c
 12149  0143A4  D00E               	goto	l6263
 12150  0143A6                     u4990:
 12151                           
 12152                           ;stkvar	_x @ sp[(-10)+-4]
 12153  0143A6  0EF2               	movlw	-14
 12154  0143A8  006F FF8C  F035    	movff	plusw1,btemp
 12155  0143AE  0EF3               	movlw	-13
 12156  0143B0  006F FF8C  F036    	movff	plusw1,btemp+1
 12157  0143B6  0EF4               	movlw	-12
 12158  0143B8  006F FF8C  F037    	movff	plusw1,btemp+2
 12159  0143BE  0EF5               	movlw	-11
 12160  0143C0  D11F               	goto	L11
 12161  0143C2                     l6263:
 12162                           
 12163                           ;stkvar	_e @ sp[(-10)+8]
 12164  0143C2  0EFF               	movlw	-1
 12165  0143C4  BEE3               	btfsc	plusw1,7,c
 12166  0143C6  D0B4               	goto	l6279
 12167                           
 12168                           ;stkvar	_e @ sp[(-10)+8]
 12169  0143C8  0EFE               	movlw	-2
 12170  0143CA  006F FF8C  F040    	movff	plusw1,btemp+11
 12171  0143D0  0EFF               	movlw	255
 12172  0143D2  6E39               	movwf	(btemp+4)^0,c
 12173  0143D4  0EFF               	movlw	255
 12174  0143D6  6E3A               	movwf	(btemp+5)^0,c
 12175  0143D8  0E7F               	movlw	127
 12176  0143DA  6E3B               	movwf	(btemp+6)^0,c
 12177  0143DC  0E00               	movlw	0
 12178  0143DE  6E3C               	movwf	(btemp+7)^0,c
 12179  0143E0                     u5015:
 12180  0143E0  6640               	tstfsz	(btemp+11)^0,c
 12181  0143E2  D001               	goto	u5016
 12182  0143E4  D007               	goto	u5017
 12183  0143E6                     u5016:
 12184  0143E6  343C               	rlcf	(btemp+7)^0,w,c
 12185  0143E8  323C               	rrcf	(btemp+7)^0,f,c
 12186  0143EA  323B               	rrcf	(btemp+6)^0,f,c
 12187  0143EC  323A               	rrcf	(btemp+5)^0,f,c
 12188  0143EE  3239               	rrcf	(btemp+4)^0,f,c
 12189  0143F0  2E40               	decfsz	(btemp+11)^0,f,c
 12190  0143F2  D7F6               	goto	u5015
 12191  0143F4                     u5017:
 12192                           
 12193                           ;stkvar	_m @ sp[(-10)+4]
 12194  0143F4  0EFA               	movlw	-6
 12195  0143F6  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 12196  0143FC  0EFB               	movlw	-5
 12197  0143FE  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 12198  014404  0EFC               	movlw	-4
 12199  014406  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 12200  01440C  0EFD               	movlw	-3
 12201  01440E  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 12202                           
 12203                           ;stkvar	_m @ sp[(-10)+4]
 12204                           ;stkvar	_u @ sp[(-10)+0]
 12205  014414  0EF6               	movlw	-10
 12206  014416  006F FF8C  F03D    	movff	plusw1,btemp+8
 12207  01441C  0EF7               	movlw	-9
 12208  01441E  006F FF8C  F03E    	movff	plusw1,btemp+9
 12209  014424  0EF8               	movlw	-8
 12210  014426  006F FF8C  F03F    	movff	plusw1,btemp+10
 12211  01442C  0EF9               	movlw	-7
 12212  01442E  006F FF8C  F040    	movff	plusw1,btemp+11
 12213  014434  0EFA               	movlw	-6
 12214  014436  50E3               	movf	plusw1,w,c
 12215  014438  163D               	andwf	(btemp+8)^0,f,c
 12216  01443A  0EFB               	movlw	-5
 12217  01443C  50E3               	movf	plusw1,w,c
 12218  01443E  163E               	andwf	(btemp+9)^0,f,c
 12219  014440  0EFC               	movlw	-4
 12220  014442  50E3               	movf	plusw1,w,c
 12221  014444  163F               	andwf	(btemp+10)^0,f,c
 12222  014446  0EFD               	movlw	-3
 12223  014448  50E3               	movf	plusw1,w,c
 12224  01444A  1640               	andwf	(btemp+11)^0,f,c
 12225  01444C  503D               	movf	(btemp+8)^0,w,c
 12226  01444E  103E               	iorwf	(btemp+9)^0,w,c
 12227  014450  103F               	iorwf	(btemp+10)^0,w,c
 12228  014452  1040               	iorwf	(btemp+11)^0,w,c
 12229  014454  B4D8               	btfsc	status,2,c
 12230  014456  D7A7               	goto	u4990
 12231                           
 12232                           ;stkvar	_u @ sp[(-10)+0]
 12233  014458  0EF6               	movlw	-10
 12234  01445A  006F FF8C  F03D    	movff	plusw1,btemp+8
 12235  014460  0EF7               	movlw	-9
 12236  014462  006F FF8C  F03E    	movff	plusw1,btemp+9
 12237  014468  0EF8               	movlw	-8
 12238  01446A  006F FF8C  F03F    	movff	plusw1,btemp+10
 12239  014470  0EF9               	movlw	-7
 12240  014472  006F FF8C  F040    	movff	plusw1,btemp+11
 12241  014478  0E20               	movlw	32
 12242  01447A  D005               	goto	u5030
 12243  01447C                     u5035:
 12244  01447C  90D8               	bcf	status,0,c
 12245  01447E  3240               	rrcf	(btemp+11)^0,f,c
 12246  014480  323F               	rrcf	(btemp+10)^0,f,c
 12247  014482  323E               	rrcf	(btemp+9)^0,f,c
 12248  014484  323D               	rrcf	(btemp+8)^0,f,c
 12249  014486                     u5030:
 12250  014486  2EE8               	decfsz	wreg,f,c
 12251  014488  D7F9               	goto	u5035
 12252  01448A  503D               	movf	(btemp+8)^0,w,c
 12253  01448C  B4D8               	btfsc	status,2,c
 12254  01448E  D028               	goto	l6277
 12255                           
 12256                           ;stkvar	_m @ sp[(-10)+4]
 12257                           ;stkvar	_u @ sp[(-10)+0]
 12258  014490  0EF6               	movlw	-10
 12259  014492  50E3               	movf	plusw1,w,c
 12260  014494  6E35               	movwf	btemp^0,c
 12261  014496  0EFA               	movlw	-6
 12262  014498  50E3               	movf	plusw1,w,c
 12263  01449A  2635               	addwf	btemp^0,f,c
 12264  01449C  0EF6               	movlw	-10
 12265  01449E  0060  F0D7  FFE3   	movff	btemp,plusw1
 12266  0144A4  0EF7               	movlw	-9
 12267  0144A6  50E3               	movf	plusw1,w,c
 12268  0144A8  6E35               	movwf	btemp^0,c
 12269  0144AA  0EFB               	movlw	-5
 12270  0144AC  50E3               	movf	plusw1,w,c
 12271  0144AE  2235               	addwfc	btemp^0,f,c
 12272  0144B0  0EF7               	movlw	-9
 12273  0144B2  0060  F0D7  FFE3   	movff	btemp,plusw1
 12274  0144B8  0EF8               	movlw	-8
 12275  0144BA  50E3               	movf	plusw1,w,c
 12276  0144BC  6E35               	movwf	btemp^0,c
 12277  0144BE  0EFC               	movlw	-4
 12278  0144C0  50E3               	movf	plusw1,w,c
 12279  0144C2  2235               	addwfc	btemp^0,f,c
 12280  0144C4  0EF8               	movlw	-8
 12281  0144C6  0060  F0D7  FFE3   	movff	btemp,plusw1
 12282  0144CC  0EF9               	movlw	-7
 12283  0144CE  50E3               	movf	plusw1,w,c
 12284  0144D0  6E35               	movwf	btemp^0,c
 12285  0144D2  0EFD               	movlw	-3
 12286  0144D4  50E3               	movf	plusw1,w,c
 12287  0144D6  2235               	addwfc	btemp^0,f,c
 12288  0144D8  0EF9               	movlw	-7
 12289  0144DA  0060  F0D7  FFE3   	movff	btemp,plusw1
 12290  0144E0                     l6277:
 12291                           
 12292                           ;stkvar	_m @ sp[(-10)+4]
 12293  0144E0  0EFA               	movlw	-6
 12294  0144E2  006F FF8C  F03D    	movff	plusw1,btemp+8
 12295  0144E8  0EFB               	movlw	-5
 12296  0144EA  006F FF8C  F03E    	movff	plusw1,btemp+9
 12297  0144F0  0EFC               	movlw	-4
 12298  0144F2  006F FF8C  F03F    	movff	plusw1,btemp+10
 12299  0144F8  0EFD               	movlw	-3
 12300  0144FA  006F FF8C  F040    	movff	plusw1,btemp+11
 12301  014500  1C3D               	comf	(btemp+8)^0,w,c
 12302  014502  6E39               	movwf	(btemp+4)^0,c
 12303  014504  1C3E               	comf	(btemp+9)^0,w,c
 12304  014506  6E3A               	movwf	(btemp+5)^0,c
 12305  014508  1C3F               	comf	(btemp+10)^0,w,c
 12306  01450A  6E3B               	movwf	(btemp+6)^0,c
 12307  01450C  1C40               	comf	(btemp+11)^0,w,c
 12308  01450E  6E3C               	movwf	(btemp+7)^0,c
 12309                           
 12310                           ;stkvar	_u @ sp[(-10)+0]
 12311  014510  50E1               	movf	fsr1l,w,c
 12312  014512  0FF6               	addlw	-10
 12313  014514  6ED9               	movwf	fsr2l,c
 12314  014516  50E2               	movf	fsr1h,w,c
 12315  014518  6EDA               	movwf	fsr2h,c
 12316  01451A  0EFF               	movlw	255
 12317  01451C  22DA               	addwfc	fsr2h,f,c
 12318  01451E  5039               	movf	(btemp+4)^0,w,c
 12319  014520  16DE               	andwf	postinc2,f,c
 12320  014522  503A               	movf	(btemp+5)^0,w,c
 12321  014524  16DE               	andwf	postinc2,f,c
 12322  014526  503B               	movf	(btemp+6)^0,w,c
 12323  014528  16DE               	andwf	postinc2,f,c
 12324  01452A  503C               	movf	(btemp+7)^0,w,c
 12325  01452C  16DE               	andwf	postinc2,f,c
 12326  01452E  D05B               	goto	l6287
 12327  014530                     l6279:
 12328                           
 12329                           ;stkvar	_u @ sp[(-10)+0]
 12330  014530  0EF6               	movlw	-10
 12331  014532  006F FF8C  F03D    	movff	plusw1,btemp+8
 12332  014538  0EF7               	movlw	-9
 12333  01453A  006F FF8C  F03E    	movff	plusw1,btemp+9
 12334  014540  0EF8               	movlw	-8
 12335  014542  006F FF8C  F03F    	movff	plusw1,btemp+10
 12336  014548  0EF9               	movlw	-7
 12337  01454A  006F FF8C  F040    	movff	plusw1,btemp+11
 12338  014550  0E20               	movlw	32
 12339  014552  D005               	goto	u5050
 12340  014554                     u5055:
 12341  014554  90D8               	bcf	status,0,c
 12342  014556  3240               	rrcf	(btemp+11)^0,f,c
 12343  014558  323F               	rrcf	(btemp+10)^0,f,c
 12344  01455A  323E               	rrcf	(btemp+9)^0,f,c
 12345  01455C  323D               	rrcf	(btemp+8)^0,f,c
 12346  01455E                     u5050:
 12347  01455E  2EE8               	decfsz	wreg,f,c
 12348  014560  D7F9               	goto	u5055
 12349  014562  663D               	tstfsz	(btemp+8)^0,c
 12350  014564  D009               	goto	l6283
 12351                           
 12352                           ;stkvar	_u @ sp[(-10)+0]
 12353  014566  0EF6               	movlw	-10
 12354  014568  6AE3               	clrf	plusw1,c
 12355  01456A  0EF7               	movlw	-9
 12356  01456C  6AE3               	clrf	plusw1,c
 12357  01456E  0EF8               	movlw	-8
 12358  014570  6AE3               	clrf	plusw1,c
 12359  014572  0EF9               	movlw	-7
 12360  014574  6AE3               	clrf	plusw1,c
 12361  014576  D037               	goto	l6287
 12362  014578                     l6283:
 12363                           
 12364                           ;stkvar	_u @ sp[(-10)+0]
 12365  014578  0EF6               	movlw	-10
 12366  01457A  006F FF8C  F03D    	movff	plusw1,btemp+8
 12367  014580  0EF7               	movlw	-9
 12368  014582  006F FF8C  F03E    	movff	plusw1,btemp+9
 12369  014588  0EF8               	movlw	-8
 12370  01458A  006F FF8C  F03F    	movff	plusw1,btemp+10
 12371  014590  0EF9               	movlw	-7
 12372  014592  006F FF8C  F040    	movff	plusw1,btemp+11
 12373  014598  90D8               	bcf	status,0,c
 12374  01459A  343D               	rlcf	(btemp+8)^0,w,c
 12375  01459C  6E39               	movwf	(btemp+4)^0,c
 12376  01459E  343E               	rlcf	(btemp+9)^0,w,c
 12377  0145A0  6E3A               	movwf	(btemp+5)^0,c
 12378  0145A2  343F               	rlcf	(btemp+10)^0,w,c
 12379  0145A4  6E3B               	movwf	(btemp+6)^0,c
 12380  0145A6  3440               	rlcf	(btemp+11)^0,w,c
 12381  0145A8  6E3C               	movwf	(btemp+7)^0,c
 12382  0145AA  5039               	movf	(btemp+4)^0,w,c
 12383  0145AC  103A               	iorwf	(btemp+5)^0,w,c
 12384  0145AE  103B               	iorwf	(btemp+6)^0,w,c
 12385  0145B0  103C               	iorwf	(btemp+7)^0,w,c
 12386  0145B2  B4D8               	btfsc	status,2,c
 12387  0145B4  D018               	goto	l6287
 12388  0145B6  0E00               	movlw	0
 12389  0145B8  6E3D               	movwf	(btemp+8)^0,c
 12390  0145BA  0E00               	movlw	0
 12391  0145BC  6E3E               	movwf	(btemp+9)^0,c
 12392  0145BE  0E80               	movlw	128
 12393  0145C0  6E3F               	movwf	(btemp+10)^0,c
 12394  0145C2  0EBF               	movlw	191
 12395  0145C4  6E40               	movwf	(btemp+11)^0,c
 12396                           
 12397                           ;stkvar	_u @ sp[(-10)+0]
 12398  0145C6  0EF6               	movlw	-10
 12399  0145C8  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12400  0145CE  0EF7               	movlw	-9
 12401  0145D0  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12402  0145D6  0EF8               	movlw	-8
 12403  0145D8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12404  0145DE  0EF9               	movlw	-7
 12405  0145E0  0060  F103  FFE3   	movff	btemp+11,plusw1
 12406  0145E6                     l6287:
 12407                           
 12408                           ;stkvar	_u @ sp[(-10)+0]
 12409  0145E6  0EF6               	movlw	-10
 12410  0145E8  006F FF8C  F035    	movff	plusw1,btemp
 12411  0145EE  0EF7               	movlw	-9
 12412  0145F0  006F FF8C  F036    	movff	plusw1,btemp+1
 12413  0145F6  0EF8               	movlw	-8
 12414  0145F8  006F FF8C  F037    	movff	plusw1,btemp+2
 12415  0145FE  0EF9               	movlw	-7
 12416  014600                     L11:
 12417  014600  006F FF8C  F038    	movff	plusw1,btemp+3
 12418                           
 12419                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 12420  014606  0EF2               	movlw	242
 12421  014608  26E1               	addwf	fsr1l,f,c
 12422  01460A  0EFF               	movlw	255
 12423  01460C  22E2               	addwfc	fsr1h,f,c
 12424  01460E  0012               	return		;funcret
 12425  014610                     __end_of_floorf:
 12426                           	opt callstack 0
 12427                           
 12428 ;; *************** function ___fpclassifyf *****************
 12429 ;; Defined at:
 12430 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 12431 ;; Parameters:    Size  Location     Type
 12432 ;;  x               4  [STACK] float 
 12433 ;; Auto vars:     Size  Location     Type
 12434 ;;  u               4  [STACK] struct .
 12435 ;;  e               2  [STACK] int 
 12436 ;; Return value:  Size  Location     Type
 12437 ;;                  2  [STACK] int 
 12438 ;; Registers used:
 12439 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 12440 ;; Tracked objects:
 12441 ;;		On entry : 0/4
 12442 ;;		On exit  : 0/0
 12443 ;;		Unchanged: 0/0
 12444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12449 ;;Total ram usage:        0 bytes
 12450 ;; Hardware stack levels used:    1
 12451 ;; Hardware stack levels required when called:    6
 12452 ;; This function calls:
 12453 ;;		Nothing
 12454 ;; This function is called by:
 12455 ;;		_efgtoa
 12456 ;; This function uses a reentrant model
 12457 ;;
 12458                           
 12459                           	psect	text46
 12460  015A8C                     __ptext46:
 12461                           	opt callstack 0
 12462  015A8C                     ___fpclassifyf:
 12463                           	opt callstack 0
 12464                           
 12465                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12466  015A8C  0E06               	movlw	6
 12467  015A8E  26E1               	addwf	fsr1l,f,c
 12468  015A90  0E00               	movlw	0
 12469  015A92  22E2               	addwfc	fsr1h,f,c
 12470                           
 12471                           ;incstack = 0
 12472  015A94  0060  F32C  F03D   	movff	___fpclassifyf@F463,btemp+8
 12473  015A9A  0060  F330  F03E   	movff	___fpclassifyf@F463+1,btemp+9
 12474  015AA0  0060  F334  F03F   	movff	___fpclassifyf@F463+2,btemp+10
 12475  015AA6  0060  F338  F040   	movff	___fpclassifyf@F463+3,btemp+11
 12476                           
 12477                           ;stkvar	_u @ sp[(-6)+0]
 12478  015AAC  0EFA               	movlw	-6
 12479  015AAE  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12480  015AB4  0EFB               	movlw	-5
 12481  015AB6  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12482  015ABC  0EFC               	movlw	-4
 12483  015ABE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12484  015AC4  0EFD               	movlw	-3
 12485  015AC6  0060  F103  FFE3   	movff	btemp+11,plusw1
 12486                           
 12487                           ;stkvar	_x @ sp[(-6)+-4]
 12488  015ACC  0EF6               	movlw	-10
 12489  015ACE  006F FF8C  F03D    	movff	plusw1,btemp+8
 12490  015AD4  0EF7               	movlw	-9
 12491  015AD6  006F FF8C  F03E    	movff	plusw1,btemp+9
 12492  015ADC  0EF8               	movlw	-8
 12493  015ADE  006F FF8C  F03F    	movff	plusw1,btemp+10
 12494  015AE4  0EF9               	movlw	-7
 12495  015AE6  006F FF8C  F040    	movff	plusw1,btemp+11
 12496                           
 12497                           ;stkvar	_u @ sp[(-6)+0]
 12498  015AEC  0EFA               	movlw	-6
 12499  015AEE  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12500  015AF4  0EFB               	movlw	-5
 12501  015AF6  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12502  015AFC  0EFC               	movlw	-4
 12503  015AFE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12504  015B04  0EFD               	movlw	-3
 12505  015B06  0060  F103  FFE3   	movff	btemp+11,plusw1
 12506                           
 12507                           ;stkvar	_u @ sp[(-6)+0]
 12508  015B0C  0EFA               	movlw	-6
 12509  015B0E  006F FF8C  F03D    	movff	plusw1,btemp+8
 12510  015B14  0EFB               	movlw	-5
 12511  015B16  006F FF8C  F03E    	movff	plusw1,btemp+9
 12512  015B1C  0EFC               	movlw	-4
 12513  015B1E  006F FF8C  F03F    	movff	plusw1,btemp+10
 12514  015B24  0EFD               	movlw	-3
 12515  015B26  006F FF8C  F040    	movff	plusw1,btemp+11
 12516  015B2C  0E18               	movlw	24
 12517  015B2E  D005               	goto	u4860
 12518  015B30                     u4865:
 12519  015B30  90D8               	bcf	status,0,c
 12520  015B32  3240               	rrcf	(btemp+11)^0,f,c
 12521  015B34  323F               	rrcf	(btemp+10)^0,f,c
 12522  015B36  323E               	rrcf	(btemp+9)^0,f,c
 12523  015B38  323D               	rrcf	(btemp+8)^0,f,c
 12524  015B3A                     u4860:
 12525  015B3A  2EE8               	decfsz	wreg,f,c
 12526  015B3C  D7F9               	goto	u4865
 12527  015B3E  0060  F0F4  F03B   	movff	btemp+8,btemp+6
 12528  015B44  0060  F0F8  F03C   	movff	btemp+9,btemp+7
 12529  015B4A  0EFF               	movlw	255
 12530  015B4C  163B               	andwf	(btemp+6)^0,f,c
 12531  015B4E  0E00               	movlw	0
 12532  015B50  163C               	andwf	(btemp+7)^0,f,c
 12533                           
 12534                           ;stkvar	_e @ sp[(-6)+4]
 12535  015B52  0EFE               	movlw	-2
 12536  015B54  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 12537  015B5A  0EFF               	movlw	-1
 12538  015B5C  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 12539                           
 12540                           ;stkvar	_e @ sp[(-6)+4]
 12541  015B62  0EFE               	movlw	-2
 12542  015B64  006F FF8C  F035    	movff	plusw1,btemp
 12543  015B6A  0EFF               	movlw	-1
 12544  015B6C  50E3               	movf	plusw1,w,c
 12545  015B6E  1035               	iorwf	btemp^0,w,c
 12546  015B70  A4D8               	btfss	status,2,c
 12547  015B72  D023               	goto	l6225
 12548                           
 12549                           ;stkvar	_u @ sp[(-6)+0]
 12550  015B74  0EFA               	movlw	-6
 12551  015B76  006F FF8C  F03D    	movff	plusw1,btemp+8
 12552  015B7C  0EFB               	movlw	-5
 12553  015B7E  006F FF8C  F03E    	movff	plusw1,btemp+9
 12554  015B84  0EFC               	movlw	-4
 12555  015B86  006F FF8C  F03F    	movff	plusw1,btemp+10
 12556  015B8C  0EFD               	movlw	-3
 12557  015B8E  006F FF8C  F040    	movff	plusw1,btemp+11
 12558  015B94  90D8               	bcf	status,0,c
 12559  015B96  343D               	rlcf	(btemp+8)^0,w,c
 12560  015B98  6E39               	movwf	(btemp+4)^0,c
 12561  015B9A  343E               	rlcf	(btemp+9)^0,w,c
 12562  015B9C  6E3A               	movwf	(btemp+5)^0,c
 12563  015B9E  343F               	rlcf	(btemp+10)^0,w,c
 12564  015BA0  6E3B               	movwf	(btemp+6)^0,c
 12565  015BA2  3440               	rlcf	(btemp+11)^0,w,c
 12566  015BA4  6E3C               	movwf	(btemp+7)^0,c
 12567  015BA6  5039               	movf	(btemp+4)^0,w,c
 12568  015BA8  103A               	iorwf	(btemp+5)^0,w,c
 12569  015BAA  103B               	iorwf	(btemp+6)^0,w,c
 12570  015BAC  103C               	iorwf	(btemp+7)^0,w,c
 12571  015BAE  A4D8               	btfss	status,2,c
 12572  015BB0  D002               	goto	l6221
 12573  015BB2  0E02               	movlw	2
 12574  015BB4  D02E               	goto	L12
 12575  015BB6                     l6221:
 12576  015BB6  0E03               	movlw	3
 12577  015BB8  D02C               	goto	L12
 12578  015BBA                     l6225:
 12579                           
 12580                           ;stkvar	_e @ sp[(-6)+4]
 12581  015BBA  0EFE               	movlw	-2
 12582  015BBC  28E3               	incf	plusw1,w,c
 12583  015BBE  E128               	bnz	l6231
 12584  015BC0  0EFF               	movlw	-1
 12585  015BC2  50E3               	movf	plusw1,w,c
 12586  015BC4  A4D8               	btfss	status,2,c
 12587  015BC6  D024               	goto	l6231
 12588                           
 12589                           ;stkvar	_u @ sp[(-6)+0]
 12590  015BC8  0EFA               	movlw	-6
 12591  015BCA  006F FF8C  F03D    	movff	plusw1,btemp+8
 12592  015BD0  0EFB               	movlw	-5
 12593  015BD2  006F FF8C  F03E    	movff	plusw1,btemp+9
 12594  015BD8  0EFC               	movlw	-4
 12595  015BDA  006F FF8C  F03F    	movff	plusw1,btemp+10
 12596  015BE0  0EFD               	movlw	-3
 12597  015BE2  006F FF8C  F040    	movff	plusw1,btemp+11
 12598  015BE8  0E09               	movlw	9
 12599  015BEA                     u4905:
 12600  015BEA  90D8               	bcf	status,0,c
 12601  015BEC  363D               	rlcf	(btemp+8)^0,f,c
 12602  015BEE  363E               	rlcf	(btemp+9)^0,f,c
 12603  015BF0  363F               	rlcf	(btemp+10)^0,f,c
 12604  015BF2  3640               	rlcf	(btemp+11)^0,f,c
 12605  015BF4  2EE8               	decfsz	wreg,f,c
 12606  015BF6  D7F9               	goto	u4905
 12607  015BF8  503D               	movf	(btemp+8)^0,w,c
 12608  015BFA  103E               	iorwf	(btemp+9)^0,w,c
 12609  015BFC  103F               	iorwf	(btemp+10)^0,w,c
 12610  015BFE  1040               	iorwf	(btemp+11)^0,w,c
 12611  015C00  A4D8               	btfss	status,2,c
 12612  015C02  D002               	goto	u4910
 12613  015C04  0E01               	movlw	1
 12614  015C06  D001               	goto	u4920
 12615  015C08                     u4910:
 12616  015C08  0E00               	movlw	0
 12617  015C0A                     u4920:
 12618  015C0A  6E35               	movwf	btemp^0,c
 12619  015C0C  6A36               	clrf	(btemp+1)^0,c
 12620  015C0E  D004               	goto	l2655
 12621  015C10                     l6231:
 12622  015C10  0E04               	movlw	4
 12623  015C12                     L12:
 12624  015C12  6E35               	movwf	btemp^0,c
 12625  015C14  0E00               	movlw	0
 12626  015C16  6E36               	movwf	(btemp+1)^0,c
 12627  015C18                     l2655:
 12628                           
 12629                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 12630  015C18  0EF6               	movlw	246
 12631  015C1A  26E1               	addwf	fsr1l,f,c
 12632  015C1C  0EFF               	movlw	255
 12633  015C1E  22E2               	addwfc	fsr1h,f,c
 12634  015C20  0012               	return		;funcret
 12635  015C22                     __end_of___fpclassifyf:
 12636                           	opt callstack 0
 12637                           
 12638 ;; *************** function ___fltol *****************
 12639 ;; Defined at:
 12640 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 12641 ;; Parameters:    Size  Location     Type
 12642 ;;  f1              4  [STACK] int 
 12643 ;; Auto vars:     Size  Location     Type
 12644 ;;  exp1            1  [STACK] unsigned char 
 12645 ;;  sign1           1  [STACK] unsigned char 
 12646 ;; Return value:  Size  Location     Type
 12647 ;;                  4  [STACK] long 
 12648 ;; Registers used:
 12649 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 12650 ;; Tracked objects:
 12651 ;;		On entry : 0/4
 12652 ;;		On exit  : 0/0
 12653 ;;		Unchanged: 0/0
 12654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12659 ;;Total ram usage:        0 bytes
 12660 ;; Hardware stack levels used:    1
 12661 ;; Hardware stack levels required when called:    6
 12662 ;; This function calls:
 12663 ;;		Nothing
 12664 ;; This function is called by:
 12665 ;;		_efgtoa
 12666 ;; This function uses a reentrant model
 12667 ;;
 12668                           
 12669                           	psect	text47
 12670  015C22                     __ptext47:
 12671                           	opt callstack 0
 12672  015C22                     ___fltol:
 12673                           	opt callstack 0
 12674                           
 12675                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12676  015C22  52E6               	movf	postinc1,f,c
 12677  015C24  52E6               	movf	postinc1,f,c
 12678                           
 12679                           ;stkvar	_f1 @ sp[(-2)+-4]
 12680                           
 12681                           ;incstack = 0
 12682  015C26  0EFA               	movlw	-6
 12683  015C28  006F FF8C  F03D    	movff	plusw1,btemp+8
 12684  015C2E  0EFB               	movlw	-5
 12685  015C30  006F FF8C  F03E    	movff	plusw1,btemp+9
 12686  015C36  0EFC               	movlw	-4
 12687  015C38  006F FF8C  F03F    	movff	plusw1,btemp+10
 12688  015C3E  0EFD               	movlw	-3
 12689  015C40  006F FF8C  F040    	movff	plusw1,btemp+11
 12690  015C46  0E18               	movlw	24
 12691  015C48  D005               	goto	u6070
 12692  015C4A                     u6075:
 12693  015C4A  90D8               	bcf	status,0,c
 12694  015C4C  3240               	rrcf	(btemp+11)^0,f,c
 12695  015C4E  323F               	rrcf	(btemp+10)^0,f,c
 12696  015C50  323E               	rrcf	(btemp+9)^0,f,c
 12697  015C52  323D               	rrcf	(btemp+8)^0,f,c
 12698  015C54                     u6070:
 12699  015C54  2EE8               	decfsz	wreg,f,c
 12700  015C56  D7F9               	goto	u6075
 12701                           
 12702                           ;stkvar	_exp1 @ sp[(-2)+0]
 12703  015C58  0EFE               	movlw	-2
 12704  015C5A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12705  015C60  0EFE               	movlw	-2
 12706  015C62  50E3               	movf	plusw1,w,c
 12707  015C64  A4D8               	btfss	status,2,c
 12708  015C66  D006               	goto	l6851
 12709  015C68                     u6080:
 12710  015C68  0E00               	movlw	0
 12711  015C6A  6E35               	movwf	btemp^0,c
 12712  015C6C  6A36               	clrf	(btemp+1)^0,c
 12713  015C6E  6A37               	clrf	(btemp+2)^0,c
 12714  015C70  6A38               	clrf	(btemp+3)^0,c
 12715  015C72  D08B               	goto	l2271
 12716  015C74                     l6851:
 12717                           
 12718                           ;stkvar	_f1 @ sp[(-2)+-4]
 12719  015C74  0EFA               	movlw	-6
 12720  015C76  006F FF8C  F03D    	movff	plusw1,btemp+8
 12721  015C7C  0EFB               	movlw	-5
 12722  015C7E  006F FF8C  F03E    	movff	plusw1,btemp+9
 12723  015C84  0EFC               	movlw	-4
 12724  015C86  006F FF8C  F03F    	movff	plusw1,btemp+10
 12725  015C8C  0EFD               	movlw	-3
 12726  015C8E  006F FF8C  F040    	movff	plusw1,btemp+11
 12727  015C94  0E20               	movlw	32
 12728  015C96  D005               	goto	u6090
 12729  015C98                     u6095:
 12730  015C98  90D8               	bcf	status,0,c
 12731  015C9A  3240               	rrcf	(btemp+11)^0,f,c
 12732  015C9C  323F               	rrcf	(btemp+10)^0,f,c
 12733  015C9E  323E               	rrcf	(btemp+9)^0,f,c
 12734  015CA0  323D               	rrcf	(btemp+8)^0,f,c
 12735  015CA2                     u6090:
 12736  015CA2  2EE8               	decfsz	wreg,f,c
 12737  015CA4  D7F9               	goto	u6095
 12738                           
 12739                           ;stkvar	_sign1 @ sp[(-2)+1]
 12740  015CA6  0EFF               	movlw	-1
 12741  015CA8  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12742                           
 12743                           ;stkvar	_f1 @ sp[(-2)+-4]
 12744  015CAE  0EFC               	movlw	-4
 12745  015CB0  8EE3               	bsf	plusw1,7,c
 12746                           
 12747                           ;stkvar	_f1 @ sp[(-2)+-4]
 12748  015CB2  50E1               	movf	fsr1l,w,c
 12749  015CB4  0FFA               	addlw	-6
 12750  015CB6  6ED9               	movwf	fsr2l,c
 12751  015CB8  50E2               	movf	fsr1h,w,c
 12752  015CBA  6EDA               	movwf	fsr2h,c
 12753  015CBC  0EFF               	movlw	255
 12754  015CBE  22DA               	addwfc	fsr2h,f,c
 12755  015CC0  0EFF               	movlw	255
 12756  015CC2  16DE               	andwf	postinc2,f,c
 12757  015CC4  0EFF               	movlw	255
 12758  015CC6  16DE               	andwf	postinc2,f,c
 12759  015CC8  0EFF               	movlw	255
 12760  015CCA  16DE               	andwf	postinc2,f,c
 12761  015CCC  0E00               	movlw	0
 12762  015CCE  16DE               	andwf	postinc2,f,c
 12763                           
 12764                           ;stkvar	_exp1 @ sp[(-2)+0]
 12765  015CD0  0EFE               	movlw	-2
 12766  015CD2  006F FF8C  F035    	movff	plusw1,btemp
 12767  015CD8  0E96               	movlw	150
 12768  015CDA  5E35               	subwf	btemp^0,f,c
 12769  015CDC  0EFE               	movlw	-2
 12770  015CDE  0060  F0D7  FFE3   	movff	btemp,plusw1
 12771                           
 12772                           ;stkvar	_exp1 @ sp[(-2)+0]
 12773  015CE4  0EFE               	movlw	-2
 12774  015CE6  AEE3               	btfss	plusw1,7,c
 12775  015CE8  D014               	goto	l6869
 12776                           
 12777                           ;stkvar	_exp1 @ sp[(-2)+0]
 12778  015CEA  0EFE               	movlw	-2
 12779  015CEC  50E3               	movf	plusw1,w,c
 12780  015CEE  0A80               	xorlw	128
 12781  015CF0  0F97               	addlw	151
 12782  015CF2  A0D8               	btfss	status,0,c
 12783  015CF4  D7B9               	goto	u6080
 12784  015CF6                     l6867:
 12785                           
 12786                           ;stkvar	_f1 @ sp[(-2)+-4]
 12787  015CF6  90D8               	bcf	status,0,c
 12788  015CF8  0EFD               	movlw	-3
 12789  015CFA  32E3               	rrcf	plusw1,f,c
 12790  015CFC  0EFC               	movlw	-4
 12791  015CFE  32E3               	rrcf	plusw1,f,c
 12792  015D00  0EFB               	movlw	-5
 12793  015D02  32E3               	rrcf	plusw1,f,c
 12794  015D04  0EFA               	movlw	-6
 12795  015D06  32E3               	rrcf	plusw1,f,c
 12796                           
 12797                           ;stkvar	_exp1 @ sp[(-2)+0]
 12798  015D08  0EFE               	movlw	-2
 12799  015D0A  2AE3               	incf	plusw1,f,c
 12800  015D0C  B4D8               	btfsc	status,2,c
 12801  015D0E  D018               	goto	u6140
 12802  015D10  D7F2               	goto	l6867
 12803  015D12                     l6869:
 12804                           
 12805                           ;stkvar	_exp1 @ sp[(-2)+0]
 12806  015D12  0EFE               	movlw	-2
 12807  015D14  006F FF8C  F035    	movff	plusw1,btemp
 12808  015D1A  0E1F               	movlw	31
 12809  015D1C  6435               	cpfsgt	btemp^0,c
 12810  015D1E  D00C               	goto	l6877
 12811  015D20  D7A3               	goto	u6080
 12812  015D22                     l6875:
 12813                           
 12814                           ;stkvar	_f1 @ sp[(-2)+-4]
 12815  015D22  90D8               	bcf	status,0,c
 12816  015D24  0EFA               	movlw	-6
 12817  015D26  36E3               	rlcf	plusw1,f,c
 12818  015D28  0EFB               	movlw	-5
 12819  015D2A  36E3               	rlcf	plusw1,f,c
 12820  015D2C  0EFC               	movlw	-4
 12821  015D2E  36E3               	rlcf	plusw1,f,c
 12822  015D30  0EFD               	movlw	-3
 12823  015D32  36E3               	rlcf	plusw1,f,c
 12824                           
 12825                           ;stkvar	_exp1 @ sp[(-2)+0]
 12826  015D34  0EFE               	movlw	-2
 12827  015D36  06E3               	decf	plusw1,f,c
 12828  015D38                     l6877:
 12829                           
 12830                           ;stkvar	_exp1 @ sp[(-2)+0]
 12831  015D38  0EFE               	movlw	-2
 12832  015D3A  50E3               	movf	plusw1,w,c
 12833  015D3C  A4D8               	btfss	status,2,c
 12834  015D3E  D7F1               	goto	l6875
 12835  015D40                     u6140:
 12836                           
 12837                           ;stkvar	_sign1 @ sp[(-2)+1]
 12838  015D40  0EFF               	movlw	-1
 12839  015D42  50E3               	movf	plusw1,w,c
 12840  015D44  B4D8               	btfsc	status,2,c
 12841  015D46  D011               	goto	u6160
 12842                           
 12843                           ;stkvar	_f1 @ sp[(-2)+-4]
 12844                           ;stkvar	_f1 @ sp[(-2)+-4]
 12845  015D48  0EFA               	movlw	-6
 12846  015D4A  6CE3               	negf	plusw1,c
 12847  015D4C  0EFB               	movlw	-5
 12848  015D4E  1EE3               	comf	plusw1,f,c
 12849  015D50  0EFC               	movlw	-4
 12850  015D52  1EE3               	comf	plusw1,f,c
 12851  015D54  0EFD               	movlw	-3
 12852  015D56  1EE3               	comf	plusw1,f,c
 12853  015D58  E308               	bnc	u6160
 12854  015D5A  0EFB               	movlw	-5
 12855  015D5C  2AE3               	incf	plusw1,f,c
 12856  015D5E  E305               	bnc	u6160
 12857  015D60  0EFC               	movlw	-4
 12858  015D62  2AE3               	incf	plusw1,f,c
 12859  015D64  E302               	bnc	u6160
 12860  015D66  0EFD               	movlw	-3
 12861  015D68  2AE3               	incf	plusw1,f,c
 12862  015D6A                     u6160:
 12863                           
 12864                           ;stkvar	_f1 @ sp[(-2)+-4]
 12865  015D6A  0EFA               	movlw	-6
 12866  015D6C  006F FF8C  F035    	movff	plusw1,btemp
 12867  015D72  0EFB               	movlw	-5
 12868  015D74  006F FF8C  F036    	movff	plusw1,btemp+1
 12869  015D7A  0EFC               	movlw	-4
 12870  015D7C  006F FF8C  F037    	movff	plusw1,btemp+2
 12871  015D82  0EFD               	movlw	-3
 12872  015D84  006F FF8C  F038    	movff	plusw1,btemp+3
 12873  015D8A                     l2271:
 12874                           
 12875                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 12876  015D8A  0EFA               	movlw	250
 12877  015D8C  26E1               	addwf	fsr1l,f,c
 12878  015D8E  0EFF               	movlw	255
 12879  015D90  22E2               	addwfc	fsr1h,f,c
 12880  015D92  0012               	return		;funcret
 12881  015D94                     __end_of___fltol:
 12882                           	opt callstack 0
 12883                           
 12884 ;; *************** function ___flsub *****************
 12885 ;; Defined at:
 12886 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 12887 ;; Parameters:    Size  Location     Type
 12888 ;;  b               4  [STACK] long 
 12889 ;;  a               4  [STACK] long 
 12890 ;; Auto vars:     Size  Location     Type
 12891 ;;		None
 12892 ;; Return value:  Size  Location     Type
 12893 ;;                  4  [STACK] long 
 12894 ;; Registers used:
 12895 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 12896 ;; Tracked objects:
 12897 ;;		On entry : 0/4
 12898 ;;		On exit  : 0/0
 12899 ;;		Unchanged: 0/0
 12900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12905 ;;Total ram usage:        0 bytes
 12906 ;; Hardware stack levels used:    1
 12907 ;; Hardware stack levels required when called:    7
 12908 ;; This function calls:
 12909 ;;		___fladd
 12910 ;; This function is called by:
 12911 ;;		_conv_raw_result
 12912 ;;		_lp_filter
 12913 ;;		_efgtoa
 12914 ;; This function uses a reentrant model
 12915 ;;
 12916                           
 12917                           	psect	text48
 12918  017748                     __ptext48:
 12919                           	opt callstack 0
 12920  017748                     ___flsub:
 12921                           	opt callstack 16
 12922                           
 12923                           ;stkvar	_a @ sp[(0)+-8]
 12924                           
 12925                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12926                           ;incstack = 0
 12927  017748  0EFB               	movlw	-5
 12928  01774A  7EE3               	btg	plusw1,7,c
 12929                           
 12930                           ;stkvar	_a @ sp[(0)+-8]
 12931  01774C  0EF8               	movlw	-8
 12932  01774E  006F FF8F FFE6     	movff	plusw1,postinc1
 12933  017754  006F FF8F FFE6     	movff	plusw1,postinc1
 12934  01775A  006F FF8F FFE6     	movff	plusw1,postinc1
 12935  017760  006F FF8F FFE6     	movff	plusw1,postinc1
 12936                           
 12937                           ;stkvar	_b @ sp[(-4)+-4]
 12938  017766  0EF8               	movlw	-8
 12939  017768  006F FF8F FFE6     	movff	plusw1,postinc1
 12940  01776E  006F FF8F FFE6     	movff	plusw1,postinc1
 12941  017774  006F FF8F FFE6     	movff	plusw1,postinc1
 12942  01777A  006F FF8F FFE6     	movff	plusw1,postinc1
 12943  017780  ECD6  F092         	call	___fladd	;wreg free
 12944                           
 12945                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 12946  017784  0EF8               	movlw	248
 12947  017786  26E1               	addwf	fsr1l,f,c
 12948  017788  0EFF               	movlw	255
 12949  01778A  22E2               	addwfc	fsr1h,f,c
 12950  01778C  0012               	return		;funcret
 12951  01778E                     __end_of___flsub:
 12952                           	opt callstack 0
 12953                           
 12954 ;; *************** function ___fladd *****************
 12955 ;; Defined at:
 12956 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 12957 ;; Parameters:    Size  Location     Type
 12958 ;;  b               4  [STACK] long 
 12959 ;;  a               4  [STACK] long 
 12960 ;; Auto vars:     Size  Location     Type
 12961 ;;  grs             1  [STACK] unsigned char 
 12962 ;;  bexp            1  [STACK] unsigned char 
 12963 ;;  aexp            1  [STACK] unsigned char 
 12964 ;;  signs           1  [STACK] unsigned char 
 12965 ;; Return value:  Size  Location     Type
 12966 ;;                  4  [STACK] unsigned char 
 12967 ;; Registers used:
 12968 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 12969 ;; Tracked objects:
 12970 ;;		On entry : 0/4
 12971 ;;		On exit  : 0/0
 12972 ;;		Unchanged: 0/0
 12973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12978 ;;Total ram usage:        0 bytes
 12979 ;; Hardware stack levels used:    1
 12980 ;; Hardware stack levels required when called:    6
 12981 ;; This function calls:
 12982 ;;		Nothing
 12983 ;; This function is called by:
 12984 ;;		_lp_filter
 12985 ;;		_efgtoa
 12986 ;;		___flsub
 12987 ;; This function uses a reentrant model
 12988 ;;
 12989                           
 12990                           	psect	text49
 12991  0125AC                     __ptext49:
 12992                           	opt callstack 0
 12993  0125AC                     ___fladd:
 12994                           	opt callstack 0
 12995                           
 12996                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12997  0125AC  52E6               	movf	postinc1,f,c
 12998  0125AE  52E6               	movf	postinc1,f,c
 12999  0125B0  52E6               	movf	postinc1,f,c
 13000  0125B2  52E6               	movf	postinc1,f,c
 13001                           
 13002                           ;stkvar	_b @ sp[(-4)+-4]
 13003                           
 13004                           ;incstack = 0
 13005  0125B4  0EFB               	movlw	251
 13006  0125B6  24E1               	addwf	fsr1l,w,c
 13007  0125B8  6ED9               	movwf	fsr2l,c
 13008  0125BA  0EFF               	movlw	255
 13009  0125BC  20E2               	addwfc	fsr1h,w,c
 13010  0125BE  6EDA               	movwf	fsr2h,c
 13011  0125C0  50DF               	movf	indf2,w,c
 13012  0125C2  6E40               	movwf	(btemp+11)^0,c
 13013  0125C4  0E80               	movlw	128
 13014  0125C6  1640               	andwf	(btemp+11)^0,f,c
 13015                           
 13016                           ;stkvar	_signs @ sp[(-4)+3]
 13017  0125C8  0EFF               	movlw	-1
 13018  0125CA  0060  F103  FFE3   	movff	btemp+11,plusw1
 13019                           
 13020                           ;stkvar	_b @ sp[(-4)+-4]
 13021  0125D0  0EFB               	movlw	251
 13022  0125D2  24E1               	addwf	fsr1l,w,c
 13023  0125D4  6ED9               	movwf	fsr2l,c
 13024  0125D6  0EFF               	movlw	255
 13025  0125D8  20E2               	addwfc	fsr1h,w,c
 13026  0125DA  6EDA               	movwf	fsr2h,c
 13027  0125DC  50DF               	movf	indf2,w,c
 13028  0125DE  6E40               	movwf	(btemp+11)^0,c
 13029  0125E0  90D8               	bcf	status,0,c
 13030  0125E2  3440               	rlcf	(btemp+11)^0,w,c
 13031  0125E4  6E3F               	movwf	(btemp+10)^0,c
 13032                           
 13033                           ;stkvar	_bexp @ sp[(-4)+1]
 13034  0125E6  0EFD               	movlw	-3
 13035  0125E8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13036                           
 13037                           ;stkvar	_b @ sp[(-4)+-4]
 13038  0125EE  0EFA               	movlw	250
 13039  0125F0  24E1               	addwf	fsr1l,w,c
 13040  0125F2  6ED9               	movwf	fsr2l,c
 13041  0125F4  0EFF               	movlw	255
 13042  0125F6  20E2               	addwfc	fsr1h,w,c
 13043  0125F8  6EDA               	movwf	fsr2h,c
 13044  0125FA  AEDF               	btfss	indf2,7,c
 13045  0125FC  D002               	goto	l5965
 13046                           
 13047                           ;stkvar	_bexp @ sp[(-4)+1]
 13048  0125FE  0EFD               	movlw	-3
 13049  012600  80E3               	bsf	plusw1,0,c
 13050  012602                     l5965:
 13051                           
 13052                           ;stkvar	_bexp @ sp[(-4)+1]
 13053  012602  0EFD               	movlw	-3
 13054  012604  50E3               	movf	plusw1,w,c
 13055  012606  B4D8               	btfsc	status,2,c
 13056  012608  D027               	goto	l5975
 13057                           
 13058                           ;stkvar	_bexp @ sp[(-4)+1]
 13059  01260A  0EFD               	movlw	-3
 13060  01260C  28E3               	incf	plusw1,w,c
 13061  01260E  A4D8               	btfss	status,2,c
 13062  012610  D018               	goto	l5971
 13063  012612  0E00               	movlw	0
 13064  012614  6E3D               	movwf	(btemp+8)^0,c
 13065  012616  0E00               	movlw	0
 13066  012618  6E3E               	movwf	(btemp+9)^0,c
 13067  01261A  0E00               	movlw	0
 13068  01261C  6E3F               	movwf	(btemp+10)^0,c
 13069  01261E  0E00               	movlw	0
 13070  012620  6E40               	movwf	(btemp+11)^0,c
 13071                           
 13072                           ;stkvar	_b @ sp[(-4)+-4]
 13073  012622  0EF8               	movlw	-8
 13074  012624  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13075  01262A  0EF9               	movlw	-7
 13076  01262C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13077  012632  0EFA               	movlw	-6
 13078  012634  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13079  01263A  0EFB               	movlw	-5
 13080  01263C  0060  F103  FFE3   	movff	btemp+11,plusw1
 13081  012642                     l5971:
 13082                           
 13083                           ;stkvar	_b @ sp[(-4)+-4]
 13084  012642  0EFA               	movlw	-6
 13085  012644  8EE3               	bsf	plusw1,7,c
 13086                           
 13087                           ;stkvar	_b @ sp[(-4)+-4]
 13088  012646  0EFB               	movlw	251
 13089  012648  24E1               	addwf	fsr1l,w,c
 13090  01264A  6ED9               	movwf	fsr2l,c
 13091  01264C  0EFF               	movlw	255
 13092  01264E  20E2               	addwfc	fsr1h,w,c
 13093  012650  6EDA               	movwf	fsr2h,c
 13094  012652  0E00               	movlw	0
 13095  012654  6EDF               	movwf	indf2,c
 13096  012656  D018               	goto	l5977
 13097  012658                     l5975:
 13098  012658  0E00               	movlw	0
 13099  01265A  6E3D               	movwf	(btemp+8)^0,c
 13100  01265C  0E00               	movlw	0
 13101  01265E  6E3E               	movwf	(btemp+9)^0,c
 13102  012660  0E00               	movlw	0
 13103  012662  6E3F               	movwf	(btemp+10)^0,c
 13104  012664  0E00               	movlw	0
 13105  012666  6E40               	movwf	(btemp+11)^0,c
 13106                           
 13107                           ;stkvar	_b @ sp[(-4)+-4]
 13108  012668  0EF8               	movlw	-8
 13109  01266A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13110  012670  0EF9               	movlw	-7
 13111  012672  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13112  012678  0EFA               	movlw	-6
 13113  01267A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13114  012680  0EFB               	movlw	-5
 13115  012682  0060  F103  FFE3   	movff	btemp+11,plusw1
 13116  012688                     l5977:
 13117                           
 13118                           ;stkvar	_a @ sp[(-4)+-8]
 13119  012688  0EF7               	movlw	247
 13120  01268A  24E1               	addwf	fsr1l,w,c
 13121  01268C  6ED9               	movwf	fsr2l,c
 13122  01268E  0EFF               	movlw	255
 13123  012690  20E2               	addwfc	fsr1h,w,c
 13124  012692  6EDA               	movwf	fsr2h,c
 13125  012694  50DF               	movf	indf2,w,c
 13126  012696  6E40               	movwf	(btemp+11)^0,c
 13127  012698  0E80               	movlw	128
 13128  01269A  1640               	andwf	(btemp+11)^0,f,c
 13129                           
 13130                           ;stkvar	_aexp @ sp[(-4)+2]
 13131  01269C  0EFE               	movlw	-2
 13132  01269E  0060  F103  FFE3   	movff	btemp+11,plusw1
 13133                           
 13134                           ;stkvar	_signs @ sp[(-4)+3]
 13135                           ;stkvar	_aexp @ sp[(-4)+2]
 13136  0126A4  50E1               	movf	fsr1l,w,c
 13137  0126A6  0FFE               	addlw	-2
 13138  0126A8  6ED9               	movwf	fsr2l,c
 13139  0126AA  50E2               	movf	fsr1h,w,c
 13140  0126AC  6EDA               	movwf	fsr2h,c
 13141  0126AE  0EFF               	movlw	255
 13142  0126B0  22DA               	addwfc	fsr2h,f,c
 13143  0126B2  0EFF               	movlw	-1
 13144  0126B4  50E3               	movf	plusw1,w,c
 13145  0126B6  18DE               	xorwf	postinc2,w,c
 13146  0126B8  B4D8               	btfsc	status,2,c
 13147  0126BA  D002               	goto	l5983
 13148                           
 13149                           ;stkvar	_signs @ sp[(-4)+3]
 13150  0126BC  0EFF               	movlw	-1
 13151  0126BE  8CE3               	bsf	plusw1,6,c
 13152  0126C0                     l5983:
 13153                           
 13154                           ;stkvar	_a @ sp[(-4)+-8]
 13155  0126C0  0EF7               	movlw	247
 13156  0126C2  24E1               	addwf	fsr1l,w,c
 13157  0126C4  6ED9               	movwf	fsr2l,c
 13158  0126C6  0EFF               	movlw	255
 13159  0126C8  20E2               	addwfc	fsr1h,w,c
 13160  0126CA  6EDA               	movwf	fsr2h,c
 13161  0126CC  50DF               	movf	indf2,w,c
 13162  0126CE  6E40               	movwf	(btemp+11)^0,c
 13163  0126D0  90D8               	bcf	status,0,c
 13164  0126D2  3440               	rlcf	(btemp+11)^0,w,c
 13165  0126D4  6E3F               	movwf	(btemp+10)^0,c
 13166                           
 13167                           ;stkvar	_aexp @ sp[(-4)+2]
 13168  0126D6  0EFE               	movlw	-2
 13169  0126D8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13170                           
 13171                           ;stkvar	_a @ sp[(-4)+-8]
 13172  0126DE  0EF6               	movlw	246
 13173  0126E0  24E1               	addwf	fsr1l,w,c
 13174  0126E2  6ED9               	movwf	fsr2l,c
 13175  0126E4  0EFF               	movlw	255
 13176  0126E6  20E2               	addwfc	fsr1h,w,c
 13177  0126E8  6EDA               	movwf	fsr2h,c
 13178  0126EA  AEDF               	btfss	indf2,7,c
 13179  0126EC  D002               	goto	l5989
 13180                           
 13181                           ;stkvar	_aexp @ sp[(-4)+2]
 13182  0126EE  0EFE               	movlw	-2
 13183  0126F0  80E3               	bsf	plusw1,0,c
 13184  0126F2                     l5989:
 13185                           
 13186                           ;stkvar	_aexp @ sp[(-4)+2]
 13187  0126F2  0EFE               	movlw	-2
 13188  0126F4  50E3               	movf	plusw1,w,c
 13189  0126F6  B4D8               	btfsc	status,2,c
 13190  0126F8  D027               	goto	l5999
 13191                           
 13192                           ;stkvar	_aexp @ sp[(-4)+2]
 13193  0126FA  0EFE               	movlw	-2
 13194  0126FC  28E3               	incf	plusw1,w,c
 13195  0126FE  A4D8               	btfss	status,2,c
 13196  012700  D018               	goto	l5995
 13197  012702  0E00               	movlw	0
 13198  012704  6E3D               	movwf	(btemp+8)^0,c
 13199  012706  0E00               	movlw	0
 13200  012708  6E3E               	movwf	(btemp+9)^0,c
 13201  01270A  0E00               	movlw	0
 13202  01270C  6E3F               	movwf	(btemp+10)^0,c
 13203  01270E  0E00               	movlw	0
 13204  012710  6E40               	movwf	(btemp+11)^0,c
 13205                           
 13206                           ;stkvar	_a @ sp[(-4)+-8]
 13207  012712  0EF4               	movlw	-12
 13208  012714  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13209  01271A  0EF5               	movlw	-11
 13210  01271C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13211  012722  0EF6               	movlw	-10
 13212  012724  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13213  01272A  0EF7               	movlw	-9
 13214  01272C  0060  F103  FFE3   	movff	btemp+11,plusw1
 13215  012732                     l5995:
 13216                           
 13217                           ;stkvar	_a @ sp[(-4)+-8]
 13218  012732  0EF6               	movlw	-10
 13219  012734  8EE3               	bsf	plusw1,7,c
 13220                           
 13221                           ;stkvar	_a @ sp[(-4)+-8]
 13222  012736  0EF7               	movlw	247
 13223  012738  24E1               	addwf	fsr1l,w,c
 13224  01273A  6ED9               	movwf	fsr2l,c
 13225  01273C  0EFF               	movlw	255
 13226  01273E  20E2               	addwfc	fsr1h,w,c
 13227  012740  6EDA               	movwf	fsr2h,c
 13228  012742  0E00               	movlw	0
 13229  012744  6EDF               	movwf	indf2,c
 13230  012746  D018               	goto	l6001
 13231  012748                     l5999:
 13232  012748  0E00               	movlw	0
 13233  01274A  6E3D               	movwf	(btemp+8)^0,c
 13234  01274C  0E00               	movlw	0
 13235  01274E  6E3E               	movwf	(btemp+9)^0,c
 13236  012750  0E00               	movlw	0
 13237  012752  6E3F               	movwf	(btemp+10)^0,c
 13238  012754  0E00               	movlw	0
 13239  012756  6E40               	movwf	(btemp+11)^0,c
 13240                           
 13241                           ;stkvar	_a @ sp[(-4)+-8]
 13242  012758  0EF4               	movlw	-12
 13243  01275A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13244  012760  0EF5               	movlw	-11
 13245  012762  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13246  012768  0EF6               	movlw	-10
 13247  01276A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13248  012770  0EF7               	movlw	-9
 13249  012772  0060  F103  FFE3   	movff	btemp+11,plusw1
 13250  012778                     l6001:
 13251                           
 13252                           ;stkvar	_bexp @ sp[(-4)+1]
 13253                           ;stkvar	_aexp @ sp[(-4)+2]
 13254  012778  50E1               	movf	fsr1l,w,c
 13255  01277A  0FFE               	addlw	-2
 13256  01277C  6ED9               	movwf	fsr2l,c
 13257  01277E  50E2               	movf	fsr1h,w,c
 13258  012780  6EDA               	movwf	fsr2h,c
 13259  012782  0EFF               	movlw	255
 13260  012784  22DA               	addwfc	fsr2h,f,c
 13261  012786  0EFD               	movlw	-3
 13262  012788  50E3               	movf	plusw1,w,c
 13263  01278A  5CDE               	subwf	postinc2,w,c
 13264  01278C  B0D8               	btfsc	status,0,c
 13265  01278E  D0A4               	goto	l6037
 13266                           
 13267                           ;stkvar	_signs @ sp[(-4)+3]
 13268  012790  0EFF               	movlw	-1
 13269  012792  ACE3               	btfss	plusw1,6,c
 13270  012794  D002               	goto	l6007
 13271                           
 13272                           ;stkvar	_signs @ sp[(-4)+3]
 13273  012796  0EFF               	movlw	-1
 13274  012798  7EE3               	btg	plusw1,7,c
 13275  01279A                     l6007:
 13276                           
 13277                           ;stkvar	_bexp @ sp[(-4)+1]
 13278                           ;stkvar	_grs @ sp[(-4)+0]
 13279  01279A  0EFD               	movlw	-3
 13280  01279C  006F FF8C  F035    	movff	plusw1,btemp
 13281  0127A2  0EFC               	movlw	-4
 13282  0127A4  0060  F0D7  FFE3   	movff	btemp,plusw1
 13283                           
 13284                           ;stkvar	_aexp @ sp[(-4)+2]
 13285                           ;stkvar	_bexp @ sp[(-4)+1]
 13286  0127AA  0EFE               	movlw	-2
 13287  0127AC  006F FF8C  F035    	movff	plusw1,btemp
 13288  0127B2  0EFD               	movlw	-3
 13289  0127B4  0060  F0D7  FFE3   	movff	btemp,plusw1
 13290                           
 13291                           ;stkvar	_grs @ sp[(-4)+0]
 13292                           ;stkvar	_aexp @ sp[(-4)+2]
 13293  0127BA  0EFC               	movlw	-4
 13294  0127BC  006F FF8C  F035    	movff	plusw1,btemp
 13295  0127C2  0EFE               	movlw	-2
 13296  0127C4  0060  F0D7  FFE3   	movff	btemp,plusw1
 13297                           
 13298                           ;stkvar	_b @ sp[(-4)+-4]
 13299                           ;stkvar	_grs @ sp[(-4)+0]
 13300  0127CA  0EF8               	movlw	-8
 13301  0127CC  006F FF8C  F035    	movff	plusw1,btemp
 13302  0127D2  0EFC               	movlw	-4
 13303  0127D4  0060  F0D7  FFE3   	movff	btemp,plusw1
 13304                           
 13305                           ;stkvar	_a @ sp[(-4)+-8]
 13306                           ;stkvar	_b @ sp[(-4)+-4]
 13307  0127DA  0EF4               	movlw	-12
 13308  0127DC  006F FF8C  F035    	movff	plusw1,btemp
 13309  0127E2  0EF8               	movlw	-8
 13310  0127E4  0060  F0D7  FFE3   	movff	btemp,plusw1
 13311                           
 13312                           ;stkvar	_grs @ sp[(-4)+0]
 13313                           ;stkvar	_a @ sp[(-4)+-8]
 13314  0127EA  0EFC               	movlw	-4
 13315  0127EC  006F FF8C  F035    	movff	plusw1,btemp
 13316  0127F2  0EF4               	movlw	-12
 13317  0127F4  0060  F0D7  FFE3   	movff	btemp,plusw1
 13318                           
 13319                           ;stkvar	_b @ sp[(-4)+-4]
 13320  0127FA  0EF9               	movlw	249
 13321  0127FC  24E1               	addwf	fsr1l,w,c
 13322  0127FE  6ED9               	movwf	fsr2l,c
 13323  012800  0EFF               	movlw	255
 13324  012802  20E2               	addwfc	fsr1h,w,c
 13325  012804  6EDA               	movwf	fsr2h,c
 13326  012806  50DF               	movf	indf2,w,c
 13327  012808  6E40               	movwf	(btemp+11)^0,c
 13328                           
 13329                           ;stkvar	_grs @ sp[(-4)+0]
 13330  01280A  0EFC               	movlw	-4
 13331  01280C  0060  F103  FFE3   	movff	btemp+11,plusw1
 13332                           
 13333                           ;stkvar	_a @ sp[(-4)+-8]
 13334  012812  0EF5               	movlw	245
 13335  012814  24E1               	addwf	fsr1l,w,c
 13336  012816  6ED9               	movwf	fsr2l,c
 13337  012818  0EFF               	movlw	255
 13338  01281A  20E2               	addwfc	fsr1h,w,c
 13339  01281C  6EDA               	movwf	fsr2h,c
 13340                           
 13341                           ;stkvar	_b @ sp[(-4)+-4]
 13342  01281E  0EF9               	movlw	249
 13343  012820  24E1               	addwf	fsr1l,w,c
 13344  012822  6EE9               	movwf	fsr0l,c
 13345  012824  0EFF               	movlw	255
 13346  012826  20E2               	addwfc	fsr1h,w,c
 13347  012828  6EEA               	movwf	fsr0h,c
 13348  01282A  006F FF7F FFEF     	movff	indf2,indf0
 13349                           
 13350                           ;stkvar	_grs @ sp[(-4)+0]
 13351                           ;stkvar	_a @ sp[(-4)+-8]
 13352  012830  0EF5               	movlw	245
 13353  012832  24E1               	addwf	fsr1l,w,c
 13354  012834  6ED9               	movwf	fsr2l,c
 13355  012836  0EFF               	movlw	255
 13356  012838  20E2               	addwfc	fsr1h,w,c
 13357  01283A  6EDA               	movwf	fsr2h,c
 13358  01283C  0EFC               	movlw	-4
 13359  01283E  006F FF8F FFDF     	movff	plusw1,indf2
 13360                           
 13361                           ;stkvar	_b @ sp[(-4)+-4]
 13362  012844  0EFA               	movlw	250
 13363  012846  24E1               	addwf	fsr1l,w,c
 13364  012848  6ED9               	movwf	fsr2l,c
 13365  01284A  0EFF               	movlw	255
 13366  01284C  20E2               	addwfc	fsr1h,w,c
 13367  01284E  6EDA               	movwf	fsr2h,c
 13368  012850  50DF               	movf	indf2,w,c
 13369  012852  6E40               	movwf	(btemp+11)^0,c
 13370                           
 13371                           ;stkvar	_grs @ sp[(-4)+0]
 13372  012854  0EFC               	movlw	-4
 13373  012856  0060  F103  FFE3   	movff	btemp+11,plusw1
 13374                           
 13375                           ;stkvar	_a @ sp[(-4)+-8]
 13376  01285C  0EF6               	movlw	246
 13377  01285E  24E1               	addwf	fsr1l,w,c
 13378  012860  6ED9               	movwf	fsr2l,c
 13379  012862  0EFF               	movlw	255
 13380  012864  20E2               	addwfc	fsr1h,w,c
 13381  012866  6EDA               	movwf	fsr2h,c
 13382                           
 13383                           ;stkvar	_b @ sp[(-4)+-4]
 13384  012868  0EFA               	movlw	250
 13385  01286A  24E1               	addwf	fsr1l,w,c
 13386  01286C  6EE9               	movwf	fsr0l,c
 13387  01286E  0EFF               	movlw	255
 13388  012870  20E2               	addwfc	fsr1h,w,c
 13389  012872  6EEA               	movwf	fsr0h,c
 13390  012874  006F FF7F FFEF     	movff	indf2,indf0
 13391                           
 13392                           ;stkvar	_grs @ sp[(-4)+0]
 13393                           ;stkvar	_a @ sp[(-4)+-8]
 13394  01287A  0EF6               	movlw	246
 13395  01287C  24E1               	addwf	fsr1l,w,c
 13396  01287E  6ED9               	movwf	fsr2l,c
 13397  012880  0EFF               	movlw	255
 13398  012882  20E2               	addwfc	fsr1h,w,c
 13399  012884  6EDA               	movwf	fsr2h,c
 13400  012886  0EFC               	movlw	-4
 13401  012888  006F FF8F FFDF     	movff	plusw1,indf2
 13402                           
 13403                           ;stkvar	_b @ sp[(-4)+-4]
 13404  01288E  0EFB               	movlw	251
 13405  012890  24E1               	addwf	fsr1l,w,c
 13406  012892  6ED9               	movwf	fsr2l,c
 13407  012894  0EFF               	movlw	255
 13408  012896  20E2               	addwfc	fsr1h,w,c
 13409  012898  6EDA               	movwf	fsr2h,c
 13410  01289A  50DF               	movf	indf2,w,c
 13411  01289C  6E40               	movwf	(btemp+11)^0,c
 13412                           
 13413                           ;stkvar	_grs @ sp[(-4)+0]
 13414  01289E  0EFC               	movlw	-4
 13415  0128A0  0060  F103  FFE3   	movff	btemp+11,plusw1
 13416                           
 13417                           ;stkvar	_a @ sp[(-4)+-8]
 13418  0128A6  0EF7               	movlw	247
 13419  0128A8  24E1               	addwf	fsr1l,w,c
 13420  0128AA  6ED9               	movwf	fsr2l,c
 13421  0128AC  0EFF               	movlw	255
 13422  0128AE  20E2               	addwfc	fsr1h,w,c
 13423  0128B0  6EDA               	movwf	fsr2h,c
 13424                           
 13425                           ;stkvar	_b @ sp[(-4)+-4]
 13426  0128B2  0EFB               	movlw	251
 13427  0128B4  24E1               	addwf	fsr1l,w,c
 13428  0128B6  6EE9               	movwf	fsr0l,c
 13429  0128B8  0EFF               	movlw	255
 13430  0128BA  20E2               	addwfc	fsr1h,w,c
 13431  0128BC  6EEA               	movwf	fsr0h,c
 13432  0128BE  006F FF7F FFEF     	movff	indf2,indf0
 13433                           
 13434                           ;stkvar	_grs @ sp[(-4)+0]
 13435                           ;stkvar	_a @ sp[(-4)+-8]
 13436  0128C4  0EF7               	movlw	247
 13437  0128C6  24E1               	addwf	fsr1l,w,c
 13438  0128C8  6ED9               	movwf	fsr2l,c
 13439  0128CA  0EFF               	movlw	255
 13440  0128CC  20E2               	addwfc	fsr1h,w,c
 13441  0128CE  6EDA               	movwf	fsr2h,c
 13442  0128D0  0EFC               	movlw	-4
 13443  0128D2  006F FF8F FFDF     	movff	plusw1,indf2
 13444  0128D8                     l6037:
 13445                           
 13446                           ;stkvar	_grs @ sp[(-4)+0]
 13447  0128D8  0EFC               	movlw	-4
 13448  0128DA  6AE3               	clrf	plusw1,c
 13449                           
 13450                           ;stkvar	_aexp @ sp[(-4)+2]
 13451  0128DC  0EFE               	movlw	-2
 13452  0128DE  50E3               	movf	plusw1,w,c
 13453  0128E0  6E3F               	movwf	(btemp+10)^0,c
 13454  0128E2  6A40               	clrf	(btemp+11)^0,c
 13455                           
 13456                           ;stkvar	_bexp @ sp[(-4)+1]
 13457  0128E4  0EFD               	movlw	-3
 13458  0128E6  50E3               	movf	plusw1,w,c
 13459  0128E8  5E3F               	subwf	(btemp+10)^0,f,c
 13460  0128EA  0E00               	movlw	0
 13461  0128EC  5A40               	subwfb	(btemp+11)^0,f,c
 13462  0128EE  BE40               	btfsc	(btemp+11)^0,7,c
 13463  0128F0  D062               	goto	l6061
 13464  0128F2  5040               	movf	(btemp+11)^0,w,c
 13465  0128F4  E104               	bnz	u4460
 13466  0128F6  0E1A               	movlw	26
 13467  0128F8  5C3F               	subwf	(btemp+10)^0,w,c
 13468  0128FA  A0D8               	btfss	status,0,c
 13469  0128FC  D05C               	goto	l6061
 13470  0128FE                     u4460:
 13471                           
 13472                           ;stkvar	_b @ sp[(-4)+-4]
 13473  0128FE  0EF8               	movlw	-8
 13474  012900  50E3               	movf	plusw1,w,c
 13475  012902  E10A               	bnz	u4471
 13476  012904  0EF9               	movlw	-7
 13477  012906  50E3               	movf	plusw1,w,c
 13478  012908  E107               	bnz	u4471
 13479  01290A  0EFA               	movlw	-6
 13480  01290C  50E3               	movf	plusw1,w,c
 13481  01290E  E104               	bnz	u4471
 13482  012910  0EFB               	movlw	-5
 13483  012912  50E3               	movf	plusw1,w,c
 13484  012914  B4D8               	btfsc	status,2,c
 13485  012916  D003               	goto	u4470
 13486  012918                     u4471:
 13487  012918  6A40               	clrf	(btemp+11)^0,c
 13488  01291A  2A40               	incf	(btemp+11)^0,f,c
 13489  01291C  D001               	goto	u4488
 13490  01291E                     u4470:
 13491  01291E  6A40               	clrf	(btemp+11)^0,c
 13492  012920                     u4488:
 13493                           
 13494                           ;stkvar	_grs @ sp[(-4)+0]
 13495  012920  0EFC               	movlw	-4
 13496  012922  0060  F103  FFE3   	movff	btemp+11,plusw1
 13497                           
 13498                           ;stkvar	_b @ sp[(-4)+-4]
 13499  012928  0EF8               	movlw	-8
 13500  01292A  6AE3               	clrf	plusw1,c
 13501  01292C  0EF9               	movlw	-7
 13502  01292E  6AE3               	clrf	plusw1,c
 13503  012930  0EFA               	movlw	-6
 13504  012932  6AE3               	clrf	plusw1,c
 13505  012934  0EFB               	movlw	-5
 13506  012936  6AE3               	clrf	plusw1,c
 13507                           
 13508                           ;stkvar	_aexp @ sp[(-4)+2]
 13509                           ;stkvar	_bexp @ sp[(-4)+1]
 13510  012938  0EFE               	movlw	-2
 13511  01293A  006F FF8C  F035    	movff	plusw1,btemp
 13512  012940  0EFD               	movlw	-3
 13513  012942  0060  F0D7  FFE3   	movff	btemp,plusw1
 13514  012948  D042               	goto	u4520
 13515  01294A                     l6047:
 13516                           
 13517                           ;stkvar	_grs @ sp[(-4)+0]
 13518  01294A  0EFC               	movlw	-4
 13519  01294C  A0E3               	btfss	plusw1,0,c
 13520  01294E  D00D               	goto	l6051
 13521                           
 13522                           ;stkvar	_grs @ sp[(-4)+0]
 13523  012950  0EFC               	movlw	-4
 13524  012952  006F FF8C  F040    	movff	plusw1,btemp+11
 13525  012958  90D8               	bcf	status,0,c
 13526  01295A  3240               	rrcf	(btemp+11)^0,f,c
 13527  01295C  0E01               	movlw	1
 13528  01295E  1240               	iorwf	(btemp+11)^0,f,c
 13529                           
 13530                           ;stkvar	_grs @ sp[(-4)+0]
 13531  012960  0EFC               	movlw	-4
 13532  012962  0060  F103  FFE3   	movff	btemp+11,plusw1
 13533  012968  D009               	goto	l6053
 13534  01296A                     l6051:
 13535                           
 13536                           ;stkvar	_grs @ sp[(-4)+0]
 13537  01296A  50E1               	movf	fsr1l,w,c
 13538  01296C  0FFC               	addlw	-4
 13539  01296E  6ED9               	movwf	fsr2l,c
 13540  012970  50E2               	movf	fsr1h,w,c
 13541  012972  6EDA               	movwf	fsr2h,c
 13542  012974  0EFF               	movlw	255
 13543  012976  22DA               	addwfc	fsr2h,f,c
 13544  012978  90D8               	bcf	status,0,c
 13545  01297A  32DF               	rrcf	indf2,f,c
 13546  01297C                     l6053:
 13547                           
 13548                           ;stkvar	_b @ sp[(-4)+-4]
 13549  01297C  0EF8               	movlw	-8
 13550  01297E  A0E3               	btfss	plusw1,0,c
 13551  012980  D002               	goto	l6057
 13552                           
 13553                           ;stkvar	_grs @ sp[(-4)+0]
 13554  012982  0EFC               	movlw	-4
 13555  012984  8EE3               	bsf	plusw1,7,c
 13556  012986                     l6057:
 13557  012986  0E01               	movlw	1
 13558  012988  6E40               	movwf	(btemp+11)^0,c
 13559                           
 13560                           ;stkvar	_b @ sp[(-4)+-4]
 13561  01298A  50E1               	movf	fsr1l,w,c
 13562  01298C  0FF8               	addlw	-8
 13563  01298E  6ED9               	movwf	fsr2l,c
 13564  012990  50E2               	movf	fsr1h,w,c
 13565  012992  6EDA               	movwf	fsr2h,c
 13566  012994  0EFF               	movlw	255
 13567  012996  22DA               	addwfc	fsr2h,f,c
 13568  012998  2840               	incf	(btemp+11)^0,w,c
 13569  01299A  52DE               	movf	postinc2,f,c
 13570  01299C  D008               	goto	u4510
 13571  01299E                     u4515:
 13572  01299E  52DE               	movf	postinc2,f,c
 13573  0129A0  90D8               	bcf	status,0,c
 13574  0129A2  BEDC               	btfsc	preinc2,7,c
 13575  0129A4  80D8               	bsf	status,0,c
 13576  0129A6  32DD               	rrcf	postdec2,f,c
 13577  0129A8  32DD               	rrcf	postdec2,f,c
 13578  0129AA  32DD               	rrcf	postdec2,f,c
 13579  0129AC  32DE               	rrcf	postinc2,f,c
 13580  0129AE                     u4510:
 13581  0129AE  2EE8               	decfsz	wreg,f,c
 13582  0129B0  D7F6               	goto	u4515
 13583                           
 13584                           ;stkvar	_bexp @ sp[(-4)+1]
 13585  0129B2  0EFD               	movlw	-3
 13586  0129B4  2AE3               	incf	plusw1,f,c
 13587  0129B6                     l6061:
 13588                           
 13589                           ;stkvar	_aexp @ sp[(-4)+2]
 13590                           ;stkvar	_bexp @ sp[(-4)+1]
 13591  0129B6  50E1               	movf	fsr1l,w,c
 13592  0129B8  0FFD               	addlw	-3
 13593  0129BA  6ED9               	movwf	fsr2l,c
 13594  0129BC  50E2               	movf	fsr1h,w,c
 13595  0129BE  6EDA               	movwf	fsr2h,c
 13596  0129C0  0EFF               	movlw	255
 13597  0129C2  22DA               	addwfc	fsr2h,f,c
 13598  0129C4  0EFE               	movlw	-2
 13599  0129C6  50E3               	movf	plusw1,w,c
 13600  0129C8  5CDE               	subwf	postinc2,w,c
 13601  0129CA  A0D8               	btfss	status,0,c
 13602  0129CC  D7BE               	goto	l6047
 13603  0129CE                     u4520:
 13604                           
 13605                           ;stkvar	_signs @ sp[(-4)+3]
 13606  0129CE  0EFF               	movlw	-1
 13607  0129D0  BCE3               	btfsc	plusw1,6,c
 13608  0129D2  D066               	goto	l6089
 13609                           
 13610                           ;stkvar	_bexp @ sp[(-4)+1]
 13611  0129D4  0EFD               	movlw	-3
 13612  0129D6  50E3               	movf	plusw1,w,c
 13613  0129D8  B4D8               	btfsc	status,2,c
 13614  0129DA  D0F2               	goto	u4620
 13615                           
 13616                           ;stkvar	_a @ sp[(-4)+-8]
 13617                           ;stkvar	_b @ sp[(-4)+-4]
 13618  0129DC  0EF8               	movlw	-8
 13619  0129DE  50E3               	movf	plusw1,w,c
 13620  0129E0  6E35               	movwf	btemp^0,c
 13621  0129E2  0EF4               	movlw	-12
 13622  0129E4  50E3               	movf	plusw1,w,c
 13623  0129E6  2635               	addwf	btemp^0,f,c
 13624  0129E8  0EF8               	movlw	-8
 13625  0129EA  0060  F0D7  FFE3   	movff	btemp,plusw1
 13626  0129F0  0EF9               	movlw	-7
 13627  0129F2  50E3               	movf	plusw1,w,c
 13628  0129F4  6E35               	movwf	btemp^0,c
 13629  0129F6  0EF5               	movlw	-11
 13630  0129F8  50E3               	movf	plusw1,w,c
 13631  0129FA  2235               	addwfc	btemp^0,f,c
 13632  0129FC  0EF9               	movlw	-7
 13633  0129FE  0060  F0D7  FFE3   	movff	btemp,plusw1
 13634  012A04  0EFA               	movlw	-6
 13635  012A06  50E3               	movf	plusw1,w,c
 13636  012A08  6E35               	movwf	btemp^0,c
 13637  012A0A  0EF6               	movlw	-10
 13638  012A0C  50E3               	movf	plusw1,w,c
 13639  012A0E  2235               	addwfc	btemp^0,f,c
 13640  012A10  0EFA               	movlw	-6
 13641  012A12  0060  F0D7  FFE3   	movff	btemp,plusw1
 13642  012A18  0EFB               	movlw	-5
 13643  012A1A  50E3               	movf	plusw1,w,c
 13644  012A1C  6E35               	movwf	btemp^0,c
 13645  012A1E  0EF7               	movlw	-9
 13646  012A20  50E3               	movf	plusw1,w,c
 13647  012A22  2235               	addwfc	btemp^0,f,c
 13648  012A24  0EFB               	movlw	-5
 13649  012A26  0060  F0D7  FFE3   	movff	btemp,plusw1
 13650                           
 13651                           ;stkvar	_b @ sp[(-4)+-4]
 13652  012A2C  0EFB               	movlw	-5
 13653  012A2E  A0E3               	btfss	plusw1,0,c
 13654  012A30  D101               	goto	u4660
 13655                           
 13656                           ;stkvar	_grs @ sp[(-4)+0]
 13657  012A32  0EFC               	movlw	-4
 13658  012A34  A0E3               	btfss	plusw1,0,c
 13659  012A36  D00D               	goto	l6079
 13660                           
 13661                           ;stkvar	_grs @ sp[(-4)+0]
 13662  012A38  0EFC               	movlw	-4
 13663  012A3A  006F FF8C  F040    	movff	plusw1,btemp+11
 13664  012A40  90D8               	bcf	status,0,c
 13665  012A42  3240               	rrcf	(btemp+11)^0,f,c
 13666  012A44  0E01               	movlw	1
 13667  012A46  1240               	iorwf	(btemp+11)^0,f,c
 13668                           
 13669                           ;stkvar	_grs @ sp[(-4)+0]
 13670  012A48  0EFC               	movlw	-4
 13671  012A4A  0060  F103  FFE3   	movff	btemp+11,plusw1
 13672  012A50  D009               	goto	l6081
 13673  012A52                     l6079:
 13674                           
 13675                           ;stkvar	_grs @ sp[(-4)+0]
 13676  012A52  50E1               	movf	fsr1l,w,c
 13677  012A54  0FFC               	addlw	-4
 13678  012A56  6ED9               	movwf	fsr2l,c
 13679  012A58  50E2               	movf	fsr1h,w,c
 13680  012A5A  6EDA               	movwf	fsr2h,c
 13681  012A5C  0EFF               	movlw	255
 13682  012A5E  22DA               	addwfc	fsr2h,f,c
 13683  012A60  90D8               	bcf	status,0,c
 13684  012A62  32DF               	rrcf	indf2,f,c
 13685  012A64                     l6081:
 13686                           
 13687                           ;stkvar	_b @ sp[(-4)+-4]
 13688  012A64  0EF8               	movlw	-8
 13689  012A66  A0E3               	btfss	plusw1,0,c
 13690  012A68  D002               	goto	l6085
 13691                           
 13692                           ;stkvar	_grs @ sp[(-4)+0]
 13693  012A6A  0EFC               	movlw	-4
 13694  012A6C  8EE3               	bsf	plusw1,7,c
 13695  012A6E                     l6085:
 13696  012A6E  0E01               	movlw	1
 13697  012A70  6E40               	movwf	(btemp+11)^0,c
 13698                           
 13699                           ;stkvar	_b @ sp[(-4)+-4]
 13700  012A72  50E1               	movf	fsr1l,w,c
 13701  012A74  0FF8               	addlw	-8
 13702  012A76  6ED9               	movwf	fsr2l,c
 13703  012A78  50E2               	movf	fsr1h,w,c
 13704  012A7A  6EDA               	movwf	fsr2h,c
 13705  012A7C  0EFF               	movlw	255
 13706  012A7E  22DA               	addwfc	fsr2h,f,c
 13707  012A80  2840               	incf	(btemp+11)^0,w,c
 13708  012A82  52DE               	movf	postinc2,f,c
 13709  012A84  D008               	goto	u4580
 13710  012A86                     u4585:
 13711  012A86  52DE               	movf	postinc2,f,c
 13712  012A88  90D8               	bcf	status,0,c
 13713  012A8A  BEDC               	btfsc	preinc2,7,c
 13714  012A8C  80D8               	bsf	status,0,c
 13715  012A8E  32DD               	rrcf	postdec2,f,c
 13716  012A90  32DD               	rrcf	postdec2,f,c
 13717  012A92  32DD               	rrcf	postdec2,f,c
 13718  012A94  32DE               	rrcf	postinc2,f,c
 13719  012A96                     u4580:
 13720  012A96  2EE8               	decfsz	wreg,f,c
 13721  012A98  D7F6               	goto	u4585
 13722                           
 13723                           ;stkvar	_bexp @ sp[(-4)+1]
 13724  012A9A  0EFD               	movlw	-3
 13725  012A9C  2AE3               	incf	plusw1,f,c
 13726  012A9E  D0CA               	goto	u4660
 13727  012AA0                     l6089:
 13728                           
 13729                           ;stkvar	_a @ sp[(-4)+-8]
 13730                           ;stkvar	_b @ sp[(-4)+-4]
 13731  012AA0  50E1               	movf	fsr1l,w,c
 13732  012AA2  0FF8               	addlw	-8
 13733  012AA4  6ED9               	movwf	fsr2l,c
 13734  012AA6  50E2               	movf	fsr1h,w,c
 13735  012AA8  6EDA               	movwf	fsr2h,c
 13736  012AAA  0EFF               	movlw	255
 13737  012AAC  22DA               	addwfc	fsr2h,f,c
 13738  012AAE  0EF4               	movlw	-12
 13739  012AB0  50E3               	movf	plusw1,w,c
 13740  012AB2  5CDE               	subwf	postinc2,w,c
 13741  012AB4  0EF5               	movlw	-11
 13742  012AB6  50E3               	movf	plusw1,w,c
 13743  012AB8  58DE               	subwfb	postinc2,w,c
 13744  012ABA  0EF6               	movlw	-10
 13745  012ABC  50E3               	movf	plusw1,w,c
 13746  012ABE  58DE               	subwfb	postinc2,w,c
 13747  012AC0  50DE               	movf	postinc2,w,c
 13748  012AC2  0A80               	xorlw	128
 13749  012AC4  6E35               	movwf	btemp^0,c
 13750  012AC6  0EF7               	movlw	-9
 13751  012AC8  50E3               	movf	plusw1,w,c
 13752  012ACA  0A80               	xorlw	128
 13753  012ACC  5835               	subwfb	btemp^0,w,c
 13754  012ACE  B0D8               	btfsc	status,0,c
 13755  012AD0  D053               	goto	l6101
 13756                           
 13757                           ;stkvar	_b @ sp[(-4)+-4]
 13758                           ;stkvar	_a @ sp[(-4)+-8]
 13759  012AD2  0EF4               	movlw	-12
 13760  012AD4  006F FF8C  F03D    	movff	plusw1,btemp+8
 13761  012ADA  0EF5               	movlw	-11
 13762  012ADC  006F FF8C  F03E    	movff	plusw1,btemp+9
 13763  012AE2  0EF6               	movlw	-10
 13764  012AE4  006F FF8C  F03F    	movff	plusw1,btemp+10
 13765  012AEA  0EF7               	movlw	-9
 13766  012AEC  006F FF8C  F040    	movff	plusw1,btemp+11
 13767  012AF2  0EF8               	movlw	-8
 13768  012AF4  50E3               	movf	plusw1,w,c
 13769  012AF6  5E3D               	subwf	(btemp+8)^0,f,c
 13770  012AF8  0EF9               	movlw	-7
 13771  012AFA  50E3               	movf	plusw1,w,c
 13772  012AFC  5A3E               	subwfb	(btemp+9)^0,f,c
 13773  012AFE  0EFA               	movlw	-6
 13774  012B00  50E3               	movf	plusw1,w,c
 13775  012B02  5A3F               	subwfb	(btemp+10)^0,f,c
 13776  012B04  0EFB               	movlw	-5
 13777  012B06  50E3               	movf	plusw1,w,c
 13778  012B08  5A40               	subwfb	(btemp+11)^0,f,c
 13779  012B0A  0EFF               	movlw	255
 13780  012B0C  243D               	addwf	(btemp+8)^0,w,c
 13781  012B0E  6E39               	movwf	(btemp+4)^0,c
 13782  012B10  0EFF               	movlw	255
 13783  012B12  203E               	addwfc	(btemp+9)^0,w,c
 13784  012B14  6E3A               	movwf	(btemp+5)^0,c
 13785  012B16  0EFF               	movlw	255
 13786  012B18  203F               	addwfc	(btemp+10)^0,w,c
 13787  012B1A  6E3B               	movwf	(btemp+6)^0,c
 13788  012B1C  0EFF               	movlw	255
 13789  012B1E  2040               	addwfc	(btemp+11)^0,w,c
 13790  012B20  6E3C               	movwf	(btemp+7)^0,c
 13791                           
 13792                           ;stkvar	_b @ sp[(-4)+-4]
 13793  012B22  0EF8               	movlw	-8
 13794  012B24  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 13795  012B2A  0EF9               	movlw	-7
 13796  012B2C  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 13797  012B32  0EFA               	movlw	-6
 13798  012B34  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 13799  012B3A  0EFB               	movlw	-5
 13800  012B3C  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 13801                           
 13802                           ;stkvar	_signs @ sp[(-4)+3]
 13803  012B42  0EFF               	movlw	-1
 13804  012B44  7EE3               	btg	plusw1,7,c
 13805                           
 13806                           ;stkvar	_grs @ sp[(-4)+0]
 13807  012B46  0EFC               	movlw	-4
 13808  012B48  50E3               	movf	plusw1,w,c
 13809  012B4A  0800               	sublw	0
 13810  012B4C  6E40               	movwf	(btemp+11)^0,c
 13811                           
 13812                           ;stkvar	_grs @ sp[(-4)+0]
 13813  012B4E  0EFC               	movlw	-4
 13814  012B50  0060  F103  FFE3   	movff	btemp+11,plusw1
 13815                           
 13816                           ;stkvar	_grs @ sp[(-4)+0]
 13817  012B56  0EFC               	movlw	-4
 13818  012B58  50E3               	movf	plusw1,w,c
 13819  012B5A  A4D8               	btfss	status,2,c
 13820  012B5C  D020               	goto	l6103
 13821                           
 13822                           ;stkvar	_b @ sp[(-4)+-4]
 13823  012B5E  50E1               	movf	fsr1l,w,c
 13824  012B60  0FF8               	addlw	-8
 13825  012B62  6ED9               	movwf	fsr2l,c
 13826  012B64  50E2               	movf	fsr1h,w,c
 13827  012B66  6EDA               	movwf	fsr2h,c
 13828  012B68  0EFF               	movlw	255
 13829  012B6A  22DA               	addwfc	fsr2h,f,c
 13830  012B6C  2ADE               	incf	postinc2,f,c
 13831  012B6E  0E00               	movlw	0
 13832  012B70  22DE               	addwfc	postinc2,f,c
 13833  012B72  22DE               	addwfc	postinc2,f,c
 13834  012B74  22DE               	addwfc	postinc2,f,c
 13835  012B76  D013               	goto	l6103
 13836  012B78                     l6101:
 13837                           
 13838                           ;stkvar	_a @ sp[(-4)+-8]
 13839                           ;stkvar	_b @ sp[(-4)+-4]
 13840  012B78  50E1               	movf	fsr1l,w,c
 13841  012B7A  0FF8               	addlw	-8
 13842  012B7C  6ED9               	movwf	fsr2l,c
 13843  012B7E  50E2               	movf	fsr1h,w,c
 13844  012B80  6EDA               	movwf	fsr2h,c
 13845  012B82  0EFF               	movlw	255
 13846  012B84  22DA               	addwfc	fsr2h,f,c
 13847  012B86  0EF4               	movlw	-12
 13848  012B88  50E3               	movf	plusw1,w,c
 13849  012B8A  5EDE               	subwf	postinc2,f,c
 13850  012B8C  0EF5               	movlw	-11
 13851  012B8E  50E3               	movf	plusw1,w,c
 13852  012B90  5ADE               	subwfb	postinc2,f,c
 13853  012B92  0EF6               	movlw	-10
 13854  012B94  50E3               	movf	plusw1,w,c
 13855  012B96  5ADE               	subwfb	postinc2,f,c
 13856  012B98  0EF7               	movlw	-9
 13857  012B9A  50E3               	movf	plusw1,w,c
 13858  012B9C  5ADE               	subwfb	postinc2,f,c
 13859  012B9E                     l6103:
 13860                           
 13861                           ;stkvar	_b @ sp[(-4)+-4]
 13862  012B9E  0EF8               	movlw	-8
 13863  012BA0  50E3               	movf	plusw1,w,c
 13864  012BA2  E145               	bnz	l6125
 13865  012BA4  0EF9               	movlw	-7
 13866  012BA6  50E3               	movf	plusw1,w,c
 13867  012BA8  E142               	bnz	l6125
 13868  012BAA  0EFA               	movlw	-6
 13869  012BAC  50E3               	movf	plusw1,w,c
 13870  012BAE  E13F               	bnz	l6125
 13871  012BB0  0EFB               	movlw	-5
 13872  012BB2  50E3               	movf	plusw1,w,c
 13873  012BB4  A4D8               	btfss	status,2,c
 13874  012BB6  D03B               	goto	l6125
 13875                           
 13876                           ;stkvar	_grs @ sp[(-4)+0]
 13877  012BB8  0EFC               	movlw	-4
 13878  012BBA  50E3               	movf	plusw1,w,c
 13879  012BBC  A4D8               	btfss	status,2,c
 13880  012BBE  D037               	goto	l6125
 13881  012BC0                     u4620:
 13882  012BC0  0E00               	movlw	0
 13883  012BC2  6E35               	movwf	btemp^0,c
 13884  012BC4  0E00               	movlw	0
 13885  012BC6  6E36               	movwf	(btemp+1)^0,c
 13886  012BC8  0E00               	movlw	0
 13887  012BCA  6E37               	movwf	(btemp+2)^0,c
 13888  012BCC  0E00               	movlw	0
 13889  012BCE  6E38               	movwf	(btemp+3)^0,c
 13890  012BD0  D0C6               	goto	l2511
 13891  012BD2                     l6111:
 13892                           
 13893                           ;stkvar	_b @ sp[(-4)+-4]
 13894  012BD2  90D8               	bcf	status,0,c
 13895  012BD4  0EF8               	movlw	-8
 13896  012BD6  36E3               	rlcf	plusw1,f,c
 13897  012BD8  0EF9               	movlw	-7
 13898  012BDA  36E3               	rlcf	plusw1,f,c
 13899  012BDC  0EFA               	movlw	-6
 13900  012BDE  36E3               	rlcf	plusw1,f,c
 13901  012BE0  0EFB               	movlw	-5
 13902  012BE2  36E3               	rlcf	plusw1,f,c
 13903                           
 13904                           ;stkvar	_grs @ sp[(-4)+0]
 13905  012BE4  0EFC               	movlw	-4
 13906  012BE6  AEE3               	btfss	plusw1,7,c
 13907  012BE8  D002               	goto	l2523
 13908                           
 13909                           ;stkvar	_b @ sp[(-4)+-4]
 13910  012BEA  0EF8               	movlw	-8
 13911  012BEC  80E3               	bsf	plusw1,0,c
 13912  012BEE                     l2523:
 13913                           
 13914                           ;stkvar	_grs @ sp[(-4)+0]
 13915  012BEE  0EFC               	movlw	-4
 13916  012BF0  A0E3               	btfss	plusw1,0,c
 13917  012BF2  D00E               	goto	l6119
 13918                           
 13919                           ;stkvar	_grs @ sp[(-4)+0]
 13920  012BF4  0EFC               	movlw	-4
 13921  012BF6  006F FF8C  F040    	movff	plusw1,btemp+11
 13922  012BFC  90D8               	bcf	status,0,c
 13923  012BFE  3440               	rlcf	(btemp+11)^0,w,c
 13924  012C00  6E3F               	movwf	(btemp+10)^0,c
 13925  012C02  0E01               	movlw	1
 13926  012C04  123F               	iorwf	(btemp+10)^0,f,c
 13927                           
 13928                           ;stkvar	_grs @ sp[(-4)+0]
 13929  012C06  0EFC               	movlw	-4
 13930  012C08  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13931  012C0E  D009               	goto	l6121
 13932  012C10                     l6119:
 13933                           
 13934                           ;stkvar	_grs @ sp[(-4)+0]
 13935  012C10  50E1               	movf	fsr1l,w,c
 13936  012C12  0FFC               	addlw	-4
 13937  012C14  6ED9               	movwf	fsr2l,c
 13938  012C16  50E2               	movf	fsr1h,w,c
 13939  012C18  6EDA               	movwf	fsr2h,c
 13940  012C1A  0EFF               	movlw	255
 13941  012C1C  22DA               	addwfc	fsr2h,f,c
 13942  012C1E  90D8               	bcf	status,0,c
 13943  012C20  36DF               	rlcf	indf2,f,c
 13944  012C22                     l6121:
 13945                           
 13946                           ;stkvar	_bexp @ sp[(-4)+1]
 13947  012C22  0EFD               	movlw	-3
 13948  012C24  50E3               	movf	plusw1,w,c
 13949  012C26  B4D8               	btfsc	status,2,c
 13950  012C28  D002               	goto	l6125
 13951                           
 13952                           ;stkvar	_bexp @ sp[(-4)+1]
 13953  012C2A  0EFD               	movlw	-3
 13954  012C2C  06E3               	decf	plusw1,f,c
 13955  012C2E                     l6125:
 13956                           
 13957                           ;stkvar	_b @ sp[(-4)+-4]
 13958  012C2E  0EFA               	movlw	-6
 13959  012C30  AEE3               	btfss	plusw1,7,c
 13960  012C32  D7CF               	goto	l6111
 13961  012C34                     u4660:
 13962                           
 13963                           ;stkvar	_aexp @ sp[(-4)+2]
 13964  012C34  0EFE               	movlw	-2
 13965  012C36  6AE3               	clrf	plusw1,c
 13966                           
 13967                           ;stkvar	_grs @ sp[(-4)+0]
 13968  012C38  0EFC               	movlw	-4
 13969  012C3A  AEE3               	btfss	plusw1,7,c
 13970  012C3C  D00F               	goto	l6139
 13971                           
 13972                           ;stkvar	_grs @ sp[(-4)+0]
 13973  012C3E  0EFC               	movlw	-4
 13974  012C40  006F FF8C  F040    	movff	plusw1,btemp+11
 13975  012C46  0E7F               	movlw	127
 13976  012C48  1640               	andwf	(btemp+11)^0,f,c
 13977  012C4A  B4D8               	btfsc	status,2,c
 13978  012C4C  D004               	goto	l6135
 13979  012C4E                     u4680:
 13980                           
 13981                           ;stkvar	_aexp @ sp[(-4)+2]
 13982  012C4E  0EFE               	movlw	-2
 13983  012C50  6AE3               	clrf	plusw1,c
 13984  012C52  2AE3               	incf	plusw1,f,c
 13985  012C54  D003               	goto	l6139
 13986  012C56                     l6135:
 13987                           
 13988                           ;stkvar	_b @ sp[(-4)+-4]
 13989  012C56  0EF8               	movlw	-8
 13990  012C58  B0E3               	btfsc	plusw1,0,c
 13991  012C5A  D7F9               	goto	u4680
 13992  012C5C                     l6139:
 13993                           
 13994                           ;stkvar	_aexp @ sp[(-4)+2]
 13995  012C5C  0EFE               	movlw	-2
 13996  012C5E  50E3               	movf	plusw1,w,c
 13997  012C60  B4D8               	btfsc	status,2,c
 13998  012C62  D02B               	goto	l6151
 13999                           
 14000                           ;stkvar	_b @ sp[(-4)+-4]
 14001  012C64  50E1               	movf	fsr1l,w,c
 14002  012C66  0FF8               	addlw	-8
 14003  012C68  6ED9               	movwf	fsr2l,c
 14004  012C6A  50E2               	movf	fsr1h,w,c
 14005  012C6C  6EDA               	movwf	fsr2h,c
 14006  012C6E  0EFF               	movlw	255
 14007  012C70  22DA               	addwfc	fsr2h,f,c
 14008  012C72  2ADE               	incf	postinc2,f,c
 14009  012C74  0E00               	movlw	0
 14010  012C76  22DE               	addwfc	postinc2,f,c
 14011  012C78  22DE               	addwfc	postinc2,f,c
 14012  012C7A  22DE               	addwfc	postinc2,f,c
 14013                           
 14014                           ;stkvar	_b @ sp[(-4)+-4]
 14015  012C7C  0EFB               	movlw	-5
 14016  012C7E  A0E3               	btfss	plusw1,0,c
 14017  012C80  D01C               	goto	l6151
 14018  012C82  0E01               	movlw	1
 14019  012C84  6E40               	movwf	(btemp+11)^0,c
 14020                           
 14021                           ;stkvar	_b @ sp[(-4)+-4]
 14022  012C86  50E1               	movf	fsr1l,w,c
 14023  012C88  0FF8               	addlw	-8
 14024  012C8A  6ED9               	movwf	fsr2l,c
 14025  012C8C  50E2               	movf	fsr1h,w,c
 14026  012C8E  6EDA               	movwf	fsr2h,c
 14027  012C90  0EFF               	movlw	255
 14028  012C92  22DA               	addwfc	fsr2h,f,c
 14029  012C94  2840               	incf	(btemp+11)^0,w,c
 14030  012C96  52DE               	movf	postinc2,f,c
 14031  012C98  D008               	goto	u4720
 14032  012C9A                     u4725:
 14033  012C9A  52DE               	movf	postinc2,f,c
 14034  012C9C  90D8               	bcf	status,0,c
 14035  012C9E  BEDC               	btfsc	preinc2,7,c
 14036  012CA0  80D8               	bsf	status,0,c
 14037  012CA2  32DD               	rrcf	postdec2,f,c
 14038  012CA4  32DD               	rrcf	postdec2,f,c
 14039  012CA6  32DD               	rrcf	postdec2,f,c
 14040  012CA8  32DE               	rrcf	postinc2,f,c
 14041  012CAA                     u4720:
 14042  012CAA  2EE8               	decfsz	wreg,f,c
 14043  012CAC  D7F6               	goto	u4725
 14044                           
 14045                           ;stkvar	_bexp @ sp[(-4)+1]
 14046  012CAE  0EFD               	movlw	-3
 14047  012CB0  28E3               	incf	plusw1,w,c
 14048  012CB2  B4D8               	btfsc	status,2,c
 14049  012CB4  D002               	goto	l6151
 14050                           
 14051                           ;stkvar	_bexp @ sp[(-4)+1]
 14052  012CB6  0EFD               	movlw	-3
 14053  012CB8  2AE3               	incf	plusw1,f,c
 14054  012CBA                     l6151:
 14055                           
 14056                           ;stkvar	_bexp @ sp[(-4)+1]
 14057  012CBA  0EFD               	movlw	-3
 14058  012CBC  28E3               	incf	plusw1,w,c
 14059  012CBE  B4D8               	btfsc	status,2,c
 14060  012CC0  D004               	goto	u4750
 14061                           
 14062                           ;stkvar	_bexp @ sp[(-4)+1]
 14063  012CC2  0EFD               	movlw	-3
 14064  012CC4  50E3               	movf	plusw1,w,c
 14065  012CC6  A4D8               	btfss	status,2,c
 14066  012CC8  D00E               	goto	l6161
 14067  012CCA                     u4750:
 14068                           
 14069                           ;stkvar	_b @ sp[(-4)+-4]
 14070  012CCA  0EF8               	movlw	-8
 14071  012CCC  6AE3               	clrf	plusw1,c
 14072  012CCE  0EF9               	movlw	-7
 14073  012CD0  6AE3               	clrf	plusw1,c
 14074  012CD2  0EFA               	movlw	-6
 14075  012CD4  6AE3               	clrf	plusw1,c
 14076  012CD6  0EFB               	movlw	-5
 14077  012CD8  6AE3               	clrf	plusw1,c
 14078                           
 14079                           ;stkvar	_bexp @ sp[(-4)+1]
 14080  012CDA  0EFD               	movlw	-3
 14081  012CDC  50E3               	movf	plusw1,w,c
 14082  012CDE  A4D8               	btfss	status,2,c
 14083  012CE0  D002               	goto	l6161
 14084                           
 14085                           ;stkvar	_signs @ sp[(-4)+3]
 14086  012CE2  0EFF               	movlw	-1
 14087  012CE4  6AE3               	clrf	plusw1,c
 14088  012CE6                     l6161:
 14089                           
 14090                           ;stkvar	_bexp @ sp[(-4)+1]
 14091  012CE6  0EFD               	movlw	-3
 14092  012CE8  A0E3               	btfss	plusw1,0,c
 14093  012CEA  D009               	goto	l6165
 14094                           
 14095                           ;stkvar	_b @ sp[(-4)+-4]
 14096  012CEC  0EFA               	movlw	250
 14097  012CEE  24E1               	addwf	fsr1l,w,c
 14098  012CF0  6ED9               	movwf	fsr2l,c
 14099  012CF2  0EFF               	movlw	255
 14100  012CF4  20E2               	addwfc	fsr1h,w,c
 14101  012CF6  6EDA               	movwf	fsr2h,c
 14102  012CF8  0E00               	movlw	0
 14103  012CFA  8EDB               	bsf	plusw2,7,c
 14104  012CFC  D008               	goto	l6167
 14105  012CFE                     l6165:
 14106                           
 14107                           ;stkvar	_b @ sp[(-4)+-4]
 14108  012CFE  0EFA               	movlw	250
 14109  012D00  24E1               	addwf	fsr1l,w,c
 14110  012D02  6ED9               	movwf	fsr2l,c
 14111  012D04  0EFF               	movlw	255
 14112  012D06  20E2               	addwfc	fsr1h,w,c
 14113  012D08  6EDA               	movwf	fsr2h,c
 14114  012D0A  0E7F               	movlw	127
 14115  012D0C  16DF               	andwf	indf2,f,c
 14116  012D0E                     l6167:
 14117                           
 14118                           ;stkvar	_b @ sp[(-4)+-4]
 14119  012D0E  0EFB               	movlw	251
 14120  012D10  24E1               	addwf	fsr1l,w,c
 14121  012D12  6ED9               	movwf	fsr2l,c
 14122  012D14  0EFF               	movlw	255
 14123  012D16  20E2               	addwfc	fsr1h,w,c
 14124  012D18  6EDA               	movwf	fsr2h,c
 14125                           
 14126                           ;stkvar	_bexp @ sp[(-4)+1]
 14127  012D1A  0EFD               	movlw	-3
 14128  012D1C  006F FF8C  F040    	movff	plusw1,btemp+11
 14129  012D22  90D8               	bcf	status,0,c
 14130  012D24  3040               	rrcf	(btemp+11)^0,w,c
 14131  012D26  6EDF               	movwf	indf2,c
 14132                           
 14133                           ;stkvar	_signs @ sp[(-4)+3]
 14134  012D28  0EFF               	movlw	-1
 14135  012D2A  AEE3               	btfss	plusw1,7,c
 14136  012D2C  D008               	goto	l6173
 14137                           
 14138                           ;stkvar	_b @ sp[(-4)+-4]
 14139  012D2E  0EFB               	movlw	251
 14140  012D30  24E1               	addwf	fsr1l,w,c
 14141  012D32  6ED9               	movwf	fsr2l,c
 14142  012D34  0EFF               	movlw	255
 14143  012D36  20E2               	addwfc	fsr1h,w,c
 14144  012D38  6EDA               	movwf	fsr2h,c
 14145  012D3A  0E00               	movlw	0
 14146  012D3C  8EDB               	bsf	plusw2,7,c
 14147  012D3E                     l6173:
 14148                           
 14149                           ;stkvar	_b @ sp[(-4)+-4]
 14150  012D3E  0EF8               	movlw	-8
 14151  012D40  006F FF8C  F035    	movff	plusw1,btemp
 14152  012D46  0EF9               	movlw	-7
 14153  012D48  006F FF8C  F036    	movff	plusw1,btemp+1
 14154  012D4E  0EFA               	movlw	-6
 14155  012D50  006F FF8C  F037    	movff	plusw1,btemp+2
 14156  012D56  0EFB               	movlw	-5
 14157  012D58  006F FF8C  F038    	movff	plusw1,btemp+3
 14158  012D5E                     l2511:
 14159                           
 14160                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 14161  012D5E  0EF4               	movlw	244
 14162  012D60  26E1               	addwf	fsr1l,f,c
 14163  012D62  0EFF               	movlw	255
 14164  012D64  22E2               	addwfc	fsr1h,f,c
 14165  012D66  0012               	return		;funcret
 14166  012D68                     __end_of___fladd:
 14167                           	opt callstack 0
 14168                           
 14169 ;; *************** function ___flneg *****************
 14170 ;; Defined at:
 14171 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 14172 ;; Parameters:    Size  Location     Type
 14173 ;;  f1              4  [STACK] unsigned char 
 14174 ;; Auto vars:     Size  Location     Type
 14175 ;;		None
 14176 ;; Return value:  Size  Location     Type
 14177 ;;                  4  [STACK] unsigned char 
 14178 ;; Registers used:
 14179 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 14180 ;; Tracked objects:
 14181 ;;		On entry : 0/4
 14182 ;;		On exit  : 0/0
 14183 ;;		Unchanged: 0/0
 14184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14189 ;;Total ram usage:        0 bytes
 14190 ;; Hardware stack levels used:    1
 14191 ;; Hardware stack levels required when called:    6
 14192 ;; This function calls:
 14193 ;;		Nothing
 14194 ;; This function is called by:
 14195 ;;		_efgtoa
 14196 ;; This function uses a reentrant model
 14197 ;;
 14198                           
 14199                           	psect	text50
 14200  017700                     __ptext50:
 14201                           	opt callstack 0
 14202  017700                     ___flneg:
 14203                           	opt callstack 17
 14204                           
 14205                           ;stkvar	_f1 @ sp[(0)+-4]
 14206                           
 14207                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14208                           ;incstack = 0
 14209  017700  0EFC               	movlw	-4
 14210  017702  50E3               	movf	plusw1,w,c
 14211  017704  E10A               	bnz	u6060
 14212  017706  0EFD               	movlw	-3
 14213  017708  50E3               	movf	plusw1,w,c
 14214  01770A  E107               	bnz	u6060
 14215  01770C  0EFE               	movlw	-2
 14216  01770E  50E3               	movf	plusw1,w,c
 14217  017710  E104               	bnz	u6060
 14218  017712  0EFF               	movlw	-1
 14219  017714  50E3               	movf	plusw1,w,c
 14220  017716  B4D8               	btfsc	status,2,c
 14221  017718  D002               	goto	l6841
 14222  01771A                     u6060:
 14223                           
 14224                           ;stkvar	_f1 @ sp[(0)+-4]
 14225  01771A  0EFF               	movlw	-1
 14226  01771C  7EE3               	btg	plusw1,7,c
 14227  01771E                     l6841:
 14228                           
 14229                           ;stkvar	_f1 @ sp[(0)+-4]
 14230  01771E  0EFC               	movlw	-4
 14231  017720  006F FF8C  F035    	movff	plusw1,btemp
 14232  017726  0EFD               	movlw	-3
 14233  017728  006F FF8C  F036    	movff	plusw1,btemp+1
 14234  01772E  0EFE               	movlw	-2
 14235  017730  006F FF8C  F037    	movff	plusw1,btemp+2
 14236  017736  0EFF               	movlw	-1
 14237  017738  006F FF8C  F038    	movff	plusw1,btemp+3
 14238                           
 14239                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14240  01773E  52E5               	movf	postdec1,f,c
 14241  017740  52E5               	movf	postdec1,f,c
 14242  017742  52E5               	movf	postdec1,f,c
 14243  017744  52E5               	movf	postdec1,f,c
 14244  017746  0012               	return		;funcret
 14245  017748                     __end_of___flneg:
 14246                           	opt callstack 0
 14247                           
 14248 ;; *************** function ___flmul *****************
 14249 ;; Defined at:
 14250 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 14251 ;; Parameters:    Size  Location     Type
 14252 ;;  b               4  [STACK] unsigned char 
 14253 ;;  a               4  [STACK] unsigned char 
 14254 ;; Auto vars:     Size  Location     Type
 14255 ;;  prod            4  [STACK] struct .
 14256 ;;  grs             4  [STACK] unsigned long 
 14257 ;;  temp            2  [STACK] struct .
 14258 ;;  bexp            1  [STACK] unsigned char 
 14259 ;;  aexp            1  [STACK] unsigned char 
 14260 ;;  sign            1  [STACK] unsigned char 
 14261 ;; Return value:  Size  Location     Type
 14262 ;;                  4  [STACK] unsigned char 
 14263 ;; Registers used:
 14264 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 14265 ;; Tracked objects:
 14266 ;;		On entry : 0/4
 14267 ;;		On exit  : 0/0
 14268 ;;		Unchanged: 0/0
 14269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14274 ;;Total ram usage:        0 bytes
 14275 ;; Hardware stack levels used:    1
 14276 ;; Hardware stack levels required when called:    6
 14277 ;; This function calls:
 14278 ;;		Nothing
 14279 ;; This function is called by:
 14280 ;;		_conv_raw_result
 14281 ;;		_lp_filter
 14282 ;;		_efgtoa
 14283 ;; This function uses a reentrant model
 14284 ;;
 14285                           
 14286                           	psect	text51
 14287  011D82                     __ptext51:
 14288                           	opt callstack 0
 14289  011D82                     ___flmul:
 14290                           	opt callstack 0
 14291                           
 14292                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14293  011D82  0E0D               	movlw	13
 14294  011D84  26E1               	addwf	fsr1l,f,c
 14295  011D86  0E00               	movlw	0
 14296  011D88  22E2               	addwfc	fsr1h,f,c
 14297                           
 14298                           ;stkvar	_b @ sp[(-13)+-4]
 14299                           
 14300                           ;incstack = 0
 14301  011D8A  0EF2               	movlw	242
 14302  011D8C  24E1               	addwf	fsr1l,w,c
 14303  011D8E  6ED9               	movwf	fsr2l,c
 14304  011D90  0EFF               	movlw	255
 14305  011D92  20E2               	addwfc	fsr1h,w,c
 14306  011D94  6EDA               	movwf	fsr2h,c
 14307  011D96  50DF               	movf	indf2,w,c
 14308  011D98  6E40               	movwf	(btemp+11)^0,c
 14309  011D9A  0E80               	movlw	128
 14310  011D9C  1640               	andwf	(btemp+11)^0,f,c
 14311                           
 14312                           ;stkvar	_sign @ sp[(-13)+12]
 14313  011D9E  0EFF               	movlw	-1
 14314  011DA0  0060  F103  FFE3   	movff	btemp+11,plusw1
 14315                           
 14316                           ;stkvar	_b @ sp[(-13)+-4]
 14317  011DA6  0EF2               	movlw	242
 14318  011DA8  24E1               	addwf	fsr1l,w,c
 14319  011DAA  6ED9               	movwf	fsr2l,c
 14320  011DAC  0EFF               	movlw	255
 14321  011DAE  20E2               	addwfc	fsr1h,w,c
 14322  011DB0  6EDA               	movwf	fsr2h,c
 14323  011DB2  50DF               	movf	indf2,w,c
 14324  011DB4  6E40               	movwf	(btemp+11)^0,c
 14325  011DB6  90D8               	bcf	status,0,c
 14326  011DB8  3440               	rlcf	(btemp+11)^0,w,c
 14327  011DBA  6E3F               	movwf	(btemp+10)^0,c
 14328                           
 14329                           ;stkvar	_bexp @ sp[(-13)+10]
 14330  011DBC  0EFD               	movlw	-3
 14331  011DBE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14332                           
 14333                           ;stkvar	_b @ sp[(-13)+-4]
 14334  011DC4  0EF1               	movlw	241
 14335  011DC6  24E1               	addwf	fsr1l,w,c
 14336  011DC8  6ED9               	movwf	fsr2l,c
 14337  011DCA  0EFF               	movlw	255
 14338  011DCC  20E2               	addwfc	fsr1h,w,c
 14339  011DCE  6EDA               	movwf	fsr2h,c
 14340  011DD0  AEDF               	btfss	indf2,7,c
 14341  011DD2  D002               	goto	l6557
 14342                           
 14343                           ;stkvar	_bexp @ sp[(-13)+10]
 14344  011DD4  0EFD               	movlw	-3
 14345  011DD6  80E3               	bsf	plusw1,0,c
 14346  011DD8                     l6557:
 14347                           
 14348                           ;stkvar	_bexp @ sp[(-13)+10]
 14349  011DD8  0EFD               	movlw	-3
 14350  011DDA  50E3               	movf	plusw1,w,c
 14351  011DDC  B4D8               	btfsc	status,2,c
 14352  011DDE  D01F               	goto	l6565
 14353                           
 14354                           ;stkvar	_bexp @ sp[(-13)+10]
 14355  011DE0  0EFD               	movlw	-3
 14356  011DE2  28E3               	incf	plusw1,w,c
 14357  011DE4  A4D8               	btfss	status,2,c
 14358  011DE6  D018               	goto	l6563
 14359  011DE8  0E00               	movlw	0
 14360  011DEA  6E3D               	movwf	(btemp+8)^0,c
 14361  011DEC  0E00               	movlw	0
 14362  011DEE  6E3E               	movwf	(btemp+9)^0,c
 14363  011DF0  0E00               	movlw	0
 14364  011DF2  6E3F               	movwf	(btemp+10)^0,c
 14365  011DF4  0E00               	movlw	0
 14366  011DF6  6E40               	movwf	(btemp+11)^0,c
 14367                           
 14368                           ;stkvar	_b @ sp[(-13)+-4]
 14369  011DF8  0EEF               	movlw	-17
 14370  011DFA  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14371  011E00  0EF0               	movlw	-16
 14372  011E02  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14373  011E08  0EF1               	movlw	-15
 14374  011E0A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14375  011E10  0EF2               	movlw	-14
 14376  011E12  0060  F103  FFE3   	movff	btemp+11,plusw1
 14377  011E18                     l6563:
 14378                           
 14379                           ;stkvar	_b @ sp[(-13)+-4]
 14380  011E18  0EF1               	movlw	-15
 14381  011E1A  8EE3               	bsf	plusw1,7,c
 14382  011E1C  D018               	goto	l6567
 14383  011E1E                     l6565:
 14384  011E1E  0E00               	movlw	0
 14385  011E20  6E3D               	movwf	(btemp+8)^0,c
 14386  011E22  0E00               	movlw	0
 14387  011E24  6E3E               	movwf	(btemp+9)^0,c
 14388  011E26  0E00               	movlw	0
 14389  011E28  6E3F               	movwf	(btemp+10)^0,c
 14390  011E2A  0E00               	movlw	0
 14391  011E2C  6E40               	movwf	(btemp+11)^0,c
 14392                           
 14393                           ;stkvar	_b @ sp[(-13)+-4]
 14394  011E2E  0EEF               	movlw	-17
 14395  011E30  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14396  011E36  0EF0               	movlw	-16
 14397  011E38  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14398  011E3E  0EF1               	movlw	-15
 14399  011E40  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14400  011E46  0EF2               	movlw	-14
 14401  011E48  0060  F103  FFE3   	movff	btemp+11,plusw1
 14402  011E4E                     l6567:
 14403                           
 14404                           ;stkvar	_a @ sp[(-13)+-8]
 14405  011E4E  0EEE               	movlw	238
 14406  011E50  24E1               	addwf	fsr1l,w,c
 14407  011E52  6ED9               	movwf	fsr2l,c
 14408  011E54  0EFF               	movlw	255
 14409  011E56  20E2               	addwfc	fsr1h,w,c
 14410  011E58  6EDA               	movwf	fsr2h,c
 14411  011E5A  50DF               	movf	indf2,w,c
 14412  011E5C  6E40               	movwf	(btemp+11)^0,c
 14413  011E5E  0E80               	movlw	128
 14414  011E60  1640               	andwf	(btemp+11)^0,f,c
 14415                           
 14416                           ;stkvar	_sign @ sp[(-13)+12]
 14417  011E62  50E1               	movf	fsr1l,w,c
 14418  011E64  0FFF               	addlw	-1
 14419  011E66  6ED9               	movwf	fsr2l,c
 14420  011E68  50E2               	movf	fsr1h,w,c
 14421  011E6A  6EDA               	movwf	fsr2h,c
 14422  011E6C  0EFF               	movlw	255
 14423  011E6E  22DA               	addwfc	fsr2h,f,c
 14424  011E70  5040               	movf	(btemp+11)^0,w,c
 14425  011E72  1ADF               	xorwf	indf2,f,c
 14426                           
 14427                           ;stkvar	_a @ sp[(-13)+-8]
 14428  011E74  0EEE               	movlw	238
 14429  011E76  24E1               	addwf	fsr1l,w,c
 14430  011E78  6ED9               	movwf	fsr2l,c
 14431  011E7A  0EFF               	movlw	255
 14432  011E7C  20E2               	addwfc	fsr1h,w,c
 14433  011E7E  6EDA               	movwf	fsr2h,c
 14434  011E80  50DF               	movf	indf2,w,c
 14435  011E82  6E40               	movwf	(btemp+11)^0,c
 14436  011E84  90D8               	bcf	status,0,c
 14437  011E86  3440               	rlcf	(btemp+11)^0,w,c
 14438  011E88  6E3F               	movwf	(btemp+10)^0,c
 14439                           
 14440                           ;stkvar	_aexp @ sp[(-13)+11]
 14441  011E8A  0EFE               	movlw	-2
 14442  011E8C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14443                           
 14444                           ;stkvar	_a @ sp[(-13)+-8]
 14445  011E92  0EED               	movlw	237
 14446  011E94  24E1               	addwf	fsr1l,w,c
 14447  011E96  6ED9               	movwf	fsr2l,c
 14448  011E98  0EFF               	movlw	255
 14449  011E9A  20E2               	addwfc	fsr1h,w,c
 14450  011E9C  6EDA               	movwf	fsr2h,c
 14451  011E9E  AEDF               	btfss	indf2,7,c
 14452  011EA0  D002               	goto	l6575
 14453                           
 14454                           ;stkvar	_aexp @ sp[(-13)+11]
 14455  011EA2  0EFE               	movlw	-2
 14456  011EA4  80E3               	bsf	plusw1,0,c
 14457  011EA6                     l6575:
 14458                           
 14459                           ;stkvar	_aexp @ sp[(-13)+11]
 14460  011EA6  0EFE               	movlw	-2
 14461  011EA8  50E3               	movf	plusw1,w,c
 14462  011EAA  B4D8               	btfsc	status,2,c
 14463  011EAC  D01F               	goto	l6583
 14464                           
 14465                           ;stkvar	_aexp @ sp[(-13)+11]
 14466  011EAE  0EFE               	movlw	-2
 14467  011EB0  28E3               	incf	plusw1,w,c
 14468  011EB2  A4D8               	btfss	status,2,c
 14469  011EB4  D018               	goto	l6581
 14470  011EB6  0E00               	movlw	0
 14471  011EB8  6E3D               	movwf	(btemp+8)^0,c
 14472  011EBA  0E00               	movlw	0
 14473  011EBC  6E3E               	movwf	(btemp+9)^0,c
 14474  011EBE  0E00               	movlw	0
 14475  011EC0  6E3F               	movwf	(btemp+10)^0,c
 14476  011EC2  0E00               	movlw	0
 14477  011EC4  6E40               	movwf	(btemp+11)^0,c
 14478                           
 14479                           ;stkvar	_a @ sp[(-13)+-8]
 14480  011EC6  0EEB               	movlw	-21
 14481  011EC8  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14482  011ECE  0EEC               	movlw	-20
 14483  011ED0  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14484  011ED6  0EED               	movlw	-19
 14485  011ED8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14486  011EDE  0EEE               	movlw	-18
 14487  011EE0  0060  F103  FFE3   	movff	btemp+11,plusw1
 14488  011EE6                     l6581:
 14489                           
 14490                           ;stkvar	_a @ sp[(-13)+-8]
 14491  011EE6  0EED               	movlw	-19
 14492  011EE8  8EE3               	bsf	plusw1,7,c
 14493  011EEA  D018               	goto	l6585
 14494  011EEC                     l6583:
 14495  011EEC  0E00               	movlw	0
 14496  011EEE  6E3D               	movwf	(btemp+8)^0,c
 14497  011EF0  0E00               	movlw	0
 14498  011EF2  6E3E               	movwf	(btemp+9)^0,c
 14499  011EF4  0E00               	movlw	0
 14500  011EF6  6E3F               	movwf	(btemp+10)^0,c
 14501  011EF8  0E00               	movlw	0
 14502  011EFA  6E40               	movwf	(btemp+11)^0,c
 14503                           
 14504                           ;stkvar	_a @ sp[(-13)+-8]
 14505  011EFC  0EEB               	movlw	-21
 14506  011EFE  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14507  011F04  0EEC               	movlw	-20
 14508  011F06  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14509  011F0C  0EED               	movlw	-19
 14510  011F0E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14511  011F14  0EEE               	movlw	-18
 14512  011F16  0060  F103  FFE3   	movff	btemp+11,plusw1
 14513  011F1C                     l6585:
 14514                           
 14515                           ;stkvar	_aexp @ sp[(-13)+11]
 14516  011F1C  0EFE               	movlw	-2
 14517  011F1E  50E3               	movf	plusw1,w,c
 14518  011F20  B4D8               	btfsc	status,2,c
 14519  011F22  D004               	goto	u5690
 14520                           
 14521                           ;stkvar	_bexp @ sp[(-13)+10]
 14522  011F24  0EFD               	movlw	-3
 14523  011F26  50E3               	movf	plusw1,w,c
 14524  011F28  A4D8               	btfss	status,2,c
 14525  011F2A  D009               	goto	l6593
 14526  011F2C                     u5690:
 14527  011F2C  0E00               	movlw	0
 14528  011F2E  6E35               	movwf	btemp^0,c
 14529  011F30  0E00               	movlw	0
 14530  011F32  6E36               	movwf	(btemp+1)^0,c
 14531  011F34  0E00               	movlw	0
 14532  011F36  6E37               	movwf	(btemp+2)^0,c
 14533  011F38  0E00               	movlw	0
 14534  011F3A  6E38               	movwf	(btemp+3)^0,c
 14535  011F3C  D332               	goto	l2592
 14536  011F3E                     l6593:
 14537                           
 14538                           ;stkvar	_b @ sp[(-13)+-4]
 14539  011F3E  0EEF               	movlw	-17
 14540  011F40  006F FF8C  F040    	movff	plusw1,btemp+11
 14541                           
 14542                           ;stkvar	_a @ sp[(-13)+-8]
 14543  011F46  0EED               	movlw	237
 14544  011F48  24E1               	addwf	fsr1l,w,c
 14545  011F4A  6ED9               	movwf	fsr2l,c
 14546  011F4C  0EFF               	movlw	255
 14547  011F4E  20E2               	addwfc	fsr1h,w,c
 14548  011F50  6EDA               	movwf	fsr2h,c
 14549  011F52  50DF               	movf	indf2,w,c
 14550  011F54  0240               	mulwf	(btemp+11)^0,c
 14551                           
 14552                           ;stkvar	_temp @ sp[(-13)+8]
 14553  011F56  0EFB               	movlw	-5
 14554  011F58  006F FFCF FFE3     	movff	prodl,plusw1
 14555  011F5E  0EFC               	movlw	-4
 14556  011F60  006F FFD3 FFE3     	movff	prodh,plusw1
 14557                           
 14558                           ;stkvar	_temp @ sp[(-13)+8]
 14559  011F66  0EFB               	movlw	-5
 14560  011F68  006F FF8C  F040    	movff	plusw1,btemp+11
 14561  011F6E  0060  F100  F039   	movff	btemp+11,btemp+4
 14562  011F74  6A3A               	clrf	(btemp+5)^0,c
 14563  011F76  6A3B               	clrf	(btemp+6)^0,c
 14564  011F78  6A3C               	clrf	(btemp+7)^0,c
 14565                           
 14566                           ;stkvar	_grs @ sp[(-13)+4]
 14567  011F7A  0EF7               	movlw	-9
 14568  011F7C  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 14569  011F82  0EF8               	movlw	-8
 14570  011F84  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 14571  011F8A  0EF9               	movlw	-7
 14572  011F8C  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 14573  011F92  0EFA               	movlw	-6
 14574  011F94  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 14575                           
 14576                           ;stkvar	_temp @ sp[(-13)+8]
 14577  011F9A  0EFC               	movlw	252
 14578  011F9C  24E1               	addwf	fsr1l,w,c
 14579  011F9E  6ED9               	movwf	fsr2l,c
 14580  011FA0  0EFF               	movlw	255
 14581  011FA2  20E2               	addwfc	fsr1h,w,c
 14582  011FA4  6EDA               	movwf	fsr2h,c
 14583  011FA6  50DF               	movf	indf2,w,c
 14584  011FA8  6E40               	movwf	(btemp+11)^0,c
 14585  011FAA  0060  F100  F039   	movff	btemp+11,btemp+4
 14586  011FB0  6A3A               	clrf	(btemp+5)^0,c
 14587  011FB2  6A3B               	clrf	(btemp+6)^0,c
 14588  011FB4  6A3C               	clrf	(btemp+7)^0,c
 14589                           
 14590                           ;stkvar	_prod @ sp[(-13)+0]
 14591  011FB6  0EF3               	movlw	-13
 14592  011FB8  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 14593  011FBE  0EF4               	movlw	-12
 14594  011FC0  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 14595  011FC6  0EF5               	movlw	-11
 14596  011FC8  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 14597  011FCE  0EF6               	movlw	-10
 14598  011FD0  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 14599                           
 14600                           ;stkvar	_b @ sp[(-13)+-4]
 14601  011FD6  0EF0               	movlw	240
 14602  011FD8  24E1               	addwf	fsr1l,w,c
 14603  011FDA  6ED9               	movwf	fsr2l,c
 14604  011FDC  0EFF               	movlw	255
 14605  011FDE  20E2               	addwfc	fsr1h,w,c
 14606  011FE0  6EDA               	movwf	fsr2h,c
 14607  011FE2  50DF               	movf	indf2,w,c
 14608  011FE4  6E40               	movwf	(btemp+11)^0,c
 14609                           
 14610                           ;stkvar	_a @ sp[(-13)+-8]
 14611  011FE6  0EEC               	movlw	236
 14612  011FE8  24E1               	addwf	fsr1l,w,c
 14613  011FEA  6ED9               	movwf	fsr2l,c
 14614  011FEC  0EFF               	movlw	255
 14615  011FEE  20E2               	addwfc	fsr1h,w,c
 14616  011FF0  6EDA               	movwf	fsr2h,c
 14617  011FF2  50DF               	movf	indf2,w,c
 14618  011FF4  0240               	mulwf	(btemp+11)^0,c
 14619                           
 14620                           ;stkvar	_temp @ sp[(-13)+8]
 14621  011FF6  0EFB               	movlw	-5
 14622  011FF8  006F FFCF FFE3     	movff	prodl,plusw1
 14623  011FFE  0EFC               	movlw	-4
 14624  012000  006F FFD3 FFE3     	movff	prodh,plusw1
 14625                           
 14626                           ;stkvar	_grs @ sp[(-13)+4]
 14627  012006  50E1               	movf	fsr1l,w,c
 14628  012008  0FF7               	addlw	-9
 14629  01200A  6ED9               	movwf	fsr2l,c
 14630  01200C  50E2               	movf	fsr1h,w,c
 14631  01200E  6EDA               	movwf	fsr2h,c
 14632  012010  0EFF               	movlw	255
 14633  012012  22DA               	addwfc	fsr2h,f,c
 14634                           
 14635                           ;stkvar	_temp @ sp[(-13)+8]
 14636  012014  0EFB               	movlw	-5
 14637  012016  50E3               	movf	plusw1,w,c
 14638  012018  26DE               	addwf	postinc2,f,c
 14639  01201A  0E00               	movlw	0
 14640  01201C  22DE               	addwfc	postinc2,f,c
 14641  01201E  22DE               	addwfc	postinc2,f,c
 14642  012020  22DE               	addwfc	postinc2,f,c
 14643                           
 14644                           ;stkvar	_prod @ sp[(-13)+0]
 14645  012022  50E1               	movf	fsr1l,w,c
 14646  012024  0FF3               	addlw	-13
 14647  012026  6ED9               	movwf	fsr2l,c
 14648  012028  50E2               	movf	fsr1h,w,c
 14649  01202A  6EDA               	movwf	fsr2h,c
 14650  01202C  0EFF               	movlw	255
 14651  01202E  22DA               	addwfc	fsr2h,f,c
 14652                           
 14653                           ;stkvar	_temp @ sp[(-13)+8]
 14654  012030  0EFC               	movlw	252
 14655  012032  24E1               	addwf	fsr1l,w,c
 14656  012034  6EE9               	movwf	fsr0l,c
 14657  012036  0EFF               	movlw	255
 14658  012038  20E2               	addwfc	fsr1h,w,c
 14659  01203A  6EEA               	movwf	fsr0h,c
 14660  01203C  50EF               	movf	indf0,w,c
 14661  01203E  26DE               	addwf	postinc2,f,c
 14662  012040  0E00               	movlw	0
 14663  012042  22DE               	addwfc	postinc2,f,c
 14664  012044  22DE               	addwfc	postinc2,f,c
 14665  012046  22DE               	addwfc	postinc2,f,c
 14666                           
 14667                           ;stkvar	_b @ sp[(-13)+-4]
 14668  012048  0EF1               	movlw	241
 14669  01204A  24E1               	addwf	fsr1l,w,c
 14670  01204C  6ED9               	movwf	fsr2l,c
 14671  01204E  0EFF               	movlw	255
 14672  012050  20E2               	addwfc	fsr1h,w,c
 14673  012052  6EDA               	movwf	fsr2h,c
 14674  012054  50DF               	movf	indf2,w,c
 14675  012056  6E40               	movwf	(btemp+11)^0,c
 14676                           
 14677                           ;stkvar	_a @ sp[(-13)+-8]
 14678  012058  0EEB               	movlw	-21
 14679  01205A  50E3               	movf	plusw1,w,c
 14680  01205C  0240               	mulwf	(btemp+11)^0,c
 14681                           
 14682                           ;stkvar	_temp @ sp[(-13)+8]
 14683  01205E  0EFB               	movlw	-5
 14684  012060  006F FFCF FFE3     	movff	prodl,plusw1
 14685  012066  0EFC               	movlw	-4
 14686  012068  006F FFD3 FFE3     	movff	prodh,plusw1
 14687                           
 14688                           ;stkvar	_grs @ sp[(-13)+4]
 14689  01206E  50E1               	movf	fsr1l,w,c
 14690  012070  0FF7               	addlw	-9
 14691  012072  6ED9               	movwf	fsr2l,c
 14692  012074  50E2               	movf	fsr1h,w,c
 14693  012076  6EDA               	movwf	fsr2h,c
 14694  012078  0EFF               	movlw	255
 14695  01207A  22DA               	addwfc	fsr2h,f,c
 14696                           
 14697                           ;stkvar	_temp @ sp[(-13)+8]
 14698  01207C  0EFB               	movlw	-5
 14699  01207E  50E3               	movf	plusw1,w,c
 14700  012080  26DE               	addwf	postinc2,f,c
 14701  012082  0E00               	movlw	0
 14702  012084  22DE               	addwfc	postinc2,f,c
 14703  012086  22DE               	addwfc	postinc2,f,c
 14704  012088  22DE               	addwfc	postinc2,f,c
 14705                           
 14706                           ;stkvar	_prod @ sp[(-13)+0]
 14707  01208A  50E1               	movf	fsr1l,w,c
 14708  01208C  0FF3               	addlw	-13
 14709  01208E  6ED9               	movwf	fsr2l,c
 14710  012090  50E2               	movf	fsr1h,w,c
 14711  012092  6EDA               	movwf	fsr2h,c
 14712  012094  0EFF               	movlw	255
 14713  012096  22DA               	addwfc	fsr2h,f,c
 14714                           
 14715                           ;stkvar	_temp @ sp[(-13)+8]
 14716  012098  0EFC               	movlw	252
 14717  01209A  24E1               	addwf	fsr1l,w,c
 14718  01209C  6EE9               	movwf	fsr0l,c
 14719  01209E  0EFF               	movlw	255
 14720  0120A0  20E2               	addwfc	fsr1h,w,c
 14721  0120A2  6EEA               	movwf	fsr0h,c
 14722  0120A4  50EF               	movf	indf0,w,c
 14723  0120A6  26DE               	addwf	postinc2,f,c
 14724  0120A8  0E00               	movlw	0
 14725  0120AA  22DE               	addwfc	postinc2,f,c
 14726  0120AC  22DE               	addwfc	postinc2,f,c
 14727  0120AE  22DE               	addwfc	postinc2,f,c
 14728                           
 14729                           ;stkvar	_grs @ sp[(-13)+4]
 14730  0120B0  50E1               	movf	fsr1l,w,c
 14731  0120B2  0FF7               	addlw	-9
 14732  0120B4  6ED9               	movwf	fsr2l,c
 14733  0120B6  50E2               	movf	fsr1h,w,c
 14734  0120B8  6EDA               	movwf	fsr2h,c
 14735  0120BA  0EFF               	movlw	255
 14736  0120BC  22DA               	addwfc	fsr2h,f,c
 14737  0120BE  0E08               	movlw	8
 14738  0120C0                     u5705:
 14739  0120C0  90D8               	bcf	status,0,c
 14740  0120C2  36DE               	rlcf	postinc2,f,c
 14741  0120C4  36DE               	rlcf	postinc2,f,c
 14742  0120C6  36DE               	rlcf	postinc2,f,c
 14743  0120C8  36DD               	rlcf	postdec2,f,c
 14744  0120CA  52DD               	movf	postdec2,f,c
 14745  0120CC  52DD               	movf	postdec2,f,c
 14746  0120CE  2EE8               	decfsz	wreg,f,c
 14747  0120D0  D7F7               	goto	u5705
 14748                           
 14749                           ;stkvar	_b @ sp[(-13)+-4]
 14750  0120D2  0EF0               	movlw	240
 14751  0120D4  24E1               	addwf	fsr1l,w,c
 14752  0120D6  6ED9               	movwf	fsr2l,c
 14753  0120D8  0EFF               	movlw	255
 14754  0120DA  20E2               	addwfc	fsr1h,w,c
 14755  0120DC  6EDA               	movwf	fsr2h,c
 14756  0120DE  50DF               	movf	indf2,w,c
 14757  0120E0  6E40               	movwf	(btemp+11)^0,c
 14758                           
 14759                           ;stkvar	_a @ sp[(-13)+-8]
 14760  0120E2  0EEB               	movlw	-21
 14761  0120E4  50E3               	movf	plusw1,w,c
 14762  0120E6  0240               	mulwf	(btemp+11)^0,c
 14763                           
 14764                           ;stkvar	_temp @ sp[(-13)+8]
 14765  0120E8  0EFB               	movlw	-5
 14766  0120EA  006F FFCF FFE3     	movff	prodl,plusw1
 14767  0120F0  0EFC               	movlw	-4
 14768  0120F2  006F FFD3 FFE3     	movff	prodh,plusw1
 14769                           
 14770                           ;stkvar	_temp @ sp[(-13)+8]
 14771  0120F8  0EFB               	movlw	-5
 14772  0120FA  006F FF8C  F03F    	movff	plusw1,btemp+10
 14773  012100  0EFC               	movlw	-4
 14774  012102  006F FF8C  F040    	movff	plusw1,btemp+11
 14775                           
 14776                           ;stkvar	_grs @ sp[(-13)+4]
 14777  012108  50E1               	movf	fsr1l,w,c
 14778  01210A  0FF7               	addlw	-9
 14779  01210C  6ED9               	movwf	fsr2l,c
 14780  01210E  50E2               	movf	fsr1h,w,c
 14781  012110  6EDA               	movwf	fsr2h,c
 14782  012112  0EFF               	movlw	255
 14783  012114  22DA               	addwfc	fsr2h,f,c
 14784  012116  503F               	movf	(btemp+10)^0,w,c
 14785  012118  26DE               	addwf	postinc2,f,c
 14786  01211A  5040               	movf	(btemp+11)^0,w,c
 14787  01211C  22DE               	addwfc	postinc2,f,c
 14788  01211E  0E00               	movlw	0
 14789  012120  22DE               	addwfc	postinc2,f,c
 14790  012122  22DE               	addwfc	postinc2,f,c
 14791                           
 14792                           ;stkvar	_b @ sp[(-13)+-4]
 14793  012124  0EEF               	movlw	-17
 14794  012126  006F FF8C  F040    	movff	plusw1,btemp+11
 14795                           
 14796                           ;stkvar	_a @ sp[(-13)+-8]
 14797  01212C  0EEC               	movlw	236
 14798  01212E  24E1               	addwf	fsr1l,w,c
 14799  012130  6ED9               	movwf	fsr2l,c
 14800  012132  0EFF               	movlw	255
 14801  012134  20E2               	addwfc	fsr1h,w,c
 14802  012136  6EDA               	movwf	fsr2h,c
 14803  012138  50DF               	movf	indf2,w,c
 14804  01213A  0240               	mulwf	(btemp+11)^0,c
 14805                           
 14806                           ;stkvar	_temp @ sp[(-13)+8]
 14807  01213C  0EFB               	movlw	-5
 14808  01213E  006F FFCF FFE3     	movff	prodl,plusw1
 14809  012144  0EFC               	movlw	-4
 14810  012146  006F FFD3 FFE3     	movff	prodh,plusw1
 14811                           
 14812                           ;stkvar	_temp @ sp[(-13)+8]
 14813  01214C  0EFB               	movlw	-5
 14814  01214E  006F FF8C  F03F    	movff	plusw1,btemp+10
 14815  012154  0EFC               	movlw	-4
 14816  012156  006F FF8C  F040    	movff	plusw1,btemp+11
 14817                           
 14818                           ;stkvar	_grs @ sp[(-13)+4]
 14819  01215C  50E1               	movf	fsr1l,w,c
 14820  01215E  0FF7               	addlw	-9
 14821  012160  6ED9               	movwf	fsr2l,c
 14822  012162  50E2               	movf	fsr1h,w,c
 14823  012164  6EDA               	movwf	fsr2h,c
 14824  012166  0EFF               	movlw	255
 14825  012168  22DA               	addwfc	fsr2h,f,c
 14826  01216A  503F               	movf	(btemp+10)^0,w,c
 14827  01216C  26DE               	addwf	postinc2,f,c
 14828  01216E  5040               	movf	(btemp+11)^0,w,c
 14829  012170  22DE               	addwfc	postinc2,f,c
 14830  012172  0E00               	movlw	0
 14831  012174  22DE               	addwfc	postinc2,f,c
 14832  012176  22DE               	addwfc	postinc2,f,c
 14833                           
 14834                           ;stkvar	_grs @ sp[(-13)+4]
 14835  012178  50E1               	movf	fsr1l,w,c
 14836  01217A  0FF7               	addlw	-9
 14837  01217C  6ED9               	movwf	fsr2l,c
 14838  01217E  50E2               	movf	fsr1h,w,c
 14839  012180  6EDA               	movwf	fsr2h,c
 14840  012182  0EFF               	movlw	255
 14841  012184  22DA               	addwfc	fsr2h,f,c
 14842  012186  0E08               	movlw	8
 14843  012188                     u5715:
 14844  012188  90D8               	bcf	status,0,c
 14845  01218A  36DE               	rlcf	postinc2,f,c
 14846  01218C  36DE               	rlcf	postinc2,f,c
 14847  01218E  36DE               	rlcf	postinc2,f,c
 14848  012190  36DD               	rlcf	postdec2,f,c
 14849  012192  52DD               	movf	postdec2,f,c
 14850  012194  52DD               	movf	postdec2,f,c
 14851  012196  2EE8               	decfsz	wreg,f,c
 14852  012198  D7F7               	goto	u5715
 14853                           
 14854                           ;stkvar	_b @ sp[(-13)+-4]
 14855  01219A  0EEF               	movlw	-17
 14856  01219C  006F FF8C  F040    	movff	plusw1,btemp+11
 14857                           
 14858                           ;stkvar	_a @ sp[(-13)+-8]
 14859  0121A2  0EEB               	movlw	-21
 14860  0121A4  50E3               	movf	plusw1,w,c
 14861  0121A6  0240               	mulwf	(btemp+11)^0,c
 14862                           
 14863                           ;stkvar	_temp @ sp[(-13)+8]
 14864  0121A8  0EFB               	movlw	-5
 14865  0121AA  006F FFCF FFE3     	movff	prodl,plusw1
 14866  0121B0  0EFC               	movlw	-4
 14867  0121B2  006F FFD3 FFE3     	movff	prodh,plusw1
 14868                           
 14869                           ;stkvar	_temp @ sp[(-13)+8]
 14870  0121B8  0EFB               	movlw	-5
 14871  0121BA  006F FF8C  F03F    	movff	plusw1,btemp+10
 14872  0121C0  0EFC               	movlw	-4
 14873  0121C2  006F FF8C  F040    	movff	plusw1,btemp+11
 14874                           
 14875                           ;stkvar	_grs @ sp[(-13)+4]
 14876  0121C8  50E1               	movf	fsr1l,w,c
 14877  0121CA  0FF7               	addlw	-9
 14878  0121CC  6ED9               	movwf	fsr2l,c
 14879  0121CE  50E2               	movf	fsr1h,w,c
 14880  0121D0  6EDA               	movwf	fsr2h,c
 14881  0121D2  0EFF               	movlw	255
 14882  0121D4  22DA               	addwfc	fsr2h,f,c
 14883  0121D6  503F               	movf	(btemp+10)^0,w,c
 14884  0121D8  26DE               	addwf	postinc2,f,c
 14885  0121DA  5040               	movf	(btemp+11)^0,w,c
 14886  0121DC  22DE               	addwfc	postinc2,f,c
 14887  0121DE  0E00               	movlw	0
 14888  0121E0  22DE               	addwfc	postinc2,f,c
 14889  0121E2  22DE               	addwfc	postinc2,f,c
 14890                           
 14891                           ;stkvar	_b @ sp[(-13)+-4]
 14892  0121E4  0EF0               	movlw	240
 14893  0121E6  24E1               	addwf	fsr1l,w,c
 14894  0121E8  6ED9               	movwf	fsr2l,c
 14895  0121EA  0EFF               	movlw	255
 14896  0121EC  20E2               	addwfc	fsr1h,w,c
 14897  0121EE  6EDA               	movwf	fsr2h,c
 14898  0121F0  50DF               	movf	indf2,w,c
 14899  0121F2  6E40               	movwf	(btemp+11)^0,c
 14900                           
 14901                           ;stkvar	_a @ sp[(-13)+-8]
 14902  0121F4  0EED               	movlw	237
 14903  0121F6  24E1               	addwf	fsr1l,w,c
 14904  0121F8  6ED9               	movwf	fsr2l,c
 14905  0121FA  0EFF               	movlw	255
 14906  0121FC  20E2               	addwfc	fsr1h,w,c
 14907  0121FE  6EDA               	movwf	fsr2h,c
 14908  012200  50DF               	movf	indf2,w,c
 14909  012202  0240               	mulwf	(btemp+11)^0,c
 14910                           
 14911                           ;stkvar	_temp @ sp[(-13)+8]
 14912  012204  0EFB               	movlw	-5
 14913  012206  006F FFCF FFE3     	movff	prodl,plusw1
 14914  01220C  0EFC               	movlw	-4
 14915  01220E  006F FFD3 FFE3     	movff	prodh,plusw1
 14916                           
 14917                           ;stkvar	_temp @ sp[(-13)+8]
 14918  012214  0EFB               	movlw	-5
 14919  012216  006F FF8C  F03F    	movff	plusw1,btemp+10
 14920  01221C  0EFC               	movlw	-4
 14921  01221E  006F FF8C  F040    	movff	plusw1,btemp+11
 14922                           
 14923                           ;stkvar	_prod @ sp[(-13)+0]
 14924  012224  50E1               	movf	fsr1l,w,c
 14925  012226  0FF3               	addlw	-13
 14926  012228  6ED9               	movwf	fsr2l,c
 14927  01222A  50E2               	movf	fsr1h,w,c
 14928  01222C  6EDA               	movwf	fsr2h,c
 14929  01222E  0EFF               	movlw	255
 14930  012230  22DA               	addwfc	fsr2h,f,c
 14931  012232  503F               	movf	(btemp+10)^0,w,c
 14932  012234  26DE               	addwf	postinc2,f,c
 14933  012236  5040               	movf	(btemp+11)^0,w,c
 14934  012238  22DE               	addwfc	postinc2,f,c
 14935  01223A  0E00               	movlw	0
 14936  01223C  22DE               	addwfc	postinc2,f,c
 14937  01223E  22DE               	addwfc	postinc2,f,c
 14938                           
 14939                           ;stkvar	_b @ sp[(-13)+-4]
 14940  012240  0EF1               	movlw	241
 14941  012242  24E1               	addwf	fsr1l,w,c
 14942  012244  6ED9               	movwf	fsr2l,c
 14943  012246  0EFF               	movlw	255
 14944  012248  20E2               	addwfc	fsr1h,w,c
 14945  01224A  6EDA               	movwf	fsr2h,c
 14946  01224C  50DF               	movf	indf2,w,c
 14947  01224E  6E40               	movwf	(btemp+11)^0,c
 14948                           
 14949                           ;stkvar	_a @ sp[(-13)+-8]
 14950  012250  0EEC               	movlw	236
 14951  012252  24E1               	addwf	fsr1l,w,c
 14952  012254  6ED9               	movwf	fsr2l,c
 14953  012256  0EFF               	movlw	255
 14954  012258  20E2               	addwfc	fsr1h,w,c
 14955  01225A  6EDA               	movwf	fsr2h,c
 14956  01225C  50DF               	movf	indf2,w,c
 14957  01225E  0240               	mulwf	(btemp+11)^0,c
 14958                           
 14959                           ;stkvar	_temp @ sp[(-13)+8]
 14960  012260  0EFB               	movlw	-5
 14961  012262  006F FFCF FFE3     	movff	prodl,plusw1
 14962  012268  0EFC               	movlw	-4
 14963  01226A  006F FFD3 FFE3     	movff	prodh,plusw1
 14964                           
 14965                           ;stkvar	_temp @ sp[(-13)+8]
 14966  012270  0EFB               	movlw	-5
 14967  012272  006F FF8C  F03F    	movff	plusw1,btemp+10
 14968  012278  0EFC               	movlw	-4
 14969  01227A  006F FF8C  F040    	movff	plusw1,btemp+11
 14970                           
 14971                           ;stkvar	_prod @ sp[(-13)+0]
 14972  012280  50E1               	movf	fsr1l,w,c
 14973  012282  0FF3               	addlw	-13
 14974  012284  6ED9               	movwf	fsr2l,c
 14975  012286  50E2               	movf	fsr1h,w,c
 14976  012288  6EDA               	movwf	fsr2h,c
 14977  01228A  0EFF               	movlw	255
 14978  01228C  22DA               	addwfc	fsr2h,f,c
 14979  01228E  503F               	movf	(btemp+10)^0,w,c
 14980  012290  26DE               	addwf	postinc2,f,c
 14981  012292  5040               	movf	(btemp+11)^0,w,c
 14982  012294  22DE               	addwfc	postinc2,f,c
 14983  012296  0E00               	movlw	0
 14984  012298  22DE               	addwfc	postinc2,f,c
 14985  01229A  22DE               	addwfc	postinc2,f,c
 14986                           
 14987                           ;stkvar	_b @ sp[(-13)+-4]
 14988  01229C  0EF1               	movlw	241
 14989  01229E  24E1               	addwf	fsr1l,w,c
 14990  0122A0  6ED9               	movwf	fsr2l,c
 14991  0122A2  0EFF               	movlw	255
 14992  0122A4  20E2               	addwfc	fsr1h,w,c
 14993  0122A6  6EDA               	movwf	fsr2h,c
 14994  0122A8  50DF               	movf	indf2,w,c
 14995  0122AA  6E40               	movwf	(btemp+11)^0,c
 14996                           
 14997                           ;stkvar	_a @ sp[(-13)+-8]
 14998  0122AC  0EED               	movlw	237
 14999  0122AE  24E1               	addwf	fsr1l,w,c
 15000  0122B0  6ED9               	movwf	fsr2l,c
 15001  0122B2  0EFF               	movlw	255
 15002  0122B4  20E2               	addwfc	fsr1h,w,c
 15003  0122B6  6EDA               	movwf	fsr2h,c
 15004  0122B8  50DF               	movf	indf2,w,c
 15005  0122BA  0240               	mulwf	(btemp+11)^0,c
 15006                           
 15007                           ;stkvar	_temp @ sp[(-13)+8]
 15008  0122BC  0EFB               	movlw	-5
 15009  0122BE  006F FFCF FFE3     	movff	prodl,plusw1
 15010  0122C4  0EFC               	movlw	-4
 15011  0122C6  006F FFD3 FFE3     	movff	prodh,plusw1
 15012                           
 15013                           ;stkvar	_temp @ sp[(-13)+8]
 15014  0122CC  0EFB               	movlw	-5
 15015  0122CE  006F FF8C  F03F    	movff	plusw1,btemp+10
 15016  0122D4  0EFC               	movlw	-4
 15017  0122D6  006F FF8C  F040    	movff	plusw1,btemp+11
 15018  0122DC  503F               	movf	(btemp+10)^0,w,c
 15019  0122DE  6E39               	movwf	(btemp+4)^0,c
 15020  0122E0  5040               	movf	(btemp+11)^0,w,c
 15021  0122E2  6E3A               	movwf	(btemp+5)^0,c
 15022  0122E4  6A3B               	clrf	(btemp+6)^0,c
 15023  0122E6  6A3C               	clrf	(btemp+7)^0,c
 15024  0122E8  0060  F0EC  F03C   	movff	btemp+6,btemp+7
 15025  0122EE  0060  F0E8  F03B   	movff	btemp+5,btemp+6
 15026  0122F4  0060  F0E4  F03A   	movff	btemp+4,btemp+5
 15027  0122FA  6A39               	clrf	(btemp+4)^0,c
 15028                           
 15029                           ;stkvar	_prod @ sp[(-13)+0]
 15030  0122FC  50E1               	movf	fsr1l,w,c
 15031  0122FE  0FF3               	addlw	-13
 15032  012300  6ED9               	movwf	fsr2l,c
 15033  012302  50E2               	movf	fsr1h,w,c
 15034  012304  6EDA               	movwf	fsr2h,c
 15035  012306  0EFF               	movlw	255
 15036  012308  22DA               	addwfc	fsr2h,f,c
 15037  01230A  5039               	movf	(btemp+4)^0,w,c
 15038  01230C  26DE               	addwf	postinc2,f,c
 15039  01230E  503A               	movf	(btemp+5)^0,w,c
 15040  012310  22DE               	addwfc	postinc2,f,c
 15041  012312  503B               	movf	(btemp+6)^0,w,c
 15042  012314  22DE               	addwfc	postinc2,f,c
 15043  012316  503C               	movf	(btemp+7)^0,w,c
 15044  012318  22DE               	addwfc	postinc2,f,c
 15045                           
 15046                           ;stkvar	_prod @ sp[(-13)+0]
 15047  01231A  50E1               	movf	fsr1l,w,c
 15048  01231C  0FF3               	addlw	-13
 15049  01231E  6ED9               	movwf	fsr2l,c
 15050  012320  50E2               	movf	fsr1h,w,c
 15051  012322  6EDA               	movwf	fsr2h,c
 15052  012324  0EFF               	movlw	255
 15053  012326  22DA               	addwfc	fsr2h,f,c
 15054                           
 15055                           ;stkvar	_grs @ sp[(-13)+4]
 15056  012328  0EFA               	movlw	250
 15057  01232A  24E1               	addwf	fsr1l,w,c
 15058  01232C  6EE9               	movwf	fsr0l,c
 15059  01232E  0EFF               	movlw	255
 15060  012330  20E2               	addwfc	fsr1h,w,c
 15061  012332  6EEA               	movwf	fsr0h,c
 15062  012334  50EF               	movf	indf0,w,c
 15063  012336  26DE               	addwf	postinc2,f,c
 15064  012338  0E00               	movlw	0
 15065  01233A  22DE               	addwfc	postinc2,f,c
 15066  01233C  22DE               	addwfc	postinc2,f,c
 15067  01233E  22DE               	addwfc	postinc2,f,c
 15068                           
 15069                           ;stkvar	_grs @ sp[(-13)+4]
 15070  012340  50E1               	movf	fsr1l,w,c
 15071  012342  0FF7               	addlw	-9
 15072  012344  6ED9               	movwf	fsr2l,c
 15073  012346  50E2               	movf	fsr1h,w,c
 15074  012348  6EDA               	movwf	fsr2h,c
 15075  01234A  0EFF               	movlw	255
 15076  01234C  22DA               	addwfc	fsr2h,f,c
 15077  01234E  0E08               	movlw	8
 15078  012350                     u5725:
 15079  012350  90D8               	bcf	status,0,c
 15080  012352  36DE               	rlcf	postinc2,f,c
 15081  012354  36DE               	rlcf	postinc2,f,c
 15082  012356  36DE               	rlcf	postinc2,f,c
 15083  012358  36DD               	rlcf	postdec2,f,c
 15084  01235A  52DD               	movf	postdec2,f,c
 15085  01235C  52DD               	movf	postdec2,f,c
 15086  01235E  2EE8               	decfsz	wreg,f,c
 15087  012360  D7F7               	goto	u5725
 15088  012362  0E82               	movlw	130
 15089  012364  6E3F               	movwf	(btemp+10)^0,c
 15090  012366  0EFF               	movlw	255
 15091  012368  6E40               	movwf	(btemp+11)^0,c
 15092                           
 15093                           ;stkvar	_bexp @ sp[(-13)+10]
 15094  01236A  0EFD               	movlw	-3
 15095  01236C  50E3               	movf	plusw1,w,c
 15096  01236E  6E3D               	movwf	(btemp+8)^0,c
 15097  012370  6A3E               	clrf	(btemp+9)^0,c
 15098                           
 15099                           ;stkvar	_aexp @ sp[(-13)+11]
 15100  012372  0EFE               	movlw	-2
 15101  012374  50E3               	movf	plusw1,w,c
 15102  012376  263D               	addwf	(btemp+8)^0,f,c
 15103  012378  0E00               	movlw	0
 15104  01237A  223E               	addwfc	(btemp+9)^0,f,c
 15105  01237C  503F               	movf	(btemp+10)^0,w,c
 15106  01237E  263D               	addwf	(btemp+8)^0,f,c
 15107  012380  5040               	movf	(btemp+11)^0,w,c
 15108  012382  223E               	addwfc	(btemp+9)^0,f,c
 15109                           
 15110                           ;stkvar	_temp @ sp[(-13)+8]
 15111  012384  0EFB               	movlw	-5
 15112  012386  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15113  01238C  0EFC               	movlw	-4
 15114  01238E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15115  012394  D021               	goto	l6655
 15116  012396                     l6645:
 15117                           
 15118                           ;stkvar	_prod @ sp[(-13)+0]
 15119  012396  90D8               	bcf	status,0,c
 15120  012398  0EF3               	movlw	-13
 15121  01239A  36E3               	rlcf	plusw1,f,c
 15122  01239C  0EF4               	movlw	-12
 15123  01239E  36E3               	rlcf	plusw1,f,c
 15124  0123A0  0EF5               	movlw	-11
 15125  0123A2  36E3               	rlcf	plusw1,f,c
 15126  0123A4  0EF6               	movlw	-10
 15127  0123A6  36E3               	rlcf	plusw1,f,c
 15128                           
 15129                           ;stkvar	_grs @ sp[(-13)+4]
 15130  0123A8  0EFA               	movlw	-6
 15131  0123AA  AEE3               	btfss	plusw1,7,c
 15132  0123AC  D002               	goto	l6651
 15133                           
 15134                           ;stkvar	_prod @ sp[(-13)+0]
 15135  0123AE  0EF3               	movlw	-13
 15136  0123B0  80E3               	bsf	plusw1,0,c
 15137  0123B2                     l6651:
 15138                           
 15139                           ;stkvar	_grs @ sp[(-13)+4]
 15140  0123B2  90D8               	bcf	status,0,c
 15141  0123B4  0EF7               	movlw	-9
 15142  0123B6  36E3               	rlcf	plusw1,f,c
 15143  0123B8  0EF8               	movlw	-8
 15144  0123BA  36E3               	rlcf	plusw1,f,c
 15145  0123BC  0EF9               	movlw	-7
 15146  0123BE  36E3               	rlcf	plusw1,f,c
 15147  0123C0  0EFA               	movlw	-6
 15148  0123C2  36E3               	rlcf	plusw1,f,c
 15149                           
 15150                           ;stkvar	_temp @ sp[(-13)+8]
 15151  0123C4  50E1               	movf	fsr1l,w,c
 15152  0123C6  0FFB               	addlw	-5
 15153  0123C8  6ED9               	movwf	fsr2l,c
 15154  0123CA  50E2               	movf	fsr1h,w,c
 15155  0123CC  6EDA               	movwf	fsr2h,c
 15156  0123CE  0EFF               	movlw	255
 15157  0123D0  22DA               	addwfc	fsr2h,f,c
 15158  0123D2  06DE               	decf	postinc2,f,c
 15159  0123D4  0E00               	movlw	0
 15160  0123D6  5ADD               	subwfb	postdec2,f,c
 15161  0123D8                     l6655:
 15162                           
 15163                           ;stkvar	_prod @ sp[(-13)+0]
 15164  0123D8  0EF5               	movlw	-11
 15165  0123DA  AEE3               	btfss	plusw1,7,c
 15166  0123DC  D7DC               	goto	l6645
 15167                           
 15168                           ;stkvar	_aexp @ sp[(-13)+11]
 15169  0123DE  0EFE               	movlw	-2
 15170  0123E0  6AE3               	clrf	plusw1,c
 15171                           
 15172                           ;stkvar	_grs @ sp[(-13)+4]
 15173  0123E2  0EFA               	movlw	-6
 15174  0123E4  AEE3               	btfss	plusw1,7,c
 15175  0123E6  D020               	goto	l6669
 15176                           
 15177                           ;stkvar	_grs @ sp[(-13)+4]
 15178  0123E8  50E1               	movf	fsr1l,w,c
 15179  0123EA  0FF7               	addlw	-9
 15180  0123EC  6ED9               	movwf	fsr2l,c
 15181  0123EE  50E2               	movf	fsr1h,w,c
 15182  0123F0  6EDA               	movwf	fsr2h,c
 15183  0123F2  0EFF               	movlw	255
 15184  0123F4  22DA               	addwfc	fsr2h,f,c
 15185  0123F6  0EFF               	movlw	255
 15186  0123F8  14DE               	andwf	postinc2,w,c
 15187  0123FA  6E3D               	movwf	(btemp+8)^0,c
 15188  0123FC  0EFF               	movlw	255
 15189  0123FE  14DE               	andwf	postinc2,w,c
 15190  012400  6E3E               	movwf	(btemp+9)^0,c
 15191  012402  0EFF               	movlw	255
 15192  012404  14DE               	andwf	postinc2,w,c
 15193  012406  6E3F               	movwf	(btemp+10)^0,c
 15194  012408  0E7F               	movlw	127
 15195  01240A  14DE               	andwf	postinc2,w,c
 15196  01240C  6E40               	movwf	(btemp+11)^0,c
 15197  01240E  503D               	movf	(btemp+8)^0,w,c
 15198  012410  103E               	iorwf	(btemp+9)^0,w,c
 15199  012412  103F               	iorwf	(btemp+10)^0,w,c
 15200  012414  1040               	iorwf	(btemp+11)^0,w,c
 15201  012416  B4D8               	btfsc	status,2,c
 15202  012418  D004               	goto	l6665
 15203  01241A                     u5760:
 15204                           
 15205                           ;stkvar	_aexp @ sp[(-13)+11]
 15206  01241A  0EFE               	movlw	-2
 15207  01241C  6AE3               	clrf	plusw1,c
 15208  01241E  2AE3               	incf	plusw1,f,c
 15209  012420  D003               	goto	l6669
 15210  012422                     l6665:
 15211                           
 15212                           ;stkvar	_prod @ sp[(-13)+0]
 15213  012422  0EF3               	movlw	-13
 15214  012424  B0E3               	btfsc	plusw1,0,c
 15215  012426  D7F9               	goto	u5760
 15216  012428                     l6669:
 15217                           
 15218                           ;stkvar	_aexp @ sp[(-13)+11]
 15219  012428  0EFE               	movlw	-2
 15220  01242A  50E3               	movf	plusw1,w,c
 15221  01242C  B4D8               	btfsc	status,2,c
 15222  01242E  D036               	goto	l6679
 15223                           
 15224                           ;stkvar	_prod @ sp[(-13)+0]
 15225  012430  50E1               	movf	fsr1l,w,c
 15226  012432  0FF3               	addlw	-13
 15227  012434  6ED9               	movwf	fsr2l,c
 15228  012436  50E2               	movf	fsr1h,w,c
 15229  012438  6EDA               	movwf	fsr2h,c
 15230  01243A  0EFF               	movlw	255
 15231  01243C  22DA               	addwfc	fsr2h,f,c
 15232  01243E  2ADE               	incf	postinc2,f,c
 15233  012440  0E00               	movlw	0
 15234  012442  22DE               	addwfc	postinc2,f,c
 15235  012444  22DE               	addwfc	postinc2,f,c
 15236  012446  22DE               	addwfc	postinc2,f,c
 15237                           
 15238                           ;stkvar	_prod @ sp[(-13)+0]
 15239  012448  0EF6               	movlw	-10
 15240  01244A  A0E3               	btfss	plusw1,0,c
 15241  01244C  D027               	goto	l6679
 15242  01244E  0E01               	movlw	1
 15243  012450  6E40               	movwf	(btemp+11)^0,c
 15244                           
 15245                           ;stkvar	_prod @ sp[(-13)+0]
 15246  012452  50E1               	movf	fsr1l,w,c
 15247  012454  0FF3               	addlw	-13
 15248  012456  6ED9               	movwf	fsr2l,c
 15249  012458  50E2               	movf	fsr1h,w,c
 15250  01245A  6EDA               	movwf	fsr2h,c
 15251  01245C  0EFF               	movlw	255
 15252  01245E  22DA               	addwfc	fsr2h,f,c
 15253  012460  2840               	incf	(btemp+11)^0,w,c
 15254  012462  52DE               	movf	postinc2,f,c
 15255  012464  D008               	goto	u5800
 15256  012466                     u5805:
 15257  012466  52DE               	movf	postinc2,f,c
 15258  012468  90D8               	bcf	status,0,c
 15259  01246A  BEDC               	btfsc	preinc2,7,c
 15260  01246C  80D8               	bsf	status,0,c
 15261  01246E  32DD               	rrcf	postdec2,f,c
 15262  012470  32DD               	rrcf	postdec2,f,c
 15263  012472  32DD               	rrcf	postdec2,f,c
 15264  012474  32DE               	rrcf	postinc2,f,c
 15265  012476                     u5800:
 15266  012476  2EE8               	decfsz	wreg,f,c
 15267  012478  D7F6               	goto	u5805
 15268                           
 15269                           ;stkvar	_temp @ sp[(-13)+8]
 15270  01247A  0EFB               	movlw	-5
 15271  01247C  50E3               	movf	plusw1,w,c
 15272  01247E  0F01               	addlw	1
 15273  012480  6E35               	movwf	btemp^0,c
 15274  012482  0EFB               	movlw	-5
 15275  012484  0060  F0D7  FFE3   	movff	btemp,plusw1
 15276  01248A  6A35               	clrf	btemp^0,c
 15277  01248C  0EFC               	movlw	-4
 15278  01248E  50E3               	movf	plusw1,w,c
 15279  012490  2035               	addwfc	btemp^0,w,c
 15280  012492  6E35               	movwf	btemp^0,c
 15281  012494  0EFC               	movlw	-4
 15282  012496  0060  F0D7  FFE3   	movff	btemp,plusw1
 15283  01249C                     l6679:
 15284                           
 15285                           ;stkvar	_temp @ sp[(-13)+8]
 15286  01249C  0EFC               	movlw	-4
 15287  01249E  BEE3               	btfsc	plusw1,7,c
 15288  0124A0  D020               	goto	l6683
 15289  0124A2  0EFC               	movlw	-4
 15290  0124A4  50E3               	movf	plusw1,w,c
 15291  0124A6  E104               	bnz	u5810
 15292  0124A8  0EFB               	movlw	-5
 15293  0124AA  28E3               	incf	plusw1,w,c
 15294  0124AC  A0D8               	btfss	status,0,c
 15295  0124AE  D019               	goto	l6683
 15296  0124B0                     u5810:
 15297  0124B0  0E00               	movlw	0
 15298  0124B2  6E3D               	movwf	(btemp+8)^0,c
 15299  0124B4  0E00               	movlw	0
 15300  0124B6  6E3E               	movwf	(btemp+9)^0,c
 15301  0124B8  0E80               	movlw	128
 15302  0124BA  6E3F               	movwf	(btemp+10)^0,c
 15303  0124BC  0E7F               	movlw	127
 15304  0124BE  6E40               	movwf	(btemp+11)^0,c
 15305                           
 15306                           ;stkvar	_prod @ sp[(-13)+0]
 15307  0124C0  0EF3               	movlw	-13
 15308  0124C2  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15309  0124C8  0EF4               	movlw	-12
 15310  0124CA  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15311  0124D0  0EF5               	movlw	-11
 15312  0124D2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15313  0124D8  0EF6               	movlw	-10
 15314  0124DA  0060  F103  FFE3   	movff	btemp+11,plusw1
 15315  0124E0  D044               	goto	l6699
 15316  0124E2                     l6683:
 15317                           
 15318                           ;stkvar	_temp @ sp[(-13)+8]
 15319  0124E2  0EFC               	movlw	-4
 15320  0124E4  BEE3               	btfsc	plusw1,7,c
 15321  0124E6  D007               	goto	u5820
 15322  0124E8  0EFC               	movlw	-4
 15323  0124EA  50E3               	movf	plusw1,w,c
 15324  0124EC  E10F               	bnz	l6689
 15325  0124EE  0EFB               	movlw	-5
 15326  0124F0  04E3               	decf	plusw1,w,c
 15327  0124F2  B0D8               	btfsc	status,0,c
 15328  0124F4  D00B               	goto	l6689
 15329  0124F6                     u5820:
 15330                           
 15331                           ;stkvar	_prod @ sp[(-13)+0]
 15332  0124F6  0EF3               	movlw	-13
 15333  0124F8  6AE3               	clrf	plusw1,c
 15334  0124FA  0EF4               	movlw	-12
 15335  0124FC  6AE3               	clrf	plusw1,c
 15336  0124FE  0EF5               	movlw	-11
 15337  012500  6AE3               	clrf	plusw1,c
 15338  012502  0EF6               	movlw	-10
 15339  012504  6AE3               	clrf	plusw1,c
 15340                           
 15341                           ;stkvar	_sign @ sp[(-13)+12]
 15342  012506  0EFF               	movlw	-1
 15343  012508  6AE3               	clrf	plusw1,c
 15344  01250A  D02F               	goto	l6699
 15345  01250C                     l6689:
 15346                           
 15347                           ;stkvar	_temp @ sp[(-13)+8]
 15348                           ;stkvar	_bexp @ sp[(-13)+10]
 15349  01250C  0EFB               	movlw	-5
 15350  01250E  006F FF8C  F035    	movff	plusw1,btemp
 15351  012514  0EFD               	movlw	-3
 15352  012516  0060  F0D7  FFE3   	movff	btemp,plusw1
 15353                           
 15354                           ;stkvar	_prod @ sp[(-13)+0]
 15355  01251C  50E1               	movf	fsr1l,w,c
 15356  01251E  0FF3               	addlw	-13
 15357  012520  6ED9               	movwf	fsr2l,c
 15358  012522  50E2               	movf	fsr1h,w,c
 15359  012524  6EDA               	movwf	fsr2h,c
 15360  012526  0EFF               	movlw	255
 15361  012528  22DA               	addwfc	fsr2h,f,c
 15362  01252A  0EFF               	movlw	255
 15363  01252C  16DE               	andwf	postinc2,f,c
 15364  01252E  0EFF               	movlw	255
 15365  012530  16DE               	andwf	postinc2,f,c
 15366  012532  0E7F               	movlw	127
 15367  012534  16DE               	andwf	postinc2,f,c
 15368  012536  0E00               	movlw	0
 15369  012538  16DE               	andwf	postinc2,f,c
 15370                           
 15371                           ;stkvar	_bexp @ sp[(-13)+10]
 15372  01253A  0EFD               	movlw	-3
 15373  01253C  A0E3               	btfss	plusw1,0,c
 15374  01253E  D008               	goto	l6697
 15375                           
 15376                           ;stkvar	_prod @ sp[(-13)+0]
 15377  012540  0EF5               	movlw	245
 15378  012542  24E1               	addwf	fsr1l,w,c
 15379  012544  6ED9               	movwf	fsr2l,c
 15380  012546  0EFF               	movlw	255
 15381  012548  20E2               	addwfc	fsr1h,w,c
 15382  01254A  6EDA               	movwf	fsr2h,c
 15383  01254C  0E00               	movlw	0
 15384  01254E  8EDB               	bsf	plusw2,7,c
 15385  012550                     l6697:
 15386                           
 15387                           ;stkvar	_prod @ sp[(-13)+0]
 15388  012550  0EF6               	movlw	246
 15389  012552  24E1               	addwf	fsr1l,w,c
 15390  012554  6ED9               	movwf	fsr2l,c
 15391  012556  0EFF               	movlw	255
 15392  012558  20E2               	addwfc	fsr1h,w,c
 15393  01255A  6EDA               	movwf	fsr2h,c
 15394                           
 15395                           ;stkvar	_bexp @ sp[(-13)+10]
 15396  01255C  0EFD               	movlw	-3
 15397  01255E  006F FF8C  F040    	movff	plusw1,btemp+11
 15398  012564  90D8               	bcf	status,0,c
 15399  012566  3040               	rrcf	(btemp+11)^0,w,c
 15400  012568  6EDF               	movwf	indf2,c
 15401  01256A                     l6699:
 15402                           
 15403                           ;stkvar	_sign @ sp[(-13)+12]
 15404  01256A  0EFF               	movlw	-1
 15405  01256C  006F FF8C  F040    	movff	plusw1,btemp+11
 15406                           
 15407                           ;stkvar	_prod @ sp[(-13)+0]
 15408  012572  0EF6               	movlw	246
 15409  012574  24E1               	addwf	fsr1l,w,c
 15410  012576  6ED9               	movwf	fsr2l,c
 15411  012578  0EFF               	movlw	255
 15412  01257A  20E2               	addwfc	fsr1h,w,c
 15413  01257C  6EDA               	movwf	fsr2h,c
 15414  01257E  5040               	movf	(btemp+11)^0,w,c
 15415  012580  12DF               	iorwf	indf2,f,c
 15416                           
 15417                           ;stkvar	_prod @ sp[(-13)+0]
 15418  012582  0EF3               	movlw	-13
 15419  012584  006F FF8C  F035    	movff	plusw1,btemp
 15420  01258A  0EF4               	movlw	-12
 15421  01258C  006F FF8C  F036    	movff	plusw1,btemp+1
 15422  012592  0EF5               	movlw	-11
 15423  012594  006F FF8C  F037    	movff	plusw1,btemp+2
 15424  01259A  0EF6               	movlw	-10
 15425  01259C  006F FF8C  F038    	movff	plusw1,btemp+3
 15426  0125A2                     l2592:
 15427                           
 15428                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 15429  0125A2  0EEB               	movlw	235
 15430  0125A4  26E1               	addwf	fsr1l,f,c
 15431  0125A6  0EFF               	movlw	255
 15432  0125A8  22E2               	addwfc	fsr1h,f,c
 15433  0125AA  0012               	return		;funcret
 15434  0125AC                     __end_of___flmul:
 15435                           	opt callstack 0
 15436                           
 15437 ;; *************** function ___flge *****************
 15438 ;; Defined at:
 15439 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 15440 ;; Parameters:    Size  Location     Type
 15441 ;;  ff1             4  [STACK] unsigned char 
 15442 ;;  ff2             4  [STACK] unsigned char 
 15443 ;; Auto vars:     Size  Location     Type
 15444 ;;		None
 15445 ;; Return value:  Size  Location     Type
 15446 ;;		None               void
 15447 ;; Registers used:
 15448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 15449 ;; Tracked objects:
 15450 ;;		On entry : 0/4
 15451 ;;		On exit  : 0/0
 15452 ;;		Unchanged: 0/0
 15453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15458 ;;Total ram usage:        0 bytes
 15459 ;; Hardware stack levels used:    1
 15460 ;; Hardware stack levels required when called:    6
 15461 ;; This function calls:
 15462 ;;		Nothing
 15463 ;; This function is called by:
 15464 ;;		_efgtoa
 15465 ;; This function uses a reentrant model
 15466 ;;
 15467                           
 15468                           	psect	text52
 15469  015D94                     __ptext52:
 15470                           	opt callstack 0
 15471  015D94                     ___flge:
 15472                           	opt callstack 17
 15473                           
 15474                           ;stkvar	_ff1 @ sp[(0)+-4]
 15475                           
 15476                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15477                           ;incstack = 0
 15478  015D94  50E1               	movf	fsr1l,w,c
 15479  015D96  0FFC               	addlw	-4
 15480  015D98  6ED9               	movwf	fsr2l,c
 15481  015D9A  50E2               	movf	fsr1h,w,c
 15482  015D9C  6EDA               	movwf	fsr2h,c
 15483  015D9E  0EFF               	movlw	255
 15484  015DA0  22DA               	addwfc	fsr2h,f,c
 15485  015DA2  0E00               	movlw	0
 15486  015DA4  14DE               	andwf	postinc2,w,c
 15487  015DA6  6E3D               	movwf	(btemp+8)^0,c
 15488  015DA8  0E00               	movlw	0
 15489  015DAA  14DE               	andwf	postinc2,w,c
 15490  015DAC  6E3E               	movwf	(btemp+9)^0,c
 15491  015DAE  0E80               	movlw	128
 15492  015DB0  14DE               	andwf	postinc2,w,c
 15493  015DB2  6E3F               	movwf	(btemp+10)^0,c
 15494  015DB4  0E7F               	movlw	127
 15495  015DB6  14DE               	andwf	postinc2,w,c
 15496  015DB8  6E40               	movwf	(btemp+11)^0,c
 15497  015DBA  503D               	movf	(btemp+8)^0,w,c
 15498  015DBC  103E               	iorwf	(btemp+9)^0,w,c
 15499  015DBE  103F               	iorwf	(btemp+10)^0,w,c
 15500  015DC0  1040               	iorwf	(btemp+11)^0,w,c
 15501  015DC2  A4D8               	btfss	status,2,c
 15502  015DC4  D008               	goto	l6815
 15503                           
 15504                           ;stkvar	_ff1 @ sp[(0)+-4]
 15505  015DC6  0EFC               	movlw	-4
 15506  015DC8  6AE3               	clrf	plusw1,c
 15507  015DCA  0EFD               	movlw	-3
 15508  015DCC  6AE3               	clrf	plusw1,c
 15509  015DCE  0EFE               	movlw	-2
 15510  015DD0  6AE3               	clrf	plusw1,c
 15511  015DD2  0EFF               	movlw	-1
 15512  015DD4  6AE3               	clrf	plusw1,c
 15513  015DD6                     l6815:
 15514                           
 15515                           ;stkvar	_ff2 @ sp[(0)+-8]
 15516  015DD6  50E1               	movf	fsr1l,w,c
 15517  015DD8  0FF8               	addlw	-8
 15518  015DDA  6ED9               	movwf	fsr2l,c
 15519  015DDC  50E2               	movf	fsr1h,w,c
 15520  015DDE  6EDA               	movwf	fsr2h,c
 15521  015DE0  0EFF               	movlw	255
 15522  015DE2  22DA               	addwfc	fsr2h,f,c
 15523  015DE4  0E00               	movlw	0
 15524  015DE6  14DE               	andwf	postinc2,w,c
 15525  015DE8  6E3D               	movwf	(btemp+8)^0,c
 15526  015DEA  0E00               	movlw	0
 15527  015DEC  14DE               	andwf	postinc2,w,c
 15528  015DEE  6E3E               	movwf	(btemp+9)^0,c
 15529  015DF0  0E80               	movlw	128
 15530  015DF2  14DE               	andwf	postinc2,w,c
 15531  015DF4  6E3F               	movwf	(btemp+10)^0,c
 15532  015DF6  0E7F               	movlw	127
 15533  015DF8  14DE               	andwf	postinc2,w,c
 15534  015DFA  6E40               	movwf	(btemp+11)^0,c
 15535  015DFC  503D               	movf	(btemp+8)^0,w,c
 15536  015DFE  103E               	iorwf	(btemp+9)^0,w,c
 15537  015E00  103F               	iorwf	(btemp+10)^0,w,c
 15538  015E02  1040               	iorwf	(btemp+11)^0,w,c
 15539  015E04  A4D8               	btfss	status,2,c
 15540  015E06  D008               	goto	l2237
 15541                           
 15542                           ;stkvar	_ff2 @ sp[(0)+-8]
 15543  015E08  0EF8               	movlw	-8
 15544  015E0A  6AE3               	clrf	plusw1,c
 15545  015E0C  0EF9               	movlw	-7
 15546  015E0E  6AE3               	clrf	plusw1,c
 15547  015E10  0EFA               	movlw	-6
 15548  015E12  6AE3               	clrf	plusw1,c
 15549  015E14  0EFB               	movlw	-5
 15550  015E16  6AE3               	clrf	plusw1,c
 15551  015E18                     l2237:
 15552                           
 15553                           ;stkvar	_ff1 @ sp[(0)+-4]
 15554  015E18  0EFF               	movlw	-1
 15555  015E1A  AEE3               	btfss	plusw1,7,c
 15556  015E1C  D024               	goto	l6821
 15557                           
 15558                           ;stkvar	_ff1 @ sp[(0)+-4]
 15559  015E1E  0E00               	movlw	0
 15560  015E20  6E3D               	movwf	(btemp+8)^0,c
 15561  015E22  0E00               	movlw	0
 15562  015E24  6E3E               	movwf	(btemp+9)^0,c
 15563  015E26  0E00               	movlw	0
 15564  015E28  6E3F               	movwf	(btemp+10)^0,c
 15565  015E2A  0E80               	movlw	128
 15566  015E2C  6E40               	movwf	(btemp+11)^0,c
 15567  015E2E  0EFC               	movlw	-4
 15568  015E30  50E3               	movf	plusw1,w,c
 15569  015E32  5E3D               	subwf	(btemp+8)^0,f,c
 15570  015E34  0EFD               	movlw	-3
 15571  015E36  50E3               	movf	plusw1,w,c
 15572  015E38  5A3E               	subwfb	(btemp+9)^0,f,c
 15573  015E3A  0EFE               	movlw	-2
 15574  015E3C  50E3               	movf	plusw1,w,c
 15575  015E3E  5A3F               	subwfb	(btemp+10)^0,f,c
 15576  015E40  0EFF               	movlw	-1
 15577  015E42  50E3               	movf	plusw1,w,c
 15578  015E44  5A40               	subwfb	(btemp+11)^0,f,c
 15579                           
 15580                           ;stkvar	_ff1 @ sp[(0)+-4]
 15581  015E46  0EFC               	movlw	-4
 15582  015E48  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15583  015E4E  0EFD               	movlw	-3
 15584  015E50  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15585  015E56  0EFE               	movlw	-2
 15586  015E58  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15587  015E5E  0EFF               	movlw	-1
 15588  015E60  0060  F103  FFE3   	movff	btemp+11,plusw1
 15589  015E66                     l6821:
 15590                           
 15591                           ;stkvar	_ff2 @ sp[(0)+-8]
 15592  015E66  0EFB               	movlw	-5
 15593  015E68  AEE3               	btfss	plusw1,7,c
 15594  015E6A  D024               	goto	l6825
 15595                           
 15596                           ;stkvar	_ff2 @ sp[(0)+-8]
 15597  015E6C  0E00               	movlw	0
 15598  015E6E  6E3D               	movwf	(btemp+8)^0,c
 15599  015E70  0E00               	movlw	0
 15600  015E72  6E3E               	movwf	(btemp+9)^0,c
 15601  015E74  0E00               	movlw	0
 15602  015E76  6E3F               	movwf	(btemp+10)^0,c
 15603  015E78  0E80               	movlw	128
 15604  015E7A  6E40               	movwf	(btemp+11)^0,c
 15605  015E7C  0EF8               	movlw	-8
 15606  015E7E  50E3               	movf	plusw1,w,c
 15607  015E80  5E3D               	subwf	(btemp+8)^0,f,c
 15608  015E82  0EF9               	movlw	-7
 15609  015E84  50E3               	movf	plusw1,w,c
 15610  015E86  5A3E               	subwfb	(btemp+9)^0,f,c
 15611  015E88  0EFA               	movlw	-6
 15612  015E8A  50E3               	movf	plusw1,w,c
 15613  015E8C  5A3F               	subwfb	(btemp+10)^0,f,c
 15614  015E8E  0EFB               	movlw	-5
 15615  015E90  50E3               	movf	plusw1,w,c
 15616  015E92  5A40               	subwfb	(btemp+11)^0,f,c
 15617                           
 15618                           ;stkvar	_ff2 @ sp[(0)+-8]
 15619  015E94  0EF8               	movlw	-8
 15620  015E96  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15621  015E9C  0EF9               	movlw	-7
 15622  015E9E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15623  015EA4  0EFA               	movlw	-6
 15624  015EA6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15625  015EAC  0EFB               	movlw	-5
 15626  015EAE  0060  F103  FFE3   	movff	btemp+11,plusw1
 15627  015EB4                     l6825:
 15628                           
 15629                           ;stkvar	_ff1 @ sp[(0)+-4]
 15630  015EB4  0EFF               	movlw	-1
 15631  015EB6  7EE3               	btg	plusw1,7,c
 15632                           
 15633                           ;stkvar	_ff2 @ sp[(0)+-8]
 15634  015EB8  0EFB               	movlw	-5
 15635  015EBA  7EE3               	btg	plusw1,7,c
 15636                           
 15637                           ;stkvar	_ff2 @ sp[(0)+-8]
 15638                           ;stkvar	_ff1 @ sp[(0)+-4]
 15639  015EBC  50E1               	movf	fsr1l,w,c
 15640  015EBE  0FFC               	addlw	-4
 15641  015EC0  6ED9               	movwf	fsr2l,c
 15642  015EC2  50E2               	movf	fsr1h,w,c
 15643  015EC4  6EDA               	movwf	fsr2h,c
 15644  015EC6  0EFF               	movlw	255
 15645  015EC8  22DA               	addwfc	fsr2h,f,c
 15646  015ECA  0EF8               	movlw	-8
 15647  015ECC  50E3               	movf	plusw1,w,c
 15648  015ECE  5CDE               	subwf	postinc2,w,c
 15649  015ED0  0EF9               	movlw	-7
 15650  015ED2  50E3               	movf	plusw1,w,c
 15651  015ED4  58DE               	subwfb	postinc2,w,c
 15652  015ED6  0EFA               	movlw	-6
 15653  015ED8  50E3               	movf	plusw1,w,c
 15654  015EDA  58DE               	subwfb	postinc2,w,c
 15655  015EDC  0EFB               	movlw	-5
 15656  015EDE  50E3               	movf	plusw1,w,c
 15657  015EE0  58DE               	subwfb	postinc2,w,c
 15658  015EE2  B0D8               	btfsc	status,0,c
 15659  015EE4  D002               	goto	l6833
 15660  015EE6  9035               	bcf	btemp& (0+255),0,c
 15661  015EE8  D001               	goto	l2244
 15662  015EEA                     l6833:
 15663  015EEA  8035               	bsf	btemp& (0+255),0,c
 15664  015EEC                     l2244:
 15665                           
 15666                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 15667  015EEC  0EF8               	movlw	248
 15668  015EEE  26E1               	addwf	fsr1l,f,c
 15669  015EF0  0EFF               	movlw	255
 15670  015EF2  22E2               	addwfc	fsr1h,f,c
 15671  015EF4  0012               	return		;funcret
 15672  015EF6                     __end_of___flge:
 15673                           	opt callstack 0
 15674                           
 15675 ;; *************** function ___fleq *****************
 15676 ;; Defined at:
 15677 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 15678 ;; Parameters:    Size  Location     Type
 15679 ;;  ff1             4  [STACK] unsigned char 
 15680 ;;  ff2             4  [STACK] unsigned char 
 15681 ;; Auto vars:     Size  Location     Type
 15682 ;;		None
 15683 ;; Return value:  Size  Location     Type
 15684 ;;		None               void
 15685 ;; Registers used:
 15686 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 15687 ;; Tracked objects:
 15688 ;;		On entry : 0/4
 15689 ;;		On exit  : 0/0
 15690 ;;		Unchanged: 0/0
 15691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15696 ;;Total ram usage:        0 bytes
 15697 ;; Hardware stack levels used:    1
 15698 ;; Hardware stack levels required when called:    6
 15699 ;; This function calls:
 15700 ;;		Nothing
 15701 ;; This function is called by:
 15702 ;;		_efgtoa
 15703 ;; This function uses a reentrant model
 15704 ;;
 15705                           
 15706                           	psect	text53
 15707  01695E                     __ptext53:
 15708                           	opt callstack 0
 15709  01695E                     ___fleq:
 15710                           	opt callstack 17
 15711                           
 15712                           ;stkvar	_ff1 @ sp[(0)+-4]
 15713                           
 15714                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15715                           ;incstack = 0
 15716  01695E  50E1               	movf	fsr1l,w,c
 15717  016960  0FFC               	addlw	-4
 15718  016962  6ED9               	movwf	fsr2l,c
 15719  016964  50E2               	movf	fsr1h,w,c
 15720  016966  6EDA               	movwf	fsr2h,c
 15721  016968  0EFF               	movlw	255
 15722  01696A  22DA               	addwfc	fsr2h,f,c
 15723  01696C  0E00               	movlw	0
 15724  01696E  14DE               	andwf	postinc2,w,c
 15725  016970  6E3D               	movwf	(btemp+8)^0,c
 15726  016972  0E00               	movlw	0
 15727  016974  14DE               	andwf	postinc2,w,c
 15728  016976  6E3E               	movwf	(btemp+9)^0,c
 15729  016978  0E80               	movlw	128
 15730  01697A  14DE               	andwf	postinc2,w,c
 15731  01697C  6E3F               	movwf	(btemp+10)^0,c
 15732  01697E  0E7F               	movlw	127
 15733  016980  14DE               	andwf	postinc2,w,c
 15734  016982  6E40               	movwf	(btemp+11)^0,c
 15735  016984  503D               	movf	(btemp+8)^0,w,c
 15736  016986  103E               	iorwf	(btemp+9)^0,w,c
 15737  016988  103F               	iorwf	(btemp+10)^0,w,c
 15738  01698A  1040               	iorwf	(btemp+11)^0,w,c
 15739  01698C  A4D8               	btfss	status,2,c
 15740  01698E  D008               	goto	l6799
 15741                           
 15742                           ;stkvar	_ff1 @ sp[(0)+-4]
 15743  016990  0EFC               	movlw	-4
 15744  016992  6AE3               	clrf	plusw1,c
 15745  016994  0EFD               	movlw	-3
 15746  016996  6AE3               	clrf	plusw1,c
 15747  016998  0EFE               	movlw	-2
 15748  01699A  6AE3               	clrf	plusw1,c
 15749  01699C  0EFF               	movlw	-1
 15750  01699E  6AE3               	clrf	plusw1,c
 15751  0169A0                     l6799:
 15752                           
 15753                           ;stkvar	_ff2 @ sp[(0)+-8]
 15754  0169A0  50E1               	movf	fsr1l,w,c
 15755  0169A2  0FF8               	addlw	-8
 15756  0169A4  6ED9               	movwf	fsr2l,c
 15757  0169A6  50E2               	movf	fsr1h,w,c
 15758  0169A8  6EDA               	movwf	fsr2h,c
 15759  0169AA  0EFF               	movlw	255
 15760  0169AC  22DA               	addwfc	fsr2h,f,c
 15761  0169AE  0E00               	movlw	0
 15762  0169B0  14DE               	andwf	postinc2,w,c
 15763  0169B2  6E3D               	movwf	(btemp+8)^0,c
 15764  0169B4  0E00               	movlw	0
 15765  0169B6  14DE               	andwf	postinc2,w,c
 15766  0169B8  6E3E               	movwf	(btemp+9)^0,c
 15767  0169BA  0E80               	movlw	128
 15768  0169BC  14DE               	andwf	postinc2,w,c
 15769  0169BE  6E3F               	movwf	(btemp+10)^0,c
 15770  0169C0  0E7F               	movlw	127
 15771  0169C2  14DE               	andwf	postinc2,w,c
 15772  0169C4  6E40               	movwf	(btemp+11)^0,c
 15773  0169C6  503D               	movf	(btemp+8)^0,w,c
 15774  0169C8  103E               	iorwf	(btemp+9)^0,w,c
 15775  0169CA  103F               	iorwf	(btemp+10)^0,w,c
 15776  0169CC  1040               	iorwf	(btemp+11)^0,w,c
 15777  0169CE  A4D8               	btfss	status,2,c
 15778  0169D0  D008               	goto	l6803
 15779                           
 15780                           ;stkvar	_ff2 @ sp[(0)+-8]
 15781  0169D2  0EF8               	movlw	-8
 15782  0169D4  6AE3               	clrf	plusw1,c
 15783  0169D6  0EF9               	movlw	-7
 15784  0169D8  6AE3               	clrf	plusw1,c
 15785  0169DA  0EFA               	movlw	-6
 15786  0169DC  6AE3               	clrf	plusw1,c
 15787  0169DE  0EFB               	movlw	-5
 15788  0169E0  6AE3               	clrf	plusw1,c
 15789  0169E2                     l6803:
 15790                           
 15791                           ;stkvar	_ff2 @ sp[(0)+-8]
 15792                           ;stkvar	_ff1 @ sp[(0)+-4]
 15793  0169E2  50E1               	movf	fsr1l,w,c
 15794  0169E4  0FFC               	addlw	-4
 15795  0169E6  6ED9               	movwf	fsr2l,c
 15796  0169E8  50E2               	movf	fsr1h,w,c
 15797  0169EA  6EDA               	movwf	fsr2h,c
 15798  0169EC  0EFF               	movlw	255
 15799  0169EE  22DA               	addwfc	fsr2h,f,c
 15800  0169F0  0EF8               	movlw	-8
 15801  0169F2  50E3               	movf	plusw1,w,c
 15802  0169F4  18DE               	xorwf	postinc2,w,c
 15803  0169F6  E10D               	bnz	u6000
 15804  0169F8  0EF9               	movlw	-7
 15805  0169FA  50E3               	movf	plusw1,w,c
 15806  0169FC  18DE               	xorwf	postinc2,w,c
 15807  0169FE  E109               	bnz	u6000
 15808  016A00  0EFA               	movlw	-6
 15809  016A02  50E3               	movf	plusw1,w,c
 15810  016A04  18DE               	xorwf	postinc2,w,c
 15811  016A06  E105               	bnz	u6000
 15812  016A08  0EFB               	movlw	-5
 15813  016A0A  50E3               	movf	plusw1,w,c
 15814  016A0C  18DE               	xorwf	postinc2,w,c
 15815  016A0E  B4D8               	btfsc	status,2,c
 15816  016A10  D002               	goto	l6807
 15817  016A12                     u6000:
 15818  016A12  9035               	bcf	btemp& (0+255),0,c
 15819  016A14  D001               	goto	l2233
 15820  016A16                     l6807:
 15821  016A16  8035               	bsf	btemp& (0+255),0,c
 15822  016A18                     l2233:
 15823                           
 15824                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 15825  016A18  0EF8               	movlw	248
 15826  016A1A  26E1               	addwf	fsr1l,f,c
 15827  016A1C  0EFF               	movlw	255
 15828  016A1E  22E2               	addwfc	fsr1h,f,c
 15829  016A20  0012               	return		;funcret
 15830  016A22                     __end_of___fleq:
 15831                           	opt callstack 0
 15832                           
 15833 ;; *************** function ___fldiv *****************
 15834 ;; Defined at:
 15835 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 15836 ;; Parameters:    Size  Location     Type
 15837 ;;  b               4  [STACK] unsigned char 
 15838 ;;  a               4  [STACK] unsigned char 
 15839 ;; Auto vars:     Size  Location     Type
 15840 ;;  grs             4  [STACK] unsigned long 
 15841 ;;  rem             4  [STACK] unsigned long 
 15842 ;;  new_exp         2  [STACK] short 
 15843 ;;  aexp            1  [STACK] unsigned char 
 15844 ;;  bexp            1  [STACK] unsigned char 
 15845 ;;  sign            1  [STACK] unsigned char 
 15846 ;; Return value:  Size  Location     Type
 15847 ;;                  4  [STACK] unsigned char 
 15848 ;; Registers used:
 15849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 15850 ;; Tracked objects:
 15851 ;;		On entry : 0/4
 15852 ;;		On exit  : 0/0
 15853 ;;		Unchanged: 0/0
 15854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15859 ;;Total ram usage:        0 bytes
 15860 ;; Hardware stack levels used:    1
 15861 ;; Hardware stack levels required when called:    6
 15862 ;; This function calls:
 15863 ;;		Nothing
 15864 ;; This function is called by:
 15865 ;;		_conv_raw_result
 15866 ;;		_efgtoa
 15867 ;; This function uses a reentrant model
 15868 ;;
 15869                           
 15870                           	psect	text54
 15871  012D68                     __ptext54:
 15872                           	opt callstack 0
 15873  012D68                     ___fldiv:
 15874                           	opt callstack 0
 15875                           
 15876                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15877  012D68  0E0D               	movlw	13
 15878  012D6A  26E1               	addwf	fsr1l,f,c
 15879  012D6C  0E00               	movlw	0
 15880  012D6E  22E2               	addwfc	fsr1h,f,c
 15881                           
 15882                           ;stkvar	_b @ sp[(-13)+-4]
 15883                           
 15884                           ;incstack = 0
 15885  012D70  0EF2               	movlw	242
 15886  012D72  24E1               	addwf	fsr1l,w,c
 15887  012D74  6ED9               	movwf	fsr2l,c
 15888  012D76  0EFF               	movlw	255
 15889  012D78  20E2               	addwfc	fsr1h,w,c
 15890  012D7A  6EDA               	movwf	fsr2h,c
 15891  012D7C  50DF               	movf	indf2,w,c
 15892  012D7E  6E40               	movwf	(btemp+11)^0,c
 15893  012D80  0E80               	movlw	128
 15894  012D82  1640               	andwf	(btemp+11)^0,f,c
 15895                           
 15896                           ;stkvar	_sign @ sp[(-13)+12]
 15897  012D84  0EFF               	movlw	-1
 15898  012D86  0060  F103  FFE3   	movff	btemp+11,plusw1
 15899                           
 15900                           ;stkvar	_b @ sp[(-13)+-4]
 15901  012D8C  0EF2               	movlw	242
 15902  012D8E  24E1               	addwf	fsr1l,w,c
 15903  012D90  6ED9               	movwf	fsr2l,c
 15904  012D92  0EFF               	movlw	255
 15905  012D94  20E2               	addwfc	fsr1h,w,c
 15906  012D96  6EDA               	movwf	fsr2h,c
 15907  012D98  50DF               	movf	indf2,w,c
 15908  012D9A  6E40               	movwf	(btemp+11)^0,c
 15909  012D9C  90D8               	bcf	status,0,c
 15910  012D9E  3440               	rlcf	(btemp+11)^0,w,c
 15911  012DA0  6E3F               	movwf	(btemp+10)^0,c
 15912                           
 15913                           ;stkvar	_bexp @ sp[(-13)+11]
 15914  012DA2  0EFE               	movlw	-2
 15915  012DA4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15916                           
 15917                           ;stkvar	_b @ sp[(-13)+-4]
 15918  012DAA  0EF1               	movlw	241
 15919  012DAC  24E1               	addwf	fsr1l,w,c
 15920  012DAE  6ED9               	movwf	fsr2l,c
 15921  012DB0  0EFF               	movlw	255
 15922  012DB2  20E2               	addwfc	fsr1h,w,c
 15923  012DB4  6EDA               	movwf	fsr2h,c
 15924  012DB6  AEDF               	btfss	indf2,7,c
 15925  012DB8  D002               	goto	l6401
 15926                           
 15927                           ;stkvar	_bexp @ sp[(-13)+11]
 15928  012DBA  0EFE               	movlw	-2
 15929  012DBC  80E3               	bsf	plusw1,0,c
 15930  012DBE                     l6401:
 15931                           
 15932                           ;stkvar	_bexp @ sp[(-13)+11]
 15933  012DBE  0EFE               	movlw	-2
 15934  012DC0  50E3               	movf	plusw1,w,c
 15935  012DC2  B4D8               	btfsc	status,2,c
 15936  012DC4  D027               	goto	l6411
 15937                           
 15938                           ;stkvar	_bexp @ sp[(-13)+11]
 15939  012DC6  0EFE               	movlw	-2
 15940  012DC8  28E3               	incf	plusw1,w,c
 15941  012DCA  A4D8               	btfss	status,2,c
 15942  012DCC  D018               	goto	l6407
 15943  012DCE  0E00               	movlw	0
 15944  012DD0  6E3D               	movwf	(btemp+8)^0,c
 15945  012DD2  0E00               	movlw	0
 15946  012DD4  6E3E               	movwf	(btemp+9)^0,c
 15947  012DD6  0E00               	movlw	0
 15948  012DD8  6E3F               	movwf	(btemp+10)^0,c
 15949  012DDA  0E00               	movlw	0
 15950  012DDC  6E40               	movwf	(btemp+11)^0,c
 15951                           
 15952                           ;stkvar	_b @ sp[(-13)+-4]
 15953  012DDE  0EEF               	movlw	-17
 15954  012DE0  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15955  012DE6  0EF0               	movlw	-16
 15956  012DE8  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15957  012DEE  0EF1               	movlw	-15
 15958  012DF0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15959  012DF6  0EF2               	movlw	-14
 15960  012DF8  0060  F103  FFE3   	movff	btemp+11,plusw1
 15961  012DFE                     l6407:
 15962                           
 15963                           ;stkvar	_b @ sp[(-13)+-4]
 15964  012DFE  0EF1               	movlw	-15
 15965  012E00  8EE3               	bsf	plusw1,7,c
 15966                           
 15967                           ;stkvar	_b @ sp[(-13)+-4]
 15968  012E02  0EF2               	movlw	242
 15969  012E04  24E1               	addwf	fsr1l,w,c
 15970  012E06  6ED9               	movwf	fsr2l,c
 15971  012E08  0EFF               	movlw	255
 15972  012E0A  20E2               	addwfc	fsr1h,w,c
 15973  012E0C  6EDA               	movwf	fsr2h,c
 15974  012E0E  0E00               	movlw	0
 15975  012E10  6EDF               	movwf	indf2,c
 15976  012E12  D018               	goto	l6413
 15977  012E14                     l6411:
 15978  012E14  0E00               	movlw	0
 15979  012E16  6E3D               	movwf	(btemp+8)^0,c
 15980  012E18  0E00               	movlw	0
 15981  012E1A  6E3E               	movwf	(btemp+9)^0,c
 15982  012E1C  0E00               	movlw	0
 15983  012E1E  6E3F               	movwf	(btemp+10)^0,c
 15984  012E20  0E00               	movlw	0
 15985  012E22  6E40               	movwf	(btemp+11)^0,c
 15986                           
 15987                           ;stkvar	_b @ sp[(-13)+-4]
 15988  012E24  0EEF               	movlw	-17
 15989  012E26  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15990  012E2C  0EF0               	movlw	-16
 15991  012E2E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15992  012E34  0EF1               	movlw	-15
 15993  012E36  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15994  012E3C  0EF2               	movlw	-14
 15995  012E3E  0060  F103  FFE3   	movff	btemp+11,plusw1
 15996  012E44                     l6413:
 15997                           
 15998                           ;stkvar	_a @ sp[(-13)+-8]
 15999  012E44  0EEE               	movlw	238
 16000  012E46  24E1               	addwf	fsr1l,w,c
 16001  012E48  6ED9               	movwf	fsr2l,c
 16002  012E4A  0EFF               	movlw	255
 16003  012E4C  20E2               	addwfc	fsr1h,w,c
 16004  012E4E  6EDA               	movwf	fsr2h,c
 16005  012E50  50DF               	movf	indf2,w,c
 16006  012E52  6E40               	movwf	(btemp+11)^0,c
 16007  012E54  0E80               	movlw	128
 16008  012E56  1640               	andwf	(btemp+11)^0,f,c
 16009                           
 16010                           ;stkvar	_sign @ sp[(-13)+12]
 16011  012E58  50E1               	movf	fsr1l,w,c
 16012  012E5A  0FFF               	addlw	-1
 16013  012E5C  6ED9               	movwf	fsr2l,c
 16014  012E5E  50E2               	movf	fsr1h,w,c
 16015  012E60  6EDA               	movwf	fsr2h,c
 16016  012E62  0EFF               	movlw	255
 16017  012E64  22DA               	addwfc	fsr2h,f,c
 16018  012E66  5040               	movf	(btemp+11)^0,w,c
 16019  012E68  1ADF               	xorwf	indf2,f,c
 16020                           
 16021                           ;stkvar	_a @ sp[(-13)+-8]
 16022  012E6A  0EEE               	movlw	238
 16023  012E6C  24E1               	addwf	fsr1l,w,c
 16024  012E6E  6ED9               	movwf	fsr2l,c
 16025  012E70  0EFF               	movlw	255
 16026  012E72  20E2               	addwfc	fsr1h,w,c
 16027  012E74  6EDA               	movwf	fsr2h,c
 16028  012E76  50DF               	movf	indf2,w,c
 16029  012E78  6E40               	movwf	(btemp+11)^0,c
 16030  012E7A  90D8               	bcf	status,0,c
 16031  012E7C  3440               	rlcf	(btemp+11)^0,w,c
 16032  012E7E  6E3F               	movwf	(btemp+10)^0,c
 16033                           
 16034                           ;stkvar	_aexp @ sp[(-13)+10]
 16035  012E80  0EFD               	movlw	-3
 16036  012E82  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16037                           
 16038                           ;stkvar	_a @ sp[(-13)+-8]
 16039  012E88  0EED               	movlw	237
 16040  012E8A  24E1               	addwf	fsr1l,w,c
 16041  012E8C  6ED9               	movwf	fsr2l,c
 16042  012E8E  0EFF               	movlw	255
 16043  012E90  20E2               	addwfc	fsr1h,w,c
 16044  012E92  6EDA               	movwf	fsr2h,c
 16045  012E94  AEDF               	btfss	indf2,7,c
 16046  012E96  D002               	goto	l6421
 16047                           
 16048                           ;stkvar	_aexp @ sp[(-13)+10]
 16049  012E98  0EFD               	movlw	-3
 16050  012E9A  80E3               	bsf	plusw1,0,c
 16051  012E9C                     l6421:
 16052                           
 16053                           ;stkvar	_aexp @ sp[(-13)+10]
 16054  012E9C  0EFD               	movlw	-3
 16055  012E9E  50E3               	movf	plusw1,w,c
 16056  012EA0  B4D8               	btfsc	status,2,c
 16057  012EA2  D027               	goto	l6431
 16058                           
 16059                           ;stkvar	_aexp @ sp[(-13)+10]
 16060  012EA4  0EFD               	movlw	-3
 16061  012EA6  28E3               	incf	plusw1,w,c
 16062  012EA8  A4D8               	btfss	status,2,c
 16063  012EAA  D018               	goto	l6427
 16064  012EAC  0E00               	movlw	0
 16065  012EAE  6E3D               	movwf	(btemp+8)^0,c
 16066  012EB0  0E00               	movlw	0
 16067  012EB2  6E3E               	movwf	(btemp+9)^0,c
 16068  012EB4  0E00               	movlw	0
 16069  012EB6  6E3F               	movwf	(btemp+10)^0,c
 16070  012EB8  0E00               	movlw	0
 16071  012EBA  6E40               	movwf	(btemp+11)^0,c
 16072                           
 16073                           ;stkvar	_a @ sp[(-13)+-8]
 16074  012EBC  0EEB               	movlw	-21
 16075  012EBE  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 16076  012EC4  0EEC               	movlw	-20
 16077  012EC6  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 16078  012ECC  0EED               	movlw	-19
 16079  012ECE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16080  012ED4  0EEE               	movlw	-18
 16081  012ED6  0060  F103  FFE3   	movff	btemp+11,plusw1
 16082  012EDC                     l6427:
 16083                           
 16084                           ;stkvar	_a @ sp[(-13)+-8]
 16085  012EDC  0EED               	movlw	-19
 16086  012EDE  8EE3               	bsf	plusw1,7,c
 16087                           
 16088                           ;stkvar	_a @ sp[(-13)+-8]
 16089  012EE0  0EEE               	movlw	238
 16090  012EE2  24E1               	addwf	fsr1l,w,c
 16091  012EE4  6ED9               	movwf	fsr2l,c
 16092  012EE6  0EFF               	movlw	255
 16093  012EE8  20E2               	addwfc	fsr1h,w,c
 16094  012EEA  6EDA               	movwf	fsr2h,c
 16095  012EEC  0E00               	movlw	0
 16096  012EEE  6EDF               	movwf	indf2,c
 16097  012EF0  D018               	goto	l6433
 16098  012EF2                     l6431:
 16099  012EF2  0E00               	movlw	0
 16100  012EF4  6E3D               	movwf	(btemp+8)^0,c
 16101  012EF6  0E00               	movlw	0
 16102  012EF8  6E3E               	movwf	(btemp+9)^0,c
 16103  012EFA  0E00               	movlw	0
 16104  012EFC  6E3F               	movwf	(btemp+10)^0,c
 16105  012EFE  0E00               	movlw	0
 16106  012F00  6E40               	movwf	(btemp+11)^0,c
 16107                           
 16108                           ;stkvar	_a @ sp[(-13)+-8]
 16109  012F02  0EEB               	movlw	-21
 16110  012F04  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 16111  012F0A  0EEC               	movlw	-20
 16112  012F0C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 16113  012F12  0EED               	movlw	-19
 16114  012F14  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16115  012F1A  0EEE               	movlw	-18
 16116  012F1C  0060  F103  FFE3   	movff	btemp+11,plusw1
 16117  012F22                     l6433:
 16118                           
 16119                           ;stkvar	_a @ sp[(-13)+-8]
 16120  012F22  0EEB               	movlw	-21
 16121  012F24  50E3               	movf	plusw1,w,c
 16122  012F26  E139               	bnz	l6445
 16123  012F28  0EEC               	movlw	-20
 16124  012F2A  50E3               	movf	plusw1,w,c
 16125  012F2C  E136               	bnz	l6445
 16126  012F2E  0EED               	movlw	-19
 16127  012F30  50E3               	movf	plusw1,w,c
 16128  012F32  E133               	bnz	l6445
 16129  012F34  0EEE               	movlw	-18
 16130  012F36  50E3               	movf	plusw1,w,c
 16131  012F38  A4D8               	btfss	status,2,c
 16132  012F3A  D02F               	goto	l6445
 16133                           
 16134                           ;stkvar	_b @ sp[(-13)+-4]
 16135  012F3C  0EEF               	movlw	-17
 16136  012F3E  6AE3               	clrf	plusw1,c
 16137  012F40  0EF0               	movlw	-16
 16138  012F42  6AE3               	clrf	plusw1,c
 16139  012F44  0EF1               	movlw	-15
 16140  012F46  6AE3               	clrf	plusw1,c
 16141  012F48  0EF2               	movlw	-14
 16142  012F4A  6AE3               	clrf	plusw1,c
 16143                           
 16144                           ;stkvar	_b @ sp[(-13)+-4]
 16145  012F4C  0EF1               	movlw	241
 16146  012F4E  24E1               	addwf	fsr1l,w,c
 16147  012F50  6ED9               	movwf	fsr2l,c
 16148  012F52  0EFF               	movlw	255
 16149  012F54  20E2               	addwfc	fsr1h,w,c
 16150  012F56  6EDA               	movwf	fsr2h,c
 16151  012F58  0E80               	movlw	128
 16152  012F5A  12DE               	iorwf	postinc2,f,c
 16153  012F5C  0E7F               	movlw	127
 16154  012F5E  12DD               	iorwf	postdec2,f,c
 16155  012F60                     l6439:
 16156                           
 16157                           ;stkvar	_sign @ sp[(-13)+12]
 16158  012F60  0EFF               	movlw	-1
 16159  012F62  006F FF8C  F040    	movff	plusw1,btemp+11
 16160                           
 16161                           ;stkvar	_b @ sp[(-13)+-4]
 16162  012F68  0EF2               	movlw	242
 16163  012F6A  24E1               	addwf	fsr1l,w,c
 16164  012F6C  6ED9               	movwf	fsr2l,c
 16165  012F6E  0EFF               	movlw	255
 16166  012F70  20E2               	addwfc	fsr1h,w,c
 16167  012F72  6EDA               	movwf	fsr2h,c
 16168  012F74  5040               	movf	(btemp+11)^0,w,c
 16169  012F76  12DF               	iorwf	indf2,f,c
 16170                           
 16171                           ;stkvar	_b @ sp[(-13)+-4]
 16172  012F78  0EEF               	movlw	-17
 16173  012F7A  006F FF8C  F035    	movff	plusw1,btemp
 16174  012F80  0EF0               	movlw	-16
 16175  012F82  006F FF8C  F036    	movff	plusw1,btemp+1
 16176  012F88  0EF1               	movlw	-15
 16177  012F8A  006F FF8C  F037    	movff	plusw1,btemp+2
 16178  012F90  0EF2               	movlw	-14
 16179  012F92  006F FF8C  F038    	movff	plusw1,btemp+3
 16180  012F98  D19F               	goto	l2556
 16181  012F9A                     l6445:
 16182                           
 16183                           ;stkvar	_bexp @ sp[(-13)+11]
 16184  012F9A  0EFE               	movlw	-2
 16185  012F9C  50E3               	movf	plusw1,w,c
 16186  012F9E  A4D8               	btfss	status,2,c
 16187  012FA0  D009               	goto	l6453
 16188  012FA2  0E00               	movlw	0
 16189  012FA4  6E35               	movwf	btemp^0,c
 16190  012FA6  0E00               	movlw	0
 16191  012FA8  6E36               	movwf	(btemp+1)^0,c
 16192  012FAA  0E00               	movlw	0
 16193  012FAC  6E37               	movwf	(btemp+2)^0,c
 16194  012FAE  0E00               	movlw	0
 16195  012FB0  6E38               	movwf	(btemp+3)^0,c
 16196  012FB2  D192               	goto	l2556
 16197  012FB4                     l6453:
 16198                           
 16199                           ;stkvar	_bexp @ sp[(-13)+11]
 16200  012FB4  0EFE               	movlw	-2
 16201  012FB6  50E3               	movf	plusw1,w,c
 16202  012FB8  6E3F               	movwf	(btemp+10)^0,c
 16203  012FBA  6A40               	clrf	(btemp+11)^0,c
 16204                           
 16205                           ;stkvar	_aexp @ sp[(-13)+10]
 16206  012FBC  0EFD               	movlw	-3
 16207  012FBE  50E3               	movf	plusw1,w,c
 16208  012FC0  5E3F               	subwf	(btemp+10)^0,f,c
 16209  012FC2  0E00               	movlw	0
 16210  012FC4  5A40               	subwfb	(btemp+11)^0,f,c
 16211  012FC6  0E7F               	movlw	127
 16212  012FC8  263F               	addwf	(btemp+10)^0,f,c
 16213  012FCA  0E00               	movlw	0
 16214  012FCC  2240               	addwfc	(btemp+11)^0,f,c
 16215                           
 16216                           ;stkvar	_new_exp @ sp[(-13)+8]
 16217  012FCE  0EFB               	movlw	-5
 16218  012FD0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16219  012FD6  0EFC               	movlw	-4
 16220  012FD8  0060  F103  FFE3   	movff	btemp+11,plusw1
 16221                           
 16222                           ;stkvar	_b @ sp[(-13)+-4]
 16223  012FDE  0EEF               	movlw	-17
 16224  012FE0  006F FF8C  F03D    	movff	plusw1,btemp+8
 16225  012FE6  0EF0               	movlw	-16
 16226  012FE8  006F FF8C  F03E    	movff	plusw1,btemp+9
 16227  012FEE  0EF1               	movlw	-15
 16228  012FF0  006F FF8C  F03F    	movff	plusw1,btemp+10
 16229  012FF6  0EF2               	movlw	-14
 16230  012FF8  006F FF8C  F040    	movff	plusw1,btemp+11
 16231                           
 16232                           ;stkvar	_rem @ sp[(-13)+4]
 16233  012FFE  0EF7               	movlw	-9
 16234  013000  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 16235  013006  0EF8               	movlw	-8
 16236  013008  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 16237  01300E  0EF9               	movlw	-7
 16238  013010  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16239  013016  0EFA               	movlw	-6
 16240  013018  0060  F103  FFE3   	movff	btemp+11,plusw1
 16241                           
 16242                           ;stkvar	_b @ sp[(-13)+-4]
 16243  01301E  0EEF               	movlw	-17
 16244  013020  6AE3               	clrf	plusw1,c
 16245  013022  0EF0               	movlw	-16
 16246  013024  6AE3               	clrf	plusw1,c
 16247  013026  0EF1               	movlw	-15
 16248  013028  6AE3               	clrf	plusw1,c
 16249  01302A  0EF2               	movlw	-14
 16250  01302C  6AE3               	clrf	plusw1,c
 16251                           
 16252                           ;stkvar	_grs @ sp[(-13)+0]
 16253  01302E  0EF3               	movlw	-13
 16254  013030  6AE3               	clrf	plusw1,c
 16255  013032  0EF4               	movlw	-12
 16256  013034  6AE3               	clrf	plusw1,c
 16257  013036  0EF5               	movlw	-11
 16258  013038  6AE3               	clrf	plusw1,c
 16259  01303A  0EF6               	movlw	-10
 16260  01303C  6AE3               	clrf	plusw1,c
 16261                           
 16262                           ;stkvar	_aexp @ sp[(-13)+10]
 16263  01303E  0EFD               	movlw	-3
 16264  013040  6AE3               	clrf	plusw1,c
 16265  013042  D050               	goto	l6481
 16266  013044                     l6463:
 16267                           
 16268                           ;stkvar	_aexp @ sp[(-13)+10]
 16269  013044  0EFD               	movlw	-3
 16270  013046  50E3               	movf	plusw1,w,c
 16271  013048  B4D8               	btfsc	status,2,c
 16272  01304A  D020               	goto	l6473
 16273                           
 16274                           ;stkvar	_rem @ sp[(-13)+4]
 16275  01304C  90D8               	bcf	status,0,c
 16276  01304E  0EF7               	movlw	-9
 16277  013050  36E3               	rlcf	plusw1,f,c
 16278  013052  0EF8               	movlw	-8
 16279  013054  36E3               	rlcf	plusw1,f,c
 16280  013056  0EF9               	movlw	-7
 16281  013058  36E3               	rlcf	plusw1,f,c
 16282  01305A  0EFA               	movlw	-6
 16283  01305C  36E3               	rlcf	plusw1,f,c
 16284                           
 16285                           ;stkvar	_b @ sp[(-13)+-4]
 16286  01305E  90D8               	bcf	status,0,c
 16287  013060  0EEF               	movlw	-17
 16288  013062  36E3               	rlcf	plusw1,f,c
 16289  013064  0EF0               	movlw	-16
 16290  013066  36E3               	rlcf	plusw1,f,c
 16291  013068  0EF1               	movlw	-15
 16292  01306A  36E3               	rlcf	plusw1,f,c
 16293  01306C  0EF2               	movlw	-14
 16294  01306E  36E3               	rlcf	plusw1,f,c
 16295                           
 16296                           ;stkvar	_grs @ sp[(-13)+0]
 16297  013070  0EF6               	movlw	-10
 16298  013072  AEE3               	btfss	plusw1,7,c
 16299  013074  D002               	goto	l6471
 16300                           
 16301                           ;stkvar	_b @ sp[(-13)+-4]
 16302  013076  0EEF               	movlw	-17
 16303  013078  80E3               	bsf	plusw1,0,c
 16304  01307A                     l6471:
 16305                           
 16306                           ;stkvar	_grs @ sp[(-13)+0]
 16307  01307A  90D8               	bcf	status,0,c
 16308  01307C  0EF3               	movlw	-13
 16309  01307E  36E3               	rlcf	plusw1,f,c
 16310  013080  0EF4               	movlw	-12
 16311  013082  36E3               	rlcf	plusw1,f,c
 16312  013084  0EF5               	movlw	-11
 16313  013086  36E3               	rlcf	plusw1,f,c
 16314  013088  0EF6               	movlw	-10
 16315  01308A  36E3               	rlcf	plusw1,f,c
 16316  01308C                     l6473:
 16317                           
 16318                           ;stkvar	_a @ sp[(-13)+-8]
 16319                           ;stkvar	_rem @ sp[(-13)+4]
 16320  01308C  50E1               	movf	fsr1l,w,c
 16321  01308E  0FF7               	addlw	-9
 16322  013090  6ED9               	movwf	fsr2l,c
 16323  013092  50E2               	movf	fsr1h,w,c
 16324  013094  6EDA               	movwf	fsr2h,c
 16325  013096  0EFF               	movlw	255
 16326  013098  22DA               	addwfc	fsr2h,f,c
 16327  01309A  0EEB               	movlw	-21
 16328  01309C  50E3               	movf	plusw1,w,c
 16329  01309E  5CDE               	subwf	postinc2,w,c
 16330  0130A0  0EEC               	movlw	-20
 16331  0130A2  50E3               	movf	plusw1,w,c
 16332  0130A4  58DE               	subwfb	postinc2,w,c
 16333  0130A6  0EED               	movlw	-19
 16334  0130A8  50E3               	movf	plusw1,w,c
 16335  0130AA  58DE               	subwfb	postinc2,w,c
 16336  0130AC  0EEE               	movlw	-18
 16337  0130AE  50E3               	movf	plusw1,w,c
 16338  0130B0  58DE               	subwfb	postinc2,w,c
 16339  0130B2  A0D8               	btfss	status,0,c
 16340  0130B4  D015               	goto	l6479
 16341                           
 16342                           ;stkvar	_grs @ sp[(-13)+0]
 16343  0130B6  0EF6               	movlw	-10
 16344  0130B8  8CE3               	bsf	plusw1,6,c
 16345                           
 16346                           ;stkvar	_a @ sp[(-13)+-8]
 16347                           ;stkvar	_rem @ sp[(-13)+4]
 16348  0130BA  50E1               	movf	fsr1l,w,c
 16349  0130BC  0FF7               	addlw	-9
 16350  0130BE  6ED9               	movwf	fsr2l,c
 16351  0130C0  50E2               	movf	fsr1h,w,c
 16352  0130C2  6EDA               	movwf	fsr2h,c
 16353  0130C4  0EFF               	movlw	255
 16354  0130C6  22DA               	addwfc	fsr2h,f,c
 16355  0130C8  0EEB               	movlw	-21
 16356  0130CA  50E3               	movf	plusw1,w,c
 16357  0130CC  5EDE               	subwf	postinc2,f,c
 16358  0130CE  0EEC               	movlw	-20
 16359  0130D0  50E3               	movf	plusw1,w,c
 16360  0130D2  5ADE               	subwfb	postinc2,f,c
 16361  0130D4  0EED               	movlw	-19
 16362  0130D6  50E3               	movf	plusw1,w,c
 16363  0130D8  5ADE               	subwfb	postinc2,f,c
 16364  0130DA  0EEE               	movlw	-18
 16365  0130DC  50E3               	movf	plusw1,w,c
 16366  0130DE  5ADE               	subwfb	postinc2,f,c
 16367  0130E0                     l6479:
 16368                           
 16369                           ;stkvar	_aexp @ sp[(-13)+10]
 16370  0130E0  0EFD               	movlw	-3
 16371  0130E2  2AE3               	incf	plusw1,f,c
 16372  0130E4                     l6481:
 16373                           
 16374                           ;stkvar	_aexp @ sp[(-13)+10]
 16375  0130E4  0EFD               	movlw	-3
 16376  0130E6  006F FF8C  F035    	movff	plusw1,btemp
 16377  0130EC  0E19               	movlw	25
 16378  0130EE  6435               	cpfsgt	btemp^0,c
 16379  0130F0  D7A9               	goto	l6463
 16380                           
 16381                           ;stkvar	_rem @ sp[(-13)+4]
 16382  0130F2  0EF7               	movlw	-9
 16383  0130F4  50E3               	movf	plusw1,w,c
 16384  0130F6  E10A               	bnz	u5500
 16385  0130F8  0EF8               	movlw	-8
 16386  0130FA  50E3               	movf	plusw1,w,c
 16387  0130FC  E107               	bnz	u5500
 16388  0130FE  0EF9               	movlw	-7
 16389  013100  50E3               	movf	plusw1,w,c
 16390  013102  E104               	bnz	u5500
 16391  013104  0EFA               	movlw	-6
 16392  013106  50E3               	movf	plusw1,w,c
 16393  013108  B4D8               	btfsc	status,2,c
 16394  01310A  D024               	goto	l6497
 16395  01310C                     u5500:
 16396                           
 16397                           ;stkvar	_grs @ sp[(-13)+0]
 16398  01310C  0EF3               	movlw	-13
 16399  01310E  80E3               	bsf	plusw1,0,c
 16400  013110  D021               	goto	l6497
 16401  013112                     l6487:
 16402                           
 16403                           ;stkvar	_b @ sp[(-13)+-4]
 16404  013112  90D8               	bcf	status,0,c
 16405  013114  0EEF               	movlw	-17
 16406  013116  36E3               	rlcf	plusw1,f,c
 16407  013118  0EF0               	movlw	-16
 16408  01311A  36E3               	rlcf	plusw1,f,c
 16409  01311C  0EF1               	movlw	-15
 16410  01311E  36E3               	rlcf	plusw1,f,c
 16411  013120  0EF2               	movlw	-14
 16412  013122  36E3               	rlcf	plusw1,f,c
 16413                           
 16414                           ;stkvar	_grs @ sp[(-13)+0]
 16415  013124  0EF6               	movlw	-10
 16416  013126  AEE3               	btfss	plusw1,7,c
 16417  013128  D002               	goto	l6493
 16418                           
 16419                           ;stkvar	_b @ sp[(-13)+-4]
 16420  01312A  0EEF               	movlw	-17
 16421  01312C  80E3               	bsf	plusw1,0,c
 16422  01312E                     l6493:
 16423                           
 16424                           ;stkvar	_grs @ sp[(-13)+0]
 16425  01312E  90D8               	bcf	status,0,c
 16426  013130  0EF3               	movlw	-13
 16427  013132  36E3               	rlcf	plusw1,f,c
 16428  013134  0EF4               	movlw	-12
 16429  013136  36E3               	rlcf	plusw1,f,c
 16430  013138  0EF5               	movlw	-11
 16431  01313A  36E3               	rlcf	plusw1,f,c
 16432  01313C  0EF6               	movlw	-10
 16433  01313E  36E3               	rlcf	plusw1,f,c
 16434                           
 16435                           ;stkvar	_new_exp @ sp[(-13)+8]
 16436  013140  50E1               	movf	fsr1l,w,c
 16437  013142  0FFB               	addlw	-5
 16438  013144  6ED9               	movwf	fsr2l,c
 16439  013146  50E2               	movf	fsr1h,w,c
 16440  013148  6EDA               	movwf	fsr2h,c
 16441  01314A  0EFF               	movlw	255
 16442  01314C  22DA               	addwfc	fsr2h,f,c
 16443  01314E  06DE               	decf	postinc2,f,c
 16444  013150  0E00               	movlw	0
 16445  013152  5ADD               	subwfb	postdec2,f,c
 16446  013154                     l6497:
 16447                           
 16448                           ;stkvar	_b @ sp[(-13)+-4]
 16449  013154  0EF1               	movlw	-15
 16450  013156  AEE3               	btfss	plusw1,7,c
 16451  013158  D7DC               	goto	l6487
 16452                           
 16453                           ;stkvar	_aexp @ sp[(-13)+10]
 16454  01315A  0EFD               	movlw	-3
 16455  01315C  6AE3               	clrf	plusw1,c
 16456                           
 16457                           ;stkvar	_grs @ sp[(-13)+0]
 16458  01315E  0EF6               	movlw	-10
 16459  013160  AEE3               	btfss	plusw1,7,c
 16460  013162  D020               	goto	l6511
 16461                           
 16462                           ;stkvar	_grs @ sp[(-13)+0]
 16463  013164  50E1               	movf	fsr1l,w,c
 16464  013166  0FF3               	addlw	-13
 16465  013168  6ED9               	movwf	fsr2l,c
 16466  01316A  50E2               	movf	fsr1h,w,c
 16467  01316C  6EDA               	movwf	fsr2h,c
 16468  01316E  0EFF               	movlw	255
 16469  013170  22DA               	addwfc	fsr2h,f,c
 16470  013172  0EFF               	movlw	255
 16471  013174  14DE               	andwf	postinc2,w,c
 16472  013176  6E3D               	movwf	(btemp+8)^0,c
 16473  013178  0EFF               	movlw	255
 16474  01317A  14DE               	andwf	postinc2,w,c
 16475  01317C  6E3E               	movwf	(btemp+9)^0,c
 16476  01317E  0EFF               	movlw	255
 16477  013180  14DE               	andwf	postinc2,w,c
 16478  013182  6E3F               	movwf	(btemp+10)^0,c
 16479  013184  0E7F               	movlw	127
 16480  013186  14DE               	andwf	postinc2,w,c
 16481  013188  6E40               	movwf	(btemp+11)^0,c
 16482  01318A  503D               	movf	(btemp+8)^0,w,c
 16483  01318C  103E               	iorwf	(btemp+9)^0,w,c
 16484  01318E  103F               	iorwf	(btemp+10)^0,w,c
 16485  013190  1040               	iorwf	(btemp+11)^0,w,c
 16486  013192  B4D8               	btfsc	status,2,c
 16487  013194  D004               	goto	l6507
 16488  013196                     u5540:
 16489                           
 16490                           ;stkvar	_aexp @ sp[(-13)+10]
 16491  013196  0EFD               	movlw	-3
 16492  013198  6AE3               	clrf	plusw1,c
 16493  01319A  2AE3               	incf	plusw1,f,c
 16494  01319C  D003               	goto	l6511
 16495  01319E                     l6507:
 16496                           
 16497                           ;stkvar	_b @ sp[(-13)+-4]
 16498  01319E  0EEF               	movlw	-17
 16499  0131A0  B0E3               	btfsc	plusw1,0,c
 16500  0131A2  D7F9               	goto	u5540
 16501  0131A4                     l6511:
 16502                           
 16503                           ;stkvar	_aexp @ sp[(-13)+10]
 16504  0131A4  0EFD               	movlw	-3
 16505  0131A6  50E3               	movf	plusw1,w,c
 16506  0131A8  B4D8               	btfsc	status,2,c
 16507  0131AA  D036               	goto	l6521
 16508                           
 16509                           ;stkvar	_b @ sp[(-13)+-4]
 16510  0131AC  50E1               	movf	fsr1l,w,c
 16511  0131AE  0FEF               	addlw	-17
 16512  0131B0  6ED9               	movwf	fsr2l,c
 16513  0131B2  50E2               	movf	fsr1h,w,c
 16514  0131B4  6EDA               	movwf	fsr2h,c
 16515  0131B6  0EFF               	movlw	255
 16516  0131B8  22DA               	addwfc	fsr2h,f,c
 16517  0131BA  2ADE               	incf	postinc2,f,c
 16518  0131BC  0E00               	movlw	0
 16519  0131BE  22DE               	addwfc	postinc2,f,c
 16520  0131C0  22DE               	addwfc	postinc2,f,c
 16521  0131C2  22DE               	addwfc	postinc2,f,c
 16522                           
 16523                           ;stkvar	_b @ sp[(-13)+-4]
 16524  0131C4  0EF2               	movlw	-14
 16525  0131C6  A0E3               	btfss	plusw1,0,c
 16526  0131C8  D027               	goto	l6521
 16527  0131CA  0E01               	movlw	1
 16528  0131CC  6E40               	movwf	(btemp+11)^0,c
 16529                           
 16530                           ;stkvar	_b @ sp[(-13)+-4]
 16531  0131CE  50E1               	movf	fsr1l,w,c
 16532  0131D0  0FEF               	addlw	-17
 16533  0131D2  6ED9               	movwf	fsr2l,c
 16534  0131D4  50E2               	movf	fsr1h,w,c
 16535  0131D6  6EDA               	movwf	fsr2h,c
 16536  0131D8  0EFF               	movlw	255
 16537  0131DA  22DA               	addwfc	fsr2h,f,c
 16538  0131DC  2840               	incf	(btemp+11)^0,w,c
 16539  0131DE  52DE               	movf	postinc2,f,c
 16540  0131E0  D008               	goto	u5580
 16541  0131E2                     u5585:
 16542  0131E2  52DE               	movf	postinc2,f,c
 16543  0131E4  90D8               	bcf	status,0,c
 16544  0131E6  BEDC               	btfsc	preinc2,7,c
 16545  0131E8  80D8               	bsf	status,0,c
 16546  0131EA  32DD               	rrcf	postdec2,f,c
 16547  0131EC  32DD               	rrcf	postdec2,f,c
 16548  0131EE  32DD               	rrcf	postdec2,f,c
 16549  0131F0  32DE               	rrcf	postinc2,f,c
 16550  0131F2                     u5580:
 16551  0131F2  2EE8               	decfsz	wreg,f,c
 16552  0131F4  D7F6               	goto	u5585
 16553                           
 16554                           ;stkvar	_new_exp @ sp[(-13)+8]
 16555  0131F6  0EFB               	movlw	-5
 16556  0131F8  50E3               	movf	plusw1,w,c
 16557  0131FA  0F01               	addlw	1
 16558  0131FC  6E35               	movwf	btemp^0,c
 16559  0131FE  0EFB               	movlw	-5
 16560  013200  0060  F0D7  FFE3   	movff	btemp,plusw1
 16561  013206  6A35               	clrf	btemp^0,c
 16562  013208  0EFC               	movlw	-4
 16563  01320A  50E3               	movf	plusw1,w,c
 16564  01320C  2035               	addwfc	btemp^0,w,c
 16565  01320E  6E35               	movwf	btemp^0,c
 16566  013210  0EFC               	movlw	-4
 16567  013212  0060  F0D7  FFE3   	movff	btemp,plusw1
 16568  013218                     l6521:
 16569                           
 16570                           ;stkvar	_new_exp @ sp[(-13)+8]
 16571  013218  0EFC               	movlw	-4
 16572  01321A  BEE3               	btfsc	plusw1,7,c
 16573  01321C  D01B               	goto	l6527
 16574  01321E  0EFC               	movlw	-4
 16575  013220  50E3               	movf	plusw1,w,c
 16576  013222  E104               	bnz	u5590
 16577  013224  0EFB               	movlw	-5
 16578  013226  28E3               	incf	plusw1,w,c
 16579  013228  A0D8               	btfss	status,0,c
 16580  01322A  D014               	goto	l6527
 16581  01322C                     u5590:
 16582  01322C  0EFF               	movlw	255
 16583  01322E  6E3F               	movwf	(btemp+10)^0,c
 16584  013230  0E00               	movlw	0
 16585  013232  6E40               	movwf	(btemp+11)^0,c
 16586                           
 16587                           ;stkvar	_new_exp @ sp[(-13)+8]
 16588  013234  0EFB               	movlw	-5
 16589  013236  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16590  01323C  0EFC               	movlw	-4
 16591  01323E  0060  F103  FFE3   	movff	btemp+11,plusw1
 16592                           
 16593                           ;stkvar	_b @ sp[(-13)+-4]
 16594  013244  0EEF               	movlw	-17
 16595  013246  6AE3               	clrf	plusw1,c
 16596  013248  0EF0               	movlw	-16
 16597  01324A  6AE3               	clrf	plusw1,c
 16598  01324C  0EF1               	movlw	-15
 16599  01324E  6AE3               	clrf	plusw1,c
 16600  013250  0EF2               	movlw	-14
 16601  013252  6AE3               	clrf	plusw1,c
 16602  013254                     l6527:
 16603                           
 16604                           ;stkvar	_new_exp @ sp[(-13)+8]
 16605  013254  0EFC               	movlw	-4
 16606  013256  BEE3               	btfsc	plusw1,7,c
 16607  013258  D007               	goto	u5600
 16608  01325A  0EFC               	movlw	-4
 16609  01325C  50E3               	movf	plusw1,w,c
 16610  01325E  E112               	bnz	l6533
 16611  013260  0EFB               	movlw	-5
 16612  013262  04E3               	decf	plusw1,w,c
 16613  013264  B0D8               	btfsc	status,0,c
 16614  013266  D00E               	goto	l6533
 16615  013268                     u5600:
 16616                           
 16617                           ;stkvar	_new_exp @ sp[(-13)+8]
 16618  013268  0EFB               	movlw	-5
 16619  01326A  6AE3               	clrf	plusw1,c
 16620  01326C  0EFC               	movlw	-4
 16621  01326E  6AE3               	clrf	plusw1,c
 16622                           
 16623                           ;stkvar	_b @ sp[(-13)+-4]
 16624  013270  0EEF               	movlw	-17
 16625  013272  6AE3               	clrf	plusw1,c
 16626  013274  0EF0               	movlw	-16
 16627  013276  6AE3               	clrf	plusw1,c
 16628  013278  0EF1               	movlw	-15
 16629  01327A  6AE3               	clrf	plusw1,c
 16630  01327C  0EF2               	movlw	-14
 16631  01327E  6AE3               	clrf	plusw1,c
 16632                           
 16633                           ;stkvar	_sign @ sp[(-13)+12]
 16634  013280  0EFF               	movlw	-1
 16635  013282  6AE3               	clrf	plusw1,c
 16636  013284                     l6533:
 16637                           
 16638                           ;stkvar	_new_exp @ sp[(-13)+8]
 16639                           ;stkvar	_bexp @ sp[(-13)+11]
 16640  013284  0EFB               	movlw	-5
 16641  013286  006F FF8C  F035    	movff	plusw1,btemp
 16642  01328C  0EFE               	movlw	-2
 16643  01328E  0060  F0D7  FFE3   	movff	btemp,plusw1
 16644                           
 16645                           ;stkvar	_bexp @ sp[(-13)+11]
 16646  013294  0EFE               	movlw	-2
 16647  013296  A0E3               	btfss	plusw1,0,c
 16648  013298  D009               	goto	l6539
 16649                           
 16650                           ;stkvar	_b @ sp[(-13)+-4]
 16651  01329A  0EF1               	movlw	241
 16652  01329C  24E1               	addwf	fsr1l,w,c
 16653  01329E  6ED9               	movwf	fsr2l,c
 16654  0132A0  0EFF               	movlw	255
 16655  0132A2  20E2               	addwfc	fsr1h,w,c
 16656  0132A4  6EDA               	movwf	fsr2h,c
 16657  0132A6  0E00               	movlw	0
 16658  0132A8  8EDB               	bsf	plusw2,7,c
 16659  0132AA  D008               	goto	l6541
 16660  0132AC                     l6539:
 16661                           
 16662                           ;stkvar	_b @ sp[(-13)+-4]
 16663  0132AC  0EF1               	movlw	241
 16664  0132AE  24E1               	addwf	fsr1l,w,c
 16665  0132B0  6ED9               	movwf	fsr2l,c
 16666  0132B2  0EFF               	movlw	255
 16667  0132B4  20E2               	addwfc	fsr1h,w,c
 16668  0132B6  6EDA               	movwf	fsr2h,c
 16669  0132B8  0E7F               	movlw	127
 16670  0132BA  16DF               	andwf	indf2,f,c
 16671  0132BC                     l6541:
 16672                           
 16673                           ;stkvar	_b @ sp[(-13)+-4]
 16674  0132BC  0EF2               	movlw	242
 16675  0132BE  24E1               	addwf	fsr1l,w,c
 16676  0132C0  6ED9               	movwf	fsr2l,c
 16677  0132C2  0EFF               	movlw	255
 16678  0132C4  20E2               	addwfc	fsr1h,w,c
 16679  0132C6  6EDA               	movwf	fsr2h,c
 16680                           
 16681                           ;stkvar	_bexp @ sp[(-13)+11]
 16682  0132C8  0EFE               	movlw	-2
 16683  0132CA  006F FF8C  F040    	movff	plusw1,btemp+11
 16684  0132D0  90D8               	bcf	status,0,c
 16685  0132D2  3040               	rrcf	(btemp+11)^0,w,c
 16686  0132D4  6EDF               	movwf	indf2,c
 16687  0132D6  D644               	goto	l6439
 16688  0132D8                     l2556:
 16689                           
 16690                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 16691  0132D8  0EEB               	movlw	235
 16692  0132DA  26E1               	addwf	fsr1l,f,c
 16693  0132DC  0EFF               	movlw	255
 16694  0132DE  22E2               	addwfc	fsr1h,f,c
 16695  0132E0  0012               	return		;funcret
 16696  0132E2                     __end_of___fldiv:
 16697                           	opt callstack 0
 16698                           
 16699 ;; *************** function ___awmod *****************
 16700 ;; Defined at:
 16701 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 16702 ;; Parameters:    Size  Location     Type
 16703 ;;  dividend        2  [STACK] int 
 16704 ;;  divisor         2  [STACK] int 
 16705 ;; Auto vars:     Size  Location     Type
 16706 ;;  sign            1  [STACK] unsigned char 
 16707 ;;  counter         1  [STACK] unsigned char 
 16708 ;; Return value:  Size  Location     Type
 16709 ;;                  2  [STACK] int 
 16710 ;; Registers used:
 16711 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 16712 ;; Tracked objects:
 16713 ;;		On entry : 0/4
 16714 ;;		On exit  : 0/0
 16715 ;;		Unchanged: 0/0
 16716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16721 ;;Total ram usage:        0 bytes
 16722 ;; Hardware stack levels used:    1
 16723 ;; Hardware stack levels required when called:    6
 16724 ;; This function calls:
 16725 ;;		Nothing
 16726 ;; This function is called by:
 16727 ;;		_efgtoa
 16728 ;; This function uses a reentrant model
 16729 ;;
 16730                           
 16731                           	psect	text55
 16732  016296                     __ptext55:
 16733                           	opt callstack 0
 16734  016296                     ___awmod:
 16735                           	opt callstack 0
 16736                           
 16737                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16738  016296  52E6               	movf	postinc1,f,c
 16739  016298  52E6               	movf	postinc1,f,c
 16740                           
 16741                           ;stkvar	_sign @ sp[(-2)+0]
 16742                           
 16743                           ;incstack = 0
 16744  01629A  0EFE               	movlw	-2
 16745  01629C  6AE3               	clrf	plusw1,c
 16746                           
 16747                           ;stkvar	_dividend @ sp[(-2)+-2]
 16748  01629E  0EFD               	movlw	-3
 16749  0162A0  AEE3               	btfss	plusw1,7,c
 16750  0162A2  D009               	goto	l6765
 16751                           
 16752                           ;stkvar	_dividend @ sp[(-2)+-2]
 16753                           ;stkvar	_dividend @ sp[(-2)+-2]
 16754  0162A4  0EFC               	movlw	-4
 16755  0162A6  6CE3               	negf	plusw1,c
 16756  0162A8  0EFD               	movlw	-3
 16757  0162AA  1EE3               	comf	plusw1,f,c
 16758  0162AC  B0D8               	btfsc	status,0,c
 16759  0162AE  2AE3               	incf	plusw1,f,c
 16760                           
 16761                           ;stkvar	_sign @ sp[(-2)+0]
 16762  0162B0  0EFE               	movlw	-2
 16763  0162B2  6AE3               	clrf	plusw1,c
 16764  0162B4  2AE3               	incf	plusw1,f,c
 16765  0162B6                     l6765:
 16766                           
 16767                           ;stkvar	_divisor @ sp[(-2)+-4]
 16768  0162B6  0EFB               	movlw	-5
 16769  0162B8  AEE3               	btfss	plusw1,7,c
 16770  0162BA  D006               	goto	l6769
 16771                           
 16772                           ;stkvar	_divisor @ sp[(-2)+-4]
 16773                           ;stkvar	_divisor @ sp[(-2)+-4]
 16774  0162BC  0EFA               	movlw	-6
 16775  0162BE  6CE3               	negf	plusw1,c
 16776  0162C0  0EFB               	movlw	-5
 16777  0162C2  1EE3               	comf	plusw1,f,c
 16778  0162C4  B0D8               	btfsc	status,0,c
 16779  0162C6  2AE3               	incf	plusw1,f,c
 16780  0162C8                     l6769:
 16781                           
 16782                           ;stkvar	_divisor @ sp[(-2)+-4]
 16783  0162C8  0EFA               	movlw	-6
 16784  0162CA  006F FF8C  F035    	movff	plusw1,btemp
 16785  0162D0  0EFB               	movlw	-5
 16786  0162D2  50E3               	movf	plusw1,w,c
 16787  0162D4  1035               	iorwf	btemp^0,w,c
 16788  0162D6  B4D8               	btfsc	status,2,c
 16789  0162D8  D053               	goto	u5960
 16790                           
 16791                           ;stkvar	_counter @ sp[(-2)+1]
 16792  0162DA  0EFF               	movlw	-1
 16793  0162DC  6AE3               	clrf	plusw1,c
 16794  0162DE  D012               	goto	L13
 16795  0162E0                     l6773:
 16796                           
 16797                           ;stkvar	_divisor @ sp[(-2)+-4]
 16798  0162E0  0EFA               	movlw	-6
 16799  0162E2  50E3               	movf	plusw1,w,c
 16800  0162E4  90D8               	bcf	status,0,c
 16801  0162E6  34E8               	rlcf	wreg,w,c
 16802  0162E8  6E35               	movwf	btemp^0,c
 16803  0162EA  0EFA               	movlw	-6
 16804  0162EC  0060  F0D7  FFE3   	movff	btemp,plusw1
 16805  0162F2  0EFB               	movlw	-5
 16806  0162F4  50E3               	movf	plusw1,w,c
 16807  0162F6  34E8               	rlcf	wreg,w,c
 16808  0162F8  6E35               	movwf	btemp^0,c
 16809  0162FA  0EFB               	movlw	-5
 16810  0162FC  0060  F0D7  FFE3   	movff	btemp,plusw1
 16811                           
 16812                           ;stkvar	_counter @ sp[(-2)+1]
 16813  016302  0EFF               	movlw	-1
 16814  016304                     L13:
 16815  016304  2AE3               	incf	plusw1,f,c
 16816                           
 16817                           ;stkvar	_divisor @ sp[(-2)+-4]
 16818  016306  0EFB               	movlw	-5
 16819  016308  AEE3               	btfss	plusw1,7,c
 16820  01630A  D7EA               	goto	l6773
 16821  01630C                     u5940:
 16822                           
 16823                           ;stkvar	_divisor @ sp[(-2)+-4]
 16824  01630C  0EFA               	movlw	-6
 16825  01630E  006F FF8C  F03F    	movff	plusw1,btemp+10
 16826  016314  0EFB               	movlw	-5
 16827  016316  006F FF8C  F040    	movff	plusw1,btemp+11
 16828                           
 16829                           ;stkvar	_dividend @ sp[(-2)+-2]
 16830  01631C  0EFC               	movlw	-4
 16831  01631E  006F FF8C  F03D    	movff	plusw1,btemp+8
 16832  016324  0EFD               	movlw	-3
 16833  016326  006F FF8C  F03E    	movff	plusw1,btemp+9
 16834  01632C  503F               	movf	(btemp+10)^0,w,c
 16835  01632E  5C3D               	subwf	(btemp+8)^0,w,c
 16836  016330  5040               	movf	(btemp+11)^0,w,c
 16837  016332  583E               	subwfb	(btemp+9)^0,w,c
 16838  016334  A0D8               	btfss	status,0,c
 16839  016336  D014               	goto	l6783
 16840                           
 16841                           ;stkvar	_divisor @ sp[(-2)+-4]
 16842                           ;stkvar	_dividend @ sp[(-2)+-2]
 16843  016338  0EFC               	movlw	-4
 16844  01633A  50E3               	movf	plusw1,w,c
 16845  01633C  6E35               	movwf	btemp^0,c
 16846  01633E  0EFA               	movlw	-6
 16847  016340  50E3               	movf	plusw1,w,c
 16848  016342  5E35               	subwf	btemp^0,f,c
 16849  016344  0EFC               	movlw	-4
 16850  016346  0060  F0D7  FFE3   	movff	btemp,plusw1
 16851  01634C  0EFD               	movlw	-3
 16852  01634E  50E3               	movf	plusw1,w,c
 16853  016350  6E35               	movwf	btemp^0,c
 16854  016352  0EFB               	movlw	-5
 16855  016354  50E3               	movf	plusw1,w,c
 16856  016356  5A35               	subwfb	btemp^0,f,c
 16857  016358  0EFD               	movlw	-3
 16858  01635A  0060  F0D7  FFE3   	movff	btemp,plusw1
 16859  016360                     l6783:
 16860                           
 16861                           ;stkvar	_divisor @ sp[(-2)+-4]
 16862  016360  90D8               	bcf	status,0,c
 16863  016362  0EFB               	movlw	-5
 16864  016364  32E3               	rrcf	plusw1,f,c
 16865  016366  0EFA               	movlw	-6
 16866  016368  32E3               	rrcf	plusw1,f,c
 16867                           
 16868                           ;stkvar	_counter @ sp[(-2)+1]
 16869  01636A  0EFF               	movlw	-1
 16870  01636C  50E3               	movf	plusw1,w,c
 16871  01636E  6E35               	movwf	btemp^0,c
 16872  016370  0E01               	movlw	1
 16873  016372  5E35               	subwf	btemp^0,f,c
 16874  016374  0EFF               	movlw	-1
 16875  016376  0060  F0D7  FFE3   	movff	btemp,plusw1
 16876  01637C  A4D8               	btfss	status,2,c
 16877  01637E  D7C6               	goto	u5940
 16878  016380                     u5960:
 16879                           
 16880                           ;stkvar	_sign @ sp[(-2)+0]
 16881  016380  0EFE               	movlw	-2
 16882  016382  50E3               	movf	plusw1,w,c
 16883  016384  B4D8               	btfsc	status,2,c
 16884  016386  D006               	goto	l6791
 16885                           
 16886                           ;stkvar	_dividend @ sp[(-2)+-2]
 16887                           ;stkvar	_dividend @ sp[(-2)+-2]
 16888  016388  0EFC               	movlw	-4
 16889  01638A  6CE3               	negf	plusw1,c
 16890  01638C  0EFD               	movlw	-3
 16891  01638E  1EE3               	comf	plusw1,f,c
 16892  016390  B0D8               	btfsc	status,0,c
 16893  016392  2AE3               	incf	plusw1,f,c
 16894  016394                     l6791:
 16895                           
 16896                           ;stkvar	_dividend @ sp[(-2)+-2]
 16897  016394  0EFC               	movlw	-4
 16898  016396  006F FF8C  F035    	movff	plusw1,btemp
 16899  01639C  0EFD               	movlw	-3
 16900  01639E  006F FF8C  F036    	movff	plusw1,btemp+1
 16901                           
 16902                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16903  0163A4  0EFA               	movlw	250
 16904  0163A6  26E1               	addwf	fsr1l,f,c
 16905  0163A8  0EFF               	movlw	255
 16906  0163AA  22E2               	addwfc	fsr1h,f,c
 16907  0163AC  0012               	return		;funcret
 16908  0163AE                     __end_of___awmod:
 16909                           	opt callstack 0
 16910                           
 16911 ;; *************** function ___awdiv *****************
 16912 ;; Defined at:
 16913 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 16914 ;; Parameters:    Size  Location     Type
 16915 ;;  dividend        2  [STACK] int 
 16916 ;;  divisor         2  [STACK] int 
 16917 ;; Auto vars:     Size  Location     Type
 16918 ;;  quotient        2  [STACK] int 
 16919 ;;  sign            1  [STACK] unsigned char 
 16920 ;;  counter         1  [STACK] unsigned char 
 16921 ;; Return value:  Size  Location     Type
 16922 ;;                  2  [STACK] int 
 16923 ;; Registers used:
 16924 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 16925 ;; Tracked objects:
 16926 ;;		On entry : 0/4
 16927 ;;		On exit  : 0/0
 16928 ;;		Unchanged: 0/0
 16929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16934 ;;Total ram usage:        0 bytes
 16935 ;; Hardware stack levels used:    1
 16936 ;; Hardware stack levels required when called:    6
 16937 ;; This function calls:
 16938 ;;		Nothing
 16939 ;; This function is called by:
 16940 ;;		_efgtoa
 16941 ;; This function uses a reentrant model
 16942 ;;
 16943                           
 16944                           	psect	text56
 16945  015EF6                     __ptext56:
 16946                           	opt callstack 0
 16947  015EF6                     ___awdiv:
 16948                           	opt callstack 0
 16949                           
 16950                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16951  015EF6  52E6               	movf	postinc1,f,c
 16952  015EF8  52E6               	movf	postinc1,f,c
 16953  015EFA  52E6               	movf	postinc1,f,c
 16954  015EFC  52E6               	movf	postinc1,f,c
 16955                           
 16956                           ;stkvar	_sign @ sp[(-4)+2]
 16957                           
 16958                           ;incstack = 0
 16959  015EFE  0EFE               	movlw	-2
 16960  015F00  6AE3               	clrf	plusw1,c
 16961                           
 16962                           ;stkvar	_divisor @ sp[(-4)+-4]
 16963  015F02  0EF9               	movlw	-7
 16964  015F04  AEE3               	btfss	plusw1,7,c
 16965  015F06  D009               	goto	l6719
 16966                           
 16967                           ;stkvar	_divisor @ sp[(-4)+-4]
 16968                           ;stkvar	_divisor @ sp[(-4)+-4]
 16969  015F08  0EF8               	movlw	-8
 16970  015F0A  6CE3               	negf	plusw1,c
 16971  015F0C  0EF9               	movlw	-7
 16972  015F0E  1EE3               	comf	plusw1,f,c
 16973  015F10  B0D8               	btfsc	status,0,c
 16974  015F12  2AE3               	incf	plusw1,f,c
 16975                           
 16976                           ;stkvar	_sign @ sp[(-4)+2]
 16977  015F14  0EFE               	movlw	-2
 16978  015F16  6AE3               	clrf	plusw1,c
 16979  015F18  2AE3               	incf	plusw1,f,c
 16980  015F1A                     l6719:
 16981                           
 16982                           ;stkvar	_dividend @ sp[(-4)+-2]
 16983  015F1A  0EFB               	movlw	-5
 16984  015F1C  AEE3               	btfss	plusw1,7,c
 16985  015F1E  D008               	goto	l6725
 16986                           
 16987                           ;stkvar	_dividend @ sp[(-4)+-2]
 16988                           ;stkvar	_dividend @ sp[(-4)+-2]
 16989  015F20  0EFA               	movlw	-6
 16990  015F22  6CE3               	negf	plusw1,c
 16991  015F24  0EFB               	movlw	-5
 16992  015F26  1EE3               	comf	plusw1,f,c
 16993  015F28  B0D8               	btfsc	status,0,c
 16994  015F2A  2AE3               	incf	plusw1,f,c
 16995                           
 16996                           ;stkvar	_sign @ sp[(-4)+2]
 16997  015F2C  0EFE               	movlw	-2
 16998  015F2E  70E3               	btg	plusw1,0,c
 16999  015F30                     l6725:
 17000                           
 17001                           ;stkvar	_quotient @ sp[(-4)+0]
 17002  015F30  0EFC               	movlw	-4
 17003  015F32  6AE3               	clrf	plusw1,c
 17004  015F34  0EFD               	movlw	-3
 17005  015F36  6AE3               	clrf	plusw1,c
 17006                           
 17007                           ;stkvar	_divisor @ sp[(-4)+-4]
 17008  015F38  0EF8               	movlw	-8
 17009  015F3A  006F FF8C  F035    	movff	plusw1,btemp
 17010  015F40  0EF9               	movlw	-7
 17011  015F42  50E3               	movf	plusw1,w,c
 17012  015F44  1035               	iorwf	btemp^0,w,c
 17013  015F46  B4D8               	btfsc	status,2,c
 17014  015F48  D066               	goto	u5890
 17015                           
 17016                           ;stkvar	_counter @ sp[(-4)+3]
 17017  015F4A  0EFF               	movlw	-1
 17018  015F4C  6AE3               	clrf	plusw1,c
 17019  015F4E  D012               	goto	L14
 17020  015F50                     l6731:
 17021                           
 17022                           ;stkvar	_divisor @ sp[(-4)+-4]
 17023  015F50  0EF8               	movlw	-8
 17024  015F52  50E3               	movf	plusw1,w,c
 17025  015F54  90D8               	bcf	status,0,c
 17026  015F56  34E8               	rlcf	wreg,w,c
 17027  015F58  6E35               	movwf	btemp^0,c
 17028  015F5A  0EF8               	movlw	-8
 17029  015F5C  0060  F0D7  FFE3   	movff	btemp,plusw1
 17030  015F62  0EF9               	movlw	-7
 17031  015F64  50E3               	movf	plusw1,w,c
 17032  015F66  34E8               	rlcf	wreg,w,c
 17033  015F68  6E35               	movwf	btemp^0,c
 17034  015F6A  0EF9               	movlw	-7
 17035  015F6C  0060  F0D7  FFE3   	movff	btemp,plusw1
 17036                           
 17037                           ;stkvar	_counter @ sp[(-4)+3]
 17038  015F72  0EFF               	movlw	-1
 17039  015F74                     L14:
 17040  015F74  2AE3               	incf	plusw1,f,c
 17041                           
 17042                           ;stkvar	_divisor @ sp[(-4)+-4]
 17043  015F76  0EF9               	movlw	-7
 17044  015F78  AEE3               	btfss	plusw1,7,c
 17045  015F7A  D7EA               	goto	l6731
 17046  015F7C                     u5870:
 17047                           
 17048                           ;stkvar	_quotient @ sp[(-4)+0]
 17049  015F7C  0EFC               	movlw	-4
 17050  015F7E  50E3               	movf	plusw1,w,c
 17051  015F80  90D8               	bcf	status,0,c
 17052  015F82  34E8               	rlcf	wreg,w,c
 17053  015F84  6E35               	movwf	btemp^0,c
 17054  015F86  0EFC               	movlw	-4
 17055  015F88  0060  F0D7  FFE3   	movff	btemp,plusw1
 17056  015F8E  0EFD               	movlw	-3
 17057  015F90  50E3               	movf	plusw1,w,c
 17058  015F92  34E8               	rlcf	wreg,w,c
 17059  015F94  6E35               	movwf	btemp^0,c
 17060  015F96  0EFD               	movlw	-3
 17061  015F98  0060  F0D7  FFE3   	movff	btemp,plusw1
 17062                           
 17063                           ;stkvar	_divisor @ sp[(-4)+-4]
 17064  015F9E  0EF8               	movlw	-8
 17065  015FA0  006F FF8C  F03F    	movff	plusw1,btemp+10
 17066  015FA6  0EF9               	movlw	-7
 17067  015FA8  006F FF8C  F040    	movff	plusw1,btemp+11
 17068                           
 17069                           ;stkvar	_dividend @ sp[(-4)+-2]
 17070  015FAE  0EFA               	movlw	-6
 17071  015FB0  006F FF8C  F03D    	movff	plusw1,btemp+8
 17072  015FB6  0EFB               	movlw	-5
 17073  015FB8  006F FF8C  F03E    	movff	plusw1,btemp+9
 17074  015FBE  503F               	movf	(btemp+10)^0,w,c
 17075  015FC0  5C3D               	subwf	(btemp+8)^0,w,c
 17076  015FC2  5040               	movf	(btemp+11)^0,w,c
 17077  015FC4  583E               	subwfb	(btemp+9)^0,w,c
 17078  015FC6  A0D8               	btfss	status,0,c
 17079  015FC8  D016               	goto	l6745
 17080                           
 17081                           ;stkvar	_divisor @ sp[(-4)+-4]
 17082                           ;stkvar	_dividend @ sp[(-4)+-2]
 17083  015FCA  0EFA               	movlw	-6
 17084  015FCC  50E3               	movf	plusw1,w,c
 17085  015FCE  6E35               	movwf	btemp^0,c
 17086  015FD0  0EF8               	movlw	-8
 17087  015FD2  50E3               	movf	plusw1,w,c
 17088  015FD4  5E35               	subwf	btemp^0,f,c
 17089  015FD6  0EFA               	movlw	-6
 17090  015FD8  0060  F0D7  FFE3   	movff	btemp,plusw1
 17091  015FDE  0EFB               	movlw	-5
 17092  015FE0  50E3               	movf	plusw1,w,c
 17093  015FE2  6E35               	movwf	btemp^0,c
 17094  015FE4  0EF9               	movlw	-7
 17095  015FE6  50E3               	movf	plusw1,w,c
 17096  015FE8  5A35               	subwfb	btemp^0,f,c
 17097  015FEA  0EFB               	movlw	-5
 17098  015FEC  0060  F0D7  FFE3   	movff	btemp,plusw1
 17099                           
 17100                           ;stkvar	_quotient @ sp[(-4)+0]
 17101  015FF2  0EFC               	movlw	-4
 17102  015FF4  80E3               	bsf	plusw1,0,c
 17103  015FF6                     l6745:
 17104                           
 17105                           ;stkvar	_divisor @ sp[(-4)+-4]
 17106  015FF6  90D8               	bcf	status,0,c
 17107  015FF8  0EF9               	movlw	-7
 17108  015FFA  32E3               	rrcf	plusw1,f,c
 17109  015FFC  0EF8               	movlw	-8
 17110  015FFE  32E3               	rrcf	plusw1,f,c
 17111                           
 17112                           ;stkvar	_counter @ sp[(-4)+3]
 17113  016000  0EFF               	movlw	-1
 17114  016002  50E3               	movf	plusw1,w,c
 17115  016004  6E35               	movwf	btemp^0,c
 17116  016006  0E01               	movlw	1
 17117  016008  5E35               	subwf	btemp^0,f,c
 17118  01600A  0EFF               	movlw	-1
 17119  01600C  0060  F0D7  FFE3   	movff	btemp,plusw1
 17120  016012  A4D8               	btfss	status,2,c
 17121  016014  D7B3               	goto	u5870
 17122  016016                     u5890:
 17123                           
 17124                           ;stkvar	_sign @ sp[(-4)+2]
 17125  016016  0EFE               	movlw	-2
 17126  016018  50E3               	movf	plusw1,w,c
 17127  01601A  B4D8               	btfsc	status,2,c
 17128  01601C  D006               	goto	l6753
 17129                           
 17130                           ;stkvar	_quotient @ sp[(-4)+0]
 17131                           ;stkvar	_quotient @ sp[(-4)+0]
 17132  01601E  0EFC               	movlw	-4
 17133  016020  6CE3               	negf	plusw1,c
 17134  016022  0EFD               	movlw	-3
 17135  016024  1EE3               	comf	plusw1,f,c
 17136  016026  B0D8               	btfsc	status,0,c
 17137  016028  2AE3               	incf	plusw1,f,c
 17138  01602A                     l6753:
 17139                           
 17140                           ;stkvar	_quotient @ sp[(-4)+0]
 17141  01602A  0EFC               	movlw	-4
 17142  01602C  006F FF8C  F035    	movff	plusw1,btemp
 17143  016032  0EFD               	movlw	-3
 17144  016034  006F FF8C  F036    	movff	plusw1,btemp+1
 17145                           
 17146                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17147  01603A  0EF8               	movlw	248
 17148  01603C  26E1               	addwf	fsr1l,f,c
 17149  01603E  0EFF               	movlw	255
 17150  016040  22E2               	addwfc	fsr1h,f,c
 17151  016042  0012               	return		;funcret
 17152  016044                     __end_of___awdiv:
 17153                           	opt callstack 0
 17154                           
 17155 ;; *************** function _dtoa *****************
 17156 ;; Defined at:
 17157 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17158 ;; Parameters:    Size  Location     Type
 17159 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17160 ;;		 -> f(6), NULL(0), 
 17161 ;;  d               8  [STACK] long long 
 17162 ;; Auto vars:     Size  Location     Type
 17163 ;;  n               8  [STACK] long long 
 17164 ;;  i               2  [STACK] int 
 17165 ;;  s               2  [STACK] int 
 17166 ;;  w               2  [STACK] int 
 17167 ;;  p               2  [STACK] int 
 17168 ;; Return value:  Size  Location     Type
 17169 ;;                  2  [STACK] int 
 17170 ;; Registers used:
 17171 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 17172 ;; Tracked objects:
 17173 ;;		On entry : 0/4
 17174 ;;		On exit  : 0/0
 17175 ;;		Unchanged: 0/0
 17176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17181 ;;Total ram usage:        0 bytes
 17182 ;; Hardware stack levels used:    1
 17183 ;; Hardware stack levels required when called:   11
 17184 ;; This function calls:
 17185 ;;		___aodiv
 17186 ;;		___aomod
 17187 ;;		_abs
 17188 ;;		_pad
 17189 ;; This function is called by:
 17190 ;;		_vfpfcnvrt
 17191 ;; This function uses a reentrant model
 17192 ;;
 17193                           
 17194                           	psect	text57
 17195  0132E2                     __ptext57:
 17196                           	opt callstack 0
 17197  0132E2                     _dtoa:
 17198                           	opt callstack 0
 17199                           
 17200                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 17201  0132E2  0E12               	movlw	18
 17202  0132E4  26E1               	addwf	fsr1l,f,c
 17203  0132E6  0E00               	movlw	0
 17204  0132E8  22E2               	addwfc	fsr1h,f,c
 17205                           
 17206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 17207                           ;stkvar	_d @ sp[(-18)+-10]
 17208                           
 17209                           ;incstack = 0
 17210  0132EA  0EE4               	movlw	228
 17211  0132EC  24E1               	addwf	fsr1l,w,c
 17212  0132EE  6ED9               	movwf	fsr2l,c
 17213  0132F0  0EFF               	movlw	255
 17214  0132F2  20E2               	addwfc	fsr1h,w,c
 17215  0132F4  6EDA               	movwf	fsr2h,c
 17216                           
 17217                           ;stkvar	_n @ sp[(-18)+2]
 17218  0132F6  0E08               	movlw	8
 17219  0132F8  6E35               	movwf	btemp^0,c
 17220  0132FA  0EF0               	movlw	-16
 17221  0132FC                     us859999:
 17222  0132FC  006F FF7B FFE3     	movff	postinc2,plusw1
 17223  013302  28E8               	incf	wreg,w,c
 17224  013304  2E35               	decfsz	btemp^0,f,c
 17225  013306  D7FA               	bra	us859999
 17226                           
 17227                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 17228                           ;stkvar	_n @ sp[(-18)+2]
 17229  013308  0EF7               	movlw	-9
 17230  01330A  AEE3               	btfss	plusw1,7,c
 17231  01330C  D002               	goto	u8600
 17232  01330E  0E01               	movlw	1
 17233  013310  D001               	goto	u8610
 17234  013312                     u8600:
 17235  013312  0E00               	movlw	0
 17236  013314                     u8610:
 17237  013314  6E3F               	movwf	(btemp+10)^0,c
 17238  013316  6A40               	clrf	(btemp+11)^0,c
 17239                           
 17240                           ;stkvar	_s @ sp[(-18)+12]
 17241  013318  0EFA               	movlw	-6
 17242  01331A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17243  013320  0EFB               	movlw	-5
 17244  013322  0060  F103  FFE3   	movff	btemp+11,plusw1
 17245                           
 17246                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 17247                           ;stkvar	_s @ sp[(-18)+12]
 17248  013328  0EFA               	movlw	-6
 17249  01332A  006F FF8C  F035    	movff	plusw1,btemp
 17250  013330  0EFB               	movlw	-5
 17251  013332  50E3               	movf	plusw1,w,c
 17252  013334  1035               	iorwf	btemp^0,w,c
 17253  013336  B4D8               	btfsc	status,2,c
 17254  013338  D025               	goto	u8630
 17255                           
 17256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 17257                           ;stkvar	_n @ sp[(-18)+2]
 17258                           ;stkvar	_n @ sp[(-18)+2]
 17259  01333A  0EF0               	movlw	-16
 17260  01333C  6CE3               	negf	plusw1,c
 17261  01333E  0EF1               	movlw	-15
 17262  013340  1EE3               	comf	plusw1,f,c
 17263  013342  0EF2               	movlw	-14
 17264  013344  1EE3               	comf	plusw1,f,c
 17265  013346  0EF3               	movlw	-13
 17266  013348  1EE3               	comf	plusw1,f,c
 17267  01334A  0EF4               	movlw	-12
 17268  01334C  1EE3               	comf	plusw1,f,c
 17269  01334E  0EF5               	movlw	-11
 17270  013350  1EE3               	comf	plusw1,f,c
 17271  013352  0EF6               	movlw	-10
 17272  013354  1EE3               	comf	plusw1,f,c
 17273  013356  0EF7               	movlw	-9
 17274  013358  1EE3               	comf	plusw1,f,c
 17275  01335A  E314               	bnc	u8630
 17276  01335C  0EF1               	movlw	-15
 17277  01335E  2AE3               	incf	plusw1,f,c
 17278  013360  E311               	bnc	u8630
 17279  013362  0EF2               	movlw	-14
 17280  013364  2AE3               	incf	plusw1,f,c
 17281  013366  E30E               	bnc	u8630
 17282  013368  0EF3               	movlw	-13
 17283  01336A  2AE3               	incf	plusw1,f,c
 17284  01336C  E30B               	bnc	u8630
 17285  01336E  0EF4               	movlw	-12
 17286  013370  2AE3               	incf	plusw1,f,c
 17287  013372  E308               	bnc	u8630
 17288  013374  0EF5               	movlw	-11
 17289  013376  2AE3               	incf	plusw1,f,c
 17290  013378  E305               	bnc	u8630
 17291  01337A  0EF6               	movlw	-10
 17292  01337C  2AE3               	incf	plusw1,f,c
 17293  01337E  E302               	bnc	u8630
 17294  013380  0EF7               	movlw	-9
 17295  013382  2AE3               	incf	plusw1,f,c
 17296  013384                     u8630:
 17297                           
 17298                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 17299  013384  AE21               	btfss	(_prec+1)^0,7,c
 17300                           
 17301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 17302  013386  9222               	bcf	_flags^0,1,c
 17303                           
 17304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 17305  013388  BE21               	btfsc	(_prec+1)^0,7,c
 17306  01338A  D005               	goto	u8650
 17307  01338C  5021               	movf	(_prec+1)^0,w,c
 17308  01338E  E110               	bnz	l9013
 17309  013390  0420               	decf	_prec^0,w,c
 17310  013392  B0D8               	btfsc	status,0,c
 17311  013394  D00D               	goto	l9013
 17312  013396                     u8650:
 17313  013396  0E01               	movlw	1
 17314  013398  6E3F               	movwf	(btemp+10)^0,c
 17315  01339A  0E00               	movlw	0
 17316  01339C  6E40               	movwf	(btemp+11)^0,c
 17317                           
 17318                           ;stkvar	_p @ sp[(-18)+16]
 17319  01339E  0EFE               	movlw	-2
 17320  0133A0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17321  0133A6  0EFF               	movlw	-1
 17322  0133A8  0060  F103  FFE3   	movff	btemp+11,plusw1
 17323  0133AE  D008               	goto	l1760
 17324  0133B0                     l9013:
 17325                           
 17326                           ;stkvar	_p @ sp[(-18)+16]
 17327  0133B0  0EFE               	movlw	-2
 17328  0133B2  0060  F083  FFE3   	movff	_prec,plusw1
 17329  0133B8  0EFF               	movlw	-1
 17330  0133BA  0060  F087  FFE3   	movff	_prec+1,plusw1
 17331  0133C0                     l1760:
 17332                           
 17333                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 17334                           ;stkvar	_w @ sp[(-18)+14]
 17335  0133C0  0EFC               	movlw	-4
 17336  0133C2  0060  F07B  FFE3   	movff	_width,plusw1
 17337  0133C8  0EFD               	movlw	-3
 17338  0133CA  0060  F07F  FFE3   	movff	_width+1,plusw1
 17339                           
 17340                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 17341                           ;stkvar	_s @ sp[(-18)+12]
 17342  0133D0  0EFA               	movlw	-6
 17343  0133D2  006F FF8C  F035    	movff	plusw1,btemp
 17344  0133D8  0EFB               	movlw	-5
 17345  0133DA  50E3               	movf	plusw1,w,c
 17346  0133DC  1035               	iorwf	btemp^0,w,c
 17347  0133DE  A4D8               	btfss	status,2,c
 17348  0133E0  D002               	goto	u8670
 17349  0133E2  A422               	btfss	_flags^0,2,c
 17350  0133E4  D00A               	goto	l9021
 17351  0133E6                     u8670:
 17352                           
 17353                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 17354                           ;stkvar	_w @ sp[(-18)+14]
 17355  0133E6  50E1               	movf	fsr1l,w,c
 17356  0133E8  0FFC               	addlw	-4
 17357  0133EA  6ED9               	movwf	fsr2l,c
 17358  0133EC  50E2               	movf	fsr1h,w,c
 17359  0133EE  6EDA               	movwf	fsr2h,c
 17360  0133F0  0EFF               	movlw	255
 17361  0133F2  22DA               	addwfc	fsr2h,f,c
 17362  0133F4  06DE               	decf	postinc2,f,c
 17363  0133F6  0E00               	movlw	0
 17364  0133F8  5ADD               	subwfb	postdec2,f,c
 17365  0133FA                     l9021:
 17366                           
 17367                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 17368  0133FA  0E4F               	movlw	79
 17369  0133FC  6E3F               	movwf	(btemp+10)^0,c
 17370  0133FE  0E00               	movlw	0
 17371  013400  6E40               	movwf	(btemp+11)^0,c
 17372                           
 17373                           ;stkvar	_i @ sp[(-18)+10]
 17374  013402  0EF8               	movlw	-8
 17375  013404  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17376  01340A  0EF9               	movlw	-7
 17377  01340C  0060  F103  FFE3   	movff	btemp+11,plusw1
 17378                           
 17379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 17380  013412  0101               	movlb	1	; () banked
 17381  013414  6BFA               	clrf	(_dbuf+79)& (0+255),b
 17382                           
 17383                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17384  013416  D109               	goto	l9035
 17385  013418                     l9025:
 17386                           
 17387                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 17388                           ;stkvar	_i @ sp[(-18)+10]
 17389  013418  50E1               	movf	fsr1l,w,c
 17390  01341A  0FF8               	addlw	-8
 17391  01341C  6ED9               	movwf	fsr2l,c
 17392  01341E  50E2               	movf	fsr1h,w,c
 17393  013420  6EDA               	movwf	fsr2h,c
 17394  013422  0EFF               	movlw	255
 17395  013424  22DA               	addwfc	fsr2h,f,c
 17396  013426  06DE               	decf	postinc2,f,c
 17397  013428  0E00               	movlw	0
 17398  01342A  5ADD               	subwfb	postdec2,f,c
 17399                           
 17400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 17401  01342C  0E0A               	movlw	10
 17402  01342E  6EE6               	movwf	postinc1,c
 17403  013430  0E00               	movlw	0
 17404  013432  6EE6               	movwf	postinc1,c
 17405  013434  0E00               	movlw	0
 17406  013436  6EE6               	movwf	postinc1,c
 17407  013438  0E00               	movlw	0
 17408  01343A  6EE6               	movwf	postinc1,c
 17409  01343C  0E00               	movlw	0
 17410  01343E  6EE6               	movwf	postinc1,c
 17411  013440  0E00               	movlw	0
 17412  013442  6EE6               	movwf	postinc1,c
 17413  013444  0E00               	movlw	0
 17414  013446  6EE6               	movwf	postinc1,c
 17415  013448  0E00               	movlw	0
 17416  01344A  6EE6               	movwf	postinc1,c
 17417                           
 17418                           ;stkvar	_n @ sp[(-26)+2]
 17419  01344C  50E1               	movf	fsr1l,w,c
 17420  01344E  0FE8               	addlw	-24
 17421  013450  6ED9               	movwf	fsr2l,c
 17422  013452  50E2               	movf	fsr1h,w,c
 17423  013454  6EDA               	movwf	fsr2h,c
 17424  013456  0EFF               	movlw	255
 17425  013458  22DA               	addwfc	fsr2h,f,c
 17426  01345A  006F FF7B FFE6     	movff	postinc2,postinc1
 17427  013460  006F FF7B FFE6     	movff	postinc2,postinc1
 17428  013466  006F FF7B FFE6     	movff	postinc2,postinc1
 17429  01346C  006F FF7B FFE6     	movff	postinc2,postinc1
 17430  013472  006F FF7B FFE6     	movff	postinc2,postinc1
 17431  013478  006F FF7B FFE6     	movff	postinc2,postinc1
 17432  01347E  006F FF7B FFE6     	movff	postinc2,postinc1
 17433  013484  006F FF7B FFE6     	movff	postinc2,postinc1
 17434  01348A  EC57  F0A8         	call	___aomod	;wreg free
 17435  01348E  52E5               	movf	postdec1,f,c
 17436  013490  006F FF9C  F04C    	movff	indf1,btemp+23
 17437  013496  52E5               	movf	postdec1,f,c
 17438  013498  006F FF9C  F04B    	movff	indf1,btemp+22
 17439  01349E  52E5               	movf	postdec1,f,c
 17440  0134A0  006F FF9C  F04A    	movff	indf1,btemp+21
 17441  0134A6  52E5               	movf	postdec1,f,c
 17442  0134A8  006F FF9C  F049    	movff	indf1,btemp+20
 17443  0134AE  52E5               	movf	postdec1,f,c
 17444  0134B0  006F FF9C  F048    	movff	indf1,btemp+19
 17445  0134B6  52E5               	movf	postdec1,f,c
 17446  0134B8  006F FF9C  F047    	movff	indf1,btemp+18
 17447  0134BE  52E5               	movf	postdec1,f,c
 17448  0134C0  006F FF9C  F046    	movff	indf1,btemp+17
 17449  0134C6  52E5               	movf	postdec1,f,c
 17450  0134C8  006F FF9C  F045    	movff	indf1,btemp+16
 17451  0134CE  0EF8               	movlw	248
 17452  0134D0  26E1               	addwf	fsr1l,f,c
 17453  0134D2  0EFF               	movlw	255
 17454  0134D4  22E2               	addwfc	fsr1h,f,c
 17455  0134D6  0060  F114  F03F   	movff	btemp+16,btemp+10
 17456  0134DC  0060  F118  F040   	movff	btemp+17,btemp+11
 17457  0134E2  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 17458  0134E8  0060  F103  FFE6   	movff	btemp+11,postinc1
 17459  0134EE  ECC7  F0BB         	call	_abs	;wreg free
 17460  0134F2  0E30               	movlw	48
 17461  0134F4  2635               	addwf	btemp^0,f,c
 17462                           
 17463                           ;stkvar	_i @ sp[(-18)+10]
 17464  0134F6  0EF8               	movlw	-8
 17465  0134F8  006F FF8C  F03F    	movff	plusw1,btemp+10
 17466  0134FE  0EF9               	movlw	-7
 17467  013500  006F FF8C  F040    	movff	plusw1,btemp+11
 17468  013506  0EAB               	movlw	low _dbuf
 17469  013508  243F               	addwf	(btemp+10)^0,w,c
 17470  01350A  6ED9               	movwf	fsr2l,c
 17471  01350C  0E01               	movlw	high _dbuf
 17472  01350E  2040               	addwfc	(btemp+11)^0,w,c
 17473  013510  6EDA               	movwf	fsr2h,c
 17474  013512  0060  F0D7  FFDF   	movff	btemp,indf2
 17475                           
 17476                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 17477                           ;stkvar	_p @ sp[(-18)+16]
 17478  013518  50E1               	movf	fsr1l,w,c
 17479  01351A  0FFE               	addlw	-2
 17480  01351C  6ED9               	movwf	fsr2l,c
 17481  01351E  50E2               	movf	fsr1h,w,c
 17482  013520  6EDA               	movwf	fsr2h,c
 17483  013522  0EFF               	movlw	255
 17484  013524  22DA               	addwfc	fsr2h,f,c
 17485  013526  06DE               	decf	postinc2,f,c
 17486  013528  0E00               	movlw	0
 17487  01352A  5ADD               	subwfb	postdec2,f,c
 17488                           
 17489                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 17490                           ;stkvar	_w @ sp[(-18)+14]
 17491  01352C  50E1               	movf	fsr1l,w,c
 17492  01352E  0FFC               	addlw	-4
 17493  013530  6ED9               	movwf	fsr2l,c
 17494  013532  50E2               	movf	fsr1h,w,c
 17495  013534  6EDA               	movwf	fsr2h,c
 17496  013536  0EFF               	movlw	255
 17497  013538  22DA               	addwfc	fsr2h,f,c
 17498  01353A  06DE               	decf	postinc2,f,c
 17499  01353C  0E00               	movlw	0
 17500  01353E  5ADD               	subwfb	postdec2,f,c
 17501                           
 17502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 17503  013540  0E0A               	movlw	10
 17504  013542  6EE6               	movwf	postinc1,c
 17505  013544  0E00               	movlw	0
 17506  013546  6EE6               	movwf	postinc1,c
 17507  013548  0E00               	movlw	0
 17508  01354A  6EE6               	movwf	postinc1,c
 17509  01354C  0E00               	movlw	0
 17510  01354E  6EE6               	movwf	postinc1,c
 17511  013550  0E00               	movlw	0
 17512  013552  6EE6               	movwf	postinc1,c
 17513  013554  0E00               	movlw	0
 17514  013556  6EE6               	movwf	postinc1,c
 17515  013558  0E00               	movlw	0
 17516  01355A  6EE6               	movwf	postinc1,c
 17517  01355C  0E00               	movlw	0
 17518  01355E  6EE6               	movwf	postinc1,c
 17519                           
 17520                           ;stkvar	_n @ sp[(-26)+2]
 17521  013560  50E1               	movf	fsr1l,w,c
 17522  013562  0FE8               	addlw	-24
 17523  013564  6ED9               	movwf	fsr2l,c
 17524  013566  50E2               	movf	fsr1h,w,c
 17525  013568  6EDA               	movwf	fsr2h,c
 17526  01356A  0EFF               	movlw	255
 17527  01356C  22DA               	addwfc	fsr2h,f,c
 17528  01356E  006F FF7B FFE6     	movff	postinc2,postinc1
 17529  013574  006F FF7B FFE6     	movff	postinc2,postinc1
 17530  01357A  006F FF7B FFE6     	movff	postinc2,postinc1
 17531  013580  006F FF7B FFE6     	movff	postinc2,postinc1
 17532  013586  006F FF7B FFE6     	movff	postinc2,postinc1
 17533  01358C  006F FF7B FFE6     	movff	postinc2,postinc1
 17534  013592  006F FF7B FFE6     	movff	postinc2,postinc1
 17535  013598  006F FF7B FFE6     	movff	postinc2,postinc1
 17536  01359E  ECDD  F0A5         	call	___aodiv	;wreg free
 17537  0135A2  52E5               	movf	postdec1,f,c
 17538  0135A4  006F FF9C  F04C    	movff	indf1,btemp+23
 17539  0135AA  52E5               	movf	postdec1,f,c
 17540  0135AC  006F FF9C  F04B    	movff	indf1,btemp+22
 17541  0135B2  52E5               	movf	postdec1,f,c
 17542  0135B4  006F FF9C  F04A    	movff	indf1,btemp+21
 17543  0135BA  52E5               	movf	postdec1,f,c
 17544  0135BC  006F FF9C  F049    	movff	indf1,btemp+20
 17545  0135C2  52E5               	movf	postdec1,f,c
 17546  0135C4  006F FF9C  F048    	movff	indf1,btemp+19
 17547  0135CA  52E5               	movf	postdec1,f,c
 17548  0135CC  006F FF9C  F047    	movff	indf1,btemp+18
 17549  0135D2  52E5               	movf	postdec1,f,c
 17550  0135D4  006F FF9C  F046    	movff	indf1,btemp+17
 17551  0135DA  52E5               	movf	postdec1,f,c
 17552  0135DC  006F FF9C  F045    	movff	indf1,btemp+16
 17553  0135E2  0EF8               	movlw	248
 17554  0135E4  26E1               	addwf	fsr1l,f,c
 17555  0135E6  0EFF               	movlw	255
 17556  0135E8  22E2               	addwfc	fsr1h,f,c
 17557                           
 17558                           ;stkvar	_n @ sp[(-18)+2]
 17559  0135EA  0EF0               	movlw	-16
 17560  0135EC  0060  F117  FFE3   	movff	btemp+16,plusw1
 17561  0135F2  0EF1               	movlw	-15
 17562  0135F4  0060  F11B  FFE3   	movff	btemp+17,plusw1
 17563  0135FA  0EF2               	movlw	-14
 17564  0135FC  0060  F11F  FFE3   	movff	btemp+18,plusw1
 17565  013602  0EF3               	movlw	-13
 17566  013604  0060  F123  FFE3   	movff	btemp+19,plusw1
 17567  01360A  0EF4               	movlw	-12
 17568  01360C  0060  F127  FFE3   	movff	btemp+20,plusw1
 17569  013612  0EF5               	movlw	-11
 17570  013614  0060  F12B  FFE3   	movff	btemp+21,plusw1
 17571  01361A  0EF6               	movlw	-10
 17572  01361C  0060  F12F  FFE3   	movff	btemp+22,plusw1
 17573  013622  0EF7               	movlw	-9
 17574  013624  0060  F133  FFE3   	movff	btemp+23,plusw1
 17575  01362A                     l9035:
 17576                           
 17577                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17578                           ;stkvar	_i @ sp[(-18)+10]
 17579  01362A  0EF9               	movlw	-7
 17580  01362C  BEE3               	btfsc	plusw1,7,c
 17581  01362E  D036               	goto	u8720
 17582  013630  0EF9               	movlw	-7
 17583  013632  50E3               	movf	plusw1,w,c
 17584  013634  E104               	bnz	u8680
 17585  013636  0EF8               	movlw	-8
 17586  013638  04E3               	decf	plusw1,w,c
 17587  01363A  A0D8               	btfss	status,0,c
 17588  01363C  D02F               	goto	u8720
 17589  01363E                     u8680:
 17590                           
 17591                           ;stkvar	_n @ sp[(-18)+2]
 17592  01363E  0EF0               	movlw	-16
 17593  013640  50E3               	movf	plusw1,w,c
 17594  013642  E115               	bnz	u8691
 17595  013644  0EF1               	movlw	-15
 17596  013646  50E3               	movf	plusw1,w,c
 17597  013648  E112               	bnz	u8691
 17598  01364A  0EF2               	movlw	-14
 17599  01364C  50E3               	movf	plusw1,w,c
 17600  01364E  E10F               	bnz	u8691
 17601  013650  0EF3               	movlw	-13
 17602  013652  50E3               	movf	plusw1,w,c
 17603  013654  E10C               	bnz	u8691
 17604  013656  0EF4               	movlw	-12
 17605  013658  50E3               	movf	plusw1,w,c
 17606  01365A  E109               	bnz	u8691
 17607  01365C  0EF5               	movlw	-11
 17608  01365E  50E3               	movf	plusw1,w,c
 17609  013660  E106               	bnz	u8691
 17610  013662  0EF6               	movlw	-10
 17611  013664  50E3               	movf	plusw1,w,c
 17612  013666  E103               	bnz	u8691
 17613  013668  0EF7               	movlw	-9
 17614  01366A  50E3               	movf	plusw1,w,c
 17615  01366C  A4D8               	btfss	status,2,c
 17616  01366E                     u8691:
 17617  01366E  D6D4               	goto	l9025
 17618                           
 17619                           ;stkvar	_p @ sp[(-18)+16]
 17620  013670  0EFF               	movlw	-1
 17621  013672  BEE3               	btfsc	plusw1,7,c
 17622  013674  D007               	goto	u8700
 17623  013676  0EFF               	movlw	-1
 17624  013678  50E3               	movf	plusw1,w,c
 17625  01367A  E103               	bnz	u8701
 17626  01367C  0EFE               	movlw	-2
 17627  01367E  04E3               	decf	plusw1,w,c
 17628  013680  B0D8               	btfsc	status,0,c
 17629  013682                     u8701:
 17630  013682  D6CA               	goto	l9025
 17631  013684                     u8700:
 17632                           
 17633                           ;stkvar	_w @ sp[(-18)+14]
 17634  013684  0EFD               	movlw	-3
 17635  013686  BEE3               	btfsc	plusw1,7,c
 17636  013688  D009               	goto	u8720
 17637  01368A  0EFD               	movlw	-3
 17638  01368C  50E3               	movf	plusw1,w,c
 17639  01368E  E104               	bnz	u8710
 17640  013690  0EFC               	movlw	-4
 17641  013692  04E3               	decf	plusw1,w,c
 17642  013694  A0D8               	btfss	status,0,c
 17643  013696  D002               	goto	u8720
 17644  013698                     u8710:
 17645  013698  B222               	btfsc	_flags^0,1,c
 17646  01369A  D6BE               	goto	l9025
 17647  01369C                     u8720:
 17648                           
 17649                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 17650                           ;stkvar	_s @ sp[(-18)+12]
 17651  01369C  0EFA               	movlw	-6
 17652  01369E  006F FF8C  F035    	movff	plusw1,btemp
 17653  0136A4  0EFB               	movlw	-5
 17654  0136A6  50E3               	movf	plusw1,w,c
 17655  0136A8  1035               	iorwf	btemp^0,w,c
 17656  0136AA  A4D8               	btfss	status,2,c
 17657  0136AC  D002               	goto	u8740
 17658  0136AE  A422               	btfss	_flags^0,2,c
 17659  0136B0  D033               	goto	l9059
 17660  0136B2                     u8740:
 17661                           
 17662                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 17663                           ;stkvar	_i @ sp[(-18)+10]
 17664  0136B2  50E1               	movf	fsr1l,w,c
 17665  0136B4  0FF8               	addlw	-8
 17666  0136B6  6ED9               	movwf	fsr2l,c
 17667  0136B8  50E2               	movf	fsr1h,w,c
 17668  0136BA  6EDA               	movwf	fsr2h,c
 17669  0136BC  0EFF               	movlw	255
 17670  0136BE  22DA               	addwfc	fsr2h,f,c
 17671  0136C0  06DE               	decf	postinc2,f,c
 17672  0136C2  0E00               	movlw	0
 17673  0136C4  5ADD               	subwfb	postdec2,f,c
 17674                           
 17675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 17676                           ;stkvar	_s @ sp[(-18)+12]
 17677  0136C6  0EFA               	movlw	-6
 17678  0136C8  006F FF8C  F035    	movff	plusw1,btemp
 17679  0136CE  0EFB               	movlw	-5
 17680  0136D0  50E3               	movf	plusw1,w,c
 17681  0136D2  1035               	iorwf	btemp^0,w,c
 17682  0136D4  A4D8               	btfss	status,2,c
 17683  0136D6  D002               	goto	l9055
 17684  0136D8  0E2B               	movlw	43
 17685  0136DA  D001               	goto	L15
 17686  0136DC                     l9055:
 17687  0136DC  0E2D               	movlw	45
 17688  0136DE                     L15:
 17689  0136DE  6E3F               	movwf	(btemp+10)^0,c
 17690  0136E0  0E00               	movlw	0
 17691  0136E2  6E40               	movwf	(btemp+11)^0,c
 17692                           
 17693                           ;stkvar	_dtoa$4047 @ sp[(-18)+0]
 17694  0136E4  0EEE               	movlw	-18
 17695  0136E6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17696  0136EC  0EEF               	movlw	-17
 17697  0136EE  0060  F103  FFE3   	movff	btemp+11,plusw1
 17698                           
 17699                           ;stkvar	_dtoa$4047 @ sp[(-18)+0]
 17700                           ;stkvar	_i @ sp[(-18)+10]
 17701  0136F4  0EF8               	movlw	-8
 17702  0136F6  006F FF8C  F03F    	movff	plusw1,btemp+10
 17703  0136FC  0EF9               	movlw	-7
 17704  0136FE  006F FF8C  F040    	movff	plusw1,btemp+11
 17705  013704  0EAB               	movlw	low _dbuf
 17706  013706  243F               	addwf	(btemp+10)^0,w,c
 17707  013708  6ED9               	movwf	fsr2l,c
 17708  01370A  0E01               	movlw	high _dbuf
 17709  01370C  2040               	addwfc	(btemp+11)^0,w,c
 17710  01370E  6EDA               	movwf	fsr2h,c
 17711  013710  0EEE               	movlw	-18
 17712  013712  006F FF8F FFDF     	movff	plusw1,indf2
 17713  013718                     l9059:
 17714                           
 17715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 17716                           ;stkvar	_w @ sp[(-18)+14]
 17717  013718  0EFC               	movlw	-4
 17718  01371A  006F FF8F FFE6     	movff	plusw1,postinc1
 17719  013720  006F FF8F FFE6     	movff	plusw1,postinc1
 17720                           
 17721                           ;stkvar	_i @ sp[(-20)+10]
 17722  013726  0EAB               	movlw	low _dbuf
 17723  013728  6E3F               	movwf	(btemp+10)^0,c
 17724  01372A  0E01               	movlw	high _dbuf
 17725  01372C  6E40               	movwf	(btemp+11)^0,c
 17726  01372E  0EF6               	movlw	-10
 17727  013730  50E3               	movf	plusw1,w,c
 17728  013732  263F               	addwf	(btemp+10)^0,f,c
 17729  013734  0EF7               	movlw	-9
 17730  013736  50E3               	movf	plusw1,w,c
 17731  013738  2240               	addwfc	(btemp+11)^0,f,c
 17732  01373A  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 17733  013740  0060  F103  FFE6   	movff	btemp+11,postinc1
 17734                           
 17735                           ;stkvar	_fp @ sp[(-22)+-2]
 17736  013746  0EE8               	movlw	-24
 17737  013748  006F FF8F FFE6     	movff	plusw1,postinc1
 17738  01374E  006F FF8F FFE6     	movff	plusw1,postinc1
 17739  013754  ECD7  F0B1         	call	_pad	;wreg free
 17740                           
 17741                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 17742  013758  0EE4               	movlw	228
 17743  01375A  26E1               	addwf	fsr1l,f,c
 17744  01375C  0EFF               	movlw	255
 17745  01375E  22E2               	addwfc	fsr1h,f,c
 17746  013760  0012               	return		;funcret
 17747  013762                     __end_of_dtoa:
 17748                           	opt callstack 0
 17749                           
 17750 ;; *************** function _abs *****************
 17751 ;; Defined at:
 17752 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 17753 ;; Parameters:    Size  Location     Type
 17754 ;;  a               2  [STACK] int 
 17755 ;; Auto vars:     Size  Location     Type
 17756 ;;		None
 17757 ;; Return value:  Size  Location     Type
 17758 ;;                  2  [STACK] int 
 17759 ;; Registers used:
 17760 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 17761 ;; Tracked objects:
 17762 ;;		On entry : 0/1
 17763 ;;		On exit  : 0/0
 17764 ;;		Unchanged: 0/0
 17765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17770 ;;Total ram usage:        0 bytes
 17771 ;; Hardware stack levels used:    1
 17772 ;; Hardware stack levels required when called:    6
 17773 ;; This function calls:
 17774 ;;		Nothing
 17775 ;; This function is called by:
 17776 ;;		_dtoa
 17777 ;; This function uses a reentrant model
 17778 ;;
 17779                           
 17780                           	psect	text58
 17781  01778E                     __ptext58:
 17782                           	opt callstack 0
 17783  01778E                     _abs:
 17784                           	opt callstack 17
 17785                           
 17786                           ;stkvar	_a @ sp[(0)+-2]
 17787                           
 17788                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17789                           ;incstack = 0
 17790  01778E  0EFF               	movlw	-1
 17791  017790  BEE3               	btfsc	plusw1,7,c
 17792  017792  D007               	goto	u4850
 17793  017794  0EFF               	movlw	-1
 17794  017796  50E3               	movf	plusw1,w,c
 17795  017798  E112               	bnz	l6207
 17796  01779A  0EFE               	movlw	-2
 17797  01779C  04E3               	decf	plusw1,w,c
 17798  01779E  B0D8               	btfsc	status,0,c
 17799  0177A0  D00E               	goto	l6207
 17800  0177A2                     u4850:
 17801                           
 17802                           ;stkvar	_a @ sp[(0)+-2]
 17803  0177A2  0EFE               	movlw	-2
 17804  0177A4  006F FF8C  F035    	movff	plusw1,btemp
 17805  0177AA  1E35               	comf	btemp^0,f,c
 17806  0177AC  0EFF               	movlw	-1
 17807  0177AE  006F FF8C  F036    	movff	plusw1,btemp+1
 17808  0177B4  1E36               	comf	(btemp+1)^0,f,c
 17809  0177B6  2A35               	incf	btemp^0,f,c
 17810  0177B8  B4D8               	btfsc	status,2,c
 17811  0177BA  2A36               	incf	(btemp+1)^0,f,c
 17812  0177BC  D008               	goto	l2663
 17813  0177BE                     l6207:
 17814                           
 17815                           ;stkvar	_a @ sp[(0)+-2]
 17816  0177BE  0EFE               	movlw	-2
 17817  0177C0  006F FF8C  F035    	movff	plusw1,btemp
 17818  0177C6  0EFF               	movlw	-1
 17819  0177C8  006F FF8C  F036    	movff	plusw1,btemp+1
 17820  0177CE                     l2663:
 17821                           
 17822                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 17823  0177CE  52E5               	movf	postdec1,f,c
 17824  0177D0  52E5               	movf	postdec1,f,c
 17825  0177D2  0012               	return		;funcret
 17826  0177D4                     __end_of_abs:
 17827                           	opt callstack 0
 17828                           
 17829 ;; *************** function ___aomod *****************
 17830 ;; Defined at:
 17831 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 17832 ;; Parameters:    Size  Location     Type
 17833 ;;  dividend        8  [STACK] long long 
 17834 ;;  divisor         8  [STACK] long long 
 17835 ;; Auto vars:     Size  Location     Type
 17836 ;;  sign            1  [STACK] unsigned char 
 17837 ;;  counter         1  [STACK] unsigned char 
 17838 ;; Return value:  Size  Location     Type
 17839 ;;                  8  [STACK] long long 
 17840 ;; Registers used:
 17841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17842 ;; Tracked objects:
 17843 ;;		On entry : 0/1
 17844 ;;		On exit  : 0/0
 17845 ;;		Unchanged: 0/0
 17846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17851 ;;Total ram usage:        0 bytes
 17852 ;; Hardware stack levels used:    1
 17853 ;; Hardware stack levels required when called:    6
 17854 ;; This function calls:
 17855 ;;		Nothing
 17856 ;; This function is called by:
 17857 ;;		_dtoa
 17858 ;; This function uses a reentrant model
 17859 ;;
 17860                           
 17861                           	psect	text59
 17862  0150AE                     __ptext59:
 17863                           	opt callstack 0
 17864  0150AE                     ___aomod:
 17865                           	opt callstack 0
 17866                           
 17867                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 17868  0150AE  52E6               	movf	postinc1,f,c
 17869  0150B0  52E6               	movf	postinc1,f,c
 17870                           
 17871                           ;stkvar	_sign @ sp[(-2)+0]
 17872                           
 17873                           ;incstack = 0
 17874  0150B2  0EFE               	movlw	-2
 17875  0150B4  6AE3               	clrf	plusw1,c
 17876                           
 17877                           ;stkvar	_dividend @ sp[(-2)+-8]
 17878  0150B6  0EFD               	movlw	-3
 17879  0150B8  AEE3               	btfss	plusw1,7,c
 17880  0150BA  D028               	goto	l6365
 17881                           
 17882                           ;stkvar	_dividend @ sp[(-2)+-8]
 17883                           ;stkvar	_dividend @ sp[(-2)+-8]
 17884  0150BC  0EF6               	movlw	-10
 17885  0150BE  6CE3               	negf	plusw1,c
 17886  0150C0  0EF7               	movlw	-9
 17887  0150C2  1EE3               	comf	plusw1,f,c
 17888  0150C4  0EF8               	movlw	-8
 17889  0150C6  1EE3               	comf	plusw1,f,c
 17890  0150C8  0EF9               	movlw	-7
 17891  0150CA  1EE3               	comf	plusw1,f,c
 17892  0150CC  0EFA               	movlw	-6
 17893  0150CE  1EE3               	comf	plusw1,f,c
 17894  0150D0  0EFB               	movlw	-5
 17895  0150D2  1EE3               	comf	plusw1,f,c
 17896  0150D4  0EFC               	movlw	-4
 17897  0150D6  1EE3               	comf	plusw1,f,c
 17898  0150D8  0EFD               	movlw	-3
 17899  0150DA  1EE3               	comf	plusw1,f,c
 17900  0150DC  E314               	bnc	u5280
 17901  0150DE  0EF7               	movlw	-9
 17902  0150E0  2AE3               	incf	plusw1,f,c
 17903  0150E2  E311               	bnc	u5280
 17904  0150E4  0EF8               	movlw	-8
 17905  0150E6  2AE3               	incf	plusw1,f,c
 17906  0150E8  E30E               	bnc	u5280
 17907  0150EA  0EF9               	movlw	-7
 17908  0150EC  2AE3               	incf	plusw1,f,c
 17909  0150EE  E30B               	bnc	u5280
 17910  0150F0  0EFA               	movlw	-6
 17911  0150F2  2AE3               	incf	plusw1,f,c
 17912  0150F4  E308               	bnc	u5280
 17913  0150F6  0EFB               	movlw	-5
 17914  0150F8  2AE3               	incf	plusw1,f,c
 17915  0150FA  E305               	bnc	u5280
 17916  0150FC  0EFC               	movlw	-4
 17917  0150FE  2AE3               	incf	plusw1,f,c
 17918  015100  E302               	bnc	u5280
 17919  015102  0EFD               	movlw	-3
 17920  015104  2AE3               	incf	plusw1,f,c
 17921  015106                     u5280:
 17922                           
 17923                           ;stkvar	_sign @ sp[(-2)+0]
 17924  015106  0EFE               	movlw	-2
 17925  015108  6AE3               	clrf	plusw1,c
 17926  01510A  2AE3               	incf	plusw1,f,c
 17927  01510C                     l6365:
 17928                           
 17929                           ;stkvar	_divisor @ sp[(-2)+-16]
 17930  01510C  0EF5               	movlw	-11
 17931  01510E  AEE3               	btfss	plusw1,7,c
 17932  015110  D025               	goto	u5300
 17933                           
 17934                           ;stkvar	_divisor @ sp[(-2)+-16]
 17935                           ;stkvar	_divisor @ sp[(-2)+-16]
 17936  015112  0EEE               	movlw	-18
 17937  015114  6CE3               	negf	plusw1,c
 17938  015116  0EEF               	movlw	-17
 17939  015118  1EE3               	comf	plusw1,f,c
 17940  01511A  0EF0               	movlw	-16
 17941  01511C  1EE3               	comf	plusw1,f,c
 17942  01511E  0EF1               	movlw	-15
 17943  015120  1EE3               	comf	plusw1,f,c
 17944  015122  0EF2               	movlw	-14
 17945  015124  1EE3               	comf	plusw1,f,c
 17946  015126  0EF3               	movlw	-13
 17947  015128  1EE3               	comf	plusw1,f,c
 17948  01512A  0EF4               	movlw	-12
 17949  01512C  1EE3               	comf	plusw1,f,c
 17950  01512E  0EF5               	movlw	-11
 17951  015130  1EE3               	comf	plusw1,f,c
 17952  015132  E314               	bnc	u5300
 17953  015134  0EEF               	movlw	-17
 17954  015136  2AE3               	incf	plusw1,f,c
 17955  015138  E311               	bnc	u5300
 17956  01513A  0EF0               	movlw	-16
 17957  01513C  2AE3               	incf	plusw1,f,c
 17958  01513E  E30E               	bnc	u5300
 17959  015140  0EF1               	movlw	-15
 17960  015142  2AE3               	incf	plusw1,f,c
 17961  015144  E30B               	bnc	u5300
 17962  015146  0EF2               	movlw	-14
 17963  015148  2AE3               	incf	plusw1,f,c
 17964  01514A  E308               	bnc	u5300
 17965  01514C  0EF3               	movlw	-13
 17966  01514E  2AE3               	incf	plusw1,f,c
 17967  015150  E305               	bnc	u5300
 17968  015152  0EF4               	movlw	-12
 17969  015154  2AE3               	incf	plusw1,f,c
 17970  015156  E302               	bnc	u5300
 17971  015158  0EF5               	movlw	-11
 17972  01515A  2AE3               	incf	plusw1,f,c
 17973  01515C                     u5300:
 17974                           
 17975                           ;stkvar	_divisor @ sp[(-2)+-16]
 17976  01515C  0EEE               	movlw	-18
 17977  01515E  50E3               	movf	plusw1,w,c
 17978  015160  E116               	bnz	u5310
 17979  015162  0EEF               	movlw	-17
 17980  015164  50E3               	movf	plusw1,w,c
 17981  015166  E113               	bnz	u5310
 17982  015168  0EF0               	movlw	-16
 17983  01516A  50E3               	movf	plusw1,w,c
 17984  01516C  E110               	bnz	u5310
 17985  01516E  0EF1               	movlw	-15
 17986  015170  50E3               	movf	plusw1,w,c
 17987  015172  E10D               	bnz	u5310
 17988  015174  0EF2               	movlw	-14
 17989  015176  50E3               	movf	plusw1,w,c
 17990  015178  E10A               	bnz	u5310
 17991  01517A  0EF3               	movlw	-13
 17992  01517C  50E3               	movf	plusw1,w,c
 17993  01517E  E107               	bnz	u5310
 17994  015180  0EF4               	movlw	-12
 17995  015182  50E3               	movf	plusw1,w,c
 17996  015184  E104               	bnz	u5310
 17997  015186  0EF5               	movlw	-11
 17998  015188  50E3               	movf	plusw1,w,c
 17999  01518A  B4D8               	btfsc	status,2,c
 18000  01518C  D075               	goto	u5340
 18001  01518E                     u5310:
 18002                           
 18003                           ;stkvar	_counter @ sp[(-2)+1]
 18004  01518E  0EFF               	movlw	-1
 18005  015190  6AE3               	clrf	plusw1,c
 18006  015192  D012               	goto	L16
 18007  015194                     l6373:
 18008                           
 18009                           ;stkvar	_divisor @ sp[(-2)+-16]
 18010  015194  90D8               	bcf	status,0,c
 18011  015196  0EEE               	movlw	-18
 18012  015198  36E3               	rlcf	plusw1,f,c
 18013  01519A  0EEF               	movlw	-17
 18014  01519C  36E3               	rlcf	plusw1,f,c
 18015  01519E  0EF0               	movlw	-16
 18016  0151A0  36E3               	rlcf	plusw1,f,c
 18017  0151A2  0EF1               	movlw	-15
 18018  0151A4  36E3               	rlcf	plusw1,f,c
 18019  0151A6  0EF2               	movlw	-14
 18020  0151A8  36E3               	rlcf	plusw1,f,c
 18021  0151AA  0EF3               	movlw	-13
 18022  0151AC  36E3               	rlcf	plusw1,f,c
 18023  0151AE  0EF4               	movlw	-12
 18024  0151B0  36E3               	rlcf	plusw1,f,c
 18025  0151B2  0EF5               	movlw	-11
 18026  0151B4  36E3               	rlcf	plusw1,f,c
 18027                           
 18028                           ;stkvar	_counter @ sp[(-2)+1]
 18029  0151B6  0EFF               	movlw	-1
 18030  0151B8                     L16:
 18031  0151B8  2AE3               	incf	plusw1,f,c
 18032                           
 18033                           ;stkvar	_divisor @ sp[(-2)+-16]
 18034  0151BA  0EF5               	movlw	-11
 18035  0151BC  AEE3               	btfss	plusw1,7,c
 18036  0151BE  D7EA               	goto	l6373
 18037  0151C0                     u5320:
 18038                           
 18039                           ;stkvar	_divisor @ sp[(-2)+-16]
 18040                           ;stkvar	_dividend @ sp[(-2)+-8]
 18041  0151C0  50E1               	movf	fsr1l,w,c
 18042  0151C2  0FF6               	addlw	-10
 18043  0151C4  6ED9               	movwf	fsr2l,c
 18044  0151C6  50E2               	movf	fsr1h,w,c
 18045  0151C8  6EDA               	movwf	fsr2h,c
 18046  0151CA  0EFF               	movlw	255
 18047  0151CC  22DA               	addwfc	fsr2h,f,c
 18048  0151CE  0EEE               	movlw	-18
 18049  0151D0  50E3               	movf	plusw1,w,c
 18050  0151D2  5CDE               	subwf	postinc2,w,c
 18051  0151D4  0EEF               	movlw	-17
 18052  0151D6  50E3               	movf	plusw1,w,c
 18053  0151D8  58DE               	subwfb	postinc2,w,c
 18054  0151DA  0EF0               	movlw	-16
 18055  0151DC  50E3               	movf	plusw1,w,c
 18056  0151DE  58DE               	subwfb	postinc2,w,c
 18057  0151E0  0EF1               	movlw	-15
 18058  0151E2  50E3               	movf	plusw1,w,c
 18059  0151E4  58DE               	subwfb	postinc2,w,c
 18060  0151E6  0EF2               	movlw	-14
 18061  0151E8  50E3               	movf	plusw1,w,c
 18062  0151EA  58DE               	subwfb	postinc2,w,c
 18063  0151EC  0EF3               	movlw	-13
 18064  0151EE  50E3               	movf	plusw1,w,c
 18065  0151F0  58DE               	subwfb	postinc2,w,c
 18066  0151F2  0EF4               	movlw	-12
 18067  0151F4  50E3               	movf	plusw1,w,c
 18068  0151F6  58DE               	subwfb	postinc2,w,c
 18069  0151F8  0EF5               	movlw	-11
 18070  0151FA  50E3               	movf	plusw1,w,c
 18071  0151FC  58DE               	subwfb	postinc2,w,c
 18072  0151FE  A0D8               	btfss	status,0,c
 18073  015200  D01F               	goto	l6381
 18074                           
 18075                           ;stkvar	_divisor @ sp[(-2)+-16]
 18076                           ;stkvar	_dividend @ sp[(-2)+-8]
 18077  015202  50E1               	movf	fsr1l,w,c
 18078  015204  0FF6               	addlw	-10
 18079  015206  6ED9               	movwf	fsr2l,c
 18080  015208  50E2               	movf	fsr1h,w,c
 18081  01520A  6EDA               	movwf	fsr2h,c
 18082  01520C  0EFF               	movlw	255
 18083  01520E  22DA               	addwfc	fsr2h,f,c
 18084  015210  0EEE               	movlw	-18
 18085  015212  50E3               	movf	plusw1,w,c
 18086  015214  5EDE               	subwf	postinc2,f,c
 18087  015216  0EEF               	movlw	-17
 18088  015218  50E3               	movf	plusw1,w,c
 18089  01521A  5ADE               	subwfb	postinc2,f,c
 18090  01521C  0EF0               	movlw	-16
 18091  01521E  50E3               	movf	plusw1,w,c
 18092  015220  5ADE               	subwfb	postinc2,f,c
 18093  015222  0EF1               	movlw	-15
 18094  015224  50E3               	movf	plusw1,w,c
 18095  015226  5ADE               	subwfb	postinc2,f,c
 18096  015228  0EF2               	movlw	-14
 18097  01522A  50E3               	movf	plusw1,w,c
 18098  01522C  5ADE               	subwfb	postinc2,f,c
 18099  01522E  0EF3               	movlw	-13
 18100  015230  50E3               	movf	plusw1,w,c
 18101  015232  5ADE               	subwfb	postinc2,f,c
 18102  015234  0EF4               	movlw	-12
 18103  015236  50E3               	movf	plusw1,w,c
 18104  015238  5ADE               	subwfb	postinc2,f,c
 18105  01523A  0EF5               	movlw	-11
 18106  01523C  50E3               	movf	plusw1,w,c
 18107  01523E  5ADE               	subwfb	postinc2,f,c
 18108  015240                     l6381:
 18109                           
 18110                           ;stkvar	_divisor @ sp[(-2)+-16]
 18111  015240  90D8               	bcf	status,0,c
 18112  015242  0EF5               	movlw	-11
 18113  015244  32E3               	rrcf	plusw1,f,c
 18114  015246  0EF4               	movlw	-12
 18115  015248  32E3               	rrcf	plusw1,f,c
 18116  01524A  0EF3               	movlw	-13
 18117  01524C  32E3               	rrcf	plusw1,f,c
 18118  01524E  0EF2               	movlw	-14
 18119  015250  32E3               	rrcf	plusw1,f,c
 18120  015252  0EF1               	movlw	-15
 18121  015254  32E3               	rrcf	plusw1,f,c
 18122  015256  0EF0               	movlw	-16
 18123  015258  32E3               	rrcf	plusw1,f,c
 18124  01525A  0EEF               	movlw	-17
 18125  01525C  32E3               	rrcf	plusw1,f,c
 18126  01525E  0EEE               	movlw	-18
 18127  015260  32E3               	rrcf	plusw1,f,c
 18128                           
 18129                           ;stkvar	_counter @ sp[(-2)+1]
 18130  015262  0EFF               	movlw	-1
 18131  015264  50E3               	movf	plusw1,w,c
 18132  015266  6E35               	movwf	btemp^0,c
 18133  015268  0E01               	movlw	1
 18134  01526A  5E35               	subwf	btemp^0,f,c
 18135  01526C  0EFF               	movlw	-1
 18136  01526E  0060  F0D7  FFE3   	movff	btemp,plusw1
 18137  015274  A4D8               	btfss	status,2,c
 18138  015276  D7A4               	goto	u5320
 18139  015278                     u5340:
 18140                           
 18141                           ;stkvar	_sign @ sp[(-2)+0]
 18142  015278  0EFE               	movlw	-2
 18143  01527A  50E3               	movf	plusw1,w,c
 18144  01527C  B4D8               	btfsc	status,2,c
 18145  01527E  D025               	goto	u5360
 18146                           
 18147                           ;stkvar	_dividend @ sp[(-2)+-8]
 18148                           ;stkvar	_dividend @ sp[(-2)+-8]
 18149  015280  0EF6               	movlw	-10
 18150  015282  6CE3               	negf	plusw1,c
 18151  015284  0EF7               	movlw	-9
 18152  015286  1EE3               	comf	plusw1,f,c
 18153  015288  0EF8               	movlw	-8
 18154  01528A  1EE3               	comf	plusw1,f,c
 18155  01528C  0EF9               	movlw	-7
 18156  01528E  1EE3               	comf	plusw1,f,c
 18157  015290  0EFA               	movlw	-6
 18158  015292  1EE3               	comf	plusw1,f,c
 18159  015294  0EFB               	movlw	-5
 18160  015296  1EE3               	comf	plusw1,f,c
 18161  015298  0EFC               	movlw	-4
 18162  01529A  1EE3               	comf	plusw1,f,c
 18163  01529C  0EFD               	movlw	-3
 18164  01529E  1EE3               	comf	plusw1,f,c
 18165  0152A0  E314               	bnc	u5360
 18166  0152A2  0EF7               	movlw	-9
 18167  0152A4  2AE3               	incf	plusw1,f,c
 18168  0152A6  E311               	bnc	u5360
 18169  0152A8  0EF8               	movlw	-8
 18170  0152AA  2AE3               	incf	plusw1,f,c
 18171  0152AC  E30E               	bnc	u5360
 18172  0152AE  0EF9               	movlw	-7
 18173  0152B0  2AE3               	incf	plusw1,f,c
 18174  0152B2  E30B               	bnc	u5360
 18175  0152B4  0EFA               	movlw	-6
 18176  0152B6  2AE3               	incf	plusw1,f,c
 18177  0152B8  E308               	bnc	u5360
 18178  0152BA  0EFB               	movlw	-5
 18179  0152BC  2AE3               	incf	plusw1,f,c
 18180  0152BE  E305               	bnc	u5360
 18181  0152C0  0EFC               	movlw	-4
 18182  0152C2  2AE3               	incf	plusw1,f,c
 18183  0152C4  E302               	bnc	u5360
 18184  0152C6  0EFD               	movlw	-3
 18185  0152C8  2AE3               	incf	plusw1,f,c
 18186  0152CA                     u5360:
 18187                           
 18188                           ;stkvar	_dividend @ sp[(-2)+-8]
 18189  0152CA  0EF6               	movlw	246
 18190  0152CC  24E1               	addwf	fsr1l,w,c
 18191  0152CE  6ED9               	movwf	fsr2l,c
 18192  0152D0  0EFF               	movlw	255
 18193  0152D2  20E2               	addwfc	fsr1h,w,c
 18194  0152D4  6EDA               	movwf	fsr2h,c
 18195                           
 18196                           ;stkvar	?___aomod @ sp[(-2)+-8]
 18197  0152D6  0E08               	movlw	8
 18198  0152D8  6E35               	movwf	btemp^0,c
 18199  0152DA  0EF6               	movlw	-10
 18200  0152DC                     us537999:
 18201  0152DC  006F FF7B FFE3     	movff	postinc2,plusw1
 18202  0152E2  28E8               	incf	wreg,w,c
 18203  0152E4  2E35               	decfsz	btemp^0,f,c
 18204  0152E6  D7FA               	bra	us537999
 18205                           
 18206                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 18207  0152E8  52E5               	movf	postdec1,f,c
 18208  0152EA  52E5               	movf	postdec1,f,c
 18209  0152EC  0012               	return		;funcret
 18210  0152EE                     __end_of___aomod:
 18211                           	opt callstack 0
 18212                           
 18213 ;; *************** function ___aodiv *****************
 18214 ;; Defined at:
 18215 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 18216 ;; Parameters:    Size  Location     Type
 18217 ;;  dividend        8  [STACK] long long 
 18218 ;;  divisor         8  [STACK] long long 
 18219 ;; Auto vars:     Size  Location     Type
 18220 ;;  quotient        8  [STACK] long long 
 18221 ;;  sign            1  [STACK] unsigned char 
 18222 ;;  counter         1  [STACK] unsigned char 
 18223 ;; Return value:  Size  Location     Type
 18224 ;;                  8  [STACK] long long 
 18225 ;; Registers used:
 18226 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18227 ;; Tracked objects:
 18228 ;;		On entry : 0/1
 18229 ;;		On exit  : 0/0
 18230 ;;		Unchanged: 0/0
 18231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18236 ;;Total ram usage:        0 bytes
 18237 ;; Hardware stack levels used:    1
 18238 ;; Hardware stack levels required when called:    6
 18239 ;; This function calls:
 18240 ;;		Nothing
 18241 ;; This function is called by:
 18242 ;;		_dtoa
 18243 ;; This function uses a reentrant model
 18244 ;;
 18245                           
 18246                           	psect	text60
 18247  014BBA                     __ptext60:
 18248                           	opt callstack 0
 18249  014BBA                     ___aodiv:
 18250                           	opt callstack 0
 18251                           
 18252                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 18253  014BBA  0E0A               	movlw	10
 18254  014BBC  26E1               	addwf	fsr1l,f,c
 18255  014BBE  0E00               	movlw	0
 18256  014BC0  22E2               	addwfc	fsr1h,f,c
 18257                           
 18258                           ;stkvar	_sign @ sp[(-10)+8]
 18259                           
 18260                           ;incstack = 0
 18261  014BC2  0EFE               	movlw	-2
 18262  014BC4  6AE3               	clrf	plusw1,c
 18263                           
 18264                           ;stkvar	_divisor @ sp[(-10)+-16]
 18265  014BC6  0EED               	movlw	-19
 18266  014BC8  AEE3               	btfss	plusw1,7,c
 18267  014BCA  D028               	goto	l6321
 18268                           
 18269                           ;stkvar	_divisor @ sp[(-10)+-16]
 18270                           ;stkvar	_divisor @ sp[(-10)+-16]
 18271  014BCC  0EE6               	movlw	-26
 18272  014BCE  6CE3               	negf	plusw1,c
 18273  014BD0  0EE7               	movlw	-25
 18274  014BD2  1EE3               	comf	plusw1,f,c
 18275  014BD4  0EE8               	movlw	-24
 18276  014BD6  1EE3               	comf	plusw1,f,c
 18277  014BD8  0EE9               	movlw	-23
 18278  014BDA  1EE3               	comf	plusw1,f,c
 18279  014BDC  0EEA               	movlw	-22
 18280  014BDE  1EE3               	comf	plusw1,f,c
 18281  014BE0  0EEB               	movlw	-21
 18282  014BE2  1EE3               	comf	plusw1,f,c
 18283  014BE4  0EEC               	movlw	-20
 18284  014BE6  1EE3               	comf	plusw1,f,c
 18285  014BE8  0EED               	movlw	-19
 18286  014BEA  1EE3               	comf	plusw1,f,c
 18287  014BEC  E314               	bnc	u5160
 18288  014BEE  0EE7               	movlw	-25
 18289  014BF0  2AE3               	incf	plusw1,f,c
 18290  014BF2  E311               	bnc	u5160
 18291  014BF4  0EE8               	movlw	-24
 18292  014BF6  2AE3               	incf	plusw1,f,c
 18293  014BF8  E30E               	bnc	u5160
 18294  014BFA  0EE9               	movlw	-23
 18295  014BFC  2AE3               	incf	plusw1,f,c
 18296  014BFE  E30B               	bnc	u5160
 18297  014C00  0EEA               	movlw	-22
 18298  014C02  2AE3               	incf	plusw1,f,c
 18299  014C04  E308               	bnc	u5160
 18300  014C06  0EEB               	movlw	-21
 18301  014C08  2AE3               	incf	plusw1,f,c
 18302  014C0A  E305               	bnc	u5160
 18303  014C0C  0EEC               	movlw	-20
 18304  014C0E  2AE3               	incf	plusw1,f,c
 18305  014C10  E302               	bnc	u5160
 18306  014C12  0EED               	movlw	-19
 18307  014C14  2AE3               	incf	plusw1,f,c
 18308  014C16                     u5160:
 18309                           
 18310                           ;stkvar	_sign @ sp[(-10)+8]
 18311  014C16  0EFE               	movlw	-2
 18312  014C18  6AE3               	clrf	plusw1,c
 18313  014C1A  2AE3               	incf	plusw1,f,c
 18314  014C1C                     l6321:
 18315                           
 18316                           ;stkvar	_dividend @ sp[(-10)+-8]
 18317  014C1C  0EF5               	movlw	-11
 18318  014C1E  AEE3               	btfss	plusw1,7,c
 18319  014C20  D027               	goto	l6327
 18320                           
 18321                           ;stkvar	_dividend @ sp[(-10)+-8]
 18322                           ;stkvar	_dividend @ sp[(-10)+-8]
 18323  014C22  0EEE               	movlw	-18
 18324  014C24  6CE3               	negf	plusw1,c
 18325  014C26  0EEF               	movlw	-17
 18326  014C28  1EE3               	comf	plusw1,f,c
 18327  014C2A  0EF0               	movlw	-16
 18328  014C2C  1EE3               	comf	plusw1,f,c
 18329  014C2E  0EF1               	movlw	-15
 18330  014C30  1EE3               	comf	plusw1,f,c
 18331  014C32  0EF2               	movlw	-14
 18332  014C34  1EE3               	comf	plusw1,f,c
 18333  014C36  0EF3               	movlw	-13
 18334  014C38  1EE3               	comf	plusw1,f,c
 18335  014C3A  0EF4               	movlw	-12
 18336  014C3C  1EE3               	comf	plusw1,f,c
 18337  014C3E  0EF5               	movlw	-11
 18338  014C40  1EE3               	comf	plusw1,f,c
 18339  014C42  E314               	bnc	u5180
 18340  014C44  0EEF               	movlw	-17
 18341  014C46  2AE3               	incf	plusw1,f,c
 18342  014C48  E311               	bnc	u5180
 18343  014C4A  0EF0               	movlw	-16
 18344  014C4C  2AE3               	incf	plusw1,f,c
 18345  014C4E  E30E               	bnc	u5180
 18346  014C50  0EF1               	movlw	-15
 18347  014C52  2AE3               	incf	plusw1,f,c
 18348  014C54  E30B               	bnc	u5180
 18349  014C56  0EF2               	movlw	-14
 18350  014C58  2AE3               	incf	plusw1,f,c
 18351  014C5A  E308               	bnc	u5180
 18352  014C5C  0EF3               	movlw	-13
 18353  014C5E  2AE3               	incf	plusw1,f,c
 18354  014C60  E305               	bnc	u5180
 18355  014C62  0EF4               	movlw	-12
 18356  014C64  2AE3               	incf	plusw1,f,c
 18357  014C66  E302               	bnc	u5180
 18358  014C68  0EF5               	movlw	-11
 18359  014C6A  2AE3               	incf	plusw1,f,c
 18360  014C6C                     u5180:
 18361                           
 18362                           ;stkvar	_sign @ sp[(-10)+8]
 18363  014C6C  0EFE               	movlw	-2
 18364  014C6E  70E3               	btg	plusw1,0,c
 18365  014C70                     l6327:
 18366                           
 18367                           ;stkvar	_quotient @ sp[(-10)+0]
 18368  014C70  0E07               	movlw	7
 18369  014C72  6E35               	movwf	btemp^0,c
 18370  014C74  0EF6               	movlw	-10
 18371  014C76                     u5191:
 18372  014C76  6AE3               	clrf	plusw1,c
 18373  014C78  2AE8               	incf	wreg,f,c
 18374  014C7A  0635               	decf	btemp^0,f,c
 18375  014C7C  E2FC               	bc	u5191
 18376                           
 18377                           ;stkvar	_divisor @ sp[(-10)+-16]
 18378  014C7E  0EE6               	movlw	-26
 18379  014C80  50E3               	movf	plusw1,w,c
 18380  014C82  E116               	bnz	u5200
 18381  014C84  0EE7               	movlw	-25
 18382  014C86  50E3               	movf	plusw1,w,c
 18383  014C88  E113               	bnz	u5200
 18384  014C8A  0EE8               	movlw	-24
 18385  014C8C  50E3               	movf	plusw1,w,c
 18386  014C8E  E110               	bnz	u5200
 18387  014C90  0EE9               	movlw	-23
 18388  014C92  50E3               	movf	plusw1,w,c
 18389  014C94  E10D               	bnz	u5200
 18390  014C96  0EEA               	movlw	-22
 18391  014C98  50E3               	movf	plusw1,w,c
 18392  014C9A  E10A               	bnz	u5200
 18393  014C9C  0EEB               	movlw	-21
 18394  014C9E  50E3               	movf	plusw1,w,c
 18395  014CA0  E107               	bnz	u5200
 18396  014CA2  0EEC               	movlw	-20
 18397  014CA4  50E3               	movf	plusw1,w,c
 18398  014CA6  E104               	bnz	u5200
 18399  014CA8  0EED               	movlw	-19
 18400  014CAA  50E3               	movf	plusw1,w,c
 18401  014CAC  B4D8               	btfsc	status,2,c
 18402  014CAE  D088               	goto	u5230
 18403  014CB0                     u5200:
 18404                           
 18405                           ;stkvar	_counter @ sp[(-10)+9]
 18406  014CB0  0EFF               	movlw	-1
 18407  014CB2  6AE3               	clrf	plusw1,c
 18408  014CB4  D012               	goto	L17
 18409  014CB6                     l6333:
 18410                           
 18411                           ;stkvar	_divisor @ sp[(-10)+-16]
 18412  014CB6  90D8               	bcf	status,0,c
 18413  014CB8  0EE6               	movlw	-26
 18414  014CBA  36E3               	rlcf	plusw1,f,c
 18415  014CBC  0EE7               	movlw	-25
 18416  014CBE  36E3               	rlcf	plusw1,f,c
 18417  014CC0  0EE8               	movlw	-24
 18418  014CC2  36E3               	rlcf	plusw1,f,c
 18419  014CC4  0EE9               	movlw	-23
 18420  014CC6  36E3               	rlcf	plusw1,f,c
 18421  014CC8  0EEA               	movlw	-22
 18422  014CCA  36E3               	rlcf	plusw1,f,c
 18423  014CCC  0EEB               	movlw	-21
 18424  014CCE  36E3               	rlcf	plusw1,f,c
 18425  014CD0  0EEC               	movlw	-20
 18426  014CD2  36E3               	rlcf	plusw1,f,c
 18427  014CD4  0EED               	movlw	-19
 18428  014CD6  36E3               	rlcf	plusw1,f,c
 18429                           
 18430                           ;stkvar	_counter @ sp[(-10)+9]
 18431  014CD8  0EFF               	movlw	-1
 18432  014CDA                     L17:
 18433  014CDA  2AE3               	incf	plusw1,f,c
 18434                           
 18435                           ;stkvar	_divisor @ sp[(-10)+-16]
 18436  014CDC  0EED               	movlw	-19
 18437  014CDE  AEE3               	btfss	plusw1,7,c
 18438  014CE0  D7EA               	goto	l6333
 18439  014CE2                     u5210:
 18440                           
 18441                           ;stkvar	_quotient @ sp[(-10)+0]
 18442  014CE2  90D8               	bcf	status,0,c
 18443  014CE4  0EF6               	movlw	-10
 18444  014CE6  36E3               	rlcf	plusw1,f,c
 18445  014CE8  0EF7               	movlw	-9
 18446  014CEA  36E3               	rlcf	plusw1,f,c
 18447  014CEC  0EF8               	movlw	-8
 18448  014CEE  36E3               	rlcf	plusw1,f,c
 18449  014CF0  0EF9               	movlw	-7
 18450  014CF2  36E3               	rlcf	plusw1,f,c
 18451  014CF4  0EFA               	movlw	-6
 18452  014CF6  36E3               	rlcf	plusw1,f,c
 18453  014CF8  0EFB               	movlw	-5
 18454  014CFA  36E3               	rlcf	plusw1,f,c
 18455  014CFC  0EFC               	movlw	-4
 18456  014CFE  36E3               	rlcf	plusw1,f,c
 18457  014D00  0EFD               	movlw	-3
 18458  014D02  36E3               	rlcf	plusw1,f,c
 18459                           
 18460                           ;stkvar	_divisor @ sp[(-10)+-16]
 18461                           ;stkvar	_dividend @ sp[(-10)+-8]
 18462  014D04  50E1               	movf	fsr1l,w,c
 18463  014D06  0FEE               	addlw	-18
 18464  014D08  6ED9               	movwf	fsr2l,c
 18465  014D0A  50E2               	movf	fsr1h,w,c
 18466  014D0C  6EDA               	movwf	fsr2h,c
 18467  014D0E  0EFF               	movlw	255
 18468  014D10  22DA               	addwfc	fsr2h,f,c
 18469  014D12  0EE6               	movlw	-26
 18470  014D14  50E3               	movf	plusw1,w,c
 18471  014D16  5CDE               	subwf	postinc2,w,c
 18472  014D18  0EE7               	movlw	-25
 18473  014D1A  50E3               	movf	plusw1,w,c
 18474  014D1C  58DE               	subwfb	postinc2,w,c
 18475  014D1E  0EE8               	movlw	-24
 18476  014D20  50E3               	movf	plusw1,w,c
 18477  014D22  58DE               	subwfb	postinc2,w,c
 18478  014D24  0EE9               	movlw	-23
 18479  014D26  50E3               	movf	plusw1,w,c
 18480  014D28  58DE               	subwfb	postinc2,w,c
 18481  014D2A  0EEA               	movlw	-22
 18482  014D2C  50E3               	movf	plusw1,w,c
 18483  014D2E  58DE               	subwfb	postinc2,w,c
 18484  014D30  0EEB               	movlw	-21
 18485  014D32  50E3               	movf	plusw1,w,c
 18486  014D34  58DE               	subwfb	postinc2,w,c
 18487  014D36  0EEC               	movlw	-20
 18488  014D38  50E3               	movf	plusw1,w,c
 18489  014D3A  58DE               	subwfb	postinc2,w,c
 18490  014D3C  0EED               	movlw	-19
 18491  014D3E  50E3               	movf	plusw1,w,c
 18492  014D40  58DE               	subwfb	postinc2,w,c
 18493  014D42  A0D8               	btfss	status,0,c
 18494  014D44  D021               	goto	l6345
 18495                           
 18496                           ;stkvar	_divisor @ sp[(-10)+-16]
 18497                           ;stkvar	_dividend @ sp[(-10)+-8]
 18498  014D46  50E1               	movf	fsr1l,w,c
 18499  014D48  0FEE               	addlw	-18
 18500  014D4A  6ED9               	movwf	fsr2l,c
 18501  014D4C  50E2               	movf	fsr1h,w,c
 18502  014D4E  6EDA               	movwf	fsr2h,c
 18503  014D50  0EFF               	movlw	255
 18504  014D52  22DA               	addwfc	fsr2h,f,c
 18505  014D54  0EE6               	movlw	-26
 18506  014D56  50E3               	movf	plusw1,w,c
 18507  014D58  5EDE               	subwf	postinc2,f,c
 18508  014D5A  0EE7               	movlw	-25
 18509  014D5C  50E3               	movf	plusw1,w,c
 18510  014D5E  5ADE               	subwfb	postinc2,f,c
 18511  014D60  0EE8               	movlw	-24
 18512  014D62  50E3               	movf	plusw1,w,c
 18513  014D64  5ADE               	subwfb	postinc2,f,c
 18514  014D66  0EE9               	movlw	-23
 18515  014D68  50E3               	movf	plusw1,w,c
 18516  014D6A  5ADE               	subwfb	postinc2,f,c
 18517  014D6C  0EEA               	movlw	-22
 18518  014D6E  50E3               	movf	plusw1,w,c
 18519  014D70  5ADE               	subwfb	postinc2,f,c
 18520  014D72  0EEB               	movlw	-21
 18521  014D74  50E3               	movf	plusw1,w,c
 18522  014D76  5ADE               	subwfb	postinc2,f,c
 18523  014D78  0EEC               	movlw	-20
 18524  014D7A  50E3               	movf	plusw1,w,c
 18525  014D7C  5ADE               	subwfb	postinc2,f,c
 18526  014D7E  0EED               	movlw	-19
 18527  014D80  50E3               	movf	plusw1,w,c
 18528  014D82  5ADE               	subwfb	postinc2,f,c
 18529                           
 18530                           ;stkvar	_quotient @ sp[(-10)+0]
 18531  014D84  0EF6               	movlw	-10
 18532  014D86  80E3               	bsf	plusw1,0,c
 18533  014D88                     l6345:
 18534                           
 18535                           ;stkvar	_divisor @ sp[(-10)+-16]
 18536  014D88  90D8               	bcf	status,0,c
 18537  014D8A  0EED               	movlw	-19
 18538  014D8C  32E3               	rrcf	plusw1,f,c
 18539  014D8E  0EEC               	movlw	-20
 18540  014D90  32E3               	rrcf	plusw1,f,c
 18541  014D92  0EEB               	movlw	-21
 18542  014D94  32E3               	rrcf	plusw1,f,c
 18543  014D96  0EEA               	movlw	-22
 18544  014D98  32E3               	rrcf	plusw1,f,c
 18545  014D9A  0EE9               	movlw	-23
 18546  014D9C  32E3               	rrcf	plusw1,f,c
 18547  014D9E  0EE8               	movlw	-24
 18548  014DA0  32E3               	rrcf	plusw1,f,c
 18549  014DA2  0EE7               	movlw	-25
 18550  014DA4  32E3               	rrcf	plusw1,f,c
 18551  014DA6  0EE6               	movlw	-26
 18552  014DA8  32E3               	rrcf	plusw1,f,c
 18553                           
 18554                           ;stkvar	_counter @ sp[(-10)+9]
 18555  014DAA  0EFF               	movlw	-1
 18556  014DAC  50E3               	movf	plusw1,w,c
 18557  014DAE  6E35               	movwf	btemp^0,c
 18558  014DB0  0E01               	movlw	1
 18559  014DB2  5E35               	subwf	btemp^0,f,c
 18560  014DB4  0EFF               	movlw	-1
 18561  014DB6  0060  F0D7  FFE3   	movff	btemp,plusw1
 18562  014DBC  A4D8               	btfss	status,2,c
 18563  014DBE  D791               	goto	u5210
 18564  014DC0                     u5230:
 18565                           
 18566                           ;stkvar	_sign @ sp[(-10)+8]
 18567  014DC0  0EFE               	movlw	-2
 18568  014DC2  50E3               	movf	plusw1,w,c
 18569  014DC4  B4D8               	btfsc	status,2,c
 18570  014DC6  D025               	goto	u5250
 18571                           
 18572                           ;stkvar	_quotient @ sp[(-10)+0]
 18573                           ;stkvar	_quotient @ sp[(-10)+0]
 18574  014DC8  0EF6               	movlw	-10
 18575  014DCA  6CE3               	negf	plusw1,c
 18576  014DCC  0EF7               	movlw	-9
 18577  014DCE  1EE3               	comf	plusw1,f,c
 18578  014DD0  0EF8               	movlw	-8
 18579  014DD2  1EE3               	comf	plusw1,f,c
 18580  014DD4  0EF9               	movlw	-7
 18581  014DD6  1EE3               	comf	plusw1,f,c
 18582  014DD8  0EFA               	movlw	-6
 18583  014DDA  1EE3               	comf	plusw1,f,c
 18584  014DDC  0EFB               	movlw	-5
 18585  014DDE  1EE3               	comf	plusw1,f,c
 18586  014DE0  0EFC               	movlw	-4
 18587  014DE2  1EE3               	comf	plusw1,f,c
 18588  014DE4  0EFD               	movlw	-3
 18589  014DE6  1EE3               	comf	plusw1,f,c
 18590  014DE8  E314               	bnc	u5250
 18591  014DEA  0EF7               	movlw	-9
 18592  014DEC  2AE3               	incf	plusw1,f,c
 18593  014DEE  E311               	bnc	u5250
 18594  014DF0  0EF8               	movlw	-8
 18595  014DF2  2AE3               	incf	plusw1,f,c
 18596  014DF4  E30E               	bnc	u5250
 18597  014DF6  0EF9               	movlw	-7
 18598  014DF8  2AE3               	incf	plusw1,f,c
 18599  014DFA  E30B               	bnc	u5250
 18600  014DFC  0EFA               	movlw	-6
 18601  014DFE  2AE3               	incf	plusw1,f,c
 18602  014E00  E308               	bnc	u5250
 18603  014E02  0EFB               	movlw	-5
 18604  014E04  2AE3               	incf	plusw1,f,c
 18605  014E06  E305               	bnc	u5250
 18606  014E08  0EFC               	movlw	-4
 18607  014E0A  2AE3               	incf	plusw1,f,c
 18608  014E0C  E302               	bnc	u5250
 18609  014E0E  0EFD               	movlw	-3
 18610  014E10  2AE3               	incf	plusw1,f,c
 18611  014E12                     u5250:
 18612                           
 18613                           ;stkvar	_quotient @ sp[(-10)+0]
 18614  014E12  0EF6               	movlw	246
 18615  014E14  24E1               	addwf	fsr1l,w,c
 18616  014E16  6ED9               	movwf	fsr2l,c
 18617  014E18  0EFF               	movlw	255
 18618  014E1A  20E2               	addwfc	fsr1h,w,c
 18619  014E1C  6EDA               	movwf	fsr2h,c
 18620                           
 18621                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 18622  014E1E  0E08               	movlw	8
 18623  014E20  6E35               	movwf	btemp^0,c
 18624  014E22  0EEE               	movlw	-18
 18625  014E24                     us526999:
 18626  014E24  006F FF7B FFE3     	movff	postinc2,plusw1
 18627  014E2A  28E8               	incf	wreg,w,c
 18628  014E2C  2E35               	decfsz	btemp^0,f,c
 18629  014E2E  D7FA               	bra	us526999
 18630                           
 18631                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 18632  014E30  0EF6               	movlw	246
 18633  014E32  26E1               	addwf	fsr1l,f,c
 18634  014E34  0EFF               	movlw	255
 18635  014E36  22E2               	addwfc	fsr1h,f,c
 18636  014E38  0012               	return		;funcret
 18637  014E3A                     __end_of___aodiv:
 18638                           	opt callstack 0
 18639                           
 18640 ;; *************** function _ctoa *****************
 18641 ;; Defined at:
 18642 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18643 ;; Parameters:    Size  Location     Type
 18644 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18645 ;;		 -> f(6), NULL(0), 
 18646 ;;  c               1  [STACK] unsigned char 
 18647 ;; Auto vars:     Size  Location     Type
 18648 ;;  w               2  [STACK] int 
 18649 ;;  l               2    0        int 
 18650 ;; Return value:  Size  Location     Type
 18651 ;;                  2  [STACK] int 
 18652 ;; Registers used:
 18653 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 18654 ;; Tracked objects:
 18655 ;;		On entry : 0/4
 18656 ;;		On exit  : 0/0
 18657 ;;		Unchanged: 0/0
 18658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18663 ;;Total ram usage:        0 bytes
 18664 ;; Hardware stack levels used:    1
 18665 ;; Hardware stack levels required when called:   11
 18666 ;; This function calls:
 18667 ;;		_pad
 18668 ;; This function is called by:
 18669 ;;		_vfpfcnvrt
 18670 ;; This function uses a reentrant model
 18671 ;;
 18672                           
 18673                           	psect	text61
 18674  016FB8                     __ptext61:
 18675                           	opt callstack 0
 18676  016FB8                     _ctoa:
 18677                           	opt callstack 0
 18678                           
 18679                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18680  016FB8  52E6               	movf	postinc1,f,c
 18681  016FBA  52E6               	movf	postinc1,f,c
 18682                           
 18683                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 18684                           
 18685                           ;incstack = 0
 18686  016FBC  501E               	movf	_width^0,w,c
 18687  016FBE  101F               	iorwf	(_width+1)^0,w,c
 18688  016FC0  A4D8               	btfss	status,2,c
 18689  016FC2  D009               	goto	l8987
 18690                           
 18691                           ;stkvar	_w @ sp[(-2)+0]
 18692  016FC4  0EFE               	movlw	-2
 18693  016FC6  0060  F07B  FFE3   	movff	_width,plusw1
 18694  016FCC  0EFF               	movlw	-1
 18695  016FCE  0060  F07F  FFE3   	movff	_width+1,plusw1
 18696  016FD4  D016               	goto	l8989
 18697  016FD6                     l8987:
 18698  016FD6  0EFF               	movlw	255
 18699  016FD8  6E3F               	movwf	(btemp+10)^0,c
 18700  016FDA  0EFF               	movlw	255
 18701  016FDC  6E40               	movwf	(btemp+11)^0,c
 18702  016FDE  0060  F078  F03D   	movff	_width,btemp+8
 18703  016FE4  0060  F07C  F03E   	movff	_width+1,btemp+9
 18704  016FEA  503F               	movf	(btemp+10)^0,w,c
 18705  016FEC  263D               	addwf	(btemp+8)^0,f,c
 18706  016FEE  5040               	movf	(btemp+11)^0,w,c
 18707  016FF0  223E               	addwfc	(btemp+9)^0,f,c
 18708                           
 18709                           ;stkvar	_w @ sp[(-2)+0]
 18710  016FF2  0EFE               	movlw	-2
 18711  016FF4  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 18712  016FFA  0EFF               	movlw	-1
 18713  016FFC  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 18714  017002                     l8989:
 18715                           
 18716                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 18717                           ;stkvar	_c @ sp[(-2)+-3]
 18718  017002  0EFB               	movlw	-5
 18719  017004  006F FF8C  F1AB    	movff	plusw1,_dbuf
 18720                           
 18721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 18722  01700A  0101               	movlb	1	; () banked
 18723  01700C  6BAC               	clrf	(_dbuf+1)& (0+255),b
 18724                           
 18725                           ; BSR set to: 1
 18726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 18727                           ;stkvar	_w @ sp[(-2)+0]
 18728  01700E  0EFE               	movlw	-2
 18729  017010  006F FF8F FFE6     	movff	plusw1,postinc1
 18730  017016  006F FF8F FFE6     	movff	plusw1,postinc1
 18731  01701C  0EAB               	movlw	low _dbuf
 18732  01701E  6EE6               	movwf	postinc1,c
 18733  017020  0E01               	movlw	high _dbuf
 18734  017022  6EE6               	movwf	postinc1,c
 18735                           
 18736                           ;stkvar	_fp @ sp[(-6)+-2]
 18737  017024  0EF8               	movlw	-8
 18738  017026  006F FF8F FFE6     	movff	plusw1,postinc1
 18739  01702C  006F FF8F FFE6     	movff	plusw1,postinc1
 18740  017032  ECD7  F0B1         	call	_pad	;wreg free
 18741                           
 18742                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 18743  017036  0EFB               	movlw	251
 18744  017038  26E1               	addwf	fsr1l,f,c
 18745  01703A  0EFF               	movlw	255
 18746  01703C  22E2               	addwfc	fsr1h,f,c
 18747  01703E  0012               	return		;funcret
 18748  017040                     __end_of_ctoa:
 18749                           	opt callstack 0
 18750                           
 18751 ;; *************** function _pad *****************
 18752 ;; Defined at:
 18753 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18754 ;; Parameters:    Size  Location     Type
 18755 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18756 ;;		 -> f(6), NULL(0), 
 18757 ;;  buf             2  [STACK] PTR unsigned char 
 18758 ;;		 -> dbuf(80), 
 18759 ;;  p               2  [STACK] int 
 18760 ;; Auto vars:     Size  Location     Type
 18761 ;;  w               2  [STACK] int 
 18762 ;;  i               2  [STACK] int 
 18763 ;; Return value:  Size  Location     Type
 18764 ;;                  2  [STACK] int 
 18765 ;; Registers used:
 18766 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 18767 ;; Tracked objects:
 18768 ;;		On entry : 0/1
 18769 ;;		On exit  : 0/0
 18770 ;;		Unchanged: 0/0
 18771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18776 ;;Total ram usage:        0 bytes
 18777 ;; Hardware stack levels used:    1
 18778 ;; Hardware stack levels required when called:   10
 18779 ;; This function calls:
 18780 ;;		_fputc
 18781 ;;		_fputs
 18782 ;;		_strlen
 18783 ;; This function is called by:
 18784 ;;		_ctoa
 18785 ;;		_dtoa
 18786 ;;		_efgtoa
 18787 ;;		_xtoa
 18788 ;; This function uses a reentrant model
 18789 ;;
 18790                           
 18791                           	psect	text62
 18792  0163AE                     __ptext62:
 18793                           	opt callstack 0
 18794  0163AE                     _pad:
 18795                           	opt callstack 0
 18796                           
 18797                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18798  0163AE  52E6               	movf	postinc1,f,c
 18799  0163B0  52E6               	movf	postinc1,f,c
 18800  0163B2  52E6               	movf	postinc1,f,c
 18801  0163B4  52E6               	movf	postinc1,f,c
 18802                           
 18803                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 18804                           
 18805                           ;incstack = 0
 18806  0163B6  A022               	btfss	_flags^0,0,c
 18807  0163B8  D010               	goto	l8961
 18808                           
 18809                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 18810                           ;stkvar	_fp @ sp[(-4)+-2]
 18811  0163BA  0EFA               	movlw	-6
 18812  0163BC  006F FF8F FFE6     	movff	plusw1,postinc1
 18813  0163C2  006F FF8F FFE6     	movff	plusw1,postinc1
 18814                           
 18815                           ;stkvar	_buf @ sp[(-6)+-4]
 18816  0163C8  0EF6               	movlw	-10
 18817  0163CA  006F FF8F FFE6     	movff	plusw1,postinc1
 18818  0163D0  006F FF8F FFE6     	movff	plusw1,postinc1
 18819  0163D6  ECB4  F0B6         	call	_fputs	;wreg free
 18820  0163DA                     l8961:
 18821                           
 18822                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 18823                           ;stkvar	_p @ sp[(-4)+-6]
 18824  0163DA  0EF7               	movlw	-9
 18825  0163DC  BEE3               	btfsc	plusw1,7,c
 18826  0163DE  D011               	goto	l8965
 18827                           
 18828                           ;stkvar	_p @ sp[(-4)+-6]
 18829                           ;stkvar	_w @ sp[(-4)+0]
 18830  0163E0  0EF6               	movlw	-10
 18831  0163E2  006F FF8C  F035    	movff	plusw1,btemp
 18832  0163E8  0EFC               	movlw	-4
 18833  0163EA  0060  F0D7  FFE3   	movff	btemp,plusw1
 18834  0163F0  0EF7               	movlw	-9
 18835  0163F2  006F FF8C  F035    	movff	plusw1,btemp
 18836  0163F8  0EFD               	movlw	-3
 18837  0163FA  0060  F0D7  FFE3   	movff	btemp,plusw1
 18838  016400  D004               	goto	l1740
 18839  016402                     l8965:
 18840                           
 18841                           ;stkvar	_w @ sp[(-4)+0]
 18842  016402  0EFC               	movlw	-4
 18843  016404  6AE3               	clrf	plusw1,c
 18844  016406  0EFD               	movlw	-3
 18845  016408  6AE3               	clrf	plusw1,c
 18846  01640A                     l1740:
 18847                           
 18848                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 18849                           ;stkvar	_i @ sp[(-4)+2]
 18850  01640A  0EFE               	movlw	-2
 18851  01640C  6AE3               	clrf	plusw1,c
 18852  01640E  0EFF               	movlw	-1
 18853  016410  6AE3               	clrf	plusw1,c
 18854                           
 18855                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18856  016412  D01E               	goto	l8971
 18857  016414                     l8967:
 18858                           
 18859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 18860                           ;stkvar	_fp @ sp[(-4)+-2]
 18861  016414  0EFA               	movlw	-6
 18862  016416  006F FF8F FFE6     	movff	plusw1,postinc1
 18863  01641C  006F FF8F FFE6     	movff	plusw1,postinc1
 18864  016422  0E20               	movlw	32
 18865  016424  6EE6               	movwf	postinc1,c
 18866  016426  0E00               	movlw	0
 18867  016428  6EE6               	movwf	postinc1,c
 18868  01642A  ECB9  F0B0         	call	_fputc	;wreg free
 18869                           
 18870                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 18871                           ;stkvar	_i @ sp[(-4)+2]
 18872  01642E  0EFE               	movlw	-2
 18873  016430  50E3               	movf	plusw1,w,c
 18874  016432  0F01               	addlw	1
 18875  016434  6E35               	movwf	btemp^0,c
 18876  016436  0EFE               	movlw	-2
 18877  016438  0060  F0D7  FFE3   	movff	btemp,plusw1
 18878  01643E  6A35               	clrf	btemp^0,c
 18879  016440  0EFF               	movlw	-1
 18880  016442  50E3               	movf	plusw1,w,c
 18881  016444  2035               	addwfc	btemp^0,w,c
 18882  016446  6E35               	movwf	btemp^0,c
 18883  016448  0EFF               	movlw	-1
 18884  01644A  0060  F0D7  FFE3   	movff	btemp,plusw1
 18885  016450                     l8971:
 18886                           
 18887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18888                           ;stkvar	_w @ sp[(-4)+0]
 18889                           ;stkvar	_i @ sp[(-4)+2]
 18890  016450  50E1               	movf	fsr1l,w,c
 18891  016452  0FFE               	addlw	-2
 18892  016454  6ED9               	movwf	fsr2l,c
 18893  016456  50E2               	movf	fsr1h,w,c
 18894  016458  6EDA               	movwf	fsr2h,c
 18895  01645A  0EFF               	movlw	255
 18896  01645C  22DA               	addwfc	fsr2h,f,c
 18897  01645E  0EFC               	movlw	-4
 18898  016460  50E3               	movf	plusw1,w,c
 18899  016462  5CDE               	subwf	postinc2,w,c
 18900  016464  50DE               	movf	postinc2,w,c
 18901  016466  0A80               	xorlw	128
 18902  016468  6E35               	movwf	btemp^0,c
 18903  01646A  0EFD               	movlw	-3
 18904  01646C  50E3               	movf	plusw1,w,c
 18905  01646E  0A80               	xorlw	128
 18906  016470  5835               	subwfb	btemp^0,w,c
 18907  016472  A0D8               	btfss	status,0,c
 18908  016474  D7CF               	goto	l8967
 18909                           
 18910                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 18911  016476  B022               	btfsc	_flags^0,0,c
 18912  016478  D010               	goto	l8975
 18913                           
 18914                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 18915                           ;stkvar	_fp @ sp[(-4)+-2]
 18916  01647A  0EFA               	movlw	-6
 18917  01647C  006F FF8F FFE6     	movff	plusw1,postinc1
 18918  016482  006F FF8F FFE6     	movff	plusw1,postinc1
 18919                           
 18920                           ;stkvar	_buf @ sp[(-6)+-4]
 18921  016488  0EF6               	movlw	-10
 18922  01648A  006F FF8F FFE6     	movff	plusw1,postinc1
 18923  016490  006F FF8F FFE6     	movff	plusw1,postinc1
 18924  016496  ECB4  F0B6         	call	_fputs	;wreg free
 18925  01649A                     l8975:
 18926                           
 18927                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 18928                           ;stkvar	_w @ sp[(-4)+0]
 18929                           ;stkvar	_buf @ sp[(-4)+-4]
 18930  01649A  0EF8               	movlw	-8
 18931  01649C  006F FF8F FFE6     	movff	plusw1,postinc1
 18932  0164A2  006F FF8F FFE6     	movff	plusw1,postinc1
 18933  0164A8  EC63  F0B6         	call	_strlen	;wreg free
 18934  0164AC  0EFC               	movlw	-4
 18935  0164AE  50E3               	movf	plusw1,w,c
 18936  0164B0  2635               	addwf	btemp^0,f,c
 18937  0164B2  0EFD               	movlw	-3
 18938  0164B4  50E3               	movf	plusw1,w,c
 18939  0164B6  2236               	addwfc	(btemp+1)^0,f,c
 18940                           
 18941                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 18942  0164B8  0EF6               	movlw	246
 18943  0164BA  26E1               	addwf	fsr1l,f,c
 18944  0164BC  0EFF               	movlw	255
 18945  0164BE  22E2               	addwfc	fsr1h,f,c
 18946  0164C0  0012               	return		;funcret
 18947  0164C2                     __end_of_pad:
 18948                           	opt callstack 0
 18949                           
 18950 ;; *************** function _strlen *****************
 18951 ;; Defined at:
 18952 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 18953 ;; Parameters:    Size  Location     Type
 18954 ;;  s               2  [STACK] PTR const unsigned char 
 18955 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 18956 ;;		 -> STR_15(9), STR_14(12), D.lcd(216), D(218), 
 18957 ;;		 -> T(144), STR_7(4), STR_3(4), V(171), 
 18958 ;; Auto vars:     Size  Location     Type
 18959 ;;  a               2  [STACK] PTR const unsigned char 
 18960 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 18961 ;;		 -> STR_15(9), STR_14(12), D.lcd(216), D(218), 
 18962 ;;		 -> T(144), STR_7(4), STR_3(4), V(171), 
 18963 ;; Return value:  Size  Location     Type
 18964 ;;                  2  [STACK] unsigned int 
 18965 ;; Registers used:
 18966 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 18967 ;; Tracked objects:
 18968 ;;		On entry : 0/0
 18969 ;;		On exit  : 0/0
 18970 ;;		Unchanged: 0/0
 18971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18976 ;;Total ram usage:        0 bytes
 18977 ;; Hardware stack levels used:    1
 18978 ;; Hardware stack levels required when called:    6
 18979 ;; This function calls:
 18980 ;;		Nothing
 18981 ;; This function is called by:
 18982 ;;		_eaDogM_WriteString
 18983 ;;		_pad
 18984 ;;		_stoa
 18985 ;; This function uses a reentrant model
 18986 ;;
 18987                           
 18988                           	psect	text63
 18989  016CC6                     __ptext63:
 18990                           	opt callstack 0
 18991  016CC6                     _strlen:
 18992                           	opt callstack 0
 18993                           
 18994                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18995  016CC6  52E6               	movf	postinc1,f,c
 18996  016CC8  52E6               	movf	postinc1,f,c
 18997                           
 18998                           ;stkvar	_s @ sp[(-2)+-2]
 18999                           
 19000                           ;incstack = 0
 19001  016CCA  0EFC               	movlw	-4
 19002  016CCC  006F FF8C  F03F    	movff	plusw1,btemp+10
 19003  016CD2  0EFD               	movlw	-3
 19004  016CD4  006F FF8C  F040    	movff	plusw1,btemp+11
 19005                           
 19006                           ;stkvar	_a @ sp[(-2)+0]
 19007  016CDA  0EFF               	movlw	-1
 19008  016CDC  0060  F103  FFE3   	movff	btemp+11,plusw1
 19009  016CE2  0EFE               	movlw	-2
 19010  016CE4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 19011  016CEA  D011               	goto	l5939
 19012  016CEC                     l5937:
 19013                           
 19014                           ;stkvar	_s @ sp[(-2)+-2]
 19015  016CEC  0EFC               	movlw	-4
 19016  016CEE  50E3               	movf	plusw1,w,c
 19017  016CF0  0F01               	addlw	1
 19018  016CF2  6E35               	movwf	btemp^0,c
 19019  016CF4  0EFC               	movlw	-4
 19020  016CF6  0060  F0D7  FFE3   	movff	btemp,plusw1
 19021  016CFC  6A35               	clrf	btemp^0,c
 19022  016CFE  0EFD               	movlw	-3
 19023  016D00  50E3               	movf	plusw1,w,c
 19024  016D02  2035               	addwfc	btemp^0,w,c
 19025  016D04  6E35               	movwf	btemp^0,c
 19026  016D06  0EFD               	movlw	-3
 19027  016D08  0060  F0D7  FFE3   	movff	btemp,plusw1
 19028  016D0E                     l5939:
 19029                           
 19030                           ;stkvar	_s @ sp[(-2)+-2]
 19031  016D0E  0EFC               	movlw	-4
 19032  016D10  006F FF8F FFF6     	movff	plusw1,tblptrl
 19033  016D16  0EFD               	movlw	-3
 19034  016D18  006F FF8F FFF7     	movff	plusw1,tblptrh
 19035  016D1E  0E00               	movlw	low (__mediumconst shr (0+16))
 19036  016D20  6EF8               	movwf	tblptru,c
 19037  016D22  0E1F               	movlw	(high __ramtop+-1)
 19038  016D24  64F7               	cpfsgt	tblptrh,c
 19039  016D26  D003               	bra	u4327
 19040  016D28  0008               	tblrd		*
 19041  016D2A  50F5               	movf	tablat,w,c
 19042  016D2C  D007               	bra	u4320
 19043  016D2E                     u4327:
 19044  016D2E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19045  016D34  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19046  016D3A  50EF               	movf	indf0,w,c
 19047  016D3C                     u4320:
 19048  016D3C  0900               	iorlw	0
 19049  016D3E  A4D8               	btfss	status,2,c
 19050  016D40  D7D5               	goto	l5937
 19051                           
 19052                           ;stkvar	_a @ sp[(-2)+0]
 19053                           ;stkvar	_s @ sp[(-2)+-2]
 19054  016D42  0EFC               	movlw	-4
 19055  016D44  006F FF8C  F035    	movff	plusw1,btemp
 19056  016D4A  0EFD               	movlw	-3
 19057  016D4C  006F FF8C  F036    	movff	plusw1,btemp+1
 19058  016D52  0EFE               	movlw	-2
 19059  016D54  50E3               	movf	plusw1,w,c
 19060  016D56  5E35               	subwf	btemp^0,f,c
 19061  016D58  0EFF               	movlw	-1
 19062  016D5A  50E3               	movf	plusw1,w,c
 19063  016D5C  5A36               	subwfb	(btemp+1)^0,f,c
 19064                           
 19065                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 19066  016D5E  52E5               	movf	postdec1,f,c
 19067  016D60  52E5               	movf	postdec1,f,c
 19068  016D62  52E5               	movf	postdec1,f,c
 19069  016D64  52E5               	movf	postdec1,f,c
 19070  016D66  0012               	return		;funcret
 19071  016D68                     __end_of_strlen:
 19072                           	opt callstack 0
 19073                           
 19074 ;; *************** function _fputs *****************
 19075 ;; Defined at:
 19076 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 19077 ;; Parameters:    Size  Location     Type
 19078 ;;  s               2  [STACK] PTR const unsigned char 
 19079 ;;		 -> dbuf(80), 
 19080 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19081 ;;		 -> f(6), NULL(0), 
 19082 ;; Auto vars:     Size  Location     Type
 19083 ;;  i               2  [STACK] int 
 19084 ;;  c               1  [STACK] unsigned char 
 19085 ;; Return value:  Size  Location     Type
 19086 ;;                  2  [STACK] int 
 19087 ;; Registers used:
 19088 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 19089 ;; Tracked objects:
 19090 ;;		On entry : 0/1
 19091 ;;		On exit  : 0/0
 19092 ;;		Unchanged: 0/0
 19093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19098 ;;Total ram usage:        0 bytes
 19099 ;; Hardware stack levels used:    1
 19100 ;; Hardware stack levels required when called:    9
 19101 ;; This function calls:
 19102 ;;		_fputc
 19103 ;; This function is called by:
 19104 ;;		_pad
 19105 ;; This function uses a reentrant model
 19106 ;;
 19107                           
 19108                           	psect	text64
 19109  016D68                     __ptext64:
 19110                           	opt callstack 0
 19111  016D68                     _fputs:
 19112                           	opt callstack 0
 19113                           
 19114                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19115  016D68  52E6               	movf	postinc1,f,c
 19116  016D6A  52E6               	movf	postinc1,f,c
 19117  016D6C  52E6               	movf	postinc1,f,c
 19118                           
 19119                           ;stkvar	_i @ sp[(-3)+0]
 19120                           
 19121                           ;incstack = 0
 19122  016D6E  0EFD               	movlw	-3
 19123  016D70  6AE3               	clrf	plusw1,c
 19124  016D72  0EFE               	movlw	-2
 19125  016D74  6AE3               	clrf	plusw1,c
 19126  016D76  D01F               	goto	l8955
 19127  016D78                     l8951:
 19128                           
 19129                           ;stkvar	_fp @ sp[(-3)+-4]
 19130  016D78  0EF9               	movlw	-7
 19131  016D7A  006F FF8F FFE6     	movff	plusw1,postinc1
 19132  016D80  006F FF8F FFE6     	movff	plusw1,postinc1
 19133                           
 19134                           ;stkvar	_c @ sp[(-5)+2]
 19135  016D86  0EFD               	movlw	-3
 19136  016D88  50E3               	movf	plusw1,w,c
 19137  016D8A  6EE6               	movwf	postinc1,c
 19138  016D8C  0E00               	movlw	0
 19139  016D8E  6EE6               	movwf	postinc1,c
 19140  016D90  ECB9  F0B0         	call	_fputc	;wreg free
 19141                           
 19142                           ;stkvar	_i @ sp[(-3)+0]
 19143  016D94  0EFD               	movlw	-3
 19144  016D96  50E3               	movf	plusw1,w,c
 19145  016D98  0F01               	addlw	1
 19146  016D9A  6E35               	movwf	btemp^0,c
 19147  016D9C  0EFD               	movlw	-3
 19148  016D9E  0060  F0D7  FFE3   	movff	btemp,plusw1
 19149  016DA4  6A35               	clrf	btemp^0,c
 19150  016DA6  0EFE               	movlw	-2
 19151  016DA8  50E3               	movf	plusw1,w,c
 19152  016DAA  2035               	addwfc	btemp^0,w,c
 19153  016DAC  6E35               	movwf	btemp^0,c
 19154  016DAE  0EFE               	movlw	-2
 19155  016DB0  0060  F0D7  FFE3   	movff	btemp,plusw1
 19156  016DB6                     l8955:
 19157                           
 19158                           ;stkvar	_i @ sp[(-3)+0]
 19159  016DB6  0EFD               	movlw	-3
 19160  016DB8  006F FF8C  F03F    	movff	plusw1,btemp+10
 19161  016DBE  0EFE               	movlw	-2
 19162  016DC0  006F FF8C  F040    	movff	plusw1,btemp+11
 19163                           
 19164                           ;stkvar	_s @ sp[(-3)+-2]
 19165  016DC6  0EFB               	movlw	-5
 19166  016DC8  006F FF8C  F03D    	movff	plusw1,btemp+8
 19167  016DCE  0EFC               	movlw	-4
 19168  016DD0  006F FF8C  F03E    	movff	plusw1,btemp+9
 19169  016DD6  503F               	movf	(btemp+10)^0,w,c
 19170  016DD8  243D               	addwf	(btemp+8)^0,w,c
 19171  016DDA  6ED9               	movwf	fsr2l,c
 19172  016DDC  5040               	movf	(btemp+11)^0,w,c
 19173  016DDE  203E               	addwfc	(btemp+9)^0,w,c
 19174  016DE0  6EDA               	movwf	fsr2h,c
 19175  016DE2  50DF               	movf	indf2,w,c
 19176  016DE4  6E40               	movwf	(btemp+11)^0,c
 19177                           
 19178                           ;stkvar	_c @ sp[(-3)+2]
 19179  016DE6  0EFF               	movlw	-1
 19180  016DE8  0060  F103  FFE3   	movff	btemp+11,plusw1
 19181  016DEE  0EFF               	movlw	-1
 19182  016DF0  50E3               	movf	plusw1,w,c
 19183  016DF2  A4D8               	btfss	status,2,c
 19184  016DF4  D7C1               	goto	l8951
 19185                           
 19186                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19187  016DF6  0EF9               	movlw	249
 19188  016DF8  26E1               	addwf	fsr1l,f,c
 19189  016DFA  0EFF               	movlw	255
 19190  016DFC  22E2               	addwfc	fsr1h,f,c
 19191  016DFE  0012               	return		;funcret
 19192  016E00                     __end_of_fputs:
 19193                           	opt callstack 0
 19194                           
 19195 ;; *************** function _fputc *****************
 19196 ;; Defined at:
 19197 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 19198 ;; Parameters:    Size  Location     Type
 19199 ;;  c               2  [STACK] int 
 19200 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19201 ;;		 -> f(6), NULL(0), 
 19202 ;; Auto vars:     Size  Location     Type
 19203 ;;		None
 19204 ;; Return value:  Size  Location     Type
 19205 ;;                  2  [STACK] int 
 19206 ;; Registers used:
 19207 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 19208 ;; Tracked objects:
 19209 ;;		On entry : 0/4
 19210 ;;		On exit  : 0/0
 19211 ;;		Unchanged: 0/0
 19212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19217 ;;Total ram usage:        0 bytes
 19218 ;; Hardware stack levels used:    1
 19219 ;; Hardware stack levels required when called:    8
 19220 ;; This function calls:
 19221 ;;		_putch
 19222 ;; This function is called by:
 19223 ;;		_pad
 19224 ;;		_stoa
 19225 ;;		_vfpfcnvrt
 19226 ;;		_fputs
 19227 ;; This function uses a reentrant model
 19228 ;;
 19229                           
 19230                           	psect	text65
 19231  016172                     __ptext65:
 19232                           	opt callstack 0
 19233  016172                     _fputc:
 19234                           	opt callstack 13
 19235                           
 19236                           ;stkvar	_fp @ sp[(0)+-4]
 19237                           
 19238                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19239                           ;incstack = 0
 19240  016172  0EFC               	movlw	-4
 19241  016174  006F FF8C  F035    	movff	plusw1,btemp
 19242  01617A  0EFD               	movlw	-3
 19243  01617C  50E3               	movf	plusw1,w,c
 19244  01617E  1035               	iorwf	btemp^0,w,c
 19245  016180  B4D8               	btfsc	status,2,c
 19246  016182  D009               	goto	u8480
 19247                           
 19248                           ;stkvar	_fp @ sp[(0)+-4]
 19249  016184  0EFC               	movlw	-4
 19250  016186  006F FF8C  F035    	movff	plusw1,btemp
 19251  01618C  0EFD               	movlw	-3
 19252  01618E  50E3               	movf	plusw1,w,c
 19253  016190  1035               	iorwf	btemp^0,w,c
 19254  016192  A4D8               	btfss	status,2,c
 19255  016194  D006               	goto	l8939
 19256  016196                     u8480:
 19257                           
 19258                           ;stkvar	_c @ sp[(0)+-2]
 19259  016196  0EFE               	movlw	-2
 19260  016198  50E3               	movf	plusw1,w,c
 19261  01619A  6EE6               	movwf	postinc1,c
 19262  01619C  EC58  F0C0         	call	_putch	;wreg free
 19263  0161A0  D075               	goto	l2758
 19264  0161A2                     l8939:
 19265                           
 19266                           ;stkvar	_fp @ sp[(0)+-4]
 19267  0161A2  0EFC               	movlw	-4
 19268  0161A4  006F FF8C  F03F    	movff	plusw1,btemp+10
 19269  0161AA  0EFD               	movlw	-3
 19270  0161AC  006F FF8C  F040    	movff	plusw1,btemp+11
 19271  0161B2  0E04               	movlw	4
 19272  0161B4  243F               	addwf	(btemp+10)^0,w,c
 19273  0161B6  6ED9               	movwf	fsr2l,c
 19274  0161B8  0E00               	movlw	0
 19275  0161BA  2040               	addwfc	(btemp+11)^0,w,c
 19276  0161BC  6EDA               	movwf	fsr2h,c
 19277  0161BE  50DE               	movf	postinc2,w,c
 19278  0161C0  10DE               	iorwf	postinc2,w,c
 19279  0161C2  B4D8               	btfsc	status,2,c
 19280  0161C4  D026               	goto	u8500
 19281                           
 19282                           ;stkvar	_fp @ sp[(0)+-4]
 19283  0161C6  0EFC               	movlw	-4
 19284  0161C8  006F FF8C  F03F    	movff	plusw1,btemp+10
 19285  0161CE  0EFD               	movlw	-3
 19286  0161D0  006F FF8C  F040    	movff	plusw1,btemp+11
 19287  0161D6  0E04               	movlw	4
 19288  0161D8  243F               	addwf	(btemp+10)^0,w,c
 19289  0161DA  6ED9               	movwf	fsr2l,c
 19290  0161DC  0E00               	movlw	0
 19291  0161DE  2040               	addwfc	(btemp+11)^0,w,c
 19292  0161E0  6EDA               	movwf	fsr2h,c
 19293                           
 19294                           ;stkvar	_fp @ sp[(0)+-4]
 19295  0161E2  0EFC               	movlw	-4
 19296  0161E4  006F FF8C  F03F    	movff	plusw1,btemp+10
 19297  0161EA  0EFD               	movlw	-3
 19298  0161EC  006F FF8C  F040    	movff	plusw1,btemp+11
 19299  0161F2  0E02               	movlw	2
 19300  0161F4  243F               	addwf	(btemp+10)^0,w,c
 19301  0161F6  6EE9               	movwf	fsr0l,c
 19302  0161F8  0E00               	movlw	0
 19303  0161FA  2040               	addwfc	(btemp+11)^0,w,c
 19304  0161FC  6EEA               	movwf	fsr0h,c
 19305  0161FE  50DE               	movf	postinc2,w,c
 19306  016200  5CEE               	subwf	postinc0,w,c
 19307  016202  50EE               	movf	postinc0,w,c
 19308  016204  0A80               	xorlw	128
 19309  016206  6E35               	movwf	btemp^0,c
 19310  016208  50DE               	movf	postinc2,w,c
 19311  01620A  0A80               	xorlw	128
 19312  01620C  5835               	subwfb	btemp^0,w,c
 19313  01620E  B0D8               	btfsc	status,0,c
 19314  016210  D03D               	goto	l2758
 19315  016212                     u8500:
 19316                           
 19317                           ;stkvar	_c @ sp[(0)+-2]
 19318                           ;stkvar	_fp @ sp[(0)+-4]
 19319  016212  0EFC               	movlw	-4
 19320  016214  006F FF8C  F03F    	movff	plusw1,btemp+10
 19321  01621A  0EFD               	movlw	-3
 19322  01621C  006F FF8C  F040    	movff	plusw1,btemp+11
 19323  016222  0E02               	movlw	2
 19324  016224  243F               	addwf	(btemp+10)^0,w,c
 19325  016226  6ED9               	movwf	fsr2l,c
 19326  016228  0E00               	movlw	0
 19327  01622A  2040               	addwfc	(btemp+11)^0,w,c
 19328  01622C  6EDA               	movwf	fsr2h,c
 19329  01622E  006F FF78  F03F    	movff	postinc2,btemp+10
 19330  016234  006F FF74  F040    	movff	postdec2,btemp+11
 19331                           
 19332                           ;stkvar	_fp @ sp[(0)+-4]
 19333  01623A  0EFC               	movlw	-4
 19334  01623C  006F FF8F FFD9     	movff	plusw1,fsr2l
 19335  016242  0EFD               	movlw	-3
 19336  016244  006F FF8F FFDA     	movff	plusw1,fsr2h
 19337  01624A  006F FF78  F03D    	movff	postinc2,btemp+8
 19338  016250  006F FF74  F03E    	movff	postdec2,btemp+9
 19339  016256  503F               	movf	(btemp+10)^0,w,c
 19340  016258  243D               	addwf	(btemp+8)^0,w,c
 19341  01625A  6ED9               	movwf	fsr2l,c
 19342  01625C  5040               	movf	(btemp+11)^0,w,c
 19343  01625E  203E               	addwfc	(btemp+9)^0,w,c
 19344  016260  6EDA               	movwf	fsr2h,c
 19345  016262  0EFE               	movlw	-2
 19346  016264  006F FF8F FFDF     	movff	plusw1,indf2
 19347                           
 19348                           ;stkvar	_fp @ sp[(0)+-4]
 19349  01626A  0EFC               	movlw	-4
 19350  01626C  006F FF8C  F03F    	movff	plusw1,btemp+10
 19351  016272  0EFD               	movlw	-3
 19352  016274  006F FF8C  F040    	movff	plusw1,btemp+11
 19353  01627A  0E02               	movlw	2
 19354  01627C  243F               	addwf	(btemp+10)^0,w,c
 19355  01627E  6ED9               	movwf	fsr2l,c
 19356  016280  0E00               	movlw	0
 19357  016282  2040               	addwfc	(btemp+11)^0,w,c
 19358  016284  6EDA               	movwf	fsr2h,c
 19359  016286  2ADE               	incf	postinc2,f,c
 19360  016288  0E00               	movlw	0
 19361  01628A  22DD               	addwfc	postdec2,f,c
 19362  01628C                     l2758:
 19363                           
 19364                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19365  01628C  52E5               	movf	postdec1,f,c
 19366  01628E  52E5               	movf	postdec1,f,c
 19367  016290  52E5               	movf	postdec1,f,c
 19368  016292  52E5               	movf	postdec1,f,c
 19369  016294  0012               	return		;funcret
 19370  016296                     __end_of_fputc:
 19371                           	opt callstack 0
 19372                           
 19373 ;; *************** function _putch *****************
 19374 ;; Defined at:
 19375 ;;		line 155 in file "eadog.c"
 19376 ;; Parameters:    Size  Location     Type
 19377 ;;  c               1  [STACK] unsigned char 
 19378 ;; Auto vars:     Size  Location     Type
 19379 ;;		None
 19380 ;; Return value:  Size  Location     Type
 19381 ;;                  1  [STACK] void 
 19382 ;; Registers used:
 19383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19384 ;; Tracked objects:
 19385 ;;		On entry : 0/4
 19386 ;;		On exit  : 0/0
 19387 ;;		Unchanged: 0/0
 19388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19393 ;;Total ram usage:        0 bytes
 19394 ;; Hardware stack levels used:    1
 19395 ;; Hardware stack levels required when called:    7
 19396 ;; This function calls:
 19397 ;;		_ringBufS_put_dma
 19398 ;; This function is called by:
 19399 ;;		_fputc
 19400 ;; This function uses a reentrant model
 19401 ;;
 19402                           
 19403                           	psect	text66
 19404  0180B0                     __ptext66:
 19405                           	opt callstack 0
 19406  0180B0                     _putch:
 19407                           	opt callstack 13
 19408                           
 19409                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 19410                           ;stkvar	_c @ sp[(0)+-1]
 19411                           
 19412                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19413                           ;incstack = 0
 19414  0180B0  0EFF               	movlw	-1
 19415  0180B2  50E3               	movf	plusw1,w,c
 19416  0180B4  6EE6               	movwf	postinc1,c
 19417  0180B6  0060  F307  FFE6   	movff	_spi_link+6,postinc1
 19418  0180BC  0060  F30B  FFE6   	movff	_spi_link+7,postinc1
 19419  0180C2  EC67  F0B5         	call	_ringBufS_put_dma	;wreg free
 19420                           
 19421                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 19422  0180C6  52E5               	movf	postdec1,f,c
 19423  0180C8  0012               	return		;funcret
 19424  0180CA                     __end_of_putch:
 19425                           	opt callstack 0
 19426                           
 19427 ;; *************** function _ringBufS_put_dma *****************
 19428 ;; Defined at:
 19429 ;;		line 67 in file "ringbufs.c"
 19430 ;; Parameters:    Size  Location     Type
 19431 ;;  _this           2  [STACK] PTR struct ringBufS_t
 19432 ;;		 -> ring_buf1(67), 
 19433 ;;  c               1  [STACK] const unsigned char 
 19434 ;; Auto vars:     Size  Location     Type
 19435 ;;		None
 19436 ;; Return value:  Size  Location     Type
 19437 ;;                  1  [STACK] void 
 19438 ;; Registers used:
 19439 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19440 ;; Tracked objects:
 19441 ;;		On entry : 0/4
 19442 ;;		On exit  : 0/0
 19443 ;;		Unchanged: 0/0
 19444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19449 ;;Total ram usage:        0 bytes
 19450 ;; Hardware stack levels used:    1
 19451 ;; Hardware stack levels required when called:    6
 19452 ;; This function calls:
 19453 ;;		Nothing
 19454 ;; This function is called by:
 19455 ;;		_putch
 19456 ;; This function uses a reentrant model
 19457 ;;
 19458                           
 19459                           	psect	text67
 19460  016ACE                     __ptext67:
 19461                           	opt callstack 0
 19462  016ACE                     _ringBufS_put_dma:
 19463                           	opt callstack 13
 19464                           
 19465                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 19466                           ;stkvar	__this @ sp[(0)+-2]
 19467                           
 19468                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19469                           ;incstack = 0
 19470  016ACE  0EFE               	movlw	-2
 19471  016AD0  006F FF8C  F03F    	movff	plusw1,btemp+10
 19472  016AD6  0EFF               	movlw	-1
 19473  016AD8  006F FF8C  F040    	movff	plusw1,btemp+11
 19474  016ADE  0E42               	movlw	66
 19475  016AE0  243F               	addwf	(btemp+10)^0,w,c
 19476  016AE2  6ED9               	movwf	fsr2l,c
 19477  016AE4  0E00               	movlw	0
 19478  016AE6  2040               	addwfc	(btemp+11)^0,w,c
 19479  016AE8  6EDA               	movwf	fsr2h,c
 19480  016AEA  0E40               	movlw	64
 19481  016AEC  60DF               	cpfslt	indf2,c
 19482  016AEE  D040               	goto	l1462
 19483                           
 19484                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 19485                           ;stkvar	_c @ sp[(0)+-3]
 19486                           ;stkvar	__this @ sp[(0)+-2]
 19487  016AF0  0EFE               	movlw	-2
 19488  016AF2  006F FF8C  F03F    	movff	plusw1,btemp+10
 19489  016AF8  0EFF               	movlw	-1
 19490  016AFA  006F FF8C  F040    	movff	plusw1,btemp+11
 19491  016B00  0E40               	movlw	64
 19492  016B02  243F               	addwf	(btemp+10)^0,w,c
 19493  016B04  6ED9               	movwf	fsr2l,c
 19494  016B06  0E00               	movlw	0
 19495  016B08  2040               	addwfc	(btemp+11)^0,w,c
 19496  016B0A  6EDA               	movwf	fsr2h,c
 19497  016B0C  50DF               	movf	indf2,w,c
 19498  016B0E  6E40               	movwf	(btemp+11)^0,c
 19499                           
 19500                           ;stkvar	__this @ sp[(0)+-2]
 19501  016B10  0EFE               	movlw	-2
 19502  016B12  006F FF8C  F03D    	movff	plusw1,btemp+8
 19503  016B18  0EFF               	movlw	-1
 19504  016B1A  006F FF8C  F03E    	movff	plusw1,btemp+9
 19505  016B20  5040               	movf	(btemp+11)^0,w,c
 19506  016B22  243D               	addwf	(btemp+8)^0,w,c
 19507  016B24  6ED9               	movwf	fsr2l,c
 19508  016B26  0E00               	movlw	0
 19509  016B28  203E               	addwfc	(btemp+9)^0,w,c
 19510  016B2A  6EDA               	movwf	fsr2h,c
 19511  016B2C  0EFD               	movlw	-3
 19512  016B2E  006F FF8F FFDF     	movff	plusw1,indf2
 19513                           
 19514                           ;ringbufs.c: 71:   ++_this->head;
 19515                           ;stkvar	__this @ sp[(0)+-2]
 19516  016B34  0EFE               	movlw	-2
 19517  016B36  006F FF8C  F03F    	movff	plusw1,btemp+10
 19518  016B3C  0EFF               	movlw	-1
 19519  016B3E  006F FF8C  F040    	movff	plusw1,btemp+11
 19520  016B44  0E40               	movlw	64
 19521  016B46  243F               	addwf	(btemp+10)^0,w,c
 19522  016B48  6ED9               	movwf	fsr2l,c
 19523  016B4A  0E00               	movlw	0
 19524  016B4C  2040               	addwfc	(btemp+11)^0,w,c
 19525  016B4E  6EDA               	movwf	fsr2h,c
 19526  016B50  2ADF               	incf	indf2,f,c
 19527                           
 19528                           ;ringbufs.c: 72:   ++_this->count;
 19529                           ;stkvar	__this @ sp[(0)+-2]
 19530  016B52  0EFE               	movlw	-2
 19531  016B54  006F FF8C  F03F    	movff	plusw1,btemp+10
 19532  016B5A  0EFF               	movlw	-1
 19533  016B5C  006F FF8C  F040    	movff	plusw1,btemp+11
 19534  016B62  0E42               	movlw	66
 19535  016B64  243F               	addwf	(btemp+10)^0,w,c
 19536  016B66  6ED9               	movwf	fsr2l,c
 19537  016B68  0E00               	movlw	0
 19538  016B6A  2040               	addwfc	(btemp+11)^0,w,c
 19539  016B6C  6EDA               	movwf	fsr2h,c
 19540  016B6E  2ADF               	incf	indf2,f,c
 19541  016B70                     l1462:
 19542                           
 19543                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 19544  016B70  52E5               	movf	postdec1,f,c
 19545  016B72  52E5               	movf	postdec1,f,c
 19546  016B74  52E5               	movf	postdec1,f,c
 19547  016B76  0012               	return		;funcret
 19548  016B78                     __end_of_ringBufS_put_dma:
 19549                           	opt callstack 0
 19550                           
 19551 ;; *************** function _atoi *****************
 19552 ;; Defined at:
 19553 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 19554 ;; Parameters:    Size  Location     Type
 19555 ;;  s               2  [STACK] PTR const unsigned char 
 19556 ;;		 -> STR_31(3), STR_30(3), STR_29(19), STR_28(19), 
 19557 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
 19558 ;;		 -> STR_23(24), STR_22(15), STR_21(15), STR_20(15), 
 19559 ;;		 -> STR_19(10), STR_18(10), STR_17(19), STR_16(19), 
 19560 ;;		 -> STR_13(3), STR_12(3), STR_11(3), STR_10(13), 
 19561 ;;		 -> STR_9(13), STR_8(17), STR_6(15), STR_5(17), 
 19562 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
 19563 ;; Auto vars:     Size  Location     Type
 19564 ;;  n               2  [STACK] int 
 19565 ;;  neg             2  [STACK] int 
 19566 ;; Return value:  Size  Location     Type
 19567 ;;                  2  [STACK] int 
 19568 ;; Registers used:
 19569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 19570 ;; Tracked objects:
 19571 ;;		On entry : 0/4
 19572 ;;		On exit  : 0/0
 19573 ;;		Unchanged: 0/0
 19574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19579 ;;Total ram usage:        0 bytes
 19580 ;; Hardware stack levels used:    1
 19581 ;; Hardware stack levels required when called:    7
 19582 ;; This function calls:
 19583 ;;		_isdigit
 19584 ;;		_isspace
 19585 ;; This function is called by:
 19586 ;;		_vfpfcnvrt
 19587 ;; This function uses a reentrant model
 19588 ;;
 19589                           
 19590                           	psect	text68
 19591  014E3A                     __ptext68:
 19592                           	opt callstack 0
 19593  014E3A                     _atoi:
 19594                           	opt callstack 0
 19595                           
 19596                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19597  014E3A  0E09               	movlw	9
 19598  014E3C  26E1               	addwf	fsr1l,f,c
 19599  014E3E  0E00               	movlw	0
 19600  014E40  22E2               	addwfc	fsr1h,f,c
 19601                           
 19602                           ;stkvar	_n @ sp[(-9)+5]
 19603                           
 19604                           ;incstack = 0
 19605  014E42  0EFC               	movlw	-4
 19606  014E44  6AE3               	clrf	plusw1,c
 19607  014E46  0EFD               	movlw	-3
 19608  014E48  6AE3               	clrf	plusw1,c
 19609                           
 19610                           ;stkvar	_neg @ sp[(-9)+7]
 19611  014E4A  0EFE               	movlw	-2
 19612  014E4C  6AE3               	clrf	plusw1,c
 19613  014E4E  0EFF               	movlw	-1
 19614  014E50  6AE3               	clrf	plusw1,c
 19615  014E52  D011               	goto	l7411
 19616  014E54                     l7409:
 19617                           
 19618                           ;stkvar	_s @ sp[(-9)+-2]
 19619  014E54  0EF5               	movlw	-11
 19620  014E56  50E3               	movf	plusw1,w,c
 19621  014E58  0F01               	addlw	1
 19622  014E5A  6E35               	movwf	btemp^0,c
 19623  014E5C  0EF5               	movlw	-11
 19624  014E5E  0060  F0D7  FFE3   	movff	btemp,plusw1
 19625  014E64  6A35               	clrf	btemp^0,c
 19626  014E66  0EF6               	movlw	-10
 19627  014E68  50E3               	movf	plusw1,w,c
 19628  014E6A  2035               	addwfc	btemp^0,w,c
 19629  014E6C  6E35               	movwf	btemp^0,c
 19630  014E6E  0EF6               	movlw	-10
 19631  014E70  0060  F0D7  FFE3   	movff	btemp,plusw1
 19632  014E76                     l7411:
 19633                           
 19634                           ;stkvar	_atoi$4599 @ sp[(-9)+4]
 19635  014E76  0EFB               	movlw	-5
 19636  014E78  6AE3               	clrf	plusw1,c
 19637  014E7A  2AE3               	incf	plusw1,f,c
 19638                           
 19639                           ;stkvar	_s @ sp[(-9)+-2]
 19640  014E7C  50E1               	movf	fsr1l,w,c
 19641  014E7E  0FF5               	addlw	-11
 19642  014E80  6ED9               	movwf	fsr2l,c
 19643  014E82  50E2               	movf	fsr1h,w,c
 19644  014E84  6EDA               	movwf	fsr2h,c
 19645  014E86  0EFF               	movlw	255
 19646  014E88  22DA               	addwfc	fsr2h,f,c
 19647  014E8A  006F FF7B FFF6     	movff	postinc2,tblptrl
 19648  014E90  006F FF77 FFF7     	movff	postdec2,tblptrh
 19649  014E96                     	if	0	;tblptru may be non-zero
 19650  014E96                     	endif
 19651  014E96                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19652  014E96  0E00               	movlw	low (__mediumconst shr (0+16))
 19653  014E98  6EF8               	movwf	tblptru,c
 19654  014E9A                     	endif
 19655  014E9A  0008               	tblrd		*
 19656  014E9C  50F5               	movf	tablat,w,c
 19657  014E9E  0A20               	xorlw	32
 19658  014EA0  B4D8               	btfsc	status,2,c
 19659  014EA2  D023               	goto	l7419
 19660  014EA4  0EF7               	movlw	247
 19661  014EA6  6E3F               	movwf	(btemp+10)^0,c
 19662  014EA8  0EFF               	movlw	255
 19663  014EAA  6E40               	movwf	(btemp+11)^0,c
 19664                           
 19665                           ;stkvar	_s @ sp[(-9)+-2]
 19666  014EAC  50E1               	movf	fsr1l,w,c
 19667  014EAE  0FF5               	addlw	-11
 19668  014EB0  6ED9               	movwf	fsr2l,c
 19669  014EB2  50E2               	movf	fsr1h,w,c
 19670  014EB4  6EDA               	movwf	fsr2h,c
 19671  014EB6  0EFF               	movlw	255
 19672  014EB8  22DA               	addwfc	fsr2h,f,c
 19673  014EBA  006F FF7B FFF6     	movff	postinc2,tblptrl
 19674  014EC0  006F FF77 FFF7     	movff	postdec2,tblptrh
 19675  014EC6                     	if	0	;tblptru may be non-zero
 19676  014EC6                     	endif
 19677  014EC6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19678  014EC6  0E00               	movlw	low (__mediumconst shr (0+16))
 19679  014EC8  6EF8               	movwf	tblptru,c
 19680  014ECA                     	endif
 19681  014ECA  0008               	tblrd		*
 19682  014ECC  50F5               	movf	tablat,w,c
 19683  014ECE  6E3D               	movwf	(btemp+8)^0,c
 19684  014ED0  6A3E               	clrf	(btemp+9)^0,c
 19685  014ED2  503F               	movf	(btemp+10)^0,w,c
 19686  014ED4  263D               	addwf	(btemp+8)^0,f,c
 19687  014ED6  5040               	movf	(btemp+11)^0,w,c
 19688  014ED8  223E               	addwfc	(btemp+9)^0,f,c
 19689  014EDA  503E               	movf	(btemp+9)^0,w,c
 19690  014EDC  E104               	bnz	u7180
 19691  014EDE  0E05               	movlw	5
 19692  014EE0  5C3D               	subwf	(btemp+8)^0,w,c
 19693  014EE2  A0D8               	btfss	status,0,c
 19694  014EE4  D002               	goto	l7419
 19695  014EE6                     u7180:
 19696                           
 19697                           ;stkvar	_atoi$4599 @ sp[(-9)+4]
 19698  014EE6  0EFB               	movlw	-5
 19699  014EE8  6AE3               	clrf	plusw1,c
 19700  014EEA                     l7419:
 19701                           
 19702                           ;stkvar	_atoi$4599 @ sp[(-9)+4]
 19703  014EEA  0EFB               	movlw	-5
 19704  014EEC  50E3               	movf	plusw1,w,c
 19705  014EEE  6E3F               	movwf	(btemp+10)^0,c
 19706  014EF0  6A40               	clrf	(btemp+11)^0,c
 19707                           
 19708                           ;stkvar	_atoi$4598 @ sp[(-9)+2]
 19709  014EF2  0EF9               	movlw	-7
 19710  014EF4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 19711  014EFA  0EFA               	movlw	-6
 19712  014EFC  0060  F103  FFE3   	movff	btemp+11,plusw1
 19713                           
 19714                           ;stkvar	_atoi$4598 @ sp[(-9)+2]
 19715  014F02  0EF9               	movlw	-7
 19716  014F04  006F FF8C  F035    	movff	plusw1,btemp
 19717  014F0A  0EFA               	movlw	-6
 19718  014F0C  50E3               	movf	plusw1,w,c
 19719  014F0E  1035               	iorwf	btemp^0,w,c
 19720  014F10  B4D8               	btfsc	status,2,c
 19721  014F12  D01F               	goto	l7429
 19722  014F14  D79F               	goto	l7409
 19723  014F16                     l7425:
 19724  014F16  0E01               	movlw	1
 19725  014F18  6E3F               	movwf	(btemp+10)^0,c
 19726  014F1A  0E00               	movlw	0
 19727  014F1C  6E40               	movwf	(btemp+11)^0,c
 19728                           
 19729                           ;stkvar	_neg @ sp[(-9)+7]
 19730  014F1E  0EFE               	movlw	-2
 19731  014F20  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 19732  014F26  0EFF               	movlw	-1
 19733  014F28  0060  F103  FFE3   	movff	btemp+11,plusw1
 19734  014F2E                     l7427:
 19735                           
 19736                           ;stkvar	_s @ sp[(-9)+-2]
 19737  014F2E  0EF5               	movlw	-11
 19738  014F30  50E3               	movf	plusw1,w,c
 19739  014F32  0F01               	addlw	1
 19740  014F34  6E35               	movwf	btemp^0,c
 19741  014F36  0EF5               	movlw	-11
 19742  014F38  0060  F0D7  FFE3   	movff	btemp,plusw1
 19743  014F3E  6A35               	clrf	btemp^0,c
 19744  014F40  0EF6               	movlw	-10
 19745  014F42  50E3               	movf	plusw1,w,c
 19746  014F44  2035               	addwfc	btemp^0,w,c
 19747  014F46  6E35               	movwf	btemp^0,c
 19748  014F48  0EF6               	movlw	-10
 19749  014F4A  0060  F0D7  FFE3   	movff	btemp,plusw1
 19750  014F50  D053               	goto	l7435
 19751  014F52                     l7429:
 19752                           
 19753                           ;stkvar	_s @ sp[(-9)+-2]
 19754  014F52  50E1               	movf	fsr1l,w,c
 19755  014F54  0FF5               	addlw	-11
 19756  014F56  6ED9               	movwf	fsr2l,c
 19757  014F58  50E2               	movf	fsr1h,w,c
 19758  014F5A  6EDA               	movwf	fsr2h,c
 19759  014F5C  0EFF               	movlw	255
 19760  014F5E  22DA               	addwfc	fsr2h,f,c
 19761  014F60  006F FF7B FFF6     	movff	postinc2,tblptrl
 19762  014F66  006F FF77 FFF7     	movff	postdec2,tblptrh
 19763  014F6C                     	if	0	;tblptru may be non-zero
 19764  014F6C                     	endif
 19765  014F6C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19766  014F6C  0E00               	movlw	low (__mediumconst shr (0+16))
 19767  014F6E  6EF8               	movwf	tblptru,c
 19768  014F70                     	endif
 19769  014F70  0008               	tblrd		*
 19770  014F72  50F5               	movf	tablat,w,c
 19771  014F74  6E3F               	movwf	(btemp+10)^0,c
 19772  014F76  6A40               	clrf	(btemp+11)^0,c
 19773                           
 19774                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19775                           ; Switch size 1, requested type "simple"
 19776                           ; Number of cases is 1, Range of values is 0 to 0
 19777                           ; switch strategies available:
 19778                           ; Name         Instructions Cycles
 19779                           ; simple_byte            4     3 (average)
 19780                           ;	Chosen strategy is simple_byte
 19781  014F78  5040               	movf	(btemp+11)^0,w,c
 19782  014F7A  0A00               	xorlw	0	; case 0
 19783  014F7C  A4D8               	btfss	status,2,c
 19784  014F7E  D03C               	goto	l7435
 19785                           
 19786                           ; Switch size 1, requested type "simple"
 19787                           ; Number of cases is 2, Range of values is 43 to 45
 19788                           ; switch strategies available:
 19789                           ; Name         Instructions Cycles
 19790                           ; simple_byte            7     4 (average)
 19791                           ;	Chosen strategy is simple_byte
 19792  014F80  503F               	movf	(btemp+10)^0,w,c
 19793  014F82  0A2B               	xorlw	43	; case 43
 19794  014F84  B4D8               	btfsc	status,2,c
 19795  014F86  D7D3               	goto	l7427
 19796  014F88  0A06               	xorlw	6	; case 45
 19797  014F8A  B4D8               	btfsc	status,2,c
 19798  014F8C  D7C4               	goto	l7425
 19799  014F8E  D034               	goto	l7435
 19800  014F90                     l7431:
 19801                           
 19802                           ;stkvar	_n @ sp[(-9)+5]
 19803  014F90  0EFC               	movlw	-4
 19804  014F92  006F FF8C  F03F    	movff	plusw1,btemp+10
 19805  014F98  0EFD               	movlw	-3
 19806  014F9A  006F FF8C  F040    	movff	plusw1,btemp+11
 19807  014FA0  0E0A               	movlw	10
 19808  014FA2  023F               	mulwf	(btemp+10)^0,c
 19809  014FA4  006F FFCC  F03D    	movff	prodl,btemp+8
 19810  014FAA  006F FFD0  F03E    	movff	prodh,btemp+9
 19811  014FB0  0240               	mulwf	(btemp+11)^0,c
 19812  014FB2  50F3               	movf	prodl,w,c
 19813  014FB4  263E               	addwf	(btemp+9)^0,f,c
 19814                           
 19815                           ;stkvar	_s @ sp[(-9)+-2]
 19816  014FB6  50E1               	movf	fsr1l,w,c
 19817  014FB8  0FF5               	addlw	-11
 19818  014FBA  6ED9               	movwf	fsr2l,c
 19819  014FBC  50E2               	movf	fsr1h,w,c
 19820  014FBE  6EDA               	movwf	fsr2h,c
 19821  014FC0  0EFF               	movlw	255
 19822  014FC2  22DA               	addwfc	fsr2h,f,c
 19823  014FC4  006F FF7B FFF6     	movff	postinc2,tblptrl
 19824  014FCA  006F FF77 FFF7     	movff	postdec2,tblptrh
 19825  014FD0                     	if	0	;tblptru may be non-zero
 19826  014FD0                     	endif
 19827  014FD0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19828  014FD0  0E00               	movlw	low (__mediumconst shr (0+16))
 19829  014FD2  6EF8               	movwf	tblptru,c
 19830  014FD4                     	endif
 19831  014FD4  0008               	tblrd		*
 19832  014FD6  50F5               	movf	tablat,w,c
 19833  014FD8  5E3D               	subwf	(btemp+8)^0,f,c
 19834  014FDA  0E00               	movlw	0
 19835  014FDC  5A3E               	subwfb	(btemp+9)^0,f,c
 19836  014FDE  0E30               	movlw	48
 19837  014FE0  263D               	addwf	(btemp+8)^0,f,c
 19838  014FE2  0E00               	movlw	0
 19839  014FE4  223E               	addwfc	(btemp+9)^0,f,c
 19840                           
 19841                           ;stkvar	_n @ sp[(-9)+5]
 19842  014FE6  0EFC               	movlw	-4
 19843  014FE8  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 19844  014FEE  0EFD               	movlw	-3
 19845  014FF0  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 19846  014FF6  D79B               	goto	l7427
 19847  014FF8                     l7435:
 19848  014FF8  0ED0               	movlw	208
 19849  014FFA  6E3F               	movwf	(btemp+10)^0,c
 19850  014FFC  0EFF               	movlw	255
 19851  014FFE  6E40               	movwf	(btemp+11)^0,c
 19852                           
 19853                           ;stkvar	_s @ sp[(-9)+-2]
 19854  015000  50E1               	movf	fsr1l,w,c
 19855  015002  0FF5               	addlw	-11
 19856  015004  6ED9               	movwf	fsr2l,c
 19857  015006  50E2               	movf	fsr1h,w,c
 19858  015008  6EDA               	movwf	fsr2h,c
 19859  01500A  0EFF               	movlw	255
 19860  01500C  22DA               	addwfc	fsr2h,f,c
 19861  01500E  006F FF7B FFF6     	movff	postinc2,tblptrl
 19862  015014  006F FF77 FFF7     	movff	postdec2,tblptrh
 19863  01501A                     	if	0	;tblptru may be non-zero
 19864  01501A                     	endif
 19865  01501A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19866  01501A  0E00               	movlw	low (__mediumconst shr (0+16))
 19867  01501C  6EF8               	movwf	tblptru,c
 19868  01501E                     	endif
 19869  01501E  0008               	tblrd		*
 19870  015020  50F5               	movf	tablat,w,c
 19871  015022  6E3D               	movwf	(btemp+8)^0,c
 19872  015024  6A3E               	clrf	(btemp+9)^0,c
 19873  015026  503F               	movf	(btemp+10)^0,w,c
 19874  015028  263D               	addwf	(btemp+8)^0,f,c
 19875  01502A  5040               	movf	(btemp+11)^0,w,c
 19876  01502C  223E               	addwfc	(btemp+9)^0,f,c
 19877  01502E  503E               	movf	(btemp+9)^0,w,c
 19878  015030  E106               	bnz	u7200
 19879  015032  0E0A               	movlw	10
 19880  015034  5C3D               	subwf	(btemp+8)^0,w,c
 19881  015036  B0D8               	btfsc	status,0,c
 19882  015038  D002               	goto	u7200
 19883  01503A  0E01               	movlw	1
 19884  01503C  D001               	goto	u7210
 19885  01503E                     u7200:
 19886  01503E  0E00               	movlw	0
 19887  015040                     u7210:
 19888  015040  6E3F               	movwf	(btemp+10)^0,c
 19889  015042  6A40               	clrf	(btemp+11)^0,c
 19890                           
 19891                           ;stkvar	_atoi$4600 @ sp[(-9)+0]
 19892  015044  0EF7               	movlw	-9
 19893  015046  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 19894  01504C  0EF8               	movlw	-8
 19895  01504E  0060  F103  FFE3   	movff	btemp+11,plusw1
 19896                           
 19897                           ;stkvar	_atoi$4600 @ sp[(-9)+0]
 19898  015054  0EF7               	movlw	-9
 19899  015056  006F FF8C  F035    	movff	plusw1,btemp
 19900  01505C  0EF8               	movlw	-8
 19901  01505E  50E3               	movf	plusw1,w,c
 19902  015060  1035               	iorwf	btemp^0,w,c
 19903  015062  A4D8               	btfss	status,2,c
 19904  015064  D795               	goto	l7431
 19905                           
 19906                           ;stkvar	_neg @ sp[(-9)+7]
 19907  015066  0EFE               	movlw	-2
 19908  015068  006F FF8C  F035    	movff	plusw1,btemp
 19909  01506E  0EFF               	movlw	-1
 19910  015070  50E3               	movf	plusw1,w,c
 19911  015072  1035               	iorwf	btemp^0,w,c
 19912  015074  A4D8               	btfss	status,2,c
 19913  015076  D00E               	goto	l7445
 19914                           
 19915                           ;stkvar	_n @ sp[(-9)+5]
 19916  015078  0EFC               	movlw	-4
 19917  01507A  006F FF8C  F035    	movff	plusw1,btemp
 19918  015080  1E35               	comf	btemp^0,f,c
 19919  015082  0EFD               	movlw	-3
 19920  015084  006F FF8C  F036    	movff	plusw1,btemp+1
 19921  01508A  1E36               	comf	(btemp+1)^0,f,c
 19922  01508C  2A35               	incf	btemp^0,f,c
 19923  01508E  B4D8               	btfsc	status,2,c
 19924  015090  2A36               	incf	(btemp+1)^0,f,c
 19925  015092  D008               	goto	l2694
 19926  015094                     l7445:
 19927                           
 19928                           ;stkvar	_n @ sp[(-9)+5]
 19929  015094  0EFC               	movlw	-4
 19930  015096  006F FF8C  F035    	movff	plusw1,btemp
 19931  01509C  0EFD               	movlw	-3
 19932  01509E  006F FF8C  F036    	movff	plusw1,btemp+1
 19933  0150A4                     l2694:
 19934                           
 19935                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 19936  0150A4  0EF5               	movlw	245
 19937  0150A6  26E1               	addwf	fsr1l,f,c
 19938  0150A8  0EFF               	movlw	255
 19939  0150AA  22E2               	addwfc	fsr1h,f,c
 19940  0150AC  0012               	return		;funcret
 19941  0150AE                     __end_of_atoi:
 19942                           	opt callstack 0
 19943                           
 19944 ;; *************** function _isspace *****************
 19945 ;; Defined at:
 19946 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 19947 ;; Parameters:    Size  Location     Type
 19948 ;;  c               2  [STACK] int 
 19949 ;; Auto vars:     Size  Location     Type
 19950 ;;		None
 19951 ;; Return value:  Size  Location     Type
 19952 ;;                  2  [STACK] int 
 19953 ;; Registers used:
 19954 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19955 ;; Tracked objects:
 19956 ;;		On entry : 0/0
 19957 ;;		On exit  : 0/0
 19958 ;;		Unchanged: 0/0
 19959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19964 ;;Total ram usage:        0 bytes
 19965 ;; Hardware stack levels used:    1
 19966 ;; Hardware stack levels required when called:    6
 19967 ;; This function calls:
 19968 ;;		Nothing
 19969 ;; This function is called by:
 19970 ;;		_atoi
 19971 ;; This function uses a reentrant model
 19972 ;;
 19973                           
 19974                           	psect	text69
 19975  0176AE                     __ptext69:
 19976                           	opt callstack 0
 19977  0176AE                     _isspace:
 19978                           	opt callstack 0
 19979                           
 19980                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19981  0176AE  52E6               	movf	postinc1,f,c
 19982                           
 19983                           ;stkvar	_isspace$4638 @ sp[(-1)+0]
 19984                           
 19985                           ;incstack = 0
 19986  0176B0  0EFF               	movlw	-1
 19987  0176B2  6AE3               	clrf	plusw1,c
 19988  0176B4  2AE3               	incf	plusw1,f,c
 19989                           
 19990                           ;stkvar	_c @ sp[(-1)+-2]
 19991  0176B6  0EFD               	movlw	-3
 19992  0176B8  006F FF8C  F035    	movff	plusw1,btemp
 19993  0176BE  0E20               	movlw	32
 19994  0176C0  1835               	xorwf	btemp^0,w,c
 19995  0176C2  E104               	bnz	u6170
 19996  0176C4  0EFE               	movlw	-2
 19997  0176C6  50E3               	movf	plusw1,w,c
 19998  0176C8  B4D8               	btfsc	status,2,c
 19999  0176CA  D012               	goto	l6895
 20000  0176CC                     u6170:
 20001                           
 20002                           ;stkvar	_c @ sp[(-1)+-2]
 20003  0176CC  0EFD               	movlw	-3
 20004  0176CE  50E3               	movf	plusw1,w,c
 20005  0176D0  0FF7               	addlw	247
 20006  0176D2  6E3F               	movwf	(btemp+10)^0,c
 20007  0176D4  0EFE               	movlw	-2
 20008  0176D6  006F FF8C  F040    	movff	plusw1,btemp+11
 20009  0176DC  0EFF               	movlw	255
 20010  0176DE  2240               	addwfc	(btemp+11)^0,f,c
 20011  0176E0  5040               	movf	(btemp+11)^0,w,c
 20012  0176E2  E104               	bnz	u6180
 20013  0176E4  0E05               	movlw	5
 20014  0176E6  5C3F               	subwf	(btemp+10)^0,w,c
 20015  0176E8  A0D8               	btfss	status,0,c
 20016  0176EA  D002               	goto	l6895
 20017  0176EC                     u6180:
 20018                           
 20019                           ;stkvar	_isspace$4638 @ sp[(-1)+0]
 20020  0176EC  0EFF               	movlw	-1
 20021  0176EE  6AE3               	clrf	plusw1,c
 20022  0176F0                     l6895:
 20023                           
 20024                           ;stkvar	_isspace$4638 @ sp[(-1)+0]
 20025  0176F0  0EFF               	movlw	-1
 20026  0176F2  50E3               	movf	plusw1,w,c
 20027  0176F4  6E35               	movwf	btemp^0,c
 20028  0176F6  6A36               	clrf	(btemp+1)^0,c
 20029                           
 20030                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20031  0176F8  52E5               	movf	postdec1,f,c
 20032  0176FA  52E5               	movf	postdec1,f,c
 20033  0176FC  52E5               	movf	postdec1,f,c
 20034  0176FE  0012               	return		;funcret
 20035  017700                     __end_of_isspace:
 20036                           	opt callstack 0
 20037                           
 20038 ;; *************** function _isdigit *****************
 20039 ;; Defined at:
 20040 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 20041 ;; Parameters:    Size  Location     Type
 20042 ;;  c               2  [STACK] int 
 20043 ;; Auto vars:     Size  Location     Type
 20044 ;;		None
 20045 ;; Return value:  Size  Location     Type
 20046 ;;                  2  [STACK] int 
 20047 ;; Registers used:
 20048 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 20049 ;; Tracked objects:
 20050 ;;		On entry : 0/0
 20051 ;;		On exit  : 0/0
 20052 ;;		Unchanged: 0/0
 20053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20058 ;;Total ram usage:        0 bytes
 20059 ;; Hardware stack levels used:    1
 20060 ;; Hardware stack levels required when called:    6
 20061 ;; This function calls:
 20062 ;;		Nothing
 20063 ;; This function is called by:
 20064 ;;		_vfpfcnvrt
 20065 ;;		_atoi
 20066 ;; This function uses a reentrant model
 20067 ;;
 20068                           
 20069                           	psect	text70
 20070  017B90                     __ptext70:
 20071                           	opt callstack 0
 20072  017B90                     _isdigit:
 20073                           	opt callstack 18
 20074                           
 20075                           ;stkvar	_c @ sp[(0)+-2]
 20076                           
 20077                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20078                           ;incstack = 0
 20079  017B90  0EFE               	movlw	-2
 20080  017B92  50E3               	movf	plusw1,w,c
 20081  017B94  0FD0               	addlw	208
 20082  017B96  6E3F               	movwf	(btemp+10)^0,c
 20083  017B98  0EFF               	movlw	-1
 20084  017B9A  006F FF8C  F040    	movff	plusw1,btemp+11
 20085  017BA0  0EFF               	movlw	255
 20086  017BA2  2240               	addwfc	(btemp+11)^0,f,c
 20087  017BA4  5040               	movf	(btemp+11)^0,w,c
 20088  017BA6  E106               	bnz	u5130
 20089  017BA8  0E0A               	movlw	10
 20090  017BAA  5C3F               	subwf	(btemp+10)^0,w,c
 20091  017BAC  B0D8               	btfsc	status,0,c
 20092  017BAE  D002               	goto	u5130
 20093  017BB0  0E01               	movlw	1
 20094  017BB2  D001               	goto	u5140
 20095  017BB4                     u5130:
 20096  017BB4  0E00               	movlw	0
 20097  017BB6                     u5140:
 20098  017BB6  6E35               	movwf	btemp^0,c
 20099  017BB8  6A36               	clrf	(btemp+1)^0,c
 20100                           
 20101                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20102  017BBA  52E5               	movf	postdec1,f,c
 20103  017BBC  52E5               	movf	postdec1,f,c
 20104  017BBE  0012               	return		;funcret
 20105  017BC0                     __end_of_isdigit:
 20106                           	opt callstack 0
 20107                           
 20108 ;; *************** function _set_vterm *****************
 20109 ;; Defined at:
 20110 ;;		line 104 in file "mconfig.c"
 20111 ;; Parameters:    Size  Location     Type
 20112 ;;  vterm           1  [STACK] unsigned char 
 20113 ;; Auto vars:     Size  Location     Type
 20114 ;;		None
 20115 ;; Return value:  Size  Location     Type
 20116 ;;                  1  [STACK] unsigned char 
 20117 ;; Registers used:
 20118 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
 20119 ;; Tracked objects:
 20120 ;;		On entry : 0/0
 20121 ;;		On exit  : 3F/4
 20122 ;;		Unchanged: 0/0
 20123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20128 ;;Total ram usage:        0 bytes
 20129 ;; Hardware stack levels used:    1
 20130 ;; Hardware stack levels required when called:    6
 20131 ;; This function calls:
 20132 ;;		Nothing
 20133 ;; This function is called by:
 20134 ;;		_main
 20135 ;;		_check_help
 20136 ;; This function uses a reentrant model
 20137 ;;
 20138                           
 20139                           	psect	text71
 20140  018094                     __ptext71:
 20141                           	opt callstack 0
 20142  018094                     _set_vterm:
 20143                           	opt callstack 24
 20144                           
 20145                           ;mconfig.c: 104: uint8_t set_vterm(uint8_t vterm);mconfig.c: 105: {;mconfig.c: 106:  D.v
      +                          term = vterm & 0x03;
 20146                           ;stkvar	_vterm @ sp[(0)+-1]
 20147                           
 20148                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20149                           ;incstack = 0
 20150  018094  0EFF               	movlw	-1
 20151  018096  006F FF8C  F040    	movff	plusw1,btemp+11
 20152  01809C  0E03               	movlw	3
 20153  01809E  1640               	andwf	(btemp+11)^0,f,c
 20154  0180A0  0104               	movlb	4	; () banked
 20155  0180A2  51D8               	movf	(_D+216)& (0+255),w,b
 20156  0180A4  1840               	xorwf	(btemp+11)^0,w,c
 20157  0180A6  0BFE               	andlw	-2
 20158  0180A8  1840               	xorwf	(btemp+11)^0,w,c
 20159  0180AA  6FD8               	movwf	(_D+216)& (0+255),b
 20160                           
 20161                           ; BSR set to: 4
 20162                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 20163  0180AC  52E5               	movf	postdec1,f,c
 20164  0180AE  0012               	return		;funcret
 20165  0180B0                     __end_of_set_vterm:
 20166                           	opt callstack 0
 20167                           
 20168 ;; *************** function _set_temp_display_help *****************
 20169 ;; Defined at:
 20170 ;;		line 208 in file "mconfig.c"
 20171 ;; Parameters:    Size  Location     Type
 20172 ;;  new_response    1  [STACK] const enum E16501
 20173 ;; Auto vars:     Size  Location     Type
 20174 ;;		None
 20175 ;; Return value:  Size  Location     Type
 20176 ;;                  1  [STACK] enum E16501
 20177 ;; Registers used:
 20178 ;;		wreg, fsr1l, fsr1h
 20179 ;; Tracked objects:
 20180 ;;		On entry : 0/4
 20181 ;;		On exit  : 3F/1
 20182 ;;		Unchanged: 0/0
 20183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20188 ;;Total ram usage:        0 bytes
 20189 ;; Hardware stack levels used:    1
 20190 ;; Hardware stack levels required when called:    6
 20191 ;; This function calls:
 20192 ;;		Nothing
 20193 ;; This function is called by:
 20194 ;;		_check_help
 20195 ;; This function uses a reentrant model
 20196 ;;
 20197                           
 20198                           	psect	text72
 20199  018196                     __ptext72:
 20200                           	opt callstack 0
 20201  018196                     _set_temp_display_help:
 20202                           	opt callstack 23
 20203                           
 20204                           ;mconfig.c: 208: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 209: {;mconfig.c: 210:  static D_CODES old_info;;mconfig.c: 212:  old_info = V.respon
      +                          se.help_temp;
 20205                           
 20206                           ; BSR set to: 4
 20207                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20208                           ;incstack = 0
 20209  018196  0101               	movlb	1	; () banked
 20210  018198  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 20211                           
 20212                           ; BSR set to: 1
 20213                           ;mconfig.c: 213:  V.response.help_temp = new_response_info;
 20214                           ;stkvar	_new_response_info @ sp[(0)+-1]
 20215  01819A  0EFF               	movlw	-1
 20216  01819C  006F FF8C  F1A4    	movff	plusw1,_V+164	;volatile
 20217                           
 20218                           ; BSR set to: 1
 20219                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 20220  0181A2  52E5               	movf	postdec1,f,c
 20221  0181A4  0012               	return		;funcret
 20222  0181A6                     __end_of_set_temp_display_help:
 20223                           	opt callstack 0
 20224                           
 20225 ;; *************** function _set_display_info *****************
 20226 ;; Defined at:
 20227 ;;		line 197 in file "mconfig.c"
 20228 ;; Parameters:    Size  Location     Type
 20229 ;;  new_response    1  [STACK] const enum E16501
 20230 ;; Auto vars:     Size  Location     Type
 20231 ;;		None
 20232 ;; Return value:  Size  Location     Type
 20233 ;;                  1  [STACK] enum E16986
 20234 ;; Registers used:
 20235 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 20236 ;; Tracked objects:
 20237 ;;		On entry : 0/4
 20238 ;;		On exit  : 0/0
 20239 ;;		Unchanged: 0/0
 20240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20245 ;;Total ram usage:        0 bytes
 20246 ;; Hardware stack levels used:    1
 20247 ;; Hardware stack levels required when called:    7
 20248 ;; This function calls:
 20249 ;;		_TimerDone
 20250 ;; This function is called by:
 20251 ;;		_main
 20252 ;;		_check_help
 20253 ;; This function uses a reentrant model
 20254 ;;
 20255                           
 20256                           	psect	text73
 20257  018000                     __ptext73:
 20258                           	opt callstack 0
 20259  018000                     _set_display_info:
 20260                           	opt callstack 23
 20261                           
 20262                           ;mconfig.c: 197: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 19
      +                          8: {;mconfig.c: 199:  static D_CODES old_info = DIS_STR;;mconfig.c: 201:  if (TimerDone(
      +                          TMR_INFO)) {
 20263                           
 20264                           ; BSR set to: 1
 20265                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20266                           ;incstack = 0
 20267  018000  0E07               	movlw	7
 20268  018002  6EE6               	movwf	postinc1,c
 20269  018004  EC8B  F0BF         	call	_TimerDone	;wreg free
 20270  018008  5035               	movf	btemp^0,w,c
 20271  01800A  B4D8               	btfsc	status,2,c
 20272  01800C  D006               	goto	l1599
 20273                           
 20274                           ;mconfig.c: 202:   old_info = V.response.info;
 20275  01800E  0101               	movlb	1	; () banked
 20276  018010  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 20277                           
 20278                           ; BSR set to: 1
 20279                           ;mconfig.c: 203:   V.response.info = new_response_info;
 20280                           ;stkvar	_new_response_info @ sp[(0)+-1]
 20281  018012  0EFF               	movlw	-1
 20282  018014  006F FF8C  F1A3    	movff	plusw1,_V+163	;volatile
 20283  01801A                     l1599:
 20284                           
 20285                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 20286  01801A  52E5               	movf	postdec1,f,c
 20287  01801C  0012               	return		;funcret
 20288  01801E                     __end_of_set_display_info:
 20289                           	opt callstack 0
 20290                           
 20291 ;; *************** function _mode_lamp_dim *****************
 20292 ;; Defined at:
 20293 ;;		line 13 in file "mconfig.c"
 20294 ;; Parameters:    Size  Location     Type
 20295 ;;  level           2  [STACK] const unsigned short 
 20296 ;; Auto vars:     Size  Location     Type
 20297 ;;		None
 20298 ;; Return value:  Size  Location     Type
 20299 ;;                  1  [STACK] void 
 20300 ;; Registers used:
 20301 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20302 ;; Tracked objects:
 20303 ;;		On entry : 0/1
 20304 ;;		On exit  : 0/0
 20305 ;;		Unchanged: 0/0
 20306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20311 ;;Total ram usage:        0 bytes
 20312 ;; Hardware stack levels used:    1
 20313 ;; Hardware stack levels required when called:    7
 20314 ;; This function calls:
 20315 ;;		_PWM8_LoadDutyValue
 20316 ;; This function is called by:
 20317 ;;		_main
 20318 ;;		_check_help
 20319 ;; This function uses a reentrant model
 20320 ;;
 20321                           
 20322                           	psect	text74
 20323  0180FE                     __ptext74:
 20324                           	opt callstack 0
 20325  0180FE                     _mode_lamp_dim:
 20326                           	opt callstack 23
 20327                           
 20328                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 20329                           ;stkvar	_level @ sp[(0)+-2]
 20330                           
 20331                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20332                           ;incstack = 0
 20333  0180FE  0EFE               	movlw	-2
 20334  018100  006F FF8F FFE6     	movff	plusw1,postinc1
 20335  018106  006F FF8F FFE6     	movff	plusw1,postinc1
 20336  01810C  EC97  F0BC         	call	_PWM8_LoadDutyValue	;wreg free
 20337                           
 20338                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 20339  018110  52E5               	movf	postdec1,f,c
 20340  018112  52E5               	movf	postdec1,f,c
 20341  018114  0012               	return		;funcret
 20342  018116                     __end_of_mode_lamp_dim:
 20343                           	opt callstack 0
 20344                           
 20345 ;; *************** function _mode_lamp_bright *****************
 20346 ;; Defined at:
 20347 ;;		line 18 in file "mconfig.c"
 20348 ;; Parameters:    Size  Location     Type
 20349 ;;		None
 20350 ;; Auto vars:     Size  Location     Type
 20351 ;;		None
 20352 ;; Return value:  Size  Location     Type
 20353 ;;                  1  [STACK] void 
 20354 ;; Registers used:
 20355 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20356 ;; Tracked objects:
 20357 ;;		On entry : 0/1
 20358 ;;		On exit  : 0/0
 20359 ;;		Unchanged: 0/0
 20360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20365 ;;Total ram usage:        0 bytes
 20366 ;; Hardware stack levels used:    1
 20367 ;; Hardware stack levels required when called:    7
 20368 ;; This function calls:
 20369 ;;		_PWM8_LoadDutyValue
 20370 ;; This function is called by:
 20371 ;;		_check_help
 20372 ;; This function uses a reentrant model
 20373 ;;
 20374                           
 20375                           	psect	text75
 20376  0181B4                     __ptext75:
 20377                           	opt callstack 0
 20378  0181B4                     _mode_lamp_bright:
 20379                           	opt callstack 22
 20380                           
 20381                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 20382                           
 20383                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20384                           ;incstack = 0
 20385  0181B4  0E2C               	movlw	44
 20386  0181B6  6EE6               	movwf	postinc1,c
 20387  0181B8  0E01               	movlw	1
 20388  0181BA  6EE6               	movwf	postinc1,c
 20389  0181BC  EC97  F0BC         	call	_PWM8_LoadDutyValue	;wreg free
 20390                           
 20391                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 20392  0181C0  0012               	return		;funcret
 20393  0181C2                     __end_of_mode_lamp_bright:
 20394                           	opt callstack 0
 20395                           
 20396 ;; *************** function _PWM8_LoadDutyValue *****************
 20397 ;; Defined at:
 20398 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 20399 ;; Parameters:    Size  Location     Type
 20400 ;;  dutyValue       2  [STACK] unsigned short 
 20401 ;; Auto vars:     Size  Location     Type
 20402 ;;		None
 20403 ;; Return value:  Size  Location     Type
 20404 ;;                  1  [STACK] void 
 20405 ;; Registers used:
 20406 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20407 ;; Tracked objects:
 20408 ;;		On entry : 0/1
 20409 ;;		On exit  : 0/0
 20410 ;;		Unchanged: 0/0
 20411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20416 ;;Total ram usage:        0 bytes
 20417 ;; Hardware stack levels used:    1
 20418 ;; Hardware stack levels required when called:    6
 20419 ;; This function calls:
 20420 ;;		Nothing
 20421 ;; This function is called by:
 20422 ;;		_mode_lamp_dim
 20423 ;;		_mode_lamp_bright
 20424 ;; This function uses a reentrant model
 20425 ;;
 20426                           
 20427                           	psect	text76
 20428  01792E                     __ptext76:
 20429                           	opt callstack 0
 20430  01792E                     _PWM8_LoadDutyValue:
 20431                           	opt callstack 23
 20432                           
 20433                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 20434                           ;stkvar	_dutyValue @ sp[(0)+-2]
 20435                           
 20436                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20437                           ;incstack = 0
 20438  01792E  0EFE               	movlw	-2
 20439  017930  006F FF8C  F03F    	movff	plusw1,btemp+10
 20440  017936  0EFF               	movlw	-1
 20441  017938  006F FF8C  F040    	movff	plusw1,btemp+11
 20442  01793E  90D8               	bcf	status,0,c
 20443  017940  3240               	rrcf	(btemp+11)^0,f,c
 20444  017942  323F               	rrcf	(btemp+10)^0,f,c
 20445  017944  90D8               	bcf	status,0,c
 20446  017946  3240               	rrcf	(btemp+11)^0,f,c
 20447  017948  323F               	rrcf	(btemp+10)^0,f,c
 20448  01794A  503F               	movf	(btemp+10)^0,w,c
 20449  01794C  6E61               	movwf	97,c	;volatile
 20450                           
 20451                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 20452                           ;stkvar	_dutyValue @ sp[(0)+-2]
 20453  01794E  0EFE               	movlw	-2
 20454  017950  006F FF8C  F040    	movff	plusw1,btemp+11
 20455  017956  0E03               	movlw	3
 20456  017958  1640               	andwf	(btemp+11)^0,f,c
 20457  01795A  0E06               	movlw	6
 20458  01795C  6E35               	movwf	btemp^0,c
 20459  01795E                     u7665:
 20460  01795E  90D8               	bcf	status,0,c
 20461  017960  3640               	rlcf	(btemp+11)^0,f,c
 20462  017962  2E35               	decfsz	btemp^0,f,c
 20463  017964  D7FC               	goto	u7665
 20464  017966  5040               	movf	(btemp+11)^0,w,c
 20465  017968  6E60               	movwf	96,c	;volatile
 20466                           
 20467                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 20468  01796A  52E5               	movf	postdec1,f,c
 20469  01796C  52E5               	movf	postdec1,f,c
 20470  01796E  0012               	return		;funcret
 20471  017970                     __end_of_PWM8_LoadDutyValue:
 20472                           	opt callstack 0
 20473                           
 20474 ;; *************** function _help_button *****************
 20475 ;; Defined at:
 20476 ;;		line 26 in file "mconfig.c"
 20477 ;; Parameters:    Size  Location     Type
 20478 ;;		None
 20479 ;; Auto vars:     Size  Location     Type
 20480 ;;		None
 20481 ;; Return value:  Size  Location     Type
 20482 ;;                  1  [STACK] _Bool 
 20483 ;; Registers used:
 20484 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20485 ;; Tracked objects:
 20486 ;;		On entry : 0/1
 20487 ;;		On exit  : 0/0
 20488 ;;		Unchanged: 0/0
 20489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20494 ;;Total ram usage:        0 bytes
 20495 ;; Hardware stack levels used:    1
 20496 ;; Hardware stack levels required when called:    7
 20497 ;; This function calls:
 20498 ;;		_StartTimer
 20499 ;;		_TimerDone
 20500 ;; This function is called by:
 20501 ;;		_check_help
 20502 ;; This function uses a reentrant model
 20503 ;;
 20504                           
 20505                           	psect	text77
 20506  0179EC                     __ptext77:
 20507                           	opt callstack 0
 20508  0179EC                     _help_button:
 20509                           	opt callstack 22
 20510                           
 20511                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 20512                           
 20513                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20514                           ;incstack = 0
 20515  0179EC  B0CB               	btfsc	203,0,c	;volatile
 20516  0179EE  D00C               	goto	l1542
 20517                           
 20518                           ;mconfig.c: 29:   V.help = 1;
 20519  0179F0  0101               	movlb	1	; () banked
 20520  0179F2  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 20521                           
 20522                           ; BSR set to: 1
 20523                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 20524  0179F4  0E08               	movlw	8
 20525  0179F6  6EE6               	movwf	postinc1,c
 20526  0179F8  EC8B  F0BF         	call	_TimerDone	;wreg free
 20527  0179FC  5035               	movf	btemp^0,w,c
 20528  0179FE  B4D8               	btfsc	status,2,c
 20529  017A00  D003               	goto	l1542
 20530                           
 20531                           ;mconfig.c: 31:    return 1;
 20532  017A02  0E01               	movlw	1
 20533  017A04  6E35               	movwf	btemp^0,c
 20534  017A06  0012               	return	
 20535  017A08                     l1542:
 20536                           
 20537                           ;mconfig.c: 34:  if (!V.help)
 20538  017A08  0101               	movlb	1	; () banked
 20539  017A0A  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 20540  017A0C  D008               	goto	l8335
 20541                           
 20542                           ; BSR set to: 1
 20543                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 20544  017A0E  0E2C               	movlw	44
 20545  017A10  6EE6               	movwf	postinc1,c
 20546  017A12  0E01               	movlw	1
 20547  017A14  6EE6               	movwf	postinc1,c
 20548  017A16  0E08               	movlw	8
 20549  017A18  6EE6               	movwf	postinc1,c
 20550  017A1A  ECD8  F0BC         	call	_StartTimer	;wreg free
 20551  017A1E                     l8335:
 20552                           
 20553                           ;mconfig.c: 37:  return 0;
 20554  017A1E  0E00               	movlw	0
 20555  017A20  6E35               	movwf	btemp^0,c
 20556                           
 20557                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 20558  017A22  0012               	return		;funcret
 20559  017A24                     __end_of_help_button:
 20560                           	opt callstack 0
 20561                           
 20562 ;; *************** function _TimerDone *****************
 20563 ;; Defined at:
 20564 ;;		line 20 in file "timers.c"
 20565 ;; Parameters:    Size  Location     Type
 20566 ;;  timer           1  [STACK] const unsigned char 
 20567 ;; Auto vars:     Size  Location     Type
 20568 ;;		None
 20569 ;; Return value:  Size  Location     Type
 20570 ;;                  1  [STACK] _Bool 
 20571 ;; Registers used:
 20572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 20573 ;; Tracked objects:
 20574 ;;		On entry : 0/4
 20575 ;;		On exit  : 0/0
 20576 ;;		Unchanged: 0/0
 20577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20582 ;;Total ram usage:        0 bytes
 20583 ;; Hardware stack levels used:    1
 20584 ;; Hardware stack levels required when called:    6
 20585 ;; This function calls:
 20586 ;;		Nothing
 20587 ;; This function is called by:
 20588 ;;		_main
 20589 ;;		_WaitMs
 20590 ;;		_help_button
 20591 ;;		_check_help
 20592 ;;		_set_display_info
 20593 ;; This function uses a reentrant model
 20594 ;;
 20595                           
 20596                           	psect	text78
 20597  017F16                     __ptext78:
 20598                           	opt callstack 0
 20599  017F16                     _TimerDone:
 20600                           	opt callstack 23
 20601                           
 20602                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20603                           ;incstack = 0
 20604  017F16  0004               	clrwdt		;# 
 20605                           
 20606                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 20607                           ;stkvar	_timer @ sp[(0)+-1]
 20608  017F18  0EFF               	movlw	-1
 20609  017F1A  50E3               	movf	plusw1,w,c
 20610  017F1C  0D02               	mullw	2
 20611  017F1E  50F3               	movf	243,w,c
 20612  017F20  0FA3               	addlw	low _tickCount
 20613  017F22  6ED9               	movwf	fsr2l,c
 20614  017F24  6ADA               	clrf	fsr2h,c
 20615  017F26  50DE               	movf	postinc2,w,c
 20616  017F28  10DE               	iorwf	postinc2,w,c
 20617  017F2A  A4D8               	btfss	status,2,c
 20618  017F2C  D002               	goto	l7731
 20619                           
 20620                           ;timers.c: 24:   return 1;
 20621  017F2E  0E01               	movlw	1
 20622  017F30  D001               	goto	L18
 20623  017F32                     l7731:
 20624                           
 20625                           ;timers.c: 26:  return 0;
 20626  017F32  0E00               	movlw	0
 20627  017F34                     L18:
 20628  017F34  6E35               	movwf	btemp^0,c
 20629                           
 20630                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 20631  017F36  52E5               	movf	postdec1,f,c
 20632  017F38  0012               	return		;funcret
 20633  017F3A                     __end_of_TimerDone:
 20634                           	opt callstack 0
 20635                           
 20636 ;; *************** function _StartTimer *****************
 20637 ;; Defined at:
 20638 ;;		line 12 in file "timers.c"
 20639 ;; Parameters:    Size  Location     Type
 20640 ;;  timer           1  [STACK] const unsigned char 
 20641 ;;  count           2  [STACK] const unsigned short 
 20642 ;; Auto vars:     Size  Location     Type
 20643 ;;		None
 20644 ;; Return value:  Size  Location     Type
 20645 ;;                  1  [STACK] void 
 20646 ;; Registers used:
 20647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20648 ;; Tracked objects:
 20649 ;;		On entry : 0/4
 20650 ;;		On exit  : 0/0
 20651 ;;		Unchanged: 0/0
 20652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20657 ;;Total ram usage:        0 bytes
 20658 ;; Hardware stack levels used:    1
 20659 ;; Hardware stack levels required when called:    6
 20660 ;; This function calls:
 20661 ;;		Nothing
 20662 ;; This function is called by:
 20663 ;;		_main
 20664 ;;		_WaitMs
 20665 ;;		_help_button
 20666 ;;		_check_help
 20667 ;; This function uses a reentrant model
 20668 ;;
 20669                           
 20670                           	psect	text79
 20671  0179B0                     __ptext79:
 20672                           	opt callstack 0
 20673  0179B0                     _StartTimer:
 20674                           	opt callstack 21
 20675                           
 20676                           ;timers.c: 12: __attribute__((inline)) void StartTimer(const uint8_t timer, const uint16
      +                          _t count);timers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
 20677                           ;stkvar	_count @ sp[(0)+-3]
 20678                           
 20679                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20680                           ;incstack = 0
 20681  0179B0  0EFD               	movlw	-3
 20682  0179B2  006F FF8C  F03F    	movff	plusw1,btemp+10
 20683  0179B8  0EFE               	movlw	-2
 20684  0179BA  006F FF8C  F040    	movff	plusw1,btemp+11
 20685  0179C0  90D8               	bcf	status,0,c
 20686  0179C2  343F               	rlcf	(btemp+10)^0,w,c
 20687  0179C4  6E3D               	movwf	(btemp+8)^0,c
 20688  0179C6  3440               	rlcf	(btemp+11)^0,w,c
 20689  0179C8  6E3E               	movwf	(btemp+9)^0,c
 20690                           
 20691                           ;stkvar	_timer @ sp[(0)+-1]
 20692  0179CA  0EFF               	movlw	-1
 20693  0179CC  50E3               	movf	plusw1,w,c
 20694  0179CE  0D02               	mullw	2
 20695  0179D0  50F3               	movf	243,w,c
 20696  0179D2  0FA3               	addlw	low _tickCount
 20697  0179D4  6ED9               	movwf	fsr2l,c
 20698  0179D6  6ADA               	clrf	fsr2h,c
 20699  0179D8  0060  F0F7  FFDE   	movff	btemp+8,postinc2
 20700  0179DE  0060  F0FB  FFDD   	movff	btemp+9,postdec2
 20701                           
 20702                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 20703  0179E4  52E5               	movf	postdec1,f,c
 20704  0179E6  52E5               	movf	postdec1,f,c
 20705  0179E8  52E5               	movf	postdec1,f,c
 20706  0179EA  0012               	return		;funcret
 20707  0179EC                     __end_of_StartTimer:
 20708                           	opt callstack 0
 20709                           
 20710 ;; *************** function _display_info *****************
 20711 ;; Defined at:
 20712 ;;		line 187 in file "mconfig.c"
 20713 ;; Parameters:    Size  Location     Type
 20714 ;;		None
 20715 ;; Auto vars:     Size  Location     Type
 20716 ;;		None
 20717 ;; Return value:  Size  Location     Type
 20718 ;;                  1  [STACK] enum E16501
 20719 ;; Registers used:
 20720 ;;		btemp
 20721 ;; Tracked objects:
 20722 ;;		On entry : 0/1
 20723 ;;		On exit  : 0/0
 20724 ;;		Unchanged: 0/0
 20725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20730 ;;Total ram usage:        0 bytes
 20731 ;; Hardware stack levels used:    1
 20732 ;; Hardware stack levels required when called:    6
 20733 ;; This function calls:
 20734 ;;		Nothing
 20735 ;; This function is called by:
 20736 ;;		_check_help
 20737 ;; This function uses a reentrant model
 20738 ;;
 20739                           
 20740                           	psect	text80
 20741  01821E                     __ptext80:
 20742                           	opt callstack 0
 20743  01821E                     _display_info:
 20744                           	opt callstack 23
 20745                           
 20746                           ;mconfig.c: 189:  return V.response.info;
 20747                           
 20748                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20749                           ;incstack = 0
 20750  01821E  0060  F68C  F035   	movff	_V+163,btemp	;volatile
 20751                           
 20752                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 20753  018224  0012               	return		;funcret
 20754  018226                     __end_of_display_info:
 20755                           	opt callstack 0
 20756                           
 20757 ;; *************** function _display_help *****************
 20758 ;; Defined at:
 20759 ;;		line 192 in file "mconfig.c"
 20760 ;; Parameters:    Size  Location     Type
 20761 ;;		None
 20762 ;; Auto vars:     Size  Location     Type
 20763 ;;		None
 20764 ;; Return value:  Size  Location     Type
 20765 ;;                  1  [STACK] enum E16501
 20766 ;; Registers used:
 20767 ;;		btemp
 20768 ;; Tracked objects:
 20769 ;;		On entry : 3F/1
 20770 ;;		On exit  : 0/0
 20771 ;;		Unchanged: 0/0
 20772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20777 ;;Total ram usage:        0 bytes
 20778 ;; Hardware stack levels used:    1
 20779 ;; Hardware stack levels required when called:    6
 20780 ;; This function calls:
 20781 ;;		Nothing
 20782 ;; This function is called by:
 20783 ;;		_check_help
 20784 ;; This function uses a reentrant model
 20785 ;;
 20786                           
 20787                           	psect	text81
 20788  018226                     __ptext81:
 20789                           	opt callstack 0
 20790  018226                     _display_help:
 20791                           	opt callstack 23
 20792                           
 20793                           ;mconfig.c: 194:  return V.response.help_temp;
 20794                           
 20795                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20796                           ;incstack = 0
 20797  018226  0060  F690  F035   	movff	_V+164,btemp	;volatile
 20798                           
 20799                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 20800  01822C  0012               	return		;funcret
 20801  01822E                     __end_of_display_help:
 20802                           	opt callstack 0
 20803                           
 20804 ;; *************** function _check_adc_scan *****************
 20805 ;; Defined at:
 20806 ;;		line 51 in file "daq.c"
 20807 ;; Parameters:    Size  Location     Type
 20808 ;;		None
 20809 ;; Auto vars:     Size  Location     Type
 20810 ;;		None
 20811 ;; Return value:  Size  Location     Type
 20812 ;;                  1  [STACK] _Bool 
 20813 ;; Registers used:
 20814 ;;		btemp
 20815 ;; Tracked objects:
 20816 ;;		On entry : 0/4
 20817 ;;		On exit  : 0/0
 20818 ;;		Unchanged: 0/0
 20819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20824 ;;Total ram usage:        0 bytes
 20825 ;; Hardware stack levels used:    1
 20826 ;; Hardware stack levels required when called:    6
 20827 ;; This function calls:
 20828 ;;		Nothing
 20829 ;; This function is called by:
 20830 ;;		_main
 20831 ;; This function uses a reentrant model
 20832 ;;
 20833                           
 20834                           	psect	text82
 20835  01822E                     __ptext82:
 20836                           	opt callstack 0
 20837  01822E                     _check_adc_scan:
 20838                           	opt callstack 24
 20839                           
 20840                           ;daq.c: 53:  return R.done;
 20841                           
 20842                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20843                           ;incstack = 0
 20844  01822E  0060  F22C  F035   	movff	_R+43,btemp	;volatile
 20845                           
 20846                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 20847  018234  0012               	return		;funcret
 20848  018236                     __end_of_check_adc_scan:
 20849                           	opt callstack 0
 20850                           
 20851 ;; *************** function _SYSTEM_Initialize *****************
 20852 ;; Defined at:
 20853 ;;		line 50 in file "mcc_generated_files/mcc.c"
 20854 ;; Parameters:    Size  Location     Type
 20855 ;;		None
 20856 ;; Auto vars:     Size  Location     Type
 20857 ;;		None
 20858 ;; Return value:  Size  Location     Type
 20859 ;;                  1  [STACK] void 
 20860 ;; Registers used:
 20861 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 20862 ;; Tracked objects:
 20863 ;;		On entry : 0/0
 20864 ;;		On exit  : 3F/3C
 20865 ;;		Unchanged: 0/0
 20866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20871 ;;Total ram usage:        0 bytes
 20872 ;; Hardware stack levels used:    1
 20873 ;; Hardware stack levels required when called:    8
 20874 ;; This function calls:
 20875 ;;		_ADCC_Initialize
 20876 ;;		_CLKREF_Initialize
 20877 ;;		_DMA1_Initialize
 20878 ;;		_DMA2_Initialize
 20879 ;;		_EXT_INT_Initialize
 20880 ;;		_FVR_Initialize
 20881 ;;		_INTERRUPT_Initialize
 20882 ;;		_OSCILLATOR_Initialize
 20883 ;;		_PIN_MANAGER_Initialize
 20884 ;;		_PMD_Initialize
 20885 ;;		_PWM8_Initialize
 20886 ;;		_SPI1_Initialize
 20887 ;;		_TMR2_Initialize
 20888 ;;		_TMR5_Initialize
 20889 ;;		_TMR6_Initialize
 20890 ;;		_UART1_Initialize
 20891 ;;		_UART2_Initialize
 20892 ;; This function is called by:
 20893 ;;		_main
 20894 ;; This function uses a reentrant model
 20895 ;;
 20896                           
 20897                           	psect	text83
 20898  0177D4                     __ptext83:
 20899                           	opt callstack 0
 20900  0177D4                     _SYSTEM_Initialize:
 20901                           	opt callstack 22
 20902                           
 20903                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 20904                           
 20905                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20906                           ;incstack = 0
 20907  0177D4  EC7E  F0B9         	call	_INTERRUPT_Initialize	;wreg free
 20908                           
 20909                           ; BSR set to: 57
 20910                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 20911  0177D8  ECB8  F0C0         	call	_PMD_Initialize	;wreg free
 20912                           
 20913                           ; BSR set to: 57
 20914                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 20915  0177DC  EC94  F0B7         	call	_PIN_MANAGER_Initialize	;wreg free
 20916                           
 20917                           ; BSR set to: 58
 20918                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 20919  0177E0  ECAD  F0C0         	call	_OSCILLATOR_Initialize	;wreg free
 20920                           
 20921                           ; BSR set to: 57
 20922                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 20923  0177E4  EC1B  F0C1         	call	_FVR_Initialize	;wreg free
 20924                           
 20925                           ; BSR set to: 62
 20926                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 20927  0177E8  EC16  F0B9         	call	_ADCC_Initialize	;wreg free
 20928                           
 20929                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 20930  0177EC  ECA2  F0C0         	call	_PWM8_Initialize	;wreg free
 20931                           
 20932                           ; BSR set to: 63
 20933                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 20934  0177F0  EC8B  F0C0         	call	_TMR2_Initialize	;wreg free
 20935                           
 20936                           ; BSR set to: 57
 20937                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 20938  0177F4  EC7E  F0BD         	call	_EXT_INT_Initialize	;wreg free
 20939                           
 20940                           ; BSR set to: 57
 20941                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 20942  0177F8  EC23  F0BE         	call	_TMR6_Initialize	;wreg free
 20943                           
 20944                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 20945  0177FC  EC0D  F0BC         	call	_TMR5_Initialize	;wreg free
 20946                           
 20947                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 20948  017800  ECE3  F0B9         	call	_UART1_Initialize	;wreg free
 20949                           
 20950                           ; BSR set to: 57
 20951                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 20952  017804  EC77  F0BA         	call	_UART2_Initialize	;wreg free
 20953                           
 20954                           ; BSR set to: 57
 20955                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 20956  017808  EC97  F0C0         	call	_SPI1_Initialize	;wreg free
 20957                           
 20958                           ; BSR set to: 61
 20959                           ;mcc_generated_files/mcc.c: 66:     DMA2_Initialize();
 20960  01780C  EC01  F0BB         	call	_DMA2_Initialize	;wreg free
 20961                           
 20962                           ; BSR set to: 59
 20963                           ;mcc_generated_files/mcc.c: 67:     DMA1_Initialize();
 20964  017810  ECE1  F0B8         	call	_DMA1_Initialize	;wreg free
 20965                           
 20966                           ; BSR set to: 59
 20967                           ;mcc_generated_files/mcc.c: 68:     CLKREF_Initialize();
 20968  017814  ECF9  F0C0         	call	_CLKREF_Initialize	;wreg free
 20969                           
 20970                           ; BSR set to: 60
 20971                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 20972  017818  0012               	return		;funcret
 20973  01781A                     __end_of_SYSTEM_Initialize:
 20974                           	opt callstack 0
 20975                           
 20976 ;; *************** function _UART2_Initialize *****************
 20977 ;; Defined at:
 20978 ;;		line 78 in file "mcc_generated_files/uart2.c"
 20979 ;; Parameters:    Size  Location     Type
 20980 ;;		None
 20981 ;; Auto vars:     Size  Location     Type
 20982 ;;		None
 20983 ;; Return value:  Size  Location     Type
 20984 ;;                  1  [STACK] void 
 20985 ;; Registers used:
 20986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 20987 ;; Tracked objects:
 20988 ;;		On entry : 3F/39
 20989 ;;		On exit  : 3F/39
 20990 ;;		Unchanged: 0/0
 20991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20996 ;;Total ram usage:        0 bytes
 20997 ;; Hardware stack levels used:    1
 20998 ;; Hardware stack levels required when called:    7
 20999 ;; This function calls:
 21000 ;;		_UART2_SetRxInterruptHandler
 21001 ;;		_UART2_SetTxInterruptHandler
 21002 ;; This function is called by:
 21003 ;;		_SYSTEM_Initialize
 21004 ;; This function uses a reentrant model
 21005 ;;
 21006                           
 21007                           	psect	text84
 21008  0174EE                     __ptext84:
 21009                           	opt callstack 0
 21010  0174EE                     _UART2_Initialize:
 21011                           	opt callstack 22
 21012                           
 21013                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 21014                           
 21015                           ; BSR set to: 60
 21016                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21017                           ;incstack = 0
 21018  0174EE  0139               	movlb	57	; () banked
 21019  0174F0  9596               	bcf	150,2,b	;volatile
 21020                           
 21021                           ; BSR set to: 57
 21022                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 21023  0174F2  0E5A               	movlw	low _UART2_Receive_ISR
 21024  0174F4  6EE6               	movwf	postinc1,c
 21025  0174F6  0E80               	movlw	high _UART2_Receive_ISR
 21026  0174F8  6EE6               	movwf	postinc1,c
 21027  0174FA  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 21028  0174FC  6EE6               	movwf	postinc1,c
 21029  0174FE  EC88  F0BE         	call	_UART2_SetRxInterruptHandler	;wreg free
 21030                           
 21031                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 21032  017502  0139               	movlb	57	; () banked
 21033  017504  9796               	bcf	150,3,b	;volatile
 21034                           
 21035                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 21036  017506  0E1A               	movlw	low _UART2_Transmit_ISR
 21037  017508  6EE6               	movwf	postinc1,c
 21038  01750A  0E7C               	movlw	high _UART2_Transmit_ISR
 21039  01750C  6EE6               	movwf	postinc1,c
 21040  01750E  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 21041  017510  6EE6               	movwf	postinc1,c
 21042  017512  EC74  F0BE         	call	_UART2_SetTxInterruptHandler	;wreg free
 21043                           
 21044                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 21045  017516  013D               	movlb	61	; () banked
 21046  017518  6BD4               	clrf	212,b	;volatile
 21047                           
 21048                           ; BSR set to: 61
 21049                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 21050  01751A  6BD6               	clrf	214,b	;volatile
 21051                           
 21052                           ; BSR set to: 61
 21053                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 21054  01751C  6BD8               	clrf	216,b	;volatile
 21055                           
 21056                           ; BSR set to: 61
 21057                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 21058  01751E  0EB0               	movlw	176
 21059  017520  6FDA               	movwf	218,b	;volatile
 21060                           
 21061                           ; BSR set to: 61
 21062                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 21063  017522  0E80               	movlw	128
 21064  017524  6FDB               	movwf	219,b	;volatile
 21065                           
 21066                           ; BSR set to: 61
 21067                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 21068  017526  6BDC               	clrf	220,b	;volatile
 21069                           
 21070                           ; BSR set to: 61
 21071                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 21072  017528  0E82               	movlw	130
 21073  01752A  6FDD               	movwf	221,b	;volatile
 21074                           
 21075                           ; BSR set to: 61
 21076                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 21077  01752C  0E06               	movlw	6
 21078  01752E  6FDE               	movwf	222,b	;volatile
 21079                           
 21080                           ; BSR set to: 61
 21081                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 21082  017530  6BDF               	clrf	223,b	;volatile
 21083                           
 21084                           ; BSR set to: 61
 21085                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 21086  017532  6BE0               	clrf	224,b	;volatile
 21087                           
 21088                           ; BSR set to: 61
 21089                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 21090  017534  6BE1               	clrf	225,b	;volatile
 21091                           
 21092                           ; BSR set to: 61
 21093                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 21094  017536  6BE2               	clrf	226,b	;volatile
 21095                           
 21096                           ; BSR set to: 61
 21097                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 21098  017538  6A2E               	clrf	_uart2TxHead^0,c	;volatile
 21099                           
 21100                           ; BSR set to: 61
 21101                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 21102  01753A  6A2D               	clrf	_uart2TxTail^0,c	;volatile
 21103                           
 21104                           ; BSR set to: 61
 21105                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 21106  01753C  0E40               	movlw	64
 21107  01753E  6E2C               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 21108                           
 21109                           ; BSR set to: 61
 21110                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 21111  017540  6A2B               	clrf	_uart2RxHead^0,c	;volatile
 21112                           
 21113                           ; BSR set to: 61
 21114                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 21115  017542  6A2A               	clrf	_uart2RxTail^0,c	;volatile
 21116                           
 21117                           ; BSR set to: 61
 21118                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 21119  017544  6A29               	clrf	_uart2RxCount^0,c	;volatile
 21120                           
 21121                           ; BSR set to: 61
 21122                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 21123  017546  0139               	movlb	57	; () banked
 21124  017548  8596               	bsf	150,2,b	;volatile
 21125                           
 21126                           ; BSR set to: 57
 21127                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 21128  01754A  0012               	return		;funcret
 21129  01754C                     __end_of_UART2_Initialize:
 21130                           	opt callstack 0
 21131                           
 21132 ;; *************** function _UART2_SetTxInterruptHandler *****************
 21133 ;; Defined at:
 21134 ;;		line 252 in file "mcc_generated_files/uart2.c"
 21135 ;; Parameters:    Size  Location     Type
 21136 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21137 ;;		 -> UART2_Transmit_ISR(1), 
 21138 ;; Auto vars:     Size  Location     Type
 21139 ;;		None
 21140 ;; Return value:  Size  Location     Type
 21141 ;;                  1  [STACK] void 
 21142 ;; Registers used:
 21143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21144 ;; Tracked objects:
 21145 ;;		On entry : 3F/39
 21146 ;;		On exit  : 0/0
 21147 ;;		Unchanged: 0/0
 21148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21153 ;;Total ram usage:        0 bytes
 21154 ;; Hardware stack levels used:    1
 21155 ;; Hardware stack levels required when called:    6
 21156 ;; This function calls:
 21157 ;;		Nothing
 21158 ;; This function is called by:
 21159 ;;		_UART2_Initialize
 21160 ;; This function uses a reentrant model
 21161 ;;
 21162                           
 21163                           	psect	text85
 21164  017CE8                     __ptext85:
 21165                           	opt callstack 0
 21166  017CE8                     _UART2_SetTxInterruptHandler:
 21167                           	opt callstack 22
 21168                           
 21169                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 21170                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21171                           
 21172                           ; BSR set to: 57
 21173                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21174                           ;incstack = 0
 21175  017CE8  50E1               	movf	fsr1l,w,c
 21176  017CEA  0FFD               	addlw	-3
 21177  017CEC  6ED9               	movwf	fsr2l,c
 21178  017CEE  50E2               	movf	fsr1h,w,c
 21179  017CF0  6EDA               	movwf	fsr2h,c
 21180  017CF2  0EFF               	movlw	255
 21181  017CF4  22DA               	addwfc	fsr2h,f,c
 21182  017CF6  006F FF78  F010    	movff	postinc2,_UART2_TxInterruptHandler
 21183  017CFC  006F FF78  F011    	movff	postinc2,_UART2_TxInterruptHandler+1
 21184  017D02  006F FF74  F012    	movff	postdec2,_UART2_TxInterruptHandler+2
 21185                           
 21186                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21187  017D08  52E5               	movf	postdec1,f,c
 21188  017D0A  52E5               	movf	postdec1,f,c
 21189  017D0C  52E5               	movf	postdec1,f,c
 21190  017D0E  0012               	return		;funcret
 21191  017D10                     __end_of_UART2_SetTxInterruptHandler:
 21192                           	opt callstack 0
 21193                           
 21194 ;; *************** function _UART2_SetRxInterruptHandler *****************
 21195 ;; Defined at:
 21196 ;;		line 248 in file "mcc_generated_files/uart2.c"
 21197 ;; Parameters:    Size  Location     Type
 21198 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21199 ;;		 -> UART2_Receive_ISR(1), 
 21200 ;; Auto vars:     Size  Location     Type
 21201 ;;		None
 21202 ;; Return value:  Size  Location     Type
 21203 ;;                  1  [STACK] void 
 21204 ;; Registers used:
 21205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21206 ;; Tracked objects:
 21207 ;;		On entry : 3F/39
 21208 ;;		On exit  : 0/0
 21209 ;;		Unchanged: 0/0
 21210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21215 ;;Total ram usage:        0 bytes
 21216 ;; Hardware stack levels used:    1
 21217 ;; Hardware stack levels required when called:    6
 21218 ;; This function calls:
 21219 ;;		Nothing
 21220 ;; This function is called by:
 21221 ;;		_UART2_Initialize
 21222 ;; This function uses a reentrant model
 21223 ;;
 21224                           
 21225                           	psect	text86
 21226  017D10                     __ptext86:
 21227                           	opt callstack 0
 21228  017D10                     _UART2_SetRxInterruptHandler:
 21229                           	opt callstack 22
 21230                           
 21231                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 21232                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21233                           
 21234                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21235                           ;incstack = 0
 21236  017D10  50E1               	movf	fsr1l,w,c
 21237  017D12  0FFD               	addlw	-3
 21238  017D14  6ED9               	movwf	fsr2l,c
 21239  017D16  50E2               	movf	fsr1h,w,c
 21240  017D18  6EDA               	movwf	fsr2h,c
 21241  017D1A  0EFF               	movlw	255
 21242  017D1C  22DA               	addwfc	fsr2h,f,c
 21243  017D1E  006F FF78  F013    	movff	postinc2,_UART2_RxInterruptHandler
 21244  017D24  006F FF78  F014    	movff	postinc2,_UART2_RxInterruptHandler+1
 21245  017D2A  006F FF74  F015    	movff	postdec2,_UART2_RxInterruptHandler+2
 21246                           
 21247                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21248  017D30  52E5               	movf	postdec1,f,c
 21249  017D32  52E5               	movf	postdec1,f,c
 21250  017D34  52E5               	movf	postdec1,f,c
 21251  017D36  0012               	return		;funcret
 21252  017D38                     __end_of_UART2_SetRxInterruptHandler:
 21253                           	opt callstack 0
 21254                           
 21255 ;; *************** function _UART1_Initialize *****************
 21256 ;; Defined at:
 21257 ;;		line 79 in file "mcc_generated_files/uart1.c"
 21258 ;; Parameters:    Size  Location     Type
 21259 ;;		None
 21260 ;; Auto vars:     Size  Location     Type
 21261 ;;		None
 21262 ;; Return value:  Size  Location     Type
 21263 ;;                  1  [STACK] void 
 21264 ;; Registers used:
 21265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 21266 ;; Tracked objects:
 21267 ;;		On entry : 0/39
 21268 ;;		On exit  : 3F/39
 21269 ;;		Unchanged: 0/0
 21270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21275 ;;Total ram usage:        0 bytes
 21276 ;; Hardware stack levels used:    1
 21277 ;; Hardware stack levels required when called:    7
 21278 ;; This function calls:
 21279 ;;		_UART1_SetRxInterruptHandler
 21280 ;;		_UART1_SetTxInterruptHandler
 21281 ;; This function is called by:
 21282 ;;		_SYSTEM_Initialize
 21283 ;; This function uses a reentrant model
 21284 ;;
 21285                           
 21286                           	psect	text87
 21287  0173C6                     __ptext87:
 21288                           	opt callstack 0
 21289  0173C6                     _UART1_Initialize:
 21290                           	opt callstack 22
 21291                           
 21292                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 21293                           
 21294                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21295                           ;incstack = 0
 21296  0173C6  0139               	movlb	57	; () banked
 21297  0173C8  9793               	bcf	147,3,b	;volatile
 21298                           
 21299                           ; BSR set to: 57
 21300                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 21301  0173CA  0E3C               	movlw	low _UART1_Receive_ISR
 21302  0173CC  6EE6               	movwf	postinc1,c
 21303  0173CE  0E80               	movlw	high _UART1_Receive_ISR
 21304  0173D0  6EE6               	movwf	postinc1,c
 21305  0173D2  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 21306  0173D4  6EE6               	movwf	postinc1,c
 21307  0173D6  ECB0  F0BE         	call	_UART1_SetRxInterruptHandler	;wreg free
 21308                           
 21309                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 21310  0173DA  0139               	movlb	57	; () banked
 21311  0173DC  9993               	bcf	147,4,b	;volatile
 21312                           
 21313                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 21314  0173DE  0EEE               	movlw	low _UART1_Transmit_ISR
 21315  0173E0  6EE6               	movwf	postinc1,c
 21316  0173E2  0E7B               	movlw	high _UART1_Transmit_ISR
 21317  0173E4  6EE6               	movwf	postinc1,c
 21318  0173E6  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 21319  0173E8  6EE6               	movwf	postinc1,c
 21320  0173EA  EC9C  F0BE         	call	_UART1_SetTxInterruptHandler	;wreg free
 21321                           
 21322                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 21323  0173EE  013D               	movlb	61	; () banked
 21324  0173F0  6BEC               	clrf	236,b	;volatile
 21325                           
 21326                           ; BSR set to: 61
 21327                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 21328  0173F2  6BED               	clrf	237,b	;volatile
 21329                           
 21330                           ; BSR set to: 61
 21331                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 21332  0173F4  6BEE               	clrf	238,b	;volatile
 21333                           
 21334                           ; BSR set to: 61
 21335                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 21336  0173F6  6BEF               	clrf	239,b	;volatile
 21337                           
 21338                           ; BSR set to: 61
 21339                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 21340  0173F8  6BF0               	clrf	240,b	;volatile
 21341                           
 21342                           ; BSR set to: 61
 21343                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 21344  0173FA  6BF1               	clrf	241,b	;volatile
 21345                           
 21346                           ; BSR set to: 61
 21347                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 21348  0173FC  0EB0               	movlw	176
 21349  0173FE  6FF2               	movwf	242,b	;volatile
 21350                           
 21351                           ; BSR set to: 61
 21352                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 21353  017400  0E80               	movlw	128
 21354  017402  6FF3               	movwf	243,b	;volatile
 21355                           
 21356                           ; BSR set to: 61
 21357                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 21358  017404  6BF4               	clrf	244,b	;volatile
 21359                           
 21360                           ; BSR set to: 61
 21361                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 21362  017406  0E82               	movlw	130
 21363  017408  6FF5               	movwf	245,b	;volatile
 21364                           
 21365                           ; BSR set to: 61
 21366                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 21367  01740A  0E06               	movlw	6
 21368  01740C  6FF6               	movwf	246,b	;volatile
 21369                           
 21370                           ; BSR set to: 61
 21371                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 21372  01740E  6BF7               	clrf	247,b	;volatile
 21373                           
 21374                           ; BSR set to: 61
 21375                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 21376  017410  6BF8               	clrf	248,b	;volatile
 21377                           
 21378                           ; BSR set to: 61
 21379                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 21380  017412  6BF9               	clrf	249,b	;volatile
 21381                           
 21382                           ; BSR set to: 61
 21383                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 21384  017414  6BFA               	clrf	250,b	;volatile
 21385                           
 21386                           ; BSR set to: 61
 21387                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 21388  017416  6A34               	clrf	_uart1TxHead^0,c	;volatile
 21389                           
 21390                           ; BSR set to: 61
 21391                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 21392  017418  6A33               	clrf	_uart1TxTail^0,c	;volatile
 21393                           
 21394                           ; BSR set to: 61
 21395                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 21396  01741A  0E40               	movlw	64
 21397  01741C  6E32               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 21398                           
 21399                           ; BSR set to: 61
 21400                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 21401  01741E  6A31               	clrf	_uart1RxHead^0,c	;volatile
 21402                           
 21403                           ; BSR set to: 61
 21404                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 21405  017420  6A30               	clrf	_uart1RxTail^0,c	;volatile
 21406                           
 21407                           ; BSR set to: 61
 21408                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 21409  017422  6A2F               	clrf	_uart1RxCount^0,c	;volatile
 21410                           
 21411                           ; BSR set to: 61
 21412                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 21413  017424  0139               	movlb	57	; () banked
 21414  017426  8793               	bsf	147,3,b	;volatile
 21415                           
 21416                           ; BSR set to: 57
 21417                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 21418  017428  0012               	return		;funcret
 21419  01742A                     __end_of_UART1_Initialize:
 21420                           	opt callstack 0
 21421                           
 21422 ;; *************** function _UART1_SetTxInterruptHandler *****************
 21423 ;; Defined at:
 21424 ;;		line 246 in file "mcc_generated_files/uart1.c"
 21425 ;; Parameters:    Size  Location     Type
 21426 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21427 ;;		 -> UART1_Transmit_ISR(1), 
 21428 ;; Auto vars:     Size  Location     Type
 21429 ;;		None
 21430 ;; Return value:  Size  Location     Type
 21431 ;;                  1  [STACK] void 
 21432 ;; Registers used:
 21433 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21434 ;; Tracked objects:
 21435 ;;		On entry : 3F/39
 21436 ;;		On exit  : 0/0
 21437 ;;		Unchanged: 0/0
 21438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21443 ;;Total ram usage:        0 bytes
 21444 ;; Hardware stack levels used:    1
 21445 ;; Hardware stack levels required when called:    6
 21446 ;; This function calls:
 21447 ;;		Nothing
 21448 ;; This function is called by:
 21449 ;;		_UART1_Initialize
 21450 ;; This function uses a reentrant model
 21451 ;;
 21452                           
 21453                           	psect	text88
 21454  017D38                     __ptext88:
 21455                           	opt callstack 0
 21456  017D38                     _UART1_SetTxInterruptHandler:
 21457                           	opt callstack 22
 21458                           
 21459                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 21460                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21461                           
 21462                           ; BSR set to: 57
 21463                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21464                           ;incstack = 0
 21465  017D38  50E1               	movf	fsr1l,w,c
 21466  017D3A  0FFD               	addlw	-3
 21467  017D3C  6ED9               	movwf	fsr2l,c
 21468  017D3E  50E2               	movf	fsr1h,w,c
 21469  017D40  6EDA               	movwf	fsr2h,c
 21470  017D42  0EFF               	movlw	255
 21471  017D44  22DA               	addwfc	fsr2h,f,c
 21472  017D46  006F FF78  F00A    	movff	postinc2,_UART1_TxInterruptHandler
 21473  017D4C  006F FF78  F00B    	movff	postinc2,_UART1_TxInterruptHandler+1
 21474  017D52  006F FF74  F00C    	movff	postdec2,_UART1_TxInterruptHandler+2
 21475                           
 21476                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21477  017D58  52E5               	movf	postdec1,f,c
 21478  017D5A  52E5               	movf	postdec1,f,c
 21479  017D5C  52E5               	movf	postdec1,f,c
 21480  017D5E  0012               	return		;funcret
 21481  017D60                     __end_of_UART1_SetTxInterruptHandler:
 21482                           	opt callstack 0
 21483                           
 21484 ;; *************** function _UART1_SetRxInterruptHandler *****************
 21485 ;; Defined at:
 21486 ;;		line 241 in file "mcc_generated_files/uart1.c"
 21487 ;; Parameters:    Size  Location     Type
 21488 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21489 ;;		 -> UART1_Receive_ISR(1), 
 21490 ;; Auto vars:     Size  Location     Type
 21491 ;;		None
 21492 ;; Return value:  Size  Location     Type
 21493 ;;                  1  [STACK] void 
 21494 ;; Registers used:
 21495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21496 ;; Tracked objects:
 21497 ;;		On entry : 3F/39
 21498 ;;		On exit  : 0/0
 21499 ;;		Unchanged: 0/0
 21500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21505 ;;Total ram usage:        0 bytes
 21506 ;; Hardware stack levels used:    1
 21507 ;; Hardware stack levels required when called:    6
 21508 ;; This function calls:
 21509 ;;		Nothing
 21510 ;; This function is called by:
 21511 ;;		_UART1_Initialize
 21512 ;; This function uses a reentrant model
 21513 ;;
 21514                           
 21515                           	psect	text89
 21516  017D60                     __ptext89:
 21517                           	opt callstack 0
 21518  017D60                     _UART1_SetRxInterruptHandler:
 21519                           	opt callstack 22
 21520                           
 21521                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 21522                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21523                           
 21524                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21525                           ;incstack = 0
 21526  017D60  50E1               	movf	fsr1l,w,c
 21527  017D62  0FFD               	addlw	-3
 21528  017D64  6ED9               	movwf	fsr2l,c
 21529  017D66  50E2               	movf	fsr1h,w,c
 21530  017D68  6EDA               	movwf	fsr2h,c
 21531  017D6A  0EFF               	movlw	255
 21532  017D6C  22DA               	addwfc	fsr2h,f,c
 21533  017D6E  006F FF78  F00D    	movff	postinc2,_UART1_RxInterruptHandler
 21534  017D74  006F FF78  F00E    	movff	postinc2,_UART1_RxInterruptHandler+1
 21535  017D7A  006F FF74  F00F    	movff	postdec2,_UART1_RxInterruptHandler+2
 21536                           
 21537                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21538  017D80  52E5               	movf	postdec1,f,c
 21539  017D82  52E5               	movf	postdec1,f,c
 21540  017D84  52E5               	movf	postdec1,f,c
 21541  017D86  0012               	return		;funcret
 21542  017D88                     __end_of_UART1_SetRxInterruptHandler:
 21543                           	opt callstack 0
 21544                           
 21545 ;; *************** function _TMR6_Initialize *****************
 21546 ;; Defined at:
 21547 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 21548 ;; Parameters:    Size  Location     Type
 21549 ;;		None
 21550 ;; Auto vars:     Size  Location     Type
 21551 ;;		None
 21552 ;; Return value:  Size  Location     Type
 21553 ;;                  1  [STACK] void 
 21554 ;; Registers used:
 21555 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 21556 ;; Tracked objects:
 21557 ;;		On entry : 3F/39
 21558 ;;		On exit  : 0/0
 21559 ;;		Unchanged: 0/0
 21560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21565 ;;Total ram usage:        0 bytes
 21566 ;; Hardware stack levels used:    1
 21567 ;; Hardware stack levels required when called:    7
 21568 ;; This function calls:
 21569 ;;		_TMR6_SetInterruptHandler
 21570 ;; This function is called by:
 21571 ;;		_SYSTEM_Initialize
 21572 ;; This function uses a reentrant model
 21573 ;;
 21574                           
 21575                           	psect	text90
 21576  017C46                     __ptext90:
 21577                           	opt callstack 0
 21578  017C46                     _TMR6_Initialize:
 21579                           	opt callstack 22
 21580                           
 21581                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 21582                           
 21583                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21584                           ;incstack = 0
 21585  017C46  0E01               	movlw	1
 21586  017C48  6E96               	movwf	150,c	;volatile
 21587                           
 21588                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 21589  017C4A  6A95               	clrf	149,c	;volatile
 21590                           
 21591                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 21592  017C4C  6A97               	clrf	151,c	;volatile
 21593                           
 21594                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 21595  017C4E  0E7C               	movlw	124
 21596  017C50  6E93               	movwf	147,c	;volatile
 21597                           
 21598                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 21599  017C52  6A92               	clrf	146,c	;volatile
 21600                           
 21601                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 21602  017C54  0139               	movlb	57	; () banked
 21603  017C56  91A9               	bcf	169,0,b	;volatile
 21604                           
 21605                           ; BSR set to: 57
 21606                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 21607  017C58  8199               	bsf	153,0,b	;volatile
 21608                           
 21609                           ; BSR set to: 57
 21610                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 21611  017C5A  0E60               	movlw	low _TMR6_DefaultInterruptHandler
 21612  017C5C  6EE6               	movwf	postinc1,c
 21613  017C5E  0E78               	movlw	high _TMR6_DefaultInterruptHandler
 21614  017C60  6EE6               	movwf	postinc1,c
 21615  017C62  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 21616  017C64  6EE6               	movwf	postinc1,c
 21617  017C66  ECC4  F0BE         	call	_TMR6_SetInterruptHandler	;wreg free
 21618                           
 21619                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 21620  017C6A  0EE0               	movlw	224
 21621  017C6C  6E94               	movwf	148,c	;volatile
 21622                           
 21623                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 21624  017C6E  0012               	return		;funcret
 21625  017C70                     __end_of_TMR6_Initialize:
 21626                           	opt callstack 0
 21627                           
 21628 ;; *************** function _TMR6_SetInterruptHandler *****************
 21629 ;; Defined at:
 21630 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 21631 ;; Parameters:    Size  Location     Type
 21632 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21633 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 21634 ;; Auto vars:     Size  Location     Type
 21635 ;;		None
 21636 ;; Return value:  Size  Location     Type
 21637 ;;                  1  [STACK] void 
 21638 ;; Registers used:
 21639 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21640 ;; Tracked objects:
 21641 ;;		On entry : 3F/39
 21642 ;;		On exit  : 0/0
 21643 ;;		Unchanged: 0/0
 21644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21649 ;;Total ram usage:        0 bytes
 21650 ;; Hardware stack levels used:    1
 21651 ;; Hardware stack levels required when called:    6
 21652 ;; This function calls:
 21653 ;;		Nothing
 21654 ;; This function is called by:
 21655 ;;		_TMR6_Initialize
 21656 ;; This function uses a reentrant model
 21657 ;;
 21658                           
 21659                           	psect	text91
 21660  017D88                     __ptext91:
 21661                           	opt callstack 0
 21662  017D88                     _TMR6_SetInterruptHandler:
 21663                           	opt callstack 22
 21664                           
 21665                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 21666                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21667                           
 21668                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21669                           ;incstack = 0
 21670  017D88  50E1               	movf	fsr1l,w,c
 21671  017D8A  0FFD               	addlw	-3
 21672  017D8C  6ED9               	movwf	fsr2l,c
 21673  017D8E  50E2               	movf	fsr1h,w,c
 21674  017D90  6EDA               	movwf	fsr2h,c
 21675  017D92  0EFF               	movlw	255
 21676  017D94  22DA               	addwfc	fsr2h,f,c
 21677  017D96  006F FF78  F001    	movff	postinc2,_TMR6_InterruptHandler
 21678  017D9C  006F FF78  F002    	movff	postinc2,_TMR6_InterruptHandler+1
 21679  017DA2  006F FF74  F003    	movff	postdec2,_TMR6_InterruptHandler+2
 21680                           
 21681                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 21682  017DA8  52E5               	movf	postdec1,f,c
 21683  017DAA  52E5               	movf	postdec1,f,c
 21684  017DAC  52E5               	movf	postdec1,f,c
 21685  017DAE  0012               	return		;funcret
 21686  017DB0                     __end_of_TMR6_SetInterruptHandler:
 21687                           	opt callstack 0
 21688                           
 21689 ;; *************** function _TMR5_Initialize *****************
 21690 ;; Defined at:
 21691 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 21692 ;; Parameters:    Size  Location     Type
 21693 ;;		None
 21694 ;; Auto vars:     Size  Location     Type
 21695 ;;		None
 21696 ;; Return value:  Size  Location     Type
 21697 ;;                  1  [STACK] void 
 21698 ;; Registers used:
 21699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 21700 ;; Tracked objects:
 21701 ;;		On entry : 0/39
 21702 ;;		On exit  : 0/0
 21703 ;;		Unchanged: 0/0
 21704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21709 ;;Total ram usage:        0 bytes
 21710 ;; Hardware stack levels used:    1
 21711 ;; Hardware stack levels required when called:    7
 21712 ;; This function calls:
 21713 ;;		_TMR5_SetInterruptHandler
 21714 ;; This function is called by:
 21715 ;;		_SYSTEM_Initialize
 21716 ;; This function uses a reentrant model
 21717 ;;
 21718                           
 21719                           	psect	text92
 21720  01781A                     __ptext92:
 21721                           	opt callstack 0
 21722  01781A                     _TMR5_Initialize:
 21723                           	opt callstack 22
 21724                           
 21725                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 21726                           
 21727                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21728                           ;incstack = 0
 21729  01781A  6A9B               	clrf	155,c	;volatile
 21730                           
 21731                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 21732  01781C  6A9C               	clrf	156,c	;volatile
 21733                           
 21734                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 21735  01781E  0E01               	movlw	1
 21736  017820  6E9D               	movwf	157,c	;volatile
 21737                           
 21738                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 21739  017822  0E63               	movlw	99
 21740  017824  6E99               	movwf	153,c	;volatile
 21741                           
 21742                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 21743  017826  0EC0               	movlw	192
 21744  017828  6E98               	movwf	152,c	;volatile
 21745                           
 21746                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 21747  01782A  5098               	movf	152,w,c	;volatile
 21748  01782C  006F FE64  F035    	movff	16281,btemp	;volatile
 21749  017832  6A36               	clrf	(btemp+1)^0,c
 21750  017834  0060  F0D4  F036   	movff	btemp,btemp+1
 21751  01783A  6A35               	clrf	btemp^0,c
 21752  01783C  1035               	iorwf	btemp^0,w,c
 21753  01783E  6E26               	movwf	_timer5ReloadVal^0,c	;volatile
 21754  017840  5036               	movf	(btemp+1)^0,w,c
 21755  017842  6E27               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 21756                           
 21757                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 21758  017844  0139               	movlb	57	; () banked
 21759  017846  9DA8               	bcf	168,6,b	;volatile
 21760                           
 21761                           ; BSR set to: 57
 21762                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 21763  017848  8D98               	bsf	152,6,b	;volatile
 21764                           
 21765                           ; BSR set to: 57
 21766                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 21767  01784A  0ECA               	movlw	low _TMR5_DefaultInterruptHandler
 21768  01784C  6EE6               	movwf	postinc1,c
 21769  01784E  0E80               	movlw	high _TMR5_DefaultInterruptHandler
 21770  017850  6EE6               	movwf	postinc1,c
 21771  017852  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 21772  017854  6EE6               	movwf	postinc1,c
 21773  017856  ECD8  F0BE         	call	_TMR5_SetInterruptHandler	;wreg free
 21774                           
 21775                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 21776  01785A  0E31               	movlw	49
 21777  01785C  6E9A               	movwf	154,c	;volatile
 21778                           
 21779                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 21780  01785E  0012               	return		;funcret
 21781  017860                     __end_of_TMR5_Initialize:
 21782                           	opt callstack 0
 21783                           
 21784 ;; *************** function _TMR5_SetInterruptHandler *****************
 21785 ;; Defined at:
 21786 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 21787 ;; Parameters:    Size  Location     Type
 21788 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21789 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 21790 ;; Auto vars:     Size  Location     Type
 21791 ;;		None
 21792 ;; Return value:  Size  Location     Type
 21793 ;;                  1  [STACK] void 
 21794 ;; Registers used:
 21795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21796 ;; Tracked objects:
 21797 ;;		On entry : 3F/39
 21798 ;;		On exit  : 0/0
 21799 ;;		Unchanged: 0/0
 21800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21805 ;;Total ram usage:        0 bytes
 21806 ;; Hardware stack levels used:    1
 21807 ;; Hardware stack levels required when called:    6
 21808 ;; This function calls:
 21809 ;;		Nothing
 21810 ;; This function is called by:
 21811 ;;		_TMR5_Initialize
 21812 ;; This function uses a reentrant model
 21813 ;;
 21814                           
 21815                           	psect	text93
 21816  017DB0                     __ptext93:
 21817                           	opt callstack 0
 21818  017DB0                     _TMR5_SetInterruptHandler:
 21819                           	opt callstack 22
 21820                           
 21821                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 21822                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21823                           
 21824                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21825                           ;incstack = 0
 21826  017DB0  50E1               	movf	fsr1l,w,c
 21827  017DB2  0FFD               	addlw	-3
 21828  017DB4  6ED9               	movwf	fsr2l,c
 21829  017DB6  50E2               	movf	fsr1h,w,c
 21830  017DB8  6EDA               	movwf	fsr2h,c
 21831  017DBA  0EFF               	movlw	255
 21832  017DBC  22DA               	addwfc	fsr2h,f,c
 21833  017DBE  006F FF78  F0D3    	movff	postinc2,_TMR5_InterruptHandler
 21834  017DC4  006F FF78  F0D4    	movff	postinc2,_TMR5_InterruptHandler+1
 21835  017DCA  006F FF74  F0D5    	movff	postdec2,_TMR5_InterruptHandler+2
 21836                           
 21837                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 21838  017DD0  52E5               	movf	postdec1,f,c
 21839  017DD2  52E5               	movf	postdec1,f,c
 21840  017DD4  52E5               	movf	postdec1,f,c
 21841  017DD6  0012               	return		;funcret
 21842  017DD8                     __end_of_TMR5_SetInterruptHandler:
 21843                           	opt callstack 0
 21844                           
 21845 ;; *************** function _TMR2_Initialize *****************
 21846 ;; Defined at:
 21847 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 21848 ;; Parameters:    Size  Location     Type
 21849 ;;		None
 21850 ;; Auto vars:     Size  Location     Type
 21851 ;;		None
 21852 ;; Return value:  Size  Location     Type
 21853 ;;                  1  [STACK] void 
 21854 ;; Registers used:
 21855 ;;		wreg, status,2
 21856 ;; Tracked objects:
 21857 ;;		On entry : 3F/3F
 21858 ;;		On exit  : 3F/39
 21859 ;;		Unchanged: 0/0
 21860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21865 ;;Total ram usage:        0 bytes
 21866 ;; Hardware stack levels used:    1
 21867 ;; Hardware stack levels required when called:    6
 21868 ;; This function calls:
 21869 ;;		Nothing
 21870 ;; This function is called by:
 21871 ;;		_SYSTEM_Initialize
 21872 ;; This function uses a reentrant model
 21873 ;;
 21874                           
 21875                           	psect	text94
 21876  018116                     __ptext94:
 21877                           	opt callstack 0
 21878  018116                     _TMR2_Initialize:
 21879                           	opt callstack 23
 21880                           
 21881                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 21882                           
 21883                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21884                           ;incstack = 0
 21885  018116  0E01               	movlw	1
 21886  018118  6EAE               	movwf	174,c	;volatile
 21887                           
 21888                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 21889  01811A  6AAD               	clrf	173,c	;volatile
 21890                           
 21891                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 21892  01811C  6AAF               	clrf	175,c	;volatile
 21893                           
 21894                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 21895  01811E  0E63               	movlw	99
 21896  018120  6EAB               	movwf	171,c	;volatile
 21897                           
 21898                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 21899  018122  6AAA               	clrf	170,c	;volatile
 21900                           
 21901                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 21902  018124  0139               	movlb	57	; () banked
 21903  018126  95A4               	bcf	164,2,b	;volatile
 21904                           
 21905                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 21906  018128  0EC0               	movlw	192
 21907  01812A  6EAC               	movwf	172,c	;volatile
 21908                           
 21909                           ; BSR set to: 57
 21910                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 21911  01812C  0012               	return		;funcret
 21912  01812E                     __end_of_TMR2_Initialize:
 21913                           	opt callstack 0
 21914                           
 21915 ;; *************** function _SPI1_Initialize *****************
 21916 ;; Defined at:
 21917 ;;		line 64 in file "mcc_generated_files/spi1.c"
 21918 ;; Parameters:    Size  Location     Type
 21919 ;;		None
 21920 ;; Auto vars:     Size  Location     Type
 21921 ;;		None
 21922 ;; Return value:  Size  Location     Type
 21923 ;;                  1  [STACK] void 
 21924 ;; Registers used:
 21925 ;;		wreg, status,2
 21926 ;; Tracked objects:
 21927 ;;		On entry : 3F/39
 21928 ;;		On exit  : 3F/3D
 21929 ;;		Unchanged: 0/0
 21930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21935 ;;Total ram usage:        0 bytes
 21936 ;; Hardware stack levels used:    1
 21937 ;; Hardware stack levels required when called:    6
 21938 ;; This function calls:
 21939 ;;		Nothing
 21940 ;; This function is called by:
 21941 ;;		_SYSTEM_Initialize
 21942 ;; This function uses a reentrant model
 21943 ;;
 21944                           
 21945                           	psect	text95
 21946  01812E                     __ptext95:
 21947                           	opt callstack 0
 21948  01812E                     _SPI1_Initialize:
 21949                           	opt callstack 23
 21950                           
 21951                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 21952                           
 21953                           ; BSR set to: 57
 21954                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21955                           ;incstack = 0
 21956  01812E  0E40               	movlw	64
 21957  018130  013D               	movlb	61	; () banked
 21958  018132  6F15               	movwf	21,b	;volatile
 21959                           
 21960                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 21961  018134  0E03               	movlw	3
 21962  018136  6F16               	movwf	22,b	;volatile
 21963                           
 21964                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 21965  018138  0E4F               	movlw	79
 21966  01813A  6F19               	movwf	25,b	;volatile
 21967                           
 21968                           ; BSR set to: 61
 21969                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 21970  01813C  6B1C               	clrf	28,b	;volatile
 21971                           
 21972                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 21973  01813E  0E83               	movlw	131
 21974  018140  6F14               	movwf	20,b	;volatile
 21975                           
 21976                           ; BSR set to: 61
 21977                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 21978  018142  0012               	return		;funcret
 21979  018144                     __end_of_SPI1_Initialize:
 21980                           	opt callstack 0
 21981                           
 21982 ;; *************** function _PWM8_Initialize *****************
 21983 ;; Defined at:
 21984 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 21985 ;; Parameters:    Size  Location     Type
 21986 ;;		None
 21987 ;; Auto vars:     Size  Location     Type
 21988 ;;		None
 21989 ;; Return value:  Size  Location     Type
 21990 ;;                  1  [STACK] void 
 21991 ;; Registers used:
 21992 ;;		wreg, status,2
 21993 ;; Tracked objects:
 21994 ;;		On entry : 0/3E
 21995 ;;		On exit  : 3F/3F
 21996 ;;		Unchanged: 0/0
 21997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22002 ;;Total ram usage:        0 bytes
 22003 ;; Hardware stack levels used:    1
 22004 ;; Hardware stack levels required when called:    6
 22005 ;; This function calls:
 22006 ;;		Nothing
 22007 ;; This function is called by:
 22008 ;;		_SYSTEM_Initialize
 22009 ;; This function uses a reentrant model
 22010 ;;
 22011                           
 22012                           	psect	text96
 22013  018144                     __ptext96:
 22014                           	opt callstack 0
 22015  018144                     _PWM8_Initialize:
 22016                           	opt callstack 23
 22017                           
 22018                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 22019                           
 22020                           ; BSR set to: 61
 22021                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22022                           ;incstack = 0
 22023  018144  0E80               	movlw	128
 22024  018146  6E62               	movwf	98,c	;volatile
 22025                           
 22026                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 22027  018148  6A61               	clrf	97,c	;volatile
 22028                           
 22029                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 22030  01814A  0E40               	movlw	64
 22031  01814C  6E60               	movwf	96,c	;volatile
 22032                           
 22033                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 22034  01814E  013F               	movlb	63	; () banked
 22035  018150  515F               	movf	95,w,b	;volatile
 22036  018152  0B3F               	andlw	-193
 22037  018154  0940               	iorlw	64
 22038  018156  6F5F               	movwf	95,b	;volatile
 22039                           
 22040                           ; BSR set to: 63
 22041                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22042  018158  0012               	return		;funcret
 22043  01815A                     __end_of_PWM8_Initialize:
 22044                           	opt callstack 0
 22045                           
 22046 ;; *************** function _PMD_Initialize *****************
 22047 ;; Defined at:
 22048 ;;		line 89 in file "mcc_generated_files/mcc.c"
 22049 ;; Parameters:    Size  Location     Type
 22050 ;;		None
 22051 ;; Auto vars:     Size  Location     Type
 22052 ;;		None
 22053 ;; Return value:  Size  Location     Type
 22054 ;;                  1  [STACK] void 
 22055 ;; Registers used:
 22056 ;;		None
 22057 ;; Tracked objects:
 22058 ;;		On entry : 3F/39
 22059 ;;		On exit  : 3F/39
 22060 ;;		Unchanged: 0/0
 22061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22066 ;;Total ram usage:        0 bytes
 22067 ;; Hardware stack levels used:    1
 22068 ;; Hardware stack levels required when called:    6
 22069 ;; This function calls:
 22070 ;;		Nothing
 22071 ;; This function is called by:
 22072 ;;		_SYSTEM_Initialize
 22073 ;; This function uses a reentrant model
 22074 ;;
 22075                           
 22076                           	psect	text97
 22077  018170                     __ptext97:
 22078                           	opt callstack 0
 22079  018170                     _PMD_Initialize:
 22080                           	opt callstack 23
 22081                           
 22082                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x00;
 22083                           
 22084                           ; BSR set to: 63
 22085                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22086                           ;incstack = 0
 22087  018170  0139               	movlb	57	; () banked
 22088  018172  6BC0               	clrf	192,b	;volatile
 22089                           
 22090                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x00;
 22091  018174  6BC1               	clrf	193,b	;volatile
 22092                           
 22093                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x00;
 22094  018176  6BC2               	clrf	194,b	;volatile
 22095                           
 22096                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0x00;
 22097  018178  6BC3               	clrf	195,b	;volatile
 22098                           
 22099                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0x00;
 22100  01817A  6BC4               	clrf	196,b	;volatile
 22101                           
 22102                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x00;
 22103  01817C  6BC5               	clrf	197,b	;volatile
 22104                           
 22105                           ;mcc_generated_files/mcc.c: 104:     PMD6 = 0x00;
 22106  01817E  6BC6               	clrf	198,b	;volatile
 22107                           
 22108                           ;mcc_generated_files/mcc.c: 106:     PMD7 = 0x00;
 22109  018180  6BC7               	clrf	199,b	;volatile
 22110                           
 22111                           ; BSR set to: 57
 22112                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22113  018182  0012               	return		;funcret
 22114  018184                     __end_of_PMD_Initialize:
 22115                           	opt callstack 0
 22116                           
 22117 ;; *************** function _PIN_MANAGER_Initialize *****************
 22118 ;; Defined at:
 22119 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 22120 ;; Parameters:    Size  Location     Type
 22121 ;;		None
 22122 ;; Auto vars:     Size  Location     Type
 22123 ;;		None
 22124 ;; Return value:  Size  Location     Type
 22125 ;;                  1  [STACK] void 
 22126 ;; Registers used:
 22127 ;;		wreg, status,2
 22128 ;; Tracked objects:
 22129 ;;		On entry : 3F/39
 22130 ;;		On exit  : 3F/3A
 22131 ;;		Unchanged: 0/0
 22132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22137 ;;Total ram usage:        0 bytes
 22138 ;; Hardware stack levels used:    1
 22139 ;; Hardware stack levels required when called:    6
 22140 ;; This function calls:
 22141 ;;		Nothing
 22142 ;; This function is called by:
 22143 ;;		_SYSTEM_Initialize
 22144 ;; This function uses a reentrant model
 22145 ;;
 22146                           
 22147                           	psect	text98
 22148  016F28                     __ptext98:
 22149                           	opt callstack 0
 22150  016F28                     _PIN_MANAGER_Initialize:
 22151                           	opt callstack 23
 22152                           
 22153                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 22154                           
 22155                           ; BSR set to: 57
 22156                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22157                           ;incstack = 0
 22158  016F28  0E07               	movlw	7
 22159  016F2A  6EBE               	movwf	190,c	;volatile
 22160                           
 22161                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 22162  016F2C  6ABD               	clrf	189,c	;volatile
 22163                           
 22164                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 22165  016F2E  6ABA               	clrf	186,c	;volatile
 22166                           
 22167                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 22168  016F30  6ABF               	clrf	191,c	;volatile
 22169                           
 22170                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 22171  016F32  6ABB               	clrf	187,c	;volatile
 22172                           
 22173                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 22174  016F34  0E07               	movlw	7
 22175  016F36  6EBC               	movwf	188,c	;volatile
 22176                           
 22177                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 22178  016F38  6AC6               	clrf	198,c	;volatile
 22179                           
 22180                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 22181  016F3A  0E0F               	movlw	15
 22182  016F3C  6EC7               	movwf	199,c	;volatile
 22183                           
 22184                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 22185  016F3E  68C2               	setf	194,c	;volatile
 22186                           
 22187                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 22188  016F40  0EBF               	movlw	191
 22189  016F42  6EC3               	movwf	195,c	;volatile
 22190                           
 22191                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 22192  016F44  0E90               	movlw	144
 22193  016F46  6EC4               	movwf	196,c	;volatile
 22194                           
 22195                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 22196  016F48  0E0C               	movlw	12
 22197  016F4A  6EC5               	movwf	197,c	;volatile
 22198                           
 22199                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 22200  016F4C  013A               	movlb	58	; () banked
 22201  016F4E  6B70               	clrf	112,b	;volatile
 22202                           
 22203                           ; BSR set to: 58
 22204                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 22205  016F50  6B60               	clrf	96,b	;volatile
 22206                           
 22207                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 22208  016F52  0E3C               	movlw	60
 22209  016F54  6F50               	movwf	80,b	;volatile
 22210                           
 22211                           ; BSR set to: 58
 22212                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 22213  016F56  6B80               	clrf	128,b	;volatile
 22214                           
 22215                           ; BSR set to: 58
 22216                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 22217  016F58  6B90               	clrf	144,b	;volatile
 22218                           
 22219                           ; BSR set to: 58
 22220                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 22221  016F5A  6940               	setf	64,b	;volatile
 22222                           
 22223                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 22224  016F5C  0E0C               	movlw	12
 22225  016F5E  6F71               	movwf	113,b	;volatile
 22226                           
 22227                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 22228  016F60  0E0F               	movlw	15
 22229  016F62  6F91               	movwf	145,b	;volatile
 22230                           
 22231                           ; BSR set to: 58
 22232                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 22233  016F64  6B81               	clrf	129,b	;volatile
 22234                           
 22235                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 22236  016F66  0E87               	movlw	135
 22237  016F68  6F51               	movwf	81,b	;volatile
 22238                           
 22239                           ; BSR set to: 58
 22240                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 22241  016F6A  6B41               	clrf	65,b	;volatile
 22242                           
 22243                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 22244  016F6C  0E97               	movlw	151
 22245  016F6E  6F61               	movwf	97,b	;volatile
 22246                           
 22247                           ; BSR set to: 58
 22248                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 22249  016F70  6B82               	clrf	130,b	;volatile
 22250                           
 22251                           ; BSR set to: 58
 22252                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 22253  016F72  6B92               	clrf	146,b	;volatile
 22254                           
 22255                           ; BSR set to: 58
 22256                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 22257  016F74  6B42               	clrf	66,b	;volatile
 22258                           
 22259                           ; BSR set to: 58
 22260                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 22261  016F76  6B52               	clrf	82,b	;volatile
 22262                           
 22263                           ; BSR set to: 58
 22264                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 22265  016F78  6B62               	clrf	98,b	;volatile
 22266                           
 22267                           ; BSR set to: 58
 22268                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 22269  016F7A  6B72               	clrf	114,b	;volatile
 22270                           
 22271                           ; BSR set to: 58
 22272                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 22273  016F7C  6943               	setf	67,b	;volatile
 22274                           
 22275                           ; BSR set to: 58
 22276                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 22277  016F7E  6953               	setf	83,b	;volatile
 22278                           
 22279                           ; BSR set to: 58
 22280                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 22281  016F80  6963               	setf	99,b	;volatile
 22282                           
 22283                           ; BSR set to: 58
 22284                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 22285  016F82  6973               	setf	115,b	;volatile
 22286                           
 22287                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 22288  016F84  0E07               	movlw	7
 22289  016F86  6F83               	movwf	131,b	;volatile
 22290                           
 22291                           ; BSR set to: 58
 22292                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 22293  016F88  6993               	setf	147,b	;volatile
 22294                           
 22295                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 22296  016F8A  0E0F               	movlw	15
 22297  016F8C  6FE8               	movwf	232,b	;volatile
 22298                           
 22299                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 22300  016F8E  0E13               	movlw	19
 22301  016F90  6FDE               	movwf	222,b	;volatile
 22302                           
 22303                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 22304  016F92  0E16               	movlw	22
 22305  016F94  6F0E               	movwf	14,b	;volatile
 22306                           
 22307                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 22308  016F96  0E1E               	movlw	30
 22309  016F98  6F13               	movwf	19,b	;volatile
 22310                           
 22311                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 22312  016F9A  0E08               	movlw	8
 22313  016F9C  6FC0               	movwf	192,b	;volatile
 22314                           
 22315                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 22316  016F9E  0E10               	movlw	16
 22317  016FA0  6F19               	movwf	25,b	;volatile
 22318                           
 22319                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 22320  016FA2  0E09               	movlw	9
 22321  016FA4  6FC1               	movwf	193,b	;volatile
 22322                           
 22323                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 22324  016FA6  0E1F               	movlw	31
 22325  016FA8  6F15               	movwf	21,b	;volatile
 22326                           
 22327                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 22328  016FAA  0E13               	movlw	19
 22329  016FAC  6F16               	movwf	22,b	;volatile
 22330                           
 22331                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 22332  016FAE  0E17               	movlw	23
 22333  016FB0  6FE5               	movwf	229,b	;volatile
 22334                           
 22335                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 22336  016FB2  0E14               	movlw	20
 22337  016FB4  6FDF               	movwf	223,b	;volatile
 22338                           
 22339                           ; BSR set to: 58
 22340                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 22341  016FB6  0012               	return		;funcret
 22342  016FB8                     __end_of_PIN_MANAGER_Initialize:
 22343                           	opt callstack 0
 22344                           
 22345 ;; *************** function _OSCILLATOR_Initialize *****************
 22346 ;; Defined at:
 22347 ;;		line 71 in file "mcc_generated_files/mcc.c"
 22348 ;; Parameters:    Size  Location     Type
 22349 ;;		None
 22350 ;; Auto vars:     Size  Location     Type
 22351 ;;		None
 22352 ;; Return value:  Size  Location     Type
 22353 ;;                  1  [STACK] void 
 22354 ;; Registers used:
 22355 ;;		wreg, status,2
 22356 ;; Tracked objects:
 22357 ;;		On entry : 3F/3A
 22358 ;;		On exit  : 3F/39
 22359 ;;		Unchanged: 0/0
 22360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22365 ;;Total ram usage:        0 bytes
 22366 ;; Hardware stack levels used:    1
 22367 ;; Hardware stack levels required when called:    6
 22368 ;; This function calls:
 22369 ;;		Nothing
 22370 ;; This function is called by:
 22371 ;;		_SYSTEM_Initialize
 22372 ;; This function uses a reentrant model
 22373 ;;
 22374                           
 22375                           	psect	text99
 22376  01815A                     __ptext99:
 22377                           	opt callstack 0
 22378  01815A                     _OSCILLATOR_Initialize:
 22379                           	opt callstack 23
 22380                           
 22381                           ;mcc_generated_files/mcc.c: 74:     OSCCON1 = 0x20;
 22382                           
 22383                           ; BSR set to: 58
 22384                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22385                           ;incstack = 0
 22386  01815A  0E20               	movlw	32
 22387  01815C  0139               	movlb	57	; () banked
 22388  01815E  6FD9               	movwf	217,b	;volatile
 22389                           
 22390                           ; BSR set to: 57
 22391                           ;mcc_generated_files/mcc.c: 76:     OSCCON3 = 0x00;
 22392  018160  6BDB               	clrf	219,b	;volatile
 22393                           
 22394                           ; BSR set to: 57
 22395                           ;mcc_generated_files/mcc.c: 78:     OSCEN = 0x00;
 22396  018162  6BDD               	clrf	221,b	;volatile
 22397                           
 22398                           ;mcc_generated_files/mcc.c: 80:     OSCFRQ = 0x02;
 22399  018164  0E02               	movlw	2
 22400  018166  6FDF               	movwf	223,b	;volatile
 22401                           
 22402                           ; BSR set to: 57
 22403                           ;mcc_generated_files/mcc.c: 82:     OSCTUNE = 0x00;
 22404  018168  6BDE               	clrf	222,b	;volatile
 22405  01816A                     l171:
 22406                           
 22407                           ; BSR set to: 57
 22408                           ;mcc_generated_files/mcc.c: 84:     while(PLLR == 0)
 22409  01816A  B1DC               	btfsc	220,0,b	;volatile
 22410  01816C  0012               	return	
 22411  01816E  D7FD               	goto	l171
 22412  018170                     __end_of_OSCILLATOR_Initialize:
 22413                           	opt callstack 0
 22414                           
 22415 ;; *************** function _INTERRUPT_Initialize *****************
 22416 ;; Defined at:
 22417 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 22418 ;; Parameters:    Size  Location     Type
 22419 ;;		None
 22420 ;; Auto vars:     Size  Location     Type
 22421 ;;  state           1  [STACK] _Bool 
 22422 ;; Return value:  Size  Location     Type
 22423 ;;                  1  [STACK] void 
 22424 ;; Registers used:
 22425 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 22426 ;; Tracked objects:
 22427 ;;		On entry : 0/0
 22428 ;;		On exit  : 3F/39
 22429 ;;		Unchanged: 0/0
 22430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22435 ;;Total ram usage:        0 bytes
 22436 ;; Hardware stack levels used:    1
 22437 ;; Hardware stack levels required when called:    6
 22438 ;; This function calls:
 22439 ;;		Nothing
 22440 ;; This function is called by:
 22441 ;;		_SYSTEM_Initialize
 22442 ;; This function uses a reentrant model
 22443 ;;
 22444                           
 22445                           	psect	text100
 22446  0172FC                     __ptext100:
 22447                           	opt callstack 0
 22448  0172FC                     _INTERRUPT_Initialize:
 22449                           	opt callstack 0
 22450                           
 22451                           ; BSR set to: 57
 22452                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22453  0172FC  52E6               	movf	postinc1,f,c
 22454                           
 22455                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 22456                           
 22457                           ;incstack = 0
 22458  0172FE  8AD2               	bsf	210,5,c	;volatile
 22459                           
 22460                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 22461  017300  AED2               	btfss	16338,7,c	;volatile
 22462  017302  D003               	goto	u7780
 22463  017304  6A40               	clrf	(btemp+11)^0,c
 22464  017306  2A40               	incf	(btemp+11)^0,f,c
 22465  017308  D001               	goto	u7798
 22466  01730A                     u7780:
 22467  01730A  6A40               	clrf	(btemp+11)^0,c
 22468  01730C                     u7798:
 22469                           
 22470                           ;stkvar	_state @ sp[(-1)+0]
 22471  01730C  0EFF               	movlw	-1
 22472  01730E  0060  F103  FFE3   	movff	btemp+11,plusw1
 22473                           
 22474                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 22475  017314  9ED2               	bcf	16338,7,c	;volatile
 22476                           
 22477                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 22478  017316  0E55               	movlw	85
 22479  017318  6ED4               	movwf	212,c	;volatile
 22480                           
 22481                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 22482  01731A  0EAA               	movlw	170
 22483  01731C  6ED4               	movwf	212,c	;volatile
 22484                           
 22485                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 22486  01731E  90D4               	bcf	212,0,c	;volatile
 22487                           
 22488                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 22489  017320  0138               	movlb	56	; () banked
 22490  017322  6B9F               	clrf	159,b	;volatile
 22491                           
 22492                           ; BSR set to: 56
 22493                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 22494  017324  6B9E               	clrf	158,b	;volatile
 22495                           
 22496                           ; BSR set to: 56
 22497                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 22498  017326  0E08               	movlw	8
 22499  017328  6F9D               	movwf	157,b	;volatile
 22500                           
 22501                           ; BSR set to: 56
 22502                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 22503  01732A  0E55               	movlw	85
 22504  01732C  6ED4               	movwf	212,c	;volatile
 22505                           
 22506                           ; BSR set to: 56
 22507                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 22508  01732E  0EAA               	movlw	170
 22509  017330  6ED4               	movwf	212,c	;volatile
 22510                           
 22511                           ; BSR set to: 56
 22512                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 22513  017332  80D4               	bsf	212,0,c	;volatile
 22514                           
 22515                           ; BSR set to: 56
 22516                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 22517                           ;stkvar	_state @ sp[(-1)+0]
 22518  017334  0EFF               	movlw	-1
 22519  017336  B0E3               	btfsc	plusw1,0,c
 22520  017338  D002               	bra	u7805
 22521  01733A  9ED2               	bcf	16338,7,c	;volatile
 22522  01733C  D001               	bra	u7806
 22523  01733E                     u7805:
 22524  01733E  8ED2               	bsf	16338,7,c	;volatile
 22525  017340                     u7806:
 22526                           
 22527                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 22528  017340  0139               	movlb	57	; () banked
 22529  017342  8782               	bsf	130,3,b	;volatile
 22530                           
 22531                           ; BSR set to: 57
 22532                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 22533  017344  8382               	bsf	130,1,b	;volatile
 22534                           
 22535                           ; BSR set to: 57
 22536                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 22537  017346  8182               	bsf	130,0,b	;volatile
 22538                           
 22539                           ; BSR set to: 57
 22540                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 22541  017348  8582               	bsf	130,2,b	;volatile
 22542                           
 22543                           ; BSR set to: 57
 22544                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 22545  01734A  8786               	bsf	134,3,b	;volatile
 22546                           
 22547                           ; BSR set to: 57
 22548                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 22549  01734C  8586               	bsf	134,2,b	;volatile
 22550                           
 22551                           ; BSR set to: 57
 22552                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 22553  01734E  8983               	bsf	131,4,b	;volatile
 22554                           
 22555                           ; BSR set to: 57
 22556                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 22557  017350  8783               	bsf	131,3,b	;volatile
 22558                           
 22559                           ; BSR set to: 57
 22560                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 22561  017352  8181               	bsf	129,0,b	;volatile
 22562                           
 22563                           ; BSR set to: 57
 22564                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 22565  017354  8185               	bsf	133,0,b	;volatile
 22566                           
 22567                           ; BSR set to: 57
 22568                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 22569  017356  8189               	bsf	137,0,b	;volatile
 22570                           
 22571                           ; BSR set to: 57
 22572                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 22573  017358  9D88               	bcf	136,6,b	;volatile
 22574                           
 22575                           ; BSR set to: 57
 22576                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 22577  01735A  8581               	bsf	129,2,b	;volatile
 22578                           
 22579                           ; BSR set to: 57
 22580                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 22581  01735C  8781               	bsf	129,3,b	;volatile
 22582                           
 22583                           ; BSR set to: 57
 22584                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 22585  01735E  52E5               	movf	postdec1,f,c
 22586  017360  0012               	return		;funcret
 22587  017362                     __end_of_INTERRUPT_Initialize:
 22588                           	opt callstack 0
 22589                           
 22590 ;; *************** function _FVR_Initialize *****************
 22591 ;; Defined at:
 22592 ;;		line 58 in file "mcc_generated_files/fvr.c"
 22593 ;; Parameters:    Size  Location     Type
 22594 ;;		None
 22595 ;; Auto vars:     Size  Location     Type
 22596 ;;		None
 22597 ;; Return value:  Size  Location     Type
 22598 ;;                  1  [STACK] void 
 22599 ;; Registers used:
 22600 ;;		wreg, status,2
 22601 ;; Tracked objects:
 22602 ;;		On entry : 3F/39
 22603 ;;		On exit  : 3F/3E
 22604 ;;		Unchanged: 0/0
 22605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22610 ;;Total ram usage:        0 bytes
 22611 ;; Hardware stack levels used:    1
 22612 ;; Hardware stack levels required when called:    6
 22613 ;; This function calls:
 22614 ;;		Nothing
 22615 ;; This function is called by:
 22616 ;;		_SYSTEM_Initialize
 22617 ;; This function uses a reentrant model
 22618 ;;
 22619                           
 22620                           	psect	text101
 22621  018236                     __ptext101:
 22622                           	opt callstack 0
 22623  018236                     _FVR_Initialize:
 22624                           	opt callstack 23
 22625                           
 22626                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 22627                           
 22628                           ; BSR set to: 57
 22629                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22630                           ;incstack = 0
 22631  018236  0EAF               	movlw	175
 22632  018238  013E               	movlb	62	; () banked
 22633  01823A  6FC1               	movwf	193,b	;volatile
 22634                           
 22635                           ; BSR set to: 62
 22636                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22637  01823C  0012               	return		;funcret
 22638  01823E                     __end_of_FVR_Initialize:
 22639                           	opt callstack 0
 22640                           
 22641 ;; *************** function _EXT_INT_Initialize *****************
 22642 ;; Defined at:
 22643 ;;		line 90 in file "mcc_generated_files/ext_int.c"
 22644 ;; Parameters:    Size  Location     Type
 22645 ;;		None
 22646 ;; Auto vars:     Size  Location     Type
 22647 ;;		None
 22648 ;; Return value:  Size  Location     Type
 22649 ;;                  1  [STACK] void 
 22650 ;; Registers used:
 22651 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22652 ;; Tracked objects:
 22653 ;;		On entry : 3F/39
 22654 ;;		On exit  : 3F/39
 22655 ;;		Unchanged: 0/0
 22656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22661 ;;Total ram usage:        0 bytes
 22662 ;; Hardware stack levels used:    1
 22663 ;; Hardware stack levels required when called:    7
 22664 ;; This function calls:
 22665 ;;		_INT0_SetInterruptHandler
 22666 ;;		_INT1_SetInterruptHandler
 22667 ;; This function is called by:
 22668 ;;		_SYSTEM_Initialize
 22669 ;; This function uses a reentrant model
 22670 ;;
 22671                           
 22672                           	psect	text102
 22673  017AFC                     __ptext102:
 22674                           	opt callstack 0
 22675  017AFC                     _EXT_INT_Initialize:
 22676                           	opt callstack 22
 22677                           
 22678                           ;mcc_generated_files/ext_int.c: 95:  (PIR1bits.INT0IF = 0);
 22679                           
 22680                           ; BSR set to: 62
 22681                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22682                           ;incstack = 0
 22683  017AFC  0139               	movlb	57	; () banked
 22684  017AFE  91A1               	bcf	161,0,b	;volatile
 22685                           
 22686                           ;mcc_generated_files/ext_int.c: 96:  (INTCON0bits.INT0EDG = 0);
 22687  017B00  90D2               	bcf	210,0,c	;volatile
 22688                           
 22689                           ; BSR set to: 57
 22690                           ;mcc_generated_files/ext_int.c: 98:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 22691  017B02  0E56               	movlw	low _INT0_DefaultInterruptHandler
 22692  017B04  6EE6               	movwf	postinc1,c
 22693  017B06  0E82               	movlw	high _INT0_DefaultInterruptHandler
 22694  017B08  6EE6               	movwf	postinc1,c
 22695  017B0A  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 22696  017B0C  6EE6               	movwf	postinc1,c
 22697  017B0E  EC00  F0BF         	call	_INT0_SetInterruptHandler	;wreg free
 22698                           
 22699                           ;mcc_generated_files/ext_int.c: 99:  (PIE1bits.INT0IE = 1);
 22700  017B12  0139               	movlb	57	; () banked
 22701  017B14  8191               	bsf	145,0,b	;volatile
 22702                           
 22703                           ; BSR set to: 57
 22704                           ;mcc_generated_files/ext_int.c: 104:  (PIR5bits.INT1IF = 0);
 22705  017B16  91A5               	bcf	165,0,b	;volatile
 22706                           
 22707                           ; BSR set to: 57
 22708                           ;mcc_generated_files/ext_int.c: 105:  (INTCON0bits.INT1EDG = 0);
 22709  017B18  92D2               	bcf	210,1,c	;volatile
 22710                           
 22711                           ;mcc_generated_files/ext_int.c: 107:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 22712  017B1A  0E58               	movlw	low _INT1_DefaultInterruptHandler
 22713  017B1C  6EE6               	movwf	postinc1,c
 22714  017B1E  0E82               	movlw	high _INT1_DefaultInterruptHandler
 22715  017B20  6EE6               	movwf	postinc1,c
 22716  017B22  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 22717  017B24  6EE6               	movwf	postinc1,c
 22718  017B26  ECEC  F0BE         	call	_INT1_SetInterruptHandler	;wreg free
 22719                           
 22720                           ;mcc_generated_files/ext_int.c: 108:  (PIE5bits.INT1IE = 1);
 22721  017B2A  0139               	movlb	57	; () banked
 22722  017B2C  8195               	bsf	149,0,b	;volatile
 22723                           
 22724                           ; BSR set to: 57
 22725                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 22726  017B2E  0012               	return		;funcret
 22727  017B30                     __end_of_EXT_INT_Initialize:
 22728                           	opt callstack 0
 22729                           
 22730 ;; *************** function _INT1_SetInterruptHandler *****************
 22731 ;; Defined at:
 22732 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 22733 ;; Parameters:    Size  Location     Type
 22734 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22735 ;;		 -> INT1_DefaultInterruptHandler(1), 
 22736 ;; Auto vars:     Size  Location     Type
 22737 ;;		None
 22738 ;; Return value:  Size  Location     Type
 22739 ;;                  1  [STACK] void 
 22740 ;; Registers used:
 22741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22742 ;; Tracked objects:
 22743 ;;		On entry : 3F/39
 22744 ;;		On exit  : 0/0
 22745 ;;		Unchanged: 0/0
 22746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22751 ;;Total ram usage:        0 bytes
 22752 ;; Hardware stack levels used:    1
 22753 ;; Hardware stack levels required when called:    6
 22754 ;; This function calls:
 22755 ;;		Nothing
 22756 ;; This function is called by:
 22757 ;;		_EXT_INT_Initialize
 22758 ;; This function uses a reentrant model
 22759 ;;
 22760                           
 22761                           	psect	text103
 22762  017DD8                     __ptext103:
 22763                           	opt callstack 0
 22764  017DD8                     _INT1_SetInterruptHandler:
 22765                           	opt callstack 22
 22766                           
 22767                           ;mcc_generated_files/ext_int.c: 79: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 80: {;mcc_generated_files/ext_int.c: 81:  INT1
      +                          _InterruptHandler = InterruptHandler;
 22768                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22769                           
 22770                           ; BSR set to: 57
 22771                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22772                           ;incstack = 0
 22773  017DD8  50E1               	movf	fsr1l,w,c
 22774  017DDA  0FFD               	addlw	-3
 22775  017DDC  6ED9               	movwf	fsr2l,c
 22776  017DDE  50E2               	movf	fsr1h,w,c
 22777  017DE0  6EDA               	movwf	fsr2h,c
 22778  017DE2  0EFF               	movlw	255
 22779  017DE4  22DA               	addwfc	fsr2h,f,c
 22780  017DE6  006F FF78  F016    	movff	postinc2,_INT1_InterruptHandler
 22781  017DEC  006F FF78  F017    	movff	postinc2,_INT1_InterruptHandler+1
 22782  017DF2  006F FF74  F018    	movff	postdec2,_INT1_InterruptHandler+2
 22783                           
 22784                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 22785  017DF8  52E5               	movf	postdec1,f,c
 22786  017DFA  52E5               	movf	postdec1,f,c
 22787  017DFC  52E5               	movf	postdec1,f,c
 22788  017DFE  0012               	return		;funcret
 22789  017E00                     __end_of_INT1_SetInterruptHandler:
 22790                           	opt callstack 0
 22791                           
 22792 ;; *************** function _INT0_SetInterruptHandler *****************
 22793 ;; Defined at:
 22794 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 22795 ;; Parameters:    Size  Location     Type
 22796 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22797 ;;		 -> INT0_DefaultInterruptHandler(1), 
 22798 ;; Auto vars:     Size  Location     Type
 22799 ;;		None
 22800 ;; Return value:  Size  Location     Type
 22801 ;;                  1  [STACK] void 
 22802 ;; Registers used:
 22803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22804 ;; Tracked objects:
 22805 ;;		On entry : 3F/39
 22806 ;;		On exit  : 0/0
 22807 ;;		Unchanged: 0/0
 22808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22813 ;;Total ram usage:        0 bytes
 22814 ;; Hardware stack levels used:    1
 22815 ;; Hardware stack levels required when called:    6
 22816 ;; This function calls:
 22817 ;;		Nothing
 22818 ;; This function is called by:
 22819 ;;		_EXT_INT_Initialize
 22820 ;; This function uses a reentrant model
 22821 ;;
 22822                           
 22823                           	psect	text104
 22824  017E00                     __ptext104:
 22825                           	opt callstack 0
 22826  017E00                     _INT0_SetInterruptHandler:
 22827                           	opt callstack 22
 22828                           
 22829                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 22830                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22831                           
 22832                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22833                           ;incstack = 0
 22834  017E00  50E1               	movf	fsr1l,w,c
 22835  017E02  0FFD               	addlw	-3
 22836  017E04  6ED9               	movwf	fsr2l,c
 22837  017E06  50E2               	movf	fsr1h,w,c
 22838  017E08  6EDA               	movwf	fsr2h,c
 22839  017E0A  0EFF               	movlw	255
 22840  017E0C  22DA               	addwfc	fsr2h,f,c
 22841  017E0E  006F FF78  F019    	movff	postinc2,_INT0_InterruptHandler
 22842  017E14  006F FF78  F01A    	movff	postinc2,_INT0_InterruptHandler+1
 22843  017E1A  006F FF74  F01B    	movff	postdec2,_INT0_InterruptHandler+2
 22844                           
 22845                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 22846  017E20  52E5               	movf	postdec1,f,c
 22847  017E22  52E5               	movf	postdec1,f,c
 22848  017E24  52E5               	movf	postdec1,f,c
 22849  017E26  0012               	return		;funcret
 22850  017E28                     __end_of_INT0_SetInterruptHandler:
 22851                           	opt callstack 0
 22852                           
 22853 ;; *************** function _DMA2_Initialize *****************
 22854 ;; Defined at:
 22855 ;;		line 61 in file "mcc_generated_files/dma2.c"
 22856 ;; Parameters:    Size  Location     Type
 22857 ;;		None
 22858 ;; Auto vars:     Size  Location     Type
 22859 ;;		None
 22860 ;; Return value:  Size  Location     Type
 22861 ;;                  1  [STACK] void 
 22862 ;; Registers used:
 22863 ;;		wreg, status,2
 22864 ;; Tracked objects:
 22865 ;;		On entry : 3F/3D
 22866 ;;		On exit  : 3F/3B
 22867 ;;		Unchanged: 0/0
 22868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22873 ;;Total ram usage:        0 bytes
 22874 ;; Hardware stack levels used:    1
 22875 ;; Hardware stack levels required when called:    6
 22876 ;; This function calls:
 22877 ;;		Nothing
 22878 ;; This function is called by:
 22879 ;;		_SYSTEM_Initialize
 22880 ;; This function uses a reentrant model
 22881 ;;
 22882                           
 22883                           	psect	text105
 22884  017602                     __ptext105:
 22885                           	opt callstack 0
 22886  017602                     _DMA2_Initialize:
 22887                           	opt callstack 23
 22888                           
 22889                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 22890                           
 22891                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22892                           ;incstack = 0
 22893  017602  0E00               	movlw	0
 22894  017604  013B               	movlb	59	; () banked
 22895  017606  6FD9               	movwf	217,b	;volatile
 22896  017608  0E10               	movlw	16
 22897  01760A  6FDA               	movwf	218,b	;volatile
 22898  01760C  0E00               	movlw	0
 22899  01760E  6FDB               	movwf	219,b	;volatile
 22900                           
 22901                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 22902  017610  0E3F               	movlw	63
 22903  017612  6FD1               	movwf	209,b	;volatile
 22904  017614  0EBB               	movlw	187
 22905  017616  6FD0               	movwf	208,b	;volatile
 22906                           
 22907                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 22908  017618  0E03               	movlw	3
 22909  01761A  6FDD               	movwf	221,b	;volatile
 22910                           
 22911                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 22912  01761C  0E00               	movlw	0
 22913  01761E  6FD8               	movwf	216,b	;volatile
 22914  017620  0E01               	movlw	1
 22915  017622  6FD7               	movwf	215,b	;volatile
 22916                           
 22917                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 22918  017624  0E00               	movlw	0
 22919  017626  6FCF               	movwf	207,b	;volatile
 22920  017628  0E01               	movlw	1
 22921  01762A  6FCE               	movwf	206,b	;volatile
 22922                           
 22923                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 22924  01762C  0E46               	movlw	70
 22925  01762E  6FDF               	movwf	223,b	;volatile
 22926                           
 22927                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 22928  017630  0E3D               	movlw	61
 22929  017632  6FDE               	movwf	222,b	;volatile
 22930                           
 22931                           ; BSR set to: 59
 22932                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 22933  017634  0139               	movlb	57	; () banked
 22934  017636  97A5               	bcf	165,3,b	;volatile
 22935                           
 22936                           ; BSR set to: 57
 22937                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 22938  017638  95A5               	bcf	165,2,b	;volatile
 22939                           
 22940                           ; BSR set to: 57
 22941                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 22942  01763A  9BA5               	bcf	165,5,b	;volatile
 22943                           
 22944                           ; BSR set to: 57
 22945                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 22946  01763C  99A5               	bcf	165,4,b	;volatile
 22947                           
 22948                           ; BSR set to: 57
 22949                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 22950  01763E  9795               	bcf	149,3,b	;volatile
 22951                           
 22952                           ; BSR set to: 57
 22953                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 22954  017640  9595               	bcf	149,2,b	;volatile
 22955                           
 22956                           ; BSR set to: 57
 22957                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 22958  017642  9B95               	bcf	149,5,b	;volatile
 22959                           
 22960                           ; BSR set to: 57
 22961                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 22962  017644  9995               	bcf	149,4,b	;volatile
 22963  017646  9ED2               	bcf	16338,7,c	;# 
 22964  017648  0139               	banksel	14831	;# 
 22965  01764A  0E55               	movlw	85	;# 
 22966  01764C  6FEF               	movwf	14831,b	;# 
 22967  01764E  0EAA               	movlw	170	;# 
 22968  017650  6FEF               	movwf	14831,b	;# 
 22969  017652  81EF               	bsf	14831,0,b	;# 
 22970  017654  8ED2               	bsf	16338,7,c	;# 
 22971                           
 22972                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 22973  017656  013B               	movlb	59	; () banked
 22974  017658  6BDC               	clrf	220,b	;volatile
 22975                           
 22976                           ; BSR set to: 59
 22977                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22978  01765A  0012               	return		;funcret
 22979  01765C                     __end_of_DMA2_Initialize:
 22980                           	opt callstack 0
 22981                           
 22982 ;; *************** function _DMA1_Initialize *****************
 22983 ;; Defined at:
 22984 ;;		line 86 in file "mcc_generated_files/dma1.c"
 22985 ;; Parameters:    Size  Location     Type
 22986 ;;		None
 22987 ;; Auto vars:     Size  Location     Type
 22988 ;;		None
 22989 ;; Return value:  Size  Location     Type
 22990 ;;                  1  [STACK] void 
 22991 ;; Registers used:
 22992 ;;		wreg, status,2
 22993 ;; Tracked objects:
 22994 ;;		On entry : 3F/3B
 22995 ;;		On exit  : 3F/3B
 22996 ;;		Unchanged: 0/0
 22997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23002 ;;Total ram usage:        0 bytes
 23003 ;; Hardware stack levels used:    1
 23004 ;; Hardware stack levels required when called:    6
 23005 ;; This function calls:
 23006 ;;		Nothing
 23007 ;; This function is called by:
 23008 ;;		_SYSTEM_Initialize
 23009 ;; This function uses a reentrant model
 23010 ;;
 23011                           
 23012                           	psect	text106
 23013  0171C2                     __ptext106:
 23014                           	opt callstack 0
 23015  0171C2                     _DMA1_Initialize:
 23016                           	opt callstack 23
 23017                           
 23018                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 23019                           
 23020                           ; BSR set to: 59
 23021                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23022                           ;incstack = 0
 23023  0171C2  0E00               	movlw	0
 23024  0171C4  013B               	movlb	59	; () banked
 23025  0171C6  6FF9               	movwf	249,b	;volatile
 23026  0171C8  0E10               	movlw	16
 23027  0171CA  6FFA               	movwf	250,b	;volatile
 23028  0171CC  0E00               	movlw	0
 23029  0171CE  6FFB               	movwf	251,b	;volatile
 23030                           
 23031                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 23032  0171D0  0E3D               	movlw	61
 23033  0171D2  6FF1               	movwf	241,b	;volatile
 23034  0171D4  0E11               	movlw	17
 23035  0171D6  6FF0               	movwf	240,b	;volatile
 23036                           
 23037                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 23038  0171D8  0E03               	movlw	3
 23039  0171DA  6FFD               	movwf	253,b	;volatile
 23040                           
 23041                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 23042  0171DC  0E00               	movlw	0
 23043  0171DE  6FF8               	movwf	248,b	;volatile
 23044  0171E0  0E01               	movlw	1
 23045  0171E2  6FF7               	movwf	247,b	;volatile
 23046                           
 23047                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 23048  0171E4  0E00               	movlw	0
 23049  0171E6  6FEF               	movwf	239,b	;volatile
 23050  0171E8  0E01               	movlw	1
 23051  0171EA  6FEE               	movwf	238,b	;volatile
 23052                           
 23053                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 23054  0171EC  0E15               	movlw	21
 23055  0171EE  6FFF               	movwf	255,b	;volatile
 23056                           
 23057                           ; BSR set to: 59
 23058                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 23059  0171F0  6BFE               	clrf	254,b	;volatile
 23060                           
 23061                           ; BSR set to: 59
 23062                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 23063  0171F2  0139               	movlb	57	; () banked
 23064  0171F4  93A2               	bcf	162,1,b	;volatile
 23065                           
 23066                           ; BSR set to: 57
 23067                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 23068  0171F6  91A2               	bcf	162,0,b	;volatile
 23069                           
 23070                           ; BSR set to: 57
 23071                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 23072  0171F8  97A2               	bcf	162,3,b	;volatile
 23073                           
 23074                           ; BSR set to: 57
 23075                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 23076  0171FA  95A2               	bcf	162,2,b	;volatile
 23077                           
 23078                           ; BSR set to: 57
 23079                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 23080  0171FC  8392               	bsf	146,1,b	;volatile
 23081                           
 23082                           ; BSR set to: 57
 23083                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 23084  0171FE  8192               	bsf	146,0,b	;volatile
 23085                           
 23086                           ; BSR set to: 57
 23087                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 23088  017200  8792               	bsf	146,3,b	;volatile
 23089                           
 23090                           ; BSR set to: 57
 23091                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 23092  017202  8592               	bsf	146,2,b	;volatile
 23093                           
 23094                           ; BSR set to: 57
 23095                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 23096  017204  6BF1               	clrf	241,b	;volatile
 23097                           
 23098                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 23099  017206  0E01               	movlw	1
 23100  017208  6FF2               	movwf	242,b	;volatile
 23101                           
 23102                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 23103  01720A  0E04               	movlw	4
 23104  01720C  6FF3               	movwf	243,b	;volatile
 23105                           
 23106                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 23107  01720E  0E02               	movlw	2
 23108  017210  6FF4               	movwf	244,b	;volatile
 23109                           
 23110                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 23111  017212  0E03               	movlw	3
 23112  017214  6FF7               	movwf	247,b	;volatile
 23113  017216  9ED2               	bcf	16338,7,c	;# 
 23114  017218  0139               	banksel	14831	;# 
 23115  01721A  0E55               	movlw	85	;# 
 23116  01721C  6FEF               	movwf	14831,b	;# 
 23117  01721E  0EAA               	movlw	170	;# 
 23118  017220  6FEF               	movwf	14831,b	;# 
 23119  017222  81EF               	bsf	14831,0,b	;# 
 23120  017224  8ED2               	bsf	16338,7,c	;# 
 23121                           
 23122                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 23123  017226  013B               	movlb	59	; () banked
 23124  017228  6BFC               	clrf	252,b	;volatile
 23125                           
 23126                           ; BSR set to: 59
 23127                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23128  01722A  0012               	return		;funcret
 23129  01722C                     __end_of_DMA1_Initialize:
 23130                           	opt callstack 0
 23131                           
 23132 ;; *************** function _CLKREF_Initialize *****************
 23133 ;; Defined at:
 23134 ;;		line 58 in file "mcc_generated_files/clkref.c"
 23135 ;; Parameters:    Size  Location     Type
 23136 ;;		None
 23137 ;; Auto vars:     Size  Location     Type
 23138 ;;		None
 23139 ;; Return value:  Size  Location     Type
 23140 ;;                  1  [STACK] void 
 23141 ;; Registers used:
 23142 ;;		wreg, status,2
 23143 ;; Tracked objects:
 23144 ;;		On entry : 3F/3B
 23145 ;;		On exit  : 3F/3C
 23146 ;;		Unchanged: 0/0
 23147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23152 ;;Total ram usage:        0 bytes
 23153 ;; Hardware stack levels used:    1
 23154 ;; Hardware stack levels required when called:    6
 23155 ;; This function calls:
 23156 ;;		Nothing
 23157 ;; This function is called by:
 23158 ;;		_SYSTEM_Initialize
 23159 ;; This function uses a reentrant model
 23160 ;;
 23161                           
 23162                           	psect	text107
 23163  0181F2                     __ptext107:
 23164                           	opt callstack 0
 23165  0181F2                     _CLKREF_Initialize:
 23166                           	opt callstack 23
 23167                           
 23168                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 23169                           
 23170                           ; BSR set to: 59
 23171                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23172                           ;incstack = 0
 23173  0181F2  013C               	movlb	60	; () banked
 23174  0181F4  6BE6               	clrf	230,b	;volatile
 23175                           
 23176                           ; BSR set to: 60
 23177                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 23178  0181F6  0E94               	movlw	148
 23179  0181F8  6FE5               	movwf	229,b	;volatile
 23180                           
 23181                           ; BSR set to: 60
 23182                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 23183  0181FA  0012               	return		;funcret
 23184  0181FC                     __end_of_CLKREF_Initialize:
 23185                           	opt callstack 0
 23186                           
 23187 ;; *************** function _ADCC_Initialize *****************
 23188 ;; Defined at:
 23189 ;;		line 65 in file "mcc_generated_files/adcc.c"
 23190 ;; Parameters:    Size  Location     Type
 23191 ;;		None
 23192 ;; Auto vars:     Size  Location     Type
 23193 ;;		None
 23194 ;; Return value:  Size  Location     Type
 23195 ;;                  1  [STACK] void 
 23196 ;; Registers used:
 23197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23198 ;; Tracked objects:
 23199 ;;		On entry : 3F/3E
 23200 ;;		On exit  : 0/0
 23201 ;;		Unchanged: 0/0
 23202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23207 ;;Total ram usage:        0 bytes
 23208 ;; Hardware stack levels used:    1
 23209 ;; Hardware stack levels required when called:    7
 23210 ;; This function calls:
 23211 ;;		_ADCC_SetADIInterruptHandler
 23212 ;;		_ADCC_SetADTIInterruptHandler
 23213 ;; This function is called by:
 23214 ;;		_SYSTEM_Initialize
 23215 ;; This function uses a reentrant model
 23216 ;;
 23217                           
 23218                           	psect	text108
 23219  01722C                     __ptext108:
 23220                           	opt callstack 0
 23221  01722C                     _ADCC_Initialize:
 23222                           	opt callstack 22
 23223                           
 23224                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 23225                           
 23226                           ; BSR set to: 60
 23227                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23228                           ;incstack = 0
 23229  01722C  013E               	movlb	62	; () banked
 23230  01722E  6BDE               	clrf	222,b	;volatile
 23231                           
 23232                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 23233  017230  6BDF               	clrf	223,b	;volatile
 23234                           
 23235                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 23236  017232  6BE0               	clrf	224,b	;volatile
 23237                           
 23238                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 23239  017234  6BE1               	clrf	225,b	;volatile
 23240                           
 23241                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 23242  017236  6BE4               	clrf	228,b	;volatile
 23243                           
 23244                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 23245  017238  6BE5               	clrf	229,b	;volatile
 23246                           
 23247                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 23248  01723A  6BEA               	clrf	234,b	;volatile
 23249                           
 23250                           ; BSR set to: 62
 23251                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 23252  01723C  0E40               	movlw	64
 23253  01723E  6FEC               	movwf	236,b	;volatile
 23254                           
 23255                           ; BSR set to: 62
 23256                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 23257  017240  6BF1               	clrf	241,b	;volatile
 23258                           
 23259                           ; BSR set to: 62
 23260                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x00;
 23261  017242  6BF3               	clrf	243,b	;volatile
 23262                           
 23263                           ; BSR set to: 62
 23264                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 23265  017244  6BF4               	clrf	244,b	;volatile
 23266                           
 23267                           ; BSR set to: 62
 23268                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 23269  017246  6BF5               	clrf	245,b	;volatile
 23270                           
 23271                           ; BSR set to: 62
 23272                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 23273  017248  6BF6               	clrf	246,b	;volatile
 23274                           
 23275                           ; BSR set to: 62
 23276                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 23277  01724A  6BF7               	clrf	247,b	;volatile
 23278                           
 23279                           ; BSR set to: 62
 23280                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 23281  01724C  6BF9               	clrf	249,b	;volatile
 23282                           
 23283                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x6B;
 23284  01724E  0E6B               	movlw	107
 23285  017250  6FFA               	movwf	250,b	;volatile
 23286                           
 23287                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 23288  017252  0E27               	movlw	39
 23289  017254  6FFB               	movwf	251,b	;volatile
 23290                           
 23291                           ; BSR set to: 62
 23292                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 23293  017256  6BFC               	clrf	252,b	;volatile
 23294                           
 23295                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 23296  017258  0E02               	movlw	2
 23297  01725A  6FFD               	movwf	253,b	;volatile
 23298                           
 23299                           ; BSR set to: 62
 23300                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 23301  01725C  6BFE               	clrf	254,b	;volatile
 23302                           
 23303                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x02;
 23304  01725E  0E02               	movlw	2
 23305  017260  6FFF               	movwf	255,b	;volatile
 23306                           
 23307                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x94;
 23308  017262  0E94               	movlw	148
 23309  017264  6FF8               	movwf	248,b	;volatile
 23310                           
 23311                           ; BSR set to: 62
 23312                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 23313  017266  0139               	movlb	57	; () banked
 23314  017268  95A1               	bcf	161,2,b	;volatile
 23315                           
 23316                           ; BSR set to: 57
 23317                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 23318  01726A  8591               	bsf	145,2,b	;volatile
 23319                           
 23320                           ; BSR set to: 57
 23321                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 23322  01726C  0E5A               	movlw	low _ADCC_DefaultInterruptHandler
 23323  01726E  6EE6               	movwf	postinc1,c
 23324  017270  0E82               	movlw	high _ADCC_DefaultInterruptHandler
 23325  017272  6EE6               	movwf	postinc1,c
 23326  017274  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 23327  017276  6EE6               	movwf	postinc1,c
 23328  017278  EC28  F0BF         	call	_ADCC_SetADIInterruptHandler	;wreg free
 23329                           
 23330                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 23331  01727C  0139               	movlb	57	; () banked
 23332  01727E  97A1               	bcf	161,3,b	;volatile
 23333                           
 23334                           ; BSR set to: 57
 23335                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 23336  017280  8791               	bsf	145,3,b	;volatile
 23337                           
 23338                           ; BSR set to: 57
 23339                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 23340  017282  0E5A               	movlw	low _ADCC_DefaultInterruptHandler
 23341  017284  6EE6               	movwf	postinc1,c
 23342  017286  0E82               	movlw	high _ADCC_DefaultInterruptHandler
 23343  017288  6EE6               	movwf	postinc1,c
 23344  01728A  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 23345  01728C  6EE6               	movwf	postinc1,c
 23346  01728E  EC14  F0BF         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 23347                           
 23348                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23349  017292  0012               	return		;funcret
 23350  017294                     __end_of_ADCC_Initialize:
 23351                           	opt callstack 0
 23352                           
 23353 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 23354 ;; Defined at:
 23355 ;;		line 336 in file "mcc_generated_files/adcc.c"
 23356 ;; Parameters:    Size  Location     Type
 23357 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23358 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 23359 ;; Auto vars:     Size  Location     Type
 23360 ;;		None
 23361 ;; Return value:  Size  Location     Type
 23362 ;;                  1  [STACK] void 
 23363 ;; Registers used:
 23364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23365 ;; Tracked objects:
 23366 ;;		On entry : 0/0
 23367 ;;		On exit  : 0/0
 23368 ;;		Unchanged: 0/0
 23369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23374 ;;Total ram usage:        0 bytes
 23375 ;; Hardware stack levels used:    1
 23376 ;; Hardware stack levels required when called:    6
 23377 ;; This function calls:
 23378 ;;		Nothing
 23379 ;; This function is called by:
 23380 ;;		_ADCC_Initialize
 23381 ;;		_start_adc_scan
 23382 ;; This function uses a reentrant model
 23383 ;;
 23384                           
 23385                           	psect	text109
 23386  017E28                     __ptext109:
 23387                           	opt callstack 0
 23388  017E28                     _ADCC_SetADTIInterruptHandler:
 23389                           	opt callstack 23
 23390                           
 23391                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 23392                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23393                           
 23394                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23395                           ;incstack = 0
 23396  017E28  50E1               	movf	fsr1l,w,c
 23397  017E2A  0FFD               	addlw	-3
 23398  017E2C  6ED9               	movwf	fsr2l,c
 23399  017E2E  50E2               	movf	fsr1h,w,c
 23400  017E30  6EDA               	movwf	fsr2h,c
 23401  017E32  0EFF               	movlw	255
 23402  017E34  22DA               	addwfc	fsr2h,f,c
 23403  017E36  006F FF78  F004    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 23404  017E3C  006F FF78  F005    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 23405  017E42  006F FF74  F006    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 23406                           
 23407                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 23408  017E48  52E5               	movf	postdec1,f,c
 23409  017E4A  52E5               	movf	postdec1,f,c
 23410  017E4C  52E5               	movf	postdec1,f,c
 23411  017E4E  0012               	return		;funcret
 23412  017E50                     __end_of_ADCC_SetADTIInterruptHandler:
 23413                           	opt callstack 0
 23414                           
 23415 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 23416 ;; Defined at:
 23417 ;;		line 323 in file "mcc_generated_files/adcc.c"
 23418 ;; Parameters:    Size  Location     Type
 23419 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23420 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 23421 ;; Auto vars:     Size  Location     Type
 23422 ;;		None
 23423 ;; Return value:  Size  Location     Type
 23424 ;;                  1  [STACK] void 
 23425 ;; Registers used:
 23426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23427 ;; Tracked objects:
 23428 ;;		On entry : 6/0
 23429 ;;		On exit  : 0/0
 23430 ;;		Unchanged: 0/0
 23431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23436 ;;Total ram usage:        0 bytes
 23437 ;; Hardware stack levels used:    1
 23438 ;; Hardware stack levels required when called:    6
 23439 ;; This function calls:
 23440 ;;		Nothing
 23441 ;; This function is called by:
 23442 ;;		_ADCC_Initialize
 23443 ;;		_start_adc_scan
 23444 ;; This function uses a reentrant model
 23445 ;;
 23446                           
 23447                           	psect	text110
 23448  017E50                     __ptext110:
 23449                           	opt callstack 0
 23450  017E50                     _ADCC_SetADIInterruptHandler:
 23451                           	opt callstack 23
 23452                           
 23453                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 23454                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23455                           
 23456                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23457                           ;incstack = 0
 23458  017E50  50E1               	movf	fsr1l,w,c
 23459  017E52  0FFD               	addlw	-3
 23460  017E54  6ED9               	movwf	fsr2l,c
 23461  017E56  50E2               	movf	fsr1h,w,c
 23462  017E58  6EDA               	movwf	fsr2h,c
 23463  017E5A  0EFF               	movlw	255
 23464  017E5C  22DA               	addwfc	fsr2h,f,c
 23465  017E5E  006F FF78  F007    	movff	postinc2,_ADCC_ADI_InterruptHandler
 23466  017E64  006F FF78  F008    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 23467  017E6A  006F FF74  F009    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 23468                           
 23469                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23470  017E70  52E5               	movf	postdec1,f,c
 23471  017E72  52E5               	movf	postdec1,f,c
 23472  017E74  52E5               	movf	postdec1,f,c
 23473  017E76  0012               	return		;funcret
 23474  017E78                     __end_of_ADCC_SetADIInterruptHandler:
 23475                           	opt callstack 0
 23476                           
 23477 ;; *************** function _TMR5_ISR *****************
 23478 ;; Defined at:
 23479 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 23480 ;; Parameters:    Size  Location     Type
 23481 ;;		None
 23482 ;; Auto vars:     Size  Location     Type
 23483 ;;		None
 23484 ;; Return value:  Size  Location     Type
 23485 ;;                  1    wreg      void 
 23486 ;; Registers used:
 23487 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 23488 ;; Tracked objects:
 23489 ;;		On entry : 0/0
 23490 ;;		On exit  : 0/0
 23491 ;;		Unchanged: 0/0
 23492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23495 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23496 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23497 ;;Total ram usage:        4 bytes
 23498 ;; Hardware stack levels used:    1
 23499 ;; Hardware stack levels required when called:    5
 23500 ;; This function calls:
 23501 ;;		_TMR5_CallBack
 23502 ;;		_TMR5_WriteTimer
 23503 ;; This function is called by:
 23504 ;;		Interrupt level 1
 23505 ;; This function uses a non-reentrant model
 23506 ;;
 23507                           
 23508                           	psect	text111
 23509  01754C                     __ptext111:
 23510                           	opt callstack 0
 23511  01754C                     _TMR5_ISR:
 23512                           	opt callstack 12
 23513                           
 23514                           ;incstack = 0
 23515  01754C  006F FF60  F0E1    	movff	status,??_TMR5_ISR+2
 23516  017552  0060  F100  F0E2   	movff	btemp+11,??_TMR5_ISR+3
 23517  017558  EE15  F3AB         	lfsr	1,___intlo_sp
 23518                           
 23519                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 23520  01755C  0139               	movlb	57	; () banked
 23521  01755E  9DA8               	bcf	168,6,b	;volatile
 23522                           
 23523                           ; BSR set to: 57
 23524                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 23525  017560  0060  F09B  FFE6   	movff	_timer5ReloadVal,postinc1
 23526  017566  0060  F09F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 23527  01756C  ECB8  F0BC         	call	_TMR5_WriteTimer	;wreg free
 23528                           
 23529                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 23530  017570  0101               	movlb	1	; () banked
 23531  017572  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 23532  017574  0100               	movlb	0	; () banked
 23533  017576  6FDF               	movwf	??_TMR5_ISR& (0+255),b
 23534  017578  6BE0               	clrf	(??_TMR5_ISR+1)& (0+255),b
 23535  01757A  0E05               	movlw	5
 23536  01757C  27DF               	addwf	??_TMR5_ISR& (0+255),f,b
 23537  01757E  0E00               	movlw	0
 23538  017580  23E0               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 23539  017582  4A24               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 23540  017584  2A25               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 23541  017586  51DF               	movf	??_TMR5_ISR& (0+255),w,b
 23542  017588  5C24               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 23543  01758A  51E0               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 23544  01758C  5825               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 23545  01758E  A0D8               	btfss	status,0,c
 23546  017590  D004               	goto	i1l1045
 23547                           
 23548                           ; BSR set to: 0
 23549                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 23550  017592  EC9D  F0BF         	call	_TMR5_CallBack	;wreg free
 23551                           
 23552                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 23553  017596  6A24               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 23554  017598  6A25               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 23555  01759A                     i1l1045:
 23556  01759A  0060  F388  F040   	movff	??_TMR5_ISR+3,btemp+11
 23557  0175A0  0060  F387  FFD8   	movff	??_TMR5_ISR+2,status
 23558  0175A6  0011               	retfie		f
 23559  0175A8                     __end_of_TMR5_ISR:
 23560                           	opt callstack 0
 23561                           
 23562 ;; *************** function _TMR5_WriteTimer *****************
 23563 ;; Defined at:
 23564 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 23565 ;; Parameters:    Size  Location     Type
 23566 ;;  timerVal        2  [STACK] unsigned short 
 23567 ;; Auto vars:     Size  Location     Type
 23568 ;;		None
 23569 ;; Return value:  Size  Location     Type
 23570 ;;                  1  [STACK] void 
 23571 ;; Registers used:
 23572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 23573 ;; Tracked objects:
 23574 ;;		On entry : 3F/39
 23575 ;;		On exit  : 0/0
 23576 ;;		Unchanged: 0/0
 23577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23582 ;;Total ram usage:        0 bytes
 23583 ;; Hardware stack levels used:    1
 23584 ;; Hardware stack levels required when called:    3
 23585 ;; This function calls:
 23586 ;;		Nothing
 23587 ;; This function is called by:
 23588 ;;		_TMR5_ISR
 23589 ;; This function uses a reentrant model
 23590 ;;
 23591                           
 23592                           	psect	text112
 23593  017970                     __ptext112:
 23594                           	opt callstack 0
 23595  017970                     _TMR5_WriteTimer:
 23596                           	opt callstack 13
 23597                           
 23598                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 23599                           
 23600                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23601                           ;incstack = 0
 23602  017970  A49A               	btfss	154,2,c	;volatile
 23603  017972  D00F               	goto	l8541
 23604                           
 23605                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 23606  017974  909A               	bcf	154,0,c	;volatile
 23607                           
 23608                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 23609                           ;stkvar	_timerVal @ sp[(0)+-2]
 23610  017976  0EFF               	movlw	255
 23611  017978  24E1               	addwf	fsr1l,w,c
 23612  01797A  6ED9               	movwf	fsr2l,c
 23613  01797C  0EFF               	movlw	255
 23614  01797E  20E2               	addwfc	fsr1h,w,c
 23615  017980  6EDA               	movwf	fsr2h,c
 23616  017982  50DF               	movf	indf2,w,c
 23617  017984  6E99               	movwf	153,c	;volatile
 23618                           
 23619                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 23620                           ;stkvar	_timerVal @ sp[(0)+-2]
 23621  017986  0EFE               	movlw	-2
 23622  017988  006F FF8F FF98     	movff	plusw1,16280	;volatile
 23623                           
 23624                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 23625  01798E  809A               	bsf	154,0,c	;volatile
 23626                           
 23627                           ;mcc_generated_files/tmr5.c: 142:  } else {
 23628  017990  D00C               	goto	l1028
 23629  017992                     l8541:
 23630                           
 23631                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 23632                           ;stkvar	_timerVal @ sp[(0)+-2]
 23633  017992  0EFF               	movlw	255
 23634  017994  24E1               	addwf	fsr1l,w,c
 23635  017996  6ED9               	movwf	fsr2l,c
 23636  017998  0EFF               	movlw	255
 23637  01799A  20E2               	addwfc	fsr1h,w,c
 23638  01799C  6EDA               	movwf	fsr2h,c
 23639  01799E  50DF               	movf	indf2,w,c
 23640  0179A0  6E99               	movwf	153,c	;volatile
 23641                           
 23642                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 23643                           ;stkvar	_timerVal @ sp[(0)+-2]
 23644  0179A2  0EFE               	movlw	-2
 23645  0179A4  006F FF8F FF98     	movff	plusw1,16280	;volatile
 23646  0179AA                     l1028:
 23647                           
 23648                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 23649  0179AA  52E5               	movf	postdec1,f,c
 23650  0179AC  52E5               	movf	postdec1,f,c
 23651  0179AE  0012               	return		;funcret
 23652  0179B0                     __end_of_TMR5_WriteTimer:
 23653                           	opt callstack 0
 23654                           
 23655 ;; *************** function _TMR5_CallBack *****************
 23656 ;; Defined at:
 23657 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 23658 ;; Parameters:    Size  Location     Type
 23659 ;;		None
 23660 ;; Auto vars:     Size  Location     Type
 23661 ;;		None
 23662 ;; Return value:  Size  Location     Type
 23663 ;;                  1  [STACK] void 
 23664 ;; Registers used:
 23665 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 23666 ;; Tracked objects:
 23667 ;;		On entry : 3F/0
 23668 ;;		On exit  : 0/0
 23669 ;;		Unchanged: 0/0
 23670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23675 ;;Total ram usage:        0 bytes
 23676 ;; Hardware stack levels used:    1
 23677 ;; Hardware stack levels required when called:    4
 23678 ;; This function calls:
 23679 ;;		Absolute function
 23680 ;;		_TMR5_DefaultInterruptHandler
 23681 ;; This function is called by:
 23682 ;;		_TMR5_ISR
 23683 ;; This function uses a reentrant model
 23684 ;;
 23685                           
 23686                           	psect	text113
 23687  017F3A                     __ptext113:
 23688                           	opt callstack 0
 23689  017F3A                     _TMR5_CallBack:
 23690                           	opt callstack 12
 23691                           
 23692                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 23693                           
 23694                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23695                           ;incstack = 0
 23696  017F3A  0100               	movlb	0	; () banked
 23697  017F3C  51D3               	movf	_TMR5_InterruptHandler& (0+255),w,b
 23698  017F3E  11D4               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 23699  017F40  11D5               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 23700  017F42  B4D8               	btfsc	status,2,c
 23701  017F44  0012               	return	
 23702                           
 23703                           ; BSR set to: 0
 23704                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 23705  017F46  D801               	call	u812_28
 23706  017F48  0012               	return	
 23707  017F4A                     u812_28:
 23708  017F4A  0005               	push	
 23709  017F4C  6EFA               	movwf	pclath,c
 23710  017F4E  51D3               	movf	_TMR5_InterruptHandler& (0+255),w,b
 23711  017F50  6EFD               	movwf	tosl,c
 23712  017F52  51D4               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 23713  017F54  6EFE               	movwf	tosh,c
 23714  017F56  51D5               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 23715  017F58  6EFF               	movwf	tosu,c
 23716  017F5A  50FA               	movf	pclath,w,c
 23717  017F5C  0012               	return		;indir
 23718  017F5E                     __end_of_TMR5_CallBack:
 23719                           	opt callstack 0
 23720                           
 23721 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 23722 ;; Defined at:
 23723 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 23724 ;; Parameters:    Size  Location     Type
 23725 ;;		None
 23726 ;; Auto vars:     Size  Location     Type
 23727 ;;		None
 23728 ;; Return value:  Size  Location     Type
 23729 ;;                  1  [STACK] void 
 23730 ;; Registers used:
 23731 ;;		wreg, status,2, status,0, btemp+11
 23732 ;; Tracked objects:
 23733 ;;		On entry : 3F/0
 23734 ;;		On exit  : 0/0
 23735 ;;		Unchanged: 0/0
 23736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23741 ;;Total ram usage:        0 bytes
 23742 ;; Hardware stack levels used:    1
 23743 ;; Hardware stack levels required when called:    3
 23744 ;; This function calls:
 23745 ;;		Nothing
 23746 ;; This function is called by:
 23747 ;;		_TMR5_Initialize
 23748 ;;		_TMR5_CallBack
 23749 ;; This function uses a reentrant model
 23750 ;;
 23751                           
 23752                           	psect	text114
 23753  0180CA                     __ptext114:
 23754                           	opt callstack 0
 23755  0180CA                     _TMR5_DefaultInterruptHandler:
 23756                           	opt callstack 12
 23757                           
 23758                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 23759                           
 23760                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23761                           ;incstack = 0
 23762  0180CA  A0BE               	btfss	190,0,c	;volatile
 23763  0180CC  D002               	goto	u784_20
 23764  0180CE  0E01               	movlw	1
 23765  0180D0  D001               	goto	u784_26
 23766  0180D2                     u784_20:
 23767  0180D2  0E00               	movlw	0
 23768  0180D4                     u784_26:
 23769  0180D4  0AFF               	xorlw	255
 23770  0180D6  6E40               	movwf	(btemp+11)^0,c
 23771  0180D8  50BE               	movf	190,w,c	;volatile
 23772  0180DA  1840               	xorwf	(btemp+11)^0,w,c
 23773  0180DC  0BFE               	andlw	-2
 23774  0180DE  1840               	xorwf	(btemp+11)^0,w,c
 23775  0180E0  6EBE               	movwf	190,c	;volatile
 23776                           
 23777                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 23778  0180E2  0012               	return		;funcret
 23779  0180E4                     __end_of_TMR5_DefaultInterruptHandler:
 23780                           	opt callstack 0
 23781                           
 23782 ;; *************** function _INT0_ISR *****************
 23783 ;; Defined at:
 23784 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 23785 ;; Parameters:    Size  Location     Type
 23786 ;;		None
 23787 ;; Auto vars:     Size  Location     Type
 23788 ;;		None
 23789 ;; Return value:  Size  Location     Type
 23790 ;;                  1    wreg      void 
 23791 ;; Registers used:
 23792 ;;		wreg, status,2, status,0, pclath, tosl
 23793 ;; Tracked objects:
 23794 ;;		On entry : 0/0
 23795 ;;		On exit  : 0/0
 23796 ;;		Unchanged: 0/0
 23797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23802 ;;Total ram usage:        0 bytes
 23803 ;; Hardware stack levels used:    1
 23804 ;; Hardware stack levels required when called:    2
 23805 ;; This function calls:
 23806 ;;		_INT0_CallBack
 23807 ;; This function is called by:
 23808 ;;		Interrupt level 2
 23809 ;; This function uses a non-reentrant model
 23810 ;;
 23811                           
 23812                           	psect	text115
 23813  0181C4                     __ptext115:
 23814                           	opt callstack 0
 23815  0181C4                     _INT0_ISR:
 23816                           	opt callstack 12
 23817                           
 23818                           ;incstack = 0
 23819  0181C4  EE13  F356         	lfsr	1,___inthi_sp
 23820                           
 23821                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 23822  0181C8  0139               	movlb	57	; () banked
 23823  0181CA  91A1               	bcf	161,0,b	;volatile
 23824                           
 23825                           ; BSR set to: 57
 23826                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 23827  0181CC  ECAF  F0BF         	call	_INT0_CallBack	;wreg free
 23828  0181D0  0011               	retfie		f
 23829  0181D2                     __end_of_INT0_ISR:
 23830                           	opt callstack 0
 23831                           
 23832 ;; *************** function _INT0_CallBack *****************
 23833 ;; Defined at:
 23834 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 23835 ;; Parameters:    Size  Location     Type
 23836 ;;		None
 23837 ;; Auto vars:     Size  Location     Type
 23838 ;;		None
 23839 ;; Return value:  Size  Location     Type
 23840 ;;                  1  [STACK] void 
 23841 ;; Registers used:
 23842 ;;		wreg, status,2, status,0, pclath, tosl
 23843 ;; Tracked objects:
 23844 ;;		On entry : 3F/39
 23845 ;;		On exit  : 0/0
 23846 ;;		Unchanged: 0/0
 23847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23852 ;;Total ram usage:        0 bytes
 23853 ;; Hardware stack levels used:    1
 23854 ;; Hardware stack levels required when called:    1
 23855 ;; This function calls:
 23856 ;;		Absolute function
 23857 ;;		_INT0_DefaultInterruptHandler
 23858 ;; This function is called by:
 23859 ;;		_INT0_ISR
 23860 ;; This function uses a reentrant model
 23861 ;;
 23862                           
 23863                           	psect	text116
 23864  017F5E                     __ptext116:
 23865                           	opt callstack 0
 23866  017F5E                     _INT0_CallBack:
 23867                           	opt callstack 12
 23868                           
 23869                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 23870                           
 23871                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23872                           ;incstack = 0
 23873  017F5E  5019               	movf	_INT0_InterruptHandler^0,w,c
 23874  017F60  101A               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 23875  017F62  101B               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 23876  017F64  B4D8               	btfsc	status,2,c
 23877  017F66  0012               	return	
 23878                           
 23879                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 23880  017F68  D801               	call	u377_48
 23881  017F6A  0012               	return	
 23882  017F6C                     u377_48:
 23883  017F6C  0005               	push	
 23884  017F6E  6EFA               	movwf	pclath,c
 23885  017F70  5019               	movf	_INT0_InterruptHandler^0,w,c
 23886  017F72  6EFD               	movwf	tosl,c
 23887  017F74  501A               	movf	(_INT0_InterruptHandler+1)^0,w,c
 23888  017F76  6EFE               	movwf	tosh,c
 23889  017F78  501B               	movf	(_INT0_InterruptHandler+2)^0,w,c
 23890  017F7A  6EFF               	movwf	tosu,c
 23891  017F7C  50FA               	movf	pclath,w,c
 23892  017F7E  0012               	return		;indir
 23893  017F80                     __end_of_INT0_CallBack:
 23894                           	opt callstack 0
 23895                           
 23896 ;; *************** function _INT0_DefaultInterruptHandler *****************
 23897 ;; Defined at:
 23898 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 23899 ;; Parameters:    Size  Location     Type
 23900 ;;		None
 23901 ;; Auto vars:     Size  Location     Type
 23902 ;;		None
 23903 ;; Return value:  Size  Location     Type
 23904 ;;                  1  [STACK] void 
 23905 ;; Registers used:
 23906 ;;		None
 23907 ;; Tracked objects:
 23908 ;;		On entry : 0/39
 23909 ;;		On exit  : 0/0
 23910 ;;		Unchanged: 0/0
 23911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23916 ;;Total ram usage:        0 bytes
 23917 ;; Hardware stack levels used:    1
 23918 ;; This function calls:
 23919 ;;		Nothing
 23920 ;; This function is called by:
 23921 ;;		_EXT_INT_Initialize
 23922 ;;		_INT0_CallBack
 23923 ;; This function uses a reentrant model
 23924 ;;
 23925                           
 23926                           	psect	text117
 23927  018256                     __ptext117:
 23928                           	opt callstack 0
 23929  018256                     _INT0_DefaultInterruptHandler:
 23930                           	opt callstack 12
 23931                           
 23932                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 23933                           
 23934                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23935                           ;incstack = 0
 23936  018256  0012               	return		;funcret
 23937  018258                     __end_of_INT0_DefaultInterruptHandler:
 23938                           	opt callstack 0
 23939                           
 23940 ;; *************** function _INT1_ISR *****************
 23941 ;; Defined at:
 23942 ;;		line 63 in file "mcc_generated_files/ext_int.c"
 23943 ;; Parameters:    Size  Location     Type
 23944 ;;		None
 23945 ;; Auto vars:     Size  Location     Type
 23946 ;;		None
 23947 ;; Return value:  Size  Location     Type
 23948 ;;                  1    wreg      void 
 23949 ;; Registers used:
 23950 ;;		wreg, status,2, status,0, pclath, tosl
 23951 ;; Tracked objects:
 23952 ;;		On entry : 0/0
 23953 ;;		On exit  : 0/0
 23954 ;;		Unchanged: 0/0
 23955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23960 ;;Total ram usage:        0 bytes
 23961 ;; Hardware stack levels used:    1
 23962 ;; Hardware stack levels required when called:    2
 23963 ;; This function calls:
 23964 ;;		_INT1_CallBack
 23965 ;; This function is called by:
 23966 ;;		Interrupt level 2
 23967 ;; This function uses a non-reentrant model
 23968 ;;
 23969                           
 23970                           	psect	text118
 23971  0181D4                     __ptext118:
 23972                           	opt callstack 0
 23973  0181D4                     _INT1_ISR:
 23974                           	opt callstack 12
 23975                           
 23976                           ;incstack = 0
 23977  0181D4  EE13  F356         	lfsr	1,___inthi_sp
 23978                           
 23979                           ;mcc_generated_files/ext_int.c: 65:  (PIR5bits.INT1IF = 0);
 23980  0181D8  0139               	movlb	57	; () banked
 23981  0181DA  91A5               	bcf	165,0,b	;volatile
 23982                           
 23983                           ; BSR set to: 57
 23984                           ;mcc_generated_files/ext_int.c: 68:  INT1_CallBack();
 23985  0181DC  ECC0  F0BF         	call	_INT1_CallBack	;wreg free
 23986  0181E0  0011               	retfie		f
 23987  0181E2                     __end_of_INT1_ISR:
 23988                           	opt callstack 0
 23989                           
 23990 ;; *************** function _INT1_CallBack *****************
 23991 ;; Defined at:
 23992 ;;		line 71 in file "mcc_generated_files/ext_int.c"
 23993 ;; Parameters:    Size  Location     Type
 23994 ;;		None
 23995 ;; Auto vars:     Size  Location     Type
 23996 ;;		None
 23997 ;; Return value:  Size  Location     Type
 23998 ;;                  1  [STACK] void 
 23999 ;; Registers used:
 24000 ;;		wreg, status,2, status,0, pclath, tosl
 24001 ;; Tracked objects:
 24002 ;;		On entry : 3F/39
 24003 ;;		On exit  : 0/0
 24004 ;;		Unchanged: 0/0
 24005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24010 ;;Total ram usage:        0 bytes
 24011 ;; Hardware stack levels used:    1
 24012 ;; Hardware stack levels required when called:    1
 24013 ;; This function calls:
 24014 ;;		Absolute function
 24015 ;;		_INT1_DefaultInterruptHandler
 24016 ;; This function is called by:
 24017 ;;		_INT1_ISR
 24018 ;; This function uses a reentrant model
 24019 ;;
 24020                           
 24021                           	psect	text119
 24022  017F80                     __ptext119:
 24023                           	opt callstack 0
 24024  017F80                     _INT1_CallBack:
 24025                           	opt callstack 12
 24026                           
 24027                           ;mcc_generated_files/ext_int.c: 74:  if (INT1_InterruptHandler) {
 24028                           
 24029                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24030                           ;incstack = 0
 24031  017F80  5016               	movf	_INT1_InterruptHandler^0,w,c
 24032  017F82  1017               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 24033  017F84  1018               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 24034  017F86  B4D8               	btfsc	status,2,c
 24035  017F88  0012               	return	
 24036                           
 24037                           ;mcc_generated_files/ext_int.c: 75:   INT1_InterruptHandler();
 24038  017F8A  D801               	call	u379_48
 24039  017F8C  0012               	return	
 24040  017F8E                     u379_48:
 24041  017F8E  0005               	push	
 24042  017F90  6EFA               	movwf	pclath,c
 24043  017F92  5016               	movf	_INT1_InterruptHandler^0,w,c
 24044  017F94  6EFD               	movwf	tosl,c
 24045  017F96  5017               	movf	(_INT1_InterruptHandler+1)^0,w,c
 24046  017F98  6EFE               	movwf	tosh,c
 24047  017F9A  5018               	movf	(_INT1_InterruptHandler+2)^0,w,c
 24048  017F9C  6EFF               	movwf	tosu,c
 24049  017F9E  50FA               	movf	pclath,w,c
 24050  017FA0  0012               	return		;indir
 24051  017FA2                     __end_of_INT1_CallBack:
 24052                           	opt callstack 0
 24053                           
 24054 ;; *************** function _INT1_DefaultInterruptHandler *****************
 24055 ;; Defined at:
 24056 ;;		line 84 in file "mcc_generated_files/ext_int.c"
 24057 ;; Parameters:    Size  Location     Type
 24058 ;;		None
 24059 ;; Auto vars:     Size  Location     Type
 24060 ;;		None
 24061 ;; Return value:  Size  Location     Type
 24062 ;;                  1  [STACK] void 
 24063 ;; Registers used:
 24064 ;;		None
 24065 ;; Tracked objects:
 24066 ;;		On entry : 0/39
 24067 ;;		On exit  : 0/0
 24068 ;;		Unchanged: 0/0
 24069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24074 ;;Total ram usage:        0 bytes
 24075 ;; Hardware stack levels used:    1
 24076 ;; This function calls:
 24077 ;;		Nothing
 24078 ;; This function is called by:
 24079 ;;		_EXT_INT_Initialize
 24080 ;;		_INT1_CallBack
 24081 ;; This function uses a reentrant model
 24082 ;;
 24083                           
 24084                           	psect	text120
 24085  018258                     __ptext120:
 24086                           	opt callstack 0
 24087  018258                     _INT1_DefaultInterruptHandler:
 24088                           	opt callstack 12
 24089                           
 24090                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24091                           
 24092                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24093                           ;incstack = 0
 24094  018258  0012               	return		;funcret
 24095  01825A                     __end_of_INT1_DefaultInterruptHandler:
 24096                           	opt callstack 0
 24097                           
 24098 ;; *************** function _Default_ISR *****************
 24099 ;; Defined at:
 24100 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 24101 ;; Parameters:    Size  Location     Type
 24102 ;;		None
 24103 ;; Auto vars:     Size  Location     Type
 24104 ;;		None
 24105 ;; Return value:  Size  Location     Type
 24106 ;;                  1    wreg      void 
 24107 ;; Registers used:
 24108 ;;		None
 24109 ;; Tracked objects:
 24110 ;;		On entry : 0/0
 24111 ;;		On exit  : 0/0
 24112 ;;		Unchanged: 0/0
 24113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24118 ;;Total ram usage:        0 bytes
 24119 ;; Hardware stack levels used:    1
 24120 ;; This function calls:
 24121 ;;		Nothing
 24122 ;; This function is called by:
 24123 ;;		Interrupt level 2
 24124 ;; This function uses a non-reentrant model
 24125 ;;
 24126                           
 24127                           	psect	text121
 24128  018250                     __ptext121:
 24129                           	opt callstack 0
 24130  018250                     _Default_ISR:
 24131                           	opt callstack 14
 24132                           
 24133                           ;incstack = 0
 24134  018250  EE13  F356         	lfsr	1,___inthi_sp
 24135  018254  0011               	retfie		f
 24136  018256                     __end_of_Default_ISR:
 24137                           	opt callstack 0
 24138                           
 24139 ;; *************** function _ADCC_ISR *****************
 24140 ;; Defined at:
 24141 ;;		line 314 in file "mcc_generated_files/adcc.c"
 24142 ;; Parameters:    Size  Location     Type
 24143 ;;		None
 24144 ;; Auto vars:     Size  Location     Type
 24145 ;;		None
 24146 ;; Return value:  Size  Location     Type
 24147 ;;                  1    wreg      void 
 24148 ;; Registers used:
 24149 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 24150 ;; Tracked objects:
 24151 ;;		On entry : 0/0
 24152 ;;		On exit  : 0/0
 24153 ;;		Unchanged: 0/0
 24154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24157 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24158 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24159 ;;Total ram usage:        1 bytes
 24160 ;; Hardware stack levels used:    1
 24161 ;; Hardware stack levels required when called:    1
 24162 ;; This function calls:
 24163 ;;		Absolute function
 24164 ;;		_ADCC_DefaultInterruptHandler
 24165 ;;		_adc_int_handler
 24166 ;; This function is called by:
 24167 ;;		Interrupt level 2
 24168 ;; This function uses a non-reentrant model
 24169 ;;
 24170                           
 24171                           	psect	text122
 24172  017A24                     __ptext122:
 24173                           	opt callstack 0
 24174  017A24                     _ADCC_ISR:
 24175                           	opt callstack 13
 24176                           
 24177                           ;incstack = 0
 24178  017A24  0060  F100  F055   	movff	btemp+11,??_ADCC_ISR
 24179  017A2A  EE13  F356         	lfsr	1,___inthi_sp
 24180                           
 24181                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 24182  017A2E  0139               	movlb	57	; () banked
 24183  017A30  95A1               	bcf	161,2,b	;volatile
 24184                           
 24185                           ; BSR set to: 57
 24186                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 24187  017A32  5007               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 24188  017A34  1008               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 24189  017A36  1009               	iorwf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 24190  017A38  B4D8               	btfsc	status,2,c
 24191  017A3A  D00C               	goto	i2u407_49
 24192                           
 24193                           ; BSR set to: 57
 24194                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 24195  017A3C  D801               	call	i2u407_48
 24196  017A3E  D00A               	goto	i2u407_49
 24197  017A40                     i2u407_48:
 24198  017A40  0005               	push	
 24199  017A42  6EFA               	movwf	pclath,c
 24200  017A44  5007               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 24201  017A46  6EFD               	movwf	tosl,c
 24202  017A48  5008               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 24203  017A4A  6EFE               	movwf	tosh,c
 24204  017A4C  5009               	movf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 24205  017A4E  6EFF               	movwf	tosu,c
 24206  017A50  50FA               	movf	pclath,w,c
 24207  017A52  0012               	return		;indir
 24208  017A54                     i2u407_49:
 24209  017A54  0060  F154  F040   	movff	??_ADCC_ISR,btemp+11
 24210  017A5A  0011               	retfie		f
 24211  017A5C                     __end_of_ADCC_ISR:
 24212                           	opt callstack 0
 24213                           
 24214 ;; *************** function _adc_int_t_handler *****************
 24215 ;; Defined at:
 24216 ;;		line 117 in file "daq.c"
 24217 ;; Parameters:    Size  Location     Type
 24218 ;;		None
 24219 ;; Auto vars:     Size  Location     Type
 24220 ;;		None
 24221 ;; Return value:  Size  Location     Type
 24222 ;;                  1  [STACK] void 
 24223 ;; Registers used:
 24224 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 24225 ;; Tracked objects:
 24226 ;;		On entry : 3F/39
 24227 ;;		On exit  : 1/0
 24228 ;;		Unchanged: 0/0
 24229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24234 ;;Total ram usage:        0 bytes
 24235 ;; Hardware stack levels used:    1
 24236 ;; Hardware stack levels required when called:    1
 24237 ;; This function calls:
 24238 ;;		_ADCC_StartConversion
 24239 ;; This function is called by:
 24240 ;;		_start_adc_scan
 24241 ;;		_ADCC_ThresholdISR
 24242 ;; This function uses a reentrant model
 24243 ;;
 24244                           
 24245                           	psect	text123
 24246  016E00                     __ptext123:
 24247                           	opt callstack 0
 24248  016E00                     _adc_int_t_handler:
 24249                           	opt callstack 12
 24250                           
 24251                           ;daq.c: 122:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 24252                           
 24253                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24254                           ;incstack = 0
 24255  016E00  013E               	movlb	62	; () banked
 24256  016E02  51E6               	movf	230,w,b	;volatile
 24257  016E04  006F FB9C  F035    	movff	16103,btemp	;volatile
 24258  016E0A  6A36               	clrf	(btemp+1)^0,c
 24259  016E0C  0060  F0D4  F036   	movff	btemp,btemp+1
 24260  016E12  6A35               	clrf	btemp^0,c
 24261  016E14  2635               	addwf	btemp^0,f,c
 24262  016E16  0E00               	movlw	0
 24263  016E18  2236               	addwfc	(btemp+1)^0,f,c
 24264  016E1A  0100               	movlb	0	; () banked
 24265  016E1C  5188               	movf	(_R+40)& (0+255),w,b	;volatile
 24266  016E1E  0D02               	mullw	2
 24267  016E20  50F3               	movf	243,w,c
 24268  016E22  0F60               	addlw	low _R
 24269  016E24  6ED9               	movwf	fsr2l,c
 24270  016E26  6ADA               	clrf	fsr2h,c
 24271  016E28  0060  F0D7  FFDE   	movff	btemp,postinc2
 24272  016E2E  0060  F0DB  FFDD   	movff	btemp+1,postdec2
 24273  016E34                     l8699:
 24274                           
 24275                           ;daq.c: 124:   if (++R.scan_index > 0XD) {
 24276  016E34  0100               	movlb	0	; () banked
 24277  016E36  2B88               	incf	(_R+40)& (0+255),f,b	;volatile
 24278  016E38  0E0D               	movlw	13
 24279  016E3A  6588               	cpfsgt	(_R+40)& (0+255),b	;volatile
 24280  016E3C  D004               	goto	l8707
 24281                           
 24282                           ; BSR set to: 0
 24283                           ;daq.c: 125:    R.done = 1;
 24284  016E3E  0E01               	movlw	1
 24285  016E40  6F8B               	movwf	(_R+43)& (0+255),b	;volatile
 24286                           
 24287                           ; BSR set to: 0
 24288  016E42  92BE               	bcf	190,1,c	;volatile
 24289  016E44  0012               	return	
 24290  016E46                     l8707:
 24291                           
 24292                           ; BSR set to: 0
 24293                           ;daq.c: 129:  } while (!((R.scan_select >> R.scan_index) &0x1));
 24294  016E46  0060  F220  F040   	movff	_R+40,btemp+11	;volatile
 24295  016E4C  EE20  F089         	lfsr	2,_R+41	;volatile
 24296  016E50  006F FF78  F03D    	movff	postinc2,btemp+8
 24297  016E56  006F FF74  F03E    	movff	postdec2,btemp+9
 24298  016E5C  2A40               	incf	(btemp+11)^0,f,c
 24299  016E5E  D003               	goto	u824_44
 24300  016E60                     u824_45:
 24301  016E60  90D8               	bcf	status,0,c
 24302  016E62  323E               	rrcf	(btemp+9)^0,f,c
 24303  016E64  323D               	rrcf	(btemp+8)^0,f,c
 24304  016E66                     u824_44:
 24305  016E66  2E40               	decfsz	(btemp+11)^0,f,c
 24306  016E68  D7FB               	goto	u824_45
 24307  016E6A  A03D               	btfss	(btemp+8)^0,0,c
 24308  016E6C  D7E3               	goto	l8699
 24309                           
 24310                           ;daq.c: 130:  ADCC_StartConversion(R.scan_index & 0xf);
 24311  016E6E  0100               	movlb	0	; () banked
 24312  016E70  5188               	movf	(_R+40)& (0+255),w,b	;volatile
 24313  016E72  0B0F               	andlw	15
 24314  016E74  6EE6               	movwf	postinc1,c
 24315  016E76  ECC2  F0C0         	call	_ADCC_StartConversion	;wreg free
 24316                           
 24317                           ; BSR set to: 62
 24318  016E7A  A2BE               	btfss	190,1,c	;volatile
 24319  016E7C  D002               	goto	u826_40
 24320  016E7E  0E01               	movlw	1
 24321  016E80  D001               	goto	u826_46
 24322  016E82                     u826_40:
 24323  016E82  0E00               	movlw	0
 24324  016E84                     u826_46:
 24325  016E84  0AFF               	xorlw	255
 24326  016E86  6E40               	movwf	(btemp+11)^0,c
 24327  016E88  4640               	rlncf	(btemp+11)^0,f,c
 24328  016E8A  50BE               	movf	190,w,c	;volatile
 24329  016E8C  1840               	xorwf	(btemp+11)^0,w,c
 24330  016E8E  0BFD               	andlw	-3
 24331  016E90  1840               	xorwf	(btemp+11)^0,w,c
 24332  016E92  6EBE               	movwf	190,c	;volatile
 24333                           
 24334                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 24335  016E94  0012               	return		;funcret
 24336  016E96                     __end_of_adc_int_t_handler:
 24337                           	opt callstack 0
 24338                           
 24339 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 24340 ;; Defined at:
 24341 ;;		line 339 in file "mcc_generated_files/adcc.c"
 24342 ;; Parameters:    Size  Location     Type
 24343 ;;		None
 24344 ;; Auto vars:     Size  Location     Type
 24345 ;;		None
 24346 ;; Return value:  Size  Location     Type
 24347 ;;                  1  [STACK] void 
 24348 ;; Registers used:
 24349 ;;		None
 24350 ;; Tracked objects:
 24351 ;;		On entry : 3F/39
 24352 ;;		On exit  : 0/0
 24353 ;;		Unchanged: 0/0
 24354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24359 ;;Total ram usage:        0 bytes
 24360 ;; Hardware stack levels used:    1
 24361 ;; This function calls:
 24362 ;;		Nothing
 24363 ;; This function is called by:
 24364 ;;		_ADCC_Initialize
 24365 ;;		_ADCC_ISR
 24366 ;;		_ADCC_ThresholdISR
 24367 ;; This function uses a reentrant model
 24368 ;;
 24369                           
 24370                           	psect	text124
 24371  01825A                     __ptext124:
 24372                           	opt callstack 0
 24373  01825A                     _ADCC_DefaultInterruptHandler:
 24374                           	opt callstack 13
 24375                           
 24376                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24377                           
 24378                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24379                           ;incstack = 0
 24380  01825A  0012               	return		;funcret
 24381  01825C                     __end_of_ADCC_DefaultInterruptHandler:
 24382                           	opt callstack 0
 24383                           
 24384 ;; *************** function _adc_int_handler *****************
 24385 ;; Defined at:
 24386 ;;		line 109 in file "daq.c"
 24387 ;; Parameters:    Size  Location     Type
 24388 ;;		None
 24389 ;; Auto vars:     Size  Location     Type
 24390 ;;		None
 24391 ;; Return value:  Size  Location     Type
 24392 ;;                  1  [STACK] void 
 24393 ;; Registers used:
 24394 ;;		wreg, status,2, status,0, btemp+11
 24395 ;; Tracked objects:
 24396 ;;		On entry : 3F/39
 24397 ;;		On exit  : 0/0
 24398 ;;		Unchanged: 0/0
 24399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24404 ;;Total ram usage:        0 bytes
 24405 ;; Hardware stack levels used:    1
 24406 ;; This function calls:
 24407 ;;		Nothing
 24408 ;; This function is called by:
 24409 ;;		_start_adc_scan
 24410 ;;		_ADCC_ISR
 24411 ;; This function uses a reentrant model
 24412 ;;
 24413                           
 24414                           	psect	text125
 24415  01801E                     __ptext125:
 24416                           	opt callstack 0
 24417  01801E                     _adc_int_handler:
 24418                           	opt callstack 13
 24419                           
 24420                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24421                           ;incstack = 0
 24422                           ;daq.c: 111:  do { LATEbits.LATE2 = ~LATEbits.LATE2; } while(0);
 24423  01801E  A4BE               	btfss	190,2,c	;volatile
 24424  018020  D002               	goto	u401_40
 24425  018022  0E01               	movlw	1
 24426  018024  D001               	goto	u401_46
 24427  018026                     u401_40:
 24428  018026  0E00               	movlw	0
 24429  018028                     u401_46:
 24430  018028  0AFF               	xorlw	255
 24431  01802A  6E40               	movwf	(btemp+11)^0,c
 24432  01802C  4640               	rlncf	(btemp+11)^0,f,c
 24433  01802E  4640               	rlncf	(btemp+11)^0,f,c
 24434  018030  50BE               	movf	190,w,c	;volatile
 24435  018032  1840               	xorwf	(btemp+11)^0,w,c
 24436  018034  0BFB               	andlw	-5
 24437  018036  1840               	xorwf	(btemp+11)^0,w,c
 24438  018038  6EBE               	movwf	190,c	;volatile
 24439                           
 24440                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24441  01803A  0012               	return		;funcret
 24442  01803C                     __end_of_adc_int_handler:
 24443                           	opt callstack 0
 24444                           
 24445 ;; *************** function _ADCC_ThresholdISR *****************
 24446 ;; Defined at:
 24447 ;;		line 327 in file "mcc_generated_files/adcc.c"
 24448 ;; Parameters:    Size  Location     Type
 24449 ;;		None
 24450 ;; Auto vars:     Size  Location     Type
 24451 ;;		None
 24452 ;; Return value:  Size  Location     Type
 24453 ;;                  1    wreg      void 
 24454 ;; Registers used:
 24455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 24456 ;; Tracked objects:
 24457 ;;		On entry : 0/0
 24458 ;;		On exit  : 0/0
 24459 ;;		Unchanged: 0/0
 24460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24463 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24464 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24465 ;;Total ram usage:        5 bytes
 24466 ;; Hardware stack levels used:    1
 24467 ;; Hardware stack levels required when called:    2
 24468 ;; This function calls:
 24469 ;;		Absolute function
 24470 ;;		_ADCC_DefaultInterruptHandler
 24471 ;;		_adc_int_t_handler
 24472 ;; This function is called by:
 24473 ;;		Interrupt level 2
 24474 ;; This function uses a non-reentrant model
 24475 ;;
 24476                           
 24477                           	psect	text126
 24478  017294                     __ptext126:
 24479                           	opt callstack 0
 24480  017294                     _ADCC_ThresholdISR:
 24481                           	opt callstack 12
 24482                           
 24483                           ;incstack = 0
 24484  017294  0060  F0D4  F056   	movff	btemp,??_ADCC_ThresholdISR
 24485  01729A  0060  F0D8  F057   	movff	btemp+1,??_ADCC_ThresholdISR+1
 24486  0172A0  0060  F0F4  F058   	movff	btemp+8,??_ADCC_ThresholdISR+2
 24487  0172A6  0060  F0F8  F059   	movff	btemp+9,??_ADCC_ThresholdISR+3
 24488  0172AC  0060  F100  F05A   	movff	btemp+11,??_ADCC_ThresholdISR+4
 24489  0172B2  EE13  F356         	lfsr	1,___inthi_sp
 24490                           
 24491                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 24492  0172B6  0139               	movlb	57	; () banked
 24493  0172B8  97A1               	bcf	161,3,b	;volatile
 24494                           
 24495                           ; BSR set to: 57
 24496                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 24497  0172BA  5004               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 24498  0172BC  1005               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 24499  0172BE  1006               	iorwf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 24500  0172C0  B4D8               	btfsc	status,2,c
 24501  0172C2  D00C               	goto	i2u828_49
 24502                           
 24503                           ; BSR set to: 57
 24504                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 24505  0172C4  D801               	call	i2u828_48
 24506  0172C6  D00A               	goto	i2u828_49
 24507  0172C8                     i2u828_48:
 24508  0172C8  0005               	push	
 24509  0172CA  6EFA               	movwf	pclath,c
 24510  0172CC  5004               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 24511  0172CE  6EFD               	movwf	tosl,c
 24512  0172D0  5005               	movf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 24513  0172D2  6EFE               	movwf	tosh,c
 24514  0172D4  5006               	movf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 24515  0172D6  6EFF               	movwf	tosu,c
 24516  0172D8  50FA               	movf	pclath,w,c
 24517  0172DA  0012               	return		;indir
 24518  0172DC                     i2u828_49:
 24519  0172DC  0060  F168  F040   	movff	??_ADCC_ThresholdISR+4,btemp+11
 24520  0172E2  0060  F164  F03E   	movff	??_ADCC_ThresholdISR+3,btemp+9
 24521  0172E8  0060  F160  F03D   	movff	??_ADCC_ThresholdISR+2,btemp+8
 24522  0172EE  0060  F15C  F036   	movff	??_ADCC_ThresholdISR+1,btemp+1
 24523  0172F4  0060  F158  F035   	movff	??_ADCC_ThresholdISR,btemp
 24524  0172FA  0011               	retfie		f
 24525  0172FC                     __end_of_ADCC_ThresholdISR:
 24526                           	opt callstack 0
 24527                           
 24528 ;; *************** function _UART1_tx_vect_isr *****************
 24529 ;; Defined at:
 24530 ;;		line 199 in file "mcc_generated_files/uart1.c"
 24531 ;; Parameters:    Size  Location     Type
 24532 ;;		None
 24533 ;; Auto vars:     Size  Location     Type
 24534 ;;		None
 24535 ;; Return value:  Size  Location     Type
 24536 ;;                  1    wreg      void 
 24537 ;; Registers used:
 24538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 24539 ;; Tracked objects:
 24540 ;;		On entry : 0/0
 24541 ;;		On exit  : 0/0
 24542 ;;		Unchanged: 0/0
 24543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24548 ;;Total ram usage:        0 bytes
 24549 ;; Hardware stack levels used:    1
 24550 ;; Hardware stack levels required when called:    1
 24551 ;; This function calls:
 24552 ;;		Absolute function
 24553 ;;		_UART1_Transmit_ISR
 24554 ;; This function is called by:
 24555 ;;		Interrupt level 2
 24556 ;; This function uses a non-reentrant model
 24557 ;;
 24558                           
 24559                           	psect	text127
 24560  017E78                     __ptext127:
 24561                           	opt callstack 0
 24562  017E78                     _UART1_tx_vect_isr:
 24563                           	opt callstack 13
 24564                           
 24565                           ;incstack = 0
 24566  017E78  EE13  F356         	lfsr	1,___inthi_sp
 24567                           
 24568                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 24569  017E7C  500A               	movf	_UART1_TxInterruptHandler^0,w,c
 24570  017E7E  100B               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 24571  017E80  100C               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 24572  017E82  B4D8               	btfsc	status,2,c
 24573  017E84  0011               	retfie		f
 24574                           
 24575                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 24576  017E86  D801               	call	i2u1000_48
 24577  017E88  0011               	retfie		f
 24578  017E8A                     i2u1000_48:
 24579  017E8A  0005               	push	
 24580  017E8C  6EFA               	movwf	pclath,c
 24581  017E8E  500A               	movf	_UART1_TxInterruptHandler^0,w,c
 24582  017E90  6EFD               	movwf	tosl,c
 24583  017E92  500B               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 24584  017E94  6EFE               	movwf	tosh,c
 24585  017E96  500C               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 24586  017E98  6EFF               	movwf	tosu,c
 24587  017E9A  50FA               	movf	pclath,w,c
 24588  017E9C  0012               	return		;indir
 24589  017E9E                     __end_of_UART1_tx_vect_isr:
 24590                           	opt callstack 0
 24591                           
 24592 ;; *************** function _UART1_Transmit_ISR *****************
 24593 ;; Defined at:
 24594 ;;		line 213 in file "mcc_generated_files/uart1.c"
 24595 ;; Parameters:    Size  Location     Type
 24596 ;;		None
 24597 ;; Auto vars:     Size  Location     Type
 24598 ;;		None
 24599 ;; Return value:  Size  Location     Type
 24600 ;;                  1  [STACK] void 
 24601 ;; Registers used:
 24602 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24603 ;; Tracked objects:
 24604 ;;		On entry : 0/0
 24605 ;;		On exit  : 3B/39
 24606 ;;		Unchanged: 0/0
 24607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24612 ;;Total ram usage:        0 bytes
 24613 ;; Hardware stack levels used:    1
 24614 ;; This function calls:
 24615 ;;		Nothing
 24616 ;; This function is called by:
 24617 ;;		_UART1_Initialize
 24618 ;;		_UART1_tx_vect_isr
 24619 ;; This function uses a reentrant model
 24620 ;;
 24621                           
 24622                           	psect	text128
 24623  017BEE                     __ptext128:
 24624                           	opt callstack 0
 24625  017BEE                     _UART1_Transmit_ISR:
 24626                           	opt callstack 13
 24627                           
 24628                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 24629                           
 24630                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24631                           ;incstack = 0
 24632  017BEE  0E40               	movlw	64
 24633  017BF0  6032               	cpfslt	_uart1TxBufferRemaining^0,c
 24634  017BF2  D010               	goto	l581
 24635                           
 24636                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 24637  017BF4  0EAC               	movlw	low _uart1TxBuffer
 24638  017BF6  2433               	addwf	_uart1TxTail^0,w,c	;volatile
 24639  017BF8  6ED9               	movwf	fsr2l,c
 24640  017BFA  6ADA               	clrf	fsr2h,c
 24641  017BFC  0E02               	movlw	high _uart1TxBuffer
 24642  017BFE  22DA               	addwfc	fsr2h,f,c
 24643  017C00  50DF               	movf	indf2,w,c
 24644  017C02  013D               	movlb	61	; () banked
 24645  017C04  6FEA               	movwf	234,b	;volatile
 24646                           
 24647                           ; BSR set to: 61
 24648  017C06  2A33               	incf	_uart1TxTail^0,f,c	;volatile
 24649                           
 24650                           ; BSR set to: 61
 24651                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 24652  017C08  0E3F               	movlw	63
 24653  017C0A  6433               	cpfsgt	_uart1TxTail^0,c
 24654  017C0C  D001               	goto	l8493
 24655                           
 24656                           ; BSR set to: 61
 24657                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 24658  017C0E  6A33               	clrf	_uart1TxTail^0,c	;volatile
 24659  017C10                     l8493:
 24660                           
 24661                           ; BSR set to: 61
 24662                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 24663  017C10  2A32               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 24664                           
 24665                           ;mcc_generated_files/uart1.c: 222:  } else {
 24666  017C12  0012               	return	
 24667  017C14                     l581:
 24668                           
 24669                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 24670  017C14  0139               	movlb	57	; () banked
 24671  017C16  9993               	bcf	147,4,b	;volatile
 24672                           
 24673                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 24674  017C18  0012               	return		;funcret
 24675  017C1A                     __end_of_UART1_Transmit_ISR:
 24676                           	opt callstack 0
 24677                           
 24678 ;; *************** function _UART1_rx_vect_isr *****************
 24679 ;; Defined at:
 24680 ;;		line 206 in file "mcc_generated_files/uart1.c"
 24681 ;; Parameters:    Size  Location     Type
 24682 ;;		None
 24683 ;; Auto vars:     Size  Location     Type
 24684 ;;		None
 24685 ;; Return value:  Size  Location     Type
 24686 ;;                  1    wreg      void 
 24687 ;; Registers used:
 24688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 24689 ;; Tracked objects:
 24690 ;;		On entry : 0/0
 24691 ;;		On exit  : 0/0
 24692 ;;		Unchanged: 0/0
 24693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24698 ;;Total ram usage:        0 bytes
 24699 ;; Hardware stack levels used:    1
 24700 ;; Hardware stack levels required when called:    1
 24701 ;; This function calls:
 24702 ;;		Absolute function
 24703 ;;		_UART1_Receive_ISR
 24704 ;; This function is called by:
 24705 ;;		Interrupt level 2
 24706 ;; This function uses a non-reentrant model
 24707 ;;
 24708                           
 24709                           	psect	text129
 24710  017EA0                     __ptext129:
 24711                           	opt callstack 0
 24712  017EA0                     _UART1_rx_vect_isr:
 24713                           	opt callstack 13
 24714                           
 24715                           ;incstack = 0
 24716  017EA0  EE13  F356         	lfsr	1,___inthi_sp
 24717                           
 24718                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 24719  017EA4  500D               	movf	_UART1_RxInterruptHandler^0,w,c
 24720  017EA6  100E               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 24721  017EA8  100F               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 24722  017EAA  B4D8               	btfsc	status,2,c
 24723  017EAC  0011               	retfie		f
 24724                           
 24725                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 24726  017EAE  D801               	call	i2u1002_48
 24727  017EB0  0011               	retfie		f
 24728  017EB2                     i2u1002_48:
 24729  017EB2  0005               	push	
 24730  017EB4  6EFA               	movwf	pclath,c
 24731  017EB6  500D               	movf	_UART1_RxInterruptHandler^0,w,c
 24732  017EB8  6EFD               	movwf	tosl,c
 24733  017EBA  500E               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 24734  017EBC  6EFE               	movwf	tosh,c
 24735  017EBE  500F               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 24736  017EC0  6EFF               	movwf	tosu,c
 24737  017EC2  50FA               	movf	pclath,w,c
 24738  017EC4  0012               	return		;indir
 24739  017EC6                     __end_of_UART1_rx_vect_isr:
 24740                           	opt callstack 0
 24741                           
 24742 ;; *************** function _UART1_Receive_ISR *****************
 24743 ;; Defined at:
 24744 ;;		line 229 in file "mcc_generated_files/uart1.c"
 24745 ;; Parameters:    Size  Location     Type
 24746 ;;		None
 24747 ;; Auto vars:     Size  Location     Type
 24748 ;;		None
 24749 ;; Return value:  Size  Location     Type
 24750 ;;                  1  [STACK] void 
 24751 ;; Registers used:
 24752 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24753 ;; Tracked objects:
 24754 ;;		On entry : 0/0
 24755 ;;		On exit  : 0/0
 24756 ;;		Unchanged: 0/0
 24757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24762 ;;Total ram usage:        0 bytes
 24763 ;; Hardware stack levels used:    1
 24764 ;; This function calls:
 24765 ;;		Nothing
 24766 ;; This function is called by:
 24767 ;;		_UART1_Initialize
 24768 ;;		_UART1_rx_vect_isr
 24769 ;; This function uses a reentrant model
 24770 ;;
 24771                           
 24772                           	psect	text130
 24773  01803C                     __ptext130:
 24774                           	opt callstack 0
 24775  01803C                     _UART1_Receive_ISR:
 24776                           	opt callstack 13
 24777                           
 24778                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 24779                           
 24780                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24781                           ;incstack = 0
 24782  01803C  0E00               	movlw	low _uart1RxBuffer
 24783  01803E  2431               	addwf	_uart1RxHead^0,w,c	;volatile
 24784  018040  6ED9               	movwf	fsr2l,c
 24785  018042  6ADA               	clrf	fsr2h,c
 24786  018044  0E05               	movlw	high _uart1RxBuffer
 24787  018046  22DA               	addwfc	fsr2h,f,c
 24788  018048  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 24789  01804E  2A31               	incf	_uart1RxHead^0,f,c	;volatile
 24790                           
 24791                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 24792  018050  2831               	incf	_uart1RxHead^0,w,c
 24793  018052  B4D8               	btfsc	status,2,c
 24794                           
 24795                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 24796  018054  6A31               	clrf	_uart1RxHead^0,c	;volatile
 24797                           
 24798                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 24799  018056  2A2F               	incf	_uart1RxCount^0,f,c	;volatile
 24800                           
 24801                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 24802  018058  0012               	return		;funcret
 24803  01805A                     __end_of_UART1_Receive_ISR:
 24804                           	opt callstack 0
 24805                           
 24806 ;; *************** function _UART2_tx_vect_isr *****************
 24807 ;; Defined at:
 24808 ;;		line 195 in file "mcc_generated_files/uart2.c"
 24809 ;; Parameters:    Size  Location     Type
 24810 ;;		None
 24811 ;; Auto vars:     Size  Location     Type
 24812 ;;		None
 24813 ;; Return value:  Size  Location     Type
 24814 ;;                  1    wreg      void 
 24815 ;; Registers used:
 24816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 24817 ;; Tracked objects:
 24818 ;;		On entry : 0/0
 24819 ;;		On exit  : 0/0
 24820 ;;		Unchanged: 0/0
 24821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24826 ;;Total ram usage:        0 bytes
 24827 ;; Hardware stack levels used:    1
 24828 ;; Hardware stack levels required when called:    1
 24829 ;; This function calls:
 24830 ;;		Absolute function
 24831 ;;		_UART2_Transmit_ISR
 24832 ;; This function is called by:
 24833 ;;		Interrupt level 2
 24834 ;; This function uses a non-reentrant model
 24835 ;;
 24836                           
 24837                           	psect	text131
 24838  017EC8                     __ptext131:
 24839                           	opt callstack 0
 24840  017EC8                     _UART2_tx_vect_isr:
 24841                           	opt callstack 13
 24842                           
 24843                           ;incstack = 0
 24844  017EC8  EE13  F356         	lfsr	1,___inthi_sp
 24845                           
 24846                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 24847  017ECC  5010               	movf	_UART2_TxInterruptHandler^0,w,c
 24848  017ECE  1011               	iorwf	(_UART2_TxInterruptHandler+1)^0,w,c
 24849  017ED0  1012               	iorwf	(_UART2_TxInterruptHandler+2)^0,w,c
 24850  017ED2  B4D8               	btfsc	status,2,c
 24851  017ED4  0011               	retfie		f
 24852                           
 24853                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 24854  017ED6  D801               	call	i2u1004_48
 24855  017ED8  0011               	retfie		f
 24856  017EDA                     i2u1004_48:
 24857  017EDA  0005               	push	
 24858  017EDC  6EFA               	movwf	pclath,c
 24859  017EDE  5010               	movf	_UART2_TxInterruptHandler^0,w,c
 24860  017EE0  6EFD               	movwf	tosl,c
 24861  017EE2  5011               	movf	(_UART2_TxInterruptHandler+1)^0,w,c
 24862  017EE4  6EFE               	movwf	tosh,c
 24863  017EE6  5012               	movf	(_UART2_TxInterruptHandler+2)^0,w,c
 24864  017EE8  6EFF               	movwf	tosu,c
 24865  017EEA  50FA               	movf	pclath,w,c
 24866  017EEC  0012               	return		;indir
 24867  017EEE                     __end_of_UART2_tx_vect_isr:
 24868                           	opt callstack 0
 24869                           
 24870 ;; *************** function _UART2_Transmit_ISR *****************
 24871 ;; Defined at:
 24872 ;;		line 213 in file "mcc_generated_files/uart2.c"
 24873 ;; Parameters:    Size  Location     Type
 24874 ;;		None
 24875 ;; Auto vars:     Size  Location     Type
 24876 ;;		None
 24877 ;; Return value:  Size  Location     Type
 24878 ;;                  1  [STACK] void 
 24879 ;; Registers used:
 24880 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24881 ;; Tracked objects:
 24882 ;;		On entry : 0/0
 24883 ;;		On exit  : 3B/39
 24884 ;;		Unchanged: 0/0
 24885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24890 ;;Total ram usage:        0 bytes
 24891 ;; Hardware stack levels used:    1
 24892 ;; This function calls:
 24893 ;;		Nothing
 24894 ;; This function is called by:
 24895 ;;		_UART2_Initialize
 24896 ;;		_UART2_tx_vect_isr
 24897 ;; This function uses a reentrant model
 24898 ;;
 24899                           
 24900                           	psect	text132
 24901  017C1A                     __ptext132:
 24902                           	opt callstack 0
 24903  017C1A                     _UART2_Transmit_ISR:
 24904                           	opt callstack 13
 24905                           
 24906                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 24907                           
 24908                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24909                           ;incstack = 0
 24910  017C1A  0E40               	movlw	64
 24911  017C1C  602C               	cpfslt	_uart2TxBufferRemaining^0,c
 24912  017C1E  D010               	goto	l701
 24913                           
 24914                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 24915  017C20  0E00               	movlw	low _uart2TxBuffer
 24916  017C22  242D               	addwf	_uart2TxTail^0,w,c	;volatile
 24917  017C24  6ED9               	movwf	fsr2l,c
 24918  017C26  6ADA               	clrf	fsr2h,c
 24919  017C28  0E03               	movlw	high _uart2TxBuffer
 24920  017C2A  22DA               	addwfc	fsr2h,f,c
 24921  017C2C  50DF               	movf	indf2,w,c
 24922  017C2E  013D               	movlb	61	; () banked
 24923  017C30  6FD2               	movwf	210,b	;volatile
 24924                           
 24925                           ; BSR set to: 61
 24926  017C32  2A2D               	incf	_uart2TxTail^0,f,c	;volatile
 24927                           
 24928                           ; BSR set to: 61
 24929                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 24930  017C34  0E3F               	movlw	63
 24931  017C36  642D               	cpfsgt	_uart2TxTail^0,c
 24932  017C38  D001               	goto	l8515
 24933                           
 24934                           ; BSR set to: 61
 24935                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 24936  017C3A  6A2D               	clrf	_uart2TxTail^0,c	;volatile
 24937  017C3C                     l8515:
 24938                           
 24939                           ; BSR set to: 61
 24940                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 24941  017C3C  2A2C               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 24942                           
 24943                           ;mcc_generated_files/uart2.c: 224:     }
 24944  017C3E  0012               	return	
 24945  017C40                     l701:
 24946                           
 24947                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 24948  017C40  0139               	movlb	57	; () banked
 24949  017C42  9796               	bcf	150,3,b	;volatile
 24950                           
 24951                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 24952  017C44  0012               	return		;funcret
 24953  017C46                     __end_of_UART2_Transmit_ISR:
 24954                           	opt callstack 0
 24955                           
 24956 ;; *************** function _UART2_rx_vect_isr *****************
 24957 ;; Defined at:
 24958 ;;		line 203 in file "mcc_generated_files/uart2.c"
 24959 ;; Parameters:    Size  Location     Type
 24960 ;;		None
 24961 ;; Auto vars:     Size  Location     Type
 24962 ;;		None
 24963 ;; Return value:  Size  Location     Type
 24964 ;;                  1    wreg      void 
 24965 ;; Registers used:
 24966 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 24967 ;; Tracked objects:
 24968 ;;		On entry : 0/0
 24969 ;;		On exit  : 0/0
 24970 ;;		Unchanged: 0/0
 24971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24976 ;;Total ram usage:        0 bytes
 24977 ;; Hardware stack levels used:    1
 24978 ;; Hardware stack levels required when called:    1
 24979 ;; This function calls:
 24980 ;;		Absolute function
 24981 ;;		_UART2_Receive_ISR
 24982 ;; This function is called by:
 24983 ;;		Interrupt level 2
 24984 ;; This function uses a non-reentrant model
 24985 ;;
 24986                           
 24987                           	psect	text133
 24988  017EF0                     __ptext133:
 24989                           	opt callstack 0
 24990  017EF0                     _UART2_rx_vect_isr:
 24991                           	opt callstack 13
 24992                           
 24993                           ;incstack = 0
 24994  017EF0  EE13  F356         	lfsr	1,___inthi_sp
 24995                           
 24996                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 24997  017EF4  5013               	movf	_UART2_RxInterruptHandler^0,w,c
 24998  017EF6  1014               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 24999  017EF8  1015               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 25000  017EFA  B4D8               	btfsc	status,2,c
 25001  017EFC  0011               	retfie		f
 25002                           
 25003                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 25004  017EFE  D801               	call	i2u1006_48
 25005  017F00  0011               	retfie		f
 25006  017F02                     i2u1006_48:
 25007  017F02  0005               	push	
 25008  017F04  6EFA               	movwf	pclath,c
 25009  017F06  5013               	movf	_UART2_RxInterruptHandler^0,w,c
 25010  017F08  6EFD               	movwf	tosl,c
 25011  017F0A  5014               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 25012  017F0C  6EFE               	movwf	tosh,c
 25013  017F0E  5015               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 25014  017F10  6EFF               	movwf	tosu,c
 25015  017F12  50FA               	movf	pclath,w,c
 25016  017F14  0012               	return		;indir
 25017  017F16                     __end_of_UART2_rx_vect_isr:
 25018                           	opt callstack 0
 25019                           
 25020 ;; *************** function _UART2_Receive_ISR *****************
 25021 ;; Defined at:
 25022 ;;		line 233 in file "mcc_generated_files/uart2.c"
 25023 ;; Parameters:    Size  Location     Type
 25024 ;;		None
 25025 ;; Auto vars:     Size  Location     Type
 25026 ;;		None
 25027 ;; Return value:  Size  Location     Type
 25028 ;;                  1  [STACK] void 
 25029 ;; Registers used:
 25030 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25031 ;; Tracked objects:
 25032 ;;		On entry : 0/0
 25033 ;;		On exit  : 0/0
 25034 ;;		Unchanged: 0/0
 25035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25040 ;;Total ram usage:        0 bytes
 25041 ;; Hardware stack levels used:    1
 25042 ;; This function calls:
 25043 ;;		Nothing
 25044 ;; This function is called by:
 25045 ;;		_UART2_Initialize
 25046 ;;		_UART2_rx_vect_isr
 25047 ;; This function uses a reentrant model
 25048 ;;
 25049                           
 25050                           	psect	text134
 25051  01805A                     __ptext134:
 25052                           	opt callstack 0
 25053  01805A                     _UART2_Receive_ISR:
 25054                           	opt callstack 13
 25055                           
 25056                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 25057                           
 25058                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25059                           ;incstack = 0
 25060  01805A  0E00               	movlw	low _uart2RxBuffer
 25061  01805C  242B               	addwf	_uart2RxHead^0,w,c	;volatile
 25062  01805E  6ED9               	movwf	fsr2l,c
 25063  018060  6ADA               	clrf	fsr2h,c
 25064  018062  0E06               	movlw	high _uart2RxBuffer
 25065  018064  22DA               	addwfc	fsr2h,f,c
 25066  018066  006F F743 FFDF     	movff	15824,indf2	;volatile
 25067  01806C  2A2B               	incf	_uart2RxHead^0,f,c	;volatile
 25068                           
 25069                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 25070  01806E  282B               	incf	_uart2RxHead^0,w,c
 25071  018070  B4D8               	btfsc	status,2,c
 25072                           
 25073                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 25074  018072  6A2B               	clrf	_uart2RxHead^0,c	;volatile
 25075                           
 25076                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 25077  018074  2A29               	incf	_uart2RxCount^0,f,c	;volatile
 25078                           
 25079                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25080  018076  0012               	return		;funcret
 25081  018078                     __end_of_UART2_Receive_ISR:
 25082                           	opt callstack 0
 25083                           
 25084 ;; *************** function _TMR6_ISR *****************
 25085 ;; Defined at:
 25086 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 25087 ;; Parameters:    Size  Location     Type
 25088 ;;		None
 25089 ;; Auto vars:     Size  Location     Type
 25090 ;;		None
 25091 ;; Return value:  Size  Location     Type
 25092 ;;                  1    wreg      void 
 25093 ;; Registers used:
 25094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 25095 ;; Tracked objects:
 25096 ;;		On entry : 0/0
 25097 ;;		On exit  : 0/0
 25098 ;;		Unchanged: 0/0
 25099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25102 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25103 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25104 ;;Total ram usage:        1 bytes
 25105 ;; Hardware stack levels used:    1
 25106 ;; Hardware stack levels required when called:    2
 25107 ;; This function calls:
 25108 ;;		_TMR6_CallBack
 25109 ;; This function is called by:
 25110 ;;		Interrupt level 2
 25111 ;; This function uses a non-reentrant model
 25112 ;;
 25113                           
 25114                           	psect	text135
 25115  0180E4                     __ptext135:
 25116                           	opt callstack 0
 25117  0180E4                     _TMR6_ISR:
 25118                           	opt callstack 12
 25119                           
 25120                           ;incstack = 0
 25121  0180E4  0060  F0D4  F0DE   	movff	btemp,??_TMR6_ISR
 25122  0180EA  EE13  F356         	lfsr	1,___inthi_sp
 25123                           
 25124                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 25125  0180EE  0139               	movlb	57	; () banked
 25126  0180F0  91A9               	bcf	169,0,b	;volatile
 25127                           
 25128                           ; BSR set to: 57
 25129                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 25130  0180F2  ECD1  F0BF         	call	_TMR6_CallBack	;wreg free
 25131  0180F6  0060  F378  F035   	movff	??_TMR6_ISR,btemp
 25132  0180FC  0011               	retfie		f
 25133  0180FE                     __end_of_TMR6_ISR:
 25134                           	opt callstack 0
 25135                           
 25136 ;; *************** function _TMR6_CallBack *****************
 25137 ;; Defined at:
 25138 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 25139 ;; Parameters:    Size  Location     Type
 25140 ;;		None
 25141 ;; Auto vars:     Size  Location     Type
 25142 ;;		None
 25143 ;; Return value:  Size  Location     Type
 25144 ;;                  1  [STACK] void 
 25145 ;; Registers used:
 25146 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 25147 ;; Tracked objects:
 25148 ;;		On entry : 3F/39
 25149 ;;		On exit  : 0/0
 25150 ;;		Unchanged: 0/0
 25151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25156 ;;Total ram usage:        0 bytes
 25157 ;; Hardware stack levels used:    1
 25158 ;; Hardware stack levels required when called:    1
 25159 ;; This function calls:
 25160 ;;		Absolute function
 25161 ;;		_TMR6_DefaultInterruptHandler
 25162 ;; This function is called by:
 25163 ;;		_TMR6_ISR
 25164 ;; This function uses a reentrant model
 25165 ;;
 25166                           
 25167                           	psect	text136
 25168  017FA2                     __ptext136:
 25169                           	opt callstack 0
 25170  017FA2                     _TMR6_CallBack:
 25171                           	opt callstack 12
 25172                           
 25173                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 25174                           
 25175                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25176                           ;incstack = 0
 25177  017FA2  5001               	movf	_TMR6_InterruptHandler^0,w,c
 25178  017FA4  1002               	iorwf	(_TMR6_InterruptHandler+1)^0,w,c
 25179  017FA6  1003               	iorwf	(_TMR6_InterruptHandler+2)^0,w,c
 25180  017FA8  B4D8               	btfsc	status,2,c
 25181  017FAA  0012               	return	
 25182                           
 25183                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 25184  017FAC  D801               	call	u809_48
 25185  017FAE  0012               	return	
 25186  017FB0                     u809_48:
 25187  017FB0  0005               	push	
 25188  017FB2  6EFA               	movwf	pclath,c
 25189  017FB4  5001               	movf	_TMR6_InterruptHandler^0,w,c
 25190  017FB6  6EFD               	movwf	tosl,c
 25191  017FB8  5002               	movf	(_TMR6_InterruptHandler+1)^0,w,c
 25192  017FBA  6EFE               	movwf	tosh,c
 25193  017FBC  5003               	movf	(_TMR6_InterruptHandler+2)^0,w,c
 25194  017FBE  6EFF               	movwf	tosu,c
 25195  017FC0  50FA               	movf	pclath,w,c
 25196  017FC2  0012               	return		;indir
 25197  017FC4                     __end_of_TMR6_CallBack:
 25198                           	opt callstack 0
 25199                           
 25200 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 25201 ;; Defined at:
 25202 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 25203 ;; Parameters:    Size  Location     Type
 25204 ;;		None
 25205 ;; Auto vars:     Size  Location     Type
 25206 ;;  i               1  [STACK] unsigned char 
 25207 ;; Return value:  Size  Location     Type
 25208 ;;                  1  [STACK] void 
 25209 ;; Registers used:
 25210 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 25211 ;; Tracked objects:
 25212 ;;		On entry : 0/39
 25213 ;;		On exit  : 0/0
 25214 ;;		Unchanged: 0/0
 25215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25220 ;;Total ram usage:        0 bytes
 25221 ;; Hardware stack levels used:    1
 25222 ;; This function calls:
 25223 ;;		Nothing
 25224 ;; This function is called by:
 25225 ;;		_TMR6_Initialize
 25226 ;;		_TMR6_CallBack
 25227 ;; This function uses a reentrant model
 25228 ;;
 25229                           
 25230                           	psect	text137
 25231  017860                     __ptext137:
 25232                           	opt callstack 0
 25233  017860                     _TMR6_DefaultInterruptHandler:
 25234                           	opt callstack 0
 25235                           
 25236                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25237  017860  52E6               	movf	postinc1,f,c
 25238                           
 25239                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 25240                           ;stkvar	_i @ sp[(-1)+0]
 25241                           
 25242                           ;incstack = 0
 25243  017862  0EFF               	movlw	-1
 25244  017864  6AE3               	clrf	plusw1,c
 25245  017866                     l8259:
 25246                           
 25247                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 25248                           ;stkvar	_i @ sp[(-1)+0]
 25249  017866  0EFF               	movlw	-1
 25250  017868  50E3               	movf	plusw1,w,c
 25251  01786A  0D02               	mullw	2
 25252  01786C  50F3               	movf	243,w,c
 25253  01786E  0FA3               	addlw	low _tickCount
 25254  017870  6ED9               	movwf	fsr2l,c
 25255  017872  6ADA               	clrf	fsr2h,c
 25256  017874  50DE               	movf	postinc2,w,c
 25257  017876  10DE               	iorwf	postinc2,w,c
 25258  017878  B4D8               	btfsc	status,2,c
 25259  01787A  D00A               	goto	l8263
 25260                           
 25261                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 25262                           ;stkvar	_i @ sp[(-1)+0]
 25263  01787C  0EFF               	movlw	-1
 25264  01787E  50E3               	movf	plusw1,w,c
 25265  017880  0D02               	mullw	2
 25266  017882  50F3               	movf	243,w,c
 25267  017884  0FA3               	addlw	low _tickCount
 25268  017886  6ED9               	movwf	fsr2l,c
 25269  017888  6ADA               	clrf	fsr2h,c
 25270  01788A  06DE               	decf	postinc2,f,c
 25271  01788C  0E00               	movlw	0
 25272  01788E  5ADD               	subwfb	postdec2,f,c
 25273  017890                     l8263:
 25274                           
 25275                           ;mcc_generated_files/tmr6.c: 207:  }
 25276                           ;stkvar	_i @ sp[(-1)+0]
 25277  017890  0EFF               	movlw	-1
 25278  017892  2AE3               	incf	plusw1,f,c
 25279                           
 25280                           ;stkvar	_i @ sp[(-1)+0]
 25281  017894  0EFF               	movlw	-1
 25282  017896  006F FF8C  F035    	movff	plusw1,btemp
 25283  01789C  0E0B               	movlw	11
 25284  01789E  6435               	cpfsgt	btemp^0,c
 25285  0178A0  D7E2               	goto	l8259
 25286                           
 25287                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25288  0178A2  52E5               	movf	postdec1,f,c
 25289  0178A4  0012               	return		;funcret
 25290  0178A6                     __end_of_TMR6_DefaultInterruptHandler:
 25291                           	opt callstack 0
 25292                           
 25293 ;; *************** function _DMA1_DMASCNT_ISR *****************
 25294 ;; Defined at:
 25295 ;;		line 126 in file "mcc_generated_files/dma1.c"
 25296 ;; Parameters:    Size  Location     Type
 25297 ;;		None
 25298 ;; Auto vars:     Size  Location     Type
 25299 ;;		None
 25300 ;; Return value:  Size  Location     Type
 25301 ;;                  1    wreg      void 
 25302 ;; Registers used:
 25303 ;;		None
 25304 ;; Tracked objects:
 25305 ;;		On entry : 0/0
 25306 ;;		On exit  : 3F/0
 25307 ;;		Unchanged: 0/0
 25308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25313 ;;Total ram usage:        0 bytes
 25314 ;; Hardware stack levels used:    1
 25315 ;; This function calls:
 25316 ;;		Nothing
 25317 ;; This function is called by:
 25318 ;;		Interrupt level 2
 25319 ;; This function uses a non-reentrant model
 25320 ;;
 25321                           
 25322                           	psect	text138
 25323  0181E4                     __ptext138:
 25324                           	opt callstack 0
 25325  0181E4                     _DMA1_DMASCNT_ISR:
 25326                           	opt callstack 14
 25327                           
 25328                           ;incstack = 0
 25329  0181E4  EE13  F356         	lfsr	1,___inthi_sp
 25330                           
 25331                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 25332  0181E8  0139               	movlb	57	; () banked
 25333  0181EA  91A2               	bcf	162,0,b	;volatile
 25334                           
 25335                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 25336  0181EC  0100               	movlb	0	; () banked
 25337  0181EE  97BB               	bcf	_spi_link& (0+255),3,b	;volatile
 25338                           
 25339                           ; BSR set to: 0
 25340  0181F0  0011               	retfie		f
 25341  0181F2                     __end_of_DMA1_DMASCNT_ISR:
 25342                           	opt callstack 0
 25343                           
 25344 ;; *************** function _DMA1_DMADCNT_ISR *****************
 25345 ;; Defined at:
 25346 ;;		line 134 in file "mcc_generated_files/dma1.c"
 25347 ;; Parameters:    Size  Location     Type
 25348 ;;		None
 25349 ;; Auto vars:     Size  Location     Type
 25350 ;;		None
 25351 ;; Return value:  Size  Location     Type
 25352 ;;                  1    wreg      void 
 25353 ;; Registers used:
 25354 ;;		None
 25355 ;; Tracked objects:
 25356 ;;		On entry : 0/0
 25357 ;;		On exit  : 3F/39
 25358 ;;		Unchanged: 0/0
 25359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25364 ;;Total ram usage:        0 bytes
 25365 ;; Hardware stack levels used:    1
 25366 ;; This function calls:
 25367 ;;		Nothing
 25368 ;; This function is called by:
 25369 ;;		Interrupt level 2
 25370 ;; This function uses a non-reentrant model
 25371 ;;
 25372                           
 25373                           	psect	text139
 25374  0181FC                     __ptext139:
 25375                           	opt callstack 0
 25376  0181FC                     _DMA1_DMADCNT_ISR:
 25377                           	opt callstack 14
 25378                           
 25379                           ; BSR set to: 0
 25380                           ;incstack = 0
 25381  0181FC  EE13  F356         	lfsr	1,___inthi_sp
 25382                           
 25383                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 25384  018200  0139               	movlb	57	; () banked
 25385  018202  93A2               	bcf	162,1,b	;volatile
 25386                           
 25387                           ; BSR set to: 57
 25388  018204  0011               	retfie		f
 25389  018206                     __end_of_DMA1_DMADCNT_ISR:
 25390                           	opt callstack 0
 25391                           
 25392 ;; *************** function _DMA1_DMAA_ISR *****************
 25393 ;; Defined at:
 25394 ;;		line 144 in file "mcc_generated_files/dma1.c"
 25395 ;; Parameters:    Size  Location     Type
 25396 ;;		None
 25397 ;; Auto vars:     Size  Location     Type
 25398 ;;		None
 25399 ;; Return value:  Size  Location     Type
 25400 ;;                  1    wreg      void 
 25401 ;; Registers used:
 25402 ;;		None
 25403 ;; Tracked objects:
 25404 ;;		On entry : 0/0
 25405 ;;		On exit  : 3F/39
 25406 ;;		Unchanged: 0/0
 25407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25412 ;;Total ram usage:        0 bytes
 25413 ;; Hardware stack levels used:    1
 25414 ;; This function calls:
 25415 ;;		Nothing
 25416 ;; This function is called by:
 25417 ;;		Interrupt level 2
 25418 ;; This function uses a non-reentrant model
 25419 ;;
 25420                           
 25421                           	psect	text140
 25422  018208                     __ptext140:
 25423                           	opt callstack 0
 25424  018208                     _DMA1_DMAA_ISR:
 25425                           	opt callstack 14
 25426                           
 25427                           ; BSR set to: 57
 25428                           ;incstack = 0
 25429  018208  EE13  F356         	lfsr	1,___inthi_sp
 25430                           
 25431                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 25432  01820C  0139               	movlb	57	; () banked
 25433  01820E  97A2               	bcf	162,3,b	;volatile
 25434                           
 25435                           ; BSR set to: 57
 25436  018210  0011               	retfie		f
 25437  018212                     __end_of_DMA1_DMAA_ISR:
 25438                           	opt callstack 0
 25439                           
 25440 ;; *************** function _DMA1_DMAOR_ISR *****************
 25441 ;; Defined at:
 25442 ;;		line 155 in file "mcc_generated_files/dma1.c"
 25443 ;; Parameters:    Size  Location     Type
 25444 ;;		None
 25445 ;; Auto vars:     Size  Location     Type
 25446 ;;		None
 25447 ;; Return value:  Size  Location     Type
 25448 ;;                  1    wreg      void 
 25449 ;; Registers used:
 25450 ;;		None
 25451 ;; Tracked objects:
 25452 ;;		On entry : 0/0
 25453 ;;		On exit  : 3F/39
 25454 ;;		Unchanged: 0/0
 25455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25460 ;;Total ram usage:        0 bytes
 25461 ;; Hardware stack levels used:    1
 25462 ;; This function calls:
 25463 ;;		Nothing
 25464 ;; This function is called by:
 25465 ;;		Interrupt level 2
 25466 ;; This function uses a non-reentrant model
 25467 ;;
 25468                           
 25469                           	psect	text141
 25470  018214                     __ptext141:
 25471                           	opt callstack 0
 25472  018214                     _DMA1_DMAOR_ISR:
 25473                           	opt callstack 14
 25474                           
 25475                           ; BSR set to: 57
 25476                           ;incstack = 0
 25477  018214  EE13  F356         	lfsr	1,___inthi_sp
 25478                           
 25479                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 25480  018218  0139               	movlb	57	; () banked
 25481  01821A  95A2               	bcf	162,2,b	;volatile
 25482                           
 25483                           ; BSR set to: 57
 25484  01821C  0011               	retfie		f
 25485  01821E                     __end_of_DMA1_DMAOR_ISR:
 25486                           	opt callstack 0
 25487                           
 25488                           ;
 25489                           ; Interrupt Vector Table @ 0x8
 25490                           ;
 25491                           
 25492                           	psect	ivt0x8
 25493  000008                     __pivt0x8:
 25494                           	opt callstack 0
 25495  000008                     ivt0x8_base:
 25496                           	opt callstack 0
 25497                           
 25498                           ; Vector 0 : SWINT
 25499  000008  6094               	dw	_Default_ISR shr (0+2)
 25500                           
 25501                           ; Vector 1 : HLVD
 25502  00000A  6094               	dw	_Default_ISR shr (0+2)
 25503                           
 25504                           ; Vector 2 : OSF
 25505  00000C  6094               	dw	_Default_ISR shr (0+2)
 25506                           
 25507                           ; Vector 3 : CSW
 25508  00000E  6094               	dw	_Default_ISR shr (0+2)
 25509                           
 25510                           ; Vector 4 : NVM
 25511  000010  6094               	dw	_Default_ISR shr (0+2)
 25512                           
 25513                           ; Vector 5 : SCAN
 25514  000012  6094               	dw	_Default_ISR shr (0+2)
 25515                           
 25516                           ; Vector 6 : CRC
 25517  000014  6094               	dw	_Default_ISR shr (0+2)
 25518                           
 25519                           ; Vector 7 : IOC
 25520  000016  6094               	dw	_Default_ISR shr (0+2)
 25521                           
 25522                           ; Vector 8 : INT0
 25523  000018  6071               	dw	_INT0_ISR shr (0+2)
 25524                           
 25525                           ; Vector 9 : ZCD
 25526  00001A  6094               	dw	_Default_ISR shr (0+2)
 25527                           
 25528                           ; Vector 10 : AD
 25529  00001C  5E89               	dw	_ADCC_ISR shr (0+2)
 25530                           
 25531                           ; Vector 11 : ADT
 25532  00001E  5CA5               	dw	_ADCC_ThresholdISR shr (0+2)
 25533                           
 25534                           ; Vector 12 : CMP1
 25535  000020  6094               	dw	_Default_ISR shr (0+2)
 25536                           
 25537                           ; Vector 13 : SMT1
 25538  000022  6094               	dw	_Default_ISR shr (0+2)
 25539                           
 25540                           ; Vector 14 : SMT1PRA
 25541  000024  6094               	dw	_Default_ISR shr (0+2)
 25542                           
 25543                           ; Vector 15 : SMT1PRW
 25544  000026  6094               	dw	_Default_ISR shr (0+2)
 25545                           
 25546                           ; Vector 16 : DMA1SCNT
 25547  000028  6079               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 25548                           
 25549                           ; Vector 17 : DMA1DCNT
 25550  00002A  607F               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 25551                           
 25552                           ; Vector 18 : DMA1OR
 25553  00002C  6085               	dw	_DMA1_DMAOR_ISR shr (0+2)
 25554                           
 25555                           ; Vector 19 : DMA1A
 25556  00002E  6082               	dw	_DMA1_DMAA_ISR shr (0+2)
 25557                           
 25558                           ; Vector 20 : SPI1RX
 25559  000030  6094               	dw	_Default_ISR shr (0+2)
 25560                           
 25561                           ; Vector 21 : SPI1TX
 25562  000032  6094               	dw	_Default_ISR shr (0+2)
 25563                           
 25564                           ; Vector 22 : SPI1
 25565  000034  6094               	dw	_Default_ISR shr (0+2)
 25566                           
 25567                           ; Vector 23 : I2C1RX
 25568  000036  6094               	dw	_Default_ISR shr (0+2)
 25569                           
 25570                           ; Vector 24 : I2C1TX
 25571  000038  6094               	dw	_Default_ISR shr (0+2)
 25572                           
 25573                           ; Vector 25 : I2C1
 25574  00003A  6094               	dw	_Default_ISR shr (0+2)
 25575                           
 25576                           ; Vector 26 : I2C1E
 25577  00003C  6094               	dw	_Default_ISR shr (0+2)
 25578                           
 25579                           ; Vector 27 : U1RX
 25580  00003E  5FA8               	dw	_UART1_rx_vect_isr shr (0+2)
 25581                           
 25582                           ; Vector 28 : U1TX
 25583  000040  5F9E               	dw	_UART1_tx_vect_isr shr (0+2)
 25584                           
 25585                           ; Vector 29 : U1E
 25586  000042  6094               	dw	_Default_ISR shr (0+2)
 25587                           
 25588                           ; Vector 30 : U1
 25589  000044  6094               	dw	_Default_ISR shr (0+2)
 25590                           
 25591                           ; Vector 31 : TMR0
 25592  000046  6094               	dw	_Default_ISR shr (0+2)
 25593                           
 25594                           ; Vector 32 : TMR1
 25595  000048  6094               	dw	_Default_ISR shr (0+2)
 25596                           
 25597                           ; Vector 33 : TMR1G
 25598  00004A  6094               	dw	_Default_ISR shr (0+2)
 25599                           
 25600                           ; Vector 34 : TMR2
 25601  00004C  6094               	dw	_Default_ISR shr (0+2)
 25602                           
 25603                           ; Vector 35 : CCP1
 25604  00004E  6094               	dw	_Default_ISR shr (0+2)
 25605                           
 25606                           ; Vector 36 : Undefined
 25607  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 25608                           
 25609                           ; Vector 37 : NCO1
 25610  000052  6094               	dw	_Default_ISR shr (0+2)
 25611                           
 25612                           ; Vector 38 : CWG1
 25613  000054  6094               	dw	_Default_ISR shr (0+2)
 25614                           
 25615                           ; Vector 39 : CLC1
 25616  000056  6094               	dw	_Default_ISR shr (0+2)
 25617                           
 25618                           ; Vector 40 : INT1
 25619  000058  6075               	dw	_INT1_ISR shr (0+2)
 25620                           
 25621                           ; Vector 41 : CMP2
 25622  00005A  6094               	dw	_Default_ISR shr (0+2)
 25623                           
 25624                           ; Vector 42 : DMA2SCNT
 25625  00005C  6094               	dw	_Default_ISR shr (0+2)
 25626                           
 25627                           ; Vector 43 : DMA2DCNT
 25628  00005E  6094               	dw	_Default_ISR shr (0+2)
 25629                           
 25630                           ; Vector 44 : DMA2OR
 25631  000060  6094               	dw	_Default_ISR shr (0+2)
 25632                           
 25633                           ; Vector 45 : DMA2A
 25634  000062  6094               	dw	_Default_ISR shr (0+2)
 25635                           
 25636                           ; Vector 46 : I2C2RX
 25637  000064  6094               	dw	_Default_ISR shr (0+2)
 25638                           
 25639                           ; Vector 47 : I2C2TX
 25640  000066  6094               	dw	_Default_ISR shr (0+2)
 25641                           
 25642                           ; Vector 48 : I2C2
 25643  000068  6094               	dw	_Default_ISR shr (0+2)
 25644                           
 25645                           ; Vector 49 : I2C2E
 25646  00006A  6094               	dw	_Default_ISR shr (0+2)
 25647                           
 25648                           ; Vector 50 : U2RX
 25649  00006C  5FBC               	dw	_UART2_rx_vect_isr shr (0+2)
 25650                           
 25651                           ; Vector 51 : U2TX
 25652  00006E  5FB2               	dw	_UART2_tx_vect_isr shr (0+2)
 25653                           
 25654                           ; Vector 52 : U2E
 25655  000070  6094               	dw	_Default_ISR shr (0+2)
 25656                           
 25657                           ; Vector 53 : U2
 25658  000072  6094               	dw	_Default_ISR shr (0+2)
 25659                           
 25660                           ; Vector 54 : TMR3
 25661  000074  6094               	dw	_Default_ISR shr (0+2)
 25662                           
 25663                           ; Vector 55 : TMR3G
 25664  000076  6094               	dw	_Default_ISR shr (0+2)
 25665                           
 25666                           ; Vector 56 : TMR4
 25667  000078  6094               	dw	_Default_ISR shr (0+2)
 25668                           
 25669                           ; Vector 57 : CCP2
 25670  00007A  6094               	dw	_Default_ISR shr (0+2)
 25671                           
 25672                           ; Vector 58 : Undefined
 25673  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 25674                           
 25675                           ; Vector 59 : CWG2
 25676  00007E  6094               	dw	_Default_ISR shr (0+2)
 25677                           
 25678                           ; Vector 60 : CLC2
 25679  000080  6094               	dw	_Default_ISR shr (0+2)
 25680                           
 25681                           ; Vector 61 : INT2
 25682  000082  6094               	dw	_Default_ISR shr (0+2)
 25683                           
 25684                           ; Vector 62 : Undefined
 25685  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 25686                           
 25687                           ; Vector 63 : Undefined
 25688  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 25689                           
 25690                           ; Vector 64 : Undefined
 25691  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 25692                           
 25693                           ; Vector 65 : Undefined
 25694  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 25695                           
 25696                           ; Vector 66 : Undefined
 25697  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 25698                           
 25699                           ; Vector 67 : Undefined
 25700  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 25701                           
 25702                           ; Vector 68 : Undefined
 25703  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 25704                           
 25705                           ; Vector 69 : Undefined
 25706  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 25707                           
 25708                           ; Vector 70 : TMR5
 25709  000094  5D53               	dw	_TMR5_ISR shr (0+2)
 25710                           
 25711                           ; Vector 71 : TMR5G
 25712  000096  6094               	dw	_Default_ISR shr (0+2)
 25713                           
 25714                           ; Vector 72 : TMR6
 25715  000098  6039               	dw	_TMR6_ISR shr (0+2)
 25716                           
 25717                           ; Vector 73 : CCP3
 25718  00009A  6094               	dw	_Default_ISR shr (0+2)
 25719                           
 25720                           ; Vector 74 : CWG3
 25721  00009C  6094               	dw	_Default_ISR shr (0+2)
 25722                           
 25723                           ; Vector 75 : CLC3
 25724  00009E  6094               	dw	_Default_ISR shr (0+2)
 25725                           
 25726                           ; Vector 76 : Undefined
 25727  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 25728                           
 25729                           ; Vector 77 : Undefined
 25730  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 25731                           
 25732                           ; Vector 78 : Undefined
 25733  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 25734                           
 25735                           ; Vector 79 : Undefined
 25736  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 25737                           
 25738                           ; Vector 80 : CCP4
 25739  0000A8  6094               	dw	_Default_ISR shr (0+2)
 25740                           
 25741                           ; Vector 81 : CLC4
 25742  0000AA  6094               	dw	_Default_ISR shr (0+2)
 25743  0000AC                     ivt0x8_undefint:
 25744                           	opt callstack 0
 25745  0000AC  00FF               	reset	
 25746                           
 25747                           	psect	text142
 25748  000000                     __ptext142:
 25749                           	opt callstack 0
 25750                           
 25751                           	psect	param0
 25752  0000                     
 25753                           	psect	temp
 25754  000035                     btemp:
 25755                           	opt callstack 0
 25756  000035                     	ds	32
 25757  0000                     wtemp0	set	btemp
 25758  0000                     wtemp1	set	btemp+2
 25759  0000                     wtemp2	set	btemp+4
 25760  0000                     wtemp3	set	btemp+6
 25761  0000                     wtemp4	set	btemp+8
 25762  0000                     wtemp5	set	btemp+10
 25763  0000                     wtemp8	set	btemp+1
 25764  0000                     ttemp0	set	btemp
 25765  0000                     ttemp1	set	btemp+3
 25766  0000                     ttemp2	set	btemp+6
 25767  0000                     ttemp3	set	btemp+9
 25768  0000                     ttemp5	set	btemp+1
 25769  0000                     ttemp6	set	btemp+4
 25770  0000                     ttemp7	set	btemp+8
 25771  0000                     ltemp0	set	btemp
 25772  0000                     ltemp1	set	btemp+4
 25773  0000                     ltemp2	set	btemp+8
 25774  0000                     lltemp0	set	btemp
 25775  0000                     lltemp1	set	btemp+8
 25776  0000                     lltemp2	set	btemp+16
 25777  0000                     lltemp3	set	btemp+24
 25778                           tosu	equ	0x3FFF
 25779                           tosh	equ	0x3FFE
 25780                           tosl	equ	0x3FFD
 25781                           stkptr	equ	0x3FFC
 25782                           pclatu	equ	0x3FFB
 25783                           pclath	equ	0x3FFA
 25784                           pcl	equ	0x3FF9
 25785                           tblptru	equ	0x3FF8
 25786                           tblptrh	equ	0x3FF7
 25787                           tblptrl	equ	0x3FF6
 25788                           tablat	equ	0x3FF5
 25789                           prodh	equ	0x3FF4
 25790                           prodl	equ	0x3FF3
 25791                           indf0	equ	0x3FEF
 25792                           postinc0	equ	0x3FEE
 25793                           postdec0	equ	0x3FED
 25794                           preinc0	equ	0x3FEC
 25795                           plusw0	equ	0x3FEB
 25796                           fsr0h	equ	0x3FEA
 25797                           fsr0l	equ	0x3FE9
 25798                           wreg	equ	0x3FE8
 25799                           indf1	equ	0x3FE7
 25800                           postinc1	equ	0x3FE6
 25801                           postdec1	equ	0x3FE5
 25802                           preinc1	equ	0x3FE4
 25803                           plusw1	equ	0x3FE3
 25804                           fsr1h	equ	0x3FE2
 25805                           fsr1l	equ	0x3FE1
 25806                           bsr	equ	0x3FE0
 25807                           indf2	equ	0x3FDF
 25808                           postinc2	equ	0x3FDE
 25809                           postdec2	equ	0x3FDD
 25810                           preinc2	equ	0x3FDC
 25811                           plusw2	equ	0x3FDB
 25812                           fsr2h	equ	0x3FDA
 25813                           fsr2l	equ	0x3FD9
 25814                           status	equ	0x3FD8


Data Sizes:
    Strings     252
    Constant    144
    Data        238
    BSS         1353
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      6      58
    BANK0           160      5     131
    BANK1           256      0     251
    BANK2           256      0     236
    BANK3           256      0     198
    BANK4           256      0     218
    BANK5           256      0     255
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_32(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_43(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_43(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_15(CODE[9]), STR_14(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), 
		 -> T(CODE[144]), STR_7(CODE[4]), STR_3(CODE[4]), V(BANK1[171]), 

    a	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_15(CODE[9]), STR_14(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), 
		 -> T(CODE[144]), STR_7(CODE[4]), STR_3(CODE[4]), V(BANK1[171]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_38(CODE[4]), STR_37(CODE[4]), STR_34(CODE[4]), STR_33(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_38(CODE[4]), STR_37(CODE[4]), STR_34(CODE[4]), STR_33(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[24]), STR_22(CODE[15]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK1[171]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK1[171]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S4666_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK4[218]), V(BANK1[171]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK4[218]), V(BANK1[171]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[24]), STR_22(CODE[15]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[13]), 
		 -> STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[24]), STR_22(CODE[15]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[13]), 
		 -> STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[24]), STR_22(CODE[15]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[13]), 
		 -> STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_15(CODE[9]), STR_14(CODE[12]), 
		 -> D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), STR_7(CODE[4]), 
		 -> STR_3(CODE[4]), V(BANK1[171]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_15(CODE[9]), STR_14(CODE[12]), 
		 -> D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), STR_7(CODE[4]), 
		 -> STR_3(CODE[4]), V(BANK1[171]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_15(CODE[9]), 
		 -> STR_14(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), 
		 -> STR_7(CODE[4]), STR_3(CODE[4]), V(BANK1[171]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_15(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_14(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK1[171]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK1[171]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1930spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1930spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  291125
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                     _check_adc_scan
                         _check_help
                     _clear_adc_scan
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                      _get_vterm_ptr
                       _init_display
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   27976
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10886
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5116
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (1) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           1     0      1  166935
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   83221
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    10     10   26923
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   56386
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   56122
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   27945
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   28084
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   26698
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   26569
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   26237
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     338
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     135
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     229
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             12     4      8    1962
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      45
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             21    13      8    1445
 ---------------------------------------------------------------------------------
 (8) ___flge                                               8     0      8     182
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8      90
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             21    13      8    1099
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     296
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     300
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                              1 BANK0      4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ISR                                            1     1      0       0
                                              0 COMRAM     1     1      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   5     5      0      22
                                              1 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_t_handler                                   0     0      0      22
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR6_ISR                                            1     1      0      90
                                              0 BANK0      1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (18) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _check_adc_scan
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_vterm_ptr
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      DA      13       85.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      EC       9       92.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FB       7       98.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      5      83       5       81.9%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      6      3A       1       92.1%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     642      58        0.0%
DATA                 0      0     642       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Nov  8 17:09:20 2019

                    _SPI1_Exchange8bit 7FC4               __end_of_set_display_info 801E  
                                    _C 0200                                      _D 0400  
                                    _R 0060                                      _T FE73  
                                    _V 0100       __end_of_TMR5_SetInterruptHandler 7DD8  
                          __CFG_CP$OFF 000000                __size_of_ringBufS_flush 0092  
               __end_of_FVR_Initialize 823E                            __CFG_LVP$ON 000000  
                                  l171 816A                                    l701 7C40  
                                  l581 7C14                                    l835 7FD2  
                                  _GIE 01FE97                                    _abs 778E  
                                  _pad 63AE                __size_of_PMD_Initialize 0014  
                      _TMR2_Initialize 8116                                    prod 003FF3  
                                  tosl 003FFD                                    wreg 003FE8  
                        _INT0_CallBack 7F5E                     _UART1_Transmit_ISR 7BEE  
                        __CFG_BBEN$OFF 000000                          _INT1_CallBack 7F80  
                         __CFG_ZCD$OFF 000000                                   l1028 79AA  
                                 l1240 3F6E                                   l1326 75B2  
                                 l2233 6A18                                   l1249 411A  
                                 l2244 5EEC                                   l2237 5E18  
                                 l1542 7A08                                   l1462 6B70  
                                 l2511 2D5E                                   l2271 5D8A  
                                 l1551 53A0                                   l1481 7A74  
                                 l1466 6F20                                   l2523 2BEE  
                                 l1555 54FC                                   l1740 640A  
                                 l1559 65CC                                   l1760 33C0  
                                 l1840 0B1A                                   l2632 56FA  
                                 l6001 2778                                   l1825 066A  
                                 l1649 3B6A                                   l2556 32D8  
                                 l2804 58C2                                   l6101 2B78  
                                 l1685 5A82                   _ADCC_StartConversion 8184  
                                 l1599 801A                                   l2663 77CE  
                                 l6111 2BD2                                   l6103 2B9E  
                                 l6007 279A                                   l2655 5C18  
                                 l2592 25A2                                   l2832 70BA  
                                 l6121 2C22                                   l6051 296A  
                                 l2819 713E                                   l1796 123A  
                                 l6125 2C2E                                   l6053 297C  
                                 l6061 29B6                                   l6037 28D8  
                                 l6221 5BB6                                   l1949 1D78  
                                 l2694 50A4                                   l2758 628C  
                                 l1878 49E6                                   l6207 77BE  
                                 l6151 2CBA                                   l6135 2C56  
                                 l6119 2C10                                   l6047 294A  
                                 l6231 5C10                                   l6321 4C1C  
                                 l6401 2DBE                                   l6161 2CE6  
                                 l6081 2A64                                   l6057 2986  
                                 l6225 5BBA                                   l6305 70AA  
                                 l6411 2E14                                   l6139 2C5C  
                                 l1899 3BB4                                   l6333 4CB6  
                                 l6421 2E9C                                   l6413 2E44  
                                 l6173 2D3E                                   l6165 2CFE  
                                 l6085 2A6E                                   l6327 4C70  
                                 l6511 31A4                                   l6431 2EF2  
                                 l6407 2DFE                                   l6167 2D0E  
                                 l6079 2A52                                   l6263 43C2  
                                 l6345 4D88                                   l6521 3218  
                                 l6433 2F22                                   l6089 2AA0  
                                 l6249 712E                                   l7411 4E76  
                                 l6507 319E                                   l6427 2EDC  
                                 l6283 4578                                   l6381 5240  
                                 l6373 5194                                   l6365 510C  
                                 l9021 33FA                                   l9013 33B0  
                                 l6541 32BC                                   l6533 3284  
                                 l6453 2FB4                                   l6445 2F9A  
                                 l6277 44E0                                   l7431 4F90  
                                 l6527 3254                                   l6471 307A  
                                 l6463 3044                                   l6439 2F60  
                                 l6287 45E6                                   l6279 4530  
                                 l9103 01EA                                   l9111 0258  
                                 l7425 4F16                                   l7409 4E54  
                                 l9025 3418                                   l6473 308C  
                                 l6481 30E4                                   l9201 06F0  
                                 l9121 02FC                                   l9105 0216  
                                 l8401 3A9C                                   l7435 4FF8  
                                 l7427 4F2E                                   l7419 4EEA  
                                 l9035 362A                                   l6731 5F50  
                                 l6539 32AC                                   l6803 69E2  
                                 l6651 23B2                                   l6563 1E18  
                                 l9107 022C                                   l7445 5094  
                                 l7429 4F52                                   l6725 5F30  
                                 l6493 312E                                   l6821 5E66  
                                 l6645 2396                                   l6581 1EE6  
                                 l6565 1E1E                                   l6557 1DD8  
                                 l9141 0406                                   l7461 578C  
                                 l8263 7890                                   l8335 7A1E  
                                 l9055 36DC                                   l6719 5F1A  
                                 l6487 3112                                   l6479 30E0  
                                 l6807 6A16                                   l6815 5DD6  
                                 l6655 23D8                                   l6583 1EEC  
                                 l6575 1EA6                                   l6567 1E4E  
                                 l9303 0F3A                                   l9231 0A48  
                                 l9207 077A                                   l9143 0470  
                                 l7463 57F8                                   l8407 3B38  
                                 l8415 3B4A                                   l8431 5904  
                                 l5937 6CEC                                   l6753 602A  
                                 l6745 5FF6                                   l6497 3154  
                                 l6833 5EEA                                   l6825 5EB4  
                                 l6665 2422                                   l6593 1F3E  
                                 l6585 1F1C                                   l6841 771E  
                                 l9241 0B34                                   l9217 0926  
                                 l9137 0396                                   l9129 032A  
                                 l9073 00AC                                   l8259 7866  
                                 l8515 7C3C                                   l7731 7F32  
                                 l5939 6D0E                                   l9059 3718  
                                 l6683 24E2                                   l5971 2642  
                                 l6851 5C74                                   l9171 0594  
                                 l9163 057C                                   l9147 04D2  
                                 l7811 7A7E                                   l8443 5948  
                                 l8541 7992                                   l6773 62E0  
                                 l6765 62B6                                   l6669 2428  
                                 l5965 2602                                   l9317 0FD6  
                                 l9181 0602                                   l9165 058E  
                                 l9085 00F0                                   l9093 0146  
                                 l9413 4B7A                                   l9405 4B12  
                                 l6791 6394                                   l6783 6360  
                                 l6679 249C                                   l5983 26C0  
                                 l5975 2658                                   l9319 0FF0  
                                 l9255 0C32                                   l9239 0B12  
                                 l9159 0554                                   l9511 1360  
                                 l8375 3792                                   l8439 5930  
                                 l6769 62C8                                   l6697 2550  
                                 l6689 250C                                   l5977 2688  
                                 l9329 1092                                   l9409 4B3E  
                                 l9433 3BDE                                   l9513 1376  
                                 l8385 38D2                                   l8641 714E  
                                 l8707 6E46                                   l6699 256A  
                                 l5995 2732                                   l6875 5D22  
                                 l6867 5CF6                                   l9355 119A  
                                 l9339 10E2                                   l9267 0CBA  
                                 l9275 0D24                                   l9283 0D90  
                                 l9291 0EA2                                   l9179 05F6  
                                 l9427 3BA4                                   l9531 14A8  
                                 l8493 7C10                                   l5989 26F2  
                                 l6877 5D38                                   l6869 5D12  
                                 l9197 06B8                                   l9605 1A7C  
                                 l9533 14E2                                   l9509 1326  
                                 l9701 6BE2                                   l7861 55DA  
                                 l8397 3A00                                   l8389 39CE  
                                 l6895 76F0                                   l6799 69A0  
                                 l5999 2748                                   l9391 4A1C  
                                 l9375 4968                                   l9463 3D70  
                                 l9447 3C7A                                   l9439 3C1A  
                                 l9471 3DF6                                   l9615 1B2A  
                                 l9551 165C                                   l9535 14F8  
                                 l7871 5644                                   l7863 55F8  
                                 l9561 16F2                                   l7881 5678  
                                 l7873 565A                                   l7857 55B6  
                                 l7849 554A                                   l9395 4A58  
                                 l9635 1D00                                   l7891 56DA  
                                 l7859 55C4                                   l9629 1CA6  
                                 l9581 18E8                                   l9573 1830  
                                 l9645 1D24                                   l9901 5370  
                                 l7869 5626                                   l8951 6D78  
                                 l9399 4A88                                   l9487 3EE0  
                                 l9639 1D04                                   l9751 6C78  
                                 l8961 63DA                                   l9585 191C  
                                 l9673 4766                                   l9913 5498  
                                 l8699 6E34                                   l8939 61A2  
                                 l8955 6DB6                                   l8971 6450  
                                 l9667 46A8                                   l8965 6402  
                                 l8981 680C                                   l8975 649A  
                                 l8967 6414                                   l9687 487E  
                                 l9679 47D0                                   STR_1 FF76  
                                 STR_2 FFA7                                   l9785 64E4  
                                 STR_3 FFF2                                   STR_4 FF65  
                                 l8987 6FD6                                   l9699 6BA2  
                                 STR_5 FF87                                   STR_6 FFA7  
                                 l8989 7002                                   l9981 3F50  
                                 STR_7 FFF2                                   STR_8 FF54  
                                 l9983 3F58                                   STR_9 FFB6  
                                 l9987 3F76                                   l9989 3F88  
                                 _LATA 003FBA                                   _LATB 003FBB  
                                 _LATC 003FBC                                   _LATD 003FBD  
                                 _LATE 003FBE                                   _LATF 003FBF  
                                 _T2PR 003FAB                                   u5100 7068  
                                 u5030 4486                                   u5110 706A  
                                 u5015 43E0                                   u4320 6D3C  
                                 u5200 4CB0                                   u6000 6A12  
                                 u5016 43E6                                   u5017 43F4  
                                 u5130 7BB4                                   u5210 4CE2  
                                 u5050 455E                                   u5035 447C  
                                 u5140 7BB6                                   u5300 515C  
                                 u5230 4DC0                                   u5310 518E  
                                 u4510 29AE                                   u4350 7B84  
                                 u4327 6D2E                                   u5055 4554  
                                 u5160 4C16                                   u5320 51C0  
                                 u4520 29CE                                   u4360 7B86  
                                 u5080 78DE                                   u5250 4E12  
                                 u5090 78E0                                   _T6PR 003F93  
                                 u4515 299E                                   u5180 4C6C  
                                 u5340 5278                                   u5500 310C  
                                 u6060 771A                                   u4620 2BC0  
                                 u4460 28FE                                   u6140 5D40  
                                 _PMD0 0039C0                                   _PMD1 0039C1  
                                 u4470 291E                                   u6070 5C54  
                                 _PMD2 0039C2                                   u5191 4C76  
                                 u4471 2918                                   _PMD3 0039C3  
                                 u7200 503E                                   u5360 52CA  
                                 u5280 5106                                   u5600 3268  
                                 u4720 2CAA                                   u6160 5D6A  
                                 u6080 5C68                                   u4800 7B56  
                                 _PMD4 0039C4                                   _PMD5 0039C5  
                                 u6170 76CC                                   u7210 5040  
                                 u6090 5CA2                                   _PMD6 0039C6  
                                 u6075 5C4A                                   _PMD7 0039C7  
                                 u6180 76EC                                   u5540 3196  
                                 u4660 2C34                                   u4580 2A96  
                                 u4725 2C9A                                   u4750 2CCA  
                                 u4910 5C08                                   u6095 5C98  
                                 u5800 2476                                   u4680 2C4E  
                                 u4488 2920                                   u4920 5C0A  
                                 u9000 0648                                   u5705 20C0  
                                 u4585 2A86                                   u4905 5BEA  
                                 u4850 77A2                                   u5810 24B0  
                                 u5715 2188                                   u7180 4EE6  
                                 u5580 31F2                                   u5820 24F6  
                                 u4860 5B3A                                   u5805 2466  
                                 u5725 2350                                   u5590 322C  
                                 u4950 70EC                                   u4790 7B54  
                                 u5760 241A                                   u4960 70EE  
                                 u7280 5884                                   u5585 31E2  
                                 u4865 5B30                                   u5690 1F2C  
                                 u8500 6212                                   u5940 630C  
                                 u4980 435A                                   u5870 5F7C  
                                 u4990 43A6                                   u9230 10B8  
                                 u9070 0A18                                   u8600 3312  
                                 u5960 6380                                   u4985 4350  
                                 u8610 3314                                   u5890 6016  
                                 u9250 116E                                   u9170 0EE4  
                                 u9330 4A7E                                   u8700 3684  
                                 u9260 1170                                   u9340 4AC4  
                                 u9500 3E12                                   u9420 3C72  
                                 u7740 566E                                   u7805 733E  
                                 u8701 3682                                   u7806 7340  
                                 u8710 3698                                   u8630 3384  
                                 u9430 3CC6                                   u9511 3E42  
                                 u8480 6196                                   u8720 369C  
                                 u8560 6886                                   u9520 3E58  
                                 u9440 3CC8                                   u9600 13C0  
                                 u7665 795E                                   u9521 3E56  
                                 u8650 3396                                   u8810 0194  
                                 u9370 4BA0                                   u9530 3E6C  
                                 u9610 13E6                                   u7914 377C  
                                 u9347 4AB6                                   u7915 3776  
                                 u7780 730A                                   u8740 36B2  
                                 u8900 050E                                   u8820 0196  
                                 u9540 3E70                                   u9460 3D26  
                                 u8670 33E6                                   u9470 3D28  
                                 u9390 3B8A                                   u9710 1746  
                                 u7934 37AC                                   u8567 6878  
                                 u7935 37A6                                   u8680 363E  
                                 u9640 1540                                   u8930 0562  
                                 u8850 02A6                                   u9490 3DF2  
                                 u9650 1542                                   u7954 37CE  
                                 _PLLR 01CEE0                                   u8691 366E  
                                 u7955 37C8                                   u8860 02A8  
                                 u8780 00DA                                   u9740 19D6  
                                 u9660 1568                                   u7798 730C  
                                 u9750 19D8                                   u9590 13BE  
                                 u7974 39E8                                   u7990 58E2  
                                 u9495 3DD4                                   u7975 39E2  
                                 u8960 05C6                                   u9850 48F2  
                                 u9790 1B7E                                   u9880 6C58  
                                 u9970 54E8                                   u9980 54EA  
                                 _WPUA 003A41                                   _WPUB 003A51  
                                 _WPUC 003A61                                   _WPUD 003A71  
                                 _WPUE 003A81                                   _WPUF 003A91  
                     __end_of_ADCC_ISR 7A5C                          __CFG_FCMEN$ON 000000  
                                 _dbuf 01AB                                   _atoi 4E3A  
                                 _ctoa 6FB8                                   _main 3F2A  
                                 _dtoa 32E2                                   _nanf 742A  
                                 _seed 00D6                                   _prec 0020  
                                 _nout 001C                                   fsr0h 003FEA  
                                 fsr1h 003FE2                                   indf0 003FEF  
                                 fsr2h 003FDA                                   fsr0l 003FE9  
                                 indf1 003FE7                                   indf2 003FDF  
                                 fsr1l 003FE1                                   fsr2l 003FD9  
                                 _stoa 48FC                                   btemp 0035  
                                 _xtoa 3B70                 __end_of_check_adc_scan 8236  
                        ___fpclassifyf 5A8C                                   prodh 003FF4  
                                 prodl 003FF3                                   start 00AE  
                      _timer5ReloadVal 0026              __end_of_SPI1_Exchange8bit 7FE2  
                        __CFG_CSWEN$ON 000000                      _UART1_rx_vect_isr 7EA0  
                         ___param_bank 000000                     ?_UART1_rx_vect_isr 0055  
                     __end_of_INT0_ISR 81D2                       __end_of_INT1_ISR 81E2  
       __size_of_OSCILLATOR_Initialize 0016               __end_of_ringBufS_put_dma 6B78  
        __end_of_OSCILLATOR_Initialize 8170                                  l10031 4146  
                                l10051 419E                                  l10043 417A  
                                l10029 411E                                  l10071 4292  
                                l10059 425E                                  PRLOCK 0039EF  
                      __end_of___aodiv 4E3A                                  _ADCAP 003EF5  
                                _ADACT 003EFE                        __end_of___fladd 2D68  
                                _ADCLK 003EFF                        __end_of___aomod 52EE  
                                _ADPCH 003EF1                        __end_of___fldiv 32E2  
                                _ADREF 003EFD                        __end_of___awdiv 6044  
                      __end_of___flneg 7748                                  STR_10 FFB6  
                                STR_11 FFFC                                  STR_12 FFF9  
                                STR_20 FF98                                  STR_21 FF98  
                                STR_22 FF98                                  STR_14 FFC3  
                                STR_15 FFD9                                  STR_23 FF03  
                                STR_32 FF2D                                  STR_16 FF2E  
                                STR_17 FF2E                                  STR_41 FFF6  
                                STR_33 FFE2                                  STR_25 FF41  
                        __CFG_WDTE$OFF 000000                                  STR_34 FFEA  
                                STR_18 FFCF                                  STR_26 FF1B  
                                STR_19 FFCF                                  STR_43 FFF6  
                      __end_of___awmod 63AE                                  STR_37 FFE6  
                                STR_38 FFEE                                  _ADRPT 003EEC  
                      __end_of___flmul 25AC                        __end_of___flsub 778E  
                      __end_of___fltol 5D94                                  _U1P1H 003DED  
                                _U1P2H 003DEF                                  _U1P1L 003DEC  
                                _U1P3H 003DF1                                  _T2CON 003FAC  
                                _U1P2L 003DEE                                  _U1P3L 003DF0  
                                _U2P1L 003DD4                                  _U2P2L 003DD6  
                                _U2P3L 003DD8                                  _T5CLK 003F9D  
                                _T2HLT 003FAD                                  _T5CON 003F9A  
                                _T6CON 003F94                         __CFG_DEBUG$OFF 000000  
                                _T6HLT 003F95             _ADCC_ADTI_InterruptHandler 0004  
                                _T2TMR 003FAA                                  _U1UIR 003DF8  
                                _T2RST 003FAF                                  _U1RXB 003DE8  
                                _U2UIR 003DE0                                  _U1TXB 003DEA  
                                _U2RXB 003DD0                                  _U2TXB 003DD2  
                                _T6TMR 003F92                                  _T6RST 003F97  
                  ??_UART1_rx_vect_isr 00DE                                  _ISRPR 0039F1  
                                _OSCEN 0039DD                                  _TMR5H 003F99  
                                _TMR5L 003F98                                  _TRISA 003FC2  
                                _TRISB 003FC3                                  _TRISC 003FC4  
                                _TRISD 003FC5                                  _TRISE 003FC6  
                                _TRISF 003FC7                            _Default_ISR 8250  
              __size_of_clear_adc_scan 0006      __size_of_TMR6_SetInterruptHandler 0028  
                    _UART1_tx_vect_isr 7E78                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                          __CFG_WRTD$OFF 000000  
                     __end_of_TMR5_ISR 75A8                           _DMA1CON0bits 003BFC  
                     __end_of_TMR6_ISR 80FE                           _DMA1CON1bits 003BFD  
                                _flags 0022                                  _fputc 6172  
           __size_of_send_lcd_cmd_long 0028                        __end_of_isalpha 78EA  
                                _fputs 6D68                        __end_of_isdigit 7BC0  
                   __CFG_MCLRE$EXTMCLR 000000                     ?_UART1_tx_vect_isr 0055  
                                _srand 7AC8                                  _width 001E  
                                _putch 80B0                        __end_of_islower 7B60  
                      __end_of_isspace 7700               _INT1_SetInterruptHandler 7DD8  
                      __end_of_isupper 7B90                                  pclath 003FFA  
                                tablat 003FF5                                  ltemp0 0035  
                                ltemp1 0039                                  ltemp2 003D  
             __size_of_DMA1_Initialize 006A                                  plusw1 003FE3  
                                plusw2 003FDB                                  ttemp0 0035  
                                ttemp1 0038                                  ttemp2 003B  
                                ttemp3 003E                                  ttemp5 0036  
                                ttemp6 0039                                  ttemp7 003D  
                                status 003FD8    __end_of_UART1_SetRxInterruptHandler 7D88  
          _UART1_SetRxInterruptHandler 7D60                                  wtemp0 0035  
                                wtemp1 0037                                  wtemp2 0039  
                                wtemp3 003B                                  wtemp4 003D  
                                wtemp5 003F                                  wtemp8 0036  
                      __end_of_sprintf 66DA                        __end_of_tolower 7148  
                      __end_of_strncmp 58CC                        __end_of_toupper 70C4  
                  ??_UART1_tx_vect_isr 00DE              __size_of_DMA1_DMADCNT_ISR 000A  
            __end_of_UART1_rx_vect_isr 7EC6               __size_of_SPI1_Initialize 0016  
                      _TMR5_Initialize 781A                  __end_of_ringBufS_init 7CE8  
                      __initialization 6898                      _UART2_rx_vect_isr 7EF0  
                         __end_of_atoi 50AE                           __end_of_ctoa 7040  
                         __end_of_main 42A4                           __end_of_dtoa 3762  
                         __end_of_nanf 748C                           __end_of_stoa 4BBA  
                         __end_of_xtoa 3F2A                         __CFG_SAFEN$OFF 000000  
                   ?_UART2_rx_vect_isr 0055                __end_of_TMR2_Initialize 812E  
             __size_of_DMA2_Initialize 005A               _TMR5_SetInterruptHandler 7DB0  
                        __activetblptr 000003              __size_of_DMA1_DMASCNT_ISR 000E  
 __size_of_UART1_SetTxInterruptHandler 0028                    ??_UART2_rx_vect_isr 00DE  
            __end_of_UART1_tx_vect_isr 7E9E                                 INTCON0 003FD2  
 __size_of_UART2_SetRxInterruptHandler 0028                         __CFG_MVECEN$ON 000000  
                      _TMR6_Initialize 7C46                        _PWM8_Initialize 8144  
                     _UART1_Initialize 73C6                      _UART2_tx_vect_isr 7EC8  
                   _UART2_Transmit_ISR 7C1A                                 _ADACCU 003EEA  
                               _ADACQH 003EF4                                 _ADACQL 003EF3  
                               _ADCON0 003EF8                                 _ADCON1 003EF9  
                               _ADCON2 003EFA                                 _ADCON3 003EFB  
                       _start_adc_scan 7362                                 _ADLTHH 003EDF  
                               _ADLTHL 003EDE                                 _ADPREH 003EF7  
                               _ADPREL 003EF6                                 _DMA1PR 0039F3  
                               _DMA2PR 0039F4                                 _ADSTAT 003EFC  
                               _ADUTHH 003EE1                                 _ADUTHL 003EE0  
                   _PWM8_LoadDutyValue 792E                                 _ANSELA 003A40  
                               _ANSELB 003A50                                 _ANSELC 003A60  
                               _ANSELD 003A70                                 _ANSELE 003A80  
                               _ANSELF 003A90                     ?_UART2_tx_vect_isr 0055  
                               _U1CON0 003DF2                                 _U1CON1 003DF3  
                               _U1CON2 003DF4                                 _U1BRGH 003DF6  
                               _U1FIFO 003DF7                                 _U2CON0 003DDA  
                               _U2CON1 003DDB                                 _U1BRGL 003DF5  
                               _U2CON2 003DDC                                 _U2BRGH 003DDE  
                               _U2FIFO 003DDF                                 _U2BRGL 003DDD  
                               _T5GATE 003F9C                                 _T5GCON 003F9B  
                               _MAINPR 0039F2                                 _RC3PPS 003A13  
                               _RD1PPS 003A19                                 _RB6PPS 003A0E  
                               i1l1045 759A                                 _RC5PPS 003A15  
                               _ODCONA 003A42                                 _ODCONB 003A52  
                               _ODCONC 003A62                                 _RC6PPS 003A16  
                               _ODCOND 003A72                                 _ODCONE 003A82  
                               _ODCONF 003A92                         __CFG_WDTCCS$SC 000000  
                               u401_40 8026                                 u401_46 8028  
                               _FVRCON 003EC1                       _mode_lamp_bright 81B4  
                               _SCANPR 0039F7                                 _IVTADH 00389E  
                               _IVTADL 00389D                                 _IVTADU 00389F  
         __size_of_eaDogM_WriteCommand 000E                                 u377_48 7F6C  
                               u379_48 7F8E                                 _OSCFRQ 0039DF  
                               u812_28 7F4A                                 u824_44 6E66  
                               u824_45 6E60                                 u809_48 7FB0  
                               u826_40 6E82                                 u826_46 6E84  
                               u784_20 80D2                                 u784_26 80D4  
                     __end_of___xxtofl 5704               __end_of_send_lcd_cmd_dma 76AE  
                  ??_UART2_tx_vect_isr 00DE              __end_of_UART2_rx_vect_isr 7F16  
           __size_of_SPI1_Exchange8bit 001E                 __size_of_DMA1_DMAA_ISR 000A  
                       __CFG_XINST$OFF 000000                      _CLKREF_Initialize 81F2  
                     _UART2_Initialize 74EE                                 _WaitMs 7A5C  
                      _conv_raw_result 3762                           _CCPTMRS1bits 003F5F  
 __size_of_ADCC_SetADIInterruptHandler 0028                                 ___flge 5D94  
                               ___fleq 695E                      _ADCC_ThresholdISR 7294  
                       __CFG_STVREN$ON 000000                         _ringBufS_flush 6E96  
                               _efgtoa 0000                                 _floorf 42A4  
                   ?_ADCC_ThresholdISR 0055                                 _memset 4610  
                 __size_of_help_button 0038                                 clear_0 68E4  
                               clear_1 68F8                                 clear_2 690A  
                               clear_3 6916                                 clear_4 6922  
                               clear_5 692E                                 clear_6 693A  
                               clear_7 6946                                 _printf 748C  
                   _eaDogM_WriteString 6C20                                 _strcpy 67C4  
                            ?_ADCC_ISR 0055                                 _strlen 6CC6  
                   __size_of_TimerDone 0024                        _ADCC_Initialize 722C  
                       _PMD_Initialize 8170              __end_of_UART2_tx_vect_isr 7EEE  
                               lltemp0 0035                                 lltemp1 003D  
                               lltemp2 0045                                 lltemp3 004D  
                  ??_ADCC_ThresholdISR 0056                 __end_of_start_adc_scan 73C6  
                         __mediumconst FE72                                 preinc2 003FDC  
                               tblptrh 003FF7                                 tblptrl 003FF6  
                               tblptru 003FF8                       __end_of_wdtdelay 7602  
                     __end_of_vfprintf 6C20                             _StartTimer 79B0  
        __size_of_INTERRUPT_Initialize 0066                __end_of_TMR5_Initialize 7860  
                    _SYSTEM_Initialize 77D4                             __accesstop 0060  
              __end_of__initialization 6958                              ?_INT0_ISR 0055  
                            ?_INT1_ISR 0055                   __end_of_display_help 822E  
                 __end_of_display_info 8226              __end_of_CLKREF_Initialize 81FC  
                        ___rparam_used 000000             __size_of_UART1_rx_vect_isr 0026  
                      _TMR5_WriteTimer 7970                  _set_temp_display_help 8196  
            __end_of_ADCC_ThresholdISR 72FC                 __end_of_ringBufS_flush 6F28  
                       __pcstackCOMRAM 0055                             ___inthi_sp 0F56  
                           ___intlo_sp 17AB                           __pidataBANK0 78EA  
                         __pidataBANK1 6A22                              ?_TMR5_ISR 0055  
                            ?_TMR6_ISR 0055                         ivt0x8_undefint 00AC  
                        __end_of_fputc 6296                          __end_of_fputs 6E00  
                        __end_of_srand 7AFC                  __end_of_TMR5_CallBack 7F5E  
                        __end_of_putch 80CA                __end_of_PWM8_Initialize 815A  
              __end_of_TMR6_Initialize 7C70                      _adc_int_t_handler 6E00  
               __end_of_PMD_Initialize 8184                             ??_ADCC_ISR 0055  
                __end_of_TMR6_CallBack 7FC4            __size_of_EXT_INT_Initialize 0034  
           __size_of_UART1_tx_vect_isr 0026                          _DMA1_DMAA_ISR 8208  
                       _clear_adc_scan 823E                 __size_of_mode_lamp_dim 0018  
             _UART2_RxInterruptHandler 0013              __end_of_SYSTEM_Initialize 781A  
                      __CFG_PR1WAY$OFF 000000                        __CFG_IVT1WAY$ON 000000  
                           __pbssBANK0 00A3                             __pbssBANK1 01AB  
                           __pbssBANK2 0200                             __pbssBANK3 0300  
                           __pbssBANK4 0400                             __pbssBANK5 0500  
                           __pbssBANK6 0600                             _check_help 52EE  
              __end_of_conv_raw_result 3B70                  _INT0_InterruptHandler 0019  
                           ??_INT0_ISR 0055                             ??_INT1_ISR 0055  
                    __end_of_TimerDone 7F3A                       _DMA1_DMADCNT_ISR 81FC  
           __size_of_UART2_rx_vect_isr 0026                                IVTBASEH 003FD6  
                              IVTBASEL 003FD5                                IVTBASEU 003FD7  
                   __size_of_lp_filter 01C0                  __end_of_wait_lcd_done 8094  
                      __CFG_PPS1WAY$ON 000000       __end_of_TMR6_SetInterruptHandler 7DB0  
              __end_of_ADCC_Initialize 7294                             ??_TMR5_ISR 00DF  
            __end_of_adc_int_t_handler 6E96                             ??_TMR6_ISR 00DE  
                              _ADFLTRH 003EE7                                _ADFLTRL 003EE6  
                              _DMA1DSA 003BF0                                _DMA2DSA 003BD0  
                              _DMA1DSZ 003BEE                                _DMA2DSZ 003BCE  
                              _DMA1SSA 003BF9                                _DMA2SSA 003BD9  
 __end_of_ADCC_SetADTIInterruptHandler 7E50  __size_of_ADCC_SetADTIInterruptHandler 0028  
         _ADCC_SetADTIInterruptHandler 7E28                                _DMA1SSZ 003BF7  
                              _DMA2SSZ 003BD7                                _ADSTPTH 003EE5  
                              _ADSTPTL 003EE4                      _UART1_Receive_ISR 803C  
                              _CLKRCLK 003CE6                                _CLKRCON 003CE5  
               __end_of_clear_adc_scan 8244                         ?_DMA1_DMAA_ISR 0055  
                     _DMA1_DMASCNT_ISR 81E4                                _U1ERRIE 003DFA  
                   __size_of_set_vterm 001C                                _U1ERRIR 003DF9  
                              _U2ERRIE 003DE2                                _U2ERRIR 003DE1  
                              _INT0PPS 003AC0                    __CFG_PWRTS$PWRT_OFF 000000  
                              _INT1PPS 003AC1                           ?_Default_ISR 0055  
           __size_of_UART2_tx_vect_isr 0026                                _U1RXPPS 003AE5  
                              _U2RXPPS 003AE8                                _OSCCON1 0039D9  
                              _OSCCON3 0039DB                                _IVTLOCK 003FD4  
                   __size_of_vfpfcnvrt 0B3E                                _SPI1CLK 003D1C  
                              _SPI1RXB 003D10                                _SPI1TXB 003D11  
                              _OSCTUNE 0039DE                                _PWM8DCH 003F61  
                              _PWM8DCL 003F60                                _PWM8CON 003F62  
                              _SLRCONA 003A43                                _SLRCONB 003A53  
                              _SLRCONC 003A63                                _SLRCOND 003A73  
                              _SLRCONE 003A83                                _SLRCONF 003A93  
                   __size_of_start_lcd 0006                __end_of_TMR5_WriteTimer 79B0  
    __size_of_INT0_SetInterruptHandler 0028             __size_of_CLKREF_Initialize 000A  
              __size_of_DMA1_DMAOR_ISR 000A                                __Hparam 0000  
           __size_of_ADCC_ThresholdISR 0068                          _mode_lamp_dim 80FE  
                              __Lparam 0000               __end_of_UART1_Initialize 742A  
                      __size_of_WaitMs 0036                        __size_of___flge 0162  
                      __size_of___fleq 00C4                                ___aodiv 4BBA  
                              ___fladd 25AC                                ___aomod 50AE  
                              ___fldiv 2D68                                ___awdiv 5EF6  
                              ___flneg 7700                                ___awmod 6296  
                              ___flmul 1D82                                ___flsub 7748  
                              ___fltol 5C22              __end_of_UART1_Receive_ISR 805A  
                      __size_of_efgtoa 1244                        __size_of_floorf 036C  
                 __end_of_init_display 67C4                                __pcinit 6898  
             __end_of_mode_lamp_bright 81C2                        __size_of_memset 02EC  
             __size_of_adc_int_handler 001E                    _eaDogM_WriteCommand 81A6  
                              __ramtop 2000            __size_of_UART1_Transmit_ISR 002C  
                              __ptext0 3F2A                                __ptext1 7362  
                              __ptext2 8184                                __ptext3 7AC8  
                              __ptext4 66DA                                __ptext5 7C70  
                              __ptext6 7C98                                __ptext7 7FC4  
                              __ptext8 7CC0                                __ptext9 81A6  
                    _UART2_Receive_ISR 805A                        __size_of_printf 0062  
                      __CFG_WRTAPP$OFF 000000                        __size_of_strcpy 00D4  
                      __size_of_strlen 00A2                  _OSCILLATOR_Initialize 815A  
                              us526999 4E24                           __size_of_abs 0046  
                              us537999 52DC                           __size_of_pad 0114  
                              _isalpha 78A6                                _isdigit 7B90  
                              us941999 3BF0                                us928999 490E  
                              _mode_sw 0028                                us859999 32FC  
                    __end_of_lp_filter 5A8C                                _islower 7B30  
                              _isspace 76AE                        __CFG_WRTSAF$OFF 000000  
                            _T5CONbits 003F9A               __end_of_UART2_Initialize 754C  
                              _isupper 7B60             __size_of_SYSTEM_Initialize 0046  
                              _sprintf 65D0                                _tolower 70C4  
                __size_of_display_help 0008                  __size_of_display_info 0008  
                              _strncmp 5704                                _toupper 7040  
                 end_of_initialization 6958              __size_of_convert_adc_data 007A  
  __end_of_UART1_SetTxInterruptHandler 7D60            _UART1_SetTxInterruptHandler 7D38  
                            i2u1000_48 7E8A    __end_of_UART2_SetRxInterruptHandler 7D38  
          _UART2_SetRxInterruptHandler 7D10                              i2u1002_48 7EB2  
                            i2u1004_48 7EDA                              i2u1006_48 7F02  
                    __end_of_set_vterm 80B0                      __end_of_vfpfcnvrt 1D82  
                            _SPI1TCNTL 003D12                                postdec0 003FED  
                              postdec1 003FE5                                postdec2 003FDD  
                              postinc0 003FEE                                postinc1 003FE6  
                              postinc2 003FDE             __size_of_adc_int_t_handler 0096  
                  __size_of_StartTimer 003C                      __end_of_start_lcd 8250  
            __end_of_UART2_Receive_ISR 8078                         wdtdelay@dcount 00CF  
                __CFG_WDTCPS$WDTCPS_31 000000                        ??_DMA1_DMAA_ISR 00DF  
                _INT1_InterruptHandler 0016                              _PORTBbits 003FCB  
             _TMR6_SetInterruptHandler 7D88                           _display_help 8226  
                _TMR5_InterruptHandler 00D3                           _display_info 821E  
 __size_of_UART2_SetTxInterruptHandler 0028                      __size_of_ADCC_ISR 0038  
  __end_of_ADCC_SetADIInterruptHandler 7E78            _ADCC_SetADIInterruptHandler 7E50  
                           _update_lcd 64C2                 __size_of_ringBufS_init 0028  
                     __CFG_FEXTOSC$ECH 000000                        _DMA1_Initialize 71C2  
                      _SPI1_Initialize 812E                  __end_of_get_vterm_ptr 7BEE  
                    __size_of_INT0_ISR 000E                      __size_of_INT1_ISR 000E  
                       __end_of_WaitMs 7A92           __end_of_INTERRUPT_Initialize 7362  
                           _vterm_dump 6044                         __end_of___flge 5EF6  
                       __end_of___fleq 6A22   __end_of_INT0_DefaultInterruptHandler 8258  
__size_of_INT0_DefaultInterruptHandler 0002           _INT0_DefaultInterruptHandler 8256  
           __size_of_UART1_Receive_ISR 001E                        _DMA2_Initialize 7602  
                       __end_of_efgtoa 1244                      __size_of_TMR5_ISR 005C  
                    __size_of_TMR6_ISR 001A                    __size_of_check_help 0212  
                       __end_of_floorf 4610            __size_of_UART2_Transmit_ISR 002C  
                           floorf@F524 00C7                         __end_of_memset 48FC  
                       __end_of_printf 74EE               __end_of_DMA1_DMADCNT_ISR 8206  
          __size_of_PWM8_LoadDutyValue 0042                  __end_of_INT0_CallBack 7F80  
                       __end_of_strcpy 6898                         __end_of_strlen 6D68  
                  start_initialization 6898   __end_of_TMR5_DefaultInterruptHandler 80E4  
__size_of_TMR5_DefaultInterruptHandler 001A           _TMR5_DefaultInterruptHandler 80CA  
      __size_of_PIN_MANAGER_Initialize 0090                            __end_of_abs 77D4  
                __end_of_INT1_CallBack 7FA2              __size_of_set_display_info 001E  
                          __end_of_pad 64C2                   __size_of_Default_ISR 0006  
                 __end_of_send_lcd_cmd 7CC0          __size_of_ADCC_StartConversion 0012  
                           ivt0x8_base 0008                          _uart1RxBuffer 0500  
                __end_of___fpclassifyf 5C22                          _uart2RxBuffer 0600  
                        _uart1TxBuffer 02AC               __end_of_DMA1_DMASCNT_ISR 81F2  
                        _uart2TxBuffer 0300                         _DMA1_DMAOR_ISR 8214  
                     __CFG_LPBOREN$OFF 000000                  __size_of_init_display 00EA  
          __size_of_eaDogM_WriteString 00A6                              _TimerDone 7F16  
                        _ringBufS_init 7CC0                            __pdataBANK0 0060  
                          __pdataBANK1 0100             __size_of_UART2_Receive_ISR 001E  
           __end_of_EXT_INT_Initialize 7B30                    __end_of_help_button 7A24  
      __end_of_eaDogM_WriteStringAtPos 7AC8                __end_of_DMA1_Initialize 722C  
                          __pbssCOMRAM 0001       __end_of_INT0_SetInterruptHandler 7E28  
                        __pcstackBANK0 00DE               __size_of_TMR2_Initialize 0018  
                    __size_of___xxtofl 0204                __end_of_SPI1_Initialize 8144  
             _UART1_RxInterruptHandler 000D               _UART2_TxInterruptHandler 0010  
                            __end_of_T FF03                       _convert_adc_data 7148  
            __size_of_ringBufS_put_dma 00AA                           _init_display 66DA  
               __end_of_DMA1_DMAOR_ISR 821E                 __size_of_TMR5_CallBack 0024  
                _TMR6_InterruptHandler 0001                 __size_of_TMR6_CallBack 0022  
              __end_of_DMA2_Initialize 765C                 _PIN_MANAGER_Initialize 6F28  
                 __end_of_wait_lcd_set 824A                          __pmediumconst FE72  
                            __ptext100 72FC                              __ptext101 8236  
                            __ptext110 7E50                              __ptext102 7AFC  
                            __ptext111 754C                              __ptext103 7DD8  
                            __ptext120 8258                              __ptext112 7970  
                            __ptext104 7E00                              __ptext121 8250  
                            __ptext113 7F3A                              __ptext105 7602  
                            __ptext130 803C                              __ptext122 7A24  
                            __ptext114 80CA                              __ptext106 71C2  
                            __ptext131 7EC8                              __ptext123 6E00  
                            __ptext115 81C4                              __ptext107 81F2  
                            __ptext140 8208                              __ptext132 7C1A  
                            __ptext124 825A                              __ptext116 7F5E  
                            __ptext108 722C                              __ptext141 8214  
                            __ptext133 7EF0                              __ptext125 801E  
                            __ptext117 8256                              __ptext109 7E28  
                            __ptext142 0000                              __ptext134 805A  
                            __ptext126 7294                              __ptext118 81D4  
                            __ptext135 80E4                              __ptext127 7E78  
                            __ptext119 7F80                              __ptext136 7FA2  
                            __ptext128 7BEE                              __ptext137 7860  
                            __ptext129 7EA0                              __ptext138 81E4  
                            __ptext139 81FC                     __end_of_StartTimer 79EC  
                    __size_of_wdtdelay 005A                      __size_of_vfprintf 00A8  
                             _ADCC_ISR 7A24                 __CFG_BBSIZE$BBSIZE_512 000000  
                             _DMA1CON0 003BFC                               _DMA1CON1 003BFD  
                             _DMA1AIRQ 003BFE                               _DMA2CON0 003BDC  
                             _DMA2CON1 003BDD                               _DMA2AIRQ 003BDE  
                             _DMA1SIRQ 003BFF                               _DMA2SIRQ 003BDF  
              __size_of_get_raw_result 001E                 __size_of_wait_lcd_done 001C  
                       __size_of_fputc 0124                               _T2CLKCON 003FAE  
                       __size_of_fputs 0098                              _lp_filter 58CC  
                       __size_of_srand 0034                         __size_of_putch 001A  
                 _INTERRUPT_Initialize 72FC                               _T6CLKCON 003F96  
                      ?_DMA1_DMAOR_ISR 0055                               _INT0_ISR 81C4  
                             _INT1_ISR 81D4                               _LATCbits 003FBC  
                             _LATDbits 003FBD                               _LATEbits 003FBE  
    __size_of_INT1_SetInterruptHandler 0028                               _IPR1bits 003981  
                             _IPR2bits 003982                               _PIE1bits 003991  
                             _IPR3bits 003983                               _PIE2bits 003992  
                             _IPR5bits 003985                               _PIE3bits 003993  
                            _tickCount 00A3                               _IPR6bits 003986  
                             _PIE5bits 003995                               _IPR8bits 003988  
                             _PIE6bits 003996                               _IPR9bits 003989  
                             _PIE8bits 003998                    __CFG_BORV$VBOR_2P45 000000  
                             _PIE9bits 003999                              _ring_buf1 0383  
                            _ring_buf2 0340                               i2u407_48 7A40  
                             i2u407_49 7A54                               _PIR1bits 0039A1  
                             _PIR2bits 0039A2                               _SPI1BAUD 003D19  
                             _PIR4bits 0039A4                               _SPI1CON0 003D14  
                             _SPI1CON1 003D15                               _SPI1CON2 003D16  
                             _PIR5bits 0039A5                               _PIR8bits 0039A8  
                             _PIR9bits 0039A9                               i2u828_48 72C8  
                             i2u828_49 72DC               __size_of_TMR5_Initialize 0046  
                            _set_vterm 8094                    __size_of_update_lcd 010E  
                          _help_button 79EC             __end_of_UART1_Transmit_ISR 7C1A  
                             _TMR5_ISR 754C                               _TMR6_ISR 80E4  
                            _port_data 0093                              _vfpfcnvrt 1244  
                         _SPI1INTFbits 003D1A                          _TMR5_CallBack 7F3A  
                           _ADCON0bits 003EF8                     __end_of_check_help 5500  
                            _start_lcd 824A                __size_of_FVR_Initialize 0008  
            __size_of_send_lcd_cmd_dma 0052                          _TMR6_CallBack 7FA2  
                __size_of_send_lcd_cmd 0028      __size_of_TMR5_SetInterruptHandler 0028  
                     _set_display_info 8000               __size_of_PWM8_Initialize 0016  
             __size_of_TMR6_Initialize 002A                            _INTCON0bits 003FD2  
                            copy_data0 68AC                              copy_data1 68CE  
             _INT0_SetInterruptHandler 7E00                    __size_of_vterm_dump 012E  
               _uart1TxBufferRemaining 0032    __end_of_UART2_SetTxInterruptHandler 7D10  
          _UART2_SetTxInterruptHandler 7CE8                               __Hparam0 0000  
                         _uart1RxCount 002F                           _uart2RxCount 0029  
                             __Lparam0 0000       __size_of_eaDogM_WriteStringAtPos 0036  
              __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_check_adc_scan 0008  
                   __CFG_BOREN$SBORDIS 000000               __size_of_conv_raw_result 040E  
                        _wait_lcd_done 8078                           _send_lcd_cmd 7C98  
                     __size_of___aodiv 0280                       __size_of___fladd 07BC  
                     __size_of___aomod 0240                        _adc_int_handler 801E  
                     __size_of___fldiv 057A                       __size_of___awdiv 014E  
                     __size_of___flneg 0048                       __size_of___awmod 0118  
                     __size_of___flmul 082A                       __size_of___flsub 0046  
                     __size_of___fltol 0172                  __end_of_DMA1_DMAA_ISR 8212  
                   ___fpclassifyf@F463 00CB   __size_of_UART1_SetRxInterruptHandler 0028  
                      lp_filter@smooth 026C                               ___xxtofl 5500  
                    ?_DMA1_DMADCNT_ISR 0055               __size_of_ADCC_Initialize 0068  
          __end_of_eaDogM_WriteCommand 81B4                       __size_of_isalpha 0044  
                     __size_of_isdigit 0030                               __pivt0x8 0008  
                     __size_of_islower 0030                       __size_of_isspace 0052  
                   ??_DMA1_DMADCNT_ISR 00DF                               __ptext10 7148  
                             __ptext11 58CC                               __ptext20 7BC0  
                             __ptext12 3762                               __ptext21 7A5C  
                             __ptext13 742A                               __ptext30 6E96  
                             __ptext22 64C2                               __ptext14 7FE2  
                             __ptext31 4610                               __ptext23 7A92  
                             __ptext15 5500                               __ptext40 48FC  
                             __ptext32 748C                               __ptext24 765C  
                             __ptext16 823E                               __ptext41 0000  
                             __ptext33 6B78                               __ptext25 8078  
                             __ptext17 52EE                               __ptext50 7700  
                             __ptext42 70C4                               __ptext34 1244  
                             __ptext26 75A8                               __ptext18 6044  
                             __ptext51 1D82                               __ptext43 7B60  
                             __ptext35 3B70                               __ptext27 6C20  
                             __ptext19 65D0                               __ptext60 4BBA  
                             __ptext52 5D94                               __ptext44 67C4  
                             __ptext36 7040                               __ptext28 8244  
                             __ptext61 6FB8                               __ptext53 695E  
                             __ptext45 42A4                               __ptext37 7B30  
                             __ptext29 824A                               __ptext70 7B90  
                             __ptext62 63AE                               __ptext54 2D68  
                             __ptext46 5A8C                               __ptext38 78A6  
                             __ptext71 8094                               __ptext63 6CC6  
                             __ptext55 6296                               __ptext47 5C22  
                             __ptext39 5704                               __ptext80 821E  
                             __ptext72 8196                               __ptext64 6D68  
                             __ptext56 5EF6                               __ptext48 7748  
                             __ptext81 8226                               __ptext73 8000  
                             __ptext65 6172                               __ptext57 32E2  
                             __ptext49 25AC                               __ptext90 7C46  
                             __ptext82 822E                               __ptext74 80FE  
                             __ptext66 80B0                               __ptext58 778E  
                             __ptext91 7D88                               __ptext83 77D4  
                             __ptext75 81B4                               __ptext67 6ACE  
                             __ptext59 50AE                               __ptext92 781A  
                             __ptext84 74EE                               __ptext76 792E  
                             __ptext68 4E3A                               __ptext93 7DB0  
                             __ptext85 7CE8                               __ptext77 79EC  
                             __ptext69 76AE                               __ptext94 8116  
                             __ptext86 7D10                               __ptext78 7F16  
                             __ptext95 812E                               __ptext87 73C6  
                             __ptext79 79B0                               __ptext96 8144  
                             __ptext88 7D38                               __ptext97 8170  
                             __ptext89 7D60                               __ptext98 6F28  
                             __ptext99 815A                       __size_of_isupper 0030  
                     __size_of_sprintf 010A                       __size_of_tolower 0084  
                     __size_of_strncmp 01C8                       __size_of_toupper 0084  
                     _ringBufS_put_dma 6ACE                          __size_of_atoi 0274  
                        __size_of_ctoa 0088                          __size_of_main 037A  
                        __size_of_dtoa 0480                          __size_of_nanf 0062  
                __size_of_wait_lcd_set 0006                          __size_of_stoa 02BE  
                        __size_of_xtoa 03BA                   __CFG_WDTCWS$WDTCWS_7 000000  
                    ?_DMA1_DMASCNT_ISR 0055                            _IVTLOCKbits 003FD4  
             __size_of_TMR5_WriteTimer 0040              _ADCC_ADI_InterruptHandler 0007  
                            stoa@F1166 008C                     ??_DMA1_DMASCNT_ISR 00DF  
         __end_of_ADCC_StartConversion 8196                               _spi_link 00BB  
                             _wdtdelay 75A8             __end_of_UART2_Transmit_ISR 7C46  
                             _vfprintf 6B78               __end_of_convert_adc_data 71C2  
           __end_of_PWM8_LoadDutyValue 7970   __end_of_INT1_DefaultInterruptHandler 825A  
__size_of_INT1_DefaultInterruptHandler 0002           _INT1_DefaultInterruptHandler 8258  
                        ??_Default_ISR 0055                            _uart1RxHead 0031  
               __size_of_get_vterm_ptr 002E                            _uart1TxHead 0034  
                          _uart2RxHead 002B                            _uart1RxTail 0030  
                       _get_raw_result 7FE2                            _uart2TxHead 002E  
                          _uart1TxTail 0033                            _uart2RxTail 002A  
                          _uart2TxTail 002D                           _wait_lcd_set 8244  
                   _EXT_INT_Initialize 7AFC   __end_of_TMR6_DefaultInterruptHandler 78A6  
__size_of_TMR6_DefaultInterruptHandler 0046           _TMR6_DefaultInterruptHandler 7860  
 __end_of_ADCC_DefaultInterruptHandler 825C  __size_of_ADCC_DefaultInterruptHandler 0002  
         _ADCC_DefaultInterruptHandler 825A                               intlevel1 0000  
                             intlevel2 0000                      _send_lcd_cmd_long 7C70  
       __size_of_set_temp_display_help 0010          __end_of_set_temp_display_help 81A6  
                    __CFG_CLKOUTEN$OFF 000000             __end_of_eaDogM_WriteString 6CC6  
                __end_of_mode_lamp_dim 8116                __end_of_adc_int_handler 803C  
               __size_of_INT0_CallBack 0022                             _SPI1SCKPPS 003ADE  
                           _SPI1SDIPPS 003ADF                 __size_of_INT1_CallBack 0022  
                   __end_of_update_lcd 65D0                 _uart2TxBufferRemaining 002C  
                       _FVR_Initialize 8236                 __end_of_get_raw_result 8000  
                     _send_lcd_cmd_dma 765C                 __size_of___fpclassifyf 0196  
                TMR5_ISR@CountCallBack 0024       __end_of_INT1_SetInterruptHandler 7E00  
            __size_of_UART1_Initialize 0064                       ??_DMA1_DMAOR_ISR 00DF  
             _UART1_TxInterruptHandler 000A              __end_of_send_lcd_cmd_long 7C98  
              __size_of_start_adc_scan 0064                    __end_of_Default_ISR 8256  
       __end_of_PIN_MANAGER_Initialize 6FB8              __size_of_mode_lamp_bright 000E  
                   __end_of_vterm_dump 6172                _eaDogM_WriteStringAtPos 7A92  
                        _get_vterm_ptr 7BC0                         _check_adc_scan 822E  
            __size_of_UART2_Initialize 005E  
